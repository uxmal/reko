// fn0C00_0000
// Return size: 0
void fn0C00_0000(segptr32 ds_bx)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	Mem8[ds_bx + 0<32>:word32] = Mem0[ds_bx + 4<i32>:word32]
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// Equivalence classes ////////////
Eq_1: (struct "Globals")
	globals_t (in globals : (ptr32 (struct "Globals")))
Eq_2: (segment "seg0C00_t" 0008)
	T_2 (in seg0C00 : selector)
Eq_3: (union (segptr32 u0) ((ptr32 Eq_10) u1))
	T_3 (in ds_bx : segptr32)
Eq_8: (union (segptr32 u0) ((ptr32 Eq_11) u1))
	T_8 (in ds_bx + 0<32> : word32)
Eq_10: (struct (0 word32 dw0000) (4 word32 dw0004))
	T_10
Eq_11: (struct (0 word32 dw0000) (4 word32 dw0004))
	T_11
// Type Variables ////////////
globals_t: (in globals : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in seg0C00 : selector)
  Class: Eq_2
  DataType: (ptr16 Eq_2)
  OrigDataType: (ptr16 (segment "seg0C00_t" 0008))
T_3: (in ds_bx : segptr32)
  Class: Eq_3
  DataType: Eq_3
  OrigDataType: (union (segptr32 u0) ((ptr32 Eq_10) u1))
T_4: (in 4<i32> : int32)
  Class: Eq_4
  DataType: int32
  OrigDataType: int32
T_5: (in ds_bx + 4<i32> : segptr32)
  Class: Eq_5
  DataType: segptr32
  OrigDataType: segptr32
T_6: (in Mem0[ds_bx + 4<i32>:word32] : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_7: (in 0<32> : word32)
  Class: Eq_7
  DataType: word32
  OrigDataType: word32
T_8: (in ds_bx + 0<32> : word32)
  Class: Eq_8
  DataType: Eq_8
  OrigDataType: (union (segptr32 u0) ((ptr32 Eq_11) u1))
T_9: (in Mem8[ds_bx + 0<32>:word32] : word32)
  Class: Eq_6
  DataType: word32
  OrigDataType: word32
T_10:
  Class: Eq_10
  DataType: Eq_10
  OrigDataType: 
T_11:
  Class: Eq_11
  DataType: Eq_11
  OrigDataType: 
