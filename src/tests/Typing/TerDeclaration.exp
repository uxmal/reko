// Before ///////
// proc1
// Return size: 0
void proc1()
proc1_entry:
	// succ:  l1
l1:
	word16 ax = rand()
	Mem1[0x0300:word16] = ax
	return
	// succ:  proc1_exit
proc1_exit:

// After ///////
// proc1
// Return size: 0
void proc1()
proc1_entry:
	// succ:  l1
l1:
	int16 ax = rand()
	Mem1[0x0300:word16] = ax
	return
	// succ:  proc1_exit
proc1_exit:

// Equivalence classes ////////////
Eq_1: (struct "Eq_1" (300 int16 w0300))
	globals_t (in globals : (ptr (struct "Globals")))
Eq_3: (fn int16 ())
	T_3 (in rand : ptr32)
	T_4 (in signature of rand : void)
// Type Variables ////////////
globals_t: (in globals : (ptr (struct "Globals")))
  Class: Eq_1
  DataType: (ptr Eq_1)
  OrigDataType: (ptr (struct (300 T_7 t0300)))
T_2: (in ax : int16)
  Class: Eq_2
  DataType: int16
  OrigDataType: word16
T_3: (in rand : ptr32)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: (ptr (fn T_5 ()))
T_4: (in signature of rand : void)
  Class: Eq_3
  DataType: (ptr Eq_3)
  OrigDataType: 
T_5: (in rand() : int16)
  Class: Eq_2
  DataType: int16
  OrigDataType: int16
T_6: (in 0x0300 : word16)
  Class: Eq_6
  DataType: (ptr int16)
  OrigDataType: (ptr (struct (0 T_7 t0000)))
T_7: (in Mem1[0x0300:word16] : word16)
  Class: Eq_2
  DataType: int16
  OrigDataType: word16
