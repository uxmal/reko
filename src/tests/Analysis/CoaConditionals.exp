fp:fp
sp_2: orig: sp
Top_3: orig: Top
ds:ds
    def:  def ds
    uses: Mem9[ds:0x0F00:byte] = 0x01
          v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
          Mem14[ds:0x0106:word16] = v7_13
          Mem17[ds:0x0F01:byte] = 0x01
          Mem25[ds:0x0F02:byte] = 0x01
          Mem32[ds:0x0F03:byte] = 0x01
          Mem49[ds:0x0F04:byte] = 0x01
          Mem55[ds:0x0F05:byte] = 0x01
          Mem75[ds:0x0F07:byte] = 0x01
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
          branch (Mem51[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
          branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
Mem0:Mem
    def:  def Mem0
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          Mem11 = PHI((Mem0, l0C00_0000), (Mem9, l0C00_000A))
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
ax_6: orig: ax
SCZO_7: orig: SCZO
Z_8: orig: Z
Mem9: orig: Mem0
    def:  Mem9[ds:0x0F00:byte] = 0x01
    uses: Mem11 = PHI((Mem0, l0C00_0000), (Mem9, l0C00_000A))
Mem11: orig: Mem0
    def:  Mem11 = PHI((Mem0, l0C00_0000), (Mem9, l0C00_000A))
    uses: v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
          v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
ax_12: orig: ax
v7_13: orig: v7
    def:  v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
    uses: Mem14[ds:0x0106:word16] = v7_13
          branch v7_13 <= 0x0000 l0C00_001E
Mem14: orig: Mem0
    def:  Mem14[ds:0x0106:word16] = v7_13
    uses: Mem19 = PHI((Mem14, l0C00_000F), (Mem17, l0C00_0019))
SCZO_15: orig: SCZO
SZO_16: orig: SZO
Mem17: orig: Mem0
    def:  Mem17[ds:0x0F01:byte] = 0x01
    uses: Mem19 = PHI((Mem14, l0C00_000F), (Mem17, l0C00_0019))
Mem19: orig: Mem0
    def:  Mem19 = PHI((Mem14, l0C00_000F), (Mem17, l0C00_0019))
    uses: Mem27 = PHI((Mem19, l0C00_001E), (Mem25, l0C00_0028))
          branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
ax_20: orig: ax
ax_21: orig: ax
SZO_22: orig: SZO
C_23: orig: C
Z_24: orig: Z
Mem25: orig: Mem0
    def:  Mem25[ds:0x0F02:byte] = 0x01
    uses: Mem27 = PHI((Mem19, l0C00_001E), (Mem25, l0C00_0028))
Mem27: orig: Mem0
    def:  Mem27 = PHI((Mem19, l0C00_001E), (Mem25, l0C00_0028))
    uses: branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
          branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
ax_28: orig: ax
SCZO_29: orig: SCZO
C_30: orig: C
C_31: orig: C
Mem32: orig: Mem0
    def:  Mem32[ds:0x0F03:byte] = 0x01
sp_37: orig: sp
ss:ss
    def:  def ss
    uses: Mem68[ss:bp - 0x000A:byte] = 0x01
Mem43: orig: Mem0
    uses: Mem51 = PHI((Mem43, l0C00_003D), (Mem49, l0C00_0044))
S_44: orig: S
C_45: orig: C
Z_46: orig: Z
O_47: orig: O
Mem49: orig: Mem0
    def:  Mem49[ds:0x0F04:byte] = 0x01
    uses: Mem51 = PHI((Mem43, l0C00_003D), (Mem49, l0C00_0044))
S_87: orig: S
Mem51: orig: Mem0
    def:  Mem51 = PHI((Mem43, l0C00_003D), (Mem49, l0C00_0044))
    uses: branch (Mem51[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
SZO_52: orig: SZO
C_53: orig: C
Z_54: orig: Z
Mem55: orig: Mem0
    def:  Mem55[ds:0x0F05:byte] = 0x01
C_84: orig: C
bp:bp
    def:  def bp
    uses: Mem68[ss:bp - 0x000A:byte] = 0x01
          branch bp < 0x0010 l0C00_005F
          branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
bp_63: orig: bp
SCZO_64: orig: SCZO
SO_65: orig: SO
Mem68: orig: Mem0
    def:  Mem68[ss:bp - 0x000A:byte] = 0x01
bp_70: orig: bp
SCZO_71: orig: SCZO
O_72: orig: O
wLoc02_76: orig: wLoc02
Mem75: orig: Mem0
    def:  Mem75[ds:0x0F07:byte] = 0x01
Z_101: orig: Z
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bp, selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	def ss
	def bp
	// succ:  l0C00_0000
l0C00_0000:
	branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
	// succ:  l0C00_000A l0C00_000F
l0C00_000A:
	Mem9[ds:0x0F00:byte] = 0x01
	// succ:  l0C00_000F
l0C00_000F:
	Mem11 = PHI((Mem0, l0C00_0000), (Mem9, l0C00_000A))
	v7_13 = Mem11[ds:0x0106:word16] - Mem11[ds:0x0104:word16]
	Mem14[ds:0x0106:word16] = v7_13
	branch v7_13 <= 0x0000 l0C00_001E
	// succ:  l0C00_0019 l0C00_001E
l0C00_0019:
	Mem17[ds:0x0F01:byte] = 0x01
	// succ:  l0C00_001E
l0C00_001E:
	Mem19 = PHI((Mem14, l0C00_000F), (Mem17, l0C00_0019))
	branch (Mem19[ds:0x0106:word16] & Mem19[ds:0x0108:word16]) == 0x0000 l0C00_002D
	// succ:  l0C00_0028 l0C00_002D
l0C00_0028:
	Mem25[ds:0x0F02:byte] = 0x01
	// succ:  l0C00_002D
l0C00_002D:
	Mem27 = PHI((Mem19, l0C00_001E), (Mem25, l0C00_0028))
	branch Mem27[ds:0x010A:word16] >=u Mem27[ds:0x010C:word16] l0C00_003D
	// succ:  l0C00_0038 l0C00_003D
l0C00_0038:
	Mem32[ds:0x0F03:byte] = 0x01
	// succ:  l0C00_003D
l0C00_003D:
	branch fn0C00_0069(0x0003) l0C00_0049
	// succ:  l0C00_0044 l0C00_0049
l0C00_0044:
	Mem49[ds:0x0F04:byte] = 0x01
	// succ:  l0C00_0049
l0C00_0049:
	Mem51 = PHI((Mem43, l0C00_003D), (Mem49, l0C00_0044))
	branch (Mem51[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
	// succ:  l0C00_0051 l0C00_0056
l0C00_0051:
	Mem55[ds:0x0F05:byte] = 0x01
	// succ:  l0C00_0056
l0C00_0056:
	branch bp < 0x0010 l0C00_005F
	// succ:  l0C00_005B l0C00_005F
l0C00_005B:
	Mem68[ss:bp - 0x000A:byte] = 0x01
	// succ:  l0C00_005F
l0C00_005F:
	branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
	// succ:  l0C00_0063 l0C00_0068
l0C00_0063:
	Mem75[ds:0x0F07:byte] = 0x01
	// succ:  l0C00_0068
l0C00_0068:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_2: orig: sp
Top_3: orig: Top
sp_4: orig: sp
bp:bp
ss:ss
Mem7: orig: Mem0
bp_8: orig: bp
SCZO_9: orig: SCZO
bp_10: orig: bp
sp_11: orig: sp
wLoc02_12: orig: wLoc02
wArg02:Stack +0002
    def:  def wArg02
    uses: return SLICE(cond(wArg02), bool, 1)
C_14: orig: C
O_15: orig: O
S_16: orig: S
Z_17: orig: Z
// fn0C00_0069
// Return size: 0
bool fn0C00_0069(word16 wArg02)
fn0C00_0069_entry:
	def wArg02
	// succ:  l0C00_0069
l0C00_0069:
	return SLICE(cond(wArg02), bool, 1)
	// succ:  fn0C00_0069_exit
fn0C00_0069_exit:

