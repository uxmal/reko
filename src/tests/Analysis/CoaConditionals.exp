fp:fp
sp_1: orig: sp
ds:ds
    def:  def ds
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          v7_12 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          v7_12 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          Mem13[ds:0x0106:word16] = v7_12
          branch (Mem13[ds:0x0106:word16] & Mem13[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem13[ds:0x0106:word16] & Mem13[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch Mem13[ds:0x010A:word16] >=u Mem13[ds:0x010C:word16] l0C00_003D
          Mem63[ds:0x0F07:byte] = 0x01
          Mem66[ds:0x0F05:byte] = 0x01
          Mem67[ds:0x0F04:byte] = 0x01
          Mem68[ds:0x0F03:byte] = 0x01
          Mem69[ds:0x0F02:byte] = 0x01
          Mem70[ds:0x0F01:byte] = 0x01
          Mem71[ds:0x0F00:byte] = 0x01
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          branch Mem13[ds:0x010A:word16] >=u Mem13[ds:0x010C:word16] l0C00_003D
          branch (Mem13[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
Mem0:Global memory
    def:  def Mem0
    uses: branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
          v7_12 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          v7_12 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
          branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
ax_4: orig: ax
SCZO_5: orig: SCZO
Z_6: orig: Z
SZO_7: orig: SZO
SO_8: orig: SO
C_9: orig: C
O_10: orig: O
ax_11: orig: ax
v7_12: orig: v7
    def:  v7_12 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
    uses: Mem13[ds:0x0106:word16] = v7_12
          branch v7_12 <= 0x0000 l0C00_001E
Mem13: orig: Mem0
    def:  Mem13[ds:0x0106:word16] = v7_12
    uses: branch (Mem13[ds:0x0106:word16] & Mem13[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch (Mem13[ds:0x0106:word16] & Mem13[ds:0x0108:word16]) == 0x0000 l0C00_002D
          branch Mem13[ds:0x010A:word16] >=u Mem13[ds:0x010C:word16] l0C00_003D
          branch Mem13[ds:0x010A:word16] >=u Mem13[ds:0x010C:word16] l0C00_003D
          branch (Mem13[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
SCZO_14: orig: SCZO
Z_15: orig: Z
SZO_16: orig: SZO
SO_17: orig: SO
C_18: orig: C
O_19: orig: O
ax_20: orig: ax
ax_21: orig: ax
SZO_22: orig: SZO
Z_23: orig: Z
SO_24: orig: SO
O_25: orig: O
C_26: orig: C
SCZO_27: orig: SCZO
ax_28: orig: ax
SCZO_29: orig: SCZO
Z_30: orig: Z
SZO_31: orig: SZO
SO_32: orig: SO
C_33: orig: C
O_34: orig: O
C_35: orig: C
SCZO_36: orig: SCZO
v10_37: orig: v10
sp_38: orig: sp
wLoc02_39: orig: wLoc02
C_40: orig: C
SCZO_41: orig: SCZO
SZO_42: orig: SZO
Z_43: orig: Z
SO_44: orig: SO
O_45: orig: O
C_46: orig: C
SCZO_47: orig: SCZO
bp:bp
    def:  def bp
    uses: branch bp < 0x0010 l0C00_005F
          branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
          Mem64[ss:bp - 0x000A:byte] = 0x01
          Mem64[ss:bp - 0x000A:byte] = 0x01
bp_49: orig: bp
SCZO_50: orig: SCZO
Z_51: orig: Z
SZO_52: orig: SZO
SO_53: orig: SO
C_54: orig: C
O_55: orig: O
bp_56: orig: bp
SCZO_57: orig: SCZO
Z_58: orig: Z
SZO_59: orig: SZO
SO_60: orig: SO
C_61: orig: C
O_62: orig: O
Mem63: orig: Mem0
    def:  Mem63[ds:0x0F07:byte] = 0x01
Mem64: orig: Mem0
    def:  Mem64[ss:bp - 0x000A:byte] = 0x01
ss:ss
    def:  def ss
    uses: Mem64[ss:bp - 0x000A:byte] = 0x01
Mem66: orig: Mem0
    def:  Mem66[ds:0x0F05:byte] = 0x01
Mem67: orig: Mem0
    def:  Mem67[ds:0x0F04:byte] = 0x01
Mem68: orig: Mem0
    def:  Mem68[ds:0x0F03:byte] = 0x01
Mem69: orig: Mem0
    def:  Mem69[ds:0x0F02:byte] = 0x01
Mem70: orig: Mem0
    def:  Mem70[ds:0x0F01:byte] = 0x01
Mem71: orig: Mem0
    def:  Mem71[ds:0x0F00:byte] = 0x01
// fn0C00_0000
// Return size: 0
void fn0C00_0000(word16 bp, selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	def bp
	def ss
	// succ:  l0C00_0000
l0C00_0000:
	branch Mem0[ds:0x0102:word16] == Mem0[ds:0x0100:word16] l0C00_000F
	// succ:  l0C00_000A l0C00_000F
l0C00_000A:
	Mem71[ds:0x0F00:byte] = 0x01
	// succ:  l0C00_000F
l0C00_000F:
	v7_12 = Mem0[ds:0x0106:word16] - Mem0[ds:0x0104:word16]
	Mem13[ds:0x0106:word16] = v7_12
	branch v7_12 <= 0x0000 l0C00_001E
	// succ:  l0C00_0019 l0C00_001E
l0C00_0019:
	Mem70[ds:0x0F01:byte] = 0x01
	// succ:  l0C00_001E
l0C00_001E:
	branch (Mem13[ds:0x0106:word16] & Mem13[ds:0x0108:word16]) == 0x0000 l0C00_002D
	// succ:  l0C00_0028 l0C00_002D
l0C00_0028:
	Mem69[ds:0x0F02:byte] = 0x01
	// succ:  l0C00_002D
l0C00_002D:
	branch Mem13[ds:0x010A:word16] >=u Mem13[ds:0x010C:word16] l0C00_003D
	// succ:  l0C00_0038 l0C00_003D
l0C00_0038:
	Mem68[ds:0x0F03:byte] = 0x01
	// succ:  l0C00_003D
l0C00_003D:
	branch fn0C00_0069(0x0003) l0C00_0049
	// succ:  l0C00_0044 l0C00_0049
l0C00_0044:
	Mem67[ds:0x0F04:byte] = 0x01
	// succ:  l0C00_0049
l0C00_0049:
	branch (Mem13[ds:0x010E:word16] & 0x01FF) == 0x0000 l0C00_0056
	// succ:  l0C00_0051 l0C00_0056
l0C00_0051:
	Mem66[ds:0x0F05:byte] = 0x01
	// succ:  l0C00_0056
l0C00_0056:
	branch bp < 0x0010 l0C00_005F
	// succ:  l0C00_005B l0C00_005F
l0C00_005B:
	Mem64[ss:bp - 0x000A:byte] = 0x01
	// succ:  l0C00_005F
l0C00_005F:
	branch !OVERFLOW((bp - 0x0010) * 0x0002) l0C00_0068
	// succ:  l0C00_0063 l0C00_0068
l0C00_0063:
	Mem63[ds:0x0F07:byte] = 0x01
	// succ:  l0C00_0068
l0C00_0068:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_1: orig: sp
bp:bp
v4_3: orig: v4
sp_4: orig: sp
wLoc02_5: orig: wLoc02
bp_6: orig: bp
wArg02:Stack +0002
    def:  def wArg02
    uses: return cond(wArg02)
SCZO_8: orig: SCZO
C_9: orig: C
bp_10: orig: bp
sp_11: orig: sp
// fn0C00_0069
// Return size: 0
bool fn0C00_0069(word16 wArg02)
fn0C00_0069_entry:
	def wArg02
	// succ:  l0C00_0069
l0C00_0069:
	return cond(wArg02)
	// succ:  fn0C00_0069_exit
fn0C00_0069_exit:

