Register word32 fn10000000(Stack word32 dwArg04)
// MayUse:  Stack +0004:[0..31]
// DataTypes: 
//   Stack +0004: int32
// LiveOut: eax
// Trashed: SCZO eax Top
// Preserved: edi esi esp
// fn10000000
// Return size: 0
// Mem0:Mem
// fp:fp
// esp:esp
// esi:esi
// SCZO:SCZO
// SZO:SZO
// eax:eax
// edi:edi
// Top:Top
// dwLoc04:Local -0004
// dwArg04:Stack +0004
// dwLoc08:Local -0008
// dwLoc0C:Local -000C
// S:S
// C:C
// Z:Z
// O:O
// dwLoc10:Local -0010
// return address size: 4
word32 fn10000000(word32 dwArg04)
fn10000000_entry:
	def dwArg04
	// succ:  l10000000
l10000000:
	branch dwArg04 > 1<32> l10000011
	// succ:  l1000000A l10000011
l1000000A:
	eax_37 = 1<32>
	return eax_37
	// succ:  fn10000000_exit
l10000011:
	eax_17 = fn10000000(dwArg04 - 2<i32>)
	eax_26 = fn10000000(dwArg04 - 1<32>)
	eax_31 = eax_26 + eax_17
	return eax_31
	// succ:  fn10000000_exit
fn10000000_exit:
