// void fn0C00_0000(Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: sp
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	Mem4[ds:0x0064:word16] = fn0C00_000B(0x0005)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// Register word16 fn0C00_000B(Register word16 cx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  cx
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: si sp
// fn0C00_000B
// Return size: 0
word16 fn0C00_000B(word16 cx)
fn0C00_000B_entry:
	// succ:  l0C00_000B
l0C00_000B:
	word16 ax_12
	branch cx <= 0x0001 l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	ax_12 = (word16) (cx *s fn0C00_000B(cx - 0x0001)) (alias)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_12 = 0x0001
	// succ:  l0C00_001F
l0C00_001F:
	return ax_12
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:

