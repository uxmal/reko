= fn0C00_0000 ========================
fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
Top_3: orig: Top
    def:  Top_3 = 0
si:si
    def:  def si
    uses: bx_5 = si
          si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
bx_5: orig: bx
    def:  bx_5 = si
    uses: ax_27 = ax_25 - bx_5
si_7: orig: si
    def:  si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
    uses: ax_9 = Mem8[ds:si_7:word16]
          si_10 = si_7 + 0x0002
Mem8: orig: Mem0
    def:  Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
    uses: ax_9 = Mem8[ds:si_7:word16]
ax_9: orig: ax
    def:  ax_9 = Mem8[ds:si_7:word16]
    uses: SCZO_11 = cond(ax_9 - 0x0020)
          Mem14[ds:di:word16] = ax_9
          ax_15 = ax_9 | ax_9
          ax_15 = ax_9 | ax_9
          branch ax_9 != 0x0020 l0C00_0005
si_10: orig: si
    def:  si_10 = si_7 + 0x0002
    uses: ax_25 = si_10
          si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
          si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(ax_9 - 0x0020)
    uses: Z_12 = SLICE(SCZO_11, bool, 2) (alias)
Z_12: orig: Z
    def:  Z_12 = SLICE(SCZO_11, bool, 2) (alias)
Mem14: orig: Mem0
    def:  Mem14[ds:di:word16] = ax_9
    uses: v12_21 = Mem14[ds:0x0302:word16] + 0x0001
          Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
ax_15: orig: ax
    def:  ax_15 = ax_9 | ax_9
    uses: SZO_16 = cond(ax_15)
          SCZO_19 = cond(ax_15 - 0x000D)
          branch ax_15 != 0x0000 l0C00_0011
          branch ax_15 != 0x000D l0C00_001A
SZO_16: orig: SZO
    def:  SZO_16 = cond(ax_15)
    uses: Z_18 = SLICE(SZO_16, bool, 2) (alias)
C_17: orig: C
    def:  C_17 = false
Z_18: orig: Z
    def:  Z_18 = SLICE(SZO_16, bool, 2) (alias)
SCZO_19: orig: SCZO
    def:  SCZO_19 = cond(ax_15 - 0x000D)
    uses: Z_20 = SLICE(SCZO_19, bool, 2) (alias)
Z_20: orig: Z
    def:  Z_20 = SLICE(SCZO_19, bool, 2) (alias)
v12_21: orig: v12
    def:  v12_21 = Mem14[ds:0x0302:word16] + 0x0001
    uses: Mem22[ds:0x0302:word16] = v12_21
          SZO_23 = cond(v12_21)
Mem22: orig: Mem0
    def:  Mem22[ds:0x0302:word16] = v12_21
    uses: Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
SZO_23: orig: SZO
    def:  SZO_23 = cond(v12_21)
ax_24: orig: ax
    def:  ax_24 = 0xFFFF
    uses: ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
ax_25: orig: ax
    def:  ax_25 = si_10
    uses: ax_27 = ax_25 - bx_5
ax_27: orig: ax
    def:  ax_27 = ax_25 - bx_5
    uses: SCZO_28 = cond(ax_27)
          ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
SCZO_28: orig: SCZO
    def:  SCZO_28 = cond(ax_27)
ax_29: orig: ax
    def:  ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
    uses: Mem31[ds:0x0300:word16] = ax_29
Mem31: orig: Mem0
    def:  Mem31[ds:0x0300:word16] = ax_29
ds:ds
    def:  def ds
    uses: ax_9 = Mem8[ds:si_7:word16]
          Mem14[ds:di:word16] = ax_9
          v12_21 = Mem14[ds:0x0302:word16] + 0x0001
          Mem22[ds:0x0302:word16] = v12_21
          Mem31[ds:0x0300:word16] = ax_29
Mem0:Mem
    def:  def Mem0
    uses: Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
di:di
    def:  def di
    uses: Mem14[ds:di:word16] = ax_9
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def si
	def ds
	def Mem0
	def di
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0
	bx_5 = si
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem14[ds:di:word16] = ax_9
	ax_15 = ax_9 | ax_9
	SZO_16 = cond(ax_15)
	Z_18 = SLICE(SZO_16, bool, 2) (alias)
	C_17 = false
	branch ax_15 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_24 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	SCZO_19 = cond(ax_15 - 0x000D)
	Z_20 = SLICE(SCZO_19, bool, 2) (alias)
	branch ax_15 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	v12_21 = Mem14[ds:0x0302:word16] + 0x0001
	Mem22[ds:0x0302:word16] = v12_21
	SZO_23 = cond(v12_21)
	// succ:  l0C00_001A
l0C00_001A:
	Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
	si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
	ax_9 = Mem8[ds:si_7:word16]
	si_10 = si_7 + 0x0002
	SCZO_11 = cond(ax_9 - 0x0020)
	Z_12 = SLICE(SCZO_11, bool, 2) (alias)
	branch ax_9 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_25 = si_10
	ax_27 = ax_25 - bx_5
	SCZO_28 = cond(ax_27)
	// succ:  l0C00_0024
l0C00_0024:
	ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
	Mem31[ds:0x0300:word16] = ax_29
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
Top_3: orig: Top
    def:  Top_3 = 0
si:si
    def:  def si
    uses: bx_5 = si
          ax_27 = si_10 - si
          si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
bx_5: orig: bx
    def:  bx_5 = si
si_7: orig: si
    def:  si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
    uses: ax_9 = Mem8[ds:si_7:word16]
          si_10 = si_7 + 0x0002
Mem8: orig: Mem0
    def:  Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
    uses: ax_9 = Mem8[ds:si_7:word16]
ax_9: orig: ax
    def:  ax_9 = Mem8[ds:si_7:word16]
    uses: SCZO_11 = cond(ax_9 - 0x0020)
          Mem14[ds:di:word16] = ax_9
          ax_15 = ax_9
          branch ax_9 != 0x0020 l0C00_0005
          SZO_16 = cond(ax_9)
          branch ax_9 != 0x0000 l0C00_0011
          SCZO_19 = cond(ax_9 - 0x000D)
          branch ax_9 != 0x000D l0C00_001A
si_10: orig: si
    def:  si_10 = si_7 + 0x0002
    uses: ax_25 = si_10
          ax_27 = si_10 - si
          si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
          si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
SCZO_11: orig: SCZO
    def:  SCZO_11 = cond(ax_9 - 0x0020)
    uses: Z_12 = SLICE(SCZO_11, bool, 2) (alias)
Z_12: orig: Z
    def:  Z_12 = SLICE(SCZO_11, bool, 2) (alias)
Mem14: orig: Mem0
    def:  Mem14[ds:di:word16] = ax_9
    uses: v12_21 = Mem14[ds:0x0302:word16] + 0x0001
          Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
ax_15: orig: ax
    def:  ax_15 = ax_9
SZO_16: orig: SZO
    def:  SZO_16 = cond(ax_9)
    uses: Z_18 = SLICE(SZO_16, bool, 2) (alias)
C_17: orig: C
    def:  C_17 = false
Z_18: orig: Z
    def:  Z_18 = SLICE(SZO_16, bool, 2) (alias)
SCZO_19: orig: SCZO
    def:  SCZO_19 = cond(ax_9 - 0x000D)
    uses: Z_20 = SLICE(SCZO_19, bool, 2) (alias)
Z_20: orig: Z
    def:  Z_20 = SLICE(SCZO_19, bool, 2) (alias)
v12_21: orig: v12
    def:  v12_21 = Mem14[ds:0x0302:word16] + 0x0001
    uses: Mem22[ds:0x0302:word16] = v12_21
          SZO_23 = cond(v12_21)
Mem22: orig: Mem0
    def:  Mem22[ds:0x0302:word16] = v12_21
    uses: Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
SZO_23: orig: SZO
    def:  SZO_23 = cond(v12_21)
ax_24: orig: ax
    def:  ax_24 = 0xFFFF
    uses: ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
ax_25: orig: ax
    def:  ax_25 = si_10
ax_27: orig: ax
    def:  ax_27 = si_10 - si
    uses: SCZO_28 = cond(ax_27)
          ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
SCZO_28: orig: SCZO
    def:  SCZO_28 = cond(ax_27)
ax_29: orig: ax
    def:  ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
    uses: Mem31[ds:0x0300:word16] = ax_29
Mem31: orig: Mem0
    def:  Mem31[ds:0x0300:word16] = ax_29
ds:ds
    def:  def ds
    uses: ax_9 = Mem8[ds:si_7:word16]
          Mem14[ds:di:word16] = ax_9
          v12_21 = Mem14[ds:0x0302:word16] + 0x0001
          Mem22[ds:0x0302:word16] = v12_21
          Mem31[ds:0x0300:word16] = ax_29
Mem0:Mem
    def:  def Mem0
    uses: Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
di:di
    def:  def di
    uses: Mem14[ds:di:word16] = ax_9
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def si
	def ds
	def Mem0
	def di
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0
	bx_5 = si
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem14[ds:di:word16] = ax_9
	ax_15 = ax_9
	SZO_16 = cond(ax_9)
	Z_18 = SLICE(SZO_16, bool, 2) (alias)
	C_17 = false
	branch ax_9 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_24 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	SCZO_19 = cond(ax_9 - 0x000D)
	Z_20 = SLICE(SCZO_19, bool, 2) (alias)
	branch ax_9 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	v12_21 = Mem14[ds:0x0302:word16] + 0x0001
	Mem22[ds:0x0302:word16] = v12_21
	SZO_23 = cond(v12_21)
	// succ:  l0C00_001A
l0C00_001A:
	Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
	si_7 = PHI((si, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
	ax_9 = Mem8[ds:si_7:word16]
	si_10 = si_7 + 0x0002
	SCZO_11 = cond(ax_9 - 0x0020)
	Z_12 = SLICE(SCZO_11, bool, 2) (alias)
	branch ax_9 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_25 = si_10
	ax_27 = si_10 - si
	SCZO_28 = cond(ax_27)
	// succ:  l0C00_0024
l0C00_0024:
	ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
	Mem31[ds:0x0300:word16] = ax_29
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
