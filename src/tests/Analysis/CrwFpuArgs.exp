void fn0C00_0000(Register selector ds)
// MayUse:  ds:[0..15]
// DataTypes: 
//   ds: (ptr16 (segment (300 T_2 t0300) (304 T_6 t0304) (308 T_14 t0308) (30C T_12 t030C)))
// LiveOut:
// Trashed: SCZO ax bx FPU -1 FPU -2 Top
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// ds:ds
// Top:Top
// ss:ss
// ax:ax
// SCZO:SCZO
// bx:bx
// rRet0:rRet0
// rLoc1:FPU -1
// rLoc2:FPU -2
// wLoc02:Local -0002
// wLoc04:Local -0004
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	rLoc1_30 = CONVERT(Mem0[ds:0x300<16>:real32], real32, real64)
	rLoc2_31 = CONVERT(Mem0[ds:0x304<16>:real32], real32, real64)
	fn0C00_0024(ds, 0x308<16>, rLoc2_31, rLoc1_30)
	Mem17[ds:0x30C<16>:real32] = 0.0F
	ax_19 = Mem17[ds:0x308<16>:word16]
	rRet0_23 = fn0C00_0031(ds, ax_19)
	Mem26[ds:0x30C<16>:real32] = CONVERT(rRet0_23, word64, real32)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
void fn0C00_0024(Register selector ds, Stack word16 wArg02, FpuStack real64 rArg0, FpuStack real64 rArg1)
// MayUse:  ds:[0..15] FPU +0:[0..63] FPU +1:[0..63] Stack +0002:[0..15]
// DataTypes: 
//   ds: (ptr16 (segment))
//   FPU +0: real64
//   FPU +1: real64
//   Stack +0002: (memptr T_4 (struct (0 T_3 t0000) (4 T_8 t0004)))
// LiveOut:
// Trashed: bx Top
// Preserved: bp sp
// fn0C00_0024
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// bp:bp
// ss:ss
// bx:bx
// Top:Top
// ds:ds
// wLoc02:Local -0002
// wArg02:Stack +0002
// rArg0:FPU +0
// rArg1:FPU +1
// return address size: 2
void fn0C00_0024(selector ds, word16 wArg02, real64 rArg0, real64 rArg1)
fn0C00_0024_entry:
	def ds
	def wArg02
	def rArg0
	def rArg1
	// succ:  l0C00_0024
l0C00_0024:
	Mem12[ds:wArg02:real32] = CONVERT(rArg0, real64, real32)
	Mem14[ds:wArg02 + 4<i16>:real32] = CONVERT(rArg1, real64, real32)
	return
	// succ:  fn0C00_0024_exit
fn0C00_0024_exit:
FpuStack real64 fn0C00_0031(Register selector ds, Stack word16 wArg02)
// MayUse:  ds:[0..15] Stack +0002:[0..15]
// DataTypes: 
//   ds: (ptr16 (segment))
//   Stack +0002: (memptr T_3 (struct (0 T_2 t0000)))
// LiveOut: FPU -1
// Trashed: bx FPU -1 Top
// Preserved: bp sp
// fn0C00_0031
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// bp:bp
// ss:ss
// bx:bx
// ds:ds
// Top:Top
// wLoc02:Local -0002
// wArg02:Stack +0002
// rLoc1:FPU -1
// return address size: 2
real64 fn0C00_0031(selector ds, word16 wArg02)
fn0C00_0031_entry:
	def ds
	def wArg02
	// succ:  l0C00_0031
l0C00_0031:
	rLoc1_17 = CONVERT(Mem7[ds:wArg02:real32], real32, real64)
	return rLoc1_17
	// succ:  fn0C00_0031_exit
fn0C00_0031_exit:
