void fn0C00_0000(Register selector ds)
// MayUse:  ds:[0..15]
// DataTypes: 
//   ds: selector
// LiveOut:
// Trashed: SCZO bx Top
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// ss:ss
// SCZO:SCZO
// Top:Top
// ds:ds
// bx:bx
// wLoc02:Local -0002
// wLoc04:Local -0004
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	fn0C00_0010(ds, 0x300<16>, 0x320<16>)
	fn0C00_0037(ds)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
void fn0C00_0010(Register selector ds, Stack word16 wArg02, Stack word16 wArg04)
// MayUse:  ds:[0..15] Stack +0002:[0..15] Stack +0004:[0..15]
// DataTypes: 
//   ds: (ptr16 (segment))
//   Stack +0002: (memptr T_2 (struct (0 T_1 t0000) (8 T_4 t0008) (10 T_6 t0010)))
//   Stack +0004: (memptr T_2 (struct (0 T_9 t0000) (20 T_12 t0020) (28 T_15 t0028)))
// LiveOut:
// Trashed: bx FPU -1 FPU -2 Top
// Preserved: bp sp
// fn0C00_0010
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// bp:bp
// ss:ss
// bx:bx
// ds:ds
// Top:Top
// wLoc02:Local -0002
// wArg02:Stack +0002
// rLoc1:FPU -1
// rLoc2:FPU -2
// wArg04:Stack +0004
// return address size: 2
void fn0C00_0010(selector ds, word16 wArg02, word16 wArg04)
fn0C00_0010_entry:
	def ds
	def wArg02
	def wArg04
	// succ:  l0C00_0010
l0C00_0010:
	rLoc1_36 = Mem7[ds:wArg02:real64]
	rLoc1_37 = rLoc1_36 * rLoc1_36
	rLoc2_38 = Mem7[ds:wArg02 + 8<i16>:real64]
	rLoc2_39 = rLoc2_38 * rLoc2_38
	rLoc1_40 = rLoc1_37 + rLoc2_39
	rLoc2_41 = Mem7[ds:wArg02 + 16<i16>:real64]
	rLoc2_42 = rLoc2_41 * rLoc2_41
	rLoc1_43 = rLoc1_40 + rLoc2_42
	Mem25[ds:wArg04:real64] = rLoc1_43
	rLoc1_45 = CONVERT(Mem25[ds:wArg04 + 32<i16>:int16], int16, real64)
	Mem29[ds:wArg04 + 40<i16>:real64] = rLoc1_45
	return
	// succ:  fn0C00_0010_exit
fn0C00_0010_exit:
void fn0C00_0037(Register selector ds)
// MayUse:  ds:[0..15]
// DataTypes: 
//   ds: (ptr16 (segment (400 T_2 t0400) (408 T_7 t0408)))
// LiveOut:
// Trashed: FPU -1 Top
// Preserved: sp
// fn0C00_0037
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// Top:Top
// ds:ds
// rLoc1:FPU -1
// return address size: 2
void fn0C00_0037(selector ds)
fn0C00_0037_entry:
	def ds
	// succ:  l0C00_0037
l0C00_0037:
	Mem7[ds:0x400<16>:real64] = 0.0
	Mem11[ds:0x408<16>:int32] = CONVERT(1.0, real64, int32)
	return
	// succ:  fn0C00_0037_exit
fn0C00_0037_exit:
