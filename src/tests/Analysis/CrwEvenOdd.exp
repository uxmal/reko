void fn0C00_0000(Register selector ds)
// MayUse:  ds:[0..15]
// DataTypes: 
//   ds: (ptr16 (segment (300 T_2 t0300) (301 T_6 t0301)))
// LiveOut:
// Trashed: SCZO ax Top
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// ax:ax
// ds:ds
// al:al
// Top:Top
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	ax_5 = SEQ(0<8>, fn0C00_0015(3<16>))
	al_10 = SLICE(ax_5, byte, 0) (alias)
	Mem12[ds:0x300<16>:byte] = al_10
	ax_14 = SEQ(0<8>, fn0C00_0020(3<16>))
	al_19 = SLICE(ax_14, byte, 0) (alias)
	Mem20[ds:0x301<16>:byte] = al_19
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
Register byte fn0C00_0015(Register word16 ax)
// MayUse:  ax:[0..15]
// DataTypes: 
//   ax: word16
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: sp
// fn0C00_0015
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// ax:ax
// SZO:SZO
// C:C
// Z:Z
// al:al
// Top:Top
// SCZO:SCZO
// S:S
// O:O
// ah:ah
// return address size: 2
byte fn0C00_0015(word16 ax)
fn0C00_0015_entry:
	def ax
	// succ:  l0C00_0015
l0C00_0015:
	ah_17 = SLICE(ax, byte, 8) (alias)
	branch ax == 0<16> l0C00_001D
	// succ:  l0C00_0019 l0C00_001D
l0C00_0019:
	// succ:  l0C00_001A_thunk_fn0C00_0020
l0C00_001A_thunk_fn0C00_0020:
	ax_13 = SEQ(0<8>, fn0C00_0020(ax - 1<16>))
	return SLICE(ax_13, byte, 0)
	// succ:  fn0C00_0015_exit
l0C00_001D:
	ax_18 = SEQ(ah_17, 1<8>) (alias)
	return SLICE(ax_18, byte, 0)
	// succ:  fn0C00_0015_exit
fn0C00_0015_exit:
Register byte fn0C00_0020(Register word16 ax)
// MayUse:  ax:[0..15]
// DataTypes: 
//   ax: word16
// LiveOut: ax
// Trashed: SCZO ax Top
// Preserved: sp
// fn0C00_0020
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// ax:ax
// SZO:SZO
// C:C
// Z:Z
// al:al
// Top:Top
// SCZO:SCZO
// S:S
// O:O
// ah:ah
// return address size: 2
byte fn0C00_0020(word16 ax)
fn0C00_0020_entry:
	def ax
	// succ:  l0C00_0020
l0C00_0020:
	ah_19 = SLICE(ax, byte, 8) (alias)
	branch ax == 0<16> l0C00_0028
	// succ:  l0C00_0024 l0C00_0028
l0C00_0024:
	// succ:  l0C00_0025_thunk_fn0C00_0015
l0C00_0025_thunk_fn0C00_0015:
	ax_15 = SEQ(0<8>, fn0C00_0015(ax - 1<16>))
	return SLICE(ax_15, byte, 0)
	// succ:  fn0C00_0020_exit
l0C00_0028:
	ax_20 = SEQ(ah_19, 0<8>) (alias)
	return SLICE(ax_20, byte, 0)
	// succ:  fn0C00_0020_exit
fn0C00_0020_exit:
