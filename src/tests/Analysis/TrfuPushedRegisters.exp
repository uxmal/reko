// fn0C00_0000
// Return size: 2
void fn0C00_0000()
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	sp = fp
	cx = 0x002A
	v4 = 0x0001
	sp = fp - 0x0002
	wLoc02 = 0x0001
	v6 = 0x0002
	sp = fp - 0x0004
	wLoc04 = 0x0002
	call fn0C00_0023 (retsize: 2; depth: 6)
	sp = fp
	ax = 0x0000
	SZO = cond(0x0000)
	C = false
	v10 = 0x0000
	sp = fp - 0x0002
	wLoc02 = 0x0000
	v11 = 0x0000
	sp = fp - 0x0004
	wLoc04 = 0x0000
	v12 = 0x0000
	sp = fp - 0x0006
	wLoc06 = 0x0000
	v13 = 0x0000
	sp = fp - 0x0008
	wLoc08 = 0x0000
	v14 = 0x0000
	sp = fp - 0x000A
	wLoc0A = 0x0000
	v15 = 0x0000
	sp = fp - 0x000C
	wLoc0C = 0x0000
	call fn0C00_0034 (retsize: 2; depth: 14)
	sp = fp
	SCZO = cond(fp)
	v17 = 0x0001
	sp = fp - 0x0002
	wLoc02 = 0x0001
	v18 = 0x0002
	sp = fp - 0x0004
	wLoc04 = 0x0002
	call fn0C00_005D (retsize: 2; depth: 6)
	sp = fp
	SCZO = cond(fp)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// fn0C00_0023
// Return size: 2
void fn0C00_0023()
fn0C00_0023_entry:
	// succ:  l0C00_0023
l0C00_0023:
	sp = fp
	v4 = cx
	sp = fp - 0x0002
	wLoc02 = v4
	v7 = bp
	sp = fp - 0x0004
	wLoc04 = v7
	bp = fp - 0x0004
	cx = wArg02
	ax = wArg04
	ax = ax + cx
	SCZO = cond(ax)
	bp = wLoc04
	sp = fp - 0x0002
	cx = wLoc02
	sp = fp
	return
	// succ:  fn0C00_0023_exit
fn0C00_0023_exit:

// fn0C00_0034
// Return size: 2
void fn0C00_0034()
fn0C00_0034_entry:
	// succ:  l0C00_0034
l0C00_0034:
	sp = fp
	v4 = bx
	sp = fp - 0x0002
	wLoc02 = v4
	v7 = cx
	sp = fp - 0x0004
	wLoc04 = v7
	v9 = dx
	sp = fp - 0x0006
	wLoc06 = v9
	v11 = bp
	sp = fp - 0x0008
	wLoc08 = v11
	bp = fp - 0x0008
	bx = fp + 0x0006
	// succ:  l0C00_003D
l0C00_003D:
	ax = Mem0[ds:bx:word16]
	bx = bx + 0x0002
	SCZO = cond(bx)
	SZO = cond(ax & ax)
	C = false
	branch Test(NE,Z) l0C00_003D
	// succ:  l0C00_0046 l0C00_003D
l0C00_0046:
	dx = wArg04
	bx = bx + 0x0002
	SCZO = cond(bx)
	ax = wArg02
	cx = Mem0[ds:bx - 0x0002:word16]
	bx = fp + 0x0006
	call fn0C00_0069 (retsize: 2; depth: 10)
	bp = wLoc08
	sp = fp - 0x0006
	dx = wLoc06
	sp = fp - 0x0004
	cx = wLoc04
	sp = fp - 0x0002
	bx = wLoc02
	sp = fp
	return
	// succ:  fn0C00_0034_exit
fn0C00_0034_exit:

// fn0C00_005D
// Return size: 2
void fn0C00_005D()
fn0C00_005D_entry:
	// succ:  l0C00_005D
l0C00_005D:
	sp = fp
	v4 = cx
	sp = fp - 0x0002
	wLoc02 = v4
	v7 = bp
	sp = fp - 0x0004
	wLoc04 = v7
	bp = fp - 0x0004
	ax = wArg04
	ax = ax + cx
	SCZO = cond(ax)
	bp = wLoc04
	sp = fp - 0x0002
	cx = wLoc02
	sp = fp
	return
	// succ:  fn0C00_005D_exit
fn0C00_005D_exit:

// fn0C00_0069
// Return size: 2
void fn0C00_0069()
fn0C00_0069_entry:
	// succ:  l0C00_0069
l0C00_0069:
	sp = fp
	Mem0[ds:0x0200:word16] = bx
	Mem0[ds:0x0300:word16] = cx
	return
	// succ:  fn0C00_0069_exit
fn0C00_0069_exit:

