// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def si
	def ds
	def Mem0
	def di
	// succ:  l0C00_0000
l0C00_0000:
	si_7 = si
	goto l0C00_001A
	// succ:  l0C00_001A
l0C00_0005:
	Mem14[ds:di:word16] = ax_9
	branch ax_9 != 0x0000 l0C00_0011
	// succ:  l0C00_000B l0C00_0011
l0C00_000B:
	ax_24 = 0xFFFF
	goto l0C00_0024
	// succ:  l0C00_0024
l0C00_0011:
	branch ax_9 != 0x000D l0C00_001A
	// succ:  l0C00_0016 l0C00_001A
l0C00_0016:
	Mem22[ds:0x0302:word16] = Mem14[ds:0x0302:word16] + 0x0001
	// succ:  l0C00_001A
l0C00_001A:
	Mem8 = PHI((Mem0, l0C00_0000), (Mem14, l0C00_0011), (Mem22, l0C00_0016))
	si_7 = PHI((si_7, l0C00_0000), (si_10, l0C00_0011), (si_10, l0C00_0016))
	ax_9 = Mem8[ds:si_7:word16]
	si_10 = si_7 + 0x0002
	branch ax_9 != 0x0020 l0C00_0005
	// succ:  l0C00_0020 l0C00_0005
l0C00_0020:
	ax_27 = si_10 - si
	// succ:  l0C00_0024
l0C00_0024:
	ax_29 = PHI((ax_27, l0C00_0020), (ax_24, l0C00_000B))
	Mem31[ds:0x0300:word16] = ax_29
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
