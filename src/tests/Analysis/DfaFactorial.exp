// void fn0C00_0000(Register selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: sp
// fn0C00_0000
// Return size: 0
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	// succ:  l0C00_0000
l0C00_0000:
	Mem9[ds:0x0064:word16] = fn0C00_000F(0x0064)
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

// Register word16 fn0C00_000F(Stack word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1
// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
// fn0C00_000F
// Return size: 0
word16 fn0C00_000F(word16 wArg02)
fn0C00_000F_entry:
	// succ:  l0C00_000F
l0C00_000F:
	word16 ax_17
	branch wArg02 == 0x0001 l0C00_0026
	// succ:  l0C00_0018 l0C00_0026
l0C00_0018:
	ax_17 = (word16) (wArg02 *s fn0C00_000F(wArg02 - 0x0001)) (alias)
	goto l0C00_0029
	// succ:  l0C00_0029
l0C00_0026:
	ax_17 = 0x0001
	// succ:  l0C00_0029
l0C00_0029:
	return ax_17
	// succ:  fn0C00_000F_exit
fn0C00_000F_exit:

