void fn0C00_0000(Register selector ds)
// MayUse:  ds:[0..15]
// DataTypes: 
//   ds: (ptr16 (segment (64 T_2 t0064)))
// LiveOut:
// Trashed: SCZO ax cx dx Top
// Preserved: sp
// fn0C00_0000
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// cx:cx
// ds:ds
// ax:ax
// Top:Top
// dx:dx
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
void fn0C00_0000(selector ds)
fn0C00_0000_entry:
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	ax_5 = fn0C00_000B(5<16>)
	Mem13[ds:0x64<16>:word16] = ax_5
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
Register word16 fn0C00_000B(Register word16 cx)
// MayUse:  cx:[0..15]
// DataTypes: 
//   cx: int16
// LiveOut: ax
// Trashed: SCZO ax cx dx Top
// Preserved: si sp
// fn0C00_000B
// Return size: 0
// Mem0:Mem
// fp:fp
// sp:sp
// si:si
// ss:ss
// cx:cx
// SCZO:SCZO
// SZO:SZO
// ax:ax
// dx_ax:Sequence dx:ax
// Top:Top
// dx:dx
// wLoc02:Local -0002
// S:S
// C:C
// Z:Z
// O:O
// return address size: 2
word16 fn0C00_000B(word16 cx)
fn0C00_000B_entry:
	def cx
	// succ:  l0C00_000B
l0C00_000B:
	branch cx <= 1<16> l0C00_001C
	// succ:  l0C00_0011 l0C00_001C
l0C00_0011:
	ax_17 = fn0C00_000B(cx - 1<16>)
	dx_ax_20 = cx *s32 ax_17
	ax_22 = SLICE(dx_ax_20, word16, 0) (alias)
	goto l0C00_001F
	// succ:  l0C00_001F
l0C00_001C:
	ax_11 = 1<16>
	// succ:  l0C00_001F
l0C00_001F:
	ax_31 = PHI((ax_22, l0C00_0011), (ax_11, l0C00_001C))
	return ax_31
	// succ:  fn0C00_000B_exit
fn0C00_000B_exit:
