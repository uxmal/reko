fp:fp
sp_2: orig: sp
Top_3: orig: Top
al:al
    def:  def al
    uses: branch fn0C00_000A(al, out al_5) l0C00_0009
al_5: orig: al
    def:  branch fn0C00_000A(al, out al_5) l0C00_0009
    uses: Mem11[ds:0x0300:byte] = al_5
S_6: orig: S
C_7: orig: C
Z_8: orig: Z
O_9: orig: O
ds:ds
    def:  def ds
    uses: Mem11[ds:0x0300:byte] = al_5
Mem11: orig: Mem0
    def:  Mem11[ds:0x0300:byte] = al_5
// fn0C00_0000
// Return size: 0
void fn0C00_0000(byte al, selector ds)
fn0C00_0000_entry:
	def al
	def ds
	// succ:  l0C00_0000
l0C00_0000:
	branch fn0C00_000A(al, out al_5) l0C00_0009
	// succ:  l0C00_0005 l0C00_0009
l0C00_0005:
	Mem11[ds:0x0300:byte] = al_5
	// succ:  l0C00_0009
l0C00_0009:
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:

fp:fp
sp_2: orig: sp
Top_3: orig: Top
al:al
    def:  def al
    uses: al_19 = al - 0x30
          al_22 = al - 0x37
          al_25 = al - 0x57
          branch al <u 0x30 l0C00_0032
          branch al <=u 0x39 l0C00_0022
          branch al <u 0x41 l0C00_0032
          branch al <=u 0x46 l0C00_0022
          branch al <u 0x61 l0C00_0032
          branch al >u 0x66 l0C00_0032
          branch al <u 0x3A l0C00_0030
          branch al <u 0x47 l0C00_0030
          alOut = al
SCZO_5: orig: SCZO
C_6: orig: C
SCZO_7: orig: SCZO
CZ_8: orig: CZ
SCZO_9: orig: SCZO
C_10: orig: C
SCZO_11: orig: SCZO
CZ_12: orig: CZ
SCZO_13: orig: SCZO
C_14: orig: C
SCZO_15: orig: SCZO
CZ_16: orig: CZ
C_17: orig: C
al_28: orig: al
al_19: orig: al
    def:  al_19 = al - 0x30
    uses: al_30 = PHI((al_19, l0C00_0022), (al_22, l0C00_0028), (al_25, l0C00_002E))
SCZO_20: orig: SCZO
C_21: orig: C
al_22: orig: al
    def:  al_22 = al - 0x37
    uses: al_30 = PHI((al_19, l0C00_0022), (al_22, l0C00_0028), (al_25, l0C00_002E))
SCZO_23: orig: SCZO
C_24: orig: C
al_25: orig: al
    def:  al_25 = al - 0x57
    uses: al_30 = PHI((al_19, l0C00_0022), (al_22, l0C00_0028), (al_25, l0C00_002E))
SCZO_26: orig: SCZO
C_27: orig: C
al_30: orig: al
    def:  al_30 = PHI((al_19, l0C00_0022), (al_22, l0C00_0028), (al_25, l0C00_002E))
    uses: alOut = al_30
C_31: orig: C
O_32: orig: O
O_33: orig: O
O_34: orig: O
O_35: orig: O
O_36: orig: O
O_37: orig: O
O_38: orig: O
O_39: orig: O
O_40: orig: O
O_41: orig: O
S_42: orig: S
S_43: orig: S
S_44: orig: S
S_45: orig: S
S_46: orig: S
S_47: orig: S
S_48: orig: S
S_49: orig: S
S_50: orig: S
S_51: orig: S
alOut:Out:al
Z_60: orig: Z
Z_61: orig: Z
Z_62: orig: Z
Z_63: orig: Z
Z_64: orig: Z
Z_65: orig: Z
Z_66: orig: Z
Z_67: orig: Z
Z_68: orig: Z
Z_69: orig: Z
// fn0C00_000A
// Return size: 0
bool fn0C00_000A(byte al, ptr16 & alOut)
fn0C00_000A_entry:
	def al
	// succ:  l0C00_000A
l0C00_000A:
	branch al <u 0x30 l0C00_0032
	// succ:  l0C00_000E l0C00_0032
l0C00_000E:
	branch al <=u 0x39 l0C00_0022
	// succ:  l0C00_0012 l0C00_0022
l0C00_0012:
	branch al <u 0x41 l0C00_0032
	// succ:  l0C00_0016 l0C00_0032
l0C00_0016:
	branch al <=u 0x46 l0C00_0022
	// succ:  l0C00_001A l0C00_0022
l0C00_001A:
	branch al <u 0x61 l0C00_0032
	// succ:  l0C00_001E l0C00_0032
l0C00_001E:
	branch al >u 0x66 l0C00_0032
	// succ:  l0C00_0022 l0C00_0032
l0C00_0022:
	al_19 = al - 0x30
	branch al <u 0x3A l0C00_0030
	// succ:  l0C00_0028 l0C00_0030
l0C00_0028:
	al_22 = al - 0x37
	branch al <u 0x47 l0C00_0030
	// succ:  l0C00_002E l0C00_0030
l0C00_002E:
	al_25 = al - 0x57
	// succ:  l0C00_0030
l0C00_0030:
	al_30 = PHI((al_19, l0C00_0022), (al_22, l0C00_0028), (al_25, l0C00_002E))
	alOut = al_30
	return false
	// succ:  fn0C00_000A_exit
l0C00_0032:
	alOut = al
	return true
	// succ:  fn0C00_000A_exit
fn0C00_000A_exit:

