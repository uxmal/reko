fp:fp
    def:  def fp
    uses: sp_2 = fp
sp_2: orig: sp
    def:  sp_2 = fp
    uses: use sp_2
Top_3: orig: Top
    def:  Top_3 = 0
    uses: use Top_3
dx_4: orig: dx
    def:  dx_4 = 0x0000
    uses: SZO_5 = cond(dx_4)
          dx_14 = PHI((dx_4, l0C00_0000), (dx_15, l0C00_0008), (dx_15, l0C00_000D))
SZO_5: orig: SZO
    def:  SZO_5 = cond(dx_4)
C_6: orig: C
    def:  C_6 = false
cx_7: orig: cx
    def:  cx_7 = 0x0004
    uses: cx_17 = PHI((cx_7, l0C00_0000), (cx_18, l0C00_0008), (cx_19, l0C00_000D))
di_8: orig: di
    def:  di_8 = 0x0004
    uses: di_20 = PHI((di_8, l0C00_0000), (di_20, l0C00_0008), (di_21, l0C00_000D))
O_29: orig: O
    def:  O_29 = SLICE(SZO_22, bool, 4) (alias)
    uses: use O_29
si_10: orig: si
    def:  si_10 = PHI((si, l0C00_0000), (si_13, l0C00_0008), (si_13, l0C00_000D))
    uses: ax_12 = Mem0[ds:si_10:word16]
          si_13 = si_10 + 0x0002
C_28: orig: C
    def:  C_28 = SLICE(SCZO_16, bool, 1) (alias)
    uses: use C_28
ax_12: orig: ax
    def:  ax_12 = Mem0[ds:si_10:word16]
    uses: dx_15 = dx_14 + ax_12
          use ax_12
si_13: orig: si
    def:  si_13 = si_10 + 0x0002
    uses: si_10 = PHI((si, l0C00_0000), (si_13, l0C00_0008), (si_13, l0C00_000D))
          si_10 = PHI((si, l0C00_0000), (si_13, l0C00_0008), (si_13, l0C00_000D))
          use si_13
dx_14: orig: dx
    def:  dx_14 = PHI((dx_4, l0C00_0000), (dx_15, l0C00_0008), (dx_15, l0C00_000D))
    uses: dx_15 = dx_14 + ax_12
dx_15: orig: dx
    def:  dx_15 = dx_14 + ax_12
    uses: SCZO_16 = cond(dx_15)
          Mem24[ds:0x0300:word16] = dx_15
          dx_14 = PHI((dx_4, l0C00_0000), (dx_15, l0C00_0008), (dx_15, l0C00_000D))
          dx_14 = PHI((dx_4, l0C00_0000), (dx_15, l0C00_0008), (dx_15, l0C00_000D))
          use dx_15
SCZO_16: orig: SCZO
    def:  SCZO_16 = cond(dx_15)
    uses: C_28 = SLICE(SCZO_16, bool, 1) (alias)
cx_17: orig: cx
    def:  cx_17 = PHI((cx_7, l0C00_0000), (cx_18, l0C00_0008), (cx_19, l0C00_000D))
    uses: cx_18 = cx_17 - 0x0001
cx_18: orig: cx
    def:  cx_18 = cx_17 - 0x0001
    uses: branch cx_18 != 0x0000 l0C00_0008
          cx_17 = PHI((cx_7, l0C00_0000), (cx_18, l0C00_0008), (cx_19, l0C00_000D))
cx_19: orig: cx
    def:  cx_19 = 0x0004
    uses: cx_17 = PHI((cx_7, l0C00_0000), (cx_18, l0C00_0008), (cx_19, l0C00_000D))
          use cx_19
di_20: orig: di
    def:  di_20 = PHI((di_8, l0C00_0000), (di_20, l0C00_0008), (di_21, l0C00_000D))
    uses: di_21 = di_20 - 0x0001
          di_20 = PHI((di_8, l0C00_0000), (di_20, l0C00_0008), (di_21, l0C00_000D))
di_21: orig: di
    def:  di_21 = di_20 - 0x0001
    uses: SZO_22 = cond(di_21)
          di_20 = PHI((di_8, l0C00_0000), (di_20, l0C00_0008), (di_21, l0C00_000D))
          use di_21
SZO_22: orig: SZO
    def:  SZO_22 = cond(di_21)
    uses: Z_23 = SLICE(SZO_22, bool, 2) (alias)
          O_29 = SLICE(SZO_22, bool, 4) (alias)
          S_30 = SLICE(SZO_22, bool, 0) (alias)
Z_23: orig: Z
    def:  Z_23 = SLICE(SZO_22, bool, 2) (alias)
    uses: branch Test(NE,Z_23) l0C00_0008
          use Z_23
Mem24: orig: Mem0
    def:  Mem24[ds:0x0300:word16] = dx_15
ds:ds
    def:  def ds
    uses: ax_12 = Mem0[ds:si_10:word16]
          Mem24[ds:0x0300:word16] = dx_15
si:si
    def:  def si
    uses: si_10 = PHI((si, l0C00_0000), (si_13, l0C00_0008), (si_13, l0C00_000D))
Mem0:Mem
    def:  def Mem0
    uses: ax_12 = Mem0[ds:si_10:word16]
S_30: orig: S
    def:  S_30 = SLICE(SZO_22, bool, 0) (alias)
    uses: use S_30
// fn0C00_0000
// Return size: 2
define fn0C00_0000
fn0C00_0000_entry:
	def fp
	def ds
	def si
	def Mem0
	// succ:  l0C00_0000
l0C00_0000:
	sp_2 = fp
	Top_3 = 0
	dx_4 = 0x0000
	SZO_5 = cond(dx_4)
	C_6 = false
	cx_7 = 0x0004
	di_8 = 0x0004
	// succ:  l0C00_0008
l0C00_0008:
	di_20 = PHI((di_8, l0C00_0000), (di_20, l0C00_0008), (di_21, l0C00_000D))
	cx_17 = PHI((cx_7, l0C00_0000), (cx_18, l0C00_0008), (cx_19, l0C00_000D))
	dx_14 = PHI((dx_4, l0C00_0000), (dx_15, l0C00_0008), (dx_15, l0C00_000D))
	si_10 = PHI((si, l0C00_0000), (si_13, l0C00_0008), (si_13, l0C00_000D))
	ax_12 = Mem0[ds:si_10:word16]
	si_13 = si_10 + 0x0002
	dx_15 = dx_14 + ax_12
	SCZO_16 = cond(dx_15)
	C_28 = SLICE(SCZO_16, bool, 1) (alias)
	cx_18 = cx_17 - 0x0001
	branch cx_18 != 0x0000 l0C00_0008
	// succ:  l0C00_000D l0C00_0008
l0C00_000D:
	cx_19 = 0x0004
	di_21 = di_20 - 0x0001
	SZO_22 = cond(di_21)
	Z_23 = SLICE(SZO_22, bool, 2) (alias)
	O_29 = SLICE(SZO_22, bool, 4) (alias)
	S_30 = SLICE(SZO_22, bool, 0) (alias)
	branch Test(NE,Z_23) l0C00_0008
	// succ:  l0C00_0013 l0C00_0008
l0C00_0013:
	Mem24[ds:0x0300:word16] = dx_15
	return
	// succ:  fn0C00_0000_exit
fn0C00_0000_exit:
	use ax_12
	use C_28
	use cx_19
	use di_21
	use dx_15
	use O_29
	use S_30
	use si_13
	use sp_2
	use Top_3
	use Z_23

