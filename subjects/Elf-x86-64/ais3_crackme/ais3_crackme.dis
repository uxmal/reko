void _init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
_init_entry:
// DataOut: r13d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004003C8:
	call_gmon_start()
	return
// DataOut: r13d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp

_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



void _start(word64 rax, word64 rdx, word64 qwArg00, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rax rdx
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0000(64)
// Terminates process
_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

_start_entry:
// DataOut: rax rdx
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000400410:
	__align(fp + 0x0000000000000008)
	word64 rax_22 = DPB(rax, __libc_start_main(0x00000000004005C5, qwArg00, fp + 0x0000000000000008, 0x0000000000400620, 0x00000000004006B0, rdx, DPB(qwArg00, fp + 0x0000000000000004, 0)), 0)
	__hlt()
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void call_gmon_start()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: rsp
call_gmon_start_entry:
// DataOut: r13d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000000040043C:
	word64 rax_4 = Mem0[0x0000000000600FE0:word64]
	branch rax_4 == 0x0000000000000000 l000000000040044E
// DataOut: r13d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000000040044C:
	word64 rsp_17
	byte SCZO_18
	word64 rax_19
	byte SZO_20
	byte C_21
	byte Z_22
	word32 eax_23
	call eax (retsize: 4; depth: 12)
		uses: C_7,eax,rax_4,rsp_2,SCZO,SZO_5,Z_6
		defs: C_21,eax_23,rax_19,rsp_17,SCZO_18,SZO_20,Z_22
// DataOut: r13d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>
// LocalsOut: fp(64)

l000000000040044E:
	return
// DataOut: r13d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000008 rax:<invalid>

call_gmon_start_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:<invalid>



word64 deregister_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut: rsp
// Trashed: SCZO ah al ax di dil eax edi esp r8 r8b r8d r8w rax rdi rsp sp spl
// Preserved: rbp
deregister_tm_clones_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400460:
	branch false l0000000000400477
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400477:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000400475
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x000000000060103F r8:r8 - 6295608 rbp:fp - 0x0000000000000004 -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400481:
	word64 rsp_43
	word32 eax_44
	word64 rax_45
	word64 rbp_46
	word64 r8_47
	byte SCZO_48
	byte CZ_49
	byte SZO_50
	byte C_51
	byte Z_52
	word32 edi_53
	word64 rdi_54
	call eax (retsize: 4;)
		uses: C_39,CZ_9,dwLoc04_5,eax,edi,qwLoc04,r8_7,rax_36,rbp_40,rdi_42,rsp_41,SCZO_8,SZO_37,Z_38
		defs: C_51,CZ_49,eax_44,edi_53,r8_47,rax_45,rbp_46,rdi_54,rsp_43,SCZO_48,SZO_50,Z_52
	return rsp_43
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000000000 r8:r8 - 6295608 rbp:fp - 0x0000000000000004 -4(fp):rbp

l0000000000400475:
	return fp + 0x0000000000000004
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:<invalid> r8:r8 - 6295608 rbp:fp - 0x0000000000000004 -4(fp):rbp

deregister_tm_clones_exit:
// DataOut: rsp
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rax:<invalid> r8:<invalid> rbp:rbp rdi:<invalid> -4(fp):rbp



void register_tm_clones(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax dh di dil dl dx eax edi edx esi esp r8 r8b r8d r8w rax rdi rdx rsi rsp si sil sp spl
// Preserved: rbp
register_tm_clones_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400490:
	branch true l00000000004004B4
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rax:<invalid> r8:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid>
// LocalsOut: fp(64)

l00000000004004B4:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004004B2
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000060103 r8:<invalid> rbp:fp - 0x0000000000000004 rdx:0x0000000000000000 rsi:<invalid> rdi:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004004BE:
	word64 rsp_48
	word64 rax_49
	word64 rbp_50
	word64 r8_51
	byte SCZO_52
	word64 rdx_53
	byte Z_54
	byte SZO_55
	byte C_56
	word64 rsi_57
	word64 rdi_58
	word32 edx_59
	call edx (retsize: 4;)
		uses: C_43,dwLoc04_5,edx,qwLoc04,r8_7,rax_13,rbp_44,rdi_47,rdx_40,rsi_46,rsp_45,SCZO_14,SZO_41,Z_42
		defs: C_56,edx_59,r8_51,rax_49,rbp_50,rdi_58,rdx_53,rsi_57,rsp_48,SCZO_52,SZO_55,Z_54
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000060103 r8:<invalid> rbp:fp - 0x0000000000000004 rdx:0x0000000000000000 rsi:<invalid> rdi:<invalid> -4(fp):rbp

l00000000004004B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000060103 r8:<invalid> rbp:fp - 0x0000000000000004 rdx:0x0000000000000000 rsi:<invalid> rdi:<invalid> -4(fp):rbp

register_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rax:<invalid> r8:<invalid> rbp:rbp rdx:<invalid> rsi:<invalid> rdi:<invalid> -4(fp):rbp



void __do_global_dtors_aux(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi esp r8 r8b r8d r8w rax rbp rdi rsp sp spl
// Preserved: rbp
__do_global_dtors_aux_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004D0:
	branch Mem0[0x0000000000601038:byte] != 0x00 l00000000004004EA
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004D9:
	deregister_tm_clones(r8)
	Mem17[0x0000000000601038:byte] = 0x01
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004004EA:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> r8:<invalid> rdi:<invalid> -4(fp):rbp

__do_global_dtors_aux_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:<invalid> rax:<invalid> r8:<invalid> rdi:<invalid> -4(fp):rbp



void frame_dummy(word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8
// LiveOut:
// Trashed: SCZO ah al ax dh di dil dl dx eax edi edx esi esp r8 r8b r8d r8w rax rdi rdx rsi rsp si sil sp spl
// Preserved: rbp rsp
frame_dummy_entry:
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004F0:
	rsp = fp
	SCZO = cond(Mem0[0x0000000000600E08:word64] - 0x0000000000000000)
	Z = SCZO (alias)
	branch Test(EQ,Z) l0000000000400518
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004004FA:
	rax = 0x0000000000000000
	SZO = cond(0x0000000000000000)
	Z = SZO (alias)
	C = false
	branch Test(EQ,Z) l0000000000400518
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400518:
	register_tm_clones(r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0x0000000000000000

l0000000000400490:
	branch true l00000000004004B4
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rax:<invalid> r8:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid>
// LocalsOut: fp(64)

l00000000004004B4:
	branch 0x0000000000000000 == 0x0000000000000000 l00000000004004B2
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000060103 r8:<invalid> rbp:fp - 0x0000000000000004 rdx:0x0000000000000000 rsi:<invalid> rdi:<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004004BE:
	word64 rsp_48
	word64 rax_49
	word64 rbp_50
	word64 r8_51
	byte SCZO_52
	word64 rdx_53
	byte Z_54
	byte SZO_55
	byte C_56
	word64 rsi_57
	word64 rdi_58
	word32 edx_59
	call edx (retsize: 4;)
		uses: C_43,dwLoc04_5,edx,qwLoc04,r8_7,rax_13,rbp_44,rdi_47,rdx_40,rsi_46,rsp_45,SCZO_14,SZO_41,Z_42
		defs: C_56,edx_59,r8_51,rax_49,rbp_50,rdi_58,rdx_53,rsi_57,rsp_48,SCZO_52,SZO_55,Z_54
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000060103 r8:<invalid> rbp:fp - 0x0000000000000004 rdx:0x0000000000000000 rsi:<invalid> rdi:<invalid> -4(fp):rbp

l00000000004004B2:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rax:0x0000000000060103 r8:<invalid> rbp:fp - 0x0000000000000004 rdx:0x0000000000000000 rsi:<invalid> rdi:<invalid> -4(fp):rbp

register_tm_clones_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rax:<invalid> r8:<invalid> rbp:rbp rdx:<invalid> rsi:<invalid> rdi:<invalid> -4(fp):rbp

l0000000000400504:
	rsp = fp - 0x0000000000000004
	dwLoc04 = rbp
	qwLoc04 = DPB(qwLoc04, dwLoc04, 0) (alias)
	rdi = 0x0000000000600E08
	rbp = fp - 0x0000000000000004
	call eax (retsize: 4; depth: 8)
		defs: C,eax,edi,edx,r8,rax,rbp,rdi,rdx,rsi,rsp,SCZO,SZO,Z
	rbp = qwLoc04
	rsp = fp + 0x0000000000000004
// DataOut: r8
// DataOut (flags): 
// SymbolicIn: rsp:fp rax:0x0000000000000000

l000000000040050F_thunk_register_tm_clones:
	register_tm_clones(r8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rax:<invalid> rdi:<invalid> rbp:rbp -4(fp):rbp

frame_dummy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rax:<invalid> r8:<invalid> rdx:<invalid> rdi:<invalid> rbp:rbp rsi:<invalid> -4(fp):rbp



word64 verify(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi
// LiveOut: eax rax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx esi esp rax rcx rdx rsi rsp si sil sp spl
// Preserved: rbp
verify_entry:
// DataOut: rdi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400520:
	word32 dwLoc08_127 = 0x00000000
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l00000000004005A1:
	word64 rax_122
	word64 rax_32 = rdi + (int64) ((word32) ((uint64) dwLoc08_127))
	branch (byte) (word32) Mem0[rax_32:byte] != 0x00 l0000000000400531
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l0000000000400531:
	byte al_74 = (byte) (uint64) ((word32) (uint64) dwLoc08_127 ^ (word32) ((uint64) ((word32) Mem0[rdi + (int64) ((word32) ((uint64) dwLoc08_127)):byte])))
	word64 rax_114 = (uint64) dwLoc08_127
	branch (byte) (word32) Mem0[DPB(rax_114, (int16) (byte) rax_114, 0) + 0x0000000000601020:byte] == (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) al_74 >> (byte) ((uint64) ((word32) ((uint64) (0x00000008 - (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc08_127) ^ 0x00000009)) & 0x00000003)))))))))))) | (word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) al_74 << (byte) ((uint64) ((word32) ((uint64) ((word32) ((uint64) ((word32) ((uint64) dwLoc08_127) ^ 0x00000009)) & 0x00000003)))))))))))) + 0x08 l000000000040059D
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l000000000040059D:
	dwLoc08_127 = dwLoc08_127 + 0x00000001
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64) Local -0008(32) Local -001C(64)

l0000000000400596:
	rax_122 = 0x0000000000000000
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004005B9:
	rax_122 = DPB(rax_32, (word32) (dwLoc08_127 == 0x00000017), 0) (alias)
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> eax:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp
// LocalsOut: fp(64)

l00000000004005C3:
	return rax_122
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000004 rbp:fp - 0x0000000000000004 rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp

verify_exit:
// DataOut: eax rax
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rbp:rbp rax:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -28(fp):rdi -9(fp):al + 0x08 -8(fp):<invalid> -4(fp):rbp



void main(word64 rax, word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi rax rsi
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx esi esp rax rcx rdi rdx rsi rsp si sil sp spl
// Preserved: rbp
main_entry:
// DataOut: edi rax rsi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004005C5:
	branch edi == 0x00000002 l00000000004005EB
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64) Local -0014(64)

l00000000004005EB:
	word64 rax_37 = verify(Mem0[rsi + 0x0000000000000008:word64])
	branch (word32) rax_37 == 0x00000000 l000000000040060E
// DataOut: rax
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000014 rbp:fp - 0x0000000000000004 -20(fp):rsi -8(fp):edi -4(fp):rbp
// LocalsOut: fp(64)

l000000000040060E:
	word64 rax_47 = DPB(rax_37, puts(0x0000000000400718), 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -20(fp):rsi -8(fp):edi -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400602:
	word64 rax_45 = DPB(rax_37, puts(0x00000000004006F0), 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -20(fp):rsi -8(fp):edi -4(fp):rbp
// LocalsOut: fp(64)

l0000000000400618:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rax:<invalid> rdi:<invalid> rdx:<invalid> eax:<invalid> al:<invalid> edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:<invalid> -20(fp):rsi -8(fp):edi -4(fp):rbp
// LocalsOut: fp(64)

l00000000004005DA:
	word64 rax_26 = DPB(rax, puts(0x00000000004006C8), 0)
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000014 rbp:fp - 0x0000000000000004 -20(fp):rsi -8(fp):edi -4(fp):rbp
// LocalsOut: fp(64)

l000000000040061D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:<invalid> rbp:fp - 0x0000000000000004 rdi:<invalid> rax:<invalid> rdx:<invalid> eax:0x00000000 al:0x00 edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:0x0000 -20(fp):rsi -8(fp):edi -4(fp):rbp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp + 0x0000000000000004 rbp:rbp rdi:<invalid> rax:<invalid> rdx:<invalid> eax:0x00000000 al:0x00 edx:<invalid> rcx:<invalid> esi:<invalid> rsi:<invalid> ax:0x0000 -20(fp):rsi -8(fp):edi -4(fp):rbp



void __libc_csu_init(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi
// LiveOut:
// Trashed: SCZO ah al ax dh di dil dl dx eax edi edx esi rax rdi rdx rsi si sil
// Preserved: r12 r13 r14 r15 rbp rbx rsp
__libc_csu_init_entry:
// DataOut: edi
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l0000000000400620:
	_init()
	branch 0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 == 0x0000000000000000 l0000000000400686
// DataOut: r13d rbp
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l000000000040066A:
// DataOut: r13d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 r12:0000000000600DF8 r13:(uint64) edi r14:rsi r15:rdx rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l0000000000400670:
	word64 rsp_60
	word64 rbp_61
	word64 r12_62
	word64 r13_63
	word64 r14_64
	word64 r15_65
	word64 rbx_66
	byte SCZO_67
	word32 r13d_68
	word32 edi_69
	word64 rsi_70
	word64 rdx_71
	byte SZO_72
	byte C_73
	byte Z_74
	word32 ebx_75
	word64 rdi_76
	call Mem0[0x0000000000600DF8:word32] (retsize: 4; depth: 60)
		uses: C_52,ebx_50,edi,qwLoc08_13,qwLoc10_11,qwLoc18_9,qwLoc20_5,qwLoc28_3,qwLoc30_15,r12_7,r13_19,r13d_53,r14_54,r15_55,rbp_23,rbx_49,rdi_58,rdx_56,rsi_57,rsp_16,SCZO_24,SZO_51,Z_28
		defs: C_73,ebx_75,edi_69,r12_62,r13_63,r13d_68,r14_64,r15_65,rbp_61,rbx_66,rdi_76,rdx_71,rsi_70,rsp_60,SCZO_67,SZO_72,Z_74
	branch rbx_66 + 0x0000000000000001 != rbp_61 l0000000000400670
// DataOut: r13d rbp rbx
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 r12:0000000000600DF8 r13:(uint64) edi r14:rsi r15:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15
// LocalsOut: fp(64)

l0000000000400686:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp - 0x0000000000000038 rbp:0x0000000000600E00 - 0x0000000000600DF8 >> 0x0000000000000003 r12:0000000000600DF8 r13:(uint64) edi r14:rsi r15:rdx rbx:<invalid> rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15

__libc_csu_init_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp rbp:rbp r12:r12 r13:r13 r14:r14 r15:r15 rbx:rbx rdx:<invalid> rsi:<invalid> rdi:<invalid> rax:<invalid> -48(fp):rbx -40(fp):rbp -32(fp):r12 -24(fp):r13 -16(fp):r14 -8(fp):r15



void __libc_csu_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
__libc_csu_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

l00000000004006B0:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

__libc_csu_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



void _fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO
// Preserved: rsp
_fini_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp
// LocalsOut: fp(64)

l00000000004006B4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp

_fini_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: rsp:fp



