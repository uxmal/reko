void herror()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F20_entry:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F20:
	word64 t3_4 = Mem0[0x000000000001A010:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F2C



void __strdup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F30_entry:
// DataOut: a0 a1 a4 gp ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F30:
	word64 t3_4 = Mem0[0x000000000001A018:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 a4 gp ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F30_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F3C



void clock_gettime()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F40_entry:
// DataOut: a0 gp s1 s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F40:
	word64 t3_4 = Mem0[0x000000000001A020:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp s1 s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F4C



void close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F50_entry:
// DataOut: gp s0 s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F50:
	word64 t3_4 = Mem0[0x000000000001A028:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s0 s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F50_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F5C



void read()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F60_entry:
// DataOut: a0 gp s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F60:
	word64 t3_4 = Mem0[0x000000000001A030:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F60_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F6C



void inet_ntop()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F70_entry:
// DataOut: a0 a1 gp ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F70:
	word64 t3_4 = Mem0[0x000000000001A038:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 gp ra s0 s1 s10 s2 s3 s4 s5 s6 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F70_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F7C



void snprintf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F80_entry:
// DataOut: gp s0 s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F80:
	word64 t3_4 = Mem0[0x000000000001A040:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s0 s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F80_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F8C



void getaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014F90_entry:
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014F90:
	word64 t3_4 = Mem0[0x000000000001A048:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014F90_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014F9C



void dlopen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014FA0_entry:
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014FA0:
	word64 t3_4 = Mem0[0x000000000001A050:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014FA0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014FAC



void open()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014FB0_entry:
// DataOut: a0 gp s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014FB0:
	word64 t3_4 = Mem0[0x000000000001A058:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014FB0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014FBC



void __snprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014FC0_entry:
// DataOut: gp s0 s10 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014FC0:
	word64 t3_4 = Mem0[0x000000000001A060:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s0 s10 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014FC0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014FCC



void dlsym()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014FD0_entry:
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014FD0:
	word64 t3_4 = Mem0[0x000000000001A068:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014FD0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014FDC



void getopt_long()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000014FF0_entry:
// DataOut: a0 gp ra s0 s10 s2 s3 s6 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000014FF0:
	word64 t3_4 = Mem0[0x000000000001A078:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp ra s0 s10 s2 s3 s6 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000014FF0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:0000000000014FFC



void __vasprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015000_entry:
// DataOut: a0 a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015000:
	word64 t3_4 = Mem0[0x000000000001A080:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015000_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001500C



void __asprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015010_entry:
// DataOut: a0 a1 gp ra s0 s10 s2 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015010:
	word64 t3_4 = Mem0[0x000000000001A088:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 gp ra s0 s10 s2 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015010_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001501C



void getnameinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015020_entry:
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015020:
	word64 t3_4 = Mem0[0x000000000001A090:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015020_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001502C



void memset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015030_entry:
// DataOut: gp ra s0 s1 s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015030:
	word64 t3_4 = Mem0[0x000000000001A098:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp ra s0 s1 s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015030_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001503C



void inet_pton()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015040_entry:
// DataOut: a0 a1 gp ra s0 s1 s10 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015040:
	word64 t3_4 = Mem0[0x000000000001A0A0:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 gp ra s0 s1 s10 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015040_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001504C



void strcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015050_entry:
// DataOut: a0 gp ra
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015050:
	word64 t3_4 = Mem0[0x000000000001A0A8:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp ra
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015050_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001505C



void free()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015060_entry:
// DataOut: a0 a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015060:
	word64 t3_4 = Mem0[0x000000000001A0B0:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015060_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001506C



void __printf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015070_entry:
// DataOut: gp s0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015070:
	word64 t3_4 = Mem0[0x000000000001A0B8:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s0
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015070_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001507C



void __sprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015080_entry:
// DataOut: a1 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015080:
	word64 t3_4 = Mem0[0x000000000001A0C0:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a1 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015080_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001508C



void fwrite()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015090_entry:
// DataOut: a1 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015090:
	word64 t3_4 = Mem0[0x000000000001A0C8:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a1 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015090_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001509C



void memcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn00000000000150A0_entry:
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000150A0:
	word64 t3_4 = Mem0[0x000000000001A0D0:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000150A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:00000000000150AC



void fputs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn00000000000150B0_entry:
// DataOut: a1 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000150B0:
	word64 t3_4 = Mem0[0x000000000001A0D8:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a1 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000150B0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:00000000000150BC



void isatty()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn00000000000150C0_entry:
// DataOut: a0 gp ra s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000150C0:
	word64 t3_4 = Mem0[0x000000000001A0E0:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp ra s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000150C0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:00000000000150CC



void __fprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn00000000000150D0_entry:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000150D0:
	word64 t3_4 = Mem0[0x000000000001A0E8:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000150D0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:00000000000150DC



void putchar()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn00000000000150F0_entry:
// DataOut: gp ra s1
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000150F0:
	word64 t3_4 = Mem0[0x000000000001A0F8:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp ra s1
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000150F0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:00000000000150FC



void fputc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015100_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015100:
	word64 t3_4 = Mem0[0x000000000001A100:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015100_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001510C



void __stack_chk_fail()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015110_entry:
// DataOut: a0 a1 a2 gp ra s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015110:
	word64 t3_4 = Mem0[0x000000000001A108:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 a2 gp ra s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015110_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001511C



void __errno_location()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015120_entry:
// DataOut: a0 gp ra s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015120:
	word64 t3_4 = Mem0[0x000000000001A110:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp ra s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015120_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001512C



void strtol()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015130_entry:
// DataOut: a0 a1 a2 gp ra s1 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015130:
	word64 t3_4 = Mem0[0x000000000001A118:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 a1 a2 gp ra s1 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015130_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001513C



void strchr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015140_entry:
// DataOut: a0 gp ra s0 s1 s10 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015140:
	word64 t3_4 = Mem0[0x000000000001A120:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a0 gp ra s0 s1 s10 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015140_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001514C



void memcpy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015150_entry:
// DataOut: a1 gp s10 s3 s6 s7
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015150:
	word64 t3_4 = Mem0[0x000000000001A128:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: a1 gp s10 s3 s6 s7
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015150_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001515C



void abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015160_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015160:
	word64 t3_4 = Mem0[0x000000000001A130:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015160_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001516C



void freeaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: t1 t3
// Preserved: sp
fn0000000000015170_entry:
// DataOut: gp s1 s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015170:
	word64 t3_4 = Mem0[0x000000000001A138:word64]
	word64 sp_6
	word64 t3_7
	word64 t1_8
	call t3_4 (retsize: 0;)
		uses: sp_1,t1_5,t3_4
		defs: sp_6,t1_8,t3_7
	return
// DataOut: gp s1 s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015170_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:000000000001517C



void fn0000000000015180(word64 ra, word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp ra
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t1 t3 t4 t5 t6
// Preserved: a0 a1 ra s11 s5
fn0000000000015180_entry:
// DataOut: a0 a1 gp ra
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015180:
	word64 sp_132 = fp + -448
	word32 dwLoc01A4_41 = 0x0000000000000000
	word64 s0_224 = 0
	word64 s6_43 = 0
	word64 s9_44 = 0
	word64 s10_45 = 0
	word32 dwLoc01C0_46 = 0x0000000000000000
// DataOut: gp ra s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015200:
	getopt_long()
	branch a0 == -1 l0000000000015348
// DataOut: a0 a5 gp ra s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015348:
	word64 s1_1011
	word64 s4_1012
	word64 a4_111 = (word64) Mem0[gp + -1904:int32]
	branch a4_111 >= a0 l0000000000015428
// DataOut: a4 a5 gp ra s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015428:
	s4_1012 = 0
	s1_1011 = 0
// DataOut: a5 gp ra s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015350:
	word64 a1_1007 = (int64) ((word32) a4_111 + 1)
	Mem1010[gp + 2192:word32] = a1_1007
	word64 s2_1009 = a1 + (a4_111 << 0x00000003)
	s1_1011 = Mem1010[s2_1009:word64]
	s4_1012 = 0
	branch a1_1007 >= a0 l0000000000015378
// DataOut: a4 a5 gp ra s0 s1 s10 s2 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l000000000001536C:
	s4_1012 = Mem1010[s2_1009 + 8:word64]
	Mem1015[gp + 2192:word32] = (int64) ((word32) a4_111 + 2)
// DataOut: a5 gp ra s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:0 s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015378:
	branch s6_43 != 0x0000000000000000 l0000000000015588
// DataOut: a5 gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015588:
	__printf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001537C:
	branch (word64) dwLoc01A4_41 == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015384:
	branch (word64) dwLoc01C0_46 == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l00000000000153B4:
	word64 s2_806
	word64 a5_763
	word64 a5_669
	word64 a0_743
	word64 a0_220
	branch s9_44 == 0x0000000000000000 l0000000000015924
// DataOut: gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01B8(64) Local -01C0(64)

l0000000000015924:
	branch fn0000000000017924(gp) != 0x0000000000000000 l0000000000015458
// DataOut: a5 gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015930:
	branch (s0_224 & 65544) != 65544 l0000000000015458
// DataOut: a5 gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015940:
// DataOut: a5 gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l00000000000153BC:
	s2_806 = s0_224 | 2
	branch fn0000000000017924(gp) == 0x0000000000000000 l0000000000015434
// DataOut: a5 gp ra s0 s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015434:
	branch (s0_224 & 65544) != 65544 l00000000000153CC
// DataOut: a5 gp ra s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015444:
	s0_224 = s0_224 | 2
// DataOut: a5 gp ra s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015448:
	s2_806 = s0_224 | 0x0000000000004000
	branch s9_44 != 0x0000000000000000 l00000000000153CC
// DataOut: a5 gp ra s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l0000000000015454:
	s0_224 = s2_806
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000015458:
	a5_763 = a0
	branch s10_45 == 0x0000000000000000 l0000000000015CE4
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000015CE4:
	branch s1_1011 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CE8:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CF0:
	fwrite()
	fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001545C:
	word64 a1_861
	word64 a0_862 = fn00000000000166F4(ra, gp, fp + -420, s10_45, 1, out a1_861)
	branch a0_862 < 0x0000000000000000 l0000000000015BC8
// DataOut: a5 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC8:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BD0:
	branch (word64) Mem0[fp + -420:int32] != 0x0000000000000000 l0000000000015E7C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E7C:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BDC:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015474:
	Mem866[fp + -440:word64] = a0_862
	word64 s1_867 = (word64) Mem866[fp + -420:int32]
	Mem868[fp + -416:word64] = 0x0000000000000000
	clock_gettime()
	word64 a5_869 = Mem868[fp + -440:word64]
	branch false l0000000000015CB0
// DataOut: a5 gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015494:
	word64 a5_889
	branch s1_867 == 0x0000000000000000 l0000000000015C48
// DataOut: a5 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:2 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C48:
	Mem921[fp + -440:word64] = a5_869
	word64 s1_925
	word64 a0_926
	ra = fn00000000000164D0(4, out sp_132, out s0_224, out s1_925, out a0_926)
	word64 a5_928 = Mem921[sp_132 + 8:word64]
	branch a0_926 < 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:2 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C64:
	branch 15 >= a5_928 l0000000000015C7C
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C6C:
	word64 a3_944 = 1
	branch a3_944 >=u (s1_925 | 4) l0000000000015DB8
// DataOut: a3 a4 a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:15 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DB8:
	branch (s1_925 | 4) == a3_944 l0000000000015E00
// DataOut: a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E00:
	Mem953[sp_132 + 256:byte] = -64
	Mem955[sp_132 + 257:byte] = -88
// DataOut: a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DBC:
	Mem946[sp_132 + 256:byte] = -84
	Mem951[sp_132 + 257:byte] = Mem946[sp_132 + 48:word64] >> 0x00000004 & 15 | 16
// DataOut: a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C7C:
	Mem941[sp_132 + 256:byte] = 10
// DataOut: a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C84:
	word64 a4_930 = (word64) Mem921[sp_132 + 256:int32]
	Mem936[sp_132 + 8:word64] = a5_928
	Mem937[sp_132 + 24:word32] = a4_930
	inet_ntop()
	a5_889 = Mem937[sp_132 + 8:word64]
	branch true l00000000000154DC
// DataOut: a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015498:
	Mem906[fp + -392:byte] = Mem868[fp + -400:word64] & 1 | -4
	word64 s1_909
	word64 a0_910
	ra = fn00000000000164D0(15, out sp_132, out s0_224, out s1_909, out a0_910)
	branch a0_910 < 0x0000000000000000 l0000000000015CB0
// DataOut: gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:2 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154BC:
	inet_ntop()
	a5_889 = Mem906[sp_132 + 8:word64]
	branch 10 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154DC:
	Mem897[sp_132 + 8:word64] = a5_889
	__asprintf_chk()
	a5_763 = Mem897[sp_132 + 8:word64]
	branch sp_132 == 33 l0000000000015CB0
// DataOut: a5 gp ra s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:64 a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015508:
	s1_1011 = Mem897[sp_132 + 32:word64]
	branch s1_1011 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:-1 a3:<invalid> a2:0x0000000000011A90 a1:1 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB0:
	branch (word64) Mem868[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB8:
	__fprintf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153CC:
	branch s10_45 == 0x0000000000000000 l00000000000155A8
// DataOut: gp ra s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01A4(64) Local -01C0(64)

l00000000000155A8:
	branch (word64) dwLoc01A4_41 != 0x0000000000000000 l0000000000015944
// DataOut: gp ra s10 s4 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C0(64)

l0000000000015944:
	word64 a0_848 = fn00000000000169D8(gp, s9_44)
	s1_1011 = a0_848
	s0_224 = s2_806
	a5_763 = Mem0[fp + -440:word64]
	branch a0_848 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015510:
	branch (word64) Mem0[sp_132:int32] != 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B0:
	branch (word64) dwLoc01C0_46 == 0x0000000000000000 l000000000001598C
// DataOut: gp ra s10 s4 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001598C:
	word64 a0_841 = fn00000000000169D8(gp, s9_44)
	s1_1011 = a0_841
	branch a0_841 == 0x0000000000000000 l0000000000015964
// DataOut: gp ra s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159A4:
	s0_224 = s2_806
	a5_763 = Mem0[fp + -448:word64]
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):a0 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015518:
	Mem783[sp_132:word64] = a5_763
	strchr()
	a5_763 = Mem783[sp_132:word64]
	branch s1_1011 == 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015530:
	Mem786[sp_132 + 28:word32] = 1
	branch s4_1012 == 0x0000000000000000 l0000000000015BEC
// DataOut: a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:58 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BEC:
	Mem789[sp_132:word64] = a5_763
	strchr()
	a0_743 = s1_1011
	a5_669 = Mem789[sp_132:word64]
	branch s1_1011 != 0x0000000000000000 l0000000000015BB8
// DataOut: a0 a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:58 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C04:
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:47 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B8:
	word64 a0_834 = fn00000000000169D8(gp, s9_44)
	s1_1011 = a0_834
	branch a0_834 == 0x0000000000000000 l0000000000015964
// DataOut: gp ra s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015964:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001596C:
	__fprintf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D0:
	a5_763 = Mem0[fp + -448:word64]
	s0_224 = s2_806
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):a0 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D8:
	branch s4_1012 == 0x0000000000000000 l0000000000015BA0
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BA0:
	Mem768[sp_132:word64] = a5_763
	strchr()
	a0_743 = s1_1011
	a5_669 = Mem768[sp_132:word64]
	branch s1_1011 == 0x0000000000000000 l00000000000155FC
// DataOut: a0 a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BB8:
	Mem750[a0_743:byte] = 0x0000000000000000
	s4_1012 = a0_743 + 1
	branch s4_1012 == 0x0000000000000000 l00000000000155FC
// DataOut: a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC4:
// DataOut: gp ra s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155DC:
	branch (word64) Mem0[sp_132 + 28:int32] != 0x0000000000000000 l000000000001553C
// DataOut: gp ra s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001553C:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015544:
	__fprintf_chk()
	fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155E4:
	word64 a1_705
	word64 a0_706 = fn00000000000166F4(ra, gp, sp_132 + 28, s4_1012, 0, out a1_705)
	a5_669 = a0_706
	branch a0_706 < 0x0000000000000000 l0000000000015B6C
// DataOut: a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B6C:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B74:
	branch (word64) Mem0[sp_132 + 28:int32] != 0x0000000000000000 l0000000000015CD8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CD8:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B80:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B88:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B8C:
	__fprintf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155FC:
	branch (word64) Mem0[sp_132 + 28:int32] == 0x0000000000000000 l00000000000159B0
// DataOut: a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159B0:
	a0_220 = fn0000000000016D74(ra, gp, s0_224, s1_1011, a5_669, sp_132 + 56, s0_224)
// DataOut: a0 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015604:
	a0_220 = fn00000000000175BC(gp)
// DataOut: a0 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015618:
	branch a0_220 < 0x0000000000000000 l00000000000153D8
// DataOut: gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001561C:
	branch (s0_224 & 4294623231) != 0x0000000000000000 l0000000000015630
// DataOut: gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001562C:
	s0_224 = s0_224 | 8
// DataOut: gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015630:
	isatty()
	branch 1 == 0x0000000000000000 l0000000000015644
// DataOut: gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001563C:
	Mem641[gp + 2064:word32] = 1
// DataOut: gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015644:
	branch (s0_224 & 8) == 0x0000000000000000 l00000000000159C8
// DataOut: gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159C8:
	branch (s0_224 & 128) != 0x0000000000000000 l0000000000015D18
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D18:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D0:
	branch (s0_224 & 512) != 0x0000000000000000 l0000000000015D48
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D48:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D8:
	branch (s0_224 & 64) == 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E0:
	branch (word64) Mem0[sp_132 + 28:int32] != 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E8:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159FC:
	branch (s0_224 & 256) != 0x0000000000000000 l0000000000015D30
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D30:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A04:
	branch s0_224 << 0x0000000E < 0x0000000000000000 l0000000000015D78
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D78:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A0C:
	branch (s0_224 & 1024) == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A14:
	branch Mem0[sp_132 + 224:word64] == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A1C:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A2C:
	branch s0_224 << 0x00000014 >= 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A34:
	branch Mem0[sp_132 + 232:word64] == 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A3C:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A4C:
	branch s0_224 << 0x00000012 >= 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A54:
	word64 s2_601 = Mem0[sp_132 + 240:word64]
	branch s2_601 == 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A5C:
	strchr()
	branch s2_601 == 0x0000000000000000 l0000000000015DA4
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DA4:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A70:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A80:
	branch s0_224 << 0x00000013 >= 0x0000000000000000 l0000000000015AAC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A88:
	strchr()
	branch sp_132 == 0x0000000000000098 l0000000000015D90
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D90:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A9C:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AAC:
	branch (s0_224 & 1) == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AB4:
	branch Mem0[sp_132 + 112:word64] == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ABC:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ACC:
	branch (s0_224 & 2) != 0x0000000000000000 l0000000000015D60
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D60:
	__printf_chk()
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AD4:
	branch (s0_224 & 0x000000000000C000) != 0x000000000000C000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE0:
	branch Mem0[sp_132 + 128:word64] == 0x0000000000000000 l0000000000015AF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE8:
	__printf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AF8:
	word64 s0_574 = Mem0[sp_132 + 120:word64]
	branch s0_574 == 0x0000000000000000 l0000000000015B24
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B00:
	strchr()
	branch s0_574 == 0x0000000000000000 l0000000000015E90
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B14:
	__printf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001564C:
	word64 s0_405
	word64 s2_236 = (word64) Mem0[sp_132 + 216:int32]
	branch (word64) Mem0[sp_132 + 28:int32] != 0x0000000000000000 l000000000001590C
// DataOut: gp ra s10 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001590C:
	branch s2_236 != 128 l0000000000015660
// DataOut: gp ra s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015658:
	branch s2_236 == 32 l0000000000015914
// DataOut: gp ra s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015914:
	branch Mem0[sp_132 + 64:word64] == 0x0000000000000000 l0000000000015DDC
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DDC:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s0 s1 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001591C:
// DataOut: gp ra
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015660:
	branch s10_45 == 0x0000000000000000 l0000000000015860
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015860:
	word64 a0_498 = Mem0[sp_132 + 88:word64]
	strcmp()
	branch a0_498 == 0x0000000000000000 l0000000000015664
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015874:
	branch Mem0[sp_132 + 64:word64] == 0x0000000000000000 l0000000000015E14
// DataOut: gp ra
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E14:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:0 s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015880:
	fn000000000001654C(ra, gp)
	branch fn000000000001654C(ra, gp) == 0x0000000000000000 l0000000000015E74
// DataOut: gp ra s0 s1 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E74:
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158B8:
	branch (s0_224 & 65544) == 65544 l0000000000015E64
// DataOut: gp ra s1 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E64:
	s0_405 = 1
	branch Mem0[sp_132 + 80:word64] != 0x0000000000000000 l0000000000015C2C
// DataOut: gp ra s1 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E70:
// DataOut: gp ra s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:1 s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015664:
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015668:
	branch Mem0[sp_132 + 72:word64] == 0x0000000000000000 l0000000000015690
// DataOut: gp ra s1 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015674:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s1 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015690:
	fn000000000001654C(ra, gp)
	fn000000000001654C(ra, gp)
	branch Mem0[sp_132 + 96:word64] == 0x0000000000000000 l00000000000156EC
// DataOut: gp ra s0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156D4:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156EC:
	branch (s0_224 & 65544) == 65544 l0000000000015C1C
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C1C:
	branch Mem0[sp_132 + 80:word64] == 0x0000000000000000 l00000000000156FC
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C24:
	s0_405 = 0
// DataOut: gp ra s1 s2
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C2C:
	fn000000000001654C(ra, gp)
	branch s0_405 != 0x0000000000000000 l00000000000158C8
// DataOut: gp ra s1 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158C8:
	branch Mem0[sp_132 + 240:word64] == 0x0000000000000000 l00000000000158E8
// DataOut: gp ra s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158D0:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158E8:
	branch Mem0[sp_132 + 248:word64] == 0x0000000000000000 l00000000000157BC
// DataOut: gp ra s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158F0:
	fn000000000001654C(ra, gp)
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C44:
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156FC:
	putchar()
	branch Mem0[sp_132 + 240:word64] == 0x0000000000000000 l0000000000015728
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001570C:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:10 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015728:
	branch Mem0[sp_132 + 248:word64] == 0x0000000000000000 l000000000001574C
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015730:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001574C:
	branch Mem0[sp_132 + 224:word64] == 0x0000000000000000 l000000000001576C
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015754:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001576C:
	branch Mem0[sp_132 + 232:word64] == 0x0000000000000000 l000000000001578C
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015774:
	fn000000000001654C(ra, gp)
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001578C:
	branch (word64) Mem0[sp_132 + 28:int32] == 0x0000000000000000 l00000000000157A0
// DataOut: gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015794:
	branch 111 >=u (word64) Mem0[sp_132 + 216:int32] l0000000000015E3C
// DataOut: a5 gp ra s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E3C:
	fn000000000001654C(ra, gp)
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:111 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157A0:
	fn000000000001654C(ra, gp)
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157BC:
	branch Mem0[sp_132 + 120:word64] == 0x0000000000000000 l0000000000015C08
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C08:
	branch Mem0[sp_132 + 136:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C10:
	branch Mem0[sp_132 + 144:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C18:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157C4:
	putchar()
	branch Mem0[sp_132 + 128:word64] == 0x0000000000000000 l00000000000157F0
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157D4:
	fn000000000001654C(ra, gp)
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:10 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F0:
	branch Mem0[sp_132 + 120:word64] == 0x0000000000000000 l0000000000015814
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F8:
	fn000000000001654C(ra, gp)
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015814:
	branch Mem0[sp_132 + 136:word64] == 0x0000000000000000 l0000000000015838
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001581C:
	fn000000000001654C(ra, gp)
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015838:
	branch Mem0[sp_132 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp ra sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015840:
	fn000000000001654C(ra, gp)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153D0:
	branch (word64) Mem0[gp + -2028:int32] == 0x0000000000000000 l000000000001556C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001556C:
	fwrite()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> -448(fp):0x0000000000000000 -440(fp):a0 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001538C:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C0(64)

l00000000000153D8:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015394:
	fwrite()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153DC:
	branch Mem0[sp_132 + 328:word64] != Mem0[gp + -1936:word64] l0000000000015E8C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E8C:
	__stack_chk_fail()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E90:
	__printf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B24:
	word64 s0_133 = Mem0[sp_132 + 136:word64]
	branch s0_133 == 0x0000000000000000 l0000000000015B50
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B2C:
	strchr()
	branch s0_133 == 0x0000000000000000 l0000000000015EA4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015EA4:
	__printf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B40:
	__printf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B50:
	branch Mem0[sp_132 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B58:
	__printf_chk()
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:1 t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:0 s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> ra:<invalid> s5:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015224:
	branch 118 <u a0 l0000000000015200
// DataOut: a5 gp ra s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A4(64) Local -01C0(64)

l000000000001522C:
	word64 a5_87 = (word64) Mem0[(a0 << 0x00000000 >>u 0x0000001E) + 0x00000000000102A0:int32]
	word64 sp_90
	word64 s5_91
	word64 a5_92
	word64 gp_93
	word64 s1_94
	word64 s0_95
	word64 s2_96
	word64 s3_97
	word64 s4_98
	word64 s6_99
	word64 s7_100
	word64 s8_101
	word64 s9_102
	word64 s10_103
	word64 s11_104
	word64 ra_105
	word64 a0_106
	word64 a1_107
	word64 a4_108
	word64 a3_109
	word64 a2_110
	call a5_87 (retsize: 0; depth: 448)
		uses: a0_55,a1_54,a2_53,a3_52,a4_85,a5_87,dwLoc01A4_41,dwLoc01B8_50,dwLoc01C0_46,gp,qwLoc01B8,qwLoc01C0,qwLoc08_35,qwLoc10_15,qwLoc18_9,qwLoc20_17,qwLoc28_19,qwLoc30_21,qwLoc38_4,qwLoc40_23,qwLoc48_25,qwLoc50_27,qwLoc58_29,qwLoc60_31,qwLoc68_33,qwLoc78_11,ra,s0_42,s1_47,s10_45,s11,s2_40,s3_38,s4_48,s5,s6_43,s7_49,s8_36,s9_44,sp_2
		defs: a0_106,a1_107,a2_110,a3_109,a4_108,a5_92,gp_93,ra_105,s0_95,s1_94,s10_103,s11_104,s2_96,s3_97,s4_98,s5_91,s6_99,s7_100,s8_101,s9_102,sp_90
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a0 s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:a0 t3:<invalid> t1:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000015180_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:<invalid> s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s5:<invalid> s11:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000015EB8(word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 gp sp t1 t3
// Preserved:
fn0000000000015EB8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015EB8:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000150E0:
	word64 t3_19 = Mem0[0x000000000001A0F0:word64]
	word64 sp_21
	word64 gp_22
	word64 a5_23
	word64 a0_24
	word64 a1_25
	word64 a2_26
	word64 a3_27
	word64 a4_28
	word64 a6_29
	word64 t3_30
	word64 t1_31
	call t3_19 (retsize: 0; depth: 16)
		uses: a0_7,a1_9,a2_10,a3_13,a4_15,a5_5,a6_16,gp_3,sp_11,t1_20,t3_19
		defs: a0_24,a1_25,a2_26,a3_27,a4_28,a5_23,a6_29,gp_22,sp_21,t1_31,t3_30
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp & -16 gp:0000000000013448 a5:a0 a0:0000000000015180 a1:<invalid> a2:fp + 8 a3:00000000000182E8 a4:0000000000018378 a6:fp & -16

fn0000000000015EB8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp & -16 gp:0000000000013448 a5:a0 a0:0000000000015180 a1:<invalid> a2:fp + 8 a3:00000000000182E8 a4:0000000000018378 a6:fp & -16 t3:<invalid> t1:00000000000150EC



void fn0000000000015EF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: sp
fn0000000000015EF0_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015EF0:
	word64 a4_7 = 14
	branch a4_7 >=u 0x0000000000000007 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F0C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14

l0000000000015F20:
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

l0000000000015F18:
	word64 sp_20
	word64 a0_21
	word64 a5_22
	word64 a4_23
	word64 t1_24
	word64 ra_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_19,a4_7,a5_6,ra,sp_1,t1_18
		defs: a0_21,a4_23,a5_22,ra_25,sp_20,t1_24
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

fn0000000000015EF0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000007 a4:14 t1:0x0000000000000000



void fn0000000000015F24()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
fn0000000000015F24_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F24:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid> a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F4C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F60:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F58:
	word64 sp_21
	word64 a0_22
	word64 a5_23
	word64 a1_24
	word64 t1_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_20,a1_10,a5_7,sp_1,t1_19
		defs: a0_22,a1_24,a5_23,sp_21,t1_25
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

fn0000000000015F24_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000



void fn0000000000015F64(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: ra s0 sp
fn0000000000015F64_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F64:
	branch (word64) Mem0[gp + -1900:byte] != 0x0000000000000000 l0000000000015F84
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F78:
	fn0000000000015EF0()
	Mem15[gp + 2196:byte] = 1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> -16(fp):s0 -8(fp):ra

l0000000000015F84:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra

fn0000000000015F64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> ra:ra s0:s0 a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra



void fn0000000000015F94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: ra sp
fn0000000000015F94_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F94:
	sp = fp
	a5 = 0x000000000001A000
	a0 = 0x0000000000019E28
	a5 = Mem0[0x0000000000019E28:word64]
	branch a5 != 0x0000000000000000 l0000000000015FA8
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FA8:
	a5 = 0x0000000000000000
	a5 = 0x0000000000000000
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015FA4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28
// LocalsOut: fp(64)

l0000000000015FB4:
	sp = fp + -16
	qwLoc08 = ra
	call 0x0000000000000000 (retsize: 0; depth: 16)
	ra = qwLoc08
	sp = fp
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28

l0000000000015FC4_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28 ra:ra -8(fp):ra

l0000000000015FA4:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28

fn0000000000015F94_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid> a1:0x0000000000000000 t1:0x0000000000000000 ra:ra -8(fp):ra

l0000000000015F24:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid> a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F4C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F60:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F58:
	word64 sp_21
	word64 a0_22
	word64 a5_23
	word64 a1_24
	word64 t1_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_20,a1_10,a5_7,sp_1,t1_19
		defs: a0_22,a1_24,a5_23,sp_21,t1_25
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

fn0000000000015F24_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000



void fn0000000000015FCC(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 t1 t3
// Preserved: ra s0 sp
fn0000000000015FCC_entry:
// DataOut: a0 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FCC:
	branch a0 != 0x0000000000000000 l0000000000016090
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016090:
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fputc()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fputc()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

l00000000000163AC_thunk_fwrite:
	fwrite()
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a3:<invalid> a0:0x00000000000113C8 a2:62 a1:1 t3:<invalid> t1:<invalid> ra:ra s0:s0 -16(fp):s0 -8(fp):ra

l0000000000015FE0:
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
	fwrite()
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

l000000000001608C_thunk_fwrite:
	fwrite()
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a3:<invalid> a0:0x00000000000115A8 a2:30 a1:1 t3:<invalid> t1:<invalid> ra:ra s0:s0 -16(fp):s0 -8(fp):ra

fn0000000000015FCC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a3:<invalid> a0:<invalid> a2:<invalid> a1:1 t3:<invalid> t1:<invalid> ra:ra s0:s0 -16(fp):s0 -8(fp):ra



word64 fn00000000000163B0(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7 s9 sp t1 t3
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn00000000000163B0_entry:
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000163B0:
	word64 a5_27 = Mem0[gp + -1936:word64]
	__sprintf_chk()
	word64 a1_116 = 1
	word64 s3_37 = 16
	word64 s0_110 = 1
	word64 s1_111 = fp + -230
	word64 s5_43 = 1
	word64 s9_44 = 15
	word64 s7_45 = 58
	branch 1 == s3_37 l000000000001646C
// DataOut: a1 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0068(64)

l0000000000016430:
	__sprintf_chk()
	a1_116 = s5_43
	word64 a4_119 = s1_111 + 2
	branch (s0_110 & 1) == 0x0000000000000000 l00000000000164B8
// DataOut: a1 a4 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(64)

l00000000000164B8:
	s1_111 = a4_119
// DataOut: a1 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(64)

l0000000000016454:
	branch s0_110 == s9_44 l00000000000164C4
// DataOut: a1 a4 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(64)

l00000000000164C4:
	s1_111 = a4_119
// DataOut: a1 gp s1 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(64)

l0000000000016458:
	Mem123[s1_111 + 2:byte] = s7_45
	s1_111 = s1_111 + 3
// DataOut: a1 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(64)

l0000000000016464:
	s0_110 = (int64) ((word32) s0_110 + 1)
	branch s0_110 != s3_37 l0000000000016430
// DataOut: a1 gp s0 s1 s10 s2 s3 s5 s7 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(64)

l000000000001646C:
	Mem52[s1_111:byte] = 0x0000000000000000
	__strdup()
	branch a5_27 != Mem52[gp + -1936:word64] l00000000000164CC
// DataOut: a0 a1 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000164CC:
	__stack_chk_fail()
	open()
	branch false l0000000000016544
// DataOut: a0 gp s10 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:fp + -232 s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -230(fp):0x0000000000000000 -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164FC_thunk_fn0000000000016544:
	word64 sp_105
	word64 s0_106
	word64 s1_107
	word64 a0_108
	fn0000000000016544(out sp_105, out s0_106, out s1_107, out a0_108)
	return a0_108
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -272 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:fp + -232 s2:1 a3:0x00000000000115C8 a2:128 a1:0 a0:0x00000000000115D0 s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -272(fp):<invalid> -264(fp):<invalid> -256(fp):<invalid> -248(fp):ra -230(fp):0x0000000000000000 -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164FC_thunk_fn0000000000016500:
	word64 sp_100
	word64 s0_101
	word64 s1_102
	word64 a0_103
	fn0000000000016500(0x00000000000115D0, a1_116, out sp_100, out s0_101, out s1_102, out a0_103)
	return a0_103
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -272 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:fp + -232 s2:1 a3:0x00000000000115C8 a2:128 a1:0 a0:0x00000000000115D0 s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -272(fp):<invalid> -264(fp):<invalid> -256(fp):<invalid> -248(fp):ra -230(fp):0x0000000000000000 -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016484:
	return fp + -232
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:fp + -232 s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 t3:<invalid> t1:<invalid> -230(fp):0x0000000000000000 -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000163B0_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:<invalid> s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:<invalid> a1:<invalid> a0:<invalid> s3:<invalid> s1:<invalid> s6:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s8:s8 -272(fp):<invalid> -264(fp):<invalid> -256(fp):<invalid> -248(fp):ra -230(fp):0x0000000000000000 -228(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000164D0(word64 a1, ptr64 & spOut, ptr64 & s0Out, ptr64 & s1Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1
// LiveOut: a0 ra s0 s1 sp
// Trashed: a0 a1 a2 ra s0 s1 s2 sp t1 t3
// Preserved:
fn00000000000164D0_entry:
// DataOut: a1 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000164D0:
	open()
	branch false l00000000000164FC_thunk_fn0000000000016544
// DataOut: a0 gp s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000164FC_thunk_fn0000000000016500:
	word64 sp_37
	word64 s0_38
	word64 s1_39
	word64 a0_40
	return fn0000000000016500(0x00000000000115D0, a1, out sp_37, out s0_38, out s1_39, out a0_40)
// DataOut: a0 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 s0:a0 a0:0x00000000000115D0 s2:a1 a1:0 t3:<invalid> t1:<invalid> -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164FC_thunk_fn0000000000016544:
	word64 sp_32
	word64 s0_33
	word64 s1_34
	word64 a0_35
	return fn0000000000016544(out sp_32, out s0_33, out s1_34, out a0_35)
// DataOut: a0 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 s0:a0 a0:0x00000000000115D0 s2:a1 a1:0 t3:<invalid> t1:<invalid> -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164FC_thunk_fn0000000000016500:
	word64 sp_27
	word64 s0_28
	word64 s1_29
	word64 a0_30
	return fn0000000000016500(0x00000000000115D0, a1, out sp_27, out s0_28, out s1_29, out a0_30)
// DataOut: a0 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 s0:a0 a0:0x00000000000115D0 s2:a1 a1:0 t3:<invalid> t1:<invalid> -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000164D0_exit:
// DataOut: a0 ra s0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> a0:<invalid> s2:<invalid> a1:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> s1:<invalid> ra:<invalid> -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000016500(word64 a0, word64 s2, ptr64 & spOut, ptr64 & s0Out, ptr64 & s1Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 s2
// LiveOut: a0 ra s0 s1 sp
// Trashed: a0 a1 a2 ra s0 s1 s2 sp t1 t3
// Preserved:
fn0000000000016500_entry:
// DataOut: a0 gp s10 s2 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016500:
	read()
	close()
// DataOut: gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016528_thunk_fn0000000000016544:
	word64 sp_14
	word64 s0_15
	word64 s1_16
	word64 a0_17
	return fn0000000000016544(out sp_14, out s0_15, out s1_16, out a0_17)
// DataOut: a0 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 a2:s2 << 0x00000000 >>u 0x00000000 a1:s0 s1:a0 s0:a0 a0:<invalid> t3:<invalid> t1:<invalid>

fn0000000000016500_exit:
// DataOut: a0 ra s0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a2:s2 << 0x00000000 >>u 0x00000000 a1:s0 s1:<invalid> s0:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s2:<invalid>



word64 fn0000000000016544(ptr64 & spOut, ptr64 & s0Out, ptr64 & s1Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: a0 ra s0 s1 sp
// Trashed: a0 ra s0 s1 s2 sp
// Preserved:
fn0000000000016544_entry:
// DataOut: gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(64)

l0000000000016544:
	word64 a0_2
	*a0Out = -1
// DataOut: a0 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l000000000001652C:
	word64 s0_5
	*s0Out = Mem0[v3 + 16:word64]
	word64 s1_6
	*s1Out = Mem0[v3 + 8:word64]
	word64 sp_8
	*spOut = v3 + 32
	return Mem0[v3 + 24:word64]
// DataOut: a0 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 a0:-1

fn0000000000016544_exit:
// DataOut: a0 ra s0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 + 32 a0:-1 ra:<invalid> s0:<invalid> s1:<invalid> s2:<invalid>



word64 fn000000000001654C(word64 ra, word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp ra
// LiveOut: s4
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 sp t1 t3
// Preserved: ra s0 s1 s2 s3 sp
fn000000000001654C_entry:
// DataOut: gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001654C:
	word64 t3_7 = Mem0[gp + -1936:word64]
	__vasprintf_chk()
	word64 a1_19 = 1
	word64 a0_21 = fp + -112
	branch fp < 0xFFFFFFFFFFFFFF90 l00000000000165D8
// DataOut: a0 a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0068(64)

l00000000000165A8:
	fputs()
	branch (word64) Mem0[gp + -2032:int32] != 0x0000000000000000 l000000000001661C
// DataOut: gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:1 a3:fp + -40 a0:fp + -112 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: Local -0068(64)

l000000000001661C:
	fputs()
// DataOut: gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:a1 a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: Local -0068(64)

l00000000000165BC:
	a1_19 = Mem0[gp + -1912:word64]
	fputs()
	branch (word64) Mem0[gp + -2032:int32] != 0x0000000000000000 l0000000000016600
// DataOut: a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:a1 a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: Local -0068(64)

l0000000000016600:
	fwrite()
	a1_19 = 1
// DataOut: a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:0x0000000000000000 a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: Local -0068(64)

l00000000000165D0:
	free()
	a0_21 = 0x0000000000000000
// DataOut: a0 a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: Local -0068(64)

l00000000000165D8:
	branch t3_7 != Mem0[gp + -1936:word64] l000000000001662C
// DataOut: a0 a1 gp ra s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l000000000001662C:
	__stack_chk_fail()
// DataOut: a0 a1 gp ra
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l000000000001662C_thunk_fn0000000000016630:
	word64 a1_60
	word64 s4_61
	fn0000000000016630(ra, gp, a0_21, a1_19, out a1_60, out s4_61)
	return s4_61
// DataOut: gp s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165E4:
	return s4
// DataOut: gp s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:<invalid> s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

fn000000000001654C_exit:
// DataOut: s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:<invalid> s2:<invalid> s3:<invalid> a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> ra:<invalid> s0:<invalid> s1:<invalid> a2:<invalid> s4:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7



word64 fn0000000000016630(word64 ra, word64 gp, word64 a0, word64 a1, ptr64 & a1Out, ptr64 & s4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp ra
// LiveOut: a0 a1 s4
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 sp t1 t3
// Preserved: ra s0 s1 s2 s3 sp
fn0000000000016630_entry:
	*s4Out = s4
// DataOut: a0 a1 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016630:
	word64 a5_28
	word64 a5_7 = Mem0[gp + -1936:word64]
	__errno_location()
	Mem22[a0:word32] = 0x0000000000000000
	strtol()
	word64 a2_24 = 0
	word64 a1_25
	*a1Out = fp + -64
	branch 0x0000000000000000 == 0x0000000000000000 l000000000001668C
// DataOut: a0 a1 a2 gp ra s1 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0038(64)

l0000000000016680:
	branch a0 == 0x0000000000000000 l000000000001668C
// DataOut: a0 a1 a2 gp ra s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:0x0000000000000000 s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016684:
	branch (word64) Mem22[0x0000000000000000:byte] == 0x0000000000000000 l00000000000166C4
// DataOut: a0 a1 a2 gp ra s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:0x0000000000000000 s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l00000000000166C4:
	a5_28 = (word64) Mem22[a0:int32]
	branch a5_28 != 0x0000000000000000 l0000000000016690
// DataOut: a0 a1 a2 a5 gp ra s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l00000000000166CC:
	word64 a4_57 = (int64) (word32) a0
	branch a0 != a4_57 l00000000000166E0
// DataOut: a1 a2 a4 a5 gp ra s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l00000000000166E0:
	a5_28 = -34
// DataOut: a1 a2 a5 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 a4:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l00000000000166D8:
	Mem59[a1:word32] = a4_57
// DataOut: a1 a2 a5 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 a4:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l000000000001668C:
	a5_28 = (word64) Mem22[a0:int32]
// DataOut: a1 a2 a5 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016690:
	branch 0x0000000000000000 >= a5_28 l00000000000166E8
// DataOut: a1 a2 a5 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l00000000000166E8:
	a5_28 = -22
// DataOut: a1 a2 a5 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016694:
	a5_28 = (int64) (0x0000000000000000 - a5_28)
// DataOut: a1 a2 a5 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016698:
	branch a5_7 != Mem22[gp + -1936:word64] l00000000000166F0
// DataOut: a0 a1 a2 gp ra s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:a0 t3:<invalid> t1:<invalid> a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000166F0:
	__stack_chk_fail()
// DataOut: a0 a1 a2 gp ra s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:<invalid> a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000166F0_thunk_fn00000000000166F4:
	word64 a1_49
	return fn00000000000166F4(ra, gp, a5_28, fp + -64, a2_24, out a1_49)
// DataOut: a0 a1 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:<invalid> a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000166A8:
	return a5_28
// DataOut: a0 a1 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s2:a0 s3:a1 s1:a0 a2:0 a1:fp + -64 a0:<invalid> a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016630_exit:
// DataOut: a0 a1 s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s2:<invalid> s3:<invalid> s1:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a3:<invalid> a4:<invalid> ra:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s4:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000166F4(word64 ra, word64 gp, word64 a0, word64 a1, word64 a2, ptr64 & a1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 gp ra
// LiveOut: a0 a1
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 sp t1 t3
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000166F4_entry:
// DataOut: a0 a1 a2 gp ra s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0040(64)

l00000000000166F4:
	word64 a1_102
	word64 a0_29
	word64 s0_107 = (word64) Mem0[a0:int32]
	word64 s4_25 = a2
	branch s0_107 != 0x0000000000000000 l00000000000167C8
// DataOut: gp ra s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0040(64)

l000000000001672C:
	strchr()
	branch a1 == 0x0000000000000000 l00000000000167C8
// DataOut: gp ra s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0040(64)

l00000000000167C8:
	branch fn0000000000016630(ra, gp, a1, fp + -64, out a1_102, out s4_25) == 0x0000000000000000 l0000000000016794
// DataOut: a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:a1 t3:<invalid> t1:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167D8:
// DataOut: a1 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001673C:
	inet_pton()
	*a1Out = a1
	branch 2 == 0x0000000000000000 l000000000001678C
// DataOut: a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:a1 t3:<invalid> t1:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0040(64)

l0000000000016750:
	word64 a0_114 = fn00000000000182B4((word64) dwLoc40)
	branch a0_114 == 0x0000000000000000 l0000000000016790
// DataOut: a0 a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:2 t3:<invalid> t1:<invalid> a2:fp + -64 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001675C:
	branch (a0_114 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016764:
	word64 a5_125 = (int64) (int32) (a0_114 >>u 0x00000001)
	branch a5_125 == 0x0000000000000000 l0000000000016790
// DataOut: a0 a1 a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001676C:
	branch (a5_125 & 1) == 0x0000000000000000 l0000000000016820
// DataOut: a0 a1 a5 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016820:
	a0_114 = (int64) (int32) (a0_114 >>u 0x00000002)
	branch a0_114 != 0x0000000000000000 l000000000001675C
// DataOut: a0 a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016828:
// DataOut: a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016774:
	a0_114 = a5_125
// DataOut: a0 a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016778:
	a0_114 = (int64) (int32) (a0_114 >>u 0x00000001)
	s0_107 = (int64) ((word32) s0_107 + 1)
	branch a0_114 == 0x0000000000000000 l0000000000016790
// DataOut: a0 a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016784:
	branch (a0_114 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001678C:
	s0_107 = -1
// DataOut: a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016790:
// DataOut: a1 gp ra s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> t3:<invalid> t1:<invalid> a2:fp + -64 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016794:
	word64 a5_80 = (word64) Mem0[fp + -64:int32]
	branch s4_25 == 0x0000000000000000 l00000000000167DC
// DataOut: a1 a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001679C:
	branch 32 >= a5_80 l00000000000167DC
// DataOut: a0 a1 a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167DC:
	a0_29 = a5_80
	branch a5_80 < 0x0000000000000000 l00000000000167C0
// DataOut: a0 a1 a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167E4:
	branch (word64) Mem0[a0:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a1 a5 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167EC:
	branch 32 < a5_80 l00000000000167C0
// DataOut: a0 a1 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167A8:
	branch (word64) Mem0[a0:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a1 a5 gp ra s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:32 a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B0:
	Mem91[a0:word32] = 1
// DataOut: a0 a1 a5 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B8:
	a0_29 = a5_80
	branch 128 >= a5_80 l00000000000167F4
// DataOut: a0 a1 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167C0:
	a0_29 = -1
// DataOut: a0 a1 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167F4:
	branch Mem0[fp + -56:word64] != Mem0[gp + -1936:word64] l000000000001682C
// DataOut: a0 a1 gp ra s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001682C:
	__stack_chk_fail()
	Mem52[fp + -80:word64] = s0_107
	word64 a5_53 = Mem52[gp + -1936:word64]
	Mem54[fp + -72:word64] = ra
	Mem55[fp + -96:word32] = 0x0000000000000000
	Mem56[fp + -88:word64] = a5_53
	branch a0_29 == 0x0000000000000000 l0000000000016864
// DataOut: a0 a1 gp ra s0 s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016848_thunk_fn0000000000016864:
	word64 sp_61
	word64 s0_62
	word64 a0_63
	fn0000000000016864(ra, gp, s0_107, a1_102, out sp_61, out s0_62, out a0_63)
	return a0_63
// DataOut: a0 a1 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -96(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):<invalid> -72(fp):ra -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016848_thunk_fn000000000001684C:
	word64 sp_57
	word64 s0_58
	word64 a0_59
	fn000000000001684C(ra, gp, s0_107, a0_29, a1_102, out sp_57, out s0_58, out a0_59)
	return a0_59
// DataOut: a0 a1 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -96(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):<invalid> -72(fp):ra -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016800:
	return a0_29
// DataOut: a0 a1 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000166F4_exit:
// DataOut: a0 a1
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> ra:<invalid> s2:<invalid> a3:<invalid> a2:<invalid> -96(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):<invalid> -72(fp):ra -64(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000016830(word64 ra, word64 gp, word64 s0, word64 a0, word64 a1, ptr64 & spOut, ptr64 & s0Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp ra s0
// LiveOut: a0 ra s0 sp
// Trashed: a0 a3 a4 a5 ra s0 sp t1 t3
// Preserved:
fn0000000000016830_entry:
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016830:
	branch a0 == 0x0000000000000000 l0000000000016848_thunk_fn0000000000016864
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016848_thunk_fn000000000001684C:
	word64 sp_29
	word64 s0_30
	word64 a0_31
	return fn000000000001684C(ra, gp, s0, a0, a1, out sp_29, out s0_30, out a0_31)
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x0000000000000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016848_thunk_fn0000000000016864:
	word64 sp_25
	word64 s0_26
	word64 a0_27
	return fn0000000000016864(ra, gp, s0, a1, out sp_25, out s0_26, out a0_27)
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x0000000000000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016848_thunk_fn000000000001684C:
	word64 sp_21
	word64 s0_22
	word64 a0_23
	return fn000000000001684C(ra, gp, s0, a0, a1, out sp_21, out s0_22, out a0_23)
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x0000000000000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000016830_exit:
// DataOut: a0 ra s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a0:<invalid> a4:<invalid> ra:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> -32(fp):0x0000000000000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra



word64 fn000000000001684C(word64 ra, word64 gp, word64 s0, word64 a0, word64 a1, ptr64 & spOut, ptr64 & s0Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp ra s0
// LiveOut: a0 ra s0 sp
// Trashed: a0 a3 a4 a5 ra s0 sp t1 t3
// Preserved:
fn000000000001684C_entry:
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(64)

l000000000001684C:
	Mem8[v3:word32] = fn00000000000182B4((int64) (int32) (-1 << (int64) (32 - a0)))
// DataOut: a1 gp ra s0 s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016860_thunk_fn0000000000016864:
	word64 sp_13
	word64 s0_14
	word64 a0_15
	return fn0000000000016864(ra, gp, s0, a1, out sp_13, out s0_14, out a0_15)
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 a5:<invalid> a0:<invalid> a3:<invalid> a4:<invalid>

fn000000000001684C_exit:
// DataOut: a0 ra s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a0:<invalid> a3:<invalid> a4:<invalid> ra:<invalid> s0:<invalid> t3:<invalid> t1:<invalid>



word64 fn0000000000016864(word64 ra, word64 gp, word64 s0, word64 a1, ptr64 & spOut, ptr64 & s0Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 gp ra s0
// LiveOut: a0 ra s0 sp
// Trashed: a0 a3 a4 a5 ra s0 sp t1 t3
// Preserved:
fn0000000000016864_entry:
// DataOut: a1 gp ra s0 s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(64)

l0000000000016864:
	sp = v3
	a4 = Mem0[sp + 8:word64]
	a5 = Mem0[gp + -1936:word64]
	a0 = (word64) Mem0[sp:int32]
	branch a4 != a5 l0000000000016884
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016884:
	__stack_chk_fail()
	sp = sp + -16
	Mem0[sp:word64] = s0
	s0 = a0
	a0 = a1
	Mem0[sp + 8:word64] = ra
	ra = fn0000000000016830(ra, gp, s0, a0, a1, out sp, out s0, out a0)
	ra = Mem0[sp + 8:word64]
	a0 = a0 ^ -1
	a0 = a0 | s0
	s0 = Mem0[sp:word64]
	sp = sp + 16
	return ra
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 a4:<invalid> a5:<invalid> a0:<invalid>

l0000000000016874:
	ra = Mem0[sp + 24:word64]
	s0 = Mem0[sp + 16:word64]
	sp = sp + 32
	return ra
// DataOut: a0 a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 a4:<invalid> a5:<invalid> a0:<invalid>

fn0000000000016864_exit:
	use sp (=> spOut)
	use s0 (=> s0Out)
	use a0 (=> a0Out)
// DataOut: a0 ra s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> ra:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> a3:<invalid>



void fn00000000000168B8(word64 ra, word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp ra
// LiveOut:
// Trashed: a0 a3 a4 a5 ra s0 sp t1 t3
// Preserved: ra s0 sp
fn00000000000168B8_entry:
// DataOut: a0 a1 gp ra
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168B8:
	word64 sp_12
	word64 s0_13
	word64 a0_14
	fn0000000000016830(ra, gp, a0, a1, a1, out sp_12, out s0_13, out a0_14)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000168B8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> a0:<invalid> ra:<invalid> a5:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000168E4(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s3 sp t1 t3 t4 t5
// Preserved: ra s0 s1 sp
fn00000000000168E4_entry:
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168E4:
	word64 a0_130
	word64 a0_36
	word64 a4_7 = Mem0[gp + -1936:word64]
	branch a0 == 2 l0000000000016984
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0028(64)

l0000000000016984:
	getnameinfo()
	a1 = 16
	a0_130 = fp + -88
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0028(64)

l0000000000016908:
	branch a0 == 10 l0000000000016934
// DataOut: a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l0000000000016934:
	memcpy()
	getnameinfo()
	a1 = 28
	a0_130 = fp + -72
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:10 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0028(64)

l0000000000016974:
	branch a0_130 != 0x0000000000000000 l0000000000016910
// DataOut: a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0028(64)

l0000000000016978:
	__strdup()
	a0_36 = gp + -1896
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0028(64)

l0000000000016910:
	a0_36 = 0
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:<invalid> a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0028(64)

l0000000000016914:
	branch a4_7 != Mem0[gp + -1936:word64] l00000000000169D4
// DataOut: a0 a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000169D4:
	__stack_chk_fail()
// DataOut: a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000169D4_thunk_fn00000000000169D8:
	return fn00000000000169D8(gp, a1)
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t3:<invalid> t1:<invalid> t5:<invalid> t4:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016920:
	return a0_36
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000168E4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> ra:ra s0:<invalid> s1:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> t5:<invalid> t4:<invalid> a6:0 s2:<invalid> s3:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000169D8(word64 gp, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 s0 s1 s2 s3 sp t1 t3
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000169D8_entry:
// DataOut: a1 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0070(64)

l00000000000169D8:
	word64 a0_111
	word64 a5_7 = Mem0[gp + -1936:word64]
	getaddrinfo()
	branch a1 != 0x0000000000000000 l0000000000016AD8
// DataOut: gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0038(64) Local -0070(64)

l0000000000016AD8:
	a0_111 = 0
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:a1 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A34:
	word64 s0_104 = qwLoc70
	branch qwLoc70 == 0x0000000000000000 l0000000000016AA0
// DataOut: gp s0 s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:a1 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A3C:
	word64 s3_100 = 2
// DataOut: gp s0 s1 s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:a1 s0:<invalid> t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A68:
	word64 a0_105 = (word64) Mem0[s0_104 + 4:int32]
	branch a0_105 != s3_100 l0000000000016A4C
// DataOut: a0 a1 gp s0 s1 s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A4C:
	inet_ntop()
	branch a0_105 != 0x0000000000000000 l0000000000016A88
// DataOut: gp s0 s1 s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A74:
	inet_ntop()
	branch a0_105 == 0x0000000000000000 l0000000000016A60
// DataOut: gp s0 s1 s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A60:
	s0_104 = Mem0[s0_104 + 40:word64]
	branch s0_104 == 0x0000000000000000 l0000000000016A9C
// DataOut: gp s0 s1 s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A9C:
// DataOut: gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016AA0:
	freeaddrinfo()
	a0_111 = 0
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A88:
	freeaddrinfo()
	__strdup()
	a0_111 = gp + -864
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 t3:<invalid> t1:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016AAC:
	branch a5_7 != Mem0[gp + -1936:word64] l0000000000016AE0
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AE0:
	__stack_chk_fail()
	word64 a5_61 = a0_111
// DataOut: a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AE8:
	word64 a0_68
	branch a5_61 == 0x0000000000000000 l0000000000016B30
// DataOut: a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AEC:
	branch (a5_61 & 1) == 0x0000000000000000 l0000000000016B14
// DataOut: a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016B14:
	word64 a4_84 = (int64) (int32) (a5_61 >>u 0x00000001)
	a5_61 = (int64) (int32) (a5_61 >>u 0x00000002)
	branch a4_84 == 0x0000000000000000 l0000000000016B30
// DataOut: a3 a4 a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016B30:
	a0_68 = 0
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016B24:
	branch (a4_84 & 1) == 0x0000000000000000 l0000000000016AE8
// DataOut: a4 a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016B28:
	a5_61 = a4_84
// DataOut: a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AF4:
	a0_68 = 0
// DataOut: a0 a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AF8:
	a5_61 = (int64) (int32) (a5_61 >>u 0x00000001)
	a0_68 = (int64) ((word32) a0_68 + 1)
	branch a5_61 == 0x0000000000000000 l0000000000016B34
// DataOut: a0 a4 a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016B34:
	return a0_68
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016B08:
	branch (a5_61 & 1) != 0x0000000000000000 l0000000000016AF8
// DataOut: a0 a5 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016B0C:
	return -1
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AB8:
	return a0_111
// DataOut: a0 gp s10 s6
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000169D8_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> t3:<invalid> t1:<invalid> ra:ra s1:<invalid> s2:<invalid> s3:<invalid> s4:s4 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000016B38(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
fn0000000000016B38_entry:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B38:
	branch 127 <u a0 l0000000000016B5C
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B5C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

l0000000000016B40:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

fn0000000000016B38_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid>



word64 fn0000000000016B68(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra sp
fn0000000000016B68_entry:
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016B68:
	word64 a4_104
	word64 a0_6 = fn00000000000182B4(a0)
	word64 a5_7 = (int64) (int32) (a0_6 >>u 0x00000018)
	branch a5_7 == 0x0000000000000000 l0000000000016BD8
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016BD8:
	a4_104 = 0x00000000000115E8
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B7C:
	branch a5_7 == 10 l0000000000016C2C
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B84:
	word64 a4_41 = (int64) (int32) (a0_6 >>u 0x00000010)
	branch a5_7 == 100 l0000000000016C58
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:10 a3:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C58:
	branch (a4_41 & 192) != 64 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C64:
	a4_104 = 0x0000000000011618
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:64 a0:<invalid> -8(fp):ra

l0000000000016B90:
	branch a5_7 == 127 l0000000000016C70
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C70:
	a4_104 = 0x0000000000011630
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016B98:
	word64 a2_60 = (int64) (int32) (a0_6 >>u 0x00000008)
	branch a5_7 == 169 l0000000000016C44
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016C44:
	branch (a4_41 & 255) != 254 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C4C:
	a4_104 = 0x0000000000011640
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:254 a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BAC:
	branch a5_7 != 172 l0000000000016BF0
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF0:
	branch a5_7 != 192 l0000000000016C7C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C7C:
	branch a5_7 != 203 l0000000000016D18
// DataOut: a0 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D18:
	word64 a2_92 = 255
	branch a5_7 != a2_92 l0000000000016D4C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D4C:
	branch a5_7 != 198 l0000000000016BC0
// DataOut: a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D54:
	a4_104 = 0x0000000000011650
	branch (a4_41 & 254) != 18 l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:198 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D68:
	a4_104 = 0x0000000000011738
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011650 a3:18 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D20:
	a4_104 = 0x0000000000011710
	branch (a4_41 & 255) != a5_7 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D2C:
	a4_104 = 0x0000000000011710
	branch (a2_60 & 255) != a2_92 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D38:
	branch (a0_6 & a2_92) != (a2_60 & 255) l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D40:
	a4_104 = 0x0000000000011720
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C84:
	branch (a4_41 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C88:
	branch (a2_60 & 255) != 113 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C90:
	a4_104 = 0x00000000000116C0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:113 a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF8:
	branch ((a4_41 | a2_60) & 255) == 0x0000000000000000 l0000000000016CD0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CD0:
	a4_104 = 0x0000000000011660
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C04:
	branch (a4_41 & 255) == 2 l0000000000016CDC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CDC:
	branch (a2_60 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CE0:
	a4_104 = 0x0000000000011680
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C0C:
	branch (a4_41 & 255) == 51 l0000000000016C9C
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C9C:
	branch (a2_60 & 255) != 100 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CA4:
	a4_104 = 0x00000000000116A0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:100 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C14:
	branch (a4_41 & 255) == 88 l0000000000016CB0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB0:
	branch (a2_60 & 255) == 99 l0000000000016D00
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D00:
	a4_104 = 0x00000000000116E0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:99 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C1C:
	branch (a4_41 & 255) == 52 l0000000000016CEC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CEC:
	branch (a2_60 & 255) != 193 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CF4:
	a4_104 = 0x0000000000011708
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:193 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C24:
	branch (a4_41 & 255) != 168 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BB4:
	branch (a4_41 & 240) == 16 l0000000000016C2C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C2C:
	return 0x0000000000011608
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

l0000000000016BC0:
	branch 15 <u (int64) ((word32) a5_7 + -224) l0000000000016CB8
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB8:
	branch (a5_7 & 240) == 240 l0000000000016D0C
// DataOut: gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D0C:
	a4_104 = 0x0000000000011710
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CC4:
	a4_104 = 0x0000000000011650
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BCC:
	a4_104 = 0x0000000000011748
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:15 a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BE0:
	return a4_104
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

fn0000000000016B68_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> ra:ra a0:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra



word64 fn0000000000016D74(word64 ra, word64 gp, word64 s0, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp ra s0
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
fn0000000000016D74_entry:
// DataOut: a0 a1 a2 a3 gp ra s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01B8(64)

l0000000000016D74:
	word64 a0_132
	memset()
	inet_pton()
	word64 sp_103 = fp + -448
	word64 s5_141 = a1
	branch false l0000000000016E60
// DataOut: gp ra s0 s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01B8(64)

l0000000000016E60:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:2 a1:a2 s8:a3 t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E68:
	__fprintf_chk()
	a0_132 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:2 a1:a2 s8:a3 t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DDC:
	branch a1 < 0x0000000000000000 l0000000000016E88
// DataOut: gp ra s0 s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:2 a1:a2 s8:a3 t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01B8(64)

l0000000000016E88:
	s5_141 = 32
	branch a3 << 0x0000000D >= 0x0000000000000000 l0000000000016EBC
// DataOut: gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:2 a1:a2 s8:a3 t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01B8(64)

l0000000000016E94:
	word64 a0_425 = fn00000000000182B4((word64) dwLoc01B8)
	s5_141 = 8
	word64 a5_426 = (int64) (int32) (a0_425 >>u 0x00000018)
	branch a0_425 >= 0x0000000000000000 l0000000000016EBC
// DataOut: a5 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:a3 << 0x0000000D s6:a2 s1:a0 a2:fp + -440 s5:32 a0:2 a1:a2 s8:a3 t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016EA8:
	s5_141 = 24
	branch 63 <u (int64) ((word32) a5_426 + -128) l0000000000016EBC
// DataOut: gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:8 a0:<invalid> a1:a2 s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016EB8:
	s5_141 = 16
// DataOut: gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:24 a0:<invalid> a1:a2 s8:a3 a3:<invalid> a4:63 t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016DE0:
	word64 a0_377 = a0
	s0 = 3
// DataOut: a0 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:2 a1:a2 s8:a3 t3:<invalid> t1:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016DF0:
	strchr()
	branch a0_377 == 0x0000000000000000 l0000000000017194
// DataOut: a0 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:46 t3:<invalid> t1:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017194:
	word64 s2_408 = -1
// DataOut: gp ra s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 t3:<invalid> t1:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000171A0:
	__asprintf_chk()
	branch fp + -400 == s2_408 l00000000000172BC
// DataOut: gp ra s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:-1 t3:<invalid> t1:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000172BC:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:fp + -400 a1:1 s8:a3 s0:<invalid> s2:-1 t3:<invalid> t1:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171B8:
	s0 = (int64) ((word32) s0 + -1)
	branch s0 != 0x0000000000000000 l00000000000171A0
// DataOut: gp ra s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:fp + -400 a1:1 s8:a3 s0:<invalid> s2:-1 t3:<invalid> t1:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000171C4:
// DataOut: gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:fp + -400 a1:1 s8:a3 s0:<invalid> s2:-1 t3:<invalid> t1:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016E00:
	a0_377 = a0_377 + 1
	s0 = (int64) ((word32) s0 + -1)
	branch s0 != 0x0000000000000000 l0000000000016DF0
// DataOut: a0 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:a0 a2:fp + -440 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 t3:<invalid> t1:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016E10:
	branch 32 >= a1 l0000000000016EBC
// DataOut: gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> t3:<invalid> t1:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016EBC:
	inet_ntop()
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: a1 gp ra s0 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016ED4:
	__strdup()
	Mem163[a2:word64] = fp + -392
	word64 sp_165
	word64 s0_166
	word64 a0_167
	word64 ra_168 = fn0000000000016830(ra, gp, s0, s5_141, fp + -440, out sp_165, out s0_166, out a0_167)
	Mem169[sp_165 + 16:word32] = a0_167
	Mem174[sp_165 + 56:word64] = 0x0000000000000000
	Mem175[sp_165 + 64:word64] = 0x0000000000000000
	Mem176[sp_165 + 72:word64] = 0x0000000000000000
	Mem177[sp_165 + 80:word64] = 0x0000000000000000
	Mem178[sp_165 + 88:word64] = 0x0000000000000000
	Mem179[sp_165 + 96:word32] = 0x0000000000000000
	Mem180[sp_165 + 100:word16] = 0x0000000000000000
	Mem181[sp_165 + 102:byte] = 0x0000000000000000
	inet_ntop()
	branch 2 == 0x0000000000000000 l0000000000017300
// DataOut: a1 gp ra s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:fp + -392 s5:<invalid> a0:2 a1:fp + -440 s8:a3 a3:47 a4:<invalid> t3:<invalid> t1:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017300:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F24:
	__strdup()
	Mem183[a2 + 48:word64] = sp_165 + 56
	word64 s0_184 = (word64) Mem183[sp_165 + 8:int32]
	Mem185[a2 + 160:word32] = s5_141
	word64 sp_187
	word64 s0_188
	word64 a0_189
	word64 ra_190 = fn0000000000016830(ra_168, gp, s0_184, s5_141, sp_165 + 16, out sp_187, out s0_188, out a0_189)
	Mem197[sp_187 + 32:word32] = a0_189 ^ -1 | s0_188
	Mem198[sp_187 + 56:word64] = 0x0000000000000000
	Mem199[sp_187 + 64:word64] = 0x0000000000000000
	Mem200[sp_187 + 72:word64] = 0x0000000000000000
	Mem201[sp_187 + 80:word64] = 0x0000000000000000
	Mem202[sp_187 + 88:word64] = 0x0000000000000000
	Mem203[sp_187 + 96:word32] = 0x0000000000000000
	Mem204[sp_187 + 100:word16] = 0x0000000000000000
	Mem205[sp_187 + 102:byte] = 0x0000000000000000
	inet_ntop()
	branch 2 == 0x0000000000000000 l00000000000172F4
// DataOut: a1 gp ra s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172F4:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F84:
	__strdup()
	Mem207[a2 + 40:word64] = sp_187 + 56
	word64 s0_211
	word64 a0_212
	fn0000000000016830(ra_190, gp, (word64) Mem207[sp_187 + 8:int32], s5_141, sp_187 + 32, out sp_103, out s0_211, out a0_212)
	word64 a3_214 = (word64) Mem207[sp_103 + 32:int32]
	word64 s0_215 = a0_212 & s0_211
	Mem219[sp_103 + 24:word32] = s0_215
	Mem221[a2 + 24:word64] = fn0000000000017F04(gp, s0_215, s5_141, s0_215, a3_214)
	Mem226[sp_103 + 56:word64] = 0x0000000000000000
	Mem227[sp_103 + 64:word64] = 0x0000000000000000
	Mem228[sp_103 + 72:word64] = 0x0000000000000000
	Mem229[sp_103 + 80:word64] = 0x0000000000000000
	Mem230[sp_103 + 88:word64] = 0x0000000000000000
	Mem231[sp_103 + 96:word32] = 0x0000000000000000
	Mem232[sp_103 + 100:word16] = 0x0000000000000000
	Mem233[sp_103 + 102:byte] = 0x0000000000000000
	inet_ntop()
	branch 2 == 0x0000000000000000 l00000000000172DC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016FF4:
	word64 a5_245
	__strdup()
	word64 s0_235 = (word64) Mem233[sp_103 + 24:int32]
	Mem236[a2 + 32:word64] = sp_103 + 56
	Mem240[a2 + 184:word64] = fn0000000000016B68(s0_235)
	word64 a0_242 = fn00000000000182B4(s0_235)
	word64 a5_243 = (int64) (int32) (a0_242 >>u 0x00000018)
	branch a0_242 >= 0x0000000000000000 l0000000000017098
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> s3:1 t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017098:
	a5_245 = 0x0000000000011758
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017024:
	branch 63 >=u (int64) ((word32) a5_243 + -128) l000000000001727C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001727C:
	a5_245 = 0x0000000000011760
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017030:
	branch 31 >=u (int64) ((word32) a5_243 + -192) l00000000000172A4
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172A4:
	a5_245 = 0x0000000000011768
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001703C:
	branch 14 <u (int64) ((word32) a5_243 + -224) l00000000000172B0
// DataOut: gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172B0:
	a5_245 = 0x0000000000011778
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017048:
	a5_245 = 0x0000000000011770
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170A0:
	word64 a5_283
	Mem247[a2 + 192:word64] = a5_245
	branch s5_141 == 32 l0000000000017158
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017158:
	Mem352[a2 + 168:word64] = sp_103 + 56
	Mem353[a2 + 176:word64] = sp_103 + 56
	a5_283 = 0x0000000000011780
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170AC:
	Mem291[sp_103 + 40:word32] = s0_235
	branch s5_141 == 31 l0000000000017210
// DataOut: gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017210:
	inet_ntop()
	branch 2 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017228:
	__strdup()
	word64 a5_336 = (word64) Mem291[sp_103 + 16:int32]
	word64 a4_337 = (word64) Mem291[sp_103 + 24:int32]
	Mem338[a2 + 168:word64] = sp_103 + 56
	Mem345[sp_103 + 48:word32] = a5_336 ^ -1 | a4_337
	inet_ntop()
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017260:
	__strdup()
	Mem348[a2 + 176:word64] = sp_103 + 56
	a5_283 = 0x0000000000012660
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001716C:
	Mem288[a2 + 96:byte] = (word64) Mem247[a5_283:byte]
	Mem290[a2 + 97:byte] = (word64) Mem288[a5_283 + 1:byte]
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170B8:
	Mem305[sp_103 + 40:word32] = s0_235 | 0x0000000001000000
	inet_ntop()
	branch 2 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172E8:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170DC:
	__strdup()
	word64 a5_307 = (word64) Mem305[sp_103 + 16:int32]
	Mem308[a2 + 168:word64] = sp_103 + 56
	Mem315[sp_103 + 48:word32] = fn00000000000182B4((int64) ((word32) fn00000000000182B4(a5_307 ^ -1 | (word64) Mem308[sp_103 + 24:int32]) + -1))
	inet_ntop()
	branch 2 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x0000000001000000 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017074:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> t3:<invalid> t1:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> ra:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001707C:
	fwrite()
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> t3:<invalid> t1:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> ra:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017120:
	__strdup()
	Mem326[a2 + 176:word64] = sp_103 + 56
	__snprintf_chk()
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001717C:
	branch a3 << 0x00000011 < 0x0000000000000000 l0000000000017288
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017288:
	fn0000000000017B40(gp, (word64) Mem247[sp_103 + 8:int32], a2 + 64, a2 + 72, a2 + 80)
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:a3 << 0x00000011 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 a6:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017184:
	branch (a3 & 1) != 0x0000000000000000 l00000000000171C8
// DataOut: gp s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171C8:
	word64 a0_266 = fn00000000000168E4(gp, 2, sp_103 + 8)
	Mem267[a2 + 56:word64] = a0_266
	branch a0_266 != 0x0000000000000000 l000000000001718C
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:32 fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171DC:
	branch (word64) Mem267[gp + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171E4:
	__sprintf_chk()
	herror()
	a0_132 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001718C:
	a0_132 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E18:
	branch (word64) Mem0[gp + -2028:int32] == 0x0000000000000000 l0000000000017054
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:32 s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> t3:<invalid> t1:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017054:
	__fprintf_chk()
	a0_132 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -448 a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> t3:<invalid> t1:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E20:
	a0_132 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> ra:<invalid> a6:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E24:
	branch Mem0[sp_103 + 360:word64] != Mem0[gp + -1936:word64] l00000000000172D8
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172D8:
	__stack_chk_fail()
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172DC:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172C4:
	__fprintf_chk()
	abort()
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E30:
	return a0_132
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016D74_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> ra:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> s4:<invalid> s7:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -400(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn000000000001730C(word64 gp, word64 a0, word64 a1, ptr64 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0 s3
// Trashed: a0 a1 a2 a3 a4 a5 a6 ra s0 s1 s2 s3 sp t1 t3
// Preserved: ra s0 s1 sp
fn000000000001730C_entry:
	*s3Out = s3
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001730C:
	word64 a0_105
	word64 a4_7 = Mem0[gp + -1936:word64]
	branch 128 <u a0 l00000000000173BC
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0028(64)

l000000000001732C:
	word64 a5_108 = fp + -184
	word64 a4_107 = (int64) (8 - a0)
	word64 a3_92 = 7
	word64 a2_93 = -1
	word64 a1_94 = 255
	branch a0 == 0x0000000000000000 l000000000001736C
// DataOut: a0 a1 a2 a3 a4 a5 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:128 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l0000000000017354:
	branch a3_92 >= a0 l00000000000173C4
// DataOut: a0 a1 a2 a3 a4 a5 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l00000000000173C4:
	Mem116[a5_108:byte] = (int64) (int32) (a1_94 << a4_107)
// DataOut: a0 a1 a2 a3 a4 a5 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l0000000000017358:
	Mem114[a5_108:byte] = a2_93
// DataOut: a0 a1 a2 a3 a4 a5 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l000000000001735C:
	a0 = (int64) ((word32) a0 + -8)
	a5_108 = a5_108 + 1
	a4_107 = (int64) ((word32) a4_107 + 8)
	branch 0x0000000000000000 < a0 l0000000000017354
// DataOut: a0 a1 a2 a3 a4 a5 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l000000000001736C:
	inet_ntop()
	a1 = fp + -184
	branch 10 == 0x0000000000000000 l00000000000173BC
// DataOut: a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l00000000000173BC:
	a0_105 = 0
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:10 t3:<invalid> t1:<invalid> a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l0000000000017384:
	memcpy()
	__strdup()
	a1 = fp + -184
	a0_105 = fp + -168
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:10 t3:<invalid> t1:<invalid> a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l000000000001739C:
	branch a4_7 != Mem0[gp + -1936:word64] l00000000000173D0
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 t3:<invalid> t1:<invalid> a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000173D0:
	__stack_chk_fail()
	word64 s2_64 = (word64) Mem0[a0_105:byte]
	word64 s3_65 = (word64) Mem0[a0_105 + 1:byte]
	branch fp == -312 l00000000000174DC
// DataOut: a0 a1 gp s0 s10 s2 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 t3:<invalid> t1:<invalid> a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173FC_thunk_fn00000000000174DC:
	word64 s0_71
	word64 a0_72
	word64 s2_73
	word64 s3_74
	fn00000000000174DC(a0_105, a0_105, s2_64, s3_65, out s0_71, out a0_72, out s2_73, out s3_74)
	return a0_72
// DataOut: a0 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a4:<invalid> a5:128 a0:<invalid> t3:<invalid> t1:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 a6:<invalid> -232(fp):s3 -224(fp):s2 -216(fp):<invalid> -208(fp):s0 -200(fp):ra -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173FC_thunk_fn0000000000017400:
	word64 s0_66
	word64 a0_67
	word64 s2_68
	word64 s3_69
	fn0000000000017400(a0_105, a0_105, a1, s2_64, s3_65, out s0_66, out a0_67, out s2_68, out s3_69)
	return a0_67
// DataOut: a0 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -240 a4:<invalid> a5:128 a0:<invalid> t3:<invalid> t1:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 a6:<invalid> -232(fp):s3 -224(fp):s2 -216(fp):<invalid> -208(fp):s0 -200(fp):ra -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173A8:
	return a0_105
// DataOut: a0 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 t3:<invalid> t1:<invalid> a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn000000000001730C_exit:
// DataOut: a0 s3
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> ra:<invalid> s0:<invalid> s1:<invalid> t3:<invalid> t1:<invalid> s2:<invalid> s3:<invalid> a2:<invalid> a1:<invalid> a3:<invalid> a6:<invalid> -232(fp):s3 -224(fp):s2 -216(fp):<invalid> -208(fp):s0 -200(fp):ra -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000173D4(word64 a0, word64 a1, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1
// LiveOut: a0 s0 s2 s3 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp t1 t3
// Preserved:
fn00000000000173D4_entry:
// DataOut: a0 a1 gp s10 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000173D4:
	word64 s2_17 = (word64) Mem0[a0:byte]
	word64 s3_18 = (word64) Mem0[a0 + 1:byte]
	branch a1 == 128 l00000000000173FC_thunk_fn00000000000174DC
// DataOut: a0 a1 gp s0 s10 s2 s3 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000173FC_thunk_fn0000000000017400:
	word64 s0_39
	word64 a0_40
	word64 s2_41
	word64 s3_42
	return fn0000000000017400(a0, a0, a1, s2_17, s3_18, out s0_39, out a0_40, out s2_41, out s3_42)
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173FC_thunk_fn00000000000174DC:
	word64 s0_34
	word64 a0_35
	word64 s2_36
	word64 s3_37
	return fn00000000000174DC(a0, a0, s2_17, s3_18, out s0_34, out a0_35, out s2_36, out s3_37)
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173FC_thunk_fn0000000000017400:
	word64 s0_29
	word64 a0_30
	word64 s2_31
	word64 s3_32
	return fn0000000000017400(a0, a0, a1, s2_17, s3_18, out s0_29, out a0_30, out s2_31, out s3_32)
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000173D4_exit:
// DataOut: a0 s0 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> s1:<invalid> a2:<invalid> a1:<invalid> ra:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017400(word64 s0, word64 a0, word64 a1, word64 s2, word64 s3, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 s0 s2 s3
// LiveOut: a0 s0 s2 s3 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp t1 t3
// Preserved:
fn0000000000017400_entry:
// DataOut: a0 a1 gp s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000017400:
	branch 95 < a1 l0000000000017474
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000017474:
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:v3 a5:95

l0000000000017478_thunk_fn00000000000174DC:
	word64 s0_26
	word64 a0_27
	word64 s2_28
	word64 s3_29
	return fn00000000000174DC(s0, a0, s2, s3, out s0_26, out a0_27, out s2_28, out s3_29)
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 a5:95 s1:0x0000000000010480

l0000000000017404_thunk_fn00000000000174DC:
	word64 s0_18
	word64 a0_19
	word64 s2_20
	word64 s3_21
	return fn00000000000174DC(s0, a0, s2, s3, out s0_18, out a0_19, out s2_20, out s3_21)
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 a5:95

fn0000000000017400_exit:
// DataOut: a0 s0 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> a2:<invalid> a1:<invalid> ra:<invalid> a0:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> t3:<invalid> t1:<invalid> a4:<invalid> a3:<invalid>



word64 fn00000000000174DC(word64 s0, word64 a0, word64 s2, word64 s3, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 s0 s2 s3
// LiveOut: a0 s0 s2 s3 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp t1 t3
// Preserved:
fn00000000000174DC_entry:
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(64)

l00000000000174DC:
	memcmp()
	branch a0 == 0x0000000000000000 l0000000000017538
// DataOut: gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000017538:
	word64 a0_107
	*a0Out = 0x0000000000011858
	word64 s0_108
	*s0Out = Mem0[v3 + 32:word64]
	word64 s2_110
	*s2Out = Mem0[v3 + 16:word64]
	word64 s3_111
	*s3Out = Mem0[v3 + 8:word64]
	return v3 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:16 a1:0x0000000000010880 t3:<invalid> t1:<invalid>

l00000000000174F4:
	memcmp()
	branch s0 != 0x0000000000000000 l000000000001747C
// DataOut: gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:16 a1:0x0000000000010880 t3:<invalid> t1:<invalid>

l000000000001747C:
	memcmp()
	branch s0 == 0x0000000000000000 l000000000001755C
// DataOut: gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:s0 t3:<invalid> t1:<invalid>

l000000000001755C:
	word64 a0_99
	*a0Out = 0x0000000000011888
	word64 s0_100
	*s0Out = Mem0[v3 + 32:word64]
	word64 s2_102
	*s2Out = Mem0[v3 + 16:word64]
	word64 s3_103
	*s3Out = Mem0[v3 + 8:word64]
	return v3 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:s0 t3:<invalid> t1:<invalid>

l0000000000017490:
	memcmp()
	branch s0 == 0x0000000000000000 l0000000000017514
// DataOut: gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:s0 t3:<invalid> t1:<invalid>

l0000000000017514:
	word64 a0_91
	*a0Out = 0x00000000000118A0
	word64 s0_92
	*s0Out = Mem0[v3 + 32:word64]
	word64 s2_94
	*s2Out = Mem0[v3 + 16:word64]
	word64 s3_95
	*s3Out = Mem0[v3 + 8:word64]
	return v3 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:s0 t3:<invalid> t1:<invalid>

l00000000000174A4:
	memcmp()
	branch s0 != 0x0000000000000000 l0000000000017408
// DataOut: gp s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:s0 t3:<invalid> t1:<invalid>

l0000000000017408:
	word64 a5_65 = s2 << 0x00000008 | s3
	branch (a5_65 & 0x00000000FFFFE000) == 0x0000000000002000 l0000000000017580
// DataOut: a5 gp s10 s2 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid>

l0000000000017580:
	word64 a0_88
	*a0Out = 0x00000000000118D8
// DataOut: a0 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:(s2 << 0x00000008 | s3) & 0x00000000FFFFE000 a3:0x0000000000002000

l0000000000017420:
	branch (s2 & 254) == 252 l000000000001758C
// DataOut: a5 gp s10 s2 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:(s2 << 0x00000008 | s3) & 0x00000000FFFFE000 a3:0x0000000000002000

l000000000001758C:
	word64 a0_86
	*a0Out = 0x00000000000118E8
// DataOut: a0 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:252 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:s2 & 254 a3:0x0000000000002000

l000000000001742C:
	branch (a5_65 & -64) == 65152 l0000000000017598
// DataOut: a5 gp s10 s2 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:252 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:s2 & 254 a3:0x0000000000002000

l0000000000017598:
	word64 a0_84
	*a0Out = 0x0000000000011900
// DataOut: a0 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:(s2 << 0x00000008 | s3) & -64 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:<invalid> a3:0x0000000000002000

l000000000001743C:
	branch s2 == 255 l00000000000175A4
// DataOut: a5 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:(s2 << 0x00000008 | s3) & -64 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:<invalid> a3:0x0000000000002000

l00000000000175A4:
	word64 a0_82
	*a0Out = 0x0000000000011748
// DataOut: a0 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:(s2 << 0x00000008 | s3) & -64 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:255 a3:0x0000000000002000

l0000000000017444:
	word64 a0_78
	*a0Out = 0x0000000000011710
	branch (a5_65 & -2) == 8194 l00000000000175B0
// DataOut: a0 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:(s2 << 0x00000008 | s3) & -64 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid> a5:s2 << 0x00000008 | s3 a4:255 a3:0x0000000000002000

l00000000000175B0:
	word64 a0_80
	*a0Out = 0x0000000000011918
// DataOut: a0 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:(s2 << 0x00000008 | s3) & -64 a1:0x00000000000108D0 a0:0x0000000000011710 t3:<invalid> t1:<invalid> a5:(s2 << 0x00000008 | s3) & -2 a4:255 a3:<invalid>

l00000000000174B8:
	word64 a0_56
	*a0Out = 0x00000000000118B8
	word64 s0_57
	*s0Out = Mem0[v3 + 32:word64]
	word64 s2_59
	*s2Out = Mem0[v3 + 16:word64]
	word64 s3_60
	*s3Out = Mem0[v3 + 8:word64]
	return v3 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:s0 t3:<invalid> t1:<invalid>

l0000000000017508:
	word64 a0_41
	*a0Out = 0x0000000000011870
// DataOut: a0 gp s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:s0 t3:<invalid> t1:<invalid>

l0000000000017458:
	word64 s0_35
	*s0Out = Mem0[v3 + 32:word64]
	word64 s2_37
	*s2Out = Mem0[v3 + 16:word64]
	word64 s3_38
	*s3Out = Mem0[v3 + 8:word64]
	return v3 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 s1:0x0000000000010480 a2:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> a5:<invalid> a4:<invalid> a3:<invalid>

fn00000000000174DC_exit:
// DataOut: a0 s0 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:v3 + 48 s1:<invalid> a2:<invalid> a1:<invalid> ra:<invalid> a0:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> t3:<invalid> t1:<invalid> a5:<invalid> a4:<invalid> a3:<invalid>



word64 fn00000000000175BC(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn00000000000175BC_entry:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000175BC:
	word64 a0_127
	memset()
	inet_pton()
	word64 sp_120 = fp + -416
	word64 s2_131 = a1
	branch false l00000000000177B4
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000177B4:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -416 a5:<invalid> s0:a2 a2:fp + -408 s4:a0 s2:a1 a0:10 a1:a2 s6:a3 t3:<invalid> t1:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177BC:
	__fprintf_chk()
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -416 a5:<invalid> s0:a2 a2:fp + -408 s4:a0 s2:a1 a0:10 a1:a2 s6:a3 t3:<invalid> t1:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017628:
	Mem102[a2 + 8:word64] = fn00000000000163B0(gp, fp + -408)
	inet_ntop()
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -416 a5:<invalid> s0:a2 a2:fp + -408 s4:a0 s2:a1 a0:10 a1:a2 s6:a3 t3:<invalid> t1:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017650:
	__strdup()
	Mem129[a2:word64] = fp + -360
	word64 s5_130 = 128
	branch s5_130 < a1 l00000000000177DC
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177DC:
	branch (word64) Mem129[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177E4:
	__fprintf_chk()
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017664:
	branch a1 < 0x0000000000000000 l0000000000017868
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017868:
	s2_131 = s5_130
// DataOut: gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017668:
	s5_130 = a1
// DataOut: gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001766C:
	Mem134[a2 + 160:word32] = s5_130
	word64 s3_137
	word64 a0_138 = fn000000000001730C(gp, s5_130, fp + -392, out s3_137)
	Mem139[a2 + 48:word64] = a0_138
	branch a0_138 == 0x0000000000000000 l00000000000178F8
// DataOut: gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178F8:
	branch (word64) Mem139[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s9:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017900:
	__fprintf_chk()
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s9:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017688:
	word64 s8_140 = fp + -376
	word64 a5_141 = fp + -408
	word64 s9_142 = fp + -392
	word64 a2_143 = fp + -376
	word64 a3_144 = fp + -392
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s9:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001769C:
	Mem153[a2_143:byte] = (word64) Mem139[a5_141:byte] & (word64) Mem139[a3_144:byte]
	a5_141 = a5_141 + 1
	a3_144 = a3_144 + 1
	a2_143 = a2_143 + 1
	branch fp + -392 != a5_141 l000000000001769C
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176BC:
	inet_ntop()
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s3 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176D4:
	__strdup()
	Mem160[a2 + 32:word64] = s3_137
	Mem163[a2 + 16:word64] = fn00000000000163B0(gp, fp + -376)
	word64 s0_166
	word64 a0_167
	word64 s2_168
	word64 s3_169
	sp_120 = fn00000000000173D4(fp + -376, s2_131, out s0_166, out a0_167, out s2_168, out s3_169)
	Mem171[s0_166 + 184:word64] = a0_167
	Mem175[s0_166 + 24:word64] = fn0000000000018118(gp, sp_120 + 40, s5_130)
	branch s2_168 != 128 l0000000000017870
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017870:
	__strdup()
	Mem231[s0_166 + 168:word64] = s3_169
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001787C:
	s8_140 = s8_140 + 1
	Mem239[s8_140 + 4095:byte] = (word64) Mem231[s9_142:byte] ^ -1 | (word64) Mem231[s8_140:byte]
	s9_142 = s9_142 + 1
	branch s3_169 != s8_140 l000000000001787C
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001789C:
	inet_ntop()
	branch 10 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017768:
	branch (word64) Mem102[gp + -2028:int32] == 0x0000000000000000 l0000000000017804
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> a7:46 t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017804:
	fwrite()
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> a7:46 t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178B4:
	__strdup()
	Mem247[s0_166 + 176:word64] = s3_169
	word64 a5_246 = 128
	branch (int64) (a5_246 - s2_168) != a5_246 l0000000000017728
// DataOut: gp s0 s10 s2 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178D0:
// DataOut: gp s0 s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017714:
	word64 a5_225 = Mem175[s0_166 + 32:word64]
	Mem228[s0_166 + 168:word64] = a5_225
	Mem229[s0_166 + 176:word64] = a5_225
// DataOut: gp s0 s10 s2 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017728:
// DataOut: gp s0 s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017740:
	snprintf()
	branch a3 << 0x00000011 < 0x0000000000000000 l00000000000178DC
// DataOut: gp s0 s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178DC:
	fn0000000000017D10(gp, sp_120 + 8, s0_166 + 64, s0_166 + 72, s0_166 + 80)
// DataOut: gp s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:0x0000000000011990 s4:<invalid> s2:<invalid> a0:<invalid> a1:64 s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:46 a6:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017758:
	branch (a3 & 1) != 0x0000000000000000 l0000000000017824
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> a7:46 t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017824:
	word64 a0_197 = fn00000000000168E4(gp, 10, sp_120 + 8)
	Mem198[s0_166 + 56:word64] = a0_197
	branch a0_197 != 0x0000000000000000 l0000000000017760
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> a7:46 t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017838:
	branch (word64) Mem198[gp + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017840:
	__sprintf_chk()
	herror()
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017770:
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017760:
	a0_127 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s8:<invalid> s9:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017774:
	branch Mem0[sp_120 + 312:word64] != Mem0[gp + -1936:word64] l0000000000017920
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s3:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017920:
	__stack_chk_fail()
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017920_thunk_fn0000000000017924:
	return fn0000000000017924(gp)
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017780:
	return a0_127
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000175BC_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> t3:<invalid> t1:<invalid> s3:<invalid> a4:<invalid> ra:<invalid> s1:<invalid> s5:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017924(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 t1 t3
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn0000000000017924_entry:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017924:
	word64 s0_120
	branch Mem0[gp + -2016:word64] == 0x0000000000000000 l00000000000179B8
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000179B8:
	s0_120 = (word64) Mem0[gp + -2024:int32]
	branch s0_120 != 0x0000000000000000 l000000000001795C
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000179C0:
	dlopen()
	Mem67[gp + 2080:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017B14
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017B14:
	__snprintf_chk()
	s0_120 = -1
	Mem137[gp + 2072:word32] = s0_120
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000179DC:
	dlsym()
	Mem72[gp + 2152:word64] = 0x0000000000012A38
	dlsym()
	Mem79[gp + 2144:word64] = 0x0000000000012A38
	dlsym()
	Mem84[gp + 2136:word64] = 0x0000000000012A38
	dlsym()
	Mem89[gp + 2120:word64] = 0x0000000000012A38
	dlsym()
	Mem94[gp + 2112:word64] = 0x0000000000012A38
	dlsym()
	Mem99[gp + 2104:word64] = 0x0000000000012A38
	dlsym()
	Mem104[gp + 2096:word64] = 0x0000000000012A38
	dlsym()
	Mem109[gp + 2088:word64] = 0x0000000000012A38
	dlsym()
	Mem110[gp + 2128:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AAC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB4:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB8:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ABC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ACC:
	word64 a0_114 = Mem110[0x0000000000012B58:word64]
	word64 a1_115 = Mem110[0x0000000000012B60:word64]
	word64 a2_116 = Mem110[0x0000000000012B68:word64]
	word64 a3_117 = Mem110[0x0000000000012B70:word64]
	word64 a4_118 = (word64) Mem110[0x0000000000012B78:int32]
	Mem121[gp + -800:word64] = Mem110[0x0000000000012B50:word64]
	Mem122[gp + -792:word64] = a0_114
	Mem123[gp + -784:word64] = a1_115
	Mem124[gp + -776:word64] = a2_116
	Mem125[gp + -768:word64] = a3_117
	Mem126[gp + -760:word32] = a4_118
	s0_120 = -1
	Mem127[gp + 2072:word32] = s0_120
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC4:
	Mem128[gp + 2072:word32] = 0x0000000000000000
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:0x0000000000012A38 a1:0x0000000000012B38 a0:0x0000000000012A38 t3:<invalid> t1:<invalid> s3:0x0000000000012A38 s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001795C:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l000000000001796C
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017964:
	branch (word64) Mem0[gp + -800:byte] != 0x0000000000000000 l00000000000179A8
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000179A8:
	fputs()
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001796C:
	s0_120 = (word64) Mem0[gp + -2024:int32]
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> a1:<invalid> a0:gp + -800 t3:<invalid> t1:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017970:
	return s0_120
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> t3:<invalid> t1:<invalid> s3:0x0000000000012A38 a3:<invalid> a4:<invalid> a2:<invalid> s2:0x0000000000012A38 s5:0x0000000000012A38 s6:0x0000000000012A38 s7:0x0000000000012A38 s8:0x0000000000012A38 s9:0x0000000000012A38 a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017924_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 ra:ra a0:<invalid> s1:s1 s2:s2 s3:s3 s4:s4 s5:s5 s6:s6 s7:s7 s8:s8 s9:s9 a1:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017B40(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1 t3
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017B40_entry:
// DataOut: a0 a1 a2 a3 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017B40:
	branch fn0000000000017924(gp) == 0x0000000000000000 l0000000000017BB0
// DataOut: gp s0 s1 s10 s2 s3 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000017BB0:
	word64 a0_81 = fn00000000000182B4(a0)
	word64 a5_83 = Mem0[gp + -1944:word64]
	word64 sp_85
	word64 s0_86
	word64 s1_87
	word64 s2_88
	word64 s3_89
	word64 s4_90
	word64 ra_91
	word64 s5_92
	word64 s6_93
	word64 s7_94
	word64 a0_95
	word64 a1_96
	word64 a2_97
	word64 a3_98
	word64 a4_99
	word64 a5_100
	word64 gp_101
	word64 fa4_102
	word64 fa5_103
	word64 t1_104
	word64 fa3_105
	call a5_83 (retsize: 0; depth: 80)
		uses: a0_81,a1,a2,a3,a4,a5_83,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra,s0_22,s1_28,s2_26,s3_24,s4_30,s5,s6,s7_84,sp_2,t1
		defs: a0_95,a1_96,a2_97,a3_98,a4_99,a5_100,fa3_105,fa4_102,fa5_103,gp_101,ra_91,s0_86,s1_87,s2_88,s3_89,s4_90,s5_92,s6_93,s7_94,sp_85,t1_104
	word64 a5_106 = Mem0[gp_101 + -1952:word64]
	word64 sp_109
	word64 s0_110
	word64 s1_111
	word64 s2_112
	word64 s3_113
	word64 s4_114
	word64 ra_115
	word64 s5_116
	word64 s6_117
	word64 s7_118
	word64 a0_119
	word64 a1_120
	word64 a2_121
	word64 a3_122
	word64 a4_123
	word64 a5_124
	word64 fa4_126
	word64 fa5_127
	word64 t1_128
	word64 fa3_129
	word64 gp_125
	call a5_106 (retsize: 0; depth: 80)
		uses: a0_108,a1_107,a2_97,a3_98,a4_99,a5_106,fa3_105,fa4_102,fa5_103,gp_101,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_91,s0_86,s1_87,s2_88,s3_89,s4_90,s5_92,s6_93,s7_94,sp_85,t1_104
		defs: a0_119,a1_120,a2_121,a3_122,a4_123,a5_124,fa3_129,fa4_126,fa5_127,gp_125,ra_115,s0_110,s1_111,s2_112,s3_113,s4_114,s5_116,s6_117,s7_118,sp_109,t1_128
	branch a0_119 == 0x0000000000000000 l0000000000017C3C
// DataOut: a0 gp s0 s1 s10 s2 s3 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s3:a1 s2:a2 s1:a3 s4:a4 a5:<invalid> a0:<invalid> a1:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017BDC:
	word64 a5_258 = Mem0[gp_125 + -1992:word64]
	word64 a4_259 = 1
	Mem261[a0_119 + 76:word32] = a4_259
	word64 sp_263
	word64 s0_264
	word64 s1_265
	word64 s2_266
	word64 s3_267
	word64 s4_268
	word64 ra_269
	word64 s5_270
	word64 s6_271
	word64 s7_272
	word64 a0_273
	word64 a1_274
	word64 a2_275
	word64 a3_276
	word64 a4_277
	word64 a5_278
	word64 gp_279
	word64 fa4_280
	word64 fa5_281
	word64 t1_282
	word64 fa3_283
	call a5_258 (retsize: 0; depth: 80)
		uses: a0_119,a1_262,a2_121,a3_122,a4_259,a5_258,fa3_129,fa4_126,fa5_127,gp_125,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_115,s0_130,s1_111,s2_112,s3_113,s4_114,s5_116,s6_117,s7_118,sp_109,t1_128
		defs: a0_273,a1_274,a2_275,a3_276,a4_277,a5_278,fa3_283,fa4_280,fa5_281,gp_279,ra_269,s0_264,s1_265,s2_266,s3_267,s4_268,s5_270,s6_271,s7_272,sp_263,t1_282
	branch a0_273 < 0x0000000000000000 l0000000000017B84
// DataOut: gp s0 s1 s10 s2 s3 s6 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017BFC:
	word64 a5_285 = Mem261[gp_279 + -1960:word64]
	word64 sp_288
	word64 s0_289
	word64 s1_290
	word64 s2_291
	word64 s3_292
	word64 s4_293
	word64 ra_294
	word64 s5_295
	word64 s6_296
	word64 s7_297
	word64 a0_298
	word64 a1_299
	word64 a2_300
	word64 a3_301
	word64 a4_302
	word64 a5_303
	word64 gp_304
	word64 fa4_305
	word64 fa5_306
	word64 t1_307
	word64 fa3_308
	call a5_285 (retsize: 0; depth: 80)
		uses: a0_287,a1_286,a2_275,a3_276,a4_277,a5_285,fa3_283,fa4_280,fa5_281,gp_279,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_269,s0_264,s1_265,s2_266,s3_267,s4_268,s5_270,s6_284,s7_272,sp_263,t1_282
		defs: a0_298,a1_299,a2_300,a3_301,a4_302,a5_303,fa3_308,fa4_305,fa5_306,gp_304,ra_294,s0_289,s1_290,s2_291,s3_292,s4_293,s5_295,s6_296,s7_297,sp_288,t1_307
	branch a0_298 == 0x0000000000000000 l0000000000017C18
// DataOut: a0 gp s1 s10 s2 s3 s6 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a4:1 s6:1 a3:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C10:
	__strdup()
	Mem356[s3_292:word64] = a0_298
// DataOut: gp s1 s10 s2 s6 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C18:
	word64 a5_309 = Mem261[gp_304 + -1968:word64]
	word64 sp_311
	word64 s0_312
	word64 s1_313
	word64 s2_314
	word64 s3_315
	word64 s4_316
	word64 ra_317
	word64 s5_318
	word64 s6_319
	word64 s7_320
	word64 a0_321
	word64 a1_322
	word64 a2_323
	word64 a3_324
	word64 a4_325
	word64 a5_326
	word64 gp_327
	word64 fa4_328
	word64 fa5_329
	word64 t1_330
	word64 fa3_331
	call a5_309 (retsize: 0; depth: 80)
		uses: a0_310,a1_299,a2_300,a3_301,a4_302,a5_309,fa3_308,fa4_305,fa5_306,gp_304,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_294,s0_289,s1_290,s2_291,s3_292,s4_293,s5_295,s6_296,s7_297,sp_288,t1_307
		defs: a0_321,a1_322,a2_323,a3_324,a4_325,a5_326,fa3_331,fa4_328,fa5_329,gp_327,ra_317,s0_312,s1_313,s2_314,s3_315,s4_316,s5_318,s6_319,s7_320,sp_311,t1_330
	branch a0_321 == 0x0000000000000000 l0000000000017C30
// DataOut: a0 gp s1 s10 s2 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 t3:<invalid> t1:<invalid> a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C28:
	__strdup()
	Mem355[s2_314:word64] = a0_321
// DataOut: gp s1 s10 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 t3:<invalid> t1:<invalid> a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C30:
	word64 a5_332 = Mem261[gp_327 + -1976:word64]
	word64 sp_334
	word64 s0_335
	word64 s1_336
	word64 s2_337
	word64 s3_338
	word64 s4_339
	word64 ra_340
	word64 s5_341
	word64 s6_342
	word64 s7_343
	word64 a0_344
	word64 a1_345
	word64 a2_346
	word64 a3_347
	word64 a4_348
	word64 a5_349
	word64 fa4_351
	word64 fa5_352
	word64 t1_353
	word64 fa3_354
	call a5_332 (retsize: 0; depth: 80)
		uses: a0_333,a1_322,a2_323,a3_324,a4_325,a5_332,fa3_331,fa4_328,fa5_329,gp_327,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_317,s0_312,s1_313,s2_314,s3_315,s4_316,s5_318,s6_319,s7_320,sp_311,t1_330
		defs: a0_344,a1_345,a2_346,a3_347,a4_348,a5_349,fa3_354,fa4_351,fa5_352,gp_350,ra_340,s0_335,s1_336,s2_337,s3_338,s4_339,s5_341,s6_342,s7_343,sp_334,t1_353
// DataOut: gp s1 s10 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 t3:<invalid> t1:<invalid> a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C3C:
	word64 a5_132 = Mem0[gp_125 + -1952:word64]
	word64 sp_135
	word64 s0_136
	word64 s1_137
	word64 s2_138
	word64 s3_139
	word64 s4_140
	word64 ra_141
	word64 s5_142
	word64 s6_143
	word64 s7_144
	word64 a0_145
	word64 a1_146
	word64 a2_147
	word64 a3_148
	word64 a4_149
	word64 a5_150
	word64 fa4_152
	word64 fa5_153
	word64 t1_154
	word64 fa3_155
	word64 gp_151
	call a5_132 (retsize: 0; depth: 80)
		uses: a0_134,a1_133,a2_121,a3_122,a4_123,a5_132,fa3_129,fa4_126,fa5_127,gp_131,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_115,s0_130,s1_111,s2_112,s3_113,s4_114,s5_116,s6_117,s7_118,sp_109,t1_128
		defs: a0_145,a1_146,a2_147,a3_148,a4_149,a5_150,fa3_155,fa4_152,fa5_153,gp_151,ra_141,s0_136,s1_137,s2_138,s3_139,s4_140,s5_142,s6_143,s7_144,sp_135,t1_154
	word64 s0_156 = a0_145
	branch a0_145 == 0x0000000000000000 l0000000000017CF4
// DataOut: a0 gp s0 s1 s10 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> s6:1 t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017CF4:
	word64 a5_233 = Mem0[gp_151 + -1952:word64]
	word64 sp_236
	word64 s0_237
	word64 s1_238
	word64 s2_239
	word64 s3_240
	word64 s4_241
	word64 ra_242
	word64 s5_243
	word64 s6_244
	word64 s7_245
	word64 a0_246
	word64 a1_247
	word64 a2_248
	word64 a3_249
	word64 a4_250
	word64 a5_251
	word64 fa4_253
	word64 fa5_254
	word64 t1_255
	word64 fa3_256
	call a5_233 (retsize: 0; depth: 80)
		uses: a0_235,a1_234,a2_147,a3_148,a4_149,a5_233,fa3_155,fa4_152,fa5_153,gp_151,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_141,s0_156,s1_137,s2_138,s3_139,s4_140,s5_142,s6_143,s7_144,sp_135,t1_154
		defs: a0_246,a1_247,a2_248,a3_249,a4_250,a5_251,fa3_256,fa4_253,fa5_254,gp_252,ra_242,s0_237,s1_238,s2_239,s3_240,s4_241,s5_243,s6_244,s7_245,sp_236,t1_255
	s0_156 = a0_246
	branch a0_246 != 0x0000000000000000 l0000000000017C54
// DataOut: a0 gp s0 s1 s10 s7 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:2 s3:a1 s2:a2 s1:a3 s4:a4 a0:2 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017D0C:
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:6 s3:a1 s2:a2 s1:a3 s4:a4 a0:6 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C54:
	word64 a5_160 = Mem0[gp_151 + -1984:word64]
	word64 a4_161 = 1
	Mem163[s0_156 + 76:word32] = a4_161
	word64 sp_165
	word64 s0_166
	word64 s1_167
	word64 s2_168
	word64 s3_169
	word64 s4_170
	word64 ra_171
	word64 s5_172
	word64 s6_173
	word64 s7_174
	word64 a0_175
	word64 a1_176
	word64 a2_177
	word64 a3_178
	word64 a4_179
	word64 a5_180
	word64 gp_181
	word64 fa4_182
	word64 fa5_183
	word64 t1_184
	word64 fa3_185
	call a5_160 (retsize: 0; depth: 80)
		uses: a0_145,a1_164,a2_147,a3_148,a4_161,a5_160,fa3_155,fa4_152,fa5_153,gp_157,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_141,s0_158,s1_137,s2_138,s3_139,s4_140,s5_142,s6_143,s7_159,sp_135,t1_154
		defs: a0_175,a1_176,a2_177,a3_178,a4_179,a5_180,fa3_185,fa4_182,fa5_183,gp_181,ra_171,s0_166,s1_167,s2_168,s3_169,s4_170,s5_172,s6_173,s7_174,sp_165,t1_184
	branch a0_175 == 0x0000000000000000 l0000000000017C94
// DataOut: a0 a4 gp s1 s10 s2 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C74:
	word64 a0_220 = Mem163[a0_175 + 32:word64]
	branch a0_220 == 0x0000000000000000 l0000000000017C84
// DataOut: a0 a4 gp s1 s10 s2 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C7C:
	__strdup()
	Mem232[s1_167:word64] = a0_220
// DataOut: a4 gp s10 s2 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C84:
	branch (word64) ((real32) Mem163[a0_175 + 52:real32] == (real32) ((real32) 0x0000000000000000)) == 0x0000000000000000 l0000000000017CC8
// DataOut: a4 a5 gp s10 s2 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 t3:<invalid> t1:<invalid> a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017CC8:
	__asprintf_chk()
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 t3:<invalid> t1:<invalid> fa4:<invalid> fa5:(real32) 0x0000000000000000 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C94:
	word64 t1_197 = Mem163[gp_181 + -1976:word64]
	word64 sp_199
	word64 s0_200
	word64 s1_201
	word64 s2_202
	word64 s3_203
	word64 s4_204
	word64 ra_205
	word64 s5_206
	word64 s6_207
	word64 s7_208
	word64 a0_209
	word64 a1_210
	word64 a2_211
	word64 a3_212
	word64 a4_213
	word64 a5_214
	word64 gp_215
	word64 fa4_216
	word64 fa5_217
	word64 t1_218
	word64 fa3_219
	call t1_197 (retsize: 0;)
		uses: a0_187,a1_176,a2_177,a3_178,a4_179,a5_180,fa3_185,fa4_182,fa5_183,gp_181,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_188,s0_189,s1_190,s2_191,s3_192,s4_193,s5_194,s6_195,s7_196,sp_198,t1_197
		defs: a0_209,a1_210,a2_211,a3_212,a4_213,a5_214,fa3_219,fa4_216,fa5_217,gp_215,ra_205,s0_200,s1_201,s2_202,s3_203,s4_204,s5_206,s6_207,s7_208,sp_199,t1_218
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> fa3:<invalid> s6:1 a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017B84:
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:<invalid> s6:1 a3:<invalid> t3:<invalid> t1:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017B40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s3:s3 s2:s2 s1:s1 s4:s4 ra:ra s5:s5 s6:s6 s7:s7 a0:<invalid> a5:<invalid> a1:<invalid> a4:<invalid> t1:<invalid> a3:<invalid> t3:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> a6:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017D10(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1 t3
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017D10_entry:
// DataOut: a0 a1 a2 a3 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017D10:
	word64 a0_32 = fn0000000000017924(gp)
	branch a0_32 == 0x0000000000000000 l0000000000017D80
// DataOut: gp s0 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000017D80:
	word64 a5_84 = Mem0[gp + -1944:word64]
	word64 sp_85
	word64 s0_86
	word64 s2_87
	word64 s3_88
	word64 s4_89
	word64 s5_90
	word64 ra_91
	word64 s1_92
	word64 s6_93
	word64 s7_94
	word64 a0_95
	word64 a1_96
	word64 a2_97
	word64 a3_98
	word64 a4_99
	word64 a5_100
	word64 gp_101
	word64 a6_102
	word64 fa4_103
	word64 fa5_104
	word64 t1_105
	word64 fa3_106
	call a5_84 (retsize: 0; depth: 80)
		uses: a0_32,a1,a2,a3,a4,a5_84,a6,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra,s0_22,s1,s2_28,s3_26,s4_24,s5_30,s6,s7,sp_2,t1
		defs: a0_95,a1_96,a2_97,a3_98,a4_99,a5_100,a6_102,fa3_106,fa4_103,fa5_104,gp_101,ra_91,s0_86,s1_92,s2_87,s3_88,s4_89,s5_90,s6_93,s7_94,sp_85,t1_105
	word64 a5_107 = Mem0[gp_101 + -1952:word64]
	word64 sp_110
	word64 s0_111
	word64 s2_112
	word64 s3_113
	word64 s4_114
	word64 s5_115
	word64 ra_116
	word64 s1_117
	word64 s6_118
	word64 s7_119
	word64 a0_120
	word64 a1_121
	word64 a2_122
	word64 a3_123
	word64 a4_124
	word64 a5_125
	word64 a6_127
	word64 fa4_128
	word64 fa5_129
	word64 t1_130
	word64 fa3_131
	word64 gp_126
	call a5_107 (retsize: 0; depth: 80)
		uses: a0_109,a1_108,a2_97,a3_98,a4_99,a5_107,a6_102,fa3_106,fa4_103,fa5_104,gp_101,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_91,s0_86,s1_92,s2_87,s3_88,s4_89,s5_90,s6_93,s7_94,sp_85,t1_105
		defs: a0_120,a1_121,a2_122,a3_123,a4_124,a5_125,a6_127,fa3_131,fa4_128,fa5_129,gp_126,ra_116,s0_111,s1_117,s2_112,s3_113,s4_114,s5_115,s6_118,s7_119,sp_110,t1_130
	branch a0_120 == 0x0000000000000000 l0000000000017E18
// DataOut: a0 gp s0 s1 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a0:<invalid> a1:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017DA0:
	word64 a3_274 = Mem0[gp_126 + -2000:word64]
	word64 a6_277 = 1
	Mem278[a0_120 + 76:word32] = a6_277
	word64 sp_281
	word64 s0_282
	word64 s2_283
	word64 s3_284
	word64 s4_285
	word64 s5_286
	word64 ra_287
	word64 s1_288
	word64 s6_289
	word64 s7_290
	word64 a0_291
	word64 a1_292
	word64 a2_293
	word64 a3_294
	word64 a4_295
	word64 a5_296
	word64 gp_297
	word64 a6_298
	word64 fa4_299
	word64 fa5_300
	word64 t1_301
	word64 fa3_302
	call a3_274 (retsize: 0; depth: 80)
		uses: a0_120,a1_279,a2_280,a3_274,a4_275,a5_276,a6_277,fa3_131,fa4_128,fa5_129,gp_126,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_116,s0_111,s1_132,s2_112,s3_113,s4_114,s5_115,s6_118,s7_119,sp_110,t1_130
		defs: a0_291,a1_292,a2_293,a3_294,a4_295,a5_296,a6_298,fa3_302,fa4_299,fa5_300,gp_297,ra_287,s0_282,s1_288,s2_283,s3_284,s4_285,s5_286,s6_289,s7_290,sp_281,t1_301
	branch a0_291 < 0x0000000000000000 l0000000000017D54
// DataOut: gp s0 s1 s10 s2 s3 s4 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:12 s1:12 t3:<invalid> t1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017DD8:
	word64 a5_304 = Mem278[gp_297 + -1960:word64]
	word64 sp_307
	word64 s0_308
	word64 s2_309
	word64 s3_310
	word64 s4_311
	word64 s5_312
	word64 ra_313
	word64 s1_314
	word64 s6_315
	word64 s7_316
	word64 a0_317
	word64 a1_318
	word64 a2_319
	word64 a3_320
	word64 a4_321
	word64 a5_322
	word64 gp_323
	word64 a6_324
	word64 fa4_325
	word64 fa5_326
	word64 t1_327
	word64 fa3_328
	call a5_304 (retsize: 0; depth: 80)
		uses: a0_306,a1_305,a2_293,a3_294,a4_295,a5_304,a6_298,fa3_302,fa4_299,fa5_300,gp_297,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_287,s0_282,s1_288,s2_283,s3_284,s4_285,s5_286,s6_289,s7_303,sp_281,t1_301
		defs: a0_317,a1_318,a2_319,a3_320,a4_321,a5_322,a6_324,fa3_328,fa4_325,fa5_326,gp_323,ra_313,s0_308,s1_314,s2_309,s3_310,s4_311,s5_312,s6_315,s7_316,sp_307,t1_327
	branch a0_317 == 0x0000000000000000 l0000000000017DF4
// DataOut: a0 gp s0 s10 s2 s3 s4 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017DEC:
	__strdup()
	Mem378[s4_311:word64] = a0_317
// DataOut: gp s0 s10 s2 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017DF4:
	word64 a5_329 = Mem278[gp_323 + -1968:word64]
	word64 sp_331
	word64 s0_332
	word64 s2_333
	word64 s3_334
	word64 s4_335
	word64 s5_336
	word64 ra_337
	word64 s1_338
	word64 s6_339
	word64 s7_340
	word64 a0_341
	word64 a1_342
	word64 a2_343
	word64 a3_344
	word64 a4_345
	word64 a5_346
	word64 gp_347
	word64 a6_348
	word64 fa4_349
	word64 fa5_350
	word64 t1_351
	word64 fa3_352
	call a5_329 (retsize: 0; depth: 80)
		uses: a0_330,a1_318,a2_319,a3_320,a4_321,a5_329,a6_324,fa3_328,fa4_325,fa5_326,gp_323,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_313,s0_308,s1_314,s2_309,s3_310,s4_311,s5_312,s6_315,s7_316,sp_307,t1_327
		defs: a0_341,a1_342,a2_343,a3_344,a4_345,a5_346,a6_348,fa3_352,fa4_349,fa5_350,gp_347,ra_337,s0_332,s1_338,s2_333,s3_334,s4_335,s5_336,s6_339,s7_340,sp_331,t1_351
	branch a0_341 == 0x0000000000000000 l0000000000017E0C
// DataOut: a0 gp s0 s10 s2 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E04:
	__strdup()
	Mem377[s3_334:word64] = a0_341
// DataOut: gp s0 s10 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E0C:
	word64 a5_353 = Mem278[gp_347 + -1976:word64]
	word64 sp_355
	word64 s0_356
	word64 s2_357
	word64 s3_358
	word64 s4_359
	word64 s5_360
	word64 ra_361
	word64 s1_362
	word64 s6_363
	word64 s7_364
	word64 a0_365
	word64 a1_366
	word64 a2_367
	word64 a3_368
	word64 a4_369
	word64 a5_370
	word64 a6_372
	word64 fa4_373
	word64 fa5_374
	word64 t1_375
	word64 fa3_376
	call a5_353 (retsize: 0; depth: 80)
		uses: a0_354,a1_342,a2_343,a3_344,a4_345,a5_353,a6_348,fa3_352,fa4_349,fa5_350,gp_347,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_337,s0_332,s1_338,s2_333,s3_334,s4_335,s5_336,s6_339,s7_340,sp_331,t1_351
		defs: a0_365,a1_366,a2_367,a3_368,a4_369,a5_370,a6_372,fa3_376,fa4_373,fa5_374,gp_371,ra_361,s0_356,s1_362,s2_357,s3_358,s4_359,s5_360,s6_363,s7_364,sp_355,t1_375
// DataOut: gp s0 s10 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E18:
	word64 a5_134 = Mem0[gp_126 + -1952:word64]
	word64 sp_137
	word64 s0_138
	word64 s2_139
	word64 s3_140
	word64 s4_141
	word64 s5_142
	word64 ra_143
	word64 s1_144
	word64 s6_145
	word64 s7_146
	word64 a0_147
	word64 a1_148
	word64 a2_149
	word64 a3_150
	word64 a4_151
	word64 a5_152
	word64 a6_154
	word64 fa4_155
	word64 fa5_156
	word64 t1_157
	word64 fa3_158
	word64 gp_153
	call a5_134 (retsize: 0; depth: 80)
		uses: a0_136,a1_135,a2_122,a3_123,a4_124,a5_134,a6_127,fa3_131,fa4_128,fa5_129,gp_133,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_116,s0_111,s1_132,s2_112,s3_113,s4_114,s5_115,s6_118,s7_119,sp_110,t1_130
		defs: a0_147,a1_148,a2_149,a3_150,a4_151,a5_152,a6_154,fa3_158,fa4_155,fa5_156,gp_153,ra_143,s0_138,s1_144,s2_139,s3_140,s4_141,s5_142,s6_145,s7_146,sp_137,t1_157
	word64 s1_159 = a0_147
	branch a0_147 == 0x0000000000000000 l0000000000017EE8
// DataOut: a0 gp s0 s1 s10 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017EE8:
	word64 a5_244 = Mem0[gp_153 + -1952:word64]
	word64 sp_247
	word64 s0_248
	word64 s2_249
	word64 s3_250
	word64 s4_251
	word64 s5_252
	word64 ra_253
	word64 s1_254
	word64 s6_255
	word64 s7_256
	word64 a0_257
	word64 a1_258
	word64 a2_259
	word64 a3_260
	word64 a4_261
	word64 a5_262
	word64 a6_264
	word64 fa4_265
	word64 fa5_266
	word64 t1_267
	word64 fa3_268
	call a5_244 (retsize: 0; depth: 80)
		uses: a0_246,a1_245,a2_149,a3_150,a4_151,a5_244,a6_154,fa3_158,fa4_155,fa5_156,gp_153,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_143,s0_138,s1_159,s2_139,s3_140,s4_141,s5_142,s6_145,s7_146,sp_137,t1_157
		defs: a0_257,a1_258,a2_259,a3_260,a4_261,a5_262,a6_264,fa3_268,fa4_265,fa5_266,gp_263,ra_253,s0_248,s1_254,s2_249,s3_250,s4_251,s5_252,s6_255,s7_256,sp_247,t1_267
	s1_159 = a0_257
	branch a0_257 != 0x0000000000000000 l0000000000017E30
// DataOut: a0 gp s0 s1 s10 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:30 s1:30 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F00:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:31 s1:31 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E30:
	word64 a3_167 = Mem0[gp_153 + -2008:word64]
	word64 a6_170 = 1
	Mem171[s1_159 + 76:word32] = a6_170
	word64 sp_174
	word64 s0_175
	word64 s2_176
	word64 s3_177
	word64 s4_178
	word64 s5_179
	word64 ra_180
	word64 s1_181
	word64 s6_182
	word64 s7_183
	word64 a0_184
	word64 a1_185
	word64 a2_186
	word64 a3_187
	word64 a4_188
	word64 a5_189
	word64 gp_190
	word64 a6_191
	word64 fa4_192
	word64 fa5_193
	word64 t1_194
	word64 fa3_195
	call a3_167 (retsize: 0; depth: 80)
		uses: a0_147,a1_172,a2_173,a3_167,a4_168,a5_169,a6_170,fa3_158,fa4_155,fa5_156,gp_160,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_143,s0_161,s1_162,s2_139,s3_140,s4_141,s5_142,s6_145,s7_146,sp_137,t1_157
		defs: a0_184,a1_185,a2_186,a3_187,a4_188,a5_189,a6_191,fa3_195,fa4_192,fa5_193,gp_190,ra_180,s0_175,s1_181,s2_176,s3_177,s4_178,s5_179,s6_182,s7_183,sp_174,t1_194
	branch a0_184 == 0x0000000000000000 l0000000000017E88
// DataOut: a0 a4 gp s0 s10 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E68:
	word64 a0_231 = Mem171[a0_184 + 32:word64]
	branch a0_231 == 0x0000000000000000 l0000000000017E78
// DataOut: a0 a4 gp s0 s10 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E70:
	__strdup()
	Mem243[s2_176:word64] = a0_231
// DataOut: a4 gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E78:
	branch (word64) ((real32) Mem171[a0_184 + 52:real32] == (real32) ((real32) 0x0000000000000000)) == 0x0000000000000000 l0000000000017EBC
// DataOut: a4 a5 gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 t3:<invalid> t1:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017EBC:
	__asprintf_chk()
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 t3:<invalid> t1:<invalid> fa4:<invalid> fa5:(real32) 0x0000000000000000 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E88:
	word64 t1_207 = Mem171[gp_190 + -1976:word64]
	word64 sp_209
	word64 s0_210
	word64 s2_211
	word64 s3_212
	word64 s4_213
	word64 s5_214
	word64 ra_215
	word64 s1_216
	word64 s6_217
	word64 s7_218
	word64 a0_219
	word64 a1_220
	word64 a2_221
	word64 a3_222
	word64 a4_223
	word64 a5_224
	word64 gp_225
	word64 a6_226
	word64 fa4_227
	word64 fa5_228
	word64 t1_229
	word64 fa3_230
	call t1_207 (retsize: 0;)
		uses: a0_197,a1_185,a2_186,a3_187,a4_188,a5_189,a6_191,fa3_195,fa4_192,fa5_193,gp_190,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_198,s0_199,s1_200,s2_201,s3_202,s4_203,s5_204,s6_205,s7_206,sp_208,t1_207
		defs: a0_219,a1_220,a2_221,a3_222,a4_223,a5_224,a6_226,fa3_230,fa4_227,fa5_228,gp_225,ra_215,s0_210,s1_216,s2_211,s3_212,s4_213,s5_214,s6_217,s7_218,sp_209,t1_229
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017D54:
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 t3:<invalid> t1:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017D10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s4:s4 s3:s3 s2:s2 s5:s5 ra:ra s1:s1 s6:s6 s7:s7 a5:<invalid> a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> t1:<invalid> t3:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017F04(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 s0 s1 s2 s4 s5 s6 sp t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 sp
fn0000000000017F04_entry:
// DataOut: a0 a1 a2 a3 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000017F04:
	word64 a1_104
	word64 a0_43
	word64 a5_7 = Mem0[gp + -1936:word64]
	fn00000000000182B4(a0)
	branch a1 == 32 l0000000000018048
// DataOut: a0 gp s0 s10 s4 s5 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0048(64)

l0000000000018048:
	__asprintf_chk()
	a1_104 = 1
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017F60:
	a1_104 = 24
	branch a1 == a1_104 l0000000000018070
// DataOut: a1 gp s0 s10 s4 s5 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000018070:
	__asprintf_chk()
	a1_104 = 1
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017F68:
	word64 a0_87 = 16
	branch a1 == a0_87 l00000000000180D8
// DataOut: a0 a1 gp s0 s10 s4 s5 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l00000000000180D8:
	__asprintf_chk()
	a1_104 = 1
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017F70:
	word64 a5_88 = 8
	branch a1 == a5_88 l00000000000180F8
// DataOut: a0 a1 a5 gp s0 s10 s4 s5 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l00000000000180F8:
	__asprintf_chk()
	a1_104 = 1
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017F78:
	branch a1_104 <u a1 l0000000000017FBC
// DataOut: a0 a1 a5 gp s0 s10 s4 s5 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017FBC:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	__asprintf_chk()
	a1_104 = 1
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017F7C:
	branch a0_87 <u a1 l0000000000018094
// DataOut: a1 a5 gp s0 s10 s4 s5 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000018094:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	__asprintf_chk()
	a1_104 = 1
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017F80:
	branch a5_88 <u a1 l0000000000018008
// DataOut: a1 gp s10 s4 s5 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000018008:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	__asprintf_chk()
	a1_104 = 1
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l0000000000017FF8:
	branch fp == -79 l0000000000017F84
// DataOut: a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:fp + -80 a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0048(64)

l0000000000018000:
	a0_43 = 0x0000000000000000
// DataOut: a0 a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:-1 s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:fp + -80 a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0048(64)

l0000000000017F84:
	a0_43 = 0
// DataOut: a0 a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0048(64)

l0000000000017F88:
	branch a5_7 != Mem0[gp + -1936:word64] l0000000000018114
// DataOut: a0 a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:0x0000000000000000 a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018114:
	__stack_chk_fail()
// DataOut: a0 a1 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:0x0000000000000000 a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018114_thunk_fn0000000000018118:
	return fn0000000000018118(gp, a0_43, a1_104)
// DataOut: a0 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:0x0000000000000000 a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F94:
	return a0_43
// DataOut: a0 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:0x0000000000000000 a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017F04_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:<invalid> s4:<invalid> a1:<invalid> t1:<invalid> t3:<invalid> s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> ra:ra s3:s3 t4:<invalid> t5:<invalid> a7:<invalid> t6:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000018118(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 sp t1 t3 t4 t5 t6
// Preserved: ra s0 sp
fn0000000000018118_entry:
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000018118:
	word64 a0_144
	word64 a5_7 = Mem0[gp + -1936:word64]
	word64 t4_11 = a1 & 3
	branch (a1 & 3) != 0x0000000000000000 l00000000000182A8
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9 t4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0018(64)

l00000000000182A8:
	a0_144 = 0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0018(64)

l0000000000018134:
	word64 a4_37 = 4
	word64 t5_38 = (int64) (int32) (a1 >>u 0x00000003)
	branch (a1 & 7) == a4_37 l0000000000018264
// DataOut: a0 a1 a4 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018264:
	branch 9 <u (word64) Mem0[a0 + (((int64) ((word32) ((int64) ((int32) ((int64) ((word32) a1 + a4_37) >>u 0x00000003))) + -1) << 0x00000000) >>u 0x00000000):byte] >>u 0x00000004 l0000000000018294
// DataOut: a0 a5 gp s10 s2 s3 s6 s8 s9 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018290:
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a3:9 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018294:
	t4_11 = 2
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a3:9 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018144:
	branch t5_38 == 0x0000000000000000 l00000000000181FC
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a3:9 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018148:
	word64 a1_122 = (int64) ((word32) t5_38 + -1)
	word64 a4_123 = t4_11
	word64 t1_84 = 9
	word64 a7_85 = 46
	word64 t3_86 = -1
// DataOut: a0 a1 a4 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a3:9 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018190:
	word64 a5_94 = (word64) Mem0[a0 + ((a1_122 << 0x00000000) >>u 0x00000000):byte]
	word64 a3_95 = (int64) ((word32) a4_123 + 1)
	word64 a6_127 = (a5_94 & 15) + 87
	branch t1_84 <u (a5_94 & 15) l00000000000181B4
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181B0:
	a6_127 = (a5_94 & 15) + 48
// DataOut: a0 a1 a3 a4 a5 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181B4:
	Mem105[fp + -16 + ((a4_123 << 0x00000000) >>u 0x00000000) + 3832:byte] = a6_127
	Mem108[fp + -16 + ((a3_95 << 0x00000000) >>u 0x00000000) + 3832:byte] = a7_85
	word64 a2_109 = (int64) ((word32) a4_123 + 2)
	word64 a3_110 = (int64) ((word32) a4_123 + 3)
	word64 a6_111 = (a5_94 >>u 0x00000004) + 48
	branch t1_84 >=u a5_94 >>u 0x00000004 l0000000000018160
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181EC:
	a6_111 = (a5_94 >>u 0x00000004) + 87
// DataOut: a0 a1 a2 a3 a4 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018160:
	Mem119[fp + -16 + ((a2_109 << 0x00000000) >>u 0x00000000) + 3832:byte] = a6_111
	Mem121[fp + -16 + ((a3_110 << 0x00000000) >>u 0x00000000) + 3832:byte] = a7_85
	a1_122 = (int64) ((word32) a1_122 + -1)
	a4_123 = (int64) ((word32) a4_123 + 4)
	branch a1_122 == t3_86 l00000000000181F4
// DataOut: a0 a1 a4 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181F4:
	t4_11 = (int64) ((word32) t4_11 + (int64) ((int32) (t5_38 << 0x00000002)))
// DataOut: gp s10 s2 s3 s6 s8 s9 t4
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:fp + -16 t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181FC:
	word64 t4_68 = fp + -280 + ((t4_11 << 0x00000000) >>u 0x00000000)
	Mem71[t4_68 + 4:word16] = 29281
	Mem74[t4_68:word16] = 28777
	Mem77[t4_68 + 6:word16] = 24944
	Mem80[t4_68 + 2:word16] = 11830
	Mem81[t4_68 + 8:word16] = 46
	__strdup()
	a0_144 = fp + -280
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a3:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0018(64)

l0000000000018248:
	branch a5_7 != Mem0[gp + -1936:word64] l00000000000182B0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a1:<invalid> a7:46 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l00000000000182B0:
	__stack_chk_fail()
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a1:<invalid> a7:46 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l00000000000182B0_thunk_fn00000000000182B4:
	return fn00000000000182B4(a0_144)
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t3:<invalid> t1:<invalid> t5:<invalid> a3:<invalid> a1:<invalid> a7:46 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018254:
	return a0_144
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> t3:<invalid> t1:<invalid> a3:<invalid> a1:<invalid> a7:46 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000018118_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> ra:ra s0:s0 t3:<invalid> t1:<invalid> a3:<invalid> t5:<invalid> a1:<invalid> a7:46 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000182B4(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
fn00000000000182B4_entry:
// DataOut: a0 a1 gp ra s0 s1 s10 s2 s3 s4 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000182B4:
	return (int64) (int32) (a0 >>u 0x00000018) | (int64) ((int32) (a0 << 0x00000018)) | (int64) ((int32) ((a0 & 0x0000000000FF0000) >> 0x00000008)) | (int64) ((int32) ((a0 & 65280) << 0x00000008))
// DataOut: a0 a1 gp ra s0 s1 s10 s2 s3 s4 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000182B4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid>



void fn00000000000182E8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: a0 a1 a2 ra s0 s1 s2 s3 s4 s5 sp
fn00000000000182E8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000182E8:
	word64 s0_43 = 0x0000000000019E18
	branch 0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 == 0x0000000000000000 l0000000000018354
// DataOut: s0 s2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018324:
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:0000000000019E18 s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018334:
	word64 a5_49 = Mem0[s0_43:word64]
	word64 sp_54
	word64 s0_55
	word64 s2_56
	word64 ra_57
	word64 s1_58
	word64 s3_59
	word64 s4_60
	word64 s5_61
	word64 a0_62
	word64 a1_63
	word64 a2_64
	word64 a5_65
	call a5_49 (retsize: 0; depth: 64)
		uses: a0_52,a1_51,a2_50,a5_49,qwLoc08_13,qwLoc10_4,qwLoc18_15,qwLoc20_6,qwLoc28_17,qwLoc30_19,qwLoc38_21,ra,s0_43,s1_53,s2_22,s3_45,s4_46,s5_47,sp_2
		defs: a0_62,a1_63,a2_64,a5_65,ra_57,s0_55,s1_58,s2_56,s3_59,s4_60,s5_61,sp_54
	s0_43 = s0_55 + 8
	branch s2_56 != s1_58 l0000000000018334
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018354:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000182E8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s2:s2 ra:ra s1:s1 s3:s3 s4:s4 s5:s5 a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000018378()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000000000018378_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018378:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000018378_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



