void fn000024B0(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn000024B0_entry:
l000024B0:
	fn000024C4(a5, dwArg04)
	return
fn000024B0_exit:


word32 fn000024C4(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000024B0
// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a6
// Trashed: CVZN a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved: X
fn000024C4_entry:
	ptr32 fp
	word32 a6
l000024C4:
	word32 a7_11 = fp - 0xC<32>
	branch dwArg04 <=u -32<i32> l000024E0
l000024E0:
	word32 d3_23 = SEQ(SLICE(dwArg04 + 3<32>, word16, 16), SLICE(dwArg04, word16, 0) + 3<16> & 0xFFFC<16>)
l000024EA:
	word32 a7_27 = a7_11 - 4<i32>
	Mem29[a7_27:word32] = d3_23
	word32 a7_42 = <invalid>
	word32 a5_40
	word32 d4_43
	word32 a6_41
	branch fn00002510(a5, Mem29[a7_27:word32], out d3_23, out d4_43, out a5_40, out a6_41) != 0<32> l00002506
l000024F6:
	branch d4_43 == 0<32> l00002506
l000024FA:
	Mem62[a7_42:word32] = d3_23
	word32 a7_68 = <invalid>
	a7_11 = a7_68 + 4<i32>
	branch fn00002644(a5_40, Mem62[a7_42:word32], out a5, out a6_41) != 0<32> l000024EA
l00002506:
	return Mem79[a6_41:word32]
l000024D6:
	return a6
fn000024C4_exit:


word32 fn00002510(word32 a5, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000024C4
// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 a7 d0 d3 d4
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn00002510_entry:
	ptr32 fp
	word32 d4
l00002510:
	word32 a0_22
	word32 d0_20 = fn000027B0(a5, dwArg04, out a0_22)
	word32 a6_173 = fp - 4<32>
	word32 d3_112 = dwArg04
	word32 a7_119 = fp - 0xC<32>
	word32 a2_100 = d0_20
	branch d0_20 != 0<32> l0000254A
l0000252A:
	word32 a7_44 = <invalid>
	branch fn000028A0(a0_22, d0_20, a5, dwArg04, out d3_112, out d4, out a5, out a6_173) == -1<i32> l000025A8
l000025A8:
	word32 a6_71 = Mem36[a6_173:word32]
	d3Out = Mem36[a7_44 + 8<i32>:word32]
	d4Out = d4
	a5Out = a5
	a6Out = a6_71
	return 0<i32>
l00002538:
	Mem74[a7_44:word32] = d3_112
	word32 a0_236
	word32 d0_77 = fn000027B0(a5, Mem74[a7_44:word32], out a0_236)
	a7_119 = a7_44 + 4<i32>
	a2_100 = d0_77
	branch d0_77 != 0<32> l0000254A
l00002546:
	a5 = fn000027A0(a5, a6_173, out a6_173)
	a7_119 = <invalid>
l0000254A:
	word32 d0_103 = Mem101[Mem101[a2_100:word32] + 4<i32>:word32]
	word32 d1_107 = Mem101[a2_100 + 4<i32>:word32]
	branch SEQ(SLICE(d0_103, word16, 16), SLICE(d0_103, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_107, word16, 16), SLICE(d1_107, word16, 0) & 0xFFFC<16>) - d3_112 == 4<i32> l00002586
l00002566:
	word32 a7_120 = a7_119 - 4<i32>
	Mem121[a7_120:word32] = d3_112
	Mem123[a7_120 - 4<i32>:word32] = a2_100
	word32 d0_127 = fn000025B4(a5, Mem123[a7_120 - 4<i32>:word32], Mem123[a7_120:word32])
	branch d0_127 == 0<32> l00002586
l00002576:
	word32 d0_143
	__bclr(Mem123[d0_127 + 4<i32>:word32], 1<32>, out d0_143)
	word32 d0_145
	__bset(d0_143, 0<16>, out d0_145)
	Mem147[d0_127 + 4<i32>:word32] = d0_145
l00002586:
	word32 d0_151 = Mem150[a2_100 + 4<i32>:word32]
	Mem155[a2_100 + 4<i32>:word32] = SEQ(SLICE(d0_151, word16, 16), SLICE(d0_151, word16, 0) & 0xFFFC<16>)
	Mem158[a5 + -1332<i32>:word32] = Mem155[a2_100:word32]
	word32 d0_159 = Mem158[a2_100 + 4<i32>:word32]
	word32 a6_175 = Mem158[a6_173:word32]
	d3Out = Mem158[a7_119 + 4<i32>:word32]
	d4Out = d4
	a5Out = a5
	a6Out = a6_175
	return SEQ(SLICE(d0_159, word16, 16), SLICE(d0_159, word16, 0) & 0xFFFC<16>) + 4<32>
fn00002510_exit:


word32 fn000025B4(word32 a5, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002510
// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a6 a7
fn000025B4_entry:
l000025B4:
	word32 a0_12 = Mem10[dwArg04:word32]
	word32 d0_13 = Mem10[a0_12 + 4<i32>:word32]
	word32 d1_17 = Mem10[dwArg04 + 4<i32>:word32]
	branch SEQ(SLICE(d0_13, word16, 16), SLICE(d0_13, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_17, word16, 16), SLICE(d1_17, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg08 <=u 0<32> l00002608
l000025DA:
	word32 a0_107
	word32 d0_29 = fn0000273C(a0_12, a5, out a0_107)
	branch d0_29 == 0<32> l00002608
l00002608:
	return 0<i32>
l000025E4:
	word32 d0_51 = Mem10[dwArg04 + 4<i32>:word32]
	word32 d0_55 = SEQ(SLICE(d0_51, word16, 16), SLICE(d0_51, word16, 0) & 0xFFFC<16>) + dwArg08
	Mem59[d0_29 + 4<i32>:word32] = d0_55 + 4<32>
	Mem60[d0_55 + 4<32>:word32] = d0_29
	Mem62[d0_29:word32] = Mem60[dwArg04:word32]
	Mem63[dwArg04:word32] = d0_29
	return d0_29
fn000025B4_exit:


void fn00002610(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: a6 a7
fn00002610_entry:
l00002610:
	Mem10[a5 + -716<i32>:word32] = dwArg04
	return
fn00002610_exit:


word32 fn00002644(word32 a5, word32 dwArg04, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000024C4
// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 a7 d0
// Trashed: CVZN a0 a5 a6 a7 d0
// Preserved:
fn00002644_entry:
	ptr32 fp
l00002644:
	word32 a6_18 = fp - 4<32>
	word32 a0_9 = Mem5[a5 + -716<i32>:word32]
	branch a0_9 == 0<32> l00002664
l00002650:
	word32 d0_21
	call a0_9 (retsize: 4;)
		uses: a5:a5,a6:fp - 4<32>,Stack +0004:dwArg04,Stack +0010:dwArg04
		defs: a5:a5_19,a6:a6_18,d0:d0_21
	branch d0_21 == 0<32> l00002664
l00002664:
	word32 a6_33 = Mem32[a6_18:word32]
	a5Out = a5
	a6Out = a6_33
	return 0<i32>
l0000265C:
	word32 a6_38 = Mem15[a6_18:word32]
	a5Out = a5
	a6Out = a6_38
	return 1<i32>
fn00002644_exit:


word32 fn0000273C(word32 a0, word32 a5, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000025B4
//      fn00002BB4
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 d0
// Trashed: CVZN a0 d0 d1 d2
// Preserved: X a6 a7
fn0000273C_entry:
l0000273C:
	word32 d0_15
	word32 a0_14
	branch Mem5[a5 + -1328<i32>:word32] != 0<32> l0000274E
l00002746:
	d0_15 = fn0000275C(a0, a5, out a0_14)
	branch d0_15 == 0<32> l00002758
l0000274E:
	d0_15 = Mem5[a5 + -1328<i32>:word32]
	Mem32[a5 + -1328<i32>:word32] = Mem5[d0_15:word32]
	a0_14 = d0_15
l00002758:
	a0Out = a0_14
	return d0_15
fn0000273C_exit:


word32 fn0000275C(word32 a0, word32 a5, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000273C
// MayUse:  a0:[0..31] a5:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 d0 d1 d2
// Preserved: a6 a7
fn0000275C_entry:
l0000275C:
	__syscall(0xA11E<16>)
	branch a0 != 0<32> l00002774
l00002774:
	Mem15[a5 + -1328<i32>:word32] = a0
	word32 d0_13 = a0
	word32 d1_18 = a0 + 8<32>
	branch a0 + 0xFF8<32> - a0 <=u 0<32> l00002794
l00002788:
	Mem26[d0_13:word32] = d1_79
	d0_13 = d1_79
	d1_18 = d1_79 + 8<32>
	d1_79 = d1_18
	branch a0 + 0xFF8<32> - d1_79 >u 0<32> l00002788
l00002794:
	Mem37[a0 + 0xFF8<32>:word32] = 0<i32>
	a0Out = a0 + 0xFF8<32>
	return 1<i32>
l0000276C:
	a0Out = a0
	return 0<i32>
fn0000275C_exit:


word32 fn000027A0(word32 a5, word32 a6, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002510
//      fn00002A54
//      fn00002B18
// MayUse:  a5:[0..31] a6:[0..31]
// LiveOut: a5 a6 a7
// Trashed: CVZN a5 a6 a7 d2
// Preserved:
fn000027A0_entry:
	ptr32 fp
l000027A0:
	word32 a6_14
	word32 a5_16
	call a5 + 90<i32> (retsize: 4;)
		uses: a5:a5,a6:fp - 4<32>,d2:18<i32>,Stack +0004:18<i32>,Stack +0008:a6
		defs: a5:a5_16,a6:a6_14
	a6Out = Mem10[a6_14:word32]
	return a5_16
fn000027A0_exit:


word32 fn000027B0(word32 a5, word32 dwArg04, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002510
// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a3 a4 a6 a7 d3 d4 d5 d6
fn000027B0_entry:
	word32 a0
l000027B0:
	word32 a2_101 = Mem28[a5 + -1332<i32>:word32]
	word32 a1_211 = 0<32>
	branch a5 + -1324<i32> - a2_101 == 0<32> l00002814
l00002814:
l000027D0:
l000027D4:
	word32 a4_44 = a2_101 + 4<i32>
	branch (Mem45[a4_44:word32] & 3<i32>) != 1<32> l0000280C
l000027E0:
	a0 = Mem54[a2_101:word32]
	word32 d0_56 = Mem54[a0 + 4<i32>:word32]
	word32 d3_63 = Mem54[a4_44:word32]
	branch SEQ(SLICE(d0_56, word16, 16), SLICE(d0_56, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d3_63, word16, 16), SLICE(d3_63, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg04 >=u 0<32> l00002880
l000027F8:
	branch (d0_56 & 3<i32>) != 1<32> l0000280C
l0000280C:
	a2_101 = Mem81[a2_101:word32]
	branch a2_101 - (a5 + -1324<i32>) != 0<32> l000027D4
l00002812:
l00002818:
	a2_101 = Mem96[a5 + -1336<i32>:word32]
	branch a2_101 - Mem96[a5 + -1332<i32>:word32] == 0<32> l00002882
l0000282C:
	word32 a3_102 = a2_101 + 4<i32>
	branch (Mem103[a3_102:word32] & 3<i32>) != 1<32> l0000288C
l00002838:
	a0 = Mem112[a2_101:word32]
	word32 d3_114 = Mem112[a0 + 4<i32>:word32]
	word32 d1_121 = Mem112[a3_102:word32]
	branch SEQ(SLICE(d3_114, word16, 16), SLICE(d3_114, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_121, word16, 16), SLICE(d1_121, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg04 >=u 0<32> l00002880
l0000284E:
	branch (d3_114 & 3<i32>) != 1<32> l0000288C
l0000288C:
	a2_101 = Mem139[a2_101:word32]
	branch a2_101 - Mem139[a5 + -1332<i32>:word32] != 0<32> l0000282C
l00002894:
	a0Out = a0
	return 0<32>
l00002854:
	Mem187[a2_101:word32] = Mem112[a0:word32]
	Mem189[a0:word32] = Mem187[a5 + -1328<i32>:word32]
	Mem190[a5 + -1328<i32>:word32] = a0
	branch a0 - Mem190[a5 + -1332<i32>:word32] != 0<32> l00002838
l00002864:
	Mem194[a5 + -1332<i32>:word32] = a2_101
	a0 = Mem194[a2_101:word32]
	word32 d0_196 = Mem194[a0 + 4<i32>:word32]
	word32 d1_200 = Mem194[a3_102:word32]
	branch SEQ(SLICE(d0_196, word16, 16), SLICE(d0_196, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_200, word16, 16), SLICE(d1_200, word16, 0) & 0xFFFC<16>) - 4<32> - dwArg04 <u 0<32> l00002882
l00002880:
	a1_211 = a2_101
l00002882:
	a0Out = a0
	return a1_211
fn000027B0_exit:
l000027FE:
	Mem238[a2_101:word32] = Mem54[a0:word32]
	Mem240[a0:word32] = Mem238[a5 + -1328<i32>:word32]
	Mem241[a5 + -1328<i32>:word32] = a0


word32 fn000028A0(word32 a0, word32 a2, word32 a5, word32 dwArg04, ptr32 & d3Out, ptr32 & d4Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002510
// MayUse:  a0:[0..31] a2:[16..31] a5:[0..31] Stack +0004:[0..31]
// LiveOut: a5 a6 a7 d0 d3 d4
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5 d6 d7
// Preserved:
fn000028A0_entry:
	ptr32 fp
l000028A0:
	word32 d4_111 = Mem25[a5 + -1292<i32>:word32]
	word32 a6_312 = fp - 4<32>
	word32 a7_23 = fp - 0x1C<32>
	word32 a2_114 = SEQ(SLICE(a2, word16, 16), 0x10<16>)
	word32 d5_112 = -1<i32>
	word32 d3_250 = SEQ(SLICE(dwArg04 + 7<32>, word16, 16), SLICE(dwArg04, word16, 0) + 7<16> & 0xFFFC<16>)
	branch d4_111 - Mem25[a5 + -1312<i32>:word32] >= 0<32> l0000290E
l000028C6:
	word32 d7_116 = d4_111 << 4<32>
l000028CA:
	branch Mem46[Mem46[Mem46[a5 + -1316<i32>:word32]:word32] + d7_116:word32] == 0<32> l000028E4
l000028D6:
	word32 a7_55 = a7_23 - 4<i32>
	Mem57[a7_55:word32] = d3_250
	Mem60[a7_55 - 4<i32>:word32] = d4_111
	word32 a7_68 = <invalid>
	a7_23 = a7_68 + 8<i32>
	branch fn00002A54(a5, Mem60[a7_55 - 4<i32>:word32], Mem60[a7_55:word32], out d3_250, out d4_111, out d5_112, out a2_114, out a5, out a6_312) != -1<i32> l000028FC
l000028FC:
	Mem85[a5 + -1292<i32>:word32] = d4_111
	word32 d4_90 = Mem85[a7_68 + 12<i32>:word32]
	word32 a6_100 = Mem85[a6_312:word32]
	d3Out = Mem85[a7_68 + 8<i32>:word32]
	d4Out = d4_90
	a5Out = a5
	a6Out = a6_100
	return 0<i32>
l000028E4:
	a0 = Mem103[Mem103[a5 + -1316<i32>:word32]:word32]
	branch Mem103[a0 + d7_116:word32] == 0<32> l0000290C
l0000290C:
	d5_112 = d4_111
l000028F0:
	d4_111 = d4_111 + 1<32>
	d7_116 = d7_116 + a2_114
	branch d4_111 - Mem103[a5 + -1312<i32>:word32] < 0<32> l000028CA
l000028FA:
l0000290E:
	branch d5_112 != -1<i32> l000029B4
l00002916:
	branch Mem130[a5 + -1316<i32>:word32] == 0<32> l0000292E
l00002926:
	a0 = Mem130[a5 + -1316<i32>:word32]
	__syscall(0xA024<16>)
l0000292E:
	branch Mem130[a5 + -1316<i32>:word32] == 0<32> l0000293C
l00002934:
	a0 = Mem130[a5 + -1296<i32>:word32]
	branch Mem130[a0:word16] == 0<16> l00002974
l0000293C:
	__syscall(0xA122<16>)
	branch a0 != 0<32> l00002950
l00002950:
	__syscall(0xA029<16>)
	branch Mem130[a5 + -1316<i32>:word32] == 0<32> l00002970
l0000295A:
	__syscall(0xA02E<16>)
	__syscall(0xA023<16>)
l00002970:
	Mem181[a5 + -1316<i32>:word32] = a0
l00002974:
	a0 = Mem185[Mem185[a5 + -1316<i32>:word32]:word32] + (Mem185[a5 + -1312<i32>:word32] << 4<32>)
	word32 d0_192 = 7<i32>
l00002986:
	Mem196[a0:word32] = 0<i32>
	word32 a0_197 = a0 + 4<i32>
	Mem198[a0_197:word32] = 0<i32>
	Mem200[a0_197 + 4<i32>:word32] = 0<i32>
	Mem202[a0_197 + 8<i32>:word32] = 0<i32>
	Mem204[a0_197 + 12<i32>:word32] = 0<i32>
	Mem206[a0_197 + 16<i32>:word32] = 0<i32>
	Mem208[a0_197 + 20<i32>:word32] = 0<i32>
	Mem210[a0_197 + 24<i32>:word32] = 0<i32>
	Mem212[a0_197 + 28<i32>:word32] = 0<i32>
	Mem214[a0_197 + 32<i32>:word32] = 0<i32>
	Mem216[a0_197 + 36<i32>:word32] = 0<i32>
	Mem218[a0_197 + 40<i32>:word32] = 0<i32>
	Mem220[a0_197 + 44<i32>:word32] = 0<i32>
	Mem222[a0_197 + 48<i32>:word32] = 0<i32>
	Mem224[a0_197 + 52<i32>:word32] = 0<i32>
	Mem226[a0_197 + 56<i32>:word32] = 0<i32>
	word16 v29_230 = SLICE(d0_192, word16, 0)
	a0 = a0_197 + 60<i32>
	d0_192 = SEQ(SLICE(d0_192, word16, 16), v29_230 - 1<i16>)
	branch v29_230 != 0<16> l00002986
l000029AA:
	d5_112 = Mem226[a5 + -1312<i32>:word32]
	Mem238[a5 + -1312<i32>:word32] = Mem226[a5 + -1312<i32>:word32] + 32<i32>
l000029B4:
	word32 a7_248 = a7_23 - 4<i32>
	Mem257[a7_248:word32] = d3_250
	Mem260[a7_248 - 4<i32>:word32] = d5_112
	word32 a5_271
	word32 a6_272
	word32 d0_264 = fn000029C8(a0, a5, Mem260[a7_248 - 4<i32>:word32], Mem260[a7_248:word32], out a5_271, out a6_272)
	word32 a7_273 = <invalid>
	word32 d4_285 = Mem260[a7_273 + 12<i32>:word32]
	word32 a6_295 = Mem260[a6_272:word32]
	d3Out = Mem260[a7_273 + 8<i32>:word32]
	d4Out = d4_285
	a5Out = a5_271
	a6Out = a6_295
	return d0_264
l00002946:
	word32 d4_301 = Mem130[a7_23 + 4<i32>:word32]
	word32 a6_316 = Mem130[a6_312:word32]
	d3Out = Mem130[a7_23:word32]
	d4Out = d4_301
	a5Out = a5
	a6Out = a6_316
	return -1<i32>
fn000028A0_exit:


word32 fn000029C8(word32 a0, word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000028A0
// MayUse:  a0:[0..31] a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a5 a6 a7 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn000029C8_entry:
	ptr32 fp
l000029C8:
	word32 d4_18 = Mem16[a5 + -1300<i32>:word32]
	word32 d4_23 = SEQ(SLICE(d4_18 + 0xFFF<32>, word16, 16), SLICE(d4_18, word16, 0) + 0xFFF<16> & 0xF000<16>)
	word32 a6_135 = fp - 4<32>
	branch d4_23 - dwArg08 >=u 0<32> l000029E8
l000029E6:
	d4_23 = dwArg08
l000029E8:
	word32 d0_124
	__syscall(0xA11E<16>)
	branch a0 == 0<32> l00002A4A
l000029F2:
	word32 a1_42 = Mem16[Mem16[a5 + -1316<i32>:word32]:word32]
	branch (SLICE(a0, word16, 0) & 3<16>) == 0<16> l00002A14
l00002A14:
	Mem55[a1_42 + (dwArg04 << 4<32>):word32] = a0
l000029FE:
	Mem66[a1_42 + (dwArg04 << 4<32>):word32] = SEQ(SLICE(a0 + 3<32>, word16, 16), SLICE(a0, word16, 0) + 3<16> & 0xFFFC<16>)
l00002A20:
	word32 a1_73 = a1_42 + (dwArg04 << 4<32>)
	Mem75[a1_73 + 12<i32>:word32] = a0
	Mem77[a1_73 + 8<i32>:word32] = d4_23
	Mem79[a1_73 + 4<i32>:word32] = 0<i32>
	word32 d5_101
	word32 a2_190
	word32 d4_189
	word32 d3_188
	d0_124 = fn00002A54(a5, dwArg04, dwArg08, out d3_188, out d4_189, out d5_101, out a2_190, out a5, out a6_135)
	word32 a7_96 = <invalid>
	branch d0_124 == 0<32> l00002A4C
l00002A42:
	Mem114[a7_96 + 4<i32>:word32] = d5_101
	fn00002AE0(a5, Mem114[a7_96 + 4<i32>:word32])
l00002A4A:
	d0_124 = -1<i32>
l00002A4C:
	word32 a6_138 = Mem128[a6_135:word32]
	a5Out = a5
	a6Out = a6_138
	return d0_124
fn000029C8_exit:


word32 fn00002A54(word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & d3Out, ptr32 & d4Out, ptr32 & d5Out, ptr32 & a2Out, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000028A0
//      fn000029C8
// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a2 a5 a6 a7 d0 d3 d4 d5
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 a7 d0 d1 d2 d3 d4 d5
// Preserved:
fn00002A54_entry:
	ptr32 fp
	word32 a6
	word32 a2
	word32 d5
	word32 d4
	word32 d3
l00002A54:
	word32 a2_25 = Mem19[Mem19[a5 + -1316<i32>:word32]:word32] + (dwArg04 << 4<32>)
	word32 d4_26 = Mem19[a2_25 + 8<i32>:word32]
	word32 d1_27 = Mem19[a2_25 + 4<i32>:word32]
	word32 d0_29 = d4_26 - d1_27
	word32 d3_38 = SEQ(SLICE(dwArg08 + 3<32>, word16, 16), SLICE(dwArg08, word16, 0) + 3<16> & 0xFFFC<16>)
	word32 a1_32 = Mem19[a2_25:word32] + d1_27
	branch d3_38 - d0_29 <=u 0<32> l00002ABE
l00002A8A:
	__syscall(0xA020<16>)
	word32 d4_43 = d4_26 - d0_29 + d3_38
	word32 d4_48 = SEQ(SLICE(d4_43 + 4<32>, word16, 16), SLICE(d4_43, word16, 0) + 4<16> & 0xFFFC<16>)
	a2_25 = Mem19[Mem19[a5 + -1316<i32>:word32]:word32] + (dwArg04 << 4<32>)
	branch Mem19[Mem19[a5 + -1296<i32>:word32]:word16] == 0<16> l00002AB4
l00002AB4:
	Mem58[a2_25 + 8<i32>:word32] = d4_48
	a1_32 = Mem58[a2_25:word32] + Mem58[a2_25 + 4<i32>:word32]
l00002ABE:
	Mem66[a2_25 + 4<i32>:word32] = Mem63[a2_25 + 4<i32>:word32] + d3_38
	word32 a7_105 = fp - 0x14<32>
	word32 a6_114
	word32 a5_148
	branch fn00002BB4(a5, a1_32, d3_38, out a5_148, out a6_114) == 0<32> l00002AD4
l00002AD0:
	a5_148 = fn000027A0(a5_148, a6_114, out a6_114)
	a7_105 = <invalid>
l00002AD4:
	word32 a7_108 = a7_105 + 4<i32>
	word32 d4_109 = Mem73[a7_108:word32]
	word32 d5_111 = Mem73[a7_108 + 4<i32>:word32]
	word32 a2_113 = Mem73[a7_108 + 8<i32>:word32]
	word32 a6_116 = Mem73[a6_114:word32]
	d3Out = Mem73[a7_105:word32]
	d4Out = d4_109
	d5Out = d5_111
	a2Out = a2_113
	a5Out = a5_148
	a6Out = a6_116
	return 0<i32>
l00002AA8:
	d3Out = d3
	d4Out = d4
	d5Out = d5
	a2Out = a2
	a5Out = a5
	a6Out = a6
	return -1<i32>
fn00002A54_exit:


void fn00002AE0(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000029C8
// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 d2
// Preserved: a6 a7 d3
fn00002AE0_entry:
l00002AE0:
	branch Mem10[Mem10[Mem10[a5 + -1316<i32>:word32]:word32] + (dwArg04 << 4<32>):word32] == 0<32> l00002AFE
l00002AF8:
	__syscall(0xA01F<16>)
l00002AFE:
	word32 a0_25 = Mem10[Mem10[a5 + -1316<i32>:word32]:word32]
	Mem28[a0_25 + (dwArg04 << 4<32>):word32] = 0<i32>
	Mem29[a0_25 + 4<i32> + (dwArg04 << 4<32>):word32] = 0<i32>
	Mem30[a0_25 + 8<i32> + (dwArg04 << 4<32>):word32] = 0<i32>
	return
fn00002AE0_exit:


void fn00002B18(word32 a5, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a5:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a2 a5 a6 a7 d0 d1 d2
// Preserved:
fn00002B18_entry:
	ptr32 fp
l00002B18:
	branch dwArg04 == 0<32> l00002B78
l00002B24:
	word32 a2_17 = Mem10[dwArg04 - 4<32>:word32]
	word32 d1_18 = Mem10[a2_17 + 4<i32>:word32]
	branch SEQ(SLICE(d1_18, word16, 16), SLICE(d1_18, word16, 0) & 0xFFFC<16>) - (dwArg04 - 4<32>) == 0<32> l00002B3A
l00002B36:
	word32 a6_115
	a5 = fn000027A0(a5, fp - 4<32>, out a6_115)
l00002B3A:
	word32 d0_37
	__bclr(Mem10[a2_17 + 4<i32>:word32], 1<32>, out d0_37)
	word32 d0_39
	__bset(d0_37, 0<16>, out d0_39)
	Mem41[a2_17 + 4<i32>:word32] = d0_39
	branch Mem41[a5 + -1308<i32>:word32] == -1<i32> l00002B78
l00002B52:
	branch d0_39 - Mem41[Mem41[a5 + -1332<i32>:word32] + 4<i32>:word32] >=u 0<32> l00002B78
l00002B5C:
	word32 d1_52 = Mem41[Mem41[a2_17:word32] + 4<i32>:word32]
	branch SEQ(SLICE(d1_52, word16, 16), SLICE(d1_52, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d0_39, word16, 16), SLICE(d0_39, word16, 0) & 0xFFFC<16>) - 4<32> - Mem41[a5 + -1308<i32>:word32] <u 0<32> l00002B78
l00002B74:
	Mem65[a5 + -1332<i32>:word32] = a2_17
l00002B78:
	return
fn00002B18_exit:


word32 fn00002BB4(word32 a5, word32 dwArg04, word32 dwArg08, ptr32 & a5Out, ptr32 & a6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002A54
// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a5 a6 d0
// Trashed: CVZNX a0 a1 a2 a3 a5 a6 d0 d1 d2
// Preserved: a7
fn00002BB4_entry:
	ptr32 fp
	word32 a6
	struct <anonymous> tLoc1C
	struct <anonymous> tLoc08
l00002BB4:
	Mem20[&tLoc1C:word32] = fp + 0xFFFFFFE8<32>
	word32 a0_23
	branch fn0000273C(fp + 0xFFFFFFE8<32>, a5, out a0_23) == 0<32> l00002DE8
l00002BE2:
	word32 a0_34
	branch fn0000273C(a0_23, a5, out a0_34) == 0<32> l00002DE8
l00002BEE:
	word32 a0_391
	branch fn0000273C(a0_34, a5, out a0_391) == 0<32> l00002DE8
l00002BFA:
	word32 a3_77
	word32 d0_64 = fn00002EA8(a5, dwArg04, &tLoc08)
	branch d0_64 != 0<32> l00002C28
l00002C28:
	a3_77 = Mem60[Mem60[&tLoc1C:word32]:word32]
	Mem79[&tLoc1C:word32] = Mem60[&tLoc1C:word32] + 4<32>
l00002C0E:
	word32 a0_81 = Mem60[&tLoc08:word32]
	branch (Mem60[a0_81 + 4<i32>:word32] & 3<i32>) != 2<i32> l00002DE8
l00002C22:
	a3_77 = a0_81
l00002C32:
	Mem92[a3_77 + 4<i32>:word32] = dwArg04
	word32 d1_94
	__bclr(dwArg04, 1<32>, out d1_94)
	word32 d1_96
	__bset(d1_94, 0<16>, out d1_96)
	Mem98[a3_77 + 4<i32>:word32] = d1_96
	Mem99[dwArg04:word32] = a3_77
	branch d0_64 >u 0<32> l00002C60
l00002C60:
	word32 a0_108 = Mem99[&tLoc08:word32]
	branch (Mem99[a0_108 + 4<i32>:word32] & 3<i32>) != 2<i32> l00002DE8
l00002DE8:
	branch Mem117[Mem117[&tLoc1C:word32]:word32] == 0<32> l00002E0E
l00002DF0:
	Mem129[Mem124[Mem124[&tLoc1C:word32]:word32]:word32] = Mem124[a5 + -1328<i32>:word32]
	Mem132[a5 + -1328<i32>:word32] = Mem129[Mem129[&tLoc1C:word32]:word32]
	Mem134[&tLoc1C:word32] = Mem132[&tLoc1C:word32] + 4<32>
	branch Mem134[Mem134[&tLoc1C:word32]:word32] != 0<32> l00002DF0
l00002E0E:
	a5Out = a5
	a6Out = a6
	return -1<i32>
l00002C74:
	branch a5 + -1324<i32> - Mem99[a0_108:word32] != 0<32> l00002C92
l00002C7C:
	word32 d0_162 = Mem99[a3_77 + 4<i32>:word32]
	word32 d0_166 = SEQ(SLICE(d0_162, word16, 16), SLICE(d0_162, word16, 0) & 0xFFFC<16>) + dwArg08
	branch d0_166 - Mem99[a5 + -1320<i32>:word32] <=u 0<32> l00002C92
l00002C8E:
	Mem171[a5 + -1320<i32>:word32] = d0_166
l00002C92:
	fn00002E18(a3_77, dwArg08, Mem176[Mem176[&tLoc08:word32]:word32], &tLoc1C)
	word32 a0_209 = Mem202[&tLoc08:word32]
	word32 d0_205 = Mem202[Mem202[Mem202[&tLoc08:word32]:word32] + 4<i32>:word32]
	word32 d1_210 = Mem202[a0_209 + 4<i32>:word32]
	word32 dwLoc28_322 = &tLoc1C
	word32 d0_214 = SEQ(SLICE(d0_205, word16, 16), SLICE(d0_205, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_210, word16, 16), SLICE(d1_210, word16, 0) & 0xFFFC<16>)
l00002DA4:
	fn00002E18(a0_209, d0_214, a3_77, dwLoc28_322)
	word32 d0_234 = Mem219[Mem219[a5 + -1332<i32>:word32] + 4<i32>:word32]
	branch SEQ(SLICE(d0_234, word16, 16), SLICE(d0_234, word16, 0) & 0xFFFC<16>) - dwArg04 <=u 0<32> l00002DDC
l00002DBC:
	word32 d0_243 = Mem219[Mem219[a3_77:word32] + 4<i32>:word32]
	word32 d1_247 = Mem219[a3_77 + 4<i32>:word32]
	branch SEQ(SLICE(d0_243, word16, 16), SLICE(d0_243, word16, 0) & 0xFFFC<16>) - SEQ(SLICE(d1_247, word16, 16), SLICE(d1_247, word16, 0) & 0xFFFC<16>) - 4<32> - Mem219[a5 + -1308<i32>:word32] <u 0<32> l00002DDC
l00002DD8:
	Mem257[a5 + -1332<i32>:word32] = a3_77
l00002DDC:
	a5Out = a5
	a6Out = a6
	return 0<i32>
l00002C4E:
	word16 v24_272 = Mem99[0x00002C58<p32> + CONVERT(SLICE(d0_64, int16, 0) + 3<i16>, int16, int32) * 2<i32>:word16]
	word32 a6_277
	word32 d0_282
	word32 a5_284
	word32 a1_285
	call 0x00002C58<p32> + CONVERT(v24_272, word16, int32) (retsize: 0;)
		uses: a1:a1_285,a2:dwArg04,a3:a3_91,a5:a5,a6:fp - 4<32>,d0:SEQ(SLICE(d0_64 + 3<32>, word16, 16), v24_272),Stack +0008:tLoc1C,Stack +001C:tLoc08,Stack +0028:dwArg04,Stack +002C:dwArg08
		defs: a1:a1_285,a5:a5_284,a6:a6_277,d0:d0_282
	a5Out = a5_284
	a6Out = a6_277
	return d0_282
fn00002BB4_exit:


void fn00002E18(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002BB4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1 d2
// Preserved: a2 a3 a6 a7
fn00002E18_entry:
l00002E18:
	word32 d2_15 = Mem13[dwArg04 + 4<i32>:word32]
	word32 a2_14 = dwArg04
	branch (d2_15 & 3<i32>) == 2<i32> l00002E9A
l00002E34:
	word32 d1_25 = Mem13[dwArg0C + 4<i32>:word32]
	branch (d1_25 & 3<32>) != 2<32> l00002E6C
l00002E6C:
	word32 d2_34 = SEQ(SLICE(d2_15, word16, 16), SLICE(d2_15, word16, 0) & 0xFFFC<16>) + dwArg08
	branch SEQ(SLICE(d1_25, word16, 16), SLICE(d1_25, word16, 0) & 0xFFFC<16>) - d2_34 == 0<32> l00002E9A
l00002E7C:
	word32 a0_43 = Mem13[dwArg10:word32]
	word32 v32_44 = Mem13[a0_43:word32]
	Mem47[dwArg10:word32] = a0_43 + 4<i32>
	Mem48[v32_44 + 4<i32>:word32] = d2_34
	word32 d2_49
	__bclr(d2_34, 0<32>, out d2_49)
	word32 d2_51
	__bset(d2_49, 1<16>, out d2_51)
	Mem53[v32_44 + 4<i32>:word32] = d2_51
	Mem54[dwArg04:word32] = v32_44
	a2_14 = v32_44
l00002E9A:
	Mem61[a2_14:word32] = dwArg0C
	return
l00002E4C:
	word32 d2_75 = SEQ(SLICE(d2_15, word16, 16), SLICE(d2_15, word16, 0) & 0xFFFC<16>) + dwArg08
	Mem77[dwArg0C + 4<i32>:word32] = d2_75
	word32 d2_78
	__bclr(d2_75, 0<32>, out d2_78)
	word32 d2_80
	__bset(d2_78, 1<16>, out d2_80)
	Mem82[dwArg0C + 4<i32>:word32] = d2_80
	Mem84[dwArg04:word32] = dwArg0C
	return
fn00002E18_exit:


word32 fn00002EA8(word32 a5, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002BB4
// MayUse:  a5:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZN a0 a1 d0 d1 d2
// Preserved: a6 a7
fn00002EA8_entry:
l00002EA8:
	branch a5 + -1324<i32> - Mem5[a5 + -1336<i32>:word32] != 0<32> l00002EBC
l00002EBC:
	word32 d0_14 = Mem5[Mem5[a5 + -1336<i32>:word32] + 4<i32>:word32]
	branch SEQ(SLICE(d0_14, word16, 16), SLICE(d0_14, word16, 0) & 0xFFFC<16>) - dwArg04 <=u 0<32> l00002ED8
l00002ED8:
	word32 d0_22 = Mem5[a5 + -1320<i32>:word32]
	branch SEQ(SLICE(d0_22, word16, 16), SLICE(d0_22, word16, 0) & 0xFFFC<16>) - dwArg04 >u 0<32> l00002EEC
l00002EEC:
	word32 a1_31 = Mem5[a5 + -1336<i32>:word32]
l00002EF6:
	word32 a0_34 = Mem5[a1_31:word32]
	word32 d1_35 = Mem5[a0_34 + 4<i32>:word32]
	branch SEQ(SLICE(d1_35, word16, 16), SLICE(d1_35, word16, 0) & 0xFFFC<16>) - dwArg04 >u 0<32> l00002F08
l00002F08:
	Mem46[dwArg08:word32] = a1_31
	word32 d1_48 = Mem46[a1_31 + 4<i32>:word32]
	word32 d0_47 = 0<i32>
	branch SEQ(SLICE(d1_48, word16, 16), SLICE(d1_48, word16, 0) & 0xFFFC<16>) - dwArg04 == 0<32> l00002F1E
l00002F1C:
	d0_47 = 1<i32>
l00002F1E:
	return d0_47
l00002F02:
	a1_31 = a0_34
l00002EE4:
	return -2<i32>
l00002ED0:
	return -1<i32>
l00002EB6:
	return -3<i32>
fn00002EA8_exit:


