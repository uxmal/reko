// RussianText.h
// Generated by decompiling RussianText.exe
// using Reko decompiler version 0.10.2.0.

/*
// Equivalence classes ////////////
Eq_1: (struct "Globals" (40208B uint32 dw40208B) (4020A4 char b4020A4) (4020F8 word32 dw4020F8) (40503C word32 dw40503C) (405040 word32 dw405040) (405044 word32 dw405044) (405048 word32 dw405048) (40504C word32 dw40504C) (405054 (ptr32 code) __imp__GetModuleHandleA) (405058 (ptr32 code) __imp__GetProcAddress) (40505C (ptr32 code) __imp__GetProcessHeap) (405060 (ptr32 code) __imp__HeapAlloc) (405064 (ptr32 code) __imp__HeapFree) (40506C word32 dw40506C) (405070 word32 dw405070) (405074 word32 dw405074) (405078 word32 dw405078) (40507C word32 dw40507C) (405080 word32 dw405080) (405084 word32 dw405084) (405088 word32 dw405088) (40508C word32 dw40508C) (405090 word32 dw405090) (405094 word32 dw405094) (405098 word32 dw405098) (40509C word32 dw40509C) (4050A0 word32 dw4050A0) (4050A4 word32 dw4050A4) (4050A8 word32 dw4050A8) (4050AC word32 dw4050AC) (4050B0 word32 dw4050B0) (4050B4 word32 dw4050B4) (4050B8 word32 dw4050B8) (4050BC word32 dw4050BC) (4050C0 word32 dw4050C0) (4050C4 word32 dw4050C4) (4050CC (ptr32 code) __imp__@_InitTermAndUnexPtrs$qv) (4050D0 (ptr32 code) __imp_____CRTL_MEM_UseBorMM) (4050D4 (ptr32 code) __imp_____CRTL_TLS_Alloc) (4050D8 (ptr32 code) __imp_____CRTL_TLS_ExitThread) (4050DC (ptr32 code) __imp_____CRTL_TLS_Free) (4050E0 (ptr32 code) __imp_____CRTL_TLS_GetValue) (4050E4 (ptr32 code) __imp_____CRTL_TLS_InitThread) (4050E8 (ptr32 code) __imp_____CRTL_TLS_SetValue) (4050EC (ptr32 code) __imp____argc) (4050F0 (ptr32 code) __imp____argv) (4050F4 (ptr32 code) __imp____argv_default_expand) (4050F8 (ptr32 code) __imp____exitargv) (4050FC (ptr32 code) __imp____handle_exitargv) (405100 (ptr32 code) __imp____handle_setargv) (405104 (ptr32 code) __imp____handle_wexitargv) (405108 (ptr32 code) __imp____handle_wsetargv) (40510C (ptr32 code) __imp____matherr) (405110 (ptr32 code) __imp____matherrl) (405114 (ptr32 code) __imp____setargv) (405118 (ptr32 code) __imp____startup) (40511C (ptr32 code) __imp____wargv_default_expand) (405120 (ptr32 code) __imp___memcpy) (405124 (ptr32 code) __imp___printf))
	globals_t (in globals @ 00000000 : (ptr32 (struct "Globals")))
Eq_2: (struct "Eq_2" (0 word32 dw0000) (4 ptr32 ptr0004))
	T_2 (in dwArg04 @ 00000000 : (ptr32 Eq_2))
	T_5 (in dwArg04 @ 00401071 : (ptr32 Eq_2))
	T_62 (in fp - 0xC<32> @ 00000000 : word32)
Eq_3: (fn void ((ptr32 Eq_2)))
	T_3 (in fn004011FC @ 00401071 : ptr32)
	T_4 (in signature of fn004011FC @ 004011FC : void)
	T_59 (in fn004011FC @ 004011CE : ptr32)
Eq_16: HANDLE
	T_16 (in eax_22 @ 00401126 : Eq_16)
	T_19 (in GetProcessHeap() @ 00401126 : HANDLE)
Eq_17: (fn Eq_16 ())
	T_17 (in GetProcessHeap @ 00401126 : ptr32)
	T_18 (in signature of GetProcessHeap @ 00000000 : void)
Eq_23: (segment "Eq_23" (2C (ptr32 (arr word32)) ptr002C))
	T_23 (in fs @ 00401166 : selector)
Eq_34: (fn int32 ((ptr32 char)))
	T_34 (in printf @ 00401170 : ptr32)
	T_35 (in signature of printf @ 00000000 : void)
Eq_44: (fn (ptr32 void) ((ptr32 void), (ptr32 void), Eq_48))
	T_44 (in memcpy @ 004011E9 : ptr32)
	T_45 (in signature of memcpy @ 00000000 : void)
Eq_48: size_t
	T_48 (in _Size @ 004011E9 : size_t)
	T_52 (in 0x9C<32> @ 004011E9 : word32)
Eq_49: (fn (ptr32 void) ())
	T_49 (in fn00401158 @ 004011E9 : ptr32)
	T_50 (in signature of fn00401158 @ 00401158 : void)
	T_65 (in fn00401158 @ 0040120E : ptr32)
Eq_54: (fn void ())
	T_54 (in _InitTermAndUnexPtrs @ 004011F1 : ptr32)
	T_55 (in signature of _InitTermAndUnexPtrs @ 00000000 : void)
// Type Variables ////////////
globals_t: (in globals @ 00000000 : (ptr32 (struct "Globals")))
  Class: Eq_1
  DataType: (ptr32 Eq_1)
  OrigDataType: (ptr32 (struct "Globals"))
T_2: (in dwArg04 @ 00000000 : (ptr32 Eq_2))
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: word32
T_3: (in fn004011FC @ 00401071 : ptr32)
  Class: Eq_3
  DataType: (ptr32 Eq_3)
  OrigDataType: (ptr32 (fn T_6 (T_2)))
T_4: (in signature of fn004011FC @ 004011FC : void)
  Class: Eq_3
  DataType: (ptr32 Eq_3)
  OrigDataType: 
T_5: (in dwArg04 @ 00401071 : (ptr32 Eq_2))
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: (ptr32 (struct (0 T_74 t0000) (4 T_78 t0004)))
T_6: (in fn004011FC(dwArg04) @ 00401071 : void)
  Class: Eq_6
  DataType: void
  OrigDataType: void
T_7: (in 0040208B @ 00401112 : ptr32)
  Class: Eq_7
  DataType: (ptr32 uint32)
  OrigDataType: (ptr32 (struct (0 T_8 t0000)))
T_8: (in Mem0[0x0040208B<p32>:word32] @ 00401112 : word32)
  Class: Eq_8
  DataType: uint32
  OrigDataType: up32
T_9: (in 0<32> @ 00401112 : word32)
  Class: Eq_8
  DataType: uint32
  OrigDataType: up32
T_10: (in g_dw40208B < 0<32> @ 00000000 : bool)
  Class: Eq_10
  DataType: bool
  OrigDataType: bool
T_11: (in eax_11 @ 0040111A : word32)
  Class: Eq_11
  DataType: word32
  OrigDataType: word32
T_12: (in __CRTL_TLS_GetValue @ 0040111A : ptr32)
  Class: Eq_12
  DataType: (ptr32 code)
  OrigDataType: (ptr32 code)
T_13: (in signature of __CRTL_TLS_GetValue @ 00000000 : void)
  Class: Eq_13
  DataType: Eq_13
  OrigDataType: 
T_14: (in 0<32> @ 00401121 : word32)
  Class: Eq_11
  DataType: word32
  OrigDataType: word32
T_15: (in eax_11 == 0<32> @ 00000000 : bool)
  Class: Eq_15
  DataType: bool
  OrigDataType: bool
T_16: (in eax_22 @ 00401126 : Eq_16)
  Class: Eq_16
  DataType: Eq_16
  OrigDataType: HANDLE
T_17: (in GetProcessHeap @ 00401126 : ptr32)
  Class: Eq_17
  DataType: (ptr32 Eq_17)
  OrigDataType: (ptr32 (fn T_19 ()))
T_18: (in signature of GetProcessHeap @ 00000000 : void)
  Class: Eq_17
  DataType: (ptr32 Eq_17)
  OrigDataType: 
T_19: (in GetProcessHeap() @ 00401126 : HANDLE)
  Class: Eq_16
  DataType: Eq_16
  OrigDataType: HANDLE
T_20: (in __CRTL_TLS_ExitThread @ 00401137 : ptr32)
  Class: Eq_20
  DataType: (ptr32 code)
  OrigDataType: (ptr32 code)
T_21: (in signature of __CRTL_TLS_ExitThread @ 00000000 : void)
  Class: Eq_21
  DataType: Eq_21
  OrigDataType: 
T_22: (in eax @ 00401137 : word32)
  Class: Eq_22
  DataType: word32
  OrigDataType: word32
T_23: (in fs @ 00401166 : selector)
  Class: Eq_23
  DataType: (ptr16 Eq_23)
  OrigDataType: (ptr16 (segment (2C T_25 t002C)))
T_24: (in 0x2C<16> @ 00401166 : word16)
  Class: Eq_24
  DataType: (memptr (ptr16 Eq_23) (ptr32 (arr word32)))
  OrigDataType: (memptr T_23 (struct (0 T_25 t0000)))
T_25: (in Mem0[fs:0x2C<16>:word32] @ 00401166 : word32)
  Class: Eq_25
  DataType: (ptr32 (arr word32))
  OrigDataType: (ptr32 (struct (0 T_108 t0000)))
T_26: (in 0040208B @ 00401166 : ptr32)
  Class: Eq_26
  DataType: (ptr32 uint32)
  OrigDataType: (ptr32 (struct (0 T_27 t0000)))
T_27: (in Mem0[0x0040208B<p32>:word32] @ 00401166 : word32)
  Class: Eq_8
  DataType: uint32
  OrigDataType: ui32
T_28: (in 4<32> @ 00401166 : word32)
  Class: Eq_28
  DataType: ui32
  OrigDataType: ui32
T_29: (in g_dw40208B * 4<32> @ 00000000 : word32)
  Class: Eq_29
  DataType: ui32
  OrigDataType: ui32
T_30: (in Mem0[fs:0x2C<16>:word32][Mem0[0x0040208B<p32>:word32] * 4<32>] @ 00401166 : word32)
  Class: Eq_22
  DataType: word32
  OrigDataType: word32
T_31: (in eax @ 00401166 : int32)
  Class: Eq_31
  DataType: int32
  OrigDataType: int32
T_32: (in argc @ 00401166 : int32)
  Class: Eq_32
  DataType: int32
  OrigDataType: int32
T_33: (in argv @ 00401166 : (ptr32 (ptr32 char)))
  Class: Eq_33
  DataType: (ptr32 (ptr32 char))
  OrigDataType: (ptr32 (ptr32 char))
T_34: (in printf @ 00401170 : ptr32)
  Class: Eq_34
  DataType: (ptr32 Eq_34)
  OrigDataType: (ptr32 (fn T_38 (T_37)))
T_35: (in signature of printf @ 00000000 : void)
  Class: Eq_34
  DataType: (ptr32 Eq_34)
  OrigDataType: 
T_36: (in ptrArg04 @ 00401170 : (ptr32 char))
  Class: Eq_36
  DataType: (ptr32 char)
  OrigDataType: 
T_37: (in 0x4020A4<32> @ 00401170 : word32)
  Class: Eq_36
  DataType: (ptr32 char)
  OrigDataType: (ptr32 char)
T_38: (in printf(&g_b4020A4) @ 00401170 : int32)
  Class: Eq_38
  DataType: int32
  OrigDataType: int32
T_39: (in 0<32> @ 00401179 : word32)
  Class: Eq_31
  DataType: int32
  OrigDataType: word32
T_40: (in dwArg04 @ 00401180 : (ptr32 void))
  Class: Eq_40
  DataType: (ptr32 void)
  OrigDataType: word32
T_41: (in ebx_12 @ 004011B7 : (ptr32 void))
  Class: Eq_40
  DataType: (ptr32 void)
  OrigDataType: (ptr32 void)
T_42: (in 0<32> @ 004011C4 : word32)
  Class: Eq_40
  DataType: (ptr32 void)
  OrigDataType: word32
T_43: (in dwArg04 != null @ 00000000 : bool)
  Class: Eq_43
  DataType: bool
  OrigDataType: bool
T_44: (in memcpy @ 004011E9 : ptr32)
  Class: Eq_44
  DataType: (ptr32 Eq_44)
  OrigDataType: (ptr32 (fn T_53 (T_51, T_41, T_52)))
T_45: (in signature of memcpy @ 00000000 : void)
  Class: Eq_44
  DataType: (ptr32 Eq_44)
  OrigDataType: 
T_46: (in _Dst @ 004011E9 : (ptr32 void))
  Class: Eq_46
  DataType: (ptr32 void)
  OrigDataType: 
T_47: (in _Src @ 004011E9 : (ptr32 void))
  Class: Eq_40
  DataType: (ptr32 void)
  OrigDataType: 
T_48: (in _Size @ 004011E9 : size_t)
  Class: Eq_48
  DataType: Eq_48
  OrigDataType: 
T_49: (in fn00401158 @ 004011E9 : ptr32)
  Class: Eq_49
  DataType: (ptr32 Eq_49)
  OrigDataType: (ptr32 (fn T_51 ()))
T_50: (in signature of fn00401158 @ 00401158 : void)
  Class: Eq_49
  DataType: (ptr32 Eq_49)
  OrigDataType: 
T_51: (in fn00401158() @ 004011E9 : word32)
  Class: Eq_46
  DataType: (ptr32 void)
  OrigDataType: (ptr32 void)
T_52: (in 0x9C<32> @ 004011E9 : word32)
  Class: Eq_48
  DataType: Eq_48
  OrigDataType: size_t
T_53: (in memcpy(fn00401158(), ebx_12, 0x9C<32>) @ 004011E9 : (ptr32 void))
  Class: Eq_53
  DataType: (ptr32 void)
  OrigDataType: (ptr32 void)
T_54: (in _InitTermAndUnexPtrs @ 004011F1 : ptr32)
  Class: Eq_54
  DataType: (ptr32 Eq_54)
  OrigDataType: (ptr32 (fn T_56 ()))
T_55: (in signature of _InitTermAndUnexPtrs @ 00000000 : void)
  Class: Eq_54
  DataType: (ptr32 Eq_54)
  OrigDataType: 
T_56: (in _InitTermAndUnexPtrs() @ 004011F1 : void)
  Class: Eq_56
  DataType: void
  OrigDataType: void
T_57: (in 0<32> @ 004011C8 : word32)
  Class: Eq_40
  DataType: (ptr32 void)
  OrigDataType: word32
T_58: (in dwArg04 != null @ 00000000 : bool)
  Class: Eq_58
  DataType: bool
  OrigDataType: bool
T_59: (in fn004011FC @ 004011CE : ptr32)
  Class: Eq_3
  DataType: (ptr32 Eq_3)
  OrigDataType: (ptr32 (fn T_63 (T_62)))
T_60: (in fp @ 004011CE : ptr32)
  Class: Eq_60
  DataType: ptr32
  OrigDataType: ptr32
T_61: (in 0xC<32> @ 004011CE : word32)
  Class: Eq_61
  DataType: ui32
  OrigDataType: ui32
T_62: (in fp - 0xC<32> @ 00000000 : word32)
  Class: Eq_2
  DataType: (ptr32 Eq_2)
  OrigDataType: ptr32
T_63: (in fn004011FC(fp - 0xC<32>) @ 004011CE : void)
  Class: Eq_6
  DataType: void
  OrigDataType: void
T_64: (in dwLoc08 @ 004011D4 : word32)
  Class: Eq_40
  DataType: (ptr32 void)
  OrigDataType: word32
T_65: (in fn00401158 @ 0040120E : ptr32)
  Class: Eq_49
  DataType: (ptr32 Eq_49)
  OrigDataType: (ptr32 (fn T_66 ()))
T_66: (in fn00401158() @ 0040120E : word32)
  Class: Eq_46
  DataType: (ptr32 void)
  OrigDataType: word32
T_67: (in 0x1C<32> @ 0040120E : word32)
  Class: Eq_67
  DataType: word32
  OrigDataType: word32
T_68: (in fn00401158() + 0x1C<32> @ 0040120E : word32)
  Class: Eq_68
  DataType: word32
  OrigDataType: word32
T_69: (in 004020F8 @ 0040120E : ptr32)
  Class: Eq_69
  DataType: (ptr32 word32)
  OrigDataType: (ptr32 (struct (0 T_70 t0000)))
T_70: (in Mem17[0x004020F8<p32>:word32] @ 0040120E : word32)
  Class: Eq_68
  DataType: word32
  OrigDataType: word32
T_71: (in 0x82727349<32> @ 00401213 : word32)
  Class: Eq_71
  DataType: word32
  OrigDataType: word32
T_72: (in 0<32> @ 00401213 : word32)
  Class: Eq_72
  DataType: word32
  OrigDataType: word32
T_73: (in dwArg04 + 0<32> @ 00401213 : word32)
  Class: Eq_73
  DataType: word32
  OrigDataType: word32
T_74: (in Mem18[dwArg04 + 0<32>:word32] @ 00401213 : word32)
  Class: Eq_71
  DataType: word32
  OrigDataType: word32
T_75: (in 0x004020E4<p32> @ 00401219 : ptr32)
  Class: Eq_75
  DataType: ptr32
  OrigDataType: ptr32
T_76: (in 4<32> @ 00401219 : word32)
  Class: Eq_76
  DataType: word32
  OrigDataType: word32
T_77: (in dwArg04 + 4<32> @ 00401219 : word32)
  Class: Eq_77
  DataType: ptr32
  OrigDataType: ptr32
T_78: (in Mem19[dwArg04 + 4<32>:word32] @ 00401219 : word32)
  Class: Eq_75
  DataType: ptr32
  OrigDataType: word32
T_79:
  Class: Eq_79
  DataType: word32
  OrigDataType: word32
T_80:
  Class: Eq_80
  DataType: word32
  OrigDataType: word32
T_81:
  Class: Eq_81
  DataType: word32
  OrigDataType: word32
T_82:
  Class: Eq_82
  DataType: word32
  OrigDataType: word32
T_83:
  Class: Eq_83
  DataType: word32
  OrigDataType: word32
T_84:
  Class: Eq_84
  DataType: word32
  OrigDataType: word32
T_85:
  Class: Eq_85
  DataType: word32
  OrigDataType: word32
T_86:
  Class: Eq_86
  DataType: word32
  OrigDataType: word32
T_87:
  Class: Eq_87
  DataType: word32
  OrigDataType: word32
T_88:
  Class: Eq_88
  DataType: word32
  OrigDataType: word32
T_89:
  Class: Eq_89
  DataType: word32
  OrigDataType: word32
T_90:
  Class: Eq_90
  DataType: word32
  OrigDataType: word32
T_91:
  Class: Eq_91
  DataType: word32
  OrigDataType: word32
T_92:
  Class: Eq_92
  DataType: word32
  OrigDataType: word32
T_93:
  Class: Eq_93
  DataType: word32
  OrigDataType: word32
T_94:
  Class: Eq_94
  DataType: word32
  OrigDataType: word32
T_95:
  Class: Eq_95
  DataType: word32
  OrigDataType: word32
T_96:
  Class: Eq_96
  DataType: word32
  OrigDataType: word32
T_97:
  Class: Eq_97
  DataType: word32
  OrigDataType: word32
T_98:
  Class: Eq_98
  DataType: word32
  OrigDataType: word32
T_99:
  Class: Eq_99
  DataType: word32
  OrigDataType: word32
T_100:
  Class: Eq_100
  DataType: word32
  OrigDataType: word32
T_101:
  Class: Eq_101
  DataType: word32
  OrigDataType: word32
T_102:
  Class: Eq_102
  DataType: word32
  OrigDataType: word32
T_103:
  Class: Eq_103
  DataType: word32
  OrigDataType: word32
T_104:
  Class: Eq_104
  DataType: word32
  OrigDataType: word32
T_105:
  Class: Eq_105
  DataType: word32
  OrigDataType: word32
T_106:
  Class: Eq_106
  DataType: word32
  OrigDataType: word32
T_107:
  Class: Eq_107
  DataType: word32
  OrigDataType: (struct 0004 (0 T_30 t0000))
T_108:
  Class: Eq_108
  DataType: (arr word32)
  OrigDataType: (arr T_107)
*/
typedef struct Globals {
	uint32 dw40208B;	// 40208B
	char b4020A4;	// 4020A4
	word32 dw4020F8;	// 4020F8
	word32 dw40503C;	// 40503C
	word32 dw405040;	// 405040
	word32 dw405044;	// 405044
	word32 dw405048;	// 405048
	word32 dw40504C;	// 40504C
	<anonymous> * __imp__GetModuleHandleA;	// 405054
	<anonymous> * __imp__GetProcAddress;	// 405058
	<anonymous> * __imp__GetProcessHeap;	// 40505C
	<anonymous> * __imp__HeapAlloc;	// 405060
	<anonymous> * __imp__HeapFree;	// 405064
	word32 dw40506C;	// 40506C
	word32 dw405070;	// 405070
	word32 dw405074;	// 405074
	word32 dw405078;	// 405078
	word32 dw40507C;	// 40507C
	word32 dw405080;	// 405080
	word32 dw405084;	// 405084
	word32 dw405088;	// 405088
	word32 dw40508C;	// 40508C
	word32 dw405090;	// 405090
	word32 dw405094;	// 405094
	word32 dw405098;	// 405098
	word32 dw40509C;	// 40509C
	word32 dw4050A0;	// 4050A0
	word32 dw4050A4;	// 4050A4
	word32 dw4050A8;	// 4050A8
	word32 dw4050AC;	// 4050AC
	word32 dw4050B0;	// 4050B0
	word32 dw4050B4;	// 4050B4
	word32 dw4050B8;	// 4050B8
	word32 dw4050BC;	// 4050BC
	word32 dw4050C0;	// 4050C0
	word32 dw4050C4;	// 4050C4
	<anonymous> * __imp__@_InitTermAndUnexPtrs$qv;	// 4050CC
	<anonymous> * __imp_____CRTL_MEM_UseBorMM;	// 4050D0
	<anonymous> * __imp_____CRTL_TLS_Alloc;	// 4050D4
	<anonymous> * __imp_____CRTL_TLS_ExitThread;	// 4050D8
	<anonymous> * __imp_____CRTL_TLS_Free;	// 4050DC
	<anonymous> * __imp_____CRTL_TLS_GetValue;	// 4050E0
	<anonymous> * __imp_____CRTL_TLS_InitThread;	// 4050E4
	<anonymous> * __imp_____CRTL_TLS_SetValue;	// 4050E8
	<anonymous> * __imp____argc;	// 4050EC
	<anonymous> * __imp____argv;	// 4050F0
	<anonymous> * __imp____argv_default_expand;	// 4050F4
	<anonymous> * __imp____exitargv;	// 4050F8
	<anonymous> * __imp____handle_exitargv;	// 4050FC
	<anonymous> * __imp____handle_setargv;	// 405100
	<anonymous> * __imp____handle_wexitargv;	// 405104
	<anonymous> * __imp____handle_wsetargv;	// 405108
	<anonymous> * __imp____matherr;	// 40510C
	<anonymous> * __imp____matherrl;	// 405110
	<anonymous> * __imp____setargv;	// 405114
	<anonymous> * __imp____startup;	// 405118
	<anonymous> * __imp____wargv_default_expand;	// 40511C
	<anonymous> * __imp___memcpy;	// 405120
	<anonymous> * __imp___printf;	// 405124
} Eq_1;

typedef struct Eq_2 {
	word32 dw0000;	// 0
	ptr32 ptr0004;	// 4
} Eq_2;

typedef void (Eq_3)(Eq_2 *);

typedef HANDLE Eq_16;

typedef HANDLE (Eq_17)();

typedef struct Eq_23 {
	word32 (* ptr002C)[];	// 2C
} Eq_23;

typedef int32 (Eq_34)(char *);

typedef void (Eq_44)(void, void, size_t);

typedef size_t Eq_48;

typedef void (Eq_49)();

typedef void (Eq_54)();

