void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	word32 a6_9 = Mem0[0x00000004<p32>:word32]
	word32 d2_100 = d0
	word32 a2_277 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	word32 a0_13 = 0x00003E20<p32>
	word32 d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00003E20<p32>:word32] = fp
	Mem32[0x00003E24<p32>:word32] = a6_9
	word32 d0_34 = FindTask(0<32>)
	word32 d0_38 = OpenLibrary(0x000012BC<p32>, 0<i32>)
	branch d0_38 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	word32 d4_72
	Mem65[0x00003E28<p32>:word32] = d0_38
	branch Mem65[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	word32 a0_71 = a0
	d4_72 = 3<i32>
l0000106A:
	branch Mem65[a0_671:byte] != 0x20<8> l00001072
l00001070:
	d4_72 = SEQ(SLICE(d4_72, word16, 16), SLICE(d4_72, word16, 0) + 1<16>)
l00001072:
	a0_71 = a0_671 + 1<i32>
	a0_671 = a0_71
	branch Mem65[a0_671:byte] != 0<8> l0000106A
l00001060:
	d4_72 = 2<i32>
	d2_100 = 8<i32>
l00001076:
	word32 d0_98 = d4_72 << 2<32>
	word32 d0_105 = d0_98 + d2_100
	word32 d1_109 = 0x10001<32>
	word32 d0_110 = AllocMem(d0_105 + 0x11<32>, 0x10001<32>)
	branch d0_110 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem65[0x00003E28<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem153[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
l00001096:
	word32 dwLoc0C_528
	word32 a0_426
	Mem168[d0_110:word32] = d0_105 + 0x11<32>
	Mem171[d0_110 + 12<i32>:word32] = d4_72 - 1<32>
	Mem174[d0_110 + 8<i32>:word32] = d0_110 + 16<i32> + d0_98
	Mem176[0<32>:word32] = 0<32>
	word32 d0_177 = Mem176[d0_34 + 172<i32>:word32]
	branch d0_177 == 0<32> l00001190
l00001190:
	word32 d0_181 = fn00001214(d0_34)
	Mem183[0x00003E2C<p32>:word32] = d0_181
	Mem184[0x00003E30<p32>:word32] = d0_181
	Mem188[0<32>:word32] = 0<32>
	dwLoc0C_528 = d0_181
	branch Mem188[d0_181 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	word32 d0_202 = Supervisor(d0_110)
	Mem203[d0_110 + 4<i32>:word32] = d0_202
	branch d0_202 != 0<32> l000011D2
l000011D2:
	Mem207[0x00003E34<p32>:word32] = d0_202
	Mem208[0x00003E38<p32>:word32] = d0_202
	Mem209[0x00003E3C<p32>:word32] = d0_202
	Mem211[d0_34 + 156<i32>:word32] = d0_202
	Mem212[d0_34 + 160<i32>:word32] = d0_202
	word32 d0_216 = Mem212[(d0_202 << 2<32>) + 8<i32>:word32]
	branch d0_216 == 0<32> l000011F4
l000011F0:
	Mem219[d0_34 + 164<i32>:word32] = d0_216
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C()
	return
l000010B6:
	word32 d0_240 = Mem176[(d0_177 << 2<32>) + 16<i32>:word32]
	word32 a1_243 = Mem176[d0_110 + 8<i32>:word32]
	word32 a0_248 = (d0_240 << 2<32>) + 1<i32>
	Mem251[a0_248 + CONVERT(Mem176[d0_240 << 2<32>:byte], byte, uint32):byte] = 0<8>
	Mem252[d0_110 + 16<i32>:word32] = a0_248
	word32 a6_253 = d0_110 + 20<i32>
	word32 d3_254 = 1<i32>
	word32 a0_259 = a0 + d2_100
l000010DA:
	a0_259 = a0_259 - 1<i32>
	branch Mem252[a0_259:byte] >u 0x20<8> l000010E2
l000010DE_1:
	word16 v29_267 = SLICE(d2_100, word16, 0)
	d2_100 = SEQ(SLICE(d2_100, word16, 16), v29_267 - 1<i16>)
	branch v29_267 != 0<16> l000010DA
l000010E2:
	Mem272[a0_259 + 1<i32>:byte] = 0<8>
l000010E6:
	byte v31_279 = Mem278[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(SLICE(d1_109, word24, 8), v31_279)
	branch v31_279 == 0<8> l00001148
l000010EA:
	branch v31_279 == 0x20<8> l000010E6
l000010F0:
	branch v31_279 == 9<8> l000010E6
l000010F6:
	branch d3_254 - Mem278[d0_110 + 12<i32>:word32] == 0<32> l00001148
l000010FC:
	Mem299[a6_253:word32] = a1_243
	a6_253 = a6_253 + 4<i32>
	d3_254 = SEQ(SLICE(d3_254, word16, 16), SLICE(d3_254, word16, 0) + 1<16>)
	branch v31_279 == 0x22<8> l0000111A
l0000111A:
	byte v50_310 = Mem309[a2_277:byte]
	word24 v51_313 = SLICE(d1_109, word24, 8)
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(v51_313, v50_310)
	branch v50_310 == 0<8> l00001148
l0000111E:
	branch v50_310 == 0x22<8> l00001116
l00001124:
	branch v50_310 != 0x2A<8> l00001144
l0000112A:
	byte v54_323 = Mem309[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(v51_313, v54_323)
	branch (v54_323 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v54_323 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_109 = 27<i32>
l00001138:
	d1_109 = 10<i32>
l00001144:
	Mem348[a1_243:byte] = SLICE(d1_109, byte, 0)
	a1_243 = a1_243 + 1<i32>
l00001106:
	Mem352[a1_243:byte] = v31_279
	a1_243 = a1_243 + 1<i32>
l00001108:
	byte v40_357 = Mem356[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(SLICE(d1_109, word24, 8), v40_357)
	branch v40_357 == 0<8> l00001148
l00001148:
	Mem366[a1_243:byte] = 0<8>
	Mem371[a6_253:word32] = 0<32>
	Mem396[0x00003E34<p32>:word32] = execPrivate4()
	word32 d0_397 = execPrivate5()
	Mem398[0x00003E38<p32>:word32] = d0_397
	dwLoc0C_528 = d0_110 + 16<i32>
	dwLoc10 = d3_254
	branch Mem398[Mem398[0x00003E24<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	word32 v64_408 = Mem398[d0_34 + 224<i32>:word32]
	Mem409[0x00003E3C<p32>:word32] = v64_408
	branch v64_408 != 0<32> l0000117E
l0000117A:
	Mem414[0x00003E3C<p32>:word32] = d0_397
l0000117E:
	branch Mem418[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_426 = Mem424[d0_34 + 58<i32>:word32]
l00001186:
	word32 a0_429 = Mem418[d0_34 + 176<i32>:word32]
	a0_426 = a0_429 + 4<i32> - Mem418[a0_429:word32]
l00001202:
	Mem439[0x00003E48<p32>:word32] = a0_426
	Mem446[0x00003E4C<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_528)
l00001212_thunk_fn0000127C:
	fn0000127C()
	return
fn00001000_exit:
l0000110C:
	branch v40_357 == 0x20<8> l00001116
l00001116:
	Mem478[a1_243:byte] = 0<8>
	a1_243 = a1_243 + 1<i32>
l00001112:
	Mem485[a1_243:byte] = v40_357
	a1_243 = a1_243 + 1<i32>


word32 fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	return fn0000127C()
fn00001278_exit:


word32 fn0000127C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	word32 a7_6 = Mem0[0x00003E20<p32>:word32]
	word32 v7_11 = Mem0[a7_6 - 4<i32>:word32]
	word32 v5_8 = Mem0[a7_6 - 8<i32>:word32]
	branch Mem0[v7_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003E28<p32>:word32])
	branch v5_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v5_8)
l000012B0:
	FreeMem(v7_11, Mem0[v7_11:word32])
	return v7_11
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	word32 d2_16 = 1<i32>
	branch Mem11[0x00003F6C<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_16 = d2_16 + 1<32>
	branch Mem11[0x00003F68<p32> + (d2_16 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	word32 d2_33 = d2_16 - 1<32>
	branch d2_33 == 0<32> l00001308
l000012FA:
	call Mem11[0x00003F68<p32> + (d2_33 << 2<32>):word32] (retsize: 4;)
		uses: d0:d2_36 << 2<32>,Stack +0014:dwArg04
	d2_33 = d2_33 - 1<32>
	branch d2_33 != 0<32> l000012FA
l00001308:
	return fn00001278(dwArg04)
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn00002530
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003E50<p32>:word32] != 0<32> l0000134E
l00001328:
	word32 a3_13 = Mem8[0x00003F78<p32>:word32]
	Mem15[0x00003E50<p32>:word32] = 1<i32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_25,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	a5 = fn000012D0(dwArg04)
l0000134E:
	return a5
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	word32 a3_17 = 0x00003F60<p32>
	word32 d0_10 = 0x3F5C<32>
	branch false l00001372
l00001366:
	branch Mem8[0x00003F60<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_17:word32] (retsize: 4;)
		uses: Stack +0010:dwArg04,Stack +0014:dwArg08
		defs: d0:d0_23
	a3_17 = a3_17 + 4<i32>
	branch Mem8[a3_17:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn00001390(d0_10))
	return
fn00001354_exit:


word32 fn00001390(word32 d0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse:  d0:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3
fn00001390_entry:
l00001390:
	word32 d0_157 = fn00002BF0(fn00002BF0(fn000015A4(fn00002BF0(d0, 0x0000147C<p32>), 0x00001480<p32>), 0x0000149C<p32>), 0x000014A0<p32>)
	word32 d3_149 = 1<i32>
l0000145A:
	branch d3_149 - dwLoc04 <= 0<32> l000013DE
l000013DE:
	word32 d2_143 = 1<i32>
l00001452:
	d0_157 = 40<i32>
	branch d2_143 <= 40<i32> l000013E2
l000013E2:
	word32 d0_107
	word32 d1_83 = dwLoc14 + dwLoc10 + d2_143
	fn000014AC(d2_143, d1_83 >> 1<32>, 0x0000000A<p32>)
	branch d2_143 - (d1_83 >> 1<32>) == 0<32> l0000141A
l0000141A:
	d0_107 = 1<i32>
l00001416:
	d0_107 = 0<i32>
l0000141C:
	word32 d0_120
	branch (d0_107 | d2_143) != 0<32> l00001430
l00001430:
	d0_120 = 0<i32>
l0000142C:
	d0_120 = 1<i32>
l00001432:
	word32 d0_135
	word32 d0_129 = d0_120 + d2_143
	dwLoc10 = d0_129
	branch d2_143 - d0_129 < 0<32> l0000144A
l0000144A:
	d0_135 = 1<i32>
l00001446:
	d0_135 = 0<i32>
l0000144C:
	dwLoc14 = d0_135
	d2_143 = d2_143 + 1<32>
l00001458:
	d3_149 = d3_149 + 1<32>
l00001462:
	return fn000015A4(d0_157, 0x000014A4<p32>)
fn00001390_exit:


void fn000014AC(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX d0 d1
// Preserved: a7
fn000014AC_entry:
l000014AC:
	branch dwArg08 < 0<32> l000014C0
l000014C0:
	word32 d1_13 = -dwArg08
	branch dwArg04 < 0<32> l000014D6
l000014D6:
	word32 d1_98
	fn0000151E(-dwArg04, d1_13, d2, out d1_98)
	return
l000014C6:
	word32 d1_99
	fn0000151E(dwArg04, d1_13, d2, out d1_99)
	return
l000014B6:
	branch dwArg04 < 0<32> l000014CC
l000014CC:
	word32 d1_96
	fn0000151E(-dwArg04, dwArg08, d2, out d1_96)
	return
l000014BA:
	word32 d1_97
	fn0000151E(dwArg04, dwArg08, d2, out d1_97)
	return
fn000014AC_exit:


word32 fn000014EC(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7
fn000014EC_entry:
l000014EC:
	branch dwArg04 > 0<32> l0000150C
l0000150C:
	branch dwArg08 > 0<32> l0000150E_thunk_fn0000151E
l0000150E_thunk_fn0000151E:
	word32 d1_90
	return fn0000151E(dwArg04, dwArg08, d2, out d1_90)
l00001510:
	word32 d1_91
	return -fn0000151E(dwArg04, -dwArg08, d2, out d1_91)
l000014F6:
	word32 d0_36 = -dwArg04
	branch dwArg08 > 0<32> l00001504
l00001504:
	word32 d1_88
	return -fn0000151E(d0_36, dwArg08, d2, out d1_88)
l000014FC:
	word32 d1_89
	return fn0000151E(d0_36, -dwArg08, d2, out d1_89)
fn000014EC_exit:


word32 fn0000151E(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000014AC
//      fn000014EC
//      fn00002664
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn0000151E_entry:
l0000151E:
	word32 d1_20 = __swap(d1)
	word16 v9_8 = SLICE(d1_20, word16, 0)
	word16 v10_9 = SLICE(d2, word16, 16)
	word32 d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l00001544
l00001544:
	word32 d3_16 = 16<i32>
	branch SLICE(d1_20, word16, 0) >=u 0x80<16> l00001552
l0000154E:
	d1_20 = __rol(d1_20, 8<32>)
	d3_16 = 8<32>
l00001552:
	branch SLICE(d1_20, word16, 0) >=u 0x800<16> l0000155C
l00001558:
	d1_20 = __rol(d1_20, 4<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 4<16>)
l0000155C:
	branch SLICE(d1_20, word16, 0) >=u 0x2000<16> l00001566
l00001562:
	d1_20 = __rol(d1_20, 2<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 2<16>)
l00001566:
	branch SLICE(d1_20, word16, 0) < 0<16> l0000156E
l0000156A:
	d1_20 = __rol(d1_20, 1<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 1<16>)
l0000156E:
	word32 d0_69 = d0 >>u d3_16
	word32 d2_73 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_16
	word16 v51_80 = SLICE(__swap(d3_16), word16, 16)
	uint16 v49_77 = d0_69 /u SLICE(d1_20, uint16, 0)
	word32 d1_88 = __swap(d1_20)
	word32 d3_100 = SEQ(v51_80, v49_77)
	word32 d0_106 = SEQ(d0_69 % SLICE(d1_20, uint16, 0), SLICE(d2_73, word16, 0)) - SEQ(SLICE(d2_73, word16, 16), v49_77) *u32 SLICE(d1_88, word16, 0)
	branch d0_106 >=u 0<32> l00001590
l0000158A:
	d3_100 = SEQ(v51_80, v49_77 - 1<16>)
	d0_106 = d0_106 + d1_88
l0000158E:
	branch d0_106 >=u 0<32> l0000158E
l00001590:
	d1Out = __swap(__rol(d0_106, __swap(d3_100)))
	return CONVERT(SLICE(d3_100, word16, 0), word16, uint32)
l00001526:
	word32 d0_132 = __swap(d0)
	word32 d1_133 = __swap(d1_20)
	word16 v13_135 = SLICE(d0_132, word16, 0)
	word32 d2_137 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_135)
	branch v13_135 == 0<16> l00001534
l00001530:
	uint16 v16_141 = d2_137 /u SLICE(d1_133, uint16, 0)
	d2_137 = SEQ(d2_137 % SLICE(d1_133, uint16, 0), v16_141)
	d0_132 = SEQ(SLICE(d0_132, word16, 16), v16_141)
l00001534:
	word32 d0_148 = __swap(d0_132)
	word32 d2_152 = SEQ(SLICE(d2_137, word16, 16), SLICE(d0_148, word16, 0))
	uint16 v32_155 = d2_152 /u SLICE(d1_133, uint16, 0)
	d1Out = SEQ(SLICE(d1_133, word16, 16), SLICE(__swap(SEQ(d2_152 % SLICE(d1_133, uint16, 0), v32_155)), word16, 0))
	return SEQ(SLICE(d0_148, word16, 16), v32_155)
fn0000151E_exit:


word32 fn000015A4(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn000015A4_entry:
l000015A4:
	return fn000015C0(d0, Mem8[0x00003F80<p32>:word32], dwArg04, fp + 8<i32>)
fn000015A4_exit:


word32 fn000015C0(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015A4
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn000015C0_entry:
l000015C0:
	word32 d0_1851
	word32 d3_1399 = dwArg0C
	word32 a5_1490 = dwArg04
	word32 a4_1824 = dwArg08
	word32 d6_1518 = 0<i32>
	branch Mem36[dwArg08:byte] == 0<8> l00001F06
l000015DC:
	branch Mem46[a4_1824:byte] != 0x25<8> l00001EE0
l00001EE0:
	a4_1824 = a4_1824 + 1<i32>
	word32 a0_3163
	d0 = fn00001F40(CONVERT(CONVERT(Mem53[a4_1824:byte], byte, int16), int16, int32), a5_1490, out a0_3163, out a5_1490)
	branch d0 != 0xFFFFFFFF<32> l00001EFE
l00001EFE:
	d6_1518 = d6_1518 + 1<32>
l00001EFA:
	d0_1851 = d6_1518
l000015E4:
	word32 dwLoc30_2053 = 0<32>
	word32 d5_248 = -1<i32>
	word32 d4_367 = 105<i32>
	word32 a3_1203 = fp + -36<i32>
	word32 d7_1002 = 0<i32>
	word32 dwLoc0A_2055 = 0<32>
	word32 a2_131 = a4_1824 + 1<i32>
	word32 d2_126 = 0<32>
l00001602:
	word32 d1_100 = 0<i32>
l00001604:
	branch Mem99[0x00001F18<p32> + d1_100:byte] - Mem99[a2_131:byte] != 0<8> l00001628
l00001628:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l00001604
l00001616:
	word32 d1_119 = 1<i32> << d1_100
	d0 = d1_119
	d2_126 = d2_126 | d1_119
	a2_131 = a2_131 + 1<i32>
l00001632:
	branch d1_100 <u 5<32> l00001602
l0000163A:
	word32 a0_1365
	word32 d0_154
	word32 dwLoc28_2058 = d2_126
	branch Mem138[a2_131:byte] != 0x2A<8> l00001678
l00001678:
	a0_1365 = 0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), Mem138[a2_131:byte]) & 0xFF<32>)
	word32 d0_153 = CONVERT(Mem138[a0_1365:byte], byte, uint32)
	d0_154 = d0_153 & 4<32>
	branch (d0_153 & 4<32>) == 0<32> l000016E4
l00001694:
	word32 d2_159 = 0<32>
l00001698:
	word32 d1_171 = __swap(10<i32>) *u32 SLICE(d2_159, word16, 0)
	word32 d0_180 = SLICE(d2_159, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_171, word16, 16), SLICE(d1_171, word16, 0) + SLICE(__swap(d2_159), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	a0_1365 = 0x000028C5<p32> + (SEQ(SLICE(d0_180, word24, 8), Mem165[a2_131:byte]) & 0xFF<32>)
	word32 d1_190 = CONVERT(CONVERT(Mem165[a2_131:byte], byte, int16), int16, int32)
	word32 d0_204 = CONVERT(Mem165[a0_1365:byte], byte, uint32)
	d1_100 = d1_190 - 0x30<32>
	d2_159 = d1_190 - 0x30<32> + d0_180
	d0_154 = d0_204 & 4<32>
	branch (d0_204 & 4<32>) != 0<32> l00001698
l000016E0:
	dwLoc30_2053 = d2_159
l00001644:
	d0_154 = __align(d3_1399 + 3<32>, 4<i32>)
	a2_131 = a2_131 + 1<i32>
	d3_1399 = d0_154 + 4<32>
	a0_1365 = d0_154 + 4<32>
	word32 v31_225 = Mem138[d0_154:word32]
	branch v31_225 >= 0<32> l00001670
l00001670:
	dwLoc30_2053 = v31_225
l0000165C:
	d0_154 = -v31_225
	dwLoc28_2058 = d2_126 | 4<32>
	dwLoc30_2053 = d0_154
l000016E4:
	branch Mem240[a2_131:byte] != 0x2E<8> l00001778
l000016EC:
	a2_131 = a2_131 + 1<i32>
	branch Mem240[a2_131:byte] != 0x2A<8> l00001712
l00001712:
	a0_1365 = 0x000028C5<p32> + (SEQ(SLICE(d0_154, word24, 8), Mem240[a2_131:byte]) & 0xFF<32>)
	d5_248 = 0<i32>
	branch (CONVERT(Mem240[a0_1365:byte], byte, uint32) & 4<32>) == 0<32> l00001778
l00001730:
	word32 d1_275 = __swap(10<i32>) *u32 SLICE(d5_248, word16, 0)
	word32 d0_284 = SLICE(d5_248, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_275, word16, 16), SLICE(d1_275, word16, 0) + SLICE(__swap(d5_248), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	word32 d1_294 = CONVERT(CONVERT(Mem269[a2_131:byte], byte, int16), int16, int32)
	a0_1365 = 0x000028C5<p32> + (SEQ(SLICE(d0_284, word24, 8), Mem269[a2_131:byte]) & 0xFF<32>)
	d1_100 = d1_294 - 0x30<32>
	d5_248 = d1_294 - 0x30<32> + d0_284
	branch (CONVERT(Mem269[a0_1365:byte], byte, uint32) & 4<32>) != 0<32> l00001730
l000016F4:
	word32 d0_319 = __align(d3_1399 + 3<32>, 4<i32>)
	a2_131 = a2_131 + 1<i32>
	d3_1399 = d0_319 + 4<32>
	a0_1365 = d0_319 + 4<32>
	word32 v38_324 = Mem240[d0_319:word32]
	branch v38_324 < 0<32> l00001778
l0000170C:
	d5_248 = v38_324
l00001778:
	branch Mem332[a2_131:byte] == 0x68<8> l0000179C
l0000177E:
	branch Mem332[a2_131:byte] == 0x6C<8> l0000179C
l00001784:
	branch Mem332[a2_131:byte] == 0x4C<8> l0000179C
l0000178A:
	branch Mem332[a2_131:byte] == 0x6A<8> l0000179C
l00001790:
	branch Mem332[a2_131:byte] == 0x7A<8> l0000179C
l00001796:
	branch Mem332[a2_131:byte] != 0x74<8> l000017A2
l0000179C:
	a2_131 = a2_131 + 1<i32>
	d4_367 = CONVERT(CONVERT(Mem332[a2_131:byte], byte, int16), int16, int32)
l000017A2:
	branch d4_367 != 0x68<32> l000017B4
l000017AA:
	branch Mem332[a2_131:byte] != 0x68<8> l000017B4
l000017B0:
	d4_367 = 2<i32>
	a2_131 = a2_131 + 1<i32>
l000017B4:
	branch d4_367 != 0x6C<32> l000017C6
l000017BC:
	branch Mem332[a2_131:byte] != 0x6C<8> l000017C6
l000017C2:
	d4_367 = 1<i32>
	a2_131 = a2_131 + 1<i32>
l000017C6:
	branch d4_367 != 0x6A<32> l000017D0
l000017CE:
	d4_367 = 1<i32>
l000017D0:
	branch d4_367 != 0x7A<32> l000017DA
l000017D8:
	d4_367 = 108<i32>
l000017DA:
	branch d4_367 != 0x74<32> l000017E4
l000017E2:
	d4_367 = 105<i32>
l000017E4:
	word32 d5_1398
	byte v88_419 = Mem332[a2_131:byte]
	word32 a2_1791 = a2_131 + 1<i32>
	word32 d1_1037 = SEQ(SLICE(d1_100, word24, 8), v88_419)
	branch v88_419 == 0x25<8> l00001C6C
l00001C6C:
	a3_1203 = 0x00001F14<p32>
	dwLoc0A_2055 = 1<32>
	d5_1398 = 0<i32>
l000017F0:
	branch v88_419 == 0x58<8> l0000183E
l000017F6:
	branch v88_419 == 0x63<8> l00001BEC
l00001BEC:
	branch d4_367 != 0x6C<32> l00001C08
l00001C08:
	word32 d0_480 = __align(d3_1399 + 3<32>, 4<i32>)
	d3_1399 = d0_480 + 4<32>
	a0_1365 = d0_480 + 4<32>
l00001BF4:
	word32 d0_505 = __align(d3_1399 + 3<32>, 4<i32>)
	d3_1399 = d0_505 + 4<32>
	a0_1365 = d0_505 + 4<32>
l00001C1A:
	dwLoc0A_2055 = 1<32>
	d5_1398 = 0<i32>
l000017FE:
	branch v88_419 == 0x64<8> l0000183E
l00001804:
	branch v88_419 == 0x69<8> l0000183E
l0000180A:
	branch v88_419 == 0x6E<8> l00001C7E
l00001C7E:
	branch d4_367 != 1<32> l00001CA0
l00001CA0:
	branch d4_367 != 0x6C<32> l00001CBE
l00001CBE:
	branch d4_367 != 0x68<32> l00001CDC
l00001CDC:
	branch d4_367 != 2<32> l00001CFA
l00001CFA:
	word32 d0_543 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_543:word32]
	Mem563[a0_1365:word32] = d6_1518
	d3_1399 = d0_543 + 4<32>
l00001CE4:
	word32 d0_568 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_568:word32]
	Mem575[a0_1365:byte] = SLICE(d6_1518, byte, 0)
	d3_1399 = d0_568 + 4<32>
l00001CC6:
	word32 d0_580 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_580:word32]
	Mem587[a0_1365:word16] = SLICE(d6_1518, word16, 0)
	d3_1399 = d0_580 + 4<32>
l00001CA8:
	word32 d0_592 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_592:word32]
	Mem598[a0_1365:word32] = d6_1518
	d3_1399 = d0_592 + 4<32>
l00001C86:
	word32 d0_603 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_603:word32]
	Mem609[a0_1365 + 4<i32>:word32] = d6_1518
	Mem610[a0_1365:word32] = 0<32>
	d3_1399 = d0_603 + 4<32>
l00001D0E:
	d5_1398 = 0<i32>
	dwLoc30_2053 = 0<32>
l00001816:
	branch v88_419 <=u 0x70<8> l0000183E
l00001824:
	branch v88_419 == 0x73<8> l00001C28
l00001C28:
	word32 d0_641 = __align(d3_1399 + 3<32>, 4<i32>)
	a3_1203 = Mem524[d0_641:word32]
	d3_1399 = d0_641 + 4<32>
	a0_1365 = d0_641 + 4<32>
	word32 a1_647 = a3_1203
	dwLoc0A_2055 = 0<32>
	branch d5_248 == 0<32> l00001C4A
l00001C44:
	branch d5_248 <=u 0<32> l00001C66
l00001C4A:
	branch Mem648[a3_1203:byte] == 0<8> l00001C66
l00001C4E:
	word32 d0_676 = 0<32>
l00001C52:
	d0_676 = d0_676 + 1<32>
	a1_647 = a1_647 + 1<i32>
	branch d5_248 <=u 0<32> l00001C5E
l00001C5A:
	branch d5_248 - d0_676 <=u 0<32> l00001C62
l00001C5E:
	branch Mem648[a1_647:byte] != 0<8> l00001C52
l00001C62:
	dwLoc0A_2055 = d0_676
l00001C66:
	d5_1398 = 0<i32>
l00001830:
	branch v88_419 == 0x75<8> l0000183E
l00001836:
	branch v88_419 != 0x78<8> l00001D16
l00001D16:
	branch v88_419 != 0<8> l00001D1C
l00001D1A:
	a2_1791 = a2_1791 - 1<i32>
l00001D1C:
	a3_1203 = a4_1824
	dwLoc0A_2055 = a2_1791 - a4_1824
	d5_1398 = 0<i32>
	dwLoc30_2053 = 0<32>
l0000183E:
	branch v88_419 != 0x70<8> l00001850
l00001844:
	d4_367 = 108<i32>
	d1_1037 = 120<i32>
	dwLoc28_2058 = dwLoc28_2058 | 1<32>
l00001850:
	word32 dwLoc38_2095
	word32 dwLoc34_2111
	byte bLoc44_2117
	word32 d3_1022
	branch SLICE(d1_1037, byte, 0) == 0x64<8> l0000185E
l00001856:
	branch SLICE(d1_1037, byte, 0) != 0x69<8> l000019A8
l000019A8:
	word16 wLoc32_2100
	word16 wLoc34_2122
	branch d4_367 != 1<32> l000019CC
l000019CC:
	branch d4_367 != 0x6C<32> l000019EE
l000019EE:
	word32 d0_780 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 v204_786 = Mem785[d0_780:word32]
	d3_1022 = d0_780 + 4<32>
	wLoc32_2100 = SLICE(v204_786, word16, 0) (alias)
	wLoc34_2122 = SLICE(v204_786, word16, 16) (alias)
	dwLoc38_2095 = 0<32>
l000019D4:
	word32 d0_797 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 v196_802 = Mem785[d0_797:word32]
	d3_1022 = d0_797 + 4<32>
	wLoc32_2100 = SLICE(v196_802, word16, 0) (alias)
	wLoc34_2122 = SLICE(v196_802, word16, 16) (alias)
	dwLoc38_2095 = 0<32>
l000019B0:
	word32 d0_812 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 v187_817 = Mem785[d0_812 + 4<32>:word32]
	d3_1022 = d0_812 + 8<32>
	wLoc32_2100 = SLICE(v187_817, word16, 0) (alias)
	wLoc34_2122 = SLICE(v187_817, word16, 16) (alias)
	dwLoc38_2095 = Mem818[d0_812:word32]
l00001A06:
	word32 d1_838 = SEQ(SEQ(wLoc34_2122, SLICE(wLoc32_2100, byte, 8)), SLICE(wLoc32_2100, byte, 0))
	branch d4_367 != 0x68<32> l00001A22
l00001A0E:
	d1_838 = CONVERT(wLoc32_2100, word16, uint32)
	dwLoc38_2095 = 0<32>
l00001A22:
	byte bLoc31_2107 = SLICE(d1_838, byte, 24)
	dwLoc34_2111 = d1_838 (alias)
	branch d4_367 != 2<32> l00001A3E
l00001A2A:
	dwLoc34_2111 = CONVERT(bLoc31_2107, byte, uint32)
	dwLoc38_2095 = 0<32>
l00001A3E:
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
	branch (dwLoc28_2058 & 1<i32>) == 0<32> l00001ADC
l00001A4E:
	branch SLICE(d1_1037, byte, 0) != 0x6F<8> l00001A8A
l00001A54:
	branch d5_248 != 0<32> l00001A7E
l00001A58:
	branch dwLoc38_2095 - CONVERT(dwLoc34_2111 <u 0<32>, bool, word32) == 0<32> l00001A8A
l00001A7E:
	d7_1002 = 1<32>
l00001A8A:
	branch SLICE(d1_1037, byte, 0) == 0x78<8> l00001A9A
l00001A90:
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
	branch SLICE(d1_1037, byte, 0) != 0x58<8> l00001ADC
l00001A9A:
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
	branch dwLoc38_2095 - CONVERT(dwLoc34_2111 <u 0<32>, bool, word32) == 0<32> l00001ADC
l00001AC4:
	Mem1000[fp + -6<i32> + d7_1002:byte] = 0x30<8>
	word32 d7_999 = d7_1002 + 1<32>
	Mem1005[fp + -6<i32> + d7_999:byte] = SLICE(d1_1037, byte, 0)
	d7_1002 = d7_999 + 1<32>
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
l0000185E:
	word32 dwLoc40_2149
	word32 dwLoc3C_2159
	branch d4_367 != 1<32> l00001884
l00001884:
	branch d4_367 != 0x6C<32> l000018B0
l000018B0:
	word32 d0_1020 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 d0_1025 = Mem785[d0_1020:word32]
	d3_1022 = d0_1020 + 4<32>
	word16 wLoc3A_2150 = SLICE(d0_1025, word16, 0)
	word32 d0_1032 = d0_1025 >> 31<i32>
	dwLoc40_2149 = d0_1025 >> 31<i32>
	branch d4_367 != 0x68<32> l000018F6
l000018DA:
	d0_1025 = CONVERT(wLoc3A_2150, word16, int32)
	dwLoc40_2149 = d0_1025 >> 31<i32>
	d1_1037 = SEQ(SLICE(d0_1025 >> 31<i32>, word16, 16), wLoc3A_2150)
	d0_1032 = d1_1037
l000018F6:
	byte bLoc39_2155 = SLICE(d0_1025, byte, 24)
	dwLoc3C_2159 = d0_1025 (alias)
	branch d4_367 != 2<32> l0000191C
l000018FE:
	word32 d1_1081 = CONVERT(CONVERT(bLoc39_2155, byte, int16), int16, int32)
	dwLoc3C_2159 = d1_1081
	dwLoc40_2149 = d1_1081 >> 31<i32>
	d1_1037 = SEQ(SLICE(d0_1032, word24, 8), bLoc39_2155)
l0000188C:
	word32 d0_1099 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 d0_1103 = Mem785[d0_1099:word32]
	d3_1022 = d0_1099 + 4<32>
	dwLoc3C_2159 = d0_1103
	dwLoc40_2149 = d0_1103 >> 31<i32>
l00001866:
	word32 d0_1118 = __align(d3_1399 + 3<32>, 4<i32>)
	d3_1022 = d0_1118 + 8<32>
	dwLoc3C_2159 = Mem785[d0_1118 + 4<32>:word32]
	dwLoc40_2149 = Mem1124[d0_1118:word32]
l0000191C:
	byte v122_1129 = SLICE(d1_1037, byte, 0)
	branch dwLoc40_2149 - CONVERT(dwLoc3C_2159 <u 0<32>, bool, word32) >= 0<32> l00001966
l00001966:
	branch (dwLoc28_2058 & 16<i32>) == 0<32> l00001980
l00001980:
	branch (dwLoc28_2058 & 8<i32>) == 0<32> l00001994
l00001988:
	d7_1002 = 1<32>
l00001972:
	d7_1002 = 1<32>
l00001994:
	dwLoc34_2111 = dwLoc3C_2159
	dwLoc38_2095 = dwLoc40_2149
	bLoc44_2117 = v122_1129
l00001ADC:
	word32 dwLoc44_2192
	a3_1203 = fp + -14<i32>
	branch bLoc44_2117 == 0x78<8> l00001AF0
l00001AEA:
	branch bLoc44_2117 != 0x58<8> l00001AFA
l00001AFA:
	word32 dwLoc40_2189
	branch bLoc44_2117 != 0x6F<8> l00001B0A
l00001B0A:
	dwLoc40_2189 = 0xA<32>
l00001B00:
	dwLoc40_2189 = 8<32>
l00001B12:
	dwLoc44_2192 = dwLoc40_2189
l00001AF0:
	dwLoc44_2192 = 0x10<32>
l00001B18:
	word32 a6_1235
	branch bLoc44_2117 == 0x58<8> l00001B2A
l00001B2A:
	a6_1235 = 0x00001F30<p32>
l00001B24:
	a6_1235 = 0x00001F20<p32>
l00001B2E:
	word32 d6_1294 = dwLoc38_2095
	word32 d7_1296 = dwLoc34_2111
	word32 d3_1298 = 0<32>
l00001B50:
	a3_1203 = a3_1203 - 1<i32>
	Mem1349[a3_1203:byte] = Mem1325[a6_1235 + fn000027B0(d6_1294, d7_1296, dwLoc44_2192 >> 31<i32>, dwLoc44_2192):byte]
	word32 d1_1368
	word32 d0_1367 = fn00002560(d6_1294, d7_1296, dwLoc44_2192 >> 31<i32>, dwLoc44_2192, out d1_1368, out a0_1365)
	d6_1294 = d0_1367
	d7_1296 = d1_1368
	d3_1298 = d3_1298 + 1<32>
	branch d0_1367 - CONVERT(d1_1368 <u 0<32>, bool, word32) != 0<32> l00001B50
l00001BBE:
	dwLoc0A_2055 = d3_1298
	d5_1398 = d5_248
	d3_1399 = d3_1022
	branch d5_248 != 0xFFFFFFFF<32> l00001BE0
l00001BE0:
	dwLoc28_2058 = dwLoc28_2058 & 0xFFFFFFFD<32>
l00001BDA:
	d5_1398 = 0<i32>
l00001D2C:
	word32 dwLoc44_2276
	branch d5_1398 - dwLoc0A_2055 >u 0<32> l00001D3A
l00001D3A:
	dwLoc44_2276 = d5_1398
l00001D32:
	dwLoc44_2276 = dwLoc0A_2055
l00001D3E:
	word32 dwLoc44_2319
	word32 d0_1443 = dwLoc44_2276 + d7_1002
	branch d0_1443 - dwLoc30_2053 <u 0<32> l00001D62
l00001D62:
	dwLoc44_2319 = dwLoc30_2053 - d0_1443
l00001D5C:
	dwLoc44_2319 = 0<32>
l00001D72:
	branch (dwLoc28_2058 & 2<i32>) == 0<32> l00001DB4
l00001D80:
	word32 d2_1482 = 0<i32>
	branch d7_1002 == 0<32> l00001DB4
l00001D86:
	branch fn00001F40(CONVERT(CONVERT(Mem1491[fp + -6<i32> + d2_1482:byte], byte, int16), int16, int32), a5_1490, out a0_1365, out a5_1490) != 0xFFFFFFFF<32> l00001DAC
l00001DAC:
	d2_1482 = d2_1482 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch d7_1002 - d2_1482 >u 0<32> l00001D86
l00001DB4:
	branch (dwLoc28_2058 & 4<i32>) != 0<32> l00001E06
l00001DBC:
	word32 d2_1534 = 0<i32>
	branch dwLoc44_2319 == 0<32> l00001E06
l00001DC4:
l00001DCC:
	word32 a0_1555
	branch (dwLoc28_2058 & 2<i32>) == 0<32> l00001DDA
l00001DDA:
	a0_1555 = SEQ(SLICE(a0_1365, word16, 16), 0x20<16>)
l00001DD4:
	a0_1555 = SEQ(SLICE(a0_1365, word16, 16), 0x30<16>)
l00001DDE:
	branch fn00001F40(a0_1555, a5_1490, out a0_1365, out a5_1490) != 0xFFFFFFFF<32> l00001DF6
l00001DF6:
	d2_1534 = d2_1534 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch dwLoc44_2319 - d2_1534 >u 0<32> l00001DCC
l00001DFE:
l00001E06:
	branch (dwLoc28_2058 & 2<i32>) != 0<32> l00001E42
l00001E0E:
	word32 d2_1601 = 0<i32>
	branch d7_1002 == 0<32> l00001E42
l00001E14:
	word32 a0_3164
	branch fn00001F40(CONVERT(CONVERT(Mem1613[fp + -6<i32> + d2_1601:byte], byte, int16), int16, int32), a5_1490, out a0_3164, out a5_1490) != 0xFFFFFFFF<32> l00001E3A
l00001E3A:
	d2_1601 = d2_1601 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch d7_1002 - d2_1601 >u 0<32> l00001E14
l00001E42:
	word32 d2_1650 = dwLoc0A_2055
	branch d5_1398 - dwLoc0A_2055 <=u 0<32> l00001E70
l00001E4C:
	word32 a0_3165
	branch fn00001F40(0x00000030<p32>, a5_1490, out a0_3165, out a5_1490) != 0xFFFFFFFF<32> l00001E68
l00001E68:
	d2_1650 = d2_1650 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch d5_1398 - d2_1650 >u 0<32> l00001E4C
l00001E70:
	word32 d2_1693 = 0<i32>
	branch dwLoc0A_2055 == 0<32> l00001EA6
l00001E78:
l00001E7C:
	word32 a0_3166
	branch fn00001F40(CONVERT(CONVERT(Mem1704[a3_1203 + d2_1693:byte], byte, int16), int16, int32), a5_1490, out a0_3166, out a5_1490) != 0xFFFFFFFF<32> l00001E9E
l00001E9E:
	d2_1693 = d2_1693 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch dwLoc0A_2055 - d2_1693 >u 0<32> l00001E7C
l00001EA6:
	d0 = dwLoc28_2058 & 4<i32>
	branch d0 == 0<32> l00001EDC
l00001EAE:
	word32 d2_1747 = 0<i32>
	branch dwLoc44_2319 == 0<32> l00001EDC
l00001EB6:
l00001EBA:
	word32 a0_3167
	d0 = fn00001F40(0x00000020<p32>, a5_1490, out a0_3167, out a5_1490)
	branch d0 != 0xFFFFFFFF<32> l00001ED4
l00001ED4:
	d2_1747 = d2_1747 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch dwLoc44_2319 - d2_1747 >u 0<32> l00001EBA
l00001EDC:
	a4_1824 = a2_1791
l00001F00:
	branch Mem1826[a4_1824:byte] != 0<8> l000015DC
l00001F06:
	d0_1851 = d6_1518
l00001ED0:
	d0_1851 = d6_1518
l00001E9A:
	d0_1851 = d6_1518
l00001E62:
	d0_1851 = d6_1518
l00001E34:
	d0_1851 = d6_1518
l00001DF0:
	d0_1851 = d6_1518
l00001DA6:
	d0_1851 = d6_1518
l00001F08:
	return d0_1851
fn000015C0_exit:
l00001946:


word32 fn00001F40(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015C0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn00001F40_entry:
l00001F40:
	word32 a0_101
	word32 d1_51
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<i32>
	word32 v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l00001F84
l00001F5C:
	branch dwArg04 != 10<i32> l00001F6E
l00001F62:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l00001F84
l00001F84:
	d1_51 = fn00001F9C(dwArg04, dwArg08, out a0_101, out a5)
l00001F6E:
	a0_101 = Mem20[dwArg08 + 4<i32>:word32]
	Mem60[dwArg08 + 4<i32>:word32] = a0_101 + 1<i32>
	Mem63[a0_101:byte] = SLICE(dwArg04, byte, 0)
	d1_51 = CONVERT(Mem63[a0_101:byte], byte, uint32)
l00001F92:
	a0Out = a0_101
	a5Out = a5
	return d1_51
fn00001F40_exit:


word32 fn00001F9C(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F40
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00001F9C_entry:
l00001F9C:
	word32 d0_107
	word32 a5_123 = fn00002530()
	branch dwArg08 != 0<32> l00001FB8
l00001FB8:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 73<i32>) == 64<i32> l00001FCA
l00001FCA:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l00001FE8
l00001FD0:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<i32>) == 0<32> l00001FE0
l00001FE0:
	Mem61[dwArg08 + 28<i32>:word32] = 0x400<32>
l00001FD8:
	Mem64[dwArg08 + 28<i32>:word32] = 1<i32>
l00001FE8:
	branch Mem67[dwArg08 + 8<i32>:word32] != 0<32> l00002028
l00002028:
	branch Mem67[dwArg08:word32] == 0<32> l00002082
l00002082:
	d0_107 = 0<i32>
l0000202C:
	branch (Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00002058
l00002038:
	branch dwArg04 != 10<i32> l00002058
l00002058:
	branch Mem67[dwArg08 + 4<i32>:word32] - Mem67[dwArg08 + 8<i32>:word32] - execPrivate3() == 0<32> l00002086
l00002076:
	Mem106[dwArg08 + 24<i32>:word32] = Mem67[dwArg08 + 24<i32>:word32] | 16<i32>
	a0 = dwArg08 + 24<i32>
	d0_107 = -1<i32>
l0000203E:
	word32 a0_110 = Mem67[dwArg08 + 4<i32>:word32]
	Mem113[dwArg08 + 4<i32>:word32] = a0_110 + 1<i32>
	Mem115[a0_110:byte] = SLICE(dwArg04, byte, 0)
	d0_107 = fn000020B0(dwArg08, out a0, out a5_123)
l00001FEE:
	word32 d4_139
	branch (Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00002002
l00002002:
	d4_139 = 1<i32>
l00001FFE:
	d4_139 = 2<i32>
l00002004:
	word32 d0_155 = fn0000215C(d4_139 + Mem67[dwArg08 + 28<i32>:word32], out a0)
	branch d0_155 != 0<32> l0000201E
l0000201E:
	Mem168[dwArg08 + 8<i32>:word32] = d0_155 + 1<i32>
l00002086:
	Mem175[dwArg08 + 24<i32>:word32] = Mem173[dwArg08 + 24<i32>:word32] | 2<i32>
	a0 = Mem175[dwArg08 + 8<i32>:word32]
	Mem182[a0:byte] = SLICE(dwArg04, byte, 0)
	Mem185[dwArg08 + 4<i32>:word32] = Mem182[dwArg08 + 8<i32>:word32] + 1<i32>
	Mem189[dwArg08 + 20<i32>:word32] = Mem185[dwArg08 + 28<i32>:word32] - 1<32>
	d0_107 = 0<i32>
l00002018:
	d0_107 = -1<i32>
l00001FC4:
	d0_107 = -1<i32>
l00001FB2:
	d0_107 = -1<i32>
l000020AA:
	a0Out = a0
	a5Out = a5_123
	return d0_107
fn00001F9C_exit:


word32 fn000020B0(word32 dwArg04, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F9C
//      fn00002BAC
//      fn00003DDC
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn000020B0_entry:
l000020B0:
	word32 d0_152
	word32 a5_23 = fn00002530()
	branch dwArg04 != 0<32> l000020C6
l000020C6:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l000020E4
l000020CC:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l000020DC
l000020DC:
	Mem41[dwArg04 + 28<i32>:word32] = 0x400<32>
l000020D4:
	Mem44[dwArg04 + 28<i32>:word32] = 1<i32>
l000020E4:
	branch Mem47[dwArg04 + 8<i32>:word32] != 0<32> l000020EE
l000020EE:
	branch (Mem47[dwArg04 + 24<i32>:word32] & 2<i32>) == 0<32> l00002134
l000020F6:
	branch Mem47[dwArg04:word32] == 0<32> l00002124
l00002124:
	d0_152 = 0<i32>
l000020FA:
	branch Mem47[dwArg04 + 4<i32>:word32] - Mem47[dwArg04 + 8<i32>:word32] - execPrivate3() == 0<32> l00002128
l00002128:
	Mem77[dwArg04 + 4<i32>:word32] = Mem47[dwArg04 + 8<i32>:word32]
	Mem79[dwArg04 + 20<i32>:word32] = Mem77[dwArg04 + 28<i32>:word32]
l00002134:
	Mem86[dwArg04 + 24<i32>:word32] = Mem84[dwArg04 + 24<i32>:word32] & -4<i32>
	a0 = dwArg04 + 24<i32>
	d0_152 = 0<i32>
l00002118:
	Mem92[dwArg04 + 24<i32>:word32] = Mem47[dwArg04 + 24<i32>:word32] | 16<i32>
	a0 = dwArg04 + 24<i32>
	d0_152 = -1<i32>
l000020EA:
	d0_152 = 0<i32>
l000020C2:
	d0_152 = -1<i32>
l0000213E:
	a0Out = a0
	a5Out = a5_23
	return d0_152
fn000020B0_exit:


word32 fn0000215C(word32 dwArg04, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F9C
//      fn00003CE0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 d0
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn0000215C_entry:
l0000215C:
	word32 d0_100
	branch dwArg04 != 0<32> l0000216A
l0000216A:
	branch Mem5[0x00003E58<p32>:word32] != 0<32> l0000218E
l00002172:
	word32 a0_13 = Mem5[0x00003E54<p32>:word32]
	Mem19[0<32>:word32] = 0<32>
	Mem33[0x00003E58<p32>:word32] = fn00002450(dwLoc10, a0_13, a0_13, out a0)
l0000218E:
	branch Mem36[0x00003E58<p32>:word32] != 0<32> l0000219A
l0000219A:
	word32 d0_53 = fn0000232C(Mem47[0x00003E58<p32>:word32], dwArg04 + 4<i32>, out a0)
	branch d0_53 != 0<32> l000021B8
l000021B8:
	Mem66[d0_53:word32] = dwArg04
	a0 = d0_53 + 4<i32>
	d0_100 = d0_53 + 4<i32>
l000021B4:
	d0_100 = 0<i32>
l00002196:
	d0_100 = 0<i32>
l00002166:
	d0_100 = 0<i32>
l000021C0:
	a0Out = a0
	return d0_100
fn0000215C_exit:


void fn000021C8(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn000021C8_entry:
l000021C8:
	branch dwArg04 == 0<32> l000021F2
l000021D2:
	branch Mem0[0x00003E58<p32>:word32] == 0<32> l000021F2
l000021DA:
	fn00002290(Mem21[0x00003E58<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<i32>)
l000021F2:
	return
fn000021C8_exit:


void fn00002290(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000021C8
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn00002290_entry:
l00002290:
	branch Mem20[Mem20[0x00003E24<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000022C0
l000022C0:
	branch dwArg04 == 0<32> l00002324
l000022C4:
	branch dwArg08 == 0<32> l00002324
l000022C8:
	word32 a3_36 = dwArg08 + -12<i32>
	branch dwArg0C - Mem20[dwArg04 + 20<i32>:word32] >=u 0<32> l0000230A
l000022D4:
	word32 a2_40 = dwArg04
l000022D6:
	a2_40 = Mem20[a2_40:word32]
	branch Mem20[a2_40:word32] == 0<32> l00002324
l000022DC:
	branch Mem20[a2_40 + 8<i32>:byte] == 0<8> l000022D6
l000022E2:
	branch dwArg08 - Mem20[a2_40 + 20<i32>:word32] <u 0<32> l000022D6
l000022E8:
	branch dwArg08 - Mem20[a2_40 + 24<i32>:word32] >=u 0<32> l000022D6
l000022EE:
	Deallocate(a2_40, dwArg08, dwArg0C)
	branch Mem20[a2_40 + 28<i32>:word32] - Mem20[dwArg04 + 16<i32>:word32] != 0<32> l00002324
l00002308:
	a3_36 = a2_40
l0000230A:
	Remove(a3_36)
	word32 a3_76 = a3_36 - 4<i32>
	FreeMem(a3_76, Mem20[a3_76:word32])
l000022AE:
	FreePooled(dwArg08, dwArg04)
l00002324:
	return
fn00002290_exit:


word32 fn0000232C(word32 dwArg04, word32 dwArg08, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000215C
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn0000232C_entry:
l0000232C:
	word32 d0_154
	word32 a0_111 = Mem26[0x00003E24<p32>:word32]
	branch Mem26[a0_111 + 20<i32>:word16] <u 0x27<16> l00002358
l00002358:
	word32 a3_116 = 0<32>
	branch dwArg04 == 0<32> l00002448
l00002360:
	branch dwArg08 == 0<32> l00002448
l00002366:
	branch dwArg08 - Mem26[dwArg04 + 20<i32>:word32] >=u 0<32> l0000241A
l0000241A:
	word32 d0_50 = AllocMem(dwArg08 + 16<i32>, Mem26[dwArg04 + 12<i32>:word32])
	a3_116 = d0_50
	branch d0_50 == 0<32> l00002448
l00002434:
	Mem55[d0_50:word32] = dwArg08 + 16<i32>
	AddTail(dwArg04, d0_50 + 4<i32>)
	Mem62[d0_50 + 12<i32>:word32] = 0<32>
	a0_111 = dwArg04
	a3_116 = d0_50 + 16<i32>
l0000236E:
	word32 a5_158 = Mem26[dwArg04:word32]
l00002370:
	branch Mem26[a5_158:word32] == 0<32> l00002392
l00002392:
	word32 d3_77 = Mem26[dwArg04 + 16<i32>:word32] + 40<i32>
	word32 d0_82 = AllocMem(d3_77, Mem26[dwArg04 + 12<i32>:word32])
	a3_116 = d0_82
	branch d0_82 == 0<32> l00002448
l000023B0:
	Mem87[d0_82:word32] = d3_77
	Mem89[d0_82 + 12<i32>:byte] = 0xA<8>
	Mem92[d0_82 + 20<i32>:word32] = d0_82 + 40<i32>
	Mem93[d0_82 + 24<i32>:word32] = d0_82 + 40<i32>
	Mem95[Mem93[d0_82 + 20<i32>:word32]:word32] = 0<32>
	word32 a2_96 = Mem95[d0_82 + 20<i32>:word32]
	Mem99[a2_96 + 4<i32>:word32] = Mem95[dwArg04 + 16<i32>:word32]
	Mem102[d0_82 + 32<i32>:word32] = Mem99[a2_96 + 4<i32>:word32]
	Mem105[d0_82 + 28<i32>:word32] = Mem102[d0_82 + 32<i32>:word32] + Mem102[d0_82 + 20<i32>:word32]
	AddHead(dwArg04, d0_82 + 4<i32>)
	a0_111 = d0_82 + 4<i32>
	a3_116 = Allocate(d0_82 + 4<i32>, dwArg08)
l00002374:
	branch Mem26[a5_158 + 8<i32>:byte] == 0<8> l0000238E
l0000237A:
	word32 d0_124 = Allocate(a5_158, dwArg08)
	a0_111 = a5_158
	a3_116 = d0_124
	branch d0_124 != 0<32> l000023FE
l000023FE:
	branch (Mem131[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l00002448
l0000240A:
	word32 a2_138 = a3_116
	word32 d2_141 = dwArg08 + 7<32> >>u 3<32>
l00002410:
	Mem144[a2_138:word32] = 0<32>
	word32 a2_145 = a2_138 + 4<i32>
	Mem146[a2_145:word32] = 0<32>
	a2_138 = a2_145 + 4<i32>
	d2_141 = d2_141 - 1<32>
	branch d2_141 != 0<32> l00002410
l00002418:
l00002448:
	d0_154 = a3_116
l0000238E:
	a5_158 = Mem26[a5_158:word32]
l00002346:
	a0_111 = dwArg04
	d0_154 = AllocPooled(dwArg08, dwArg04)
l0000244A:
	a0Out = a0_111
	return d0_154
fn0000232C_exit:


word32 fn00002450(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000215C
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002450_entry:
l00002450:
	word32 d0_47
	word32 a0_17 = Mem14[0x00003E24<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l0000247E
l0000247E:
	word32 a1_21 = 0<32>
	branch dwArg08 - dwArg0C <u 0<32> l000024B8
l00002484:
	word32 d0_30 = AllocMem(24<i32>, 0<i32>)
	a1_21 = d0_30
	branch d0_30 == 0<32> l000024B8
l0000249A:
	Mem36[d0_30:word32] = d0_30 + 4<i32>
	Mem37[d0_30 + 4<i32>:word32] = 0<32>
	Mem38[d0_30 + 8<i32>:word32] = d0_30
	Mem40[d0_30 + 12<i32>:word32] = dwArg04
	Mem43[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & -8<i32>
	Mem44[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l000024B8:
	d0_47 = a1_21
l0000246A:
	d0_47 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l000024BA:
	a0Out = a0_17
	return d0_47
fn00002450_exit:


void fn000024C0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn000024C0_entry:
l000024C0:
	branch Mem11[Mem11[0x00003E24<p32>:word32] + 20<i32>:word16] <u 0x27<16> l000024E4
l000024E4:
	branch dwArg04 == 0<32> l00002528
l000024E8:
	word32 d0_23 = RemHead(dwArg04)
	word32 a2_24 = d0_23
	branch d0_23 == 0<32> l0000251A
l000024FA:
	word32 a2_29 = a2_24 - 4<i32>
	FreeMem(a2_29, Mem11[a2_29:word32])
	word32 d0_38 = RemHead(dwArg04)
	a2_24 = d0_38
	branch d0_38 != 0<32> l000024FA
l0000251A:
	FreeMem(dwArg04, 24<i32>)
l000024D6:
	DeletePrivatePool(dwArg04)
l00002528:
	return
fn000024C0_exit:


word32 fn00002530()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001F9C
//      fn000020B0
//      fn00003CE0
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002530_entry:
l00002530:
	branch (SetSignal(0<i32>, 0x1000<32>) & 0x1000<32>) == 0<32> l0000255A
l0000254E:
	a5 = fn0000131C(0x00000014<p32>)
l0000255A:
	return a5
fn00002530_exit:


word32 fn00002560(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015C0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00002560_entry:
l00002560:
	word32 d0_196
	word32 d1_142 = dwArg08
	word32 a0_20 = dwArg08
	word32 d3_166 = dwArg10
	branch dwArg0C != 0<32> l000025B6
l000025B6:
	branch dwArg04 - dwArg0C >=u 0<32> l000025C0
l000025C0:
	word32 d4_29 = 24<i32>
	word32 d6_30 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l000025DE
l000025CA:
	d4_29 = 16<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l000025DE
l000025D2:
	d4_29 = 8<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l000025DE
l000025DA:
	d4_29 = 0<i32>
	d6_30 = SEQ(SLICE(d6_30, word24, 8), SLICE(dwArg0C, byte, 0))
l000025DE:
	word32 d4_61 = SEQ(SLICE(d4_29, word24, 8), SLICE(d4_29, byte, 0) + Mem17[0x00003E5C<p32> + CONVERT(SLICE(d6_30, word16, 0) & 0xFF<16>, word16, int32):byte])
	word32 d5_63 = 32<i32> - d4_61
	branch d5_63 != 0<32> l000025FE
l000025FE:
	word32 d1_86
	word32 d2_322
	word32 d0_85 = fn00002664(dwArg04 >>u d4_61, dwArg04 << d5_63 | dwArg08 >>u d4_61, dwArg0C << d5_63 | dwArg10 >>u d4_61, out d1_86, out d2_322)
	word32 d3_72 = dwArg10 << d5_63
	word32 d5_101 = __swap(d0_85)
	word32 d6_103 = __swap(d3_72)
	word32 d3_102 = d3_72 *u32 SLICE(d5_101, word16, 0)
	word32 d2_107 = __swap(d0_85 *u32 SLICE(d3_72, word16, 0))
	word16 v34_108 = SLICE(d2_107 + d3_102, word16, 0)
	word32 d4_104 = d0_85 *u32 SLICE(d6_103, word16, 0)
	word16 v39_116 = v34_108 + SLICE(d4_104, word16, 0)
	word32 d6_82 = dwArg08 << d5_63
	word32 d2_124 = __swap(SEQ(SLICE(d2_107, word16, 16), v39_116))
	word32 d5_105 = d5_101 *u32 SLICE(d6_103, word16, 0)
	a0_20 = d6_82
	d1_142 = d0_85
	word32 v48_134 = d1_86 - ((__swap(SEQ(SLICE(d3_102, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_104, word16, 16), 0<16>))) + SEQ(SLICE(d5_105, word16, 16), (SLICE(d5_105, word16, 0) + CONVERT(v34_108 <u 0<16>, bool, word16)) + CONVERT(v39_116 <u 0<16>, bool, word16)))
	branch v48_134 <u 0<32> l0000265A
l00002654:
	branch v48_134 != 0<32> l0000265C
l00002656:
	branch d6_82 - d2_124 >=u 0<32> l0000265C
l0000265A:
	d1_142 = d0_85 - 1<32>
l000025F2:
	branch dwArg0C - dwArg04 <u 0<32> l000025FA
l000025F6:
	branch dwArg10 - dwArg08 >u 0<32> l000025BA
l000025FA:
l000025BA:
l00002578:
	branch dwArg04 - dwArg10 >=u 0<32> l0000258A
l0000258A:
	branch dwArg10 != 0<32> l00002596
l0000258E:
	d3_166 = CONVERT(1<i32> /u SLICE(dwArg10, uint16, 0), uint16, int32)
l00002596:
	word32 d1_175
	word32 d2_176
	word32 d0_174 = fn00002664(0<i32>, dwArg04, d3_166, out d1_175, out d2_176)
	word32 d2_321
	word32 d1_320
	d1_142 = fn00002664(d1_175, dwArg08, d2_176, out d1_320, out d2_321)
	d0_196 = d0_174
l0000257C:
	word32 d2_319
	word32 d1_318
	d1_142 = fn00002664(dwArg04, dwArg08, dwArg10, out d1_318, out d2_319)
l0000265C:
	d0_196 = 0<i32>
l0000265E:
	d1Out = d1_142
	a0Out = a0_20
	return d0_196
fn00002560_exit:


word32 fn00002664(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002560
//      fn000027B0
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1 d2
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00002664_entry:
l00002664:
	word32 d7_13 = d2
	branch d2 == 0<32> l0000267E
l0000266C:
	word32 d6_17 = d1
	word32 d5_19 = d0
	branch d0 != 0<32> l0000268C
l0000268C:
	word32 d2_22 = __swap(d2)
	branch SLICE(d2_22, word16, 0) != 0<16> l000026B4
l000026B4:
	byte bLoc26_365 = 0<8>
	word32 d0_44 = 0<i32>
	branch d2 < 0<32> l000026D0
l000026C6:
	d6_17 = d6_17 * 2<32>
	d0_44 = SEQ(SLICE(d0_44, word16, 16), SLICE(d0_44, word16, 0) + 1<16>)
	d5_19 = d5_19 * 2<32> + CONVERT(d6_17 <u 0<32>, bool, word32)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l000026C6
l000026D0:
	word16 v40_64 = SLICE(d0_44, word16, 0)
l000026D2:
	word32 d1_104
	word32 d2_73 = __swap(d5_19)
	word32 d3_74 = __swap(d7_13)
	branch SLICE(d2_73 - d3_74, word16, 0) != 0<16> l000026E4
l000026E4:
	d1_104 = __swap(SEQ(SLICE(__swap(SEQ(d5_19 % SLICE(d3_74, uint16, 0), d5_19 /u SLICE(d3_74, uint16, 0))), word16, 16), 0<16>))
l000026DE:
	d1_104 = 0xFFFF<32>
l000026EE:
	word32 d6_98 = __swap(SEQ(SLICE(d6_17, word16, 16), 0<16>))
l000026F4:
	word32 d4_113 = __swap(d5_19 - __swap(d7_13) *u32 SLICE(d1_104, word16, 0))
	word16 wLoc22_445 = SLICE(dwLoc24, word16, 0)
	word32 d2_106 = d1_104 *u32 SLICE(d7_13, word16, 0)
	word32 d4_121 = SEQ(SLICE(d4_113, word16, 16), SLICE(d6_98, word16, 0))
	branch SLICE(d4_113, word16, 0) != 0<16> l00002714
l0000270C:
	branch d2_106 - d4_121 <=u 0<32> l00002714
l00002714:
	word32 d6_133 = __swap(d1_104)
	word32 d3_140 = __swap(d6_133)
	word32 d4_142 = __swap(d7_13)
	word32 d5_141 = d7_13 *u32 SLICE(d3_140, word16, 0)
	word32 d6_146 = __swap(d6_133 *u32 SLICE(d7_13, word16, 0))
	word16 v54_147 = SLICE(d6_146 + d5_141, word16, 0)
	word32 d2_143 = d6_133 *u32 SLICE(d4_142, word16, 0)
	word16 v58_155 = v54_147 + SLICE(d2_143, word16, 0)
	word32 d3_144 = d3_140 *u32 SLICE(d4_142, word16, 0)
	word32 d6_178 = d6_17 - __swap(SEQ(SLICE(d6_146, word16, 16), v58_155))
	word32 d5_181 = d5_19 - ((__swap(SEQ(SLICE(d5_141, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_143, word16, 16), 0<16>))) + SEQ(SLICE(d3_144, word16, 16), (SLICE(d3_144, word16, 0) + CONVERT(v54_147 <u 0<16>, bool, word16)) + CONVERT(v58_155 <u 0<16>, bool, word16))) - CONVERT(d6_178 <u 0<32>, bool, word32)
	branch d5_181 >=u 0<32> l0000276C
l00002756:
	d6_178 = d6_178 + SEQ(SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_104 = d1_104 - 1<32>
	d5_181 = d5_181 + CONVERT(d6_178 <u 0<32>, bool, word32) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l0000276C:
	branch bLoc26_365 != 0<8> l00002788
l00002788:
	word32 d6_220 = __swap(SEQ(SLICE(d6_178, word16, 16), SLICE(d5_181, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_104, word16, 0))
	word32 d5_221 = __swap(d5_181)
	word16 v80_224 = SLICE(d7_13, word16, 16)
	branch v40_64 == 0<16> l000027A2
l00002798:
	word32 d7_230 = SEQ(v80_224, v40_64 - 1<16>)
	word64 d5_d6_506 = SEQ(d5_221, d6_220)
l0000279A:
	d5_d6_506 = d5_d6_506 >>u 1<8>
	word16 v84_241 = SLICE(d7_230, word16, 0)
	d6_220 = SLICE(d5_d6_506, word32, 0)
	d7_230 = SEQ(SLICE(d7_230, word16, 16), v84_241 - 1<i16>)
	branch v84_241 != 0<16> l0000279A
l000027A2:
	d1 = d6_220
	d2 = d2_22
l00002772:
	word32 d5_266 = __swap(d5_181)
	word32 d6_267 = __swap(d6_178)
	d5_19 = SEQ(SLICE(d5_266, word16, 16), SLICE(d6_267, word16, 0))
	d6_17 = SEQ(SLICE(d6_267, word16, 16), 0<16>)
	bLoc26_365 = true
	dwLoc24 = SEQ(SLICE(d1_104, word16, 0), wLoc22_445) (alias)
l00002710:
	d1_104 = d1_104 - 1<32>
l00002692:
	word32 d0_281 = __swap(d0)
	word32 d1_282 = __swap(d1)
	word32 d0_285 = SEQ(SLICE(d0_281, word16, 16), SLICE(d1_282, word16, 0))
	word32 d0_295 = SEQ(d0_285 % SLICE(d2, uint16, 0), SLICE(__swap(d1_282), word16, 0))
	d2 = SEQ(SLICE(__swap(CONVERT(d0_285 /u SLICE(d2, uint16, 0), uint16, uint32)), word16, 16), d0_295 /u SLICE(d2, uint16, 0))
	d1 = __swap(SEQ(d0_295 % SLICE(d2, uint16, 0), 0<16>))
	d0 = d2
l00002672:
	branch d1 == 0<32> l000027AA
l00002678:
	branch d2 - d1 >u 0<32> l000027AA
l0000267E:
	d0 = fn0000151E(d1, d2, d2, out d1)
l000027AA:
	d1Out = d1
	d2Out = d2
	return d0
fn00002664_exit:


word32 fn000027B0(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000015C0
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn000027B0_entry:
l000027B0:
	word32 d1_171 = dwArg08
	word32 d3_202 = dwArg10
	branch dwArg0C != 0<32> l00002802
l00002802:
	branch dwArg04 - dwArg0C <u 0<32> l000028BC
l00002808:
	word32 d4_32 = 24<i32>
	word32 d6_33 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002826
l00002812:
	d4_32 = 16<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002826
l0000281A:
	d4_32 = 8<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00002826
l00002822:
	d4_32 = 0<i32>
	d6_33 = SEQ(SLICE(d6_33, word24, 8), SLICE(dwArg0C, byte, 0))
l00002826:
	word32 d4_64 = SEQ(SLICE(d4_32, word24, 8), SLICE(d4_32, byte, 0) + Mem20[0x00003E5C<p32> + CONVERT(SLICE(d6_33, word16, 0) & 0xFF<16>, word16, int32):byte])
	word32 d5_66 = 32<i32> - d4_64
	branch d5_66 != 0<32> l00002848
l00002848:
	word32 d1_89
	word32 d2_90
	word32 d0_88 = fn00002664(dwArg04 >>u d4_64, dwArg04 << d5_66 | dwArg08 >>u d4_64, dwArg0C << d5_66 | dwArg10 >>u d4_64, out d1_89, out d2_90)
	word32 d3_75 = dwArg10 << d5_66
	word32 d7_104 = __swap(d0_88)
	word32 d6_106 = __swap(d3_75)
	word32 d3_105 = d3_75 *u32 SLICE(d7_104, word16, 0)
	word32 d2_110 = __swap(d0_88 *u32 SLICE(d3_75, word16, 0))
	word16 v36_111 = SLICE(d2_110 + d3_105, word16, 0)
	word32 d4_107 = d0_88 *u32 SLICE(d6_106, word16, 0)
	word16 v40_119 = v36_111 + SLICE(d4_107, word16, 0)
	word32 d2_127 = __swap(SEQ(SLICE(d2_110, word16, 16), v40_119))
	word32 d7_108 = d7_104 *u32 SLICE(d6_106, word16, 0)
	word32 d6_85 = dwArg08 << d5_66
	word32 d3_135 = __swap(SEQ(SLICE(d3_105, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_107, word16, 16), 0<16>)) + SEQ(SLICE(d7_108, word16, 16), (SLICE(d7_108, word16, 0) + CONVERT(v36_111 <u 0<16>, bool, word16)) + CONVERT(v40_119 <u 0<16>, bool, word16))
	word32 v49_137 = d1_89 - d2_127
	branch v49_137 <u 0<32> l000028A4
l0000289E:
	branch v49_137 != 0<32> l000028A8
l000028A0:
	branch d6_85 - d3_135 >=u 0<32> l000028A8
l000028A4:
	d3_135 = d3_135 - d3_75
	d2_127 = d2_127 - d2_90 - CONVERT(d3_135 <u 0<32>, bool, word32)
l000028A8:
	word32 d6_157 = d6_85 - d3_135
	d1_171 = d1_89 - d2_127 - CONVERT(d6_157 <u 0<32>, bool, word32) << 32<i32> - d5_66 | d6_157 >>u d5_66
l0000283A:
	branch dwArg0C - dwArg04 <u 0<32> l00002842
l0000283E:
	branch dwArg10 - dwArg08 >u 0<32> l000028BC
l00002842:
	d1_171 = dwArg08 - dwArg10
l000027C8:
	branch dwArg04 - dwArg10 >=u 0<32> l000027DA
l000027DA:
	branch dwArg10 != 0<32> l000027E6
l000027DE:
	d3_202 = CONVERT(1<i32> /u SLICE(dwArg10, uint16, 0), uint16, int32)
l000027E6:
	word32 d1_211
	word32 d2_212
	fn00002664(0<i32>, dwArg04, d3_202, out d1_211, out d2_212)
	word32 d2_355
	fn00002664(d1_211, dwArg08, d2_212, out d1_171, out d2_355)
l000027CC:
	word32 d2_354
	fn00002664(dwArg04, dwArg08, dwArg10, out d1_171, out d2_354)
l000028BC:
	return d1_171
fn000027B0_exit:


void fn00002BAC(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002BAC_entry:
l00002BAC:
	branch dwArg04 == 0<32> l00002BC4
l00002BC4:
	word32 a2_10 = Mem5[0x00003F88<p32>:word32]
	branch a2_10 == 0<32> l00002BEA
l00002BCE:
	branch (Mem16[a2_10 + 24<i32>:word32] & 2<i32>) == 0<32> l00002BE0
l00002BD6:
	word32 a0_103
	word32 a5_104
	fn000020B0(a2_10, out a0_103, out a5_104)
l00002BE0:
	a2_10 = Mem40[a2_10 + 12<i32>:word32]
	branch a2_10 != 0<32> l00002BCE
l00002BB8:
	word32 a0_101
	word32 a5_102
	fn000020B0(dwArg04, out a0_101, out a5_102)
l00002BEA:
	return
fn00002BAC_exit:


word32 fn00002BF0(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0
// Trashed: CVZN a0 d0
// Preserved: a7
fn00002BF0_entry:
l00002BF0:
	return fn00002C3C(d0, Mem8[0x00003F7C<p32>:word32], dwArg04, fp + 8<i32>)
fn00002BF0_exit:


word32 fn00002C0C(byte bArg07, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00002C0C_entry:
l00002C0C:
	word32 d0_10 = dwArg08
	branch dwArg08 == 0<32> l00002C36
l00002C18:
	d0_10 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_10 - Mem5[dwArg08 + 8<i32>:word32] >=u 0<32> l00002C2A
l00002C22:
	Mem16[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00002C2A:
	Mem22[dwArg08 + 20<i32>:word32] = Mem20[dwArg08 + 20<i32>:word32] + 1<32>
	Mem25[dwArg08 + 4<i32>:word32] = Mem22[dwArg08 + 4<i32>:word32] - 1<32>
l00002C36:
	return d0_10
fn00002C0C_exit:


word32 fn00002C3C(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002BF0
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00002C3C_entry:
l00002C3C:
	word32 d2_1050 = dwArg0C
	word32 a4_261 = dwArg08
	word32 dwLoc3C_3792 = 0<32>
	word32 d4_126 = 0<i32>
	word32 d5_1007 = 0<i32>
	branch Mem40[dwArg08:byte] == 0<8> l00003C3E
l00002C5E:
	word32 d3_124
	word32 d3_1781 = 0<i32>
	branch Mem49[a4_261:byte] != 0x25<8> l00003B3C
l00003B3C:
	word32 d0_63 = CONVERT(Mem49[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_261:byte]) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l00003BC8
l00003BC8:
	word32 dwLoc4C_3794
	Mem72[dwArg04 + 24<i32>:word32] = Mem49[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v112_74 = Mem72[dwArg04 + 20<i32>:word32] - 1<32>
	Mem75[dwArg04 + 20<i32>:word32] = v112_74
	branch v112_74 < 0<32> l00003BFA
l00003BFA:
	word32 a5_5625
	dwLoc4C_3794 = fn00003CE0(dwArg04, out a5_5625)
	d1 = d1_86
l00003BDA:
	word32 a0_96 = Mem75[dwArg04 + 4<i32>:word32]
	Mem101[dwArg04 + 4<i32>:word32] = a0_96 + 1<i32>
	dwLoc4C_3794 = CONVERT(Mem101[a0_96:byte], byte, uint32)
l00003C08:
	d0 = CONVERT(CONVERT(Mem121[a4_261:byte], byte, int16), int16, int32)
	d5_1007 = dwLoc4C_3794
	d3_124 = 1<32>
	d4_126 = d4_126 + 1<32>
	branch d0 - dwLoc4C_3794 == 0<32> l00003C32
l00003C1C:
	branch dwLoc4C_3794 == 0xFFFFFFFF<32> l00003C2E
l00003C24:
	d0 = fn00002C0C(SLICE(dwLoc4C_3794, byte, 0), dwArg04)
l00003C2E:
	d3_124 = 0<32>
	d4_126 = d4_126 - 1<32>
l00003B58:
	word32 d0_178
	Mem165[dwArg04 + 24<i32>:word32] = Mem163[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v96_167 = Mem165[dwArg04 + 20<i32>:word32] - 1<32>
	Mem168[dwArg04 + 20<i32>:word32] = v96_167
	branch v96_167 < 0<32> l00003B82
l00003B82:
	word32 a5_5624
	d0_178 = fn00003CE0(dwArg04, out a5_5624)
	d1 = d0_178
l00003B6A:
	word32 a0_189 = Mem168[dwArg04 + 4<i32>:word32]
	Mem194[dwArg04 + 4<i32>:word32] = a0_189 + 1<i32>
	byte v98_198 = Mem194[a0_189:byte]
	d0_178 = SEQ(SLICE(d0, word24, 8), v98_198)
	d1 = CONVERT(v98_198, byte, uint32)
l00003B8E:
	word32 d0_227 = CONVERT(Mem224[0x000028C5<p32> + (SEQ(SLICE(d0_178, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_227 & 8<32>
	branch (d0_227 & 8<32>) != 0<32> l00003B58
l00003BB0:
	branch d1 == 0xFFFFFFFF<32> l00003BC2
l00003BB8:
	d0 = fn00002C0C(SLICE(d1, byte, 0), dwArg04)
l00003BC2:
	d4_126 = d4_126 - 1<32>
	d3_124 = 1<i32>
l00003C32:
	a4_261 = a4_261 + 1<i32>
l00002C68:
	word32 a3_265 = a4_261 + 1<i32>
	word32 d0_275 = CONVERT(Mem264[0x000028C5<p32> + CONVERT(Mem264[a3_265:byte], byte, uint32):byte], byte, uint32)
	word32 d6_1093 = -1<i32>
	byte bLoc30_3807 = 0x69<8>
	byte bLoc2F_3808 = 0<8>
	d0 = d0_275 & 4<32>
	branch (d0_275 & 4<32>) == 0<32> l00002CEC
l00002C90:
	word32 d0_291 = CONVERT(Mem264[0x000028C5<p32> + CONVERT(Mem264[a3_265:byte], byte, uint32):byte], byte, uint32)
	d6_1093 = 0<i32>
	d0 = d0_291 & 4<32>
	branch (d0_291 & 4<32>) == 0<32> l00002CEC
l00002CAA:
	word32 d1_307 = __swap(10<i32>) *u32 SLICE(d6_1093, word16, 0)
	word32 d0_316 = SLICE(d6_1093, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_307, word16, 16), SLICE(d1_307, word16, 0) + SLICE(__swap(d6_1093), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a3_265 = a3_265 + 1<i32>
	word32 d1_325 = CONVERT(Mem301[a3_265:byte], byte, uint32)
	word32 d0_339 = CONVERT(Mem301[0x000028C5<p32> + CONVERT(Mem301[a3_265:byte], byte, uint32):byte], byte, uint32)
	d1 = d1_325 - 0x30<32>
	d6_1093 = d1_325 - 0x30<32> + d0_316
	d0 = d0_339 & 4<32>
	branch (d0_339 & 4<32>) != 0<32> l00002CAA
l00002CEC:
	branch Mem346[a3_265:byte] == 0x68<8> l00002D16
l00002CF2:
	branch Mem346[a3_265:byte] == 0x6C<8> l00002D16
l00002CF8:
	branch Mem346[a3_265:byte] == 0x4C<8> l00002D16
l00002CFE:
	branch Mem346[a3_265:byte] == 0x7A<8> l00002D16
l00002D04:
	branch Mem346[a3_265:byte] == 0x6A<8> l00002D16
l00002D0A:
	branch Mem346[a3_265:byte] == 0x74<8> l00002D16
l00002D10:
	branch Mem346[a3_265:byte] != 0x2A<8> l00002D7E
l00002D16:
	d7 = SEQ(SLICE(d7, word24, 8), 0<8>)
	d1 = SEQ(SLICE(d1, word24, 8), 0x69<8>)
l00002D1E:
	branch Mem346[a3_265:byte] != 0x2A<8> l00002D28
l00002D28:
	branch SLICE(d1, byte, 0) != 0x68<8> l00002D38
l00002D2E:
	branch Mem346[a3_265:byte] != 0x68<8> l00002D38
l00002D38:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00002D48
l00002D3E:
	branch Mem346[a3_265:byte] != 0x6C<8> l00002D48
l00002D48:
	d1 = SEQ(SLICE(d1, word24, 8), Mem346[a3_265:byte])
l00002D44:
	d1 = 1<i32>
l00002D34:
	d1 = 2<i32>
l00002D24:
	d7 = 1<i32>
l00002D4A:
	a3_265 = a3_265 + 1<i32>
	branch Mem346[a3_265:byte] == 0x68<8> l00002D1E
l00002D52:
	branch Mem346[a3_265:byte] == 0x6C<8> l00002D1E
l00002D58:
	branch Mem346[a3_265:byte] == 0x4C<8> l00002D1E
l00002D5E:
	branch Mem346[a3_265:byte] == 0x7A<8> l00002D1E
l00002D64:
	branch Mem346[a3_265:byte] == 0x6A<8> l00002D1E
l00002D6A:
	branch Mem346[a3_265:byte] == 0x74<8> l00002D1E
l00002D70:
	branch Mem346[a3_265:byte] == 0x2A<8> l00002D1E
l00002D76:
	bLoc30_3807 = SLICE(d1, byte, 0)
	bLoc2F_3808 = SLICE(d7, byte, 0)
l00002D7E:
	branch bLoc30_3807 != 0x6A<8> l00002D8C
l00002D86:
	bLoc30_3807 = 1<8>
l00002D8C:
	branch bLoc30_3807 != 0x74<8> l00002D9A
l00002D94:
	bLoc30_3807 = 0x69<8>
l00002D9A:
	branch bLoc30_3807 != 0x7A<8> l00002DA8
l00002DA2:
	bLoc30_3807 = 0x6C<8>
l00002DA8:
	byte v76_482 = Mem481[a3_265:byte]
	word24 v77_488 = SLICE(d7, word24, 8)
	word32 a3_1884 = a3_265 + 1<i32>
	d7 = SEQ(v77_488, v76_482)
	branch v76_482 == 0<8> l00002E1E
l00002DAC:
	branch v76_482 == 0x25<8> l00002E1E
l00002DB2:
	branch v76_482 == 0x63<8> l00002E1E
l00002DB8:
	branch v76_482 == 0x6E<8> l00002E1E
l00002DBE:
	branch v76_482 == 0x5B<8> l00002E1E
l00002DC4:
	word32 d0_521
	Mem508[dwArg04 + 24<i32>:word32] = Mem506[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v83_510 = Mem508[dwArg04 + 20<i32>:word32] - 1<32>
	Mem511[dwArg04 + 20<i32>:word32] = v83_510
	branch v83_510 < 0<32> l00002DEE
l00002DEE:
	word32 a5_5623
	d0_521 = fn00003CE0(dwArg04, out a5_5623)
	d1 = d0_521
l00002DD6:
	word32 a0_532 = Mem511[dwArg04 + 4<i32>:word32]
	Mem537[dwArg04 + 4<i32>:word32] = a0_532 + 1<i32>
	byte v87_541 = Mem537[a0_532:byte]
	d0_521 = SEQ(SLICE(d0, word24, 8), v87_541)
	d1 = CONVERT(v87_541, byte, uint32)
l00002DFA:
	word32 d0_570 = CONVERT(Mem567[0x000028C5<p32> + (SEQ(SLICE(d0_521, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_570 & 8<32>
	branch (d0_570 & 8<32>) != 0<32> l00002DC4
l00002E1C:
	d3_1781 = 1<i32>
l00002E1E:
	word24 v124_587 = SLICE(d1, word24, 8)
	word32 d1_591 = SEQ(v124_587, v76_482 - 0x25<8>)
	branch v76_482 == 0x25<8> l0000326A
l0000326A:
	word32 dwLoc4C_3827
	Mem610[dwArg04 + 24<i32>:word32] = Mem608[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v136_612 = Mem610[dwArg04 + 20<i32>:word32] - 1<32>
	Mem613[dwArg04 + 20<i32>:word32] = v136_612
	branch v136_612 < 0<32> l0000329C
l0000329C:
	word32 a5_5626
	d0 = fn00003CE0(dwArg04, out a5_5626)
	dwLoc4C_3827 = d0
	d1 = d1_626
l0000327C:
	word32 a0_636 = Mem613[dwArg04 + 4<i32>:word32]
	Mem641[dwArg04 + 4<i32>:word32] = a0_636 + 1<i32>
	byte v138_645 = Mem641[a0_636:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v138_645)
	dwLoc4C_3827 = CONVERT(v138_645, byte, uint32)
	d1 = d1_591
l000032AA:
	d5_1007 = dwLoc4C_3827
	d3_124 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch dwLoc4C_3827 == 0x25<32> l00003B36
l000032BE:
	branch dwLoc4C_3827 == 0xFFFFFFFF<32> l000032D0
l000032C6:
	d0 = fn00002C0C(SLICE(dwLoc4C_3827, byte, 0), dwArg04)
l000032D0:
	d3_124 = d3_124 - 1<32>
	d4_126 = d4_126 - 1<32>
l00002E28:
	branch v76_482 == 0x5B<8> l00002F66
l00002F66:
	byte bLoc4C_3835 = 0<8>
	branch Mem732[a3_1884:byte] != 0x5E<8> l00002F78
l00002F70:
	bLoc4C_3835 = 1<8>
	a3_1884 = a3_1884 + 1<i32>
l00002F78:
	d7 = SEQ(v77_488, bLoc4C_3835)
	word32 d1_748 = 0<32>
l00002F84:
	word32 d5_755
	branch bLoc4C_3835 == 0<8> l00002F90
l00002F90:
	d5_755 = 0<i32>
l00002F88:
	d5_755 = 0xFF<32>
l00002F92:
	Mem766[fp + -42<i32> + d1_748:byte] = SLICE(d5_755, byte, 0)
	d1_748 = d1_748 + 1<32>
	branch d1_748 <u 0x20<32> l00002F84
l00002FA4:
l00002FB0:
	branch Mem798[a3_1884:byte] == 0<8> l00003026
l00002FB4:
	byte v405_803 = Mem798[a3_1884:byte]
	a3_1884 = a3_1884 + 1<i32>
	d1_748 = SEQ(SLICE(d1_748, word24, 8), v405_803)
	branch Mem798[a3_1884:byte] != 0x2D<8> l00002FC8
l00002FBC:
	branch v405_803 - Mem798[a3_1884 + 1<i32>:byte] >=u 0<8> l00002FC8
l00002FC8:
	d7 = SEQ(SLICE(d7, word24, 8), v405_803)
l00002FC2:
	a3_1884 = a3_1884 + 2<i32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem798[a3_1884 + 1<i32>:byte])
l00002FCA:
	word32 d5_831 = CONVERT(v405_803, byte, uint32)
	d0 = CONVERT(SLICE(d7, byte, 0), byte, uint32)
	branch d0 - d5_831 <u 0<32> l00003020
l00002FD6:
	branch bLoc4C_3835 == 0<8> l00002FFA
l00002FFA:
	word32 a0_850 = fp + -42<i32> + (d5_831 >>u 3<32>)
	d1_748 = CONVERT(Mem858[a0_850:byte], byte, uint32)
	Mem864[a0_850:byte] = 1<8> << (SLICE(d5_831, byte, 0) & 7<8>) | SLICE(d1_748, byte, 0)
l00002FDA:
	word32 a0_869 = fp + -42<i32> + (d5_831 >>u 3<32>)
	d1_748 = CONVERT(Mem858[a0_869:byte], byte, uint32)
	Mem883[a0_869:byte] = SLICE(~(1<i32> << (d5_831 & 7<i32>)) & d1_748, byte, 0)
l00003016:
	d5_831 = d5_831 + 1<32>
	d0 = CONVERT(SLICE(d7, byte, 0), byte, uint32)
	branch d0 - d5_831 >=u 0<32> l00002FD6
l00003020:
	branch Mem902[a3_1884:byte] != 0x5D<8> l00002FB0
l00003026:
	word32 a6_1124
	a3_1884 = a3_1884 + 1<i32>
	branch bLoc2F_3808 != 0<8> l00003046
l00003046:
	a6_1124 = 0<32>
l00003032:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	d2_1050 = d0 + 4<32>
	a6_1124 = Mem915[d0:word32]
l00003048:
	word32 dwLoc4C_3866
	Mem947[dwArg04 + 24<i32>:word32] = Mem915[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v429_949 = Mem947[dwArg04 + 20<i32>:word32] - 1<32>
	Mem950[dwArg04 + 20<i32>:word32] = v429_949
	branch v429_949 < 0<32> l0000307A
l0000307A:
	word32 a5_5635
	d0 = fn00003CE0(dwArg04, out a5_5635)
	dwLoc4C_3866 = d0
l0000305A:
	word32 a0_971 = Mem950[dwArg04 + 4<i32>:word32]
	Mem976[dwArg04 + 4<i32>:word32] = a0_971 + 1<i32>
	byte v431_980 = Mem976[a0_971:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v431_980)
	dwLoc4C_3866 = CONVERT(v431_980, byte, uint32)
	d1 = d1_748
l00003088:
	d5_1007 = dwLoc4C_3866
	word32 d3_1020 = d3_1781 + 1<32>
	word32 d4_1033 = d4_126 + 1<32>
	branch dwLoc4C_3866 == 0xFFFFFFFF<32> l00003156
l0000309C:
	d1 = CONVERT(Mem1047[fp + -42<i32> + fn000014EC(d2_1050, dwLoc4C_3866, 0x00000008<p32>):byte], byte, uint32)
	d0 = 1<i32> << (dwLoc4C_3866 & 7<i32>) & d1
	branch d0 == 0<32> l00003156
l000030CC:
	branch d6_1093 - d3_1020 <u 0<32> l00003156
l000030D2:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2F_3808)
l000030D6:
	branch bLoc2F_3808 != 0<8> l000030DC
l000030DA:
	Mem1125[a6_1124:byte] = SLICE(d5_1007, byte, 0)
	a6_1124 = a6_1124 + 1<i32>
l000030DC:
	Mem1134[dwArg04 + 24<i32>:word32] = Mem1131[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v447_1136 = Mem1134[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1137[dwArg04 + 20<i32>:word32] = v447_1136
	branch v447_1136 < 0<32> l00003106
l00003106:
	word32 a5_5636
	d0 = fn00003CE0(dwArg04, out a5_5636)
	d1 = d0
l000030EE:
	word32 a0_1159 = Mem1137[dwArg04 + 4<i32>:word32]
	Mem1164[dwArg04 + 4<i32>:word32] = a0_1159 + 1<i32>
	byte v449_1168 = Mem1164[a0_1159:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v449_1168)
	d1 = CONVERT(v449_1168, byte, uint32)
l00003112:
	d5_1007 = d1
	d3_1020 = d3_1020 + 1<32>
	d4_1033 = d4_1033 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003152
l00003120:
	d1 = CONVERT(Mem1202[fp + -42<i32> + fn000014EC(d2_1050, d1, 0x00000008<p32>):byte], byte, uint32)
	d0 = 1<i32> << (d1 & 7<i32>) & d1
	branch d0 == 0<32> l00003152
l0000314E:
	branch d6_1093 - d3_1020 >=u 0<32> l000030D6
l00003152:
l00003156:
	branch d5_1007 == 0xFFFFFFFF<32> l00003168
l0000315E:
	d0 = fn00002C0C(SLICE(d5_1007, byte, 0), dwArg04)
l00003168:
	d3_124 = d3_1020 - 1<32>
	d4_126 = d4_1033 - 1<32>
	branch bLoc2F_3808 != 0<8> l00003B36
l00003174:
	branch d3_124 == 0<32> l00003B36
l0000317A:
	Mem1300[a6_1124:byte] = 0<8>
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00002E30:
	word32 d1_1307 = SEQ(v124_587, v76_482 - 0x63<8>)
	branch v76_482 == 0x63<8> l00002E46
l00002E46:
	branch d6_1093 != 0xFFFFFFFF<32> l00002E50
l00002E4E:
	d6_1093 = 1<i32>
l00002E50:
	word32 a1_1321
	branch bLoc2F_3808 != 0<8> l00002E6A
l00002E6A:
	a1_1321 = 0<32>
l00002E56:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	d2_1050 = d0 + 4<32>
	a1_1321 = Mem608[d0:word32]
l00002E6C:
	word32 dwLoc44_3927
	Mem1337[dwArg04 + 24<i32>:word32] = Mem608[dwArg04 + 24<i32>:word32] | 1<32>
	Mem1340[dwArg04 + 20<i32>:word32] = Mem1337[dwArg04 + 20<i32>:word32] - 1<32>
	branch Mem1344[dwArg04 + 20<i32>:word32] < 0<32> l00002EA4
l00002EA4:
	word32 a5_5630
	d0 = fn00003CE0(dwArg04, out a5_5630)
	dwLoc44_3927 = d0
	d1 = d1_1359
l00002E84:
	word32 a0_1371 = Mem1344[dwArg04 + 4<i32>:word32]
	Mem1376[dwArg04 + 4<i32>:word32] = a0_1371 + 1<i32>
	byte v220_1380 = Mem1376[a0_1371:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v220_1380)
	dwLoc44_3927 = CONVERT(v220_1380, byte, uint32)
	d1 = d1_1307
l00002EC2:
	d5_1007 = dwLoc44_3927
	word32 d3_1405 = d3_1781 + 1<32>
	word32 d4_1409 = d4_126 + 1<32>
	branch dwLoc44_3927 == 0xFFFFFFFF<32> l00002F3A
l00002ED8:
	branch d6_1093 - d3_1405 <u 0<32> l00002F3A
l00002EE0:
	d7 = SEQ(v77_488, bLoc2F_3808)
	word32 a4_1428 = a1_1321
l00002EE8:
	branch bLoc2F_3808 != 0<8> l00002EEE
l00002EEC:
	Mem1437[a4_1428:byte] = SLICE(d5_1007, byte, 0)
	a4_1428 = a4_1428 + 1<i32>
l00002EEE:
	Mem1446[dwArg04 + 24<i32>:word32] = Mem1443[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v239_1448 = Mem1446[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1449[dwArg04 + 20<i32>:word32] = v239_1448
	branch v239_1448 < 0<32> l00002F18
l00002F18:
	word32 a5_5631
	d0 = fn00003CE0(dwArg04, out a5_5631)
	d1 = d0
l00002F00:
	word32 a0_1471 = Mem1449[dwArg04 + 4<i32>:word32]
	Mem1476[dwArg04 + 4<i32>:word32] = a0_1471 + 1<i32>
	byte v241_1480 = Mem1476[a0_1471:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v241_1480)
	d1 = CONVERT(v241_1480, byte, uint32)
l00002F24:
	d5_1007 = d1
	d3_1405 = d3_1405 + 1<32>
	d4_1409 = d4_1409 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00002F36
l00002F32:
	branch d6_1093 - d3_1405 >=u 0<32> l00002EE8
l00002F36:
l00002F3A:
	branch d5_1007 == 0xFFFFFFFF<32> l00002F4C
l00002F42:
	d0 = fn00002C0C(SLICE(d5_1007, byte, 0), dwArg04)
l00002F4C:
	d3_124 = d3_1405 - 1<32>
	d4_126 = d4_1409 - 1<32>
	branch bLoc2F_3808 != 0<8> l00003B36
l00002F58:
	branch d3_124 == 0<32> l00003B36
l00002F5E:
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00002E34:
	d1 = SEQ(v124_587, v76_482 - 0x6E<8>)
	branch v76_482 == 0x6E<8> l000032D8
l000032D8:
	branch bLoc2F_3808 != 0<8> l00003370
l000032E0:
	branch bLoc30_3807 != 1<8> l00003302
l00003302:
	branch bLoc30_3807 != 0x6C<8> l00003320
l00003320:
	branch bLoc30_3807 != 0x68<8> l0000333E
l0000333E:
	branch bLoc30_3807 != 2<8> l0000335C
l0000335C:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1594[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l00003346:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1606[Mem608[d0:word32]:byte] = SLICE(d4_126, byte, 0)
	d2_1050 = d0 + 4<32>
l00003328:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1618[Mem608[d0:word32]:word16] = SLICE(d4_126, word16, 0)
	d2_1050 = d0 + 4<32>
l0000330A:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1629[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l000032E8:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	word32 a0_1639 = Mem608[d0:word32]
	Mem1640[a0_1639 + 4<i32>:word32] = d4_126
	Mem1641[a0_1639:word32] = 0<32>
	d2_1050 = d0 + 4<32>
l00003370:
	d3_124 = 1<i32>
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00002E3C:
	d1 = SEQ(v124_587, v76_482 - 0x73<8>)
	branch v76_482 == 0x73<8> l00003184
l00003184:
	word32 a5_1661
	branch bLoc2F_3808 != 0<8> l0000319E
l0000319E:
	a5_1661 = 0<32>
l0000318A:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	d2_1050 = d0 + 4<32>
	a5_1661 = Mem608[d0:word32]
l000031A0:
	branch d5_1007 == 0xFFFFFFFF<32> l0000323C
l000031AA:
	word32 d0_1699 = CONVERT(Mem608[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_1699 & 8<32>
	branch (d0_1699 & 8<32>) != 0<32> l0000323C
l000031C6:
	branch d6_1093 - d3_1781 <u 0<32> l0000323C
l000031CA:
	d7 = SEQ(v77_488, bLoc2F_3808)
l000031CE:
	branch bLoc2F_3808 != 0<8> l000031D4
l000031D2:
	Mem1724[a5_1661:byte] = SLICE(d5_1007, byte, 0)
	a5_1661 = a5_1661 + 1<i32>
l000031D4:
	Mem1733[dwArg04 + 24<i32>:word32] = Mem1730[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v159_1735 = Mem1733[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1736[dwArg04 + 20<i32>:word32] = v159_1735
	branch v159_1735 < 0<32> l000031FE
l000031FE:
	d0 = fn00003CE0(dwArg04, out a5_1661)
	d1 = d0
l000031E6:
	word32 a0_1758 = Mem1736[dwArg04 + 4<i32>:word32]
	Mem1763[dwArg04 + 4<i32>:word32] = a0_1758 + 1<i32>
	byte v161_1767 = Mem1763[a0_1758:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v161_1767)
	d1 = CONVERT(v161_1767, byte, uint32)
l0000320A:
	d5_1007 = d1
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00003238
l00003218:
	word32 d0_1802 = CONVERT(Mem1799[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_1802 & 8<32>
	branch (d0_1802 & 8<32>) != 0<32> l00003238
l00003234:
	branch d6_1093 - d3_1781 >=u 0<32> l000031CE
l00003238:
l0000323C:
	branch d5_1007 == 0xFFFFFFFF<32> l0000324E
l00003244:
	d0 = fn00002C0C(SLICE(d5_1007, byte, 0), dwArg04)
l0000324E:
	d3_124 = d3_1781 - 1<32>
	d4_126 = d4_126 - 1<32>
	branch bLoc2F_3808 != 0<8> l00003B36
l0000325A:
	branch d3_124 == 0<32> l00003B36
l00003260:
	Mem1872[a5_1661:byte] = 0<8>
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00002E42:
l0000337A:
	word32 dwLoc48_3978 = 0<32>
	word32 dwLoc4C_3979 = 0<32>
	word32 dwLoc0A_3980 = 0<32>
	branch v76_482 != 0<8> l0000338C
l0000338A:
	a3_1884 = a3_1884 - 1<i32>
l0000338C:
	branch v76_482 != 0x70<8> l0000339A
l00003392:
	bLoc30_3807 = 0x6C<8>
	d7 = 120<i32>
l0000339A:
	branch d5_1007 != 0x2D<32> l000033A8
l000033A2:
	branch SLICE(d7, byte, 0) != 0x75<8> l000033B0
l000033A8:
	branch d5_1007 != 0x2B<32> l00003400
l000033B0:
	branch d6_1093 - d3_1781 <u 0<32> l00003400
l000033B4:
	word32 dwLoc44_3984
	Mem1928[dwArg04 + 24<i32>:word32] = Mem1921[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v182_1930 = Mem1928[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1931[dwArg04 + 20<i32>:word32] = v182_1930
	dwLoc0A_3980 = d5_1007
	branch v182_1930 < 0<32> l000033EA
l000033EA:
	word32 a5_5627
	d0 = fn00003CE0(dwArg04, out a5_5627)
	dwLoc44_3984 = d0
l000033CA:
	word32 a0_1951 = Mem1931[dwArg04 + 4<i32>:word32]
	Mem1956[dwArg04 + 4<i32>:word32] = a0_1951 + 1<i32>
	byte v184_1960 = Mem1956[a0_1951:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v184_1960)
	dwLoc44_3984 = CONVERT(v184_1960, byte, uint32)
l000033F8:
	d5_1007 = dwLoc44_3984
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
l00003400:
	branch SLICE(d7, byte, 0) != 0x69<8> l00003572
l00003408:
	branch d5_1007 != 0x30<32> l00003534
l00003412:
	branch d6_1093 - d3_1781 <u 0<32> l00003534
l00003534:
	word32 d0_2030 = CONVERT(Mem2023[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2030 & 4<32>
	branch (d0_2030 & 4<32>) != 0<32> l00003572
l00003550:
	word32 d0_2045 = CONVERT(Mem2023[0x000028C5<p32> + (CONVERT(SLICE(d5_1007, byte, 0), byte, uint32) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2045 & 0x44<32>
	branch (d0_2045 & 0x44<32>) == 0<32> l00003572
l0000356C:
	branch d6_1093 - d3_1781 <u 0<32> l00003572
l00003570:
	d7 = 120<i32>
l00003418:
	word32 dwLoc44_3990
	word32 d0_2075
	Mem2062[dwArg04 + 24<i32>:word32] = Mem2023[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v194_2064 = Mem2062[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2065[dwArg04 + 20<i32>:word32] = v194_2064
	branch v194_2064 < 0<32> l0000344A
l0000344A:
	word32 a5_5628
	d0_2075 = fn00003CE0(dwArg04, out a5_5628)
	dwLoc44_3990 = d0_2075
l0000342A:
	word32 a0_2086 = Mem2065[dwArg04 + 4<i32>:word32]
	Mem2091[dwArg04 + 4<i32>:word32] = a0_2086 + 1<i32>
	byte v196_2095 = Mem2091[a0_2086:byte]
	d0_2075 = SEQ(SLICE(d0, word24, 8), v196_2095)
	dwLoc44_3990 = CONVERT(v196_2095, byte, uint32)
l00003458:
	byte bLoc41_3996 = SLICE(dwLoc44_3990, byte, 0)
	word32 d0_2124 = SEQ(SLICE(d0_2075, word24, 8), bLoc41_3996)
	word32 d3_2116 = d3_1781 + 1<32>
	d0 = d0_2124 & 0xFF<32>
	branch __btst(Mem2114[0x000028C5<p32> + CONVERT(SLICE(d0_2124, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l0000347E
l0000347A:
	d0 = CONVERT(bLoc41_3996 | 0x20<8>, byte, uint32)
l0000347E:
	branch d0 != 0x78<32> l00003516
l00003488:
	branch d6_1093 - d3_2116 <u 0<32> l00003516
l00003516:
	d7 = 111<i32>
l0000348E:
	word32 dwLoc44_3998
	word32 d0_2167
	Mem2154[dwArg04 + 24<i32>:word32] = Mem2114[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v210_2156 = Mem2154[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2157[dwArg04 + 20<i32>:word32] = v210_2156
	branch v210_2156 < 0<32> l000034C0
l000034C0:
	word32 a5_5629
	d0_2167 = fn00003CE0(dwArg04, out a5_5629)
	dwLoc44_3998 = d0_2167
l000034A0:
	word32 a0_2178 = Mem2157[dwArg04 + 4<i32>:word32]
	Mem2183[dwArg04 + 4<i32>:word32] = a0_2178 + 1<i32>
	byte v212_2187 = Mem2183[a0_2178:byte]
	d0_2167 = SEQ(SLICE(d0, word24, 8), v212_2187)
	dwLoc44_3998 = CONVERT(v212_2187, byte, uint32)
l000034CE:
	word32 d0_2226 = CONVERT(Mem2206[0x000028C5<p32> + (SEQ(SLICE(d0_2167, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2226 & 0x44<32>
	branch (d0_2226 & 0x44<32>) == 0<32> l000034FA
l000034F4:
	branch d6_1093 - (d3_2116 + 1<32>) <u 0<32> l000034FA
l000034F8:
	d7 = 120<i32>
l000034FA:
	branch dwLoc44_3998 == 0xFFFFFFFF<32> l00003510
l00003504:
	d0 = fn00002C0C(SLICE(dwLoc44_3998, byte, 0), dwArg04)
l00003510:
l00003518:
	branch dwLoc44_3990 == 0xFFFFFFFF<32> l0000352E
l00003522:
	d0 = fn00002C0C(SLICE(dwLoc44_3990, byte, 0), dwArg04)
l0000352E:
l00003572:
	word32 d4_2409 = d4_126
	word32 d3_2328 = d3_1781
	branch SLICE(d7, byte, 0) != 0x78<8> l000036A6
l0000357A:
	branch d5_1007 != 0x30<32> l000036A6
l00003584:
	branch d6_1093 - d3_1781 <u 0<32> l000036A6
l0000358A:
	word32 dwLoc44_4018
	word32 d0_2354
	Mem2339[dwArg04 + 24<i32>:word32] = Mem2336[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v265_2341 = Mem2339[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2342[dwArg04 + 20<i32>:word32] = v265_2341
	branch v265_2341 < 0<32> l000035BC
l000035BC:
	word32 a5_5632
	d0_2354 = fn00003CE0(dwArg04, out a5_5632)
	dwLoc44_4018 = d0_2354
l0000359C:
	word32 a0_2365 = Mem2342[dwArg04 + 4<i32>:word32]
	Mem2370[dwArg04 + 4<i32>:word32] = a0_2365 + 1<i32>
	byte v267_2374 = Mem2370[a0_2365:byte]
	d0_2354 = SEQ(SLICE(d0, word24, 8), v267_2374)
	dwLoc44_4018 = CONVERT(v267_2374, byte, uint32)
l000035CA:
	byte bLoc41_4024 = SLICE(dwLoc44_4018, byte, 0)
	word32 d0_2416 = SEQ(SLICE(d0_2354, word24, 8), bLoc41_4024)
	word32 d3_2407 = d3_1781 + 1<32>
	word32 d4_2411 = d4_126 + 1<32>
	d0 = d0_2416 & 0xFF<32>
	branch __btst(Mem2405[0x000028C5<p32> + CONVERT(SLICE(d0_2416, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l000035F0
l000035EC:
	d0 = CONVERT(bLoc41_4024 | 0x20<8>, byte, uint32)
l000035F0:
	branch d0 != 0x78<32> l0000368C
l000035FA:
	branch d6_1093 - d3_2407 <u 0<32> l0000368C
l00003600:
	word32 dwLoc44_4026
	word32 d0_2457
	Mem2444[dwArg04 + 24<i32>:word32] = Mem2405[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v280_2446 = Mem2444[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2447[dwArg04 + 20<i32>:word32] = v280_2446
	branch v280_2446 < 0<32> l00003632
l00003632:
	word32 a5_5633
	d0_2457 = fn00003CE0(dwArg04, out a5_5633)
	dwLoc44_4026 = d0_2457
l00003612:
	word32 a0_2468 = Mem2447[dwArg04 + 4<i32>:word32]
	Mem2473[dwArg04 + 4<i32>:word32] = a0_2468 + 1<i32>
	byte v282_2477 = Mem2473[a0_2468:byte]
	d0_2457 = SEQ(SLICE(d0, word24, 8), v282_2477)
	dwLoc44_4026 = CONVERT(v282_2477, byte, uint32)
l00003640:
	word32 d0_2513 = CONVERT(Mem2496[0x000028C5<p32> + (SEQ(SLICE(d0_2457, word24, 8), SLICE(dwLoc44_4026, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d3_2328 = d3_2407 + 1<32>
	d4_2409 = d4_2411 + 1<32>
	d0 = d0_2513 & 0x44<32>
	branch (d0_2513 & 0x44<32>) == 0<32> l00003672
l00003668:
	branch d6_1093 - (d3_2407 + 1<32>) <u 0<32> l00003672
l00003672:
	branch dwLoc44_4026 == 0xFFFFFFFF<32> l00003688
l0000367C:
	d0 = fn00002C0C(SLICE(dwLoc44_4026, byte, 0), dwArg04)
l00003688:
l0000368C:
	branch dwLoc44_4018 == 0xFFFFFFFF<32> l000036A2
l00003696:
	d0 = fn00002C0C(SLICE(dwLoc44_4018, byte, 0), dwArg04)
l000036A2:
	d3_2328 = d3_2407 - 1<32>
	d4_2409 = d4_2411 - 1<32>
l0000366C:
	d5_1007 = dwLoc44_4026
l000036A6:
	word32 dwLoc38_4048
	branch SLICE(d7, byte, 0) == 0x78<8> l000036B2
l000036AC:
	branch SLICE(d7, byte, 0) != 0x58<8> l000036BC
l000036BC:
	word32 dwLoc44_4045
	branch SLICE(d7, byte, 0) != 0x6F<8> l000036CC
l000036CC:
	dwLoc44_4045 = 0xA<32>
l000036C2:
	dwLoc44_4045 = 8<32>
l000036D4:
	dwLoc38_4048 = dwLoc44_4045
l000036B2:
	dwLoc38_4048 = 0x10<32>
l000036DA:
	word32 d0_2646 = CONVERT(Mem2617[0x000028C5<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2646 & 0x44<32>
	word32 dwLoc44_4053 = d4_2409
	byte bLoc2E_4054 = SLICE(d7, byte, 0)
	branch (d0_2646 & 0x44<32>) == 0<32> l00003942
l0000370C:
	branch dwLoc38_4048 != 0xA<32> l00003742
l00003716:
	word32 d0_2702 = CONVERT(Mem2685[0x000028C5<p32> + (CONVERT(SLICE(d5_1007, byte, 0), byte, uint32) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2702 & 4<32>
	dwLoc44_4053 = d4_2409
	bLoc2E_4054 = SLICE(d7, byte, 0)
	branch (d0_2702 & 4<32>) == 0<32> l00003942
l00003742:
	branch dwLoc38_4048 != 8<32> l00003762
l0000374C:
	dwLoc44_4053 = d4_2409
	bLoc2E_4054 = SLICE(d7, byte, 0)
	branch d5_1007 > 0x37<32> l00003942
l00003762:
	dwLoc44_4053 = d4_2409
	bLoc2E_4054 = SLICE(d7, byte, 0)
	branch d6_1093 - d3_2328 <u 0<32> l00003942
l00003778:
	d7 = dwLoc38_4048
l00003780:
	word32 d1_2792
	word32 d0_2791 = fn00003C60(d4_2409, dwLoc38_4048 >> 31<i32>, dwLoc38_4048, dwLoc4C_3979, dwLoc48_3978, out d1_2792)
	branch (CONVERT(Mem2803[0x000028C5<p32> + (SEQ(SLICE(dwLoc38_4048 >> 31<i32>, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32) & 4<32>) == 0<32> l000037E0
l000037E0:
	d4_2409 = 0<i32>
l000037D6:
	d4_2409 = d5_1007 - 0x30<32>
l000037E2:
	word32 d6_2879
	word32 d0_2837 = d4_2409 >> 31<i32>
	word32 d2_2844 = d4_2409 + d1_2792
	word32 d2_2854 = d0_2791 + d0_2837 + CONVERT(d2_2844 <u 0<32>, bool, word32)
	branch (CONVERT(Mem2856[0x000028C5<p32> + (SEQ(SLICE(d0_2837, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32) & 1<32>) == 0<32> l00003832
l00003832:
	d6_2879 = 0<i32>
l00003828:
	d6_2879 = d5_1007 - 0x37<32>
l00003834:
	word32 d2_2933
	word32 d0_2892 = d6_2879 >> 31<i32>
	word32 d2_2899 = d6_2879 + d2_2844
	word32 d2_2908 = d2_2854 + d0_2892 + CONVERT(d2_2899 <u 0<32>, bool, word32)
	branch (CONVERT(Mem2910[0x000028C5<p32> + (SEQ(SLICE(d0_2892, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32) & 2<32>) == 0<32> l00003884
l00003884:
	d2_2933 = 0<i32>
l0000387A:
	d2_2933 = d5_1007 - 0x57<32>
l00003886:
	word32 d0_2988
	Mem2976[dwArg04 + 24<i32>:word32] = Mem2962[dwArg04 + 24<i32>:word32] | 1<i32>
	word32 v341_2978 = Mem2976[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2979[dwArg04 + 20<i32>:word32] = v341_2978
	word32 d2_2952 = d2_2933 + d2_2899
	dwLoc48_3978 = d2_2952
	dwLoc4C_3979 = d2_2908 + (d2_2933 >> 31<i32>) + CONVERT(d2_2952 <u 0<32>, bool, word32)
	branch v341_2978 < 0<32> l000038D8
l000038D8:
	word32 a5_5634
	d0_2988 = fn00003CE0(dwArg04, out a5_5634)
	d1 = d0_2988
l000038C0:
	word32 a0_2999 = Mem2979[dwArg04 + 4<i32>:word32]
	Mem3004[dwArg04 + 4<i32>:word32] = a0_2999 + 1<i32>
	d0_2988 = CONVERT(Mem3004[a0_2999:byte], byte, uint32)
	d1 = CONVERT(SLICE(d0_2988, byte, 0), byte, uint32)
l000038E4:
	word32 d0_3035 = CONVERT(Mem3023[0x000028C5<p32> + (SEQ(SLICE(d0_2988, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d5_1007 = d1
	d3_2328 = d3_5637 + 1<32>
	dwLoc44_4053 = dwLoc44_4053 + 1<32>
	d0 = d0_3035 & 0x44<32>
	branch (d0_3035 & 0x44<32>) == 0<32> l00003942
l00003908:
	branch dwLoc38_4048 != 0xA<32> l0000392C
l00003910:
	word32 d0_3057 = CONVERT(Mem3023[0x000028C5<p32> + (CONVERT(SLICE(d1, byte, 0), byte, uint32) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_3057 & 4<32>
	branch (d0_3057 & 4<32>) == 0<32> l00003942
l0000392C:
	branch dwLoc38_4048 != 8<32> l0000393C
l00003934:
	branch d1 > 0x37<32> l00003942
l0000393C:
	d3_5637 = d3_2328
	branch d6_1093 - (d3_5637 + 1<32>) >=u 0<32> l00003780
l00003942:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2E_4054)
	word32 d4_3094 = dwLoc44_4053
	branch dwLoc0A_3980 == 0<32> l00003976
l00003954:
	branch d3_2328 != 2<32> l00003976
l0000395C:
	branch d5_1007 == 0xFFFFFFFF<32> l0000396E
l00003964:
	d0 = fn00002C0C(SLICE(d5_1007, byte, 0), dwArg04)
l0000396E:
	d3_2328 = d3_2328 - 1<32>
	d4_3094 = dwLoc44_4053 - 1<32>
	d5_1007 = dwLoc0A_3980
l00003976:
	branch d5_1007 == 0xFFFFFFFF<32> l00003988
l0000397E:
	d0 = fn00002C0C(SLICE(d5_1007, byte, 0), dwArg04)
l00003988:
	d3_124 = d3_2328 - 1<32>
	d4_126 = d4_3094 - 1<32>
	branch bLoc2F_3808 != 0<8> l00003B36
l00003994:
	branch d3_124 == 0<32> l00003B36
l0000399A:
	branch bLoc2E_4054 != 0x75<8> l00003A5C
l00003A5C:
	branch dwLoc0A_3980 != 0x2D<32> l00003A78
l00003A78:
	byte bLoc4C_4328 = bLoc30_3807 - 1<8>
	branch bLoc4C_4328 == 0<8> l00003AAE
l00003AAE:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	word32 a0_3231 = Mem3212[d0:word32]
	Mem3233[a0_3231 + 4<i32>:word32] = dwLoc48_3978
	Mem3235[a0_3231:word32] = dwLoc4C_3979
	d2_1050 = d0 + 4<32>
l00003A98:
	branch bLoc4C_4328 == 1<8> l00003B00
l00003B00:
	word32 d0_3244 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3252[Mem3238[d0_3244:word32]:byte] = SLICE(dwLoc48_3978, byte, 0)
	d2_1050 = d0_3244 + 4<32>
	d0 = dwLoc48_3978
l00003A9E:
	branch bLoc4C_4328 == 0x67<8> l00003AE6
l00003AE6:
	word32 d0_3261 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3269[Mem3255[d0_3261:word32]:word16] = SLICE(dwLoc48_3978, word16, 0)
	d2_1050 = d0_3261 + 4<32>
	d0 = dwLoc48_3978
l00003AA6:
	branch bLoc4C_4328 == 0x6B<8> l00003ACC
l00003ACC:
	word32 d0_3278 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3285[Mem3272[d0_3278:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3278 + 4<32>
	d0 = dwLoc48_3978
l00003AAC:
l00003B1A:
	word32 d0_3290 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3297[Mem3272[d0_3290:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3290 + 4<32>
	d0 = dwLoc48_3978
l00003A66:
l000039A2:
	byte bLoc44_4333 = bLoc30_3807 - 1<8>
	branch bLoc44_4333 == 0<8> l000039CC
l000039CC:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	word32 a0_3335 = Mem3319[d0:word32]
	Mem3337[a0_3335 + 4<i32>:word32] = dwLoc48_3978
	Mem3339[a0_3335:word32] = dwLoc4C_3979
	d2_1050 = d0 + 4<32>
l000039B6:
	branch bLoc44_4333 == 1<8> l00003A24
l00003A24:
	word32 d0_3348 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3356[Mem3342[d0_3348:word32]:byte] = SLICE(dwLoc48_3978, byte, 0)
	d2_1050 = d0_3348 + 4<32>
	d0 = dwLoc48_3978
l000039BC:
	branch bLoc44_4333 == 0x67<8> l00003A08
l00003A08:
	word32 d0_3365 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3373[Mem3359[d0_3365:word32]:word16] = SLICE(dwLoc48_3978, word16, 0)
	d2_1050 = d0_3365 + 4<32>
	d0 = dwLoc48_3978
l000039C4:
	branch bLoc44_4333 == 0x6B<8> l000039EC
l000039EC:
	word32 d0_3382 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3389[Mem3376[d0_3382:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3382 + 4<32>
	d0 = dwLoc48_3978
l000039CA:
l00003A40:
	word32 d0_3394 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3401[Mem3376[d0_3394:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3394 + 4<32>
	d0 = dwLoc48_3978
l00003B32:
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00003B36:
	a4_261 = a3_1884
l00003C34:
	branch d3_124 == 0<32> l00003C3E
l00003C38:
	branch Mem3487[a4_261:byte] != 0<8> l00002C5E
l00003C3E:
	word32 d0_3527
	branch d5_1007 != 0xFFFFFFFF<32> l00003C50
l00003C46:
	branch dwLoc3C_3792 != 0<32> l00003C50
l00003C50:
	d0_3527 = dwLoc3C_3792
l00003C4C:
	d0_3527 = d5_1007
l00003C54:
	return d0_3527
fn00002C3C_exit:


word32 fn00003C60(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003C60_entry:
l00003C60:
	word32 d0_23 = __swap(dwArg08)
	word32 d1_25 = __swap(dwArg10)
	word32 d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u32 SLICE(dwArg10, word16, 0)
	word32 d1_32 = d1_25 *u32 SLICE(d0_23, word16, 0)
	word32 d2_39 = dwArg08 *u32 SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u32 SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l00003C94
l00003C8E:
	d1_32 = d1_32 + 0x10000<32>
l00003C94:
	word32 d2_45 = __swap(d2_39)
	word32 d3_65 = __swap(dwArg0C) *u32 SLICE(dwArg08, word16, 0)
	word32 d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65 + __swap(dwArg08) *u32 SLICE(dwArg0C, word16, 0), word16, 0)))
	word32 d3_83 = __swap(dwArg04) *u32 SLICE(dwArg10, word16, 0)
	word32 d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83 + __swap(dwArg10) *u32 SLICE(dwArg04, word16, 0), word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return CONVERT(SLICE(d2_45, word16, 0), word16, uint32) + d1_32 + (dwArg0C *u32 SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u32 SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn00003C60_exit:


word32 fn00003CE0(word32 dwArg04, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002C3C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00003CE0_entry:
l00003CE0:
	word32 d0_153
	word32 a5_271 = fn00002530()
	branch dwArg04 != 0<32> l00003CF8
l00003CF8:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 42<i32>) == 32<i32> l00003D0A
l00003D0A:
	Mem49[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<i32>
	branch (Mem49[dwArg04 + 24<i32>:word32] & 0x200<32>) == 0<32> l00003D22
l00003D1C:
	a5_271 = fn00003DDC()
l00003D22:
	branch Mem49[dwArg04 + 28<i32>:word32] != 0<32> l00003D40
l00003D28:
	branch (Mem49[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l00003D38
l00003D38:
	Mem78[dwArg04 + 28<i32>:word32] = 0x400<32>
l00003D30:
	Mem81[dwArg04 + 28<i32>:word32] = 1<i32>
l00003D40:
	branch Mem84[dwArg04 + 8<i32>:word32] != 0<32> l00003D7C
l00003D46:
	word32 d4_100
	branch (Mem84[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003D5A
l00003D5A:
	d4_100 = 1<i32>
l00003D56:
	d4_100 = 2<i32>
l00003D5C:
	word32 a0_308
	word32 d0_114 = fn0000215C(d4_100 + Mem84[dwArg04 + 28<i32>:word32], out a0_308)
	branch d0_114 != 0<32> l00003D74
l00003D74:
	Mem127[dwArg04 + 8<i32>:word32] = d0_114 + 1<i32>
l00003D7C:
	Mem133[dwArg04 + 4<i32>:word32] = Mem131[dwArg04 + 8<i32>:word32]
	word32 d0_138 = execPrivate2()
	Mem140[dwArg04 + 20<i32>:word32] = d0_138
	word32 v23_141 = Mem140[dwArg04 + 20<i32>:word32] - 1<32>
	Mem142[dwArg04 + 20<i32>:word32] = v23_141
	branch v23_141 >= 0<32> l00003DC2
l00003DC2:
	word32 a0_146 = Mem142[dwArg04 + 4<i32>:word32]
	Mem149[dwArg04 + 4<i32>:word32] = a0_146 + 1<i32>
	d0_153 = SEQ(SLICE(d0_138, word24, 8), Mem149[a0_146:byte]) & 0xFF<32>
l00003DA0:
	branch Mem142[dwArg04 + 20<i32>:word32] != -1<i32> l00003DB2
l00003DB2:
	Mem164[dwArg04 + 24<i32>:word32] = Mem142[dwArg04 + 24<i32>:word32] | 16<i32>
l00003DA8:
	Mem171[dwArg04 + 24<i32>:word32] = Mem142[dwArg04 + 24<i32>:word32] | 8<i32>
l00003DBA:
	Mem176[dwArg04 + 20<i32>:word32] = 0<32>
	d0_153 = -1<i32>
l00003D70:
	d0_153 = -1<i32>
l00003D04:
	d0_153 = -1<i32>
l00003CF2:
	d0_153 = -1<i32>
l00003DD6:
	a5Out = a5_271
	return d0_153
fn00003CE0_exit:


word32 fn00003DDC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003CE0
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00003DDC_entry:
l00003DDC:
	word32 a2_11 = Mem5[0x00003F88<p32>:word32]
	branch a2_11 == 0<32> l00003E14
l00003DEA:
	branch (Mem12[a2_11 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00003E0A
l00003DFC:
	branch Mem12[a2_11:word32] == 0<32> l00003E0A
l00003E00:
	word32 a0_88
	fn000020B0(a2_11, out a0_88, out a5)
l00003E0A:
	a2_11 = Mem39[a2_11 + 12<i32>:word32]
	branch a2_11 != 0<32> l00003DEA
l00003E14:
	return a5
fn00003DDC_exit:


