void fn00001000(word32 d0, word32 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0:[0..31] d0:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a2 a3 a4 a5 a6 d0 d1 d2 d3 d4 d5
// Preserved: a7 d7
fn00001000_entry:
l00001000:
l0000100A:
	word32 a6_9 = Mem0[0x00000004<p32>:word32]
	word32 d2_100 = d0
	word32 a2_277 = a0
	branch Mem0[a6_9 + 20<i32>:word16] >=u 0x24<16> l00001036
l00001020:
	word32 a0_13 = 0x00003D90<p32>
	word32 d0_16 = 0xC<32>
l00001030:
	Mem19[a0_13:word32] = 0<32>
	a0_13 = a0_13 + 4<i32>
	d0_16 = d0_16 - 1<32>
	branch d0_16 != 0<32> l00001030
l00001036:
	Mem29[0x00003D90<p32>:word32] = fp
	Mem32[0x00003D94<p32>:word32] = a6_9
	word32 d0_34 = FindTask(0<32>)
	word32 d0_38 = OpenLibrary(0x000012BC<p32>, 0<i32>)
	branch d0_38 == 0<32> l00001226
l00001226:
	Alert(0x38007<32>)
l00001056:
	word32 d4_72
	Mem65[0x00003D98<p32>:word32] = d0_38
	branch Mem65[d0_34 + 172<i32>:word32] != 0<32> l00001066
l00001066:
	word32 a0_71 = a0
	d4_72 = 3<i32>
l0000106A:
	branch Mem65[a0_671:byte] != 0x20<8> l00001072
l00001070:
	d4_72 = SEQ(SLICE(d4_72, word16, 16), SLICE(d4_72, word16, 0) + 1<16>)
l00001072:
	a0_71 = a0_671 + 1<i32>
	a0_671 = a0_71
	branch Mem65[a0_671:byte] != 0<8> l0000106A
l00001060:
	d4_72 = 2<i32>
	d2_100 = 8<i32>
l00001076:
	word32 d0_98 = d4_72 << 2<32>
	word32 d0_105 = d0_98 + d2_100
	word32 d1_109 = 0x10001<32>
	word32 d0_110 = AllocMem(d0_105 + 0x11<32>, 0x10001<32>)
	branch d0_110 == 0<32> l0000123E
l0000123E:
	CloseLibrary(Mem65[0x00003D98<p32>:word32])
	Alert(0x10000<32>)
l0000125C:
	branch Mem153[d0_34 + 172<i32>:word32] != 0<32> l00001268
l00001262:
	fn0000126C(fn00001214(d0_34))
l00001268:
	return
l00001096:
	word32 dwLoc0C_528
	word32 a0_426
	Mem168[d0_110:word32] = d0_105 + 0x11<32>
	Mem171[d0_110 + 12<i32>:word32] = d4_72 - 1<32>
	Mem174[d0_110 + 8<i32>:word32] = d0_110 + 16<i32> + d0_98
	Mem176[0<32>:word32] = 0<32>
	word32 d0_177 = Mem176[d0_34 + 172<i32>:word32]
	branch d0_177 == 0<32> l00001190
l00001190:
	word32 d0_181 = fn00001214(d0_34)
	Mem183[0x00003D9C<p32>:word32] = d0_181
	Mem184[0x00003DA0<p32>:word32] = d0_181
	Mem188[0<32>:word32] = 0<32>
	dwLoc0C_528 = d0_181
	branch Mem188[d0_181 + 36<i32>:word32] == 0<32> l000011B6
l000011AE:
	Enable()
l000011B6:
	word32 d0_202 = Supervisor(d0_110)
	Mem203[d0_110 + 4<i32>:word32] = d0_202
	branch d0_202 != 0<32> l000011D2
l000011D2:
	Mem207[0x00003DA4<p32>:word32] = d0_202
	Mem208[0x00003DA8<p32>:word32] = d0_202
	Mem209[0x00003DAC<p32>:word32] = d0_202
	Mem211[d0_34 + 156<i32>:word32] = d0_202
	Mem212[d0_34 + 160<i32>:word32] = d0_202
	word32 d0_216 = Mem212[(d0_202 << 2<32>) + 8<i32>:word32]
	branch d0_216 == 0<32> l000011F4
l000011F0:
	Mem219[d0_34 + 164<i32>:word32] = d0_216
l000011F4:
l000011CC:
l000011CE_thunk_fn0000127C:
	fn0000127C()
	return
l000010B6:
	word32 d0_240 = Mem176[(d0_177 << 2<32>) + 16<i32>:word32]
	word32 a1_243 = Mem176[d0_110 + 8<i32>:word32]
	word32 a0_248 = (d0_240 << 2<32>) + 1<i32>
	Mem251[a0_248 + CONVERT(Mem176[d0_240 << 2<32>:byte], byte, uint32):byte] = 0<8>
	Mem252[d0_110 + 16<i32>:word32] = a0_248
	word32 a6_253 = d0_110 + 20<i32>
	word32 d3_254 = 1<i32>
	word32 a0_259 = a0 + d2_100
l000010DA:
	a0_259 = a0_259 - 1<i32>
	branch Mem252[a0_259:byte] >u 0x20<8> l000010E2
l000010DE_1:
	word16 v29_267 = SLICE(d2_100, word16, 0)
	d2_100 = SEQ(SLICE(d2_100, word16, 16), v29_267 - 1<i16>)
	branch v29_267 != 0<16> l000010DA
l000010E2:
	Mem272[a0_259 + 1<i32>:byte] = 0<8>
l000010E6:
	byte v31_279 = Mem278[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(SLICE(d1_109, word24, 8), v31_279)
	branch v31_279 == 0<8> l00001148
l000010EA:
	branch v31_279 == 0x20<8> l000010E6
l000010F0:
	branch v31_279 == 9<8> l000010E6
l000010F6:
	branch d3_254 - Mem278[d0_110 + 12<i32>:word32] == 0<32> l00001148
l000010FC:
	Mem299[a6_253:word32] = a1_243
	a6_253 = a6_253 + 4<i32>
	d3_254 = SEQ(SLICE(d3_254, word16, 16), SLICE(d3_254, word16, 0) + 1<16>)
	branch v31_279 == 0x22<8> l0000111A
l0000111A:
	byte v50_310 = Mem309[a2_277:byte]
	word24 v51_313 = SLICE(d1_109, word24, 8)
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(v51_313, v50_310)
	branch v50_310 == 0<8> l00001148
l0000111E:
	branch v50_310 == 0x22<8> l00001116
l00001124:
	branch v50_310 != 0x2A<8> l00001144
l0000112A:
	byte v54_323 = Mem309[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(v51_313, v54_323)
	branch (v54_323 & 0xDF<8>) != 0x4E<8> l0000113C
l0000113C:
	branch (v54_323 & 0xDF<8>) != 0x45<8> l00001144
l00001142:
	d1_109 = 27<i32>
l00001138:
	d1_109 = 10<i32>
l00001144:
	Mem348[a1_243:byte] = SLICE(d1_109, byte, 0)
	a1_243 = a1_243 + 1<i32>
l00001106:
	Mem352[a1_243:byte] = v31_279
	a1_243 = a1_243 + 1<i32>
l00001108:
	byte v40_357 = Mem356[a2_277:byte]
	a2_277 = a2_277 + 1<i32>
	d1_109 = SEQ(SLICE(d1_109, word24, 8), v40_357)
	branch v40_357 == 0<8> l00001148
l00001148:
	Mem366[a1_243:byte] = 0<8>
	Mem371[a6_253:word32] = 0<32>
	Mem396[0x00003DA4<p32>:word32] = execPrivate4()
	word32 d0_397 = execPrivate5()
	Mem398[0x00003DA8<p32>:word32] = d0_397
	dwLoc0C_528 = d0_110 + 16<i32>
	dwLoc10 = d3_254
	branch Mem398[Mem398[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x24<16> l0000117A
l00001172:
	word32 v64_408 = Mem398[d0_34 + 224<i32>:word32]
	Mem409[0x00003DAC<p32>:word32] = v64_408
	branch v64_408 != 0<32> l0000117E
l0000117A:
	Mem414[0x00003DAC<p32>:word32] = d0_397
l0000117E:
	branch Mem418[d0_34 + 8<i32>:byte] != 0xD<8> l000011F8
l000011F8:
	a0_426 = Mem424[d0_34 + 58<i32>:word32]
l00001186:
	word32 a0_429 = Mem418[d0_34 + 176<i32>:word32]
	a0_426 = a0_429 + 4<i32> - Mem418[a0_429:word32]
l00001202:
	Mem439[0x00003DB8<p32>:word32] = a0_426
	Mem446[0x00003DBC<p32>:word32] = fp - 16<i32>
	fn00001354(dwLoc10, dwLoc0C_528)
l00001212_thunk_fn0000127C:
	fn0000127C()
	return
fn00001000_exit:
l0000110C:
	branch v40_357 == 0x20<8> l00001116
l00001116:
	Mem478[a1_243:byte] = 0<8>
	a1_243 = a1_243 + 1<i32>
l00001112:
	Mem485[a1_243:byte] = v40_357
	a1_243 = a1_243 + 1<i32>


word32 fn00001214(word32 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a3:[0..31]
// LiveOut: d0
// Trashed: a0 d0
// Preserved: a7
fn00001214_entry:
l00001214:
	WaitPort(a3 + 92<i32>)
	return GetMsg(a3 + 92<i32>)
fn00001214_exit:


void fn0000126C(word32 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  a2:[0..31]
// LiveOut:
// Trashed: a1 d0
// Preserved: a7
fn0000126C_entry:
l0000126C:
	Forbid()
	ReplyMsg(a2)
	return
fn0000126C_exit:


word32 fn00001278(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000012D0
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZN a1 a2 a4 a5 a6 d0 d1 d2
// Preserved: a7
fn00001278_entry:
l00001278:
l00001278_thunk_fn0000127C:
	return fn0000127C()
fn00001278_exit:


word32 fn0000127C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
//      fn00001278
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a1 a2 a4 a5 a6 a7 d0 d1
// Preserved:
fn0000127C_entry:
l0000127C:
	word32 a7_6 = Mem0[0x00003D90<p32>:word32]
	word32 v7_11 = Mem0[a7_6 - 4<i32>:word32]
	word32 v5_8 = Mem0[a7_6 - 8<i32>:word32]
	branch Mem0[v7_11 + 4<i32>:word32] == 0<32> l0000129E
l00001296:
	execPrivate1()
l0000129E:
	CloseLibrary(Mem0[0x00003D98<p32>:word32])
	branch v5_8 == 0<32> l000012B0
l000012AE:
	fn0000126C(v5_8)
l000012B0:
	FreeMem(v7_11, Mem0[v7_11:word32])
	return v7_11
fn0000127C_exit:


word32 fn000012D0(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000131C
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZNX a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7 d2
fn000012D0_entry:
l000012D0:
	branch false l00001308
l000012E2:
	word32 d2_16 = 1<i32>
	branch Mem11[0x00003EDC<p32>:word32] == 0<32> l000012F6
l000012EA:
	d2_16 = d2_16 + 1<32>
	branch Mem11[0x00003ED8<p32> + (d2_16 << 2<32>):word32] != 0<32> l000012EA
l000012F6:
	word32 d2_33 = d2_16 - 1<32>
	branch d2_33 == 0<32> l00001308
l000012FA:
	call Mem11[0x00003ED8<p32> + (d2_33 << 2<32>):word32] (retsize: 4;)
		uses: d0:d2_36 << 2<32>,Stack +0014:dwArg04
	d2_33 = d2_33 - 1<32>
	branch d2_33 != 0<32> l000012FA
l00001308:
	return fn00001278(dwArg04)
fn000012D0_exit:


word32 fn0000131C(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
//      fn00002BBC
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5
// Trashed: CVZN a1 a4 a5 a6 d0 d1
// Preserved: X a2 a3 a7
fn0000131C_entry:
l0000131C:
	branch Mem8[0x00003DC0<p32>:word32] != 0<32> l0000134E
l00001328:
	word32 a3_13 = Mem8[0x00003EE8<p32>:word32]
	Mem15[0x00003DC0<p32>:word32] = 1<i32>
	branch a3_13 == 0<32> l00001346
l0000133A:
	call Mem15[a3_13 + 4<i32>:word32] (retsize: 4;)
		uses: d0:a3_25,Stack +0010:dwArg04
	a3_13 = Mem15[a3_13:word32]
	branch a3_13 != 0<32> l0000133A
l00001346:
	a5 = fn000012D0(dwArg04)
l0000134E:
	return a5
fn0000131C_exit:


void fn00001354(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001000
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 a4 a5 a6 d0 d1
// Preserved: a2 a3 a7
fn00001354_entry:
l00001354:
	word32 a3_17 = 0x00003ED0<p32>
	word32 d0_10 = 0x3ECC<32>
	branch false l00001372
l00001366:
	branch Mem8[0x00003ED0<p32>:word32] == 0<32> l00001372
l0000136A:
	call Mem8[a3_17:word32] (retsize: 4;)
		uses: Stack +0010:dwArg04,Stack +0014:dwArg08
		defs: d0:d0_23
	a3_17 = a3_17 + 4<i32>
	branch Mem8[a3_17:word32] != 0<32> l0000136A
l00001372:
	fn0000131C(fn00001390(d0_10))
	return
fn00001354_exit:


word32 fn00001390(word32 d0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001354
// MayUse:  d0:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00001390_entry:
l00001390:
	fn0000141C(fn00002F18(d0, 0x000013DC<p32>), 0x000013F0<p32>)
	word32 d0_32 = dwLoc08
	branch dwLoc08 - dwLoc04 == 0<32> l000013D8
l000013BE:
	d0_32 = fn00002F18(fn00001408(dwLoc08, dwLoc04), 0x000013F8<p32>)
l000013D8:
	return d0_32
fn00001390_exit:


word32 fn00001408(word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZN d0 d1
// Preserved: a7
fn00001408_entry:
l00001408:
	word32 d0_17 = dwArg04
	branch dwArg08 - dwArg04 >= 0<32> l00001416
l00001416:
	d0_17 = dwArg08
l00001414:
l00001418:
	return d0_17
fn00001408_exit:


void fn0000141C(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 d0
// Preserved: a7
fn0000141C_entry:
l0000141C:
	fn00001468(d0, Mem8[0x00003EF4<p32>:word32], dwArg04, fp + 8<i32>)
	return
fn0000141C_exit:


word32 fn00001438(byte bArg07, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  Stack +0007:[0..7] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 d0
// Preserved: a2 a7
fn00001438_entry:
l00001438:
	word32 d0_10 = dwArg08
	branch dwArg08 == 0<32> l00001462
l00001444:
	d0_10 = Mem5[dwArg08 + 4<i32>:word32]
	branch d0_10 - Mem5[dwArg08 + 8<i32>:word32] >=u 0<32> l00001456
l0000144E:
	Mem16[Mem5[dwArg08 + 4<i32>:word32]:byte] = bArg07
l00001456:
	Mem22[dwArg08 + 20<i32>:word32] = Mem20[dwArg08 + 20<i32>:word32] + 1<32>
	Mem25[dwArg08 + 4<i32>:word32] = Mem22[dwArg08 + 4<i32>:word32] - 1<32>
l00001462:
	return d0_10
fn00001438_exit:


void fn00001468(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000141C
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN d0
// Preserved: X a0 a1 a2 a3 a4 a5 a6 a7 d1 d2 d3 d4 d5 d6 d7
fn00001468_entry:
l00001468:
	word32 d2_1050 = dwArg0C
	word32 a4_261 = dwArg08
	word32 dwLoc3C_3792 = 0<32>
	word32 d4_126 = 0<i32>
	word32 d5_1007 = 0<i32>
	branch Mem40[dwArg08:byte] == 0<8> l0000246A
l0000148A:
	word32 d3_124
	word32 d3_1781 = 0<i32>
	branch Mem49[a4_261:byte] != 0x25<8> l00002368
l00002368:
	word32 d0_63 = CONVERT(Mem49[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), Mem49[a4_261:byte]) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_63 & 8<32>
	branch (d0_63 & 8<32>) == 0<32> l000023F4
l000023F4:
	word32 dwLoc4C_3794
	Mem72[dwArg04 + 24<i32>:word32] = Mem49[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v112_74 = Mem72[dwArg04 + 20<i32>:word32] - 1<32>
	Mem75[dwArg04 + 20<i32>:word32] = v112_74
	branch v112_74 < 0<32> l00002426
l00002426:
	word32 a5_5625
	dwLoc4C_3794 = fn00002604(dwArg04, out a5_5625)
	d1 = d1_86
l00002406:
	word32 a0_96 = Mem75[dwArg04 + 4<i32>:word32]
	Mem101[dwArg04 + 4<i32>:word32] = a0_96 + 1<i32>
	dwLoc4C_3794 = CONVERT(Mem101[a0_96:byte], byte, uint32)
l00002434:
	d0 = CONVERT(CONVERT(Mem121[a4_261:byte], byte, int16), int16, int32)
	d5_1007 = dwLoc4C_3794
	d3_124 = 1<32>
	d4_126 = d4_126 + 1<32>
	branch d0 - dwLoc4C_3794 == 0<32> l0000245E
l00002448:
	branch dwLoc4C_3794 == 0xFFFFFFFF<32> l0000245A
l00002450:
	d0 = fn00001438(SLICE(dwLoc4C_3794, byte, 0), dwArg04)
l0000245A:
	d3_124 = 0<32>
	d4_126 = d4_126 - 1<32>
l00002384:
	word32 d0_178
	Mem165[dwArg04 + 24<i32>:word32] = Mem163[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v96_167 = Mem165[dwArg04 + 20<i32>:word32] - 1<32>
	Mem168[dwArg04 + 20<i32>:word32] = v96_167
	branch v96_167 < 0<32> l000023AE
l000023AE:
	word32 a5_5624
	d0_178 = fn00002604(dwArg04, out a5_5624)
	d1 = d0_178
l00002396:
	word32 a0_189 = Mem168[dwArg04 + 4<i32>:word32]
	Mem194[dwArg04 + 4<i32>:word32] = a0_189 + 1<i32>
	byte v98_198 = Mem194[a0_189:byte]
	d0_178 = SEQ(SLICE(d0, word24, 8), v98_198)
	d1 = CONVERT(v98_198, byte, uint32)
l000023BA:
	word32 d0_227 = CONVERT(Mem224[0x00002BED<p32> + (SEQ(SLICE(d0_178, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_227 & 8<32>
	branch (d0_227 & 8<32>) != 0<32> l00002384
l000023DC:
	branch d1 == 0xFFFFFFFF<32> l000023EE
l000023E4:
	d0 = fn00001438(SLICE(d1, byte, 0), dwArg04)
l000023EE:
	d4_126 = d4_126 - 1<32>
	d3_124 = 1<i32>
l0000245E:
	a4_261 = a4_261 + 1<i32>
l00001494:
	word32 a3_265 = a4_261 + 1<i32>
	word32 d0_275 = CONVERT(Mem264[0x00002BED<p32> + CONVERT(Mem264[a3_265:byte], byte, uint32):byte], byte, uint32)
	word32 d6_1093 = -1<i32>
	byte bLoc30_3807 = 0x69<8>
	byte bLoc2F_3808 = 0<8>
	d0 = d0_275 & 4<32>
	branch (d0_275 & 4<32>) == 0<32> l00001518
l000014BC:
	word32 d0_291 = CONVERT(Mem264[0x00002BED<p32> + CONVERT(Mem264[a3_265:byte], byte, uint32):byte], byte, uint32)
	d6_1093 = 0<i32>
	d0 = d0_291 & 4<32>
	branch (d0_291 & 4<32>) == 0<32> l00001518
l000014D6:
	word32 d1_307 = __swap(10<i32>) *u32 SLICE(d6_1093, word16, 0)
	word32 d0_316 = SLICE(d6_1093, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_307, word16, 16), SLICE(d1_307, word16, 0) + SLICE(__swap(d6_1093), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a3_265 = a3_265 + 1<i32>
	word32 d1_325 = CONVERT(Mem301[a3_265:byte], byte, uint32)
	word32 d0_339 = CONVERT(Mem301[0x00002BED<p32> + CONVERT(Mem301[a3_265:byte], byte, uint32):byte], byte, uint32)
	d1 = d1_325 - 0x30<32>
	d6_1093 = d1_325 - 0x30<32> + d0_316
	d0 = d0_339 & 4<32>
	branch (d0_339 & 4<32>) != 0<32> l000014D6
l00001518:
	branch Mem346[a3_265:byte] == 0x68<8> l00001542
l0000151E:
	branch Mem346[a3_265:byte] == 0x6C<8> l00001542
l00001524:
	branch Mem346[a3_265:byte] == 0x4C<8> l00001542
l0000152A:
	branch Mem346[a3_265:byte] == 0x7A<8> l00001542
l00001530:
	branch Mem346[a3_265:byte] == 0x6A<8> l00001542
l00001536:
	branch Mem346[a3_265:byte] == 0x74<8> l00001542
l0000153C:
	branch Mem346[a3_265:byte] != 0x2A<8> l000015AA
l00001542:
	d7 = SEQ(SLICE(d7, word24, 8), 0<8>)
	d1 = SEQ(SLICE(d1, word24, 8), 0x69<8>)
l0000154A:
	branch Mem346[a3_265:byte] != 0x2A<8> l00001554
l00001554:
	branch SLICE(d1, byte, 0) != 0x68<8> l00001564
l0000155A:
	branch Mem346[a3_265:byte] != 0x68<8> l00001564
l00001564:
	branch SLICE(d1, byte, 0) != 0x6C<8> l00001574
l0000156A:
	branch Mem346[a3_265:byte] != 0x6C<8> l00001574
l00001574:
	d1 = SEQ(SLICE(d1, word24, 8), Mem346[a3_265:byte])
l00001570:
	d1 = 1<i32>
l00001560:
	d1 = 2<i32>
l00001550:
	d7 = 1<i32>
l00001576:
	a3_265 = a3_265 + 1<i32>
	branch Mem346[a3_265:byte] == 0x68<8> l0000154A
l0000157E:
	branch Mem346[a3_265:byte] == 0x6C<8> l0000154A
l00001584:
	branch Mem346[a3_265:byte] == 0x4C<8> l0000154A
l0000158A:
	branch Mem346[a3_265:byte] == 0x7A<8> l0000154A
l00001590:
	branch Mem346[a3_265:byte] == 0x6A<8> l0000154A
l00001596:
	branch Mem346[a3_265:byte] == 0x74<8> l0000154A
l0000159C:
	branch Mem346[a3_265:byte] == 0x2A<8> l0000154A
l000015A2:
	bLoc30_3807 = SLICE(d1, byte, 0)
	bLoc2F_3808 = SLICE(d7, byte, 0)
l000015AA:
	branch bLoc30_3807 != 0x6A<8> l000015B8
l000015B2:
	bLoc30_3807 = 1<8>
l000015B8:
	branch bLoc30_3807 != 0x74<8> l000015C6
l000015C0:
	bLoc30_3807 = 0x69<8>
l000015C6:
	branch bLoc30_3807 != 0x7A<8> l000015D4
l000015CE:
	bLoc30_3807 = 0x6C<8>
l000015D4:
	byte v76_482 = Mem481[a3_265:byte]
	word24 v77_488 = SLICE(d7, word24, 8)
	word32 a3_1884 = a3_265 + 1<i32>
	d7 = SEQ(v77_488, v76_482)
	branch v76_482 == 0<8> l0000164A
l000015D8:
	branch v76_482 == 0x25<8> l0000164A
l000015DE:
	branch v76_482 == 0x63<8> l0000164A
l000015E4:
	branch v76_482 == 0x6E<8> l0000164A
l000015EA:
	branch v76_482 == 0x5B<8> l0000164A
l000015F0:
	word32 d0_521
	Mem508[dwArg04 + 24<i32>:word32] = Mem506[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v83_510 = Mem508[dwArg04 + 20<i32>:word32] - 1<32>
	Mem511[dwArg04 + 20<i32>:word32] = v83_510
	branch v83_510 < 0<32> l0000161A
l0000161A:
	word32 a5_5623
	d0_521 = fn00002604(dwArg04, out a5_5623)
	d1 = d0_521
l00001602:
	word32 a0_532 = Mem511[dwArg04 + 4<i32>:word32]
	Mem537[dwArg04 + 4<i32>:word32] = a0_532 + 1<i32>
	byte v87_541 = Mem537[a0_532:byte]
	d0_521 = SEQ(SLICE(d0, word24, 8), v87_541)
	d1 = CONVERT(v87_541, byte, uint32)
l00001626:
	word32 d0_570 = CONVERT(Mem567[0x00002BED<p32> + (SEQ(SLICE(d0_521, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d5_1007 = d1
	d4_126 = d4_126 + 1<32>
	d0 = d0_570 & 8<32>
	branch (d0_570 & 8<32>) != 0<32> l000015F0
l00001648:
	d3_1781 = 1<i32>
l0000164A:
	word24 v124_587 = SLICE(d1, word24, 8)
	word32 d1_591 = SEQ(v124_587, v76_482 - 0x25<8>)
	branch v76_482 == 0x25<8> l00001A96
l00001A96:
	word32 dwLoc4C_3827
	Mem610[dwArg04 + 24<i32>:word32] = Mem608[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v136_612 = Mem610[dwArg04 + 20<i32>:word32] - 1<32>
	Mem613[dwArg04 + 20<i32>:word32] = v136_612
	branch v136_612 < 0<32> l00001AC8
l00001AC8:
	word32 a5_5626
	d0 = fn00002604(dwArg04, out a5_5626)
	dwLoc4C_3827 = d0
	d1 = d1_626
l00001AA8:
	word32 a0_636 = Mem613[dwArg04 + 4<i32>:word32]
	Mem641[dwArg04 + 4<i32>:word32] = a0_636 + 1<i32>
	byte v138_645 = Mem641[a0_636:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v138_645)
	dwLoc4C_3827 = CONVERT(v138_645, byte, uint32)
	d1 = d1_591
l00001AD6:
	d5_1007 = dwLoc4C_3827
	d3_124 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch dwLoc4C_3827 == 0x25<32> l00002362
l00001AEA:
	branch dwLoc4C_3827 == 0xFFFFFFFF<32> l00001AFC
l00001AF2:
	d0 = fn00001438(SLICE(dwLoc4C_3827, byte, 0), dwArg04)
l00001AFC:
	d3_124 = d3_124 - 1<32>
	d4_126 = d4_126 - 1<32>
l00001654:
	branch v76_482 == 0x5B<8> l00001792
l00001792:
	byte bLoc4C_3835 = 0<8>
	branch Mem732[a3_1884:byte] != 0x5E<8> l000017A4
l0000179C:
	bLoc4C_3835 = 1<8>
	a3_1884 = a3_1884 + 1<i32>
l000017A4:
	d7 = SEQ(v77_488, bLoc4C_3835)
	word32 d1_748 = 0<32>
l000017B0:
	word32 d5_755
	branch bLoc4C_3835 == 0<8> l000017BC
l000017BC:
	d5_755 = 0<i32>
l000017B4:
	d5_755 = 0xFF<32>
l000017BE:
	Mem766[fp + -42<i32> + d1_748:byte] = SLICE(d5_755, byte, 0)
	d1_748 = d1_748 + 1<32>
	branch d1_748 <u 0x20<32> l000017B0
l000017D0:
l000017DC:
	branch Mem798[a3_1884:byte] == 0<8> l00001852
l000017E0:
	byte v405_803 = Mem798[a3_1884:byte]
	a3_1884 = a3_1884 + 1<i32>
	d1_748 = SEQ(SLICE(d1_748, word24, 8), v405_803)
	branch Mem798[a3_1884:byte] != 0x2D<8> l000017F4
l000017E8:
	branch v405_803 - Mem798[a3_1884 + 1<i32>:byte] >=u 0<8> l000017F4
l000017F4:
	d7 = SEQ(SLICE(d7, word24, 8), v405_803)
l000017EE:
	a3_1884 = a3_1884 + 2<i32>
	d7 = SEQ(SLICE(d7, word24, 8), Mem798[a3_1884 + 1<i32>:byte])
l000017F6:
	word32 d5_831 = CONVERT(v405_803, byte, uint32)
	d0 = CONVERT(SLICE(d7, byte, 0), byte, uint32)
	branch d0 - d5_831 <u 0<32> l0000184C
l00001802:
	branch bLoc4C_3835 == 0<8> l00001826
l00001826:
	word32 a0_850 = fp + -42<i32> + (d5_831 >>u 3<32>)
	d1_748 = CONVERT(Mem858[a0_850:byte], byte, uint32)
	Mem864[a0_850:byte] = 1<8> << (SLICE(d5_831, byte, 0) & 7<8>) | SLICE(d1_748, byte, 0)
l00001806:
	word32 a0_869 = fp + -42<i32> + (d5_831 >>u 3<32>)
	d1_748 = CONVERT(Mem858[a0_869:byte], byte, uint32)
	Mem883[a0_869:byte] = SLICE(~(1<i32> << (d5_831 & 7<i32>)) & d1_748, byte, 0)
l00001842:
	d5_831 = d5_831 + 1<32>
	d0 = CONVERT(SLICE(d7, byte, 0), byte, uint32)
	branch d0 - d5_831 >=u 0<32> l00001802
l0000184C:
	branch Mem902[a3_1884:byte] != 0x5D<8> l000017DC
l00001852:
	word32 a6_1124
	a3_1884 = a3_1884 + 1<i32>
	branch bLoc2F_3808 != 0<8> l00001872
l00001872:
	a6_1124 = 0<32>
l0000185E:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	d2_1050 = d0 + 4<32>
	a6_1124 = Mem915[d0:word32]
l00001874:
	word32 dwLoc4C_3866
	Mem947[dwArg04 + 24<i32>:word32] = Mem915[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v429_949 = Mem947[dwArg04 + 20<i32>:word32] - 1<32>
	Mem950[dwArg04 + 20<i32>:word32] = v429_949
	branch v429_949 < 0<32> l000018A6
l000018A6:
	word32 a5_5635
	d0 = fn00002604(dwArg04, out a5_5635)
	dwLoc4C_3866 = d0
l00001886:
	word32 a0_971 = Mem950[dwArg04 + 4<i32>:word32]
	Mem976[dwArg04 + 4<i32>:word32] = a0_971 + 1<i32>
	byte v431_980 = Mem976[a0_971:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v431_980)
	dwLoc4C_3866 = CONVERT(v431_980, byte, uint32)
	d1 = d1_748
l000018B4:
	d5_1007 = dwLoc4C_3866
	word32 d3_1020 = d3_1781 + 1<32>
	word32 d4_1033 = d4_126 + 1<32>
	branch dwLoc4C_3866 == 0xFFFFFFFF<32> l00001982
l000018C8:
	d1 = CONVERT(Mem1047[fp + -42<i32> + fn0000254C(d2_1050, dwLoc4C_3866, 0x00000008<p32>):byte], byte, uint32)
	d0 = 1<i32> << (dwLoc4C_3866 & 7<i32>) & d1
	branch d0 == 0<32> l00001982
l000018F8:
	branch d6_1093 - d3_1020 <u 0<32> l00001982
l000018FE:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2F_3808)
l00001902:
	branch bLoc2F_3808 != 0<8> l00001908
l00001906:
	Mem1125[a6_1124:byte] = SLICE(d5_1007, byte, 0)
	a6_1124 = a6_1124 + 1<i32>
l00001908:
	Mem1134[dwArg04 + 24<i32>:word32] = Mem1131[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v447_1136 = Mem1134[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1137[dwArg04 + 20<i32>:word32] = v447_1136
	branch v447_1136 < 0<32> l00001932
l00001932:
	word32 a5_5636
	d0 = fn00002604(dwArg04, out a5_5636)
	d1 = d0
l0000191A:
	word32 a0_1159 = Mem1137[dwArg04 + 4<i32>:word32]
	Mem1164[dwArg04 + 4<i32>:word32] = a0_1159 + 1<i32>
	byte v449_1168 = Mem1164[a0_1159:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v449_1168)
	d1 = CONVERT(v449_1168, byte, uint32)
l0000193E:
	d5_1007 = d1
	d3_1020 = d3_1020 + 1<32>
	d4_1033 = d4_1033 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l0000197E
l0000194C:
	d1 = CONVERT(Mem1202[fp + -42<i32> + fn0000254C(d2_1050, d1, 0x00000008<p32>):byte], byte, uint32)
	d0 = 1<i32> << (d1 & 7<i32>) & d1
	branch d0 == 0<32> l0000197E
l0000197A:
	branch d6_1093 - d3_1020 >=u 0<32> l00001902
l0000197E:
l00001982:
	branch d5_1007 == 0xFFFFFFFF<32> l00001994
l0000198A:
	d0 = fn00001438(SLICE(d5_1007, byte, 0), dwArg04)
l00001994:
	d3_124 = d3_1020 - 1<32>
	d4_126 = d4_1033 - 1<32>
	branch bLoc2F_3808 != 0<8> l00002362
l000019A0:
	branch d3_124 == 0<32> l00002362
l000019A6:
	Mem1300[a6_1124:byte] = 0<8>
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l0000165C:
	word32 d1_1307 = SEQ(v124_587, v76_482 - 0x63<8>)
	branch v76_482 == 0x63<8> l00001672
l00001672:
	branch d6_1093 != 0xFFFFFFFF<32> l0000167C
l0000167A:
	d6_1093 = 1<i32>
l0000167C:
	word32 a1_1321
	branch bLoc2F_3808 != 0<8> l00001696
l00001696:
	a1_1321 = 0<32>
l00001682:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	d2_1050 = d0 + 4<32>
	a1_1321 = Mem608[d0:word32]
l00001698:
	word32 dwLoc44_3927
	Mem1337[dwArg04 + 24<i32>:word32] = Mem608[dwArg04 + 24<i32>:word32] | 1<32>
	Mem1340[dwArg04 + 20<i32>:word32] = Mem1337[dwArg04 + 20<i32>:word32] - 1<32>
	branch Mem1344[dwArg04 + 20<i32>:word32] < 0<32> l000016D0
l000016D0:
	word32 a5_5630
	d0 = fn00002604(dwArg04, out a5_5630)
	dwLoc44_3927 = d0
	d1 = d1_1359
l000016B0:
	word32 a0_1371 = Mem1344[dwArg04 + 4<i32>:word32]
	Mem1376[dwArg04 + 4<i32>:word32] = a0_1371 + 1<i32>
	byte v220_1380 = Mem1376[a0_1371:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v220_1380)
	dwLoc44_3927 = CONVERT(v220_1380, byte, uint32)
	d1 = d1_1307
l000016EE:
	d5_1007 = dwLoc44_3927
	word32 d3_1405 = d3_1781 + 1<32>
	word32 d4_1409 = d4_126 + 1<32>
	branch dwLoc44_3927 == 0xFFFFFFFF<32> l00001766
l00001704:
	branch d6_1093 - d3_1405 <u 0<32> l00001766
l0000170C:
	d7 = SEQ(v77_488, bLoc2F_3808)
	word32 a4_1428 = a1_1321
l00001714:
	branch bLoc2F_3808 != 0<8> l0000171A
l00001718:
	Mem1437[a4_1428:byte] = SLICE(d5_1007, byte, 0)
	a4_1428 = a4_1428 + 1<i32>
l0000171A:
	Mem1446[dwArg04 + 24<i32>:word32] = Mem1443[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v239_1448 = Mem1446[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1449[dwArg04 + 20<i32>:word32] = v239_1448
	branch v239_1448 < 0<32> l00001744
l00001744:
	word32 a5_5631
	d0 = fn00002604(dwArg04, out a5_5631)
	d1 = d0
l0000172C:
	word32 a0_1471 = Mem1449[dwArg04 + 4<i32>:word32]
	Mem1476[dwArg04 + 4<i32>:word32] = a0_1471 + 1<i32>
	byte v241_1480 = Mem1476[a0_1471:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v241_1480)
	d1 = CONVERT(v241_1480, byte, uint32)
l00001750:
	d5_1007 = d1
	d3_1405 = d3_1405 + 1<32>
	d4_1409 = d4_1409 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00001762
l0000175E:
	branch d6_1093 - d3_1405 >=u 0<32> l00001714
l00001762:
l00001766:
	branch d5_1007 == 0xFFFFFFFF<32> l00001778
l0000176E:
	d0 = fn00001438(SLICE(d5_1007, byte, 0), dwArg04)
l00001778:
	d3_124 = d3_1405 - 1<32>
	d4_126 = d4_1409 - 1<32>
	branch bLoc2F_3808 != 0<8> l00002362
l00001784:
	branch d3_124 == 0<32> l00002362
l0000178A:
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00001660:
	d1 = SEQ(v124_587, v76_482 - 0x6E<8>)
	branch v76_482 == 0x6E<8> l00001B04
l00001B04:
	branch bLoc2F_3808 != 0<8> l00001B9C
l00001B0C:
	branch bLoc30_3807 != 1<8> l00001B2E
l00001B2E:
	branch bLoc30_3807 != 0x6C<8> l00001B4C
l00001B4C:
	branch bLoc30_3807 != 0x68<8> l00001B6A
l00001B6A:
	branch bLoc30_3807 != 2<8> l00001B88
l00001B88:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1594[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l00001B72:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1606[Mem608[d0:word32]:byte] = SLICE(d4_126, byte, 0)
	d2_1050 = d0 + 4<32>
l00001B54:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1618[Mem608[d0:word32]:word16] = SLICE(d4_126, word16, 0)
	d2_1050 = d0 + 4<32>
l00001B36:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem1629[Mem608[d0:word32]:word32] = d4_126
	d2_1050 = d0 + 4<32>
l00001B14:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	word32 a0_1639 = Mem608[d0:word32]
	Mem1640[a0_1639 + 4<i32>:word32] = d4_126
	Mem1641[a0_1639:word32] = 0<32>
	d2_1050 = d0 + 4<32>
l00001B9C:
	d3_124 = 1<i32>
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00001668:
	d1 = SEQ(v124_587, v76_482 - 0x73<8>)
	branch v76_482 == 0x73<8> l000019B0
l000019B0:
	word32 a5_1661
	branch bLoc2F_3808 != 0<8> l000019CA
l000019CA:
	a5_1661 = 0<32>
l000019B6:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	d2_1050 = d0 + 4<32>
	a5_1661 = Mem608[d0:word32]
l000019CC:
	branch d5_1007 == 0xFFFFFFFF<32> l00001A68
l000019D6:
	word32 d0_1699 = CONVERT(Mem608[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_1699 & 8<32>
	branch (d0_1699 & 8<32>) != 0<32> l00001A68
l000019F2:
	branch d6_1093 - d3_1781 <u 0<32> l00001A68
l000019F6:
	d7 = SEQ(v77_488, bLoc2F_3808)
l000019FA:
	branch bLoc2F_3808 != 0<8> l00001A00
l000019FE:
	Mem1724[a5_1661:byte] = SLICE(d5_1007, byte, 0)
	a5_1661 = a5_1661 + 1<i32>
l00001A00:
	Mem1733[dwArg04 + 24<i32>:word32] = Mem1730[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v159_1735 = Mem1733[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1736[dwArg04 + 20<i32>:word32] = v159_1735
	branch v159_1735 < 0<32> l00001A2A
l00001A2A:
	d0 = fn00002604(dwArg04, out a5_1661)
	d1 = d0
l00001A12:
	word32 a0_1758 = Mem1736[dwArg04 + 4<i32>:word32]
	Mem1763[dwArg04 + 4<i32>:word32] = a0_1758 + 1<i32>
	byte v161_1767 = Mem1763[a0_1758:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v161_1767)
	d1 = CONVERT(v161_1767, byte, uint32)
l00001A36:
	d5_1007 = d1
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
	branch d1 == 0xFFFFFFFF<32> l00001A64
l00001A44:
	word32 d0_1802 = CONVERT(Mem1799[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_1802 & 8<32>
	branch (d0_1802 & 8<32>) != 0<32> l00001A64
l00001A60:
	branch d6_1093 - d3_1781 >=u 0<32> l000019FA
l00001A64:
l00001A68:
	branch d5_1007 == 0xFFFFFFFF<32> l00001A7A
l00001A70:
	d0 = fn00001438(SLICE(d5_1007, byte, 0), dwArg04)
l00001A7A:
	d3_124 = d3_1781 - 1<32>
	d4_126 = d4_126 - 1<32>
	branch bLoc2F_3808 != 0<8> l00002362
l00001A86:
	branch d3_124 == 0<32> l00002362
l00001A8C:
	Mem1872[a5_1661:byte] = 0<8>
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l0000166E:
l00001BA6:
	word32 dwLoc48_3978 = 0<32>
	word32 dwLoc4C_3979 = 0<32>
	word32 dwLoc0A_3980 = 0<32>
	branch v76_482 != 0<8> l00001BB8
l00001BB6:
	a3_1884 = a3_1884 - 1<i32>
l00001BB8:
	branch v76_482 != 0x70<8> l00001BC6
l00001BBE:
	bLoc30_3807 = 0x6C<8>
	d7 = 120<i32>
l00001BC6:
	branch d5_1007 != 0x2D<32> l00001BD4
l00001BCE:
	branch SLICE(d7, byte, 0) != 0x75<8> l00001BDC
l00001BD4:
	branch d5_1007 != 0x2B<32> l00001C2C
l00001BDC:
	branch d6_1093 - d3_1781 <u 0<32> l00001C2C
l00001BE0:
	word32 dwLoc44_3984
	Mem1928[dwArg04 + 24<i32>:word32] = Mem1921[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v182_1930 = Mem1928[dwArg04 + 20<i32>:word32] - 1<32>
	Mem1931[dwArg04 + 20<i32>:word32] = v182_1930
	dwLoc0A_3980 = d5_1007
	branch v182_1930 < 0<32> l00001C16
l00001C16:
	word32 a5_5627
	d0 = fn00002604(dwArg04, out a5_5627)
	dwLoc44_3984 = d0
l00001BF6:
	word32 a0_1951 = Mem1931[dwArg04 + 4<i32>:word32]
	Mem1956[dwArg04 + 4<i32>:word32] = a0_1951 + 1<i32>
	byte v184_1960 = Mem1956[a0_1951:byte]
	d0 = SEQ(SLICE(d0, word24, 8), v184_1960)
	dwLoc44_3984 = CONVERT(v184_1960, byte, uint32)
l00001C24:
	d5_1007 = dwLoc44_3984
	d3_1781 = d3_1781 + 1<32>
	d4_126 = d4_126 + 1<32>
l00001C2C:
	branch SLICE(d7, byte, 0) != 0x69<8> l00001D9E
l00001C34:
	branch d5_1007 != 0x30<32> l00001D60
l00001C3E:
	branch d6_1093 - d3_1781 <u 0<32> l00001D60
l00001D60:
	word32 d0_2030 = CONVERT(Mem2023[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2030 & 4<32>
	branch (d0_2030 & 4<32>) != 0<32> l00001D9E
l00001D7C:
	word32 d0_2045 = CONVERT(Mem2023[0x00002BED<p32> + (CONVERT(SLICE(d5_1007, byte, 0), byte, uint32) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2045 & 0x44<32>
	branch (d0_2045 & 0x44<32>) == 0<32> l00001D9E
l00001D98:
	branch d6_1093 - d3_1781 <u 0<32> l00001D9E
l00001D9C:
	d7 = 120<i32>
l00001C44:
	word32 dwLoc44_3990
	word32 d0_2075
	Mem2062[dwArg04 + 24<i32>:word32] = Mem2023[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v194_2064 = Mem2062[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2065[dwArg04 + 20<i32>:word32] = v194_2064
	branch v194_2064 < 0<32> l00001C76
l00001C76:
	word32 a5_5628
	d0_2075 = fn00002604(dwArg04, out a5_5628)
	dwLoc44_3990 = d0_2075
l00001C56:
	word32 a0_2086 = Mem2065[dwArg04 + 4<i32>:word32]
	Mem2091[dwArg04 + 4<i32>:word32] = a0_2086 + 1<i32>
	byte v196_2095 = Mem2091[a0_2086:byte]
	d0_2075 = SEQ(SLICE(d0, word24, 8), v196_2095)
	dwLoc44_3990 = CONVERT(v196_2095, byte, uint32)
l00001C84:
	byte bLoc41_3996 = SLICE(dwLoc44_3990, byte, 0)
	word32 d0_2124 = SEQ(SLICE(d0_2075, word24, 8), bLoc41_3996)
	word32 d3_2116 = d3_1781 + 1<32>
	d0 = d0_2124 & 0xFF<32>
	branch __btst(Mem2114[0x00002BED<p32> + CONVERT(SLICE(d0_2124, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l00001CAA
l00001CA6:
	d0 = CONVERT(bLoc41_3996 | 0x20<8>, byte, uint32)
l00001CAA:
	branch d0 != 0x78<32> l00001D42
l00001CB4:
	branch d6_1093 - d3_2116 <u 0<32> l00001D42
l00001D42:
	d7 = 111<i32>
l00001CBA:
	word32 dwLoc44_3998
	word32 d0_2167
	Mem2154[dwArg04 + 24<i32>:word32] = Mem2114[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v210_2156 = Mem2154[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2157[dwArg04 + 20<i32>:word32] = v210_2156
	branch v210_2156 < 0<32> l00001CEC
l00001CEC:
	word32 a5_5629
	d0_2167 = fn00002604(dwArg04, out a5_5629)
	dwLoc44_3998 = d0_2167
l00001CCC:
	word32 a0_2178 = Mem2157[dwArg04 + 4<i32>:word32]
	Mem2183[dwArg04 + 4<i32>:word32] = a0_2178 + 1<i32>
	byte v212_2187 = Mem2183[a0_2178:byte]
	d0_2167 = SEQ(SLICE(d0, word24, 8), v212_2187)
	dwLoc44_3998 = CONVERT(v212_2187, byte, uint32)
l00001CFA:
	word32 d0_2226 = CONVERT(Mem2206[0x00002BED<p32> + (SEQ(SLICE(d0_2167, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2226 & 0x44<32>
	branch (d0_2226 & 0x44<32>) == 0<32> l00001D26
l00001D20:
	branch d6_1093 - (d3_2116 + 1<32>) <u 0<32> l00001D26
l00001D24:
	d7 = 120<i32>
l00001D26:
	branch dwLoc44_3998 == 0xFFFFFFFF<32> l00001D3C
l00001D30:
	d0 = fn00001438(SLICE(dwLoc44_3998, byte, 0), dwArg04)
l00001D3C:
l00001D44:
	branch dwLoc44_3990 == 0xFFFFFFFF<32> l00001D5A
l00001D4E:
	d0 = fn00001438(SLICE(dwLoc44_3990, byte, 0), dwArg04)
l00001D5A:
l00001D9E:
	word32 d4_2409 = d4_126
	word32 d3_2328 = d3_1781
	branch SLICE(d7, byte, 0) != 0x78<8> l00001ED2
l00001DA6:
	branch d5_1007 != 0x30<32> l00001ED2
l00001DB0:
	branch d6_1093 - d3_1781 <u 0<32> l00001ED2
l00001DB6:
	word32 dwLoc44_4018
	word32 d0_2354
	Mem2339[dwArg04 + 24<i32>:word32] = Mem2336[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v265_2341 = Mem2339[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2342[dwArg04 + 20<i32>:word32] = v265_2341
	branch v265_2341 < 0<32> l00001DE8
l00001DE8:
	word32 a5_5632
	d0_2354 = fn00002604(dwArg04, out a5_5632)
	dwLoc44_4018 = d0_2354
l00001DC8:
	word32 a0_2365 = Mem2342[dwArg04 + 4<i32>:word32]
	Mem2370[dwArg04 + 4<i32>:word32] = a0_2365 + 1<i32>
	byte v267_2374 = Mem2370[a0_2365:byte]
	d0_2354 = SEQ(SLICE(d0, word24, 8), v267_2374)
	dwLoc44_4018 = CONVERT(v267_2374, byte, uint32)
l00001DF6:
	byte bLoc41_4024 = SLICE(dwLoc44_4018, byte, 0)
	word32 d0_2416 = SEQ(SLICE(d0_2354, word24, 8), bLoc41_4024)
	word32 d3_2407 = d3_1781 + 1<32>
	word32 d4_2411 = d4_126 + 1<32>
	d0 = d0_2416 & 0xFF<32>
	branch __btst(Mem2405[0x00002BED<p32> + CONVERT(SLICE(d0_2416, int16, 0) & 255<i16>, int16, int32):byte], 0<16>) l00001E1C
l00001E18:
	d0 = CONVERT(bLoc41_4024 | 0x20<8>, byte, uint32)
l00001E1C:
	branch d0 != 0x78<32> l00001EB8
l00001E26:
	branch d6_1093 - d3_2407 <u 0<32> l00001EB8
l00001E2C:
	word32 dwLoc44_4026
	word32 d0_2457
	Mem2444[dwArg04 + 24<i32>:word32] = Mem2405[dwArg04 + 24<i32>:word32] | 1<32>
	word32 v280_2446 = Mem2444[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2447[dwArg04 + 20<i32>:word32] = v280_2446
	branch v280_2446 < 0<32> l00001E5E
l00001E5E:
	word32 a5_5633
	d0_2457 = fn00002604(dwArg04, out a5_5633)
	dwLoc44_4026 = d0_2457
l00001E3E:
	word32 a0_2468 = Mem2447[dwArg04 + 4<i32>:word32]
	Mem2473[dwArg04 + 4<i32>:word32] = a0_2468 + 1<i32>
	byte v282_2477 = Mem2473[a0_2468:byte]
	d0_2457 = SEQ(SLICE(d0, word24, 8), v282_2477)
	dwLoc44_4026 = CONVERT(v282_2477, byte, uint32)
l00001E6C:
	word32 d0_2513 = CONVERT(Mem2496[0x00002BED<p32> + (SEQ(SLICE(d0_2457, word24, 8), SLICE(dwLoc44_4026, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d3_2328 = d3_2407 + 1<32>
	d4_2409 = d4_2411 + 1<32>
	d0 = d0_2513 & 0x44<32>
	branch (d0_2513 & 0x44<32>) == 0<32> l00001E9E
l00001E94:
	branch d6_1093 - (d3_2407 + 1<32>) <u 0<32> l00001E9E
l00001E9E:
	branch dwLoc44_4026 == 0xFFFFFFFF<32> l00001EB4
l00001EA8:
	d0 = fn00001438(SLICE(dwLoc44_4026, byte, 0), dwArg04)
l00001EB4:
l00001EB8:
	branch dwLoc44_4018 == 0xFFFFFFFF<32> l00001ECE
l00001EC2:
	d0 = fn00001438(SLICE(dwLoc44_4018, byte, 0), dwArg04)
l00001ECE:
	d3_2328 = d3_2407 - 1<32>
	d4_2409 = d4_2411 - 1<32>
l00001E98:
	d5_1007 = dwLoc44_4026
l00001ED2:
	word32 dwLoc38_4048
	branch SLICE(d7, byte, 0) == 0x78<8> l00001EDE
l00001ED8:
	branch SLICE(d7, byte, 0) != 0x58<8> l00001EE8
l00001EE8:
	word32 dwLoc44_4045
	branch SLICE(d7, byte, 0) != 0x6F<8> l00001EF8
l00001EF8:
	dwLoc44_4045 = 0xA<32>
l00001EEE:
	dwLoc44_4045 = 8<32>
l00001F00:
	dwLoc38_4048 = dwLoc44_4045
l00001EDE:
	dwLoc38_4048 = 0x10<32>
l00001F06:
	word32 d0_2646 = CONVERT(Mem2617[0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2646 & 0x44<32>
	word32 dwLoc44_4053 = d4_2409
	byte bLoc2E_4054 = SLICE(d7, byte, 0)
	branch (d0_2646 & 0x44<32>) == 0<32> l0000216E
l00001F38:
	branch dwLoc38_4048 != 0xA<32> l00001F6E
l00001F42:
	word32 d0_2702 = CONVERT(Mem2685[0x00002BED<p32> + (CONVERT(SLICE(d5_1007, byte, 0), byte, uint32) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_2702 & 4<32>
	dwLoc44_4053 = d4_2409
	bLoc2E_4054 = SLICE(d7, byte, 0)
	branch (d0_2702 & 4<32>) == 0<32> l0000216E
l00001F6E:
	branch dwLoc38_4048 != 8<32> l00001F8E
l00001F78:
	dwLoc44_4053 = d4_2409
	bLoc2E_4054 = SLICE(d7, byte, 0)
	branch d5_1007 > 0x37<32> l0000216E
l00001F8E:
	dwLoc44_4053 = d4_2409
	bLoc2E_4054 = SLICE(d7, byte, 0)
	branch d6_1093 - d3_2328 <u 0<32> l0000216E
l00001FA4:
	d7 = dwLoc38_4048
l00001FAC:
	word32 d1_2792
	word32 d0_2791 = fn0000248C(d4_2409, dwLoc38_4048 >> 31<i32>, dwLoc38_4048, dwLoc4C_3979, dwLoc48_3978, out d1_2792)
	branch (CONVERT(Mem2803[0x00002BED<p32> + (SEQ(SLICE(dwLoc38_4048 >> 31<i32>, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32) & 4<32>) == 0<32> l0000200C
l0000200C:
	d4_2409 = 0<i32>
l00002002:
	d4_2409 = d5_1007 - 0x30<32>
l0000200E:
	word32 d6_2879
	word32 d0_2837 = d4_2409 >> 31<i32>
	word32 d2_2844 = d4_2409 + d1_2792
	word32 d2_2854 = d0_2791 + d0_2837 + CONVERT(d2_2844 <u 0<32>, bool, word32)
	branch (CONVERT(Mem2856[0x00002BED<p32> + (SEQ(SLICE(d0_2837, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32) & 1<32>) == 0<32> l0000205E
l0000205E:
	d6_2879 = 0<i32>
l00002054:
	d6_2879 = d5_1007 - 0x37<32>
l00002060:
	word32 d2_2933
	word32 d0_2892 = d6_2879 >> 31<i32>
	word32 d2_2899 = d6_2879 + d2_2844
	word32 d2_2908 = d2_2854 + d0_2892 + CONVERT(d2_2899 <u 0<32>, bool, word32)
	branch (CONVERT(Mem2910[0x00002BED<p32> + (SEQ(SLICE(d0_2892, word24, 8), SLICE(d5_1007, byte, 0)) & 0xFF<32>):byte], byte, uint32) & 2<32>) == 0<32> l000020B0
l000020B0:
	d2_2933 = 0<i32>
l000020A6:
	d2_2933 = d5_1007 - 0x57<32>
l000020B2:
	word32 d0_2988
	Mem2976[dwArg04 + 24<i32>:word32] = Mem2962[dwArg04 + 24<i32>:word32] | 1<i32>
	word32 v341_2978 = Mem2976[dwArg04 + 20<i32>:word32] - 1<32>
	Mem2979[dwArg04 + 20<i32>:word32] = v341_2978
	word32 d2_2952 = d2_2933 + d2_2899
	dwLoc48_3978 = d2_2952
	dwLoc4C_3979 = d2_2908 + (d2_2933 >> 31<i32>) + CONVERT(d2_2952 <u 0<32>, bool, word32)
	branch v341_2978 < 0<32> l00002104
l00002104:
	word32 a5_5634
	d0_2988 = fn00002604(dwArg04, out a5_5634)
	d1 = d0_2988
l000020EC:
	word32 a0_2999 = Mem2979[dwArg04 + 4<i32>:word32]
	Mem3004[dwArg04 + 4<i32>:word32] = a0_2999 + 1<i32>
	d0_2988 = CONVERT(Mem3004[a0_2999:byte], byte, uint32)
	d1 = CONVERT(SLICE(d0_2988, byte, 0), byte, uint32)
l00002110:
	word32 d0_3035 = CONVERT(Mem3023[0x00002BED<p32> + (SEQ(SLICE(d0_2988, word24, 8), SLICE(d1, byte, 0)) & 0xFF<32>):byte], byte, uint32)
	d5_1007 = d1
	d3_2328 = d3_5637 + 1<32>
	dwLoc44_4053 = dwLoc44_4053 + 1<32>
	d0 = d0_3035 & 0x44<32>
	branch (d0_3035 & 0x44<32>) == 0<32> l0000216E
l00002134:
	branch dwLoc38_4048 != 0xA<32> l00002158
l0000213C:
	word32 d0_3057 = CONVERT(Mem3023[0x00002BED<p32> + (CONVERT(SLICE(d1, byte, 0), byte, uint32) & 0xFF<32>):byte], byte, uint32)
	d0 = d0_3057 & 4<32>
	branch (d0_3057 & 4<32>) == 0<32> l0000216E
l00002158:
	branch dwLoc38_4048 != 8<32> l00002168
l00002160:
	branch d1 > 0x37<32> l0000216E
l00002168:
	d3_5637 = d3_2328
	branch d6_1093 - (d3_5637 + 1<32>) >=u 0<32> l00001FAC
l0000216E:
	d7 = SEQ(SLICE(d7, word24, 8), bLoc2E_4054)
	word32 d4_3094 = dwLoc44_4053
	branch dwLoc0A_3980 == 0<32> l000021A2
l00002180:
	branch d3_2328 != 2<32> l000021A2
l00002188:
	branch d5_1007 == 0xFFFFFFFF<32> l0000219A
l00002190:
	d0 = fn00001438(SLICE(d5_1007, byte, 0), dwArg04)
l0000219A:
	d3_2328 = d3_2328 - 1<32>
	d4_3094 = dwLoc44_4053 - 1<32>
	d5_1007 = dwLoc0A_3980
l000021A2:
	branch d5_1007 == 0xFFFFFFFF<32> l000021B4
l000021AA:
	d0 = fn00001438(SLICE(d5_1007, byte, 0), dwArg04)
l000021B4:
	d3_124 = d3_2328 - 1<32>
	d4_126 = d4_3094 - 1<32>
	branch bLoc2F_3808 != 0<8> l00002362
l000021C0:
	branch d3_124 == 0<32> l00002362
l000021C6:
	branch bLoc2E_4054 != 0x75<8> l00002288
l00002288:
	branch dwLoc0A_3980 != 0x2D<32> l000022A4
l000022A4:
	byte bLoc4C_4328 = bLoc30_3807 - 1<8>
	branch bLoc4C_4328 == 0<8> l000022DA
l000022DA:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	word32 a0_3231 = Mem3212[d0:word32]
	Mem3233[a0_3231 + 4<i32>:word32] = dwLoc48_3978
	Mem3235[a0_3231:word32] = dwLoc4C_3979
	d2_1050 = d0 + 4<32>
l000022C4:
	branch bLoc4C_4328 == 1<8> l0000232C
l0000232C:
	word32 d0_3244 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3252[Mem3238[d0_3244:word32]:byte] = SLICE(dwLoc48_3978, byte, 0)
	d2_1050 = d0_3244 + 4<32>
	d0 = dwLoc48_3978
l000022CA:
	branch bLoc4C_4328 == 0x67<8> l00002312
l00002312:
	word32 d0_3261 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3269[Mem3255[d0_3261:word32]:word16] = SLICE(dwLoc48_3978, word16, 0)
	d2_1050 = d0_3261 + 4<32>
	d0 = dwLoc48_3978
l000022D2:
	branch bLoc4C_4328 == 0x6B<8> l000022F8
l000022F8:
	word32 d0_3278 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3285[Mem3272[d0_3278:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3278 + 4<32>
	d0 = dwLoc48_3978
l000022D8:
l00002346:
	word32 d0_3290 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3297[Mem3272[d0_3290:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3290 + 4<32>
	d0 = dwLoc48_3978
l00002292:
l000021CE:
	byte bLoc44_4333 = bLoc30_3807 - 1<8>
	branch bLoc44_4333 == 0<8> l000021F8
l000021F8:
	d0 = __align(d2_1050 + 3<32>, 4<i32>)
	word32 a0_3335 = Mem3319[d0:word32]
	Mem3337[a0_3335 + 4<i32>:word32] = dwLoc48_3978
	Mem3339[a0_3335:word32] = dwLoc4C_3979
	d2_1050 = d0 + 4<32>
l000021E2:
	branch bLoc44_4333 == 1<8> l00002250
l00002250:
	word32 d0_3348 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3356[Mem3342[d0_3348:word32]:byte] = SLICE(dwLoc48_3978, byte, 0)
	d2_1050 = d0_3348 + 4<32>
	d0 = dwLoc48_3978
l000021E8:
	branch bLoc44_4333 == 0x67<8> l00002234
l00002234:
	word32 d0_3365 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3373[Mem3359[d0_3365:word32]:word16] = SLICE(dwLoc48_3978, word16, 0)
	d2_1050 = d0_3365 + 4<32>
	d0 = dwLoc48_3978
l000021F0:
	branch bLoc44_4333 == 0x6B<8> l00002218
l00002218:
	word32 d0_3382 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3389[Mem3376[d0_3382:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3382 + 4<32>
	d0 = dwLoc48_3978
l000021F6:
l0000226C:
	word32 d0_3394 = __align(d2_1050 + 3<32>, 4<i32>)
	Mem3401[Mem3376[d0_3394:word32]:word32] = dwLoc48_3978
	d2_1050 = d0_3394 + 4<32>
	d0 = dwLoc48_3978
l0000235E:
	dwLoc3C_3792 = dwLoc3C_3792 + 1<32>
l00002362:
	a4_261 = a3_1884
l00002460:
	branch d3_124 == 0<32> l0000246A
l00002464:
	branch Mem3487[a4_261:byte] != 0<8> l0000148A
l0000246A:
	branch d5_1007 != 0xFFFFFFFF<32> l0000247C
l00002472:
	branch dwLoc3C_3792 != 0<32> l0000247C
l0000247C:
l00002478:
l00002480:
	return
fn00001468_exit:


word32 fn0000248C(word32 d4, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  d4:[16..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn0000248C_entry:
l0000248C:
	word32 d0_23 = __swap(dwArg08)
	word32 d1_25 = __swap(dwArg10)
	word32 d4_29 = SEQ(SLICE(d4, word16, 16), SLICE(dwArg08, word16, 0)) *u32 SLICE(dwArg10, word16, 0)
	word32 d1_32 = d1_25 *u32 SLICE(d0_23, word16, 0)
	word32 d2_39 = dwArg08 *u32 SLICE(d1_25, word16, 0) + __swap(SEQ(SLICE(d4_29, word16, 16), SLICE(d4_29, word16, 0) ^ SLICE(d4_29, word16, 0))) + dwArg10 *u32 SLICE(d0_23, word16, 0)
	branch d2_39 >=u 0<32> l000024C0
l000024BA:
	d1_32 = d1_32 + 0x10000<32>
l000024C0:
	word32 d2_45 = __swap(d2_39)
	word32 d3_65 = __swap(dwArg0C) *u32 SLICE(dwArg08, word16, 0)
	word32 d3_71 = __swap(SEQ(SLICE(d3_65, word16, 16), SLICE(d3_65 + __swap(dwArg08) *u32 SLICE(dwArg0C, word16, 0), word16, 0)))
	word32 d3_83 = __swap(dwArg04) *u32 SLICE(dwArg10, word16, 0)
	word32 d3_89 = __swap(SEQ(SLICE(d3_83, word16, 16), SLICE(d3_83 + __swap(dwArg10) *u32 SLICE(dwArg04, word16, 0), word16, 0)))
	d1Out = SEQ(SLICE(d2_45, word16, 16), SLICE(d4_29, word16, 0))
	return CONVERT(SLICE(d2_45, word16, 0), word16, uint32) + d1_32 + (dwArg0C *u32 SLICE(dwArg08, word16, 0) + SEQ(SLICE(d3_71, word16, 16), SLICE(d3_71, word16, 0) ^ SLICE(d3_71, word16, 0))) + (dwArg04 *u32 SLICE(dwArg10, word16, 0) + SEQ(SLICE(d3_89, word16, 16), SLICE(d3_89, word16, 0) ^ SLICE(d3_89, word16, 0)))
fn0000248C_exit:


word32 fn0000254C(word32 d2, word32 dwArg04, word32 dwArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  d2:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: d0
// Trashed: CVZNX d0 d1
// Preserved: a7
fn0000254C_entry:
l0000254C:
	branch dwArg04 > 0<32> l0000256C
l0000256C:
	branch dwArg08 > 0<32> l0000256E_thunk_fn0000257E
l0000256E_thunk_fn0000257E:
	word32 d1_90
	return fn0000257E(dwArg04, dwArg08, d2, out d1_90)
l00002570:
	word32 d1_91
	return -fn0000257E(dwArg04, -dwArg08, d2, out d1_91)
l00002556:
	word32 d0_36 = -dwArg04
	branch dwArg08 > 0<32> l00002564
l00002564:
	word32 d1_88
	return -fn0000257E(d0_36, dwArg08, d2, out d1_88)
l0000255C:
	word32 d1_89
	return fn0000257E(d0_36, -dwArg08, d2, out d1_89)
fn0000254C_exit:


word32 fn0000257E(word32 d0, word32 d1, word32 d2, ptr32 & d1Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000254C
//      fn00003B28
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1
// Trashed: CVZNX d0 d1
// Preserved: a7 d2 d3
fn0000257E_entry:
l0000257E:
	word32 d1_20 = __swap(d1)
	word16 v9_8 = SLICE(d1_20, word16, 0)
	word16 v10_9 = SLICE(d2, word16, 16)
	word32 d2_10 = SEQ(v10_9, v9_8)
	branch v9_8 != 0<16> l000025A4
l000025A4:
	word32 d3_16 = 16<i32>
	branch SLICE(d1_20, word16, 0) >=u 0x80<16> l000025B2
l000025AE:
	d1_20 = __rol(d1_20, 8<32>)
	d3_16 = 8<32>
l000025B2:
	branch SLICE(d1_20, word16, 0) >=u 0x800<16> l000025BC
l000025B8:
	d1_20 = __rol(d1_20, 4<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 4<16>)
l000025BC:
	branch SLICE(d1_20, word16, 0) >=u 0x2000<16> l000025C6
l000025C2:
	d1_20 = __rol(d1_20, 2<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 2<16>)
l000025C6:
	branch SLICE(d1_20, word16, 0) < 0<16> l000025CE
l000025CA:
	d1_20 = __rol(d1_20, 1<32>)
	d3_16 = SEQ(SLICE(d3_16, word16, 16), SLICE(d3_16, word16, 0) - 1<16>)
l000025CE:
	word32 d0_69 = d0 >>u d3_16
	word32 d2_73 = SEQ(SLICE(__swap(SEQ(v10_9, SLICE(d0, word16, 0))), word16, 16), 0<16>) >>u d3_16
	word16 v51_80 = SLICE(__swap(d3_16), word16, 16)
	uint16 v49_77 = d0_69 /u SLICE(d1_20, uint16, 0)
	word32 d1_88 = __swap(d1_20)
	word32 d3_100 = SEQ(v51_80, v49_77)
	word32 d0_106 = SEQ(d0_69 % SLICE(d1_20, uint16, 0), SLICE(d2_73, word16, 0)) - SEQ(SLICE(d2_73, word16, 16), v49_77) *u32 SLICE(d1_88, word16, 0)
	branch d0_106 >=u 0<32> l000025F0
l000025EA:
	d3_100 = SEQ(v51_80, v49_77 - 1<16>)
	d0_106 = d0_106 + d1_88
l000025EE:
	branch d0_106 >=u 0<32> l000025EE
l000025F0:
	d1Out = __swap(__rol(d0_106, __swap(d3_100)))
	return CONVERT(SLICE(d3_100, word16, 0), word16, uint32)
l00002586:
	word32 d0_132 = __swap(d0)
	word32 d1_133 = __swap(d1_20)
	word16 v13_135 = SLICE(d0_132, word16, 0)
	word32 d2_137 = SEQ(SLICE(__swap(d2_10), word16, 16), v13_135)
	branch v13_135 == 0<16> l00002594
l00002590:
	uint16 v16_141 = d2_137 /u SLICE(d1_133, uint16, 0)
	d2_137 = SEQ(d2_137 % SLICE(d1_133, uint16, 0), v16_141)
	d0_132 = SEQ(SLICE(d0_132, word16, 16), v16_141)
l00002594:
	word32 d0_148 = __swap(d0_132)
	word32 d2_152 = SEQ(SLICE(d2_137, word16, 16), SLICE(d0_148, word16, 0))
	uint16 v32_155 = d2_152 /u SLICE(d1_133, uint16, 0)
	d1Out = SEQ(SLICE(d1_133, word16, 16), SLICE(__swap(SEQ(d2_152 % SLICE(d1_133, uint16, 0), v32_155)), word16, 0))
	return SEQ(SLICE(d0_148, word16, 16), v32_155)
fn0000257E_exit:


word32 fn00002604(word32 dwArg04, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001468
// MayUse:  Stack +0004:[0..31]
// LiveOut: a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5
fn00002604_entry:
l00002604:
	word32 d0_153
	word32 a5_271 = fn00002BBC()
	branch dwArg04 != 0<32> l0000261C
l0000261C:
	branch (Mem26[dwArg04 + 24<i32>:word32] & 42<i32>) == 32<i32> l0000262E
l0000262E:
	Mem49[dwArg04 + 24<i32>:word32] = Mem26[dwArg04 + 24<i32>:word32] | 1<i32>
	branch (Mem49[dwArg04 + 24<i32>:word32] & 0x200<32>) == 0<32> l00002646
l00002640:
	a5_271 = fn00002AEC()
l00002646:
	branch Mem49[dwArg04 + 28<i32>:word32] != 0<32> l00002664
l0000264C:
	branch (Mem49[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l0000265C
l0000265C:
	Mem78[dwArg04 + 28<i32>:word32] = 0x400<32>
l00002654:
	Mem81[dwArg04 + 28<i32>:word32] = 1<i32>
l00002664:
	branch Mem84[dwArg04 + 8<i32>:word32] != 0<32> l000026A0
l0000266A:
	word32 d4_100
	branch (Mem84[dwArg04 + 24<i32>:word32] & 0x80<32>) == 0<32> l0000267E
l0000267E:
	d4_100 = 1<i32>
l0000267A:
	d4_100 = 2<i32>
l00002680:
	word32 a0_308
	word32 d0_114 = fn00002718(d4_100 + Mem84[dwArg04 + 28<i32>:word32], out a0_308)
	branch d0_114 != 0<32> l00002698
l00002698:
	Mem127[dwArg04 + 8<i32>:word32] = d0_114 + 1<i32>
l000026A0:
	Mem133[dwArg04 + 4<i32>:word32] = Mem131[dwArg04 + 8<i32>:word32]
	word32 d0_138 = execPrivate2()
	Mem140[dwArg04 + 20<i32>:word32] = d0_138
	word32 v23_141 = Mem140[dwArg04 + 20<i32>:word32] - 1<32>
	Mem142[dwArg04 + 20<i32>:word32] = v23_141
	branch v23_141 >= 0<32> l000026E6
l000026E6:
	word32 a0_146 = Mem142[dwArg04 + 4<i32>:word32]
	Mem149[dwArg04 + 4<i32>:word32] = a0_146 + 1<i32>
	d0_153 = SEQ(SLICE(d0_138, word24, 8), Mem149[a0_146:byte]) & 0xFF<32>
l000026C4:
	branch Mem142[dwArg04 + 20<i32>:word32] != -1<i32> l000026D6
l000026D6:
	Mem164[dwArg04 + 24<i32>:word32] = Mem142[dwArg04 + 24<i32>:word32] | 16<i32>
l000026CC:
	Mem171[dwArg04 + 24<i32>:word32] = Mem142[dwArg04 + 24<i32>:word32] | 8<i32>
l000026DE:
	Mem176[dwArg04 + 20<i32>:word32] = 0<32>
	d0_153 = -1<i32>
l00002694:
	d0_153 = -1<i32>
l00002628:
	d0_153 = -1<i32>
l00002616:
	d0_153 = -1<i32>
l000026FA:
	a5Out = a5_271
	return d0_153
fn00002604_exit:


word32 fn00002718(word32 dwArg04, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
//      fn00003910
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 d0
// Trashed: CVZN a0 a1 d0 d1
// Preserved: X a7 d2
fn00002718_entry:
l00002718:
	word32 d0_100
	branch dwArg04 != 0<32> l00002726
l00002726:
	branch Mem5[0x00003DC8<p32>:word32] != 0<32> l0000274A
l0000272E:
	word32 a0_13 = Mem5[0x00003DC4<p32>:word32]
	Mem19[0<32>:word32] = 0<32>
	Mem33[0x00003DC8<p32>:word32] = fn00002A0C(dwLoc10, a0_13, a0_13, out a0)
l0000274A:
	branch Mem36[0x00003DC8<p32>:word32] != 0<32> l00002756
l00002756:
	word32 d0_53 = fn000028E8(Mem47[0x00003DC8<p32>:word32], dwArg04 + 4<i32>, out a0)
	branch d0_53 != 0<32> l00002774
l00002774:
	Mem66[d0_53:word32] = dwArg04
	a0 = d0_53 + 4<i32>
	d0_100 = d0_53 + 4<i32>
l00002770:
	d0_100 = 0<i32>
l00002752:
	d0_100 = 0<i32>
l00002722:
	d0_100 = 0<i32>
l0000277C:
	a0Out = a0
	return d0_100
fn00002718_exit:


void fn00002784(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002784_entry:
l00002784:
	branch dwArg04 == 0<32> l000027AE
l0000278E:
	branch Mem0[0x00003DC8<p32>:word32] == 0<32> l000027AE
l00002796:
	fn0000284C(Mem21[0x00003DC8<p32>:word32], dwArg04 - 4<i32>, Mem0[dwArg04 - 4<i32>:word32] + 4<i32>)
l000027AE:
	return
fn00002784_exit:


void fn0000284C(word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002784
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2
fn0000284C_entry:
l0000284C:
	branch Mem20[Mem20[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x27<16> l0000287C
l0000287C:
	branch dwArg04 == 0<32> l000028E0
l00002880:
	branch dwArg08 == 0<32> l000028E0
l00002884:
	word32 a3_36 = dwArg08 + -12<i32>
	branch dwArg0C - Mem20[dwArg04 + 20<i32>:word32] >=u 0<32> l000028C6
l00002890:
	word32 a2_40 = dwArg04
l00002892:
	a2_40 = Mem20[a2_40:word32]
	branch Mem20[a2_40:word32] == 0<32> l000028E0
l00002898:
	branch Mem20[a2_40 + 8<i32>:byte] == 0<8> l00002892
l0000289E:
	branch dwArg08 - Mem20[a2_40 + 20<i32>:word32] <u 0<32> l00002892
l000028A4:
	branch dwArg08 - Mem20[a2_40 + 24<i32>:word32] >=u 0<32> l00002892
l000028AA:
	Deallocate(a2_40, dwArg08, dwArg0C)
	branch Mem20[a2_40 + 28<i32>:word32] - Mem20[dwArg04 + 16<i32>:word32] != 0<32> l000028E0
l000028C4:
	a3_36 = a2_40
l000028C6:
	Remove(a3_36)
	word32 a3_76 = a3_36 - 4<i32>
	FreeMem(a3_76, Mem20[a3_76:word32])
l0000286A:
	FreePooled(dwArg08, dwArg04)
l000028E0:
	return
fn0000284C_exit:


word32 fn000028E8(word32 dwArg04, word32 dwArg08, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4
fn000028E8_entry:
l000028E8:
	word32 d0_154
	word32 a0_111 = Mem26[0x00003D94<p32>:word32]
	branch Mem26[a0_111 + 20<i32>:word16] <u 0x27<16> l00002914
l00002914:
	word32 a3_116 = 0<32>
	branch dwArg04 == 0<32> l00002A04
l0000291C:
	branch dwArg08 == 0<32> l00002A04
l00002922:
	branch dwArg08 - Mem26[dwArg04 + 20<i32>:word32] >=u 0<32> l000029D6
l000029D6:
	word32 d0_50 = AllocMem(dwArg08 + 16<i32>, Mem26[dwArg04 + 12<i32>:word32])
	a3_116 = d0_50
	branch d0_50 == 0<32> l00002A04
l000029F0:
	Mem55[d0_50:word32] = dwArg08 + 16<i32>
	AddTail(dwArg04, d0_50 + 4<i32>)
	Mem62[d0_50 + 12<i32>:word32] = 0<32>
	a0_111 = dwArg04
	a3_116 = d0_50 + 16<i32>
l0000292A:
	word32 a5_158 = Mem26[dwArg04:word32]
l0000292C:
	branch Mem26[a5_158:word32] == 0<32> l0000294E
l0000294E:
	word32 d3_77 = Mem26[dwArg04 + 16<i32>:word32] + 40<i32>
	word32 d0_82 = AllocMem(d3_77, Mem26[dwArg04 + 12<i32>:word32])
	a3_116 = d0_82
	branch d0_82 == 0<32> l00002A04
l0000296C:
	Mem87[d0_82:word32] = d3_77
	Mem89[d0_82 + 12<i32>:byte] = 0xA<8>
	Mem92[d0_82 + 20<i32>:word32] = d0_82 + 40<i32>
	Mem93[d0_82 + 24<i32>:word32] = d0_82 + 40<i32>
	Mem95[Mem93[d0_82 + 20<i32>:word32]:word32] = 0<32>
	word32 a2_96 = Mem95[d0_82 + 20<i32>:word32]
	Mem99[a2_96 + 4<i32>:word32] = Mem95[dwArg04 + 16<i32>:word32]
	Mem102[d0_82 + 32<i32>:word32] = Mem99[a2_96 + 4<i32>:word32]
	Mem105[d0_82 + 28<i32>:word32] = Mem102[d0_82 + 32<i32>:word32] + Mem102[d0_82 + 20<i32>:word32]
	AddHead(dwArg04, d0_82 + 4<i32>)
	a0_111 = d0_82 + 4<i32>
	a3_116 = Allocate(d0_82 + 4<i32>, dwArg08)
l00002930:
	branch Mem26[a5_158 + 8<i32>:byte] == 0<8> l0000294A
l00002936:
	word32 d0_124 = Allocate(a5_158, dwArg08)
	a0_111 = a5_158
	a3_116 = d0_124
	branch d0_124 != 0<32> l000029BA
l000029BA:
	branch (Mem131[dwArg04 + 12<i32>:word32] & 0x10000<32>) == 0<32> l00002A04
l000029C6:
	word32 a2_138 = a3_116
	word32 d2_141 = dwArg08 + 7<32> >>u 3<32>
l000029CC:
	Mem144[a2_138:word32] = 0<32>
	word32 a2_145 = a2_138 + 4<i32>
	Mem146[a2_145:word32] = 0<32>
	a2_138 = a2_145 + 4<i32>
	d2_141 = d2_141 - 1<32>
	branch d2_141 != 0<32> l000029CC
l000029D4:
l00002A04:
	d0_154 = a3_116
l0000294A:
	a5_158 = Mem26[a5_158:word32]
l00002902:
	a0_111 = dwArg04
	d0_154 = AllocPooled(dwArg08, dwArg04)
l00002A06:
	a0Out = a0_111
	return d0_154
fn000028E8_exit:


word32 fn00002A0C(word32 dwArg04, word32 dwArg08, word32 dwArg0C, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002718
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: a0 d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a6 a7 d2 d3
fn00002A0C_entry:
l00002A0C:
	word32 d0_47
	word32 a0_17 = Mem14[0x00003D94<p32>:word32]
	branch Mem14[a0_17 + 20<i32>:word16] <u 0x27<16> l00002A3A
l00002A3A:
	word32 a1_21 = 0<32>
	branch dwArg08 - dwArg0C <u 0<32> l00002A74
l00002A40:
	word32 d0_30 = AllocMem(24<i32>, 0<i32>)
	a1_21 = d0_30
	branch d0_30 == 0<32> l00002A74
l00002A56:
	Mem36[d0_30:word32] = d0_30 + 4<i32>
	Mem37[d0_30 + 4<i32>:word32] = 0<32>
	Mem38[d0_30 + 8<i32>:word32] = d0_30
	Mem40[d0_30 + 12<i32>:word32] = dwArg04
	Mem43[d0_30 + 16<i32>:word32] = dwArg08 + 7<32> & -8<i32>
	Mem44[d0_30 + 20<i32>:word32] = dwArg0C
	a0_17 = d0_30 + 4<i32>
l00002A74:
	d0_47 = a1_21
l00002A26:
	d0_47 = CreatePrivatePool(dwArg04, dwArg08, dwArg0C)
l00002A76:
	a0Out = a0_17
	return d0_47
fn00002A0C_exit:


void fn00002A7C(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 d0 d1
// Preserved: a2 a6 a7 d2
fn00002A7C_entry:
l00002A7C:
	branch Mem11[Mem11[0x00003D94<p32>:word32] + 20<i32>:word16] <u 0x27<16> l00002AA0
l00002AA0:
	branch dwArg04 == 0<32> l00002AE4
l00002AA4:
	word32 d0_23 = RemHead(dwArg04)
	word32 a2_24 = d0_23
	branch d0_23 == 0<32> l00002AD6
l00002AB6:
	word32 a2_29 = a2_24 - 4<i32>
	FreeMem(a2_29, Mem11[a2_29:word32])
	word32 d0_38 = RemHead(dwArg04)
	a2_24 = d0_38
	branch d0_38 != 0<32> l00002AB6
l00002AD6:
	FreeMem(dwArg04, 24<i32>)
l00002A92:
	DeletePrivatePool(dwArg04)
l00002AE4:
	return
fn00002A7C_exit:


word32 fn00002AEC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002AEC_entry:
l00002AEC:
	word32 a2_11 = Mem5[0x00003EEC<p32>:word32]
	branch a2_11 == 0<32> l00002B24
l00002AFA:
	branch (Mem12[a2_11 + 24<i32>:word32] & 0x202<32>) != 0x202<32> l00002B1A
l00002B0C:
	branch Mem12[a2_11:word32] == 0<32> l00002B1A
l00002B10:
	word32 a0_88
	fn00002B28(a2_11, out a0_88, out a5)
l00002B1A:
	a2_11 = Mem39[a2_11 + 12<i32>:word32]
	branch a2_11 != 0<32> l00002AFA
l00002B24:
	return a5
fn00002AEC_exit:


word32 fn00002B28(word32 dwArg04, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002AEC
//      fn00002ED4
//      fn00003910
// MayUse:  Stack +0004:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a4 a5 d0 d1
// Preserved: a2 a6 a7 d2 d3 d4
fn00002B28_entry:
l00002B28:
	word32 d0_152
	word32 a5_23 = fn00002BBC()
	branch dwArg04 != 0<32> l00002B3E
l00002B3E:
	branch Mem17[dwArg04 + 28<i32>:word32] != 0<32> l00002B5C
l00002B44:
	branch (Mem17[dwArg04 + 24<i32>:word32] & 4<i32>) == 0<32> l00002B54
l00002B54:
	Mem41[dwArg04 + 28<i32>:word32] = 0x400<32>
l00002B4C:
	Mem44[dwArg04 + 28<i32>:word32] = 1<i32>
l00002B5C:
	branch Mem47[dwArg04 + 8<i32>:word32] != 0<32> l00002B66
l00002B66:
	branch (Mem47[dwArg04 + 24<i32>:word32] & 2<i32>) == 0<32> l00002BAC
l00002B6E:
	branch Mem47[dwArg04:word32] == 0<32> l00002B9C
l00002B9C:
	d0_152 = 0<i32>
l00002B72:
	branch Mem47[dwArg04 + 4<i32>:word32] - Mem47[dwArg04 + 8<i32>:word32] - execPrivate3() == 0<32> l00002BA0
l00002BA0:
	Mem77[dwArg04 + 4<i32>:word32] = Mem47[dwArg04 + 8<i32>:word32]
	Mem79[dwArg04 + 20<i32>:word32] = Mem77[dwArg04 + 28<i32>:word32]
l00002BAC:
	Mem86[dwArg04 + 24<i32>:word32] = Mem84[dwArg04 + 24<i32>:word32] & -4<i32>
	a0 = dwArg04 + 24<i32>
	d0_152 = 0<i32>
l00002B90:
	Mem92[dwArg04 + 24<i32>:word32] = Mem47[dwArg04 + 24<i32>:word32] | 16<i32>
	a0 = dwArg04 + 24<i32>
	d0_152 = -1<i32>
l00002B62:
	d0_152 = 0<i32>
l00002B3A:
	d0_152 = -1<i32>
l00002BB6:
	a0Out = a0
	a5Out = a5_23
	return d0_152
fn00002B28_exit:


word32 fn00002BBC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002604
//      fn00002B28
//      fn00003910
// MayUse: 
// LiveOut: a5
// Trashed: CVZN a1 a4 a5 d0 d1
// Preserved: a6 a7
fn00002BBC_entry:
l00002BBC:
	branch (SetSignal(0<i32>, 0x1000<32>) & 0x1000<32>) == 0<32> l00002BE6
l00002BDA:
	a5 = fn0000131C(0x00000014<p32>)
l00002BE6:
	return a5
fn00002BBC_exit:


void fn00002ED4(word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0004:[0..31]
// LiveOut:
// Trashed: CVZN a0 a1 a4 a5 d0 d1
// Preserved: X a2 a7
fn00002ED4_entry:
l00002ED4:
	branch dwArg04 == 0<32> l00002EEC
l00002EEC:
	word32 a2_10 = Mem5[0x00003EEC<p32>:word32]
	branch a2_10 == 0<32> l00002F12
l00002EF6:
	branch (Mem16[a2_10 + 24<i32>:word32] & 2<i32>) == 0<32> l00002F08
l00002EFE:
	word32 a0_103
	word32 a5_104
	fn00002B28(a2_10, out a0_103, out a5_104)
l00002F08:
	a2_10 = Mem40[a2_10 + 12<i32>:word32]
	branch a2_10 != 0<32> l00002EF6
l00002EE0:
	word32 a0_101
	word32 a5_102
	fn00002B28(dwArg04, out a0_101, out a5_102)
l00002F12:
	return
fn00002ED4_exit:


word32 fn00002F18(word32 d0, word32 dwArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00001390
// MayUse:  d0:[0..31] Stack +0004:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7
fn00002F18_entry:
l00002F18:
	return fn00002F34(d0, Mem8[0x00003EF8<p32>:word32], dwArg04, fp + 8<i32>)
fn00002F18_exit:


word32 fn00002F34(word32 d0, word32 dwArg04, word32 dwArg08, word32 dwArg0C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F18
// MayUse:  d0:[8..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31]
// LiveOut: d0
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a2 a3 a4 a5 a6 a7 d2 d3 d4 d5 d6 d7
fn00002F34_entry:
l00002F34:
	word32 d0_1851
	word32 d3_1399 = dwArg0C
	word32 a5_1490 = dwArg04
	word32 a4_1824 = dwArg08
	word32 d6_1518 = 0<i32>
	branch Mem36[dwArg08:byte] == 0<8> l0000387A
l00002F50:
	branch Mem46[a4_1824:byte] != 0x25<8> l00003854
l00003854:
	a4_1824 = a4_1824 + 1<i32>
	word32 a0_3163
	d0 = fn000038B4(CONVERT(CONVERT(Mem53[a4_1824:byte], byte, int16), int16, int32), a5_1490, out a0_3163, out a5_1490)
	branch d0 != 0xFFFFFFFF<32> l00003872
l00003872:
	d6_1518 = d6_1518 + 1<32>
l0000386E:
	d0_1851 = d6_1518
l00002F58:
	word32 dwLoc30_2053 = 0<32>
	word32 d5_248 = -1<i32>
	word32 d4_367 = 105<i32>
	word32 a3_1203 = fp + -36<i32>
	word32 d7_1002 = 0<i32>
	word32 dwLoc0A_2055 = 0<32>
	word32 a2_131 = a4_1824 + 1<i32>
	word32 d2_126 = 0<32>
l00002F76:
	word32 d1_100 = 0<i32>
l00002F78:
	branch Mem99[0x0000388C<p32> + d1_100:byte] - Mem99[a2_131:byte] != 0<8> l00002F9C
l00002F9C:
	d1_100 = d1_100 + 1<32>
	branch d1_100 <u 5<32> l00002F78
l00002F8A:
	word32 d1_119 = 1<i32> << d1_100
	d0 = d1_119
	d2_126 = d2_126 | d1_119
	a2_131 = a2_131 + 1<i32>
l00002FA6:
	branch d1_100 <u 5<32> l00002F76
l00002FAE:
	word32 a0_1365
	word32 d0_154
	word32 dwLoc28_2058 = d2_126
	branch Mem138[a2_131:byte] != 0x2A<8> l00002FEC
l00002FEC:
	a0_1365 = 0x00002BED<p32> + (SEQ(SLICE(d0, word24, 8), Mem138[a2_131:byte]) & 0xFF<32>)
	word32 d0_153 = CONVERT(Mem138[a0_1365:byte], byte, uint32)
	d0_154 = d0_153 & 4<32>
	branch (d0_153 & 4<32>) == 0<32> l00003058
l00003008:
	word32 d2_159 = 0<32>
l0000300C:
	word32 d1_171 = __swap(10<i32>) *u32 SLICE(d2_159, word16, 0)
	word32 d0_180 = SLICE(d2_159, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_171, word16, 16), SLICE(d1_171, word16, 0) + SLICE(__swap(d2_159), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	a0_1365 = 0x00002BED<p32> + (SEQ(SLICE(d0_180, word24, 8), Mem165[a2_131:byte]) & 0xFF<32>)
	word32 d1_190 = CONVERT(CONVERT(Mem165[a2_131:byte], byte, int16), int16, int32)
	word32 d0_204 = CONVERT(Mem165[a0_1365:byte], byte, uint32)
	d1_100 = d1_190 - 0x30<32>
	d2_159 = d1_190 - 0x30<32> + d0_180
	d0_154 = d0_204 & 4<32>
	branch (d0_204 & 4<32>) != 0<32> l0000300C
l00003054:
	dwLoc30_2053 = d2_159
l00002FB8:
	d0_154 = __align(d3_1399 + 3<32>, 4<i32>)
	a2_131 = a2_131 + 1<i32>
	d3_1399 = d0_154 + 4<32>
	a0_1365 = d0_154 + 4<32>
	word32 v31_225 = Mem138[d0_154:word32]
	branch v31_225 >= 0<32> l00002FE4
l00002FE4:
	dwLoc30_2053 = v31_225
l00002FD0:
	d0_154 = -v31_225
	dwLoc28_2058 = d2_126 | 4<32>
	dwLoc30_2053 = d0_154
l00003058:
	branch Mem240[a2_131:byte] != 0x2E<8> l000030EC
l00003060:
	a2_131 = a2_131 + 1<i32>
	branch Mem240[a2_131:byte] != 0x2A<8> l00003086
l00003086:
	a0_1365 = 0x00002BED<p32> + (SEQ(SLICE(d0_154, word24, 8), Mem240[a2_131:byte]) & 0xFF<32>)
	d5_248 = 0<i32>
	branch (CONVERT(Mem240[a0_1365:byte], byte, uint32) & 4<32>) == 0<32> l000030EC
l000030A4:
	word32 d1_275 = __swap(10<i32>) *u32 SLICE(d5_248, word16, 0)
	word32 d0_284 = SLICE(d5_248, word16, 0) *u32 10<i32> + SEQ(SLICE(__swap(SEQ(SLICE(d1_275, word16, 16), SLICE(d1_275, word16, 0) + SLICE(__swap(d5_248), word16, 0) *u 0xA<16>)), word16, 16), 0<16>)
	a2_131 = a2_131 + 1<i32>
	word32 d1_294 = CONVERT(CONVERT(Mem269[a2_131:byte], byte, int16), int16, int32)
	a0_1365 = 0x00002BED<p32> + (SEQ(SLICE(d0_284, word24, 8), Mem269[a2_131:byte]) & 0xFF<32>)
	d1_100 = d1_294 - 0x30<32>
	d5_248 = d1_294 - 0x30<32> + d0_284
	branch (CONVERT(Mem269[a0_1365:byte], byte, uint32) & 4<32>) != 0<32> l000030A4
l00003068:
	word32 d0_319 = __align(d3_1399 + 3<32>, 4<i32>)
	a2_131 = a2_131 + 1<i32>
	d3_1399 = d0_319 + 4<32>
	a0_1365 = d0_319 + 4<32>
	word32 v38_324 = Mem240[d0_319:word32]
	branch v38_324 < 0<32> l000030EC
l00003080:
	d5_248 = v38_324
l000030EC:
	branch Mem332[a2_131:byte] == 0x68<8> l00003110
l000030F2:
	branch Mem332[a2_131:byte] == 0x6C<8> l00003110
l000030F8:
	branch Mem332[a2_131:byte] == 0x4C<8> l00003110
l000030FE:
	branch Mem332[a2_131:byte] == 0x6A<8> l00003110
l00003104:
	branch Mem332[a2_131:byte] == 0x7A<8> l00003110
l0000310A:
	branch Mem332[a2_131:byte] != 0x74<8> l00003116
l00003110:
	a2_131 = a2_131 + 1<i32>
	d4_367 = CONVERT(CONVERT(Mem332[a2_131:byte], byte, int16), int16, int32)
l00003116:
	branch d4_367 != 0x68<32> l00003128
l0000311E:
	branch Mem332[a2_131:byte] != 0x68<8> l00003128
l00003124:
	d4_367 = 2<i32>
	a2_131 = a2_131 + 1<i32>
l00003128:
	branch d4_367 != 0x6C<32> l0000313A
l00003130:
	branch Mem332[a2_131:byte] != 0x6C<8> l0000313A
l00003136:
	d4_367 = 1<i32>
	a2_131 = a2_131 + 1<i32>
l0000313A:
	branch d4_367 != 0x6A<32> l00003144
l00003142:
	d4_367 = 1<i32>
l00003144:
	branch d4_367 != 0x7A<32> l0000314E
l0000314C:
	d4_367 = 108<i32>
l0000314E:
	branch d4_367 != 0x74<32> l00003158
l00003156:
	d4_367 = 105<i32>
l00003158:
	word32 d5_1398
	byte v88_419 = Mem332[a2_131:byte]
	word32 a2_1791 = a2_131 + 1<i32>
	word32 d1_1037 = SEQ(SLICE(d1_100, word24, 8), v88_419)
	branch v88_419 == 0x25<8> l000035E0
l000035E0:
	a3_1203 = 0x00003888<p32>
	dwLoc0A_2055 = 1<32>
	d5_1398 = 0<i32>
l00003164:
	branch v88_419 == 0x58<8> l000031B2
l0000316A:
	branch v88_419 == 0x63<8> l00003560
l00003560:
	branch d4_367 != 0x6C<32> l0000357C
l0000357C:
	word32 d0_480 = __align(d3_1399 + 3<32>, 4<i32>)
	d3_1399 = d0_480 + 4<32>
	a0_1365 = d0_480 + 4<32>
l00003568:
	word32 d0_505 = __align(d3_1399 + 3<32>, 4<i32>)
	d3_1399 = d0_505 + 4<32>
	a0_1365 = d0_505 + 4<32>
l0000358E:
	dwLoc0A_2055 = 1<32>
	d5_1398 = 0<i32>
l00003172:
	branch v88_419 == 0x64<8> l000031B2
l00003178:
	branch v88_419 == 0x69<8> l000031B2
l0000317E:
	branch v88_419 == 0x6E<8> l000035F2
l000035F2:
	branch d4_367 != 1<32> l00003614
l00003614:
	branch d4_367 != 0x6C<32> l00003632
l00003632:
	branch d4_367 != 0x68<32> l00003650
l00003650:
	branch d4_367 != 2<32> l0000366E
l0000366E:
	word32 d0_543 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_543:word32]
	Mem563[a0_1365:word32] = d6_1518
	d3_1399 = d0_543 + 4<32>
l00003658:
	word32 d0_568 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_568:word32]
	Mem575[a0_1365:byte] = SLICE(d6_1518, byte, 0)
	d3_1399 = d0_568 + 4<32>
l0000363A:
	word32 d0_580 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_580:word32]
	Mem587[a0_1365:word16] = SLICE(d6_1518, word16, 0)
	d3_1399 = d0_580 + 4<32>
l0000361C:
	word32 d0_592 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_592:word32]
	Mem598[a0_1365:word32] = d6_1518
	d3_1399 = d0_592 + 4<32>
l000035FA:
	word32 d0_603 = __align(d3_1399 + 3<32>, 4<i32>)
	a0_1365 = Mem524[d0_603:word32]
	Mem609[a0_1365 + 4<i32>:word32] = d6_1518
	Mem610[a0_1365:word32] = 0<32>
	d3_1399 = d0_603 + 4<32>
l00003682:
	d5_1398 = 0<i32>
	dwLoc30_2053 = 0<32>
l0000318A:
	branch v88_419 <=u 0x70<8> l000031B2
l00003198:
	branch v88_419 == 0x73<8> l0000359C
l0000359C:
	word32 d0_641 = __align(d3_1399 + 3<32>, 4<i32>)
	a3_1203 = Mem524[d0_641:word32]
	d3_1399 = d0_641 + 4<32>
	a0_1365 = d0_641 + 4<32>
	word32 a1_647 = a3_1203
	dwLoc0A_2055 = 0<32>
	branch d5_248 == 0<32> l000035BE
l000035B8:
	branch d5_248 <=u 0<32> l000035DA
l000035BE:
	branch Mem648[a3_1203:byte] == 0<8> l000035DA
l000035C2:
	word32 d0_676 = 0<32>
l000035C6:
	d0_676 = d0_676 + 1<32>
	a1_647 = a1_647 + 1<i32>
	branch d5_248 <=u 0<32> l000035D2
l000035CE:
	branch d5_248 - d0_676 <=u 0<32> l000035D6
l000035D2:
	branch Mem648[a1_647:byte] != 0<8> l000035C6
l000035D6:
	dwLoc0A_2055 = d0_676
l000035DA:
	d5_1398 = 0<i32>
l000031A4:
	branch v88_419 == 0x75<8> l000031B2
l000031AA:
	branch v88_419 != 0x78<8> l0000368A
l0000368A:
	branch v88_419 != 0<8> l00003690
l0000368E:
	a2_1791 = a2_1791 - 1<i32>
l00003690:
	a3_1203 = a4_1824
	dwLoc0A_2055 = a2_1791 - a4_1824
	d5_1398 = 0<i32>
	dwLoc30_2053 = 0<32>
l000031B2:
	branch v88_419 != 0x70<8> l000031C4
l000031B8:
	d4_367 = 108<i32>
	d1_1037 = 120<i32>
	dwLoc28_2058 = dwLoc28_2058 | 1<32>
l000031C4:
	word32 dwLoc38_2095
	word32 dwLoc34_2111
	byte bLoc44_2117
	word32 d3_1022
	branch SLICE(d1_1037, byte, 0) == 0x64<8> l000031D2
l000031CA:
	branch SLICE(d1_1037, byte, 0) != 0x69<8> l0000331C
l0000331C:
	word16 wLoc32_2100
	word16 wLoc34_2122
	branch d4_367 != 1<32> l00003340
l00003340:
	branch d4_367 != 0x6C<32> l00003362
l00003362:
	word32 d0_780 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 v204_786 = Mem785[d0_780:word32]
	d3_1022 = d0_780 + 4<32>
	wLoc32_2100 = SLICE(v204_786, word16, 0) (alias)
	wLoc34_2122 = SLICE(v204_786, word16, 16) (alias)
	dwLoc38_2095 = 0<32>
l00003348:
	word32 d0_797 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 v196_802 = Mem785[d0_797:word32]
	d3_1022 = d0_797 + 4<32>
	wLoc32_2100 = SLICE(v196_802, word16, 0) (alias)
	wLoc34_2122 = SLICE(v196_802, word16, 16) (alias)
	dwLoc38_2095 = 0<32>
l00003324:
	word32 d0_812 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 v187_817 = Mem785[d0_812 + 4<32>:word32]
	d3_1022 = d0_812 + 8<32>
	wLoc32_2100 = SLICE(v187_817, word16, 0) (alias)
	wLoc34_2122 = SLICE(v187_817, word16, 16) (alias)
	dwLoc38_2095 = Mem818[d0_812:word32]
l0000337A:
	word32 d1_838 = SEQ(SEQ(wLoc34_2122, SLICE(wLoc32_2100, byte, 8)), SLICE(wLoc32_2100, byte, 0))
	branch d4_367 != 0x68<32> l00003396
l00003382:
	d1_838 = CONVERT(wLoc32_2100, word16, uint32)
	dwLoc38_2095 = 0<32>
l00003396:
	byte bLoc31_2107 = SLICE(d1_838, byte, 24)
	dwLoc34_2111 = d1_838 (alias)
	branch d4_367 != 2<32> l000033B2
l0000339E:
	dwLoc34_2111 = CONVERT(bLoc31_2107, byte, uint32)
	dwLoc38_2095 = 0<32>
l000033B2:
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
	branch (dwLoc28_2058 & 1<i32>) == 0<32> l00003450
l000033C2:
	branch SLICE(d1_1037, byte, 0) != 0x6F<8> l000033FE
l000033C8:
	branch d5_248 != 0<32> l000033F2
l000033CC:
	branch dwLoc38_2095 - CONVERT(dwLoc34_2111 <u 0<32>, bool, word32) == 0<32> l000033FE
l000033F2:
	d7_1002 = 1<32>
l000033FE:
	branch SLICE(d1_1037, byte, 0) == 0x78<8> l0000340E
l00003404:
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
	branch SLICE(d1_1037, byte, 0) != 0x58<8> l00003450
l0000340E:
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
	branch dwLoc38_2095 - CONVERT(dwLoc34_2111 <u 0<32>, bool, word32) == 0<32> l00003450
l00003438:
	Mem1000[fp + -6<i32> + d7_1002:byte] = 0x30<8>
	word32 d7_999 = d7_1002 + 1<32>
	Mem1005[fp + -6<i32> + d7_999:byte] = SLICE(d1_1037, byte, 0)
	d7_1002 = d7_999 + 1<32>
	bLoc44_2117 = SLICE(d1_1037, byte, 0)
l000031D2:
	word32 dwLoc40_2149
	word32 dwLoc3C_2159
	branch d4_367 != 1<32> l000031F8
l000031F8:
	branch d4_367 != 0x6C<32> l00003224
l00003224:
	word32 d0_1020 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 d0_1025 = Mem785[d0_1020:word32]
	d3_1022 = d0_1020 + 4<32>
	word16 wLoc3A_2150 = SLICE(d0_1025, word16, 0)
	word32 d0_1032 = d0_1025 >> 31<i32>
	dwLoc40_2149 = d0_1025 >> 31<i32>
	branch d4_367 != 0x68<32> l0000326A
l0000324E:
	d0_1025 = CONVERT(wLoc3A_2150, word16, int32)
	dwLoc40_2149 = d0_1025 >> 31<i32>
	d1_1037 = SEQ(SLICE(d0_1025 >> 31<i32>, word16, 16), wLoc3A_2150)
	d0_1032 = d1_1037
l0000326A:
	byte bLoc39_2155 = SLICE(d0_1025, byte, 24)
	dwLoc3C_2159 = d0_1025 (alias)
	branch d4_367 != 2<32> l00003290
l00003272:
	word32 d1_1081 = CONVERT(CONVERT(bLoc39_2155, byte, int16), int16, int32)
	dwLoc3C_2159 = d1_1081
	dwLoc40_2149 = d1_1081 >> 31<i32>
	d1_1037 = SEQ(SLICE(d0_1032, word24, 8), bLoc39_2155)
l00003200:
	word32 d0_1099 = __align(d3_1399 + 3<32>, 4<i32>)
	word32 d0_1103 = Mem785[d0_1099:word32]
	d3_1022 = d0_1099 + 4<32>
	dwLoc3C_2159 = d0_1103
	dwLoc40_2149 = d0_1103 >> 31<i32>
l000031DA:
	word32 d0_1118 = __align(d3_1399 + 3<32>, 4<i32>)
	d3_1022 = d0_1118 + 8<32>
	dwLoc3C_2159 = Mem785[d0_1118 + 4<32>:word32]
	dwLoc40_2149 = Mem1124[d0_1118:word32]
l00003290:
	byte v122_1129 = SLICE(d1_1037, byte, 0)
	branch dwLoc40_2149 - CONVERT(dwLoc3C_2159 <u 0<32>, bool, word32) >= 0<32> l000032DA
l000032DA:
	branch (dwLoc28_2058 & 16<i32>) == 0<32> l000032F4
l000032F4:
	branch (dwLoc28_2058 & 8<i32>) == 0<32> l00003308
l000032FC:
	d7_1002 = 1<32>
l000032E6:
	d7_1002 = 1<32>
l00003308:
	dwLoc34_2111 = dwLoc3C_2159
	dwLoc38_2095 = dwLoc40_2149
	bLoc44_2117 = v122_1129
l00003450:
	word32 dwLoc44_2192
	a3_1203 = fp + -14<i32>
	branch bLoc44_2117 == 0x78<8> l00003464
l0000345E:
	branch bLoc44_2117 != 0x58<8> l0000346E
l0000346E:
	word32 dwLoc40_2189
	branch bLoc44_2117 != 0x6F<8> l0000347E
l0000347E:
	dwLoc40_2189 = 0xA<32>
l00003474:
	dwLoc40_2189 = 8<32>
l00003486:
	dwLoc44_2192 = dwLoc40_2189
l00003464:
	dwLoc44_2192 = 0x10<32>
l0000348C:
	word32 a6_1235
	branch bLoc44_2117 == 0x58<8> l0000349E
l0000349E:
	a6_1235 = 0x000038A4<p32>
l00003498:
	a6_1235 = 0x00003894<p32>
l000034A2:
	word32 d6_1294 = dwLoc38_2095
	word32 d7_1296 = dwLoc34_2111
	word32 d3_1298 = 0<32>
l000034C4:
	a3_1203 = a3_1203 - 1<i32>
	Mem1349[a3_1203:byte] = Mem1325[a6_1235 + fn00003C74(d6_1294, d7_1296, dwLoc44_2192 >> 31<i32>, dwLoc44_2192):byte]
	word32 d1_1368
	word32 d0_1367 = fn00003A24(d6_1294, d7_1296, dwLoc44_2192 >> 31<i32>, dwLoc44_2192, out d1_1368, out a0_1365)
	d6_1294 = d0_1367
	d7_1296 = d1_1368
	d3_1298 = d3_1298 + 1<32>
	branch d0_1367 - CONVERT(d1_1368 <u 0<32>, bool, word32) != 0<32> l000034C4
l00003532:
	dwLoc0A_2055 = d3_1298
	d5_1398 = d5_248
	d3_1399 = d3_1022
	branch d5_248 != 0xFFFFFFFF<32> l00003554
l00003554:
	dwLoc28_2058 = dwLoc28_2058 & 0xFFFFFFFD<32>
l0000354E:
	d5_1398 = 0<i32>
l000036A0:
	word32 dwLoc44_2276
	branch d5_1398 - dwLoc0A_2055 >u 0<32> l000036AE
l000036AE:
	dwLoc44_2276 = d5_1398
l000036A6:
	dwLoc44_2276 = dwLoc0A_2055
l000036B2:
	word32 dwLoc44_2319
	word32 d0_1443 = dwLoc44_2276 + d7_1002
	branch d0_1443 - dwLoc30_2053 <u 0<32> l000036D6
l000036D6:
	dwLoc44_2319 = dwLoc30_2053 - d0_1443
l000036D0:
	dwLoc44_2319 = 0<32>
l000036E6:
	branch (dwLoc28_2058 & 2<i32>) == 0<32> l00003728
l000036F4:
	word32 d2_1482 = 0<i32>
	branch d7_1002 == 0<32> l00003728
l000036FA:
	branch fn000038B4(CONVERT(CONVERT(Mem1491[fp + -6<i32> + d2_1482:byte], byte, int16), int16, int32), a5_1490, out a0_1365, out a5_1490) != 0xFFFFFFFF<32> l00003720
l00003720:
	d2_1482 = d2_1482 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch d7_1002 - d2_1482 >u 0<32> l000036FA
l00003728:
	branch (dwLoc28_2058 & 4<i32>) != 0<32> l0000377A
l00003730:
	word32 d2_1534 = 0<i32>
	branch dwLoc44_2319 == 0<32> l0000377A
l00003738:
l00003740:
	word32 a0_1555
	branch (dwLoc28_2058 & 2<i32>) == 0<32> l0000374E
l0000374E:
	a0_1555 = SEQ(SLICE(a0_1365, word16, 16), 0x20<16>)
l00003748:
	a0_1555 = SEQ(SLICE(a0_1365, word16, 16), 0x30<16>)
l00003752:
	branch fn000038B4(a0_1555, a5_1490, out a0_1365, out a5_1490) != 0xFFFFFFFF<32> l0000376A
l0000376A:
	d2_1534 = d2_1534 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch dwLoc44_2319 - d2_1534 >u 0<32> l00003740
l00003772:
l0000377A:
	branch (dwLoc28_2058 & 2<i32>) != 0<32> l000037B6
l00003782:
	word32 d2_1601 = 0<i32>
	branch d7_1002 == 0<32> l000037B6
l00003788:
	word32 a0_3164
	branch fn000038B4(CONVERT(CONVERT(Mem1613[fp + -6<i32> + d2_1601:byte], byte, int16), int16, int32), a5_1490, out a0_3164, out a5_1490) != 0xFFFFFFFF<32> l000037AE
l000037AE:
	d2_1601 = d2_1601 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch d7_1002 - d2_1601 >u 0<32> l00003788
l000037B6:
	word32 d2_1650 = dwLoc0A_2055
	branch d5_1398 - dwLoc0A_2055 <=u 0<32> l000037E4
l000037C0:
	word32 a0_3165
	branch fn000038B4(0x00000030<p32>, a5_1490, out a0_3165, out a5_1490) != 0xFFFFFFFF<32> l000037DC
l000037DC:
	d2_1650 = d2_1650 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch d5_1398 - d2_1650 >u 0<32> l000037C0
l000037E4:
	word32 d2_1693 = 0<i32>
	branch dwLoc0A_2055 == 0<32> l0000381A
l000037EC:
l000037F0:
	word32 a0_3166
	branch fn000038B4(CONVERT(CONVERT(Mem1704[a3_1203 + d2_1693:byte], byte, int16), int16, int32), a5_1490, out a0_3166, out a5_1490) != 0xFFFFFFFF<32> l00003812
l00003812:
	d2_1693 = d2_1693 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch dwLoc0A_2055 - d2_1693 >u 0<32> l000037F0
l0000381A:
	d0 = dwLoc28_2058 & 4<i32>
	branch d0 == 0<32> l00003850
l00003822:
	word32 d2_1747 = 0<i32>
	branch dwLoc44_2319 == 0<32> l00003850
l0000382A:
l0000382E:
	word32 a0_3167
	d0 = fn000038B4(0x00000020<p32>, a5_1490, out a0_3167, out a5_1490)
	branch d0 != 0xFFFFFFFF<32> l00003848
l00003848:
	d2_1747 = d2_1747 + 1<32>
	d6_1518 = d6_1518 + 1<32>
	branch dwLoc44_2319 - d2_1747 >u 0<32> l0000382E
l00003850:
	a4_1824 = a2_1791
l00003874:
	branch Mem1826[a4_1824:byte] != 0<8> l00002F50
l0000387A:
	d0_1851 = d6_1518
l00003844:
	d0_1851 = d6_1518
l0000380E:
	d0_1851 = d6_1518
l000037D6:
	d0_1851 = d6_1518
l000037A8:
	d0_1851 = d6_1518
l00003764:
	d0_1851 = d6_1518
l0000371A:
	d0_1851 = d6_1518
l0000387C:
	return d0_1851
fn00002F34_exit:
l000032BA:


word32 fn000038B4(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a7 d2
fn000038B4_entry:
l000038B4:
	word32 a0_101
	word32 d1_51
	Mem17[dwArg08 + 24<i32>:word32] = Mem11[dwArg08 + 24<i32>:word32] | 2<i32>
	word32 v13_19 = Mem17[dwArg08 + 20<i32>:word32] - 1<32>
	Mem20[dwArg08 + 20<i32>:word32] = v13_19
	branch v13_19 < 0<32> l000038F8
l000038D0:
	branch dwArg04 != 10<i32> l000038E2
l000038D6:
	branch (Mem20[dwArg08 + 24<i32>:word32] & 0x80<32>) != 0<32> l000038F8
l000038F8:
	d1_51 = fn00003910(dwArg04, dwArg08, out a0_101, out a5)
l000038E2:
	a0_101 = Mem20[dwArg08 + 4<i32>:word32]
	Mem60[dwArg08 + 4<i32>:word32] = a0_101 + 1<i32>
	Mem63[a0_101:byte] = SLICE(dwArg04, byte, 0)
	d1_51 = CONVERT(Mem63[a0_101:byte], byte, uint32)
l00003906:
	a0Out = a0_101
	a5Out = a5
	return d1_51
fn000038B4_exit:


word32 fn00003910(word32 dwArg04, word32 dwArg08, ptr32 & a0Out, ptr32 & a5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000038B4
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: a0 a5 d0
// Trashed: CVZNX a0 a1 a5 d0 d1
// Preserved: a2 a3 a4 a6 a7 d2 d3 d4 d5 d6
fn00003910_entry:
l00003910:
	word32 d0_107
	word32 a5_123 = fn00002BBC()
	branch dwArg08 != 0<32> l0000392C
l0000392C:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 73<i32>) == 64<i32> l0000393E
l0000393E:
	branch Mem29[dwArg08 + 28<i32>:word32] != 0<32> l0000395C
l00003944:
	branch (Mem29[dwArg08 + 24<i32>:word32] & 4<i32>) == 0<32> l00003954
l00003954:
	Mem61[dwArg08 + 28<i32>:word32] = 0x400<32>
l0000394C:
	Mem64[dwArg08 + 28<i32>:word32] = 1<i32>
l0000395C:
	branch Mem67[dwArg08 + 8<i32>:word32] != 0<32> l0000399C
l0000399C:
	branch Mem67[dwArg08:word32] == 0<32> l000039F6
l000039F6:
	d0_107 = 0<i32>
l000039A0:
	branch (Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l000039CC
l000039AC:
	branch dwArg04 != 10<i32> l000039CC
l000039CC:
	branch Mem67[dwArg08 + 4<i32>:word32] - Mem67[dwArg08 + 8<i32>:word32] - execPrivate3() == 0<32> l000039FA
l000039EA:
	Mem106[dwArg08 + 24<i32>:word32] = Mem67[dwArg08 + 24<i32>:word32] | 16<i32>
	a0 = dwArg08 + 24<i32>
	d0_107 = -1<i32>
l000039B2:
	word32 a0_110 = Mem67[dwArg08 + 4<i32>:word32]
	Mem113[dwArg08 + 4<i32>:word32] = a0_110 + 1<i32>
	Mem115[a0_110:byte] = SLICE(dwArg04, byte, 0)
	d0_107 = fn00002B28(dwArg08, out a0, out a5_123)
l00003962:
	word32 d4_139
	branch (Mem67[dwArg08 + 24<i32>:word32] & 0x80<32>) == 0<32> l00003976
l00003976:
	d4_139 = 1<i32>
l00003972:
	d4_139 = 2<i32>
l00003978:
	word32 d0_155 = fn00002718(d4_139 + Mem67[dwArg08 + 28<i32>:word32], out a0)
	branch d0_155 != 0<32> l00003992
l00003992:
	Mem168[dwArg08 + 8<i32>:word32] = d0_155 + 1<i32>
l000039FA:
	Mem175[dwArg08 + 24<i32>:word32] = Mem173[dwArg08 + 24<i32>:word32] | 2<i32>
	a0 = Mem175[dwArg08 + 8<i32>:word32]
	Mem182[a0:byte] = SLICE(dwArg04, byte, 0)
	Mem185[dwArg08 + 4<i32>:word32] = Mem182[dwArg08 + 8<i32>:word32] + 1<i32>
	Mem189[dwArg08 + 20<i32>:word32] = Mem185[dwArg08 + 28<i32>:word32] - 1<32>
	d0_107 = 0<i32>
l0000398C:
	d0_107 = -1<i32>
l00003938:
	d0_107 = -1<i32>
l00003926:
	d0_107 = -1<i32>
l00003A1E:
	a0Out = a0
	a5Out = a5_123
	return d0_107
fn00003910_exit:


word32 fn00003A24(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & d1Out, ptr32 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: a0 d0 d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6
fn00003A24_entry:
l00003A24:
	word32 d0_196
	word32 d1_142 = dwArg08
	word32 a0_20 = dwArg08
	word32 d3_166 = dwArg10
	branch dwArg0C != 0<32> l00003A7A
l00003A7A:
	branch dwArg04 - dwArg0C >=u 0<32> l00003A84
l00003A84:
	word32 d4_29 = 24<i32>
	word32 d6_30 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00003AA2
l00003A8E:
	d4_29 = 16<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00003AA2
l00003A96:
	d4_29 = 8<i32>
	d6_30 = __rol(d6_30, 8<32>)
	branch SLICE(d6_30, byte, 0) != 0<8> l00003AA2
l00003A9E:
	d4_29 = 0<i32>
	d6_30 = SEQ(SLICE(d6_30, word24, 8), SLICE(dwArg0C, byte, 0))
l00003AA2:
	word32 d4_61 = SEQ(SLICE(d4_29, word24, 8), SLICE(d4_29, byte, 0) + Mem17[0x00003DCC<p32> + CONVERT(SLICE(d6_30, word16, 0) & 0xFF<16>, word16, int32):byte])
	word32 d5_63 = 32<i32> - d4_61
	branch d5_63 != 0<32> l00003AC2
l00003AC2:
	word32 d1_86
	word32 d2_322
	word32 d0_85 = fn00003B28(dwArg04 >>u d4_61, dwArg04 << d5_63 | dwArg08 >>u d4_61, dwArg0C << d5_63 | dwArg10 >>u d4_61, out d1_86, out d2_322)
	word32 d3_72 = dwArg10 << d5_63
	word32 d5_101 = __swap(d0_85)
	word32 d6_103 = __swap(d3_72)
	word32 d3_102 = d3_72 *u32 SLICE(d5_101, word16, 0)
	word32 d2_107 = __swap(d0_85 *u32 SLICE(d3_72, word16, 0))
	word16 v34_108 = SLICE(d2_107 + d3_102, word16, 0)
	word32 d4_104 = d0_85 *u32 SLICE(d6_103, word16, 0)
	word16 v39_116 = v34_108 + SLICE(d4_104, word16, 0)
	word32 d6_82 = dwArg08 << d5_63
	word32 d2_124 = __swap(SEQ(SLICE(d2_107, word16, 16), v39_116))
	word32 d5_105 = d5_101 *u32 SLICE(d6_103, word16, 0)
	a0_20 = d6_82
	d1_142 = d0_85
	word32 v48_134 = d1_86 - ((__swap(SEQ(SLICE(d3_102, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_104, word16, 16), 0<16>))) + SEQ(SLICE(d5_105, word16, 16), (SLICE(d5_105, word16, 0) + CONVERT(v34_108 <u 0<16>, bool, word16)) + CONVERT(v39_116 <u 0<16>, bool, word16)))
	branch v48_134 <u 0<32> l00003B1E
l00003B18:
	branch v48_134 != 0<32> l00003B20
l00003B1A:
	branch d6_82 - d2_124 >=u 0<32> l00003B20
l00003B1E:
	d1_142 = d0_85 - 1<32>
l00003AB6:
	branch dwArg0C - dwArg04 <u 0<32> l00003ABE
l00003ABA:
	branch dwArg10 - dwArg08 >u 0<32> l00003A7E
l00003ABE:
l00003A7E:
l00003A3C:
	branch dwArg04 - dwArg10 >=u 0<32> l00003A4E
l00003A4E:
	branch dwArg10 != 0<32> l00003A5A
l00003A52:
	d3_166 = CONVERT(1<i32> /u SLICE(dwArg10, uint16, 0), uint16, int32)
l00003A5A:
	word32 d1_175
	word32 d2_176
	word32 d0_174 = fn00003B28(0<i32>, dwArg04, d3_166, out d1_175, out d2_176)
	word32 d2_321
	word32 d1_320
	d1_142 = fn00003B28(d1_175, dwArg08, d2_176, out d1_320, out d2_321)
	d0_196 = d0_174
l00003A40:
	word32 d2_319
	word32 d1_318
	d1_142 = fn00003B28(dwArg04, dwArg08, dwArg10, out d1_318, out d2_319)
l00003B20:
	d0_196 = 0<i32>
l00003B22:
	d1Out = d1_142
	a0Out = a0_20
	return d0_196
fn00003A24_exit:


word32 fn00003B28(word32 d0, word32 d1, word32 d2, ptr32 & d1Out, ptr32 & d2Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A24
//      fn00003C74
// MayUse:  d0:[0..31] d1:[0..31] d2:[0..31]
// LiveOut: d0 d1 d2
// Trashed: CVZNX d0 d1 d2
// Preserved: a0 a1 a7 d3 d4 d5 d6 d7
fn00003B28_entry:
l00003B28:
	word32 d7_13 = d2
	branch d2 == 0<32> l00003B42
l00003B30:
	word32 d6_17 = d1
	word32 d5_19 = d0
	branch d0 != 0<32> l00003B50
l00003B50:
	word32 d2_22 = __swap(d2)
	branch SLICE(d2_22, word16, 0) != 0<16> l00003B78
l00003B78:
	byte bLoc26_365 = 0<8>
	word32 d0_44 = 0<i32>
	branch d2 < 0<32> l00003B94
l00003B8A:
	d6_17 = d6_17 * 2<32>
	d0_44 = SEQ(SLICE(d0_44, word16, 16), SLICE(d0_44, word16, 0) + 1<16>)
	d5_19 = d5_19 * 2<32> + CONVERT(d6_17 <u 0<32>, bool, word32)
	d7_13 = d7_13 * 2<32>
	branch d7_13 > 0<32> l00003B8A
l00003B94:
	word16 v40_64 = SLICE(d0_44, word16, 0)
l00003B96:
	word32 d1_104
	word32 d2_73 = __swap(d5_19)
	word32 d3_74 = __swap(d7_13)
	branch SLICE(d2_73 - d3_74, word16, 0) != 0<16> l00003BA8
l00003BA8:
	d1_104 = __swap(SEQ(SLICE(__swap(SEQ(d5_19 % SLICE(d3_74, uint16, 0), d5_19 /u SLICE(d3_74, uint16, 0))), word16, 16), 0<16>))
l00003BA2:
	d1_104 = 0xFFFF<32>
l00003BB2:
	word32 d6_98 = __swap(SEQ(SLICE(d6_17, word16, 16), 0<16>))
l00003BB8:
	word32 d4_113 = __swap(d5_19 - __swap(d7_13) *u32 SLICE(d1_104, word16, 0))
	word16 wLoc22_445 = SLICE(dwLoc24, word16, 0)
	word32 d2_106 = d1_104 *u32 SLICE(d7_13, word16, 0)
	word32 d4_121 = SEQ(SLICE(d4_113, word16, 16), SLICE(d6_98, word16, 0))
	branch SLICE(d4_113, word16, 0) != 0<16> l00003BD8
l00003BD0:
	branch d2_106 - d4_121 <=u 0<32> l00003BD8
l00003BD8:
	word32 d6_133 = __swap(d1_104)
	word32 d3_140 = __swap(d6_133)
	word32 d4_142 = __swap(d7_13)
	word32 d5_141 = d7_13 *u32 SLICE(d3_140, word16, 0)
	word32 d6_146 = __swap(d6_133 *u32 SLICE(d7_13, word16, 0))
	word16 v54_147 = SLICE(d6_146 + d5_141, word16, 0)
	word32 d2_143 = d6_133 *u32 SLICE(d4_142, word16, 0)
	word16 v58_155 = v54_147 + SLICE(d2_143, word16, 0)
	word32 d3_144 = d3_140 *u32 SLICE(d4_142, word16, 0)
	word32 d6_178 = d6_17 - __swap(SEQ(SLICE(d6_146, word16, 16), v58_155))
	word32 d5_181 = d5_19 - ((__swap(SEQ(SLICE(d5_141, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d2_143, word16, 16), 0<16>))) + SEQ(SLICE(d3_144, word16, 16), (SLICE(d3_144, word16, 0) + CONVERT(v54_147 <u 0<16>, bool, word16)) + CONVERT(v58_155 <u 0<16>, bool, word16))) - CONVERT(d6_178 <u 0<32>, bool, word32)
	branch d5_181 >=u 0<32> l00003C30
l00003C1A:
	d6_178 = d6_178 + SEQ(SLICE(__swap(d7_13), word16, 16), 0<16>)
	d1_104 = d1_104 - 1<32>
	d5_181 = d5_181 + CONVERT(d6_178 <u 0<32>, bool, word32) + __swap(SEQ(SLICE(d7_13, word16, 16), 0<16>))
l00003C30:
	branch bLoc26_365 != 0<8> l00003C4C
l00003C4C:
	word32 d6_220 = __swap(SEQ(SLICE(d6_178, word16, 16), SLICE(d5_181, word16, 0)))
	d0 = SEQ(SLICE(dwLoc24, word16, 16), SLICE(d1_104, word16, 0))
	word32 d5_221 = __swap(d5_181)
	word16 v80_224 = SLICE(d7_13, word16, 16)
	branch v40_64 == 0<16> l00003C66
l00003C5C:
	word32 d7_230 = SEQ(v80_224, v40_64 - 1<16>)
	word64 d5_d6_506 = SEQ(d5_221, d6_220)
l00003C5E:
	d5_d6_506 = d5_d6_506 >>u 1<8>
	word16 v84_241 = SLICE(d7_230, word16, 0)
	d6_220 = SLICE(d5_d6_506, word32, 0)
	d7_230 = SEQ(SLICE(d7_230, word16, 16), v84_241 - 1<i16>)
	branch v84_241 != 0<16> l00003C5E
l00003C66:
	d1 = d6_220
	d2 = d2_22
l00003C36:
	word32 d5_266 = __swap(d5_181)
	word32 d6_267 = __swap(d6_178)
	d5_19 = SEQ(SLICE(d5_266, word16, 16), SLICE(d6_267, word16, 0))
	d6_17 = SEQ(SLICE(d6_267, word16, 16), 0<16>)
	bLoc26_365 = true
	dwLoc24 = SEQ(SLICE(d1_104, word16, 0), wLoc22_445) (alias)
l00003BD4:
	d1_104 = d1_104 - 1<32>
l00003B56:
	word32 d0_281 = __swap(d0)
	word32 d1_282 = __swap(d1)
	word32 d0_285 = SEQ(SLICE(d0_281, word16, 16), SLICE(d1_282, word16, 0))
	word32 d0_295 = SEQ(d0_285 % SLICE(d2, uint16, 0), SLICE(__swap(d1_282), word16, 0))
	d2 = SEQ(SLICE(__swap(CONVERT(d0_285 /u SLICE(d2, uint16, 0), uint16, uint32)), word16, 16), d0_295 /u SLICE(d2, uint16, 0))
	d1 = __swap(SEQ(d0_295 % SLICE(d2, uint16, 0), 0<16>))
	d0 = d2
l00003B36:
	branch d1 == 0<32> l00003C6E
l00003B3C:
	branch d2 - d1 >u 0<32> l00003C6E
l00003B42:
	d0 = fn0000257E(d1, d2, d2, out d1)
l00003C6E:
	d1Out = d1
	d2Out = d2
	return d0
fn00003B28_exit:


word32 fn00003C74(word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002F34
// MayUse:  Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: d1
// Trashed: CVZNX a0 a1 d0 d1
// Preserved: a7 d2 d3 d4 d5 d6 d7
fn00003C74_entry:
l00003C74:
	word32 d1_171 = dwArg08
	word32 d3_202 = dwArg10
	branch dwArg0C != 0<32> l00003CC6
l00003CC6:
	branch dwArg04 - dwArg0C <u 0<32> l00003D80
l00003CCC:
	word32 d4_32 = 24<i32>
	word32 d6_33 = __rol(dwArg0C, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00003CEA
l00003CD6:
	d4_32 = 16<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00003CEA
l00003CDE:
	d4_32 = 8<i32>
	d6_33 = __rol(d6_33, 8<32>)
	branch SLICE(d6_33, byte, 0) != 0<8> l00003CEA
l00003CE6:
	d4_32 = 0<i32>
	d6_33 = SEQ(SLICE(d6_33, word24, 8), SLICE(dwArg0C, byte, 0))
l00003CEA:
	word32 d4_64 = SEQ(SLICE(d4_32, word24, 8), SLICE(d4_32, byte, 0) + Mem20[0x00003DCC<p32> + CONVERT(SLICE(d6_33, word16, 0) & 0xFF<16>, word16, int32):byte])
	word32 d5_66 = 32<i32> - d4_64
	branch d5_66 != 0<32> l00003D0C
l00003D0C:
	word32 d1_89
	word32 d2_90
	word32 d0_88 = fn00003B28(dwArg04 >>u d4_64, dwArg04 << d5_66 | dwArg08 >>u d4_64, dwArg0C << d5_66 | dwArg10 >>u d4_64, out d1_89, out d2_90)
	word32 d3_75 = dwArg10 << d5_66
	word32 d7_104 = __swap(d0_88)
	word32 d6_106 = __swap(d3_75)
	word32 d3_105 = d3_75 *u32 SLICE(d7_104, word16, 0)
	word32 d2_110 = __swap(d0_88 *u32 SLICE(d3_75, word16, 0))
	word16 v36_111 = SLICE(d2_110 + d3_105, word16, 0)
	word32 d4_107 = d0_88 *u32 SLICE(d6_106, word16, 0)
	word16 v40_119 = v36_111 + SLICE(d4_107, word16, 0)
	word32 d2_127 = __swap(SEQ(SLICE(d2_110, word16, 16), v40_119))
	word32 d7_108 = d7_104 *u32 SLICE(d6_106, word16, 0)
	word32 d6_85 = dwArg08 << d5_66
	word32 d3_135 = __swap(SEQ(SLICE(d3_105, word16, 16), 0<16>)) + __swap(SEQ(SLICE(d4_107, word16, 16), 0<16>)) + SEQ(SLICE(d7_108, word16, 16), (SLICE(d7_108, word16, 0) + CONVERT(v36_111 <u 0<16>, bool, word16)) + CONVERT(v40_119 <u 0<16>, bool, word16))
	word32 v49_137 = d1_89 - d2_127
	branch v49_137 <u 0<32> l00003D68
l00003D62:
	branch v49_137 != 0<32> l00003D6C
l00003D64:
	branch d6_85 - d3_135 >=u 0<32> l00003D6C
l00003D68:
	d3_135 = d3_135 - d3_75
	d2_127 = d2_127 - d2_90 - CONVERT(d3_135 <u 0<32>, bool, word32)
l00003D6C:
	word32 d6_157 = d6_85 - d3_135
	d1_171 = d1_89 - d2_127 - CONVERT(d6_157 <u 0<32>, bool, word32) << 32<i32> - d5_66 | d6_157 >>u d5_66
l00003CFE:
	branch dwArg0C - dwArg04 <u 0<32> l00003D06
l00003D02:
	branch dwArg10 - dwArg08 >u 0<32> l00003D80
l00003D06:
	d1_171 = dwArg08 - dwArg10
l00003C8C:
	branch dwArg04 - dwArg10 >=u 0<32> l00003C9E
l00003C9E:
	branch dwArg10 != 0<32> l00003CAA
l00003CA2:
	d3_202 = CONVERT(1<i32> /u SLICE(dwArg10, uint16, 0), uint16, int32)
l00003CAA:
	word32 d1_211
	word32 d2_212
	fn00003B28(0<i32>, dwArg04, d3_202, out d1_211, out d2_212)
	word32 d2_355
	fn00003B28(d1_211, dwArg08, d2_212, out d1_171, out d2_355)
l00003C90:
	word32 d2_354
	fn00003B28(dwArg04, dwArg08, dwArg10, out d1_171, out d2_354)
l00003D80:
	return d1_171
fn00003C74_exit:


