word32 fn000043D0(word32 r3, word32 r4, word32 r5, word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000490C
//      fn00004A6C
//      fn00004B44
//      fn00004C48
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r14 r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn000043D0_entry:
l000043D0:
	branch r5 == 0<32> l000043E8_ds_t
l000043E8_ds_t:
l00004480:
	word32 r2_18 = (r3 << 4<32>) + 0x1F01540<32> + (r4 << 2<32>)
	branch Mem6[r2_18:word32] == 0xFF<32> l0000449C_ds_t
l0000449C_ds_t:
l0000449C_ds_f:
l000044A0:
	Mem26[r2_18:word32] = -255<i32>
	word32 r2_31 = fn0000C8A0(-30<i32>, r15, out r14, out r15)
l000044AC:
	branch Mem26[r2_31:word32] != 0xFF<32> l000044AC
l000043E8_ds_f:
l000043EC:
	word32 r2_55 = (r3 << 4<32>) + 0x1F01540<32> + (r4 << 2<32>)
	branch Mem6[r2_55:word32] == 0<32> l00004408_ds_t
l00004408_ds_t:
l000044BC:
l00004408_ds_f:
l0000440C:
	Mem67[r2_55:word32] = -254<i32>
	word32 r15_80
	word32 r14_268
	Mem88[fn0000C8A0(-20<i32>, r15, out r14_268, out r15_80):word32] = -248<i32>
	word32 r15_101
	word32 r14_269
	Mem109[fn0000C8A0(-10<i32>, r15_80, out r14_269, out r15_101):word32] = -224<i32>
	word32 r15_122
	word32 r14_270
	Mem130[fn0000C8A0(-10<i32>, r15_101, out r14_270, out r15_122):word32] = -192<i32>
	word32 r15_143
	word32 r14_271
	Mem151[fn0000C8A0(-10<i32>, r15_122, out r14_271, out r15_143):word32] = -128<i32>
	word32 r15_164
	word32 r14_272
	Mem172[fn0000C8A0(-10<i32>, r15_143, out r14_272, out r15_164):word32] = 0<i32>
	word32 r2_176 = fn0000C8A0(-20<i32>, r15_164, out r14, out r15)
l00004468:
	branch Mem172[r2_176:word32] != 0<32> l00004468
l00004478:
l000044C0:
	r15Out = r15
	return r14
fn000043D0_exit:


void fn000044D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn000044D0_entry:
l000044D0:
	Mem9[0x13158<32>:word32] = 0<i32>
	return
fn000044D0_exit:


word32 fn00004570(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EC18
//      fn0000F194
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r3 r5 r6 r7 r8
// Preserved:
fn00004570_entry:
l00004570:
	branch Mem5[0x13158<32>:word32] > 3<i32> l0000458C_ds_t
l0000458C_ds_t:
l0000458C_ds_f:
l00004590:
	Mem28[0x1F01C0C<32>:word32] = -1<i32> << Mem21[0x13158<32>:word32] | Mem5[0x1F01C0C<32>:word32]
	Mem35[Mem28[0x13158<32>:word32] + 0x3E0382<32> << 3<32>:word32] = r3
	Mem40[(Mem35[0x13158<32>:word32] << 3<32>) + 0x1F01C14<32>:word32] = r4
	Mem45[0x13158<32>:word32] = Mem40[0x13158<32>:word32] + -1<i32>
l00004600:
	return dwLoc14
fn00004570_exit:


void fn0000460C(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004844
//      fn00004978
//      fn00004A6C
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1
// Trashed: CV r1 r11 r4 r5 r7
// Preserved:
fn0000460C_entry:
l0000460C:
	word32 r5_11
	word32 r7_15
	branch r3 >>u 2<32> == 0<32> l0000461C_ds_t
l0000461C_ds_t:
l00004640:
	r5_11 = 0x1700080<32>
	r7_15 = Mem0[0x1700080<32>:word32]
l0000461C_ds_f:
l00004620:
	r3 = r3 - 4<i32>
	r5_11 = 0x1700084<32>
	r7_15 = Mem0[0x1700084<32>:word32]
l00004658:
	Mem43[r5_11:word32] = (r4 & 1<32>) << r3 | (-1<i32> << r3 ^ 0xFFFF<32>) & r7_15
	return
fn0000460C_exit:


word32 fn000046C0(ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AC84
//      fn0000C8A0
// MayUse: 
// LiveOut: r1 r11 r12
// Trashed: CV r1 r11 r12 r3 r4 r5
// Preserved:
fn000046C0_entry:
l000046C0:
	Mem14[0x1F01E80<32>:word32] = Mem0[0x1F01E80<32>:word32] | 2<32>
l000046E8:
	branch (Mem14[0x1F01E80<32>:word32] & 2<32>) != 0<32> l000046F8_ds_t
l000046F8_ds_t:
l000046F8_ds_f:
l000046FC:
	word32 r11_29 = Mem26[0x1F01E88<32>:word32]
	r12Out = Mem14[0x1F01E84<32>:word32]
	return r11_29
fn000046C0_exit:


word32 fn0000473C(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004844
//      fn00004A6C
// MayUse:  r3:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r2 r4 r5
// Preserved:
fn0000473C_entry:
l0000473C:
	Mem20[0x1700004<32>:word32] = r3 & 1<32> | Mem5[0x1700004<32>:word32] & 0xFFFFFFFE<32>
	return dwLoc14
fn0000473C_exit:


void fn00004788()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004844
// MayUse: 
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn00004788_entry:
l00004788:
l00004790:
	branch (Mem0[0x1700030<32>:word32] & 1<32>) == 0<32> l00004790
l000047A4:
	return
fn00004788_exit:


void fn000047AC(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004A6C
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r2 r4 r5
// Preserved:
fn000047AC_entry:
l000047AC:
	Mem19[0x1700000<32>:word32] = r3 & 0x1F<32> | Mem5[0x1700000<32>:word32] & 0xFFFFFFE0<32>
	return
fn000047AC_exit:


void fn000047F4(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000490C
//      fn00004A6C
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r3 r4 r5
// Preserved: r1
fn000047F4_entry:
l000047F4:
	branch r3 == 0<32> l000047FC_ds_t
l000047FC_ds_t:
l00004814:
	Mem7[0x1700080<32>:word32] = r3
l000047FC_ds_f:
l00004800:
	branch !(r3 == 1<32>) l00004808_ds_t
l00004808_ds_t:
l00004808_ds_f:
l0000480C:
l00004824:
	Mem16[0x1700080<32>:word32] = 0x11101100<32>
	Mem19[0x1700020<32>:word32] = -15<i32>
l0000483C:
	return
fn000047F4_exit:


void fn00004844()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AC14
//      fn00010570
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r7
// Preserved: r1 r2 r9
fn00004844_entry:
l00004844:
	word32 r2_12 = fn0000473C(-1<i32>)
	fn0000AEDC(0xB000<32>)
	fn00004788()
	fn0000AEDC(0xB001<32>)
	word32 r1_11 = <invalid>
	Mem26[r1_11:word32] = Mem6[0x1700020<32>:word32]
	Mem29[r1_11:word32] = Mem26[r1_11:word32] & r2_12
	Mem31[0x1700020<32>:word32] = Mem29[r1_11:word32]
	fn0000460C(0<i32>, 0<32>)
	word32 r1_35 = <invalid>
	Mem45[r1_35:word32] = Mem31[0x1F01C30<32>:word32]
	Mem48[r1_35:word32] = Mem45[r1_35:word32] & r2_12
	Mem50[0x1F01C30<32>:word32] = Mem48[r1_35:word32]
	fn0000460C(0<i32>, 0<32>)
	fn0000460C(-1<i32>, 0<i32>)
	fn0000460C(-2<i32>, 0<i32>)
	fn0000460C(-3<i32>, 0<i32>)
l00004904_thunk_fn0000AEDC:
	fn0000AEDC(0xB002<32>)
	return
fn00004844_exit:


word32 fn0000490C(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AC14
//      fn00010570
// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000490C_entry:
l0000490C:
	fn000047F4(0<i32>)
	fn0000AEDC(0xB003<32>)
	Mem20[0x1F01D40<32>:word32] = 0<i32>
	fn0000C768(-1<i32>)
	word32 r2_36 = fn0000B950(-1<i32>)
	fn0000AEDC(0xB004<32>)
	word32 r15_53
	fn000043D0(r2_36, r2_36, r2_36, r15, out r15_53)
l00004970_thunk_fn0000AEDC:
	fn0000AEDC(0xB005<32>)
	return r15_53
fn0000490C_exit:


void fn00004978()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r7
// Preserved: r1 r9
fn00004978_entry:
l00004978:
	fn0000AEDC(0xB00C<32>)
	Mem13[0x1F01C30<32>:word32] = Mem5[0x1F01C30<32>:word32] | 1<32>
	fn0000460C(0<i32>, -3<i32>)
	fn0000AEDC(0xB00D<32>)
	return
fn00004978_exit:


word32 fn000049C0(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004A6C
//      fn00012214
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r2
// Trashed: CV r1 r2 r4 r5
// Preserved:
fn000049C0_entry:
l000049C0:
	Mem17[r4 + 0x2E0014<32> << 3<32>:word32] = r3
	Mem18[(r4 << 3<32>) + 0x17000A4<32>:word32] = 0<i32>
	return dwLoc0C
fn000049C0_exit:


void fn00004A00(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004A6C
//      fn00004B44
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..7]
// LiveOut:
// Trashed: CV r1 r2 r3 r5 r7
// Preserved:
fn00004A00_entry:
l00004A00:
	word32 r3_9 = (r3 << 4<32>) + 0x1700000<32>
	Mem28[r3_9:word32] = CONVERT(SLICE(r5, byte, 0), byte, int32) << r4 + -24<i32> | (-1<i32> << r4 + -24<i32> ^ 0xFFFF<32>) & Mem6[r3_9:word32]
	return
fn00004A00_exit:


word32 fn00004A6C(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn00004A6C_entry:
l00004A6C:
	word32 r15_25
	word32 r14_24 = fn000043D0(0<i32>, 0<32>, -1<i32>, r15, out r15_25)
	fn0000AEDC(0xB006<32>)
	fn0000B950(-1<i32>)
	word32 r2_46 = fn0000C768(-1<i32>)
	fn0000AEDC(0xB007<32>)
	Mem57[0x1F01D40<32>:word32] = r2_46
	fn0000460C(0<i32>, 0<32>)
	fn000047F4(0<i32>)
	fn0000AEDC(0xB008<32>)
	fn000047AC(0<i32>)
	fn0000AEDC(0xB009<32>)
	word32 r2_90 = fn0000473C(0<i32>)
	fn0000AEDC(0xB00A<32>)
	fn000047F4(r2_90)
	fn00004A00(0<i32>, 0<32>, fn000049C0(r14_24, 0<i32>))
	fn0000AEDC(0xB00B<32>)
	return r15_25
fn00004A6C_exit:


void fn00004B44(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012214
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r26 r9
fn00004B44_entry:
l00004B44:
	word32 r14_16 = (r3 << 2<32>) + 0x1700080<32>
	word32 r2_18 = -1<i32> << r4
	Mem32[r14_16:word32] = (r2_18 ^ 0xFFFF<32>) & Mem15[r14_16:word32]
	word32 r16_37 = (r3 << 2<32>) + 0x1F01C30<32>
	Mem42[r16_37:word32] = (r2_18 ^ 0xFFFF<32>) & Mem32[r16_37:word32]
	fn00004A00(r3, r4, -1<i32>)
	word32 r15_62
	fn000043D0(r3, r4, -1<i32>, r15, out r15_62)
	word32 r22_71 = (r3 << 2<32>) + 0x1F01500<32>
	Mem75[r22_71:word32] = (r2_18 ^ 0xFFFF<32>) & Mem42[r22_71:word32]
	__csync()
	word32 r14_81
	word32 r15_127
	word32 r2_78 = fn0000C8A0(-1<i32>, r15_62, out r14_81, out r15_127)
	Mem96[r16_37:word32] = r2_78 | Mem75[r16_37:word32]
	Mem99[r14_81:word32] = Mem96[r14_81:word32] | r2_78
	Mem104[0x1700020<32>:word32] = r2_78 | Mem99[0x1700020<32>:word32]
	return
fn00004B44_exit:


void fn00004C48(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012214
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r16 r18 r2 r9
fn00004C48_entry:
l00004C48:
	word32 r5_16 = (r3 << 2<32>) + 0x1700030<32>
	word32 r3_21 = -1<i32> << r4 + -16<i32>
l00004C84:
	branch (r3_21 & Mem23[r5_16:word32]) == 0<32> l00004C94_ds_t
l00004C94_ds_t:
l00004C94_ds_f:
l00004C98:
	word32 r5_36 = -1<i32> << r4
	Mem41[0x1700020<32>:word32] = (r5_36 ^ 0xFFFF<32>) & Mem23[0x1700020<32>:word32]
	word32 r4_45 = (r3 << 2<32>) + 0x1F01500<32>
	Mem49[r4_45:word32] = Mem41[r4_45:word32] | r5_36
	__csync()
	word32 r14_56
	word32 r15_62
	word32 r2_53 = fn0000C8A0(-1<i32>, r15, out r14_56, out r15_62)
	Mem78[r14_56 + 0x1700080<32>:word32] = Mem49[r14_56 + 0x1700080<32>:word32] & (r5_36 ^ 0xFFFF<32>)
	Mem84[r14_56 + 0x1F01C30<32>:word32] = Mem78[r14_56 + 0x1F01C30<32>:word32] & (r5_36 ^ 0xFFFF<32>)
l00004D28_thunk_fn000043D0:
	word32 r15_116
	fn000043D0(r3, r2_53, 0<i32>, r15_62, out r15_116)
	return
fn00004C48_exit:


word32 fn00004D60(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000073EC
// MayUse:  r3:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00004D60_entry:
l00004D60:
	word32 r5_5 = Mem0[r3 + 84<i32>:word32]
	word32 r4_6 = Mem0[r3 + 88<i32>:word32]
	word32 r3_18 = (r4_6 & 0xF<32>) * 2<32> | (r5_5 & 0xF<32>) << 9<32>
	word32 r2_22 = 0x1C63310<32>
l00004D9C:
	Mem30[r2_22:word32] = Mem26[r2_22:word32] | r3_18
	r2_22 = r2_22 + -4<i32>
	branch r2_22 != 0x1C63334<32> l00004D9C
l00004DC0:
	word32 r3_42 = (r4_6 & 0xF0<32>) >>u 3<32> | (r5_5 & 0xF0<32>) << 5<32>
	word32 r2_44 = 0x1C63390<32>
l00004DDC:
	Mem52[r2_44:word32] = Mem46[r2_44:word32] | r3_42
	r2_44 = r2_44 + -4<i32>
	branch r2_44 != 0x1C633B4<32> l00004DDC
l00004E00:
	word32 r3_62 = (r4_6 & 0xF00<32>) >>u 7<32> | (r5_5 & 0xF00<32>) << 1<32>
	word32 r2_64 = 0x1C63410<32>
l00004E1C:
	Mem72[r2_64:word32] = Mem66[r2_64:word32] | r3_62
	r2_64 = r2_64 + -4<i32>
	branch r2_64 != 0x1C63434<32> l00004E3C_ds_t
l00004E3C_ds_t:
l00004E3C_ds_f:
l00004E40:
	word32 r2_84 = (r4_6 & 0xF000<32>) >>u 0xB<32> | (r5_5 & 0xF000<32>) >>u 3<32>
	word32 r6_85 = 0x1C63490<32>
l00004E58:
	Mem93[r6_85:word32] = Mem87[r6_85:word32] | r2_84
	r6_85 = r6_85 + -4<i32>
	branch r6_85 != 0x1C634B4<32> l00004E78_ds_t
l00004E78_ds_t:
l00004E78_ds_f:
l00004E7C:
	Mem112[0x1C63100<32>:word32] = Mem93[0x1C63100<32>:word32] & 0xFBFFFFFF<32>
	word32 r12_106 = (r5_5 & 0xF0000<32>) >>u 0x10<32>
	word32 r8_114 = r12_106 << 9<32> | (r4_6 & 0xF0000<32>) >>u 0x10<32>
	Mem119[0x1C63334<32>:word32] = r8_114 | Mem112[0x1C63334<32>:word32]
	Mem125[0x1C63338<32>:word32] = r8_114 | Mem119[0x1C63338<32>:word32]
	word32 r11_126 = (r5_5 & 0xF00000<32>) >>u 0x14<32>
	word32 r8_133 = r11_126 << 9<32> | (r4_6 & 0xF00000<32>) >>u 0x14<32>
	Mem135[0x1C633B4<32>:word32] = r8_133 | Mem125[0x1C633B4<32>:word32]
	Mem140[0x1C633B8<32>:word32] = r8_133 | Mem135[0x1C633B8<32>:word32]
	word32 r8_143 = (r5_5 & 0xF000000<32>) >>u 0x18<32>
	word32 r13_149 = r8_143 << 9<32> | (r4_6 & 0xF000000<32>) >>u 0x18<32>
	Mem153[0x1C63434<32>:word32] = r13_149 | Mem140[0x1C63434<32>:word32]
	Mem158[0x1C63438<32>:word32] = r13_149 | Mem153[0x1C63438<32>:word32]
	word32 r4_162 = r5_5 >>u 0x1C<32> << 9<32> | r4_6 >>u 0x1C<32>
	Mem164[r6_85:word32] = r4_162 | Mem158[r6_85:word32]
	Mem168[0x1C634B8<32>:word32] = r4_162 | Mem164[0x1C634B8<32>:word32]
	Mem172[0x1C6333C<32>:word32] = r12_106 << 0x19<32> | Mem168[0x1C6333C<32>:word32]
	Mem176[0x1C633BC<32>:word32] = r11_126 << 0x19<32> | Mem172[0x1C633BC<32>:word32]
	Mem180[0x1C6343C<32>:word32] = r8_143 << 0x19<32> | Mem176[0x1C6343C<32>:word32]
	Mem185[0x1C634BC<32>:word32] = r5_5 >>u 0x1C<32> << 0x19<32> | Mem180[0x1C634BC<32>:word32]
	Mem188[0x1C63100<32>:word32] = Mem185[0x1C63100<32>:word32] | 0x4000000<32>
	word32 r14_195
	word32 r15_201
	word32 r2_192 = fn0000C8A0(-1<i32>, 0x4000000<32>, out r14_195, out r15_201)
	word32 r3_208 = Mem188[r14_195 + 80<i32>:word32]
	word32 r4_210 = (r3_208 & 0xF0<32>) << 4<32>
l00004FF0:
	Mem218[r2_192:word32] = Mem212[r2_192:word32] | r4_210
	r2_192 = r2_192 + -4<i32>
	branch r2_192 != 0x1C63268<32> l00005010_ds_t
l00005010_ds_t:
l00005010_ds_f:
l00005014:
	Mem231[0x1C63218<32>:word32] = (r3_208 & 0xF<32>) << 8<32> | Mem218[0x1C63218<32>:word32]
	Mem238[0x1C6321C<32>:word32] = r3_208 & 0xF00<32> | Mem231[0x1C6321C<32>:word32]
	Mem241[0x1C63280<32>:word32] = (r3_208 & 0xF000<32>) >>u 4<32> | Mem238[0x1C63280<32>:word32]
	return r15_201
fn00004D60_exit:


void fn00005078()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007FAC
// MayUse: 
// LiveOut:
// Trashed: CV r11 r12 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn00005078_entry:
l00005078:
	Mem7[0x1C6200C<32>:word32] = -399<i32>
	Mem11[0x1C62090<32>:word32] = 0x10000<32>
	Mem16[0x1C62098<32>:word32] = -1<i32>
	Mem21[0x1C62010<32>:word32] = 0x12C000D<32>
	Mem25[0x1C62014<32>:word32] = 0x960104<32>
	Mem28[0x1C62018<32>:word32] = 0x258000D<32>
	Mem31[0x1C6201C<32>:word32] = 0xC80190<32>
	Mem34[0x1C62020<32>:word32] = 0x200000D<32>
	Mem39[0x1C62024<32>:word32] = 0x600100<32>
	Mem44[0x1C62028<32>:word32] = 0x100000D<32>
	Mem47[0x1C6202C<32>:word32] = 0x200080<32>
	Mem51[0x1C62030<32>:word32] = 0x76C000D<32>
	Mem55[0x1C62034<32>:word32] = 0x3E805DC<32>
	Mem57[0x1C62038<32>:word32] = 0x96000D<32>
	Mem61[0x1C6203C<32>:word32] = 0x640078<32>
	Mem64[0x1C62040<32>:word32] = 0x1000009<32>
	Mem68[0x1C62044<32>:word32] = 0x400080<32>
	Mem70[0x1C62048<32>:word32] = 0x100000D<32>
	Mem72[0x1C6204C<32>:word32] = 0x400080<32>
	Mem74[0x1C62050<32>:word32] = 0x100000D<32>
	Mem76[0x1C62054<32>:word32] = 0x400080<32>
	Mem81[0x1C62058<32>:word32] = 0x4000009<32>
	Mem83[0x1C6205C<32>:word32] = 0x400100<32>
	Mem87[0x1C62060<32>:word32] = 0xD48030D<32>
	Mem89[0x1C62064<32>:word32] = 0x4000960<32>
	Mem92[0x1C62068<32>:word32] = 0x258000D<32>
	Mem93[0x1C6206C<32>:word32] = 0xC80190<32>
	return
fn00005078_exit:


void fn000051E8(word32 r3, word32 r15, word32 dwArg60, word32 dwArg64, word32 dwArg68, word32 dwArg6C, word32 dwArg70, word32 dwArg74, word32 dwArg78, word32 dwArg7C, word32 dwArg80, word32 dwArg84, word32 dwArg88, word32 dwArg8C, word32 dwArg90)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000073EC
// MayUse:  r15:[0..31] r3:[0..31] Stack +0060:[0..31] Stack +0064:[0..31] Stack +0068:[0..31] Stack +006C:[0..31] Stack +0070:[0..31] Stack +0074:[0..31] Stack +0078:[0..31] Stack +007C:[0..31] Stack +0080:[0..31] Stack +0084:[0..31] Stack +0088:[0..31] Stack +008C:[0..31] Stack +0090:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r19 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r26 r28 r30 r9
fn000051E8_entry:
l000051E8:
	word32 r24_1817
	word32 r16_1280
	word32 r18_1261
	word32 r14_28 = Mem27[r3:word32]
	word32 r1_1017 = fp - 96<i32>
	branch (Mem0[r3 + 92<i32>:word32] & 2<32>) == 0<32> l00005234_ds_t
l00005234_ds_t:
	r24_1817 = Mem27[r3 + 4<i32>:word32]
l000052D0:
	branch r24_1817 != 3<32> l000052D8_ds_t
l000052D8_ds_t:
l000054E8:
	branch r24_1817 != 2<32> l000054EC_ds_t
l000054EC_ds_t:
l000056F8:
	word32 r13_1011
	word32 r22_1012
	branch r24_1817 != 6<32> l000056FC_ds_t
l000056FC_ds_t:
l000059C4:
	branch r24_1817 != 7<32> l000059C8_ds_t
l000059C8_ds_t:
l00005C90:
	r18_1261 = 0xFFFFFFFD<32>
	r16_1280 = -8<i32>
l000059C8_ds_f:
l000059CC:
	word32 r16_68 = (r14_28 >>u 1<32>) *s -50<i32>
	word32 r11_73
	word32 r15_78
	fn0000FEDC(r16_68, -1000<i32>, r15, out r11_73, out r15_78)
	word32 r11_89
	word32 r15_91
	fn0001003C(r16_68, -1000<i32>, r15_78, out r11_89, out r15_91)
	word32 r11_105 = r11_73 + ((0<32> - r11_89 | r11_89) >>u 0x1F<32>)
	word32 r1_72 = <invalid>
	branch !((r11_105 & 0xFF<32>) <=u 3<32>) l00005A0C_ds_t
l00005A0C_ds_t:
	Mem109[r1_72 + 20<i32>:word32] = r11_105 & 0xFF<32>
l00005A0C_ds_f:
	Mem110[r1_72 + 20<i32>:word32] = r11_105 & 0xFF<32>
l00005A10:
	Mem113[r1_72 + 20<i32>:word32] = -4<i32>
l00005A18:
	word32 r16_118 = (r14_28 >>u 1<32>) * 2<32> + ((r14_28 >>u 1<32>) << 3<32>)
	word32 r11_123
	word32 r15_128
	fn0000FEDC(r16_118, -1000<i32>, r15_91, out r11_123, out r15_128)
	word32 r11_139
	word32 r15_141
	fn0001003C(r16_118, -1000<i32>, r15_128, out r11_139, out r15_141)
	word32 r5_155 = r11_123 + ((0<32> - r11_139 | r11_139) >>u 0x1F<32>)
	word32 r1_122 = <invalid>
	branch !((r5_155 & 0xFF<32>) == 0<32>) l00005A5C_ds_t
l00005A5C_ds_t:
	Mem159[r1_122 + 8<i32>:word32] = r5_155 & 0xFF<32>
l00005A5C_ds_f:
	Mem160[r1_122 + 8<i32>:word32] = r5_155 & 0xFF<32>
l00005A60:
	Mem163[r1_122 + 8<i32>:word32] = -1<i32>
l00005A68:
	word32 r16_167 = (r14_28 >>u 1<32>) * 2<32> + (r14_28 >>u 1<32>)
	word32 r11_173
	word32 r15_178
	fn0000FEDC(r16_167 << 3<32>, -1000<i32>, r15_141, out r11_173, out r15_178)
	word32 r11_189
	word32 r15_191
	fn0001003C(r16_167 << 3<32>, -1000<i32>, r15_178, out r11_189, out r15_191)
	word32 r6_205 = r11_173 + ((0<32> - r11_189 | r11_189) >>u 0x1F<32>)
	word32 r1_172 = <invalid>
	branch !((r6_205 & 0xFF<32>) <=u 1<32>) l00005AAC_ds_t
l00005AAC_ds_t:
	Mem209[r1_172 + 4<i32>:word32] = r6_205 & 0xFF<32>
l00005AAC_ds_f:
	Mem210[r1_172 + 4<i32>:word32] = r6_205 & 0xFF<32>
l00005AB0:
	Mem213[r1_172 + 4<i32>:word32] = -2<i32>
l00005AB8:
	word32 r16_218 = (r14_28 >>u 1<32>) *s -70<i32>
	word32 r11_222
	word32 r15_224
	fn0001003C(r16_218, -1000<i32>, r15_191, out r11_222, out r15_224)
	word32 r11_243
	word32 r15_248
	fn0000FEDC(r16_218, -1000<i32>, r15_224, out r11_243, out r15_248)
	word32 r1_242 = <invalid>
	Mem260[r1_242 + 24<i32>:word32] = ((0<32> - r11_222 | r11_222) >>u 0x1F<32>) + r11_243 & 0xFF<32>
	word32 r16_241 = r14_28 >>u 1<32> << 3<32>
	word32 r11_261
	word32 r15_263
	fn0001003C(r16_241, -1000<i32>, r15_248, out r11_261, out r15_263)
	word32 r11_281
	word32 r15_286
	fn0000FEDC(r16_241, -1000<i32>, r15_263, out r11_281, out r15_286)
	word32 r11_293 = ((0<32> - r11_261 | r11_261) >>u 0x1F<32>) + r11_281
	word32 r1_280 = <invalid>
	branch (r11_293 & 0xFF<32>) <=u 1<32> l00005B28_ds_t
l00005B28_ds_t:
	Mem297[r1_280:word32] = r11_293 & 0xFF<32>
l000062A8:
	Mem300[r1_280:word32] = -2<i32>
	Mem302[r1_280 + 16<i32>:word32] = -2<i32>
	r18_1261 = 0xFFFFFFFE<32>
l00005B28_ds_f:
	Mem303[r1_280:word32] = r11_293 & 0xFF<32>
l00005B2C:
	Mem305[r1_280 + 16<i32>:word32] = r11_293 & 0xFF<32>
	r18_1261 = r11_293 & 0xFF<32>
l00005B34:
	word32 r20_350
	word32 r20_309 = (r14_28 >>u 1<32> << 4<32>) - (r14_28 >>u 1<32>)
	word32 r11_314
	word32 r15_319
	fn0000FEDC(r20_309, -1000<i32>, r15_286, out r11_314, out r15_319)
	word32 r11_330
	word32 r15_332
	fn0001003C(r20_309, -1000<i32>, r15_319, out r11_330, out r15_332)
	word32 r16_346 = r11_314 + ((0<32> - r11_330 | r11_330) >>u 0x1F<32>)
	r16_1280 = r16_346 & 0xFF<32>
	branch !((r16_346 & 0xFF<32>) <=u 1<32>) l00005B74_ds_t
l00005B74_ds_t:
	r20_350 = (r14_28 >>u 1<32>) * 2<32>
l00005B74_ds_f:
	r20_350 = (r14_28 >>u 1<32>) * 2<32>
l00005B78:
	r16_1280 = -2<i32>
l00005B7C:
	word32 r20_359 = r20_350 + (r14_28 >>u 1<32>)
	word32 r11_366
	word32 r15_371
	fn0000FEDC(r20_359 * 9<32>, -1000<i32>, r15_332, out r11_366, out r15_371)
	word32 r11_382
	word32 r15_384
	fn0001003C(r20_359 * 9<32>, -1000<i32>, r15_371, out r11_382, out r15_384)
	word32 r7_398 = r11_366 + ((0<32> - r11_382 | r11_382) >>u 0x1F<32>)
	word32 r1_365 = <invalid>
	branch !((r7_398 & 0xFF<32>) <=u 1<32>) l00005BC0_ds_t
l00005BC0_ds_t:
	Mem402[r1_365 + 12<i32>:word32] = r7_398 & 0xFF<32>
l00005BC0_ds_f:
	Mem403[r1_365 + 12<i32>:word32] = r7_398 & 0xFF<32>
l00005BC4:
	Mem406[r1_365 + 12<i32>:word32] = -2<i32>
l00005BCC:
	word32 r20_410 = (r14_28 >>u 1<32>) * 2<32> + (r14_28 >>u 1<32>)
	word32 r20_412 = (r20_410 << 3<32>) - r20_410
	word32 r11_418
	word32 r15_423
	fn0000FEDC(r20_412 * 2<32>, -1000<i32>, r15_384, out r11_418, out r15_423)
	word32 r11_437
	word32 r15_439
	fn0001003C(r20_412 * 2<32>, -1000<i32>, r15_423, out r11_437, out r15_439)
	word32 r1_417 = <invalid>
	Mem456[r1_417 + 28<i32>:word32] = r11_418 + ((0<32> - r11_437 | r11_437) >>u 0x1F<32>) & 0xFF<32>
	word32 r20_434 = (r14_28 >>u 1<32>) *s -3900<i32>
	word32 r11_459
	word32 r15_461
	fn0001003C(r20_434, -1000<i32>, r15_439, out r11_459, out r15_461)
	word32 r11_481
	word32 r15_486
	fn0000FEDC(r20_434, -1000<i32>, r15_461, out r11_481, out r15_486)
	word32 r1_480 = <invalid>
	Mem499[r1_480 + 32<i32>:word32] = ((0<32> - r11_459 | r11_459) >>u 0x1F<32>) + r11_481 >>u 5<32> & 0xFFFF<32>
	word32 r20_475 = (r14_28 >>u 1<32>) *s -210<i32>
	word32 r11_501
	word32 r15_506
	fn0000FEDC(r20_475, -1000<i32>, r15_486, out r11_501, out r15_506)
	word32 r11_517
	word32 r15_3141
	fn0001003C(r20_475, -1000<i32>, r15_506, out r11_517, out r15_3141)
	r1_1017 = <invalid>
	r22_1012 = r11_501
	r13_1011 = (0<32> - r11_517 | r11_517) >>u 0x1F<32>
l000056FC_ds_f:
l00005700:
	word32 r16_538 = (r14_28 >>u 1<32>) *s -50<i32>
	word32 r11_542
	word32 r15_547
	fn0000FEDC(r16_538, -1000<i32>, r15, out r11_542, out r15_547)
	word32 r11_558
	word32 r15_560
	fn0001003C(r16_538, -1000<i32>, r15_547, out r11_558, out r15_560)
	word32 r11_574 = r11_542 + ((0<32> - r11_558 | r11_558) >>u 0x1F<32>)
	word32 r1_541 = <invalid>
	branch !((r11_574 & 0xFF<32>) <=u 3<32>) l00005740_ds_t
l00005740_ds_t:
	Mem578[r1_541 + 20<i32>:word32] = r11_574 & 0xFF<32>
l00005740_ds_f:
	Mem579[r1_541 + 20<i32>:word32] = r11_574 & 0xFF<32>
l00005744:
	Mem582[r1_541 + 20<i32>:word32] = -4<i32>
l0000574C:
	word32 r16_587 = (r14_28 >>u 1<32>) * 2<32> + ((r14_28 >>u 1<32>) << 3<32>)
	word32 r11_592
	word32 r15_597
	fn0000FEDC(r16_587, -1000<i32>, r15_560, out r11_592, out r15_597)
	word32 r11_608
	word32 r15_610
	fn0001003C(r16_587, -1000<i32>, r15_597, out r11_608, out r15_610)
	word32 r5_624 = r11_592 + ((0<32> - r11_608 | r11_608) >>u 0x1F<32>)
	word32 r1_591 = <invalid>
	branch !((r5_624 & 0xFF<32>) == 0<32>) l00005790_ds_t
l00005790_ds_t:
	Mem628[r1_591 + 8<i32>:word32] = r5_624 & 0xFF<32>
l00005790_ds_f:
	Mem629[r1_591 + 8<i32>:word32] = r5_624 & 0xFF<32>
l00005794:
	Mem632[r1_591 + 8<i32>:word32] = -1<i32>
l0000579C:
	word32 r16_636 = (r14_28 >>u 1<32>) * 2<32> + (r14_28 >>u 1<32>)
	word32 r11_642
	word32 r15_647
	fn0000FEDC(r16_636 << 3<32>, -1000<i32>, r15_610, out r11_642, out r15_647)
	word32 r11_658
	word32 r15_660
	fn0001003C(r16_636 << 3<32>, -1000<i32>, r15_647, out r11_658, out r15_660)
	word32 r6_674 = r11_642 + ((0<32> - r11_658 | r11_658) >>u 0x1F<32>)
	word32 r1_641 = <invalid>
	branch !((r6_674 & 0xFF<32>) <=u 1<32>) l000057E0_ds_t
l000057E0_ds_t:
	Mem678[r1_641 + 4<i32>:word32] = r6_674 & 0xFF<32>
l000057E0_ds_f:
	Mem679[r1_641 + 4<i32>:word32] = r6_674 & 0xFF<32>
l000057E4:
	Mem682[r1_641 + 4<i32>:word32] = -2<i32>
l000057EC:
	word32 r16_687 = (r14_28 >>u 1<32>) *s -70<i32>
	word32 r11_691
	word32 r15_693
	fn0001003C(r16_687, -1000<i32>, r15_660, out r11_691, out r15_693)
	word32 r11_712
	word32 r15_717
	fn0000FEDC(r16_687, -1000<i32>, r15_693, out r11_712, out r15_717)
	word32 r1_711 = <invalid>
	Mem729[r1_711 + 24<i32>:word32] = ((0<32> - r11_691 | r11_691) >>u 0x1F<32>) + r11_712 & 0xFF<32>
	word32 r16_710 = r14_28 >>u 1<32> << 3<32>
	word32 r11_730
	word32 r15_732
	fn0001003C(r16_710, -1000<i32>, r15_717, out r11_730, out r15_732)
	word32 r11_750
	word32 r15_755
	fn0000FEDC(r16_710, -1000<i32>, r15_732, out r11_750, out r15_755)
	word32 r6_762 = ((0<32> - r11_730 | r11_730) >>u 0x1F<32>) + r11_750
	word32 r1_749 = <invalid>
	branch (r6_762 & 0xFF<32>) == 0<32> l0000585C_ds_t
l0000585C_ds_t:
	Mem766[r1_749:word32] = r6_762 & 0xFF<32>
l00006294:
	Mem768[r1_749:word32] = -1<i32>
l0000585C_ds_f:
	Mem771[r1_749:word32] = r6_762 & 0xFF<32>
l00005860:
	branch (r6_762 & 0xFF<32>) <=u 1<32> l00005868_ds_t
l00005868_ds_t:
l000062A0:
	Mem777[r1_749 + 16<i32>:word32] = -2<i32>
	r18_1261 = -2<i32>
l00005868_ds_f:
l0000586C:
	Mem781[r1_749 + 16<i32>:word32] = r6_762 & 0xFF<32>
	r18_1261 = r6_762 & 0xFF<32>
l00005874:
	word32 r20_828
	word32 r20_786 = (r14_28 >>u 1<32> << 4<32>) - (r14_28 >>u 1<32>)
	word32 r11_792
	word32 r15_797
	fn0000FEDC(r20_786, -1000<i32>, r15_755, out r11_792, out r15_797)
	word32 r11_808
	word32 r15_810
	fn0001003C(r20_786, -1000<i32>, r15_797, out r11_808, out r15_810)
	word32 r16_824 = r11_792 + ((0<32> - r11_808 | r11_808) >>u 0x1F<32>)
	r16_1280 = r16_824 & 0xFF<32>
	branch !((r16_824 & 0xFF<32>) <=u 1<32>) l000058B4_ds_t
l000058B4_ds_t:
	r20_828 = (r14_28 >>u 1<32>) * 2<32>
l000058B4_ds_f:
	r20_828 = (r14_28 >>u 1<32>) * 2<32>
l000058B8:
	r16_1280 = -2<i32>
l000058BC:
	word32 r20_837 = r20_828 + (r14_28 >>u 1<32>)
	word32 r11_844
	word32 r15_849
	fn0000FEDC(r20_837 * 9<32>, -1000<i32>, r15_810, out r11_844, out r15_849)
	word32 r11_860
	word32 r15_862
	fn0001003C(r20_837 * 9<32>, -1000<i32>, r15_849, out r11_860, out r15_862)
	word32 r7_876 = r11_844 + ((0<32> - r11_860 | r11_860) >>u 0x1F<32>)
	word32 r1_843 = <invalid>
	branch !((r7_876 & 0xFF<32>) <=u 1<32>) l00005900_ds_t
l00005900_ds_t:
	Mem880[r1_843 + 12<i32>:word32] = r7_876 & 0xFF<32>
l00005900_ds_f:
	Mem881[r1_843 + 12<i32>:word32] = r7_876 & 0xFF<32>
l00005904:
	Mem884[r1_843 + 12<i32>:word32] = -2<i32>
l0000590C:
	word32 r20_888 = (r14_28 >>u 1<32>) * 2<32> + (r14_28 >>u 1<32>)
	word32 r20_890 = (r20_888 << 3<32>) - r20_888
	word32 r11_896
	word32 r15_901
	fn0000FEDC(r20_890 * 2<32>, -1000<i32>, r15_862, out r11_896, out r15_901)
	word32 r11_915
	word32 r15_917
	fn0001003C(r20_890 * 2<32>, -1000<i32>, r15_901, out r11_915, out r15_917)
	word32 r1_895 = <invalid>
	Mem934[r1_895 + 28<i32>:word32] = r11_896 + ((0<32> - r11_915 | r11_915) >>u 0x1F<32>) & 0xFF<32>
	word32 r20_912 = (r14_28 >>u 1<32>) *s -3900<i32>
	word32 r11_937
	word32 r15_939
	fn0001003C(r20_912, -1000<i32>, r15_917, out r11_937, out r15_939)
	word32 r11_959
	word32 r15_964
	fn0000FEDC(r20_912, -1000<i32>, r15_939, out r11_959, out r15_964)
	word32 r1_958 = <invalid>
	Mem977[r1_958 + 32<i32>:word32] = ((0<32> - r11_937 | r11_937) >>u 0x1F<32>) + r11_959 >>u 5<32> & 0xFFFF<32>
	word32 r20_953 = (r14_28 >>u 1<32>) *s -210<i32>
	word32 r11_979
	word32 r15_984
	fn0000FEDC(r20_953, -1000<i32>, r15_964, out r11_979, out r15_984)
	word32 r11_995
	word32 r15_3140
	fn0001003C(r20_953, -1000<i32>, r15_984, out r11_995, out r15_3140)
	r1_1017 = <invalid>
	r22_1012 = r11_979
	r13_1011 = (0<32> - r11_995 | r11_995) >>u 0x1F<32>
l00005C80:
	Mem1018[r1_1017 + 36<i32>:word32] = r22_1012 + r13_1011 & 0xFFFF<32>
l000054EC_ds_f:
l000054F0:
	word32 r16_1022 = (r14_28 >>u 1<32>) *s -50<i32>
	word32 r11_1026
	word32 r15_1028
	fn0001003C(r16_1022, -1000<i32>, r15, out r11_1026, out r15_1028)
	word32 r11_1047
	word32 r15_1052
	fn0000FEDC(r16_1022, -1000<i32>, r15_1028, out r11_1047, out r15_1052)
	word32 r1_1046 = <invalid>
	Mem1065[r1_1046 + 20<i32>:word32] = ((0<32> - r11_1026 | r11_1026) >>u 0x1F<32>) + r11_1047 & 0xFF<32>
	word32 r20_1024 = (r14_28 >>u 1<32>) * 2<32>
	word32 r16_1042 = r14_28 >>u 1<32> << 3<32>
	word32 r18_1060 = r20_1024 + r16_1042
	word32 r11_1066
	word32 r15_1068
	fn0001003C(r18_1060, -1000<i32>, r15_1052, out r11_1066, out r15_1068)
	word32 r11_1086
	word32 r15_1091
	fn0000FEDC(r18_1060, -1000<i32>, r15_1068, out r11_1086, out r15_1091)
	word32 r1_1085 = <invalid>
	Mem1104[r1_1085 + 8<i32>:word32] = ((0<32> - r11_1066 | r11_1066) >>u 0x1F<32>) + r11_1086 & 0xFF<32>
	word32 r22_1100 = r14_28 >>u 1<32> << 4<32>
	word32 r18_1103 = (r14_28 >>u 1<32> << 2<32>) + r22_1100
	word32 r11_1108
	word32 r15_1110
	fn0001003C(r18_1103, -1000<i32>, r15_1091, out r11_1108, out r15_1110)
	word32 r11_1128
	word32 r15_1133
	fn0000FEDC(r18_1103, -1000<i32>, r15_1110, out r11_1128, out r15_1133)
	word32 r1_1127 = <invalid>
	Mem1147[r1_1127 + 4<i32>:word32] = ((0<32> - r11_1108 | r11_1108) >>u 0x1F<32>) + r11_1128 & 0xFF<32>
	word32 r18_1143 = (r14_28 >>u 1<32> << 6<32>) + (r14_28 >>u 1<32>)
	word32 r11_1148
	word32 r15_1150
	fn0001003C(r18_1143, -1000<i32>, r15_1133, out r11_1148, out r15_1150)
	word32 r11_1168
	word32 r15_1173
	fn0000FEDC(r18_1143, -1000<i32>, r15_1150, out r11_1168, out r15_1173)
	word32 r1_1167 = <invalid>
	Mem1186[r1_1167 + 24<i32>:word32] = ((0<32> - r11_1148 | r11_1148) >>u 0x1F<32>) + r11_1168 & 0xFF<32>
	word32 r11_1187
	word32 r15_1189
	fn0001003C(r16_1042, -1000<i32>, r15_1173, out r11_1187, out r15_1189)
	word32 r11_1207
	word32 r15_1212
	fn0000FEDC(r16_1042, -1000<i32>, r15_1189, out r11_1207, out r15_1212)
	word32 r22_1106 = r22_1100 - (r14_28 >>u 1<32>)
	word32 r11_1223
	word32 r15_1225
	fn0001003C(r22_1106, -1000<i32>, r15_1212, out r11_1223, out r15_1225)
	word32 r11_1242
	word32 r15_1247
	fn0000FEDC(r22_1106, -1000<i32>, r15_1225, out r11_1242, out r15_1247)
	word32 r20_1184 = r20_1024 + (r14_28 >>u 1<32>)
	word32 r20_1257 = (r20_1184 << 4<32>) - r20_1184
	word32 r11_1262
	word32 r15_1264
	fn0001003C(r20_1257, -1000<i32>, r15_1247, out r11_1262, out r15_1264)
	word32 r11_1285
	word32 r15_1290
	fn0000FEDC(r20_1257, -1000<i32>, r15_1264, out r11_1285, out r15_1290)
	word32 r1_1284 = <invalid>
	Mem1300[r1_1284 + 28<i32>:word32] = ((0<32> - r11_1262 | r11_1262) >>u 0x1F<32>) + r11_1285 & 0xFF<32>
	word32 r20_1278 = (r14_28 >>u 1<32>) *s -7800<i32>
	word32 r11_1303
	word32 r15_1305
	fn0001003C(r20_1278, -1000<i32>, r15_1290, out r11_1303, out r15_1305)
	word32 r11_1325
	word32 r15_1330
	fn0000FEDC(r20_1278, -1000<i32>, r15_1305, out r11_1325, out r15_1330)
	word32 r1_1324 = <invalid>
	Mem1343[r1_1324 + 32<i32>:word32] = ((0<32> - r11_1303 | r11_1303) >>u 0x1F<32>) + r11_1325 >>u 5<32> & 0xFFFF<32>
	word32 r20_1319 = (r14_28 >>u 1<32>) *s -328<i32>
	word32 r11_1345
	word32 r15_1350
	fn0000FEDC(r20_1319, -1000<i32>, r15_1330, out r11_1345, out r15_1350)
	word32 r11_1361
	word32 r15_3139
	fn0001003C(r20_1319, -1000<i32>, r15_1350, out r11_1361, out r15_3139)
	word32 r18_1221 = ((0<32> - r11_1187 | r11_1187) >>u 0x1F<32>) + r11_1207
	r1_1017 = <invalid>
	Mem1375[r1_1017 + 16<i32>:word32] = r18_1221 & 0xFF<32>
	word32 r16_1258 = ((0<32> - r11_1223 | r11_1223) >>u 0x1F<32>) + r11_1242
	Mem1377[r1_1017 + 12<i32>:word32] = r16_1258 & 0xFF<32>
	Mem1379[r1_1017:word32] = r24_1817
	Mem1383[r1_1017 + 36<i32>:word32] = r11_1345 + ((0<32> - r11_1361 | r11_1361) >>u 0x1F<32>) & 0xFFFF<32>
	r18_1261 = r18_1221 & 0xFF<32>
	r16_1280 = r16_1258 & 0xFF<32>
l000052D8_ds_f:
l000052DC:
	word32 r16_1388 = (r14_28 >>u 1<32>) *s -50<i32>
	word32 r11_1391
	word32 r15_1393
	fn0001003C(r16_1388, -1000<i32>, r15, out r11_1391, out r15_1393)
	word32 r11_1411
	word32 r15_1416
	fn0000FEDC(r16_1388, -1000<i32>, r15_1393, out r11_1411, out r15_1416)
	word32 r1_1410 = <invalid>
	Mem1431[r1_1410 + 20<i32>:word32] = ((0<32> - r11_1391 | r11_1391) >>u 0x1F<32>) + r11_1411 & 0xFF<32>
	word32 r16_1426 = (r14_28 >>u 1<32>) * 2<32> + ((r14_28 >>u 1<32>) << 3<32>)
	word32 r11_1432
	word32 r15_1434
	fn0001003C(r16_1426, -1000<i32>, r15_1416, out r11_1432, out r15_1434)
	word32 r11_1452
	word32 r15_1457
	fn0000FEDC(r16_1426, -1000<i32>, r15_1434, out r11_1452, out r15_1457)
	word32 r5_1464 = ((0<32> - r11_1432 | r11_1432) >>u 0x1F<32>) + r11_1452
	word32 r1_1451 = <invalid>
	branch !((r5_1464 & 0xFF<32>) <=u 1<32>) l00005354_ds_t
l00005354_ds_t:
	Mem1468[r1_1451 + 8<i32>:word32] = r5_1464 & 0xFF<32>
l00005354_ds_f:
	Mem1469[r1_1451 + 8<i32>:word32] = r5_1464 & 0xFF<32>
l00005358:
	Mem1472[r1_1451 + 8<i32>:word32] = -2<i32>
l00005360:
	word32 r16_1476 = (r14_28 >>u 1<32> << 4<32>) - (r14_28 >>u 1<32>)
	word32 r11_1480
	word32 r15_1482
	fn0001003C(r16_1476, -1000<i32>, r15_1457, out r11_1480, out r15_1482)
	word32 r11_1502
	word32 r15_1507
	fn0000FEDC(r16_1476, -1000<i32>, r15_1482, out r11_1502, out r15_1507)
	word32 r1_1501 = <invalid>
	Mem1519[r1_1501 + 4<i32>:word32] = ((0<32> - r11_1480 | r11_1480) >>u 0x1F<32>) + r11_1502 & 0xFF<32>
	word32 r16_1496 = (r14_28 >>u 1<32>) *s -53<i32>
	word32 r11_1520
	word32 r15_1522
	fn0001003C(r16_1496, -1000<i32>, r15_1507, out r11_1520, out r15_1522)
	word32 r11_1541
	word32 r15_1546
	fn0000FEDC(r16_1496, -1000<i32>, r15_1522, out r11_1541, out r15_1546)
	word32 r1_1540 = <invalid>
	Mem1558[r1_1540 + 24<i32>:word32] = ((0<32> - r11_1520 | r11_1520) >>u 0x1F<32>) + r11_1541 & 0xFF<32>
	word32 r16_1539 = r14_28 >>u 1<32> << 3<32>
	word32 r11_1559
	word32 r15_1561
	fn0001003C(r16_1539, -1000<i32>, r15_1546, out r11_1559, out r15_1561)
	word32 r11_1579
	word32 r15_1584
	fn0000FEDC(r16_1539, -1000<i32>, r15_1561, out r11_1579, out r15_1584)
	word32 r6_1591 = ((0<32> - r11_1559 | r11_1559) >>u 0x1F<32>) + r11_1579
	word32 r1_1578 = <invalid>
	branch (r6_1591 & 0xFF<32>) <=u 1<32> l00005408_ds_t
l00005408_ds_t:
	Mem1595[r1_1578:word32] = r6_1591 & 0xFF<32>
l00006280:
	Mem1598[r1_1578:word32] = -2<i32>
	Mem1600[r1_1578 + 16<i32>:word32] = -2<i32>
	r18_1261 = 0xFFFFFFFE<32>
l00005408_ds_f:
	Mem1601[r1_1578:word32] = r6_1591 & 0xFF<32>
l0000540C:
	Mem1603[r1_1578 + 16<i32>:word32] = r6_1591 & 0xFF<32>
	r18_1261 = r6_1591 & 0xFF<32>
l00005414:
	word32 r4_1606 = Mem1605[r1_1578 + 4<i32>:word32]
	branch r4_1606 <=u 1<32> l00005420_ds_t
l00005420_ds_t:
	r16_1280 = -2<i32>
l00005420_ds_f:
l00005424:
	r16_1280 = r4_1606
l00005428:
	word32 r11_1626
	word32 r15_1628
	fn0001003C((r14_28 >>u 1<32>) * 2<32> + ((r14_28 >>u 1<32>) << 5<32>) + (r14_28 >>u 1<32>), -1000<i32>, r15_1584, out r11_1626, out r15_1628)
	word32 r11_1647
	word32 r15_1652
	fn0000FEDC((r14_28 >>u 1<32>) *s -38<i32>, -1000<i32>, r15_1628, out r11_1647, out r15_1652)
	word32 r1_1646 = <invalid>
	Mem1662[r1_1646 + 28<i32>:word32] = ((0<32> - r11_1626 | r11_1626) >>u 0x1F<32>) + r11_1647 & 0xFF<32>
	word32 r20_1622 = (r14_28 >>u 1<32>) *s -7800<i32>
	word32 r11_1665
	word32 r15_1667
	fn0001003C(r20_1622, -1000<i32>, r15_1652, out r11_1665, out r15_1667)
	word32 r11_1687
	word32 r15_1692
	fn0000FEDC(r20_1622, -1000<i32>, r15_1667, out r11_1687, out r15_1692)
	word32 r1_1686 = <invalid>
	Mem1705[r1_1686 + 32<i32>:word32] = ((0<32> - r11_1665 | r11_1665) >>u 0x1F<32>) + r11_1687 >>u 5<32> & 0xFFFF<32>
	word32 r20_1681 = (r14_28 >>u 1<32>) *s -350<i32>
	word32 r11_1706
	word32 r15_1708
	fn0001003C(r20_1681, -1000<i32>, r15_1692, out r11_1706, out r15_1708)
	word32 r11_1726
	word32 r15_3136
	fn0000FEDC(r20_1681, -1000<i32>, r15_1708, out r11_1726, out r15_3136)
	r1_1017 = <invalid>
	Mem1741[r1_1017 + 12<i32>:word32] = Mem1705[r1_1017 + 4<i32>:word32]
	Mem1743[r1_1017 + 36<i32>:word32] = ((0<32> - r11_1706 | r11_1706) >>u 0x1F<32>) + r11_1726 & 0xFFFF<32>
l00005CE0:
	word32 r4_1755 = Mem1745[r1_1017 + 12<i32>:word32]
	word32 r3_1758 = Mem1745[r1_1017 + 16<i32>:word32]
	word32 r6_1759 = Mem1745[r1_1017 + 28<i32>:word32]
	Mem1780[r3 + 40<i32>:word32] = Mem1745[r1_1017 + 24<i32>:word32] | 0x400000<32> | Mem1745[r1_1017 + 4<i32>:word32] << 6<32> | Mem1745[r1_1017 + 8<i32>:word32] << 0xB<32> | Mem1745[r1_1017 + 20<i32>:word32] << 0xF<32>
	word32 r4_1789 = Mem1780[r1_1017:word32]
	word32 r6_1793 = Mem1780[r1_1017 + 36<i32>:word32]
	word32 r3_1806 = Mem1780[r1_1017 + 32<i32>:word32]
	Mem1812[r1_1017 + 48<i32>:word32] = -2<i32>
	Mem1813[r3 + 44<i32>:word32] = r4_1755 << 6<32> | r16_1280 << 0xB<32> | r6_1759 | r3_1758 << 0xF<32> | r18_1261 << 0x14<32> | r4_1789 << 0x17<32>
	Mem1816[r3 + 48<i32>:word32] = r6_1793 << 0xC<32> | r3_1806
	r15 = r4_1789 << 0x17<32>
l00005234_ds_f:
	r24_1817 = Mem27[r3 + 4<i32>:word32]
l00005238:
	word32 r4_1818 = Mem27[r3 + 44<i32>:word32]
	r18_1261 = r4_1818 >>u 0x14<32> & 7<32>
	r16_1280 = r4_1818 >>u 0xB<32> & 0xF<32>
l00005D6C:
	word32 r12_1947
	word32 r14_1953
	word32 r8_1952
	word32 r13_1960
	word32 r5_1961
	word32 r7_1939
	word32 r15_1951
	word32 r17_1945
	word32 r18_1948
	word32 r19_1955
	word32 r25_1959
	word32 r27_1958
	word32 r2_1956
	word32 r22_1946
	word32 r4_1957
	word32 r16_1954
	word32 r20_1962
	word32 r26_1950
	word32 r21_1964
	branch r24_1817 == 3<32> l00005D74_ds_t
l00005D74_ds_t:
l00005E3C:
	word32 r11_1906
	word32 r15_1911
	fn0000FEDC(r14_28 >>u 1<32>, -15<i32>, r15, out r11_1906, out r15_1911)
	word32 r1_1905 = <invalid>
	Mem1918[r1_1905 + 40<i32>:word32] = r14_28 *s -500<i32> + -1<i32>
	Mem1924[r1_1905 + 44<i32>:word32] = r11_1906 & 0xFF<32>
	word32 r11_1926
	word32 r15_3134
	fn0000FEDC(r14_28 *s -360<i32>, -1000<i32>, r15_1911, out r11_1926, out r15_3134)
	r7_1939 = -4<i32>
	r17_1945 = -5<i32>
	r22_1946 = 0<i32>
	r12_1947 = r14_28 *s -200<i32> + -1<i32>
	r18_1948 = r18_1261 + -6<i32> & 0xFF<32>
	r26_1950 = Mem1924[r3 + 28<i32>:word32]
	r15_1951 = r24_1817
	r8_1952 = r11_1926 + -1<i32>
	r14_1953 = r14_28 + -1<i32>
	r16_1954 = r16_1280 + -6<i32> & 0xFF<32>
	r19_1955 = 0xFFFFFFFB<32>
	r2_1956 = -12<i32>
	r4_1957 = 0xFFFFFFFC<32>
	r27_1958 = 0xFFFFFFFC<32>
	r25_1959 = -6<i32>
	r13_1960 = -2<i32>
	r5_1961 = 0xFFFFFFFC<32>
	r20_1962 = 0<32>
	r24_1817 = -24<i32>
	r21_1964 = -7280<i32>
l00005D74_ds_f:
	bool F_1966 = r24_1817 >u 3<32>
l00005D78:
	branch F_1966 l00005D7C_ds_t
l00005D7C_ds_t:
	bool F_1967 = r24_1817 == 6<32>
l00005D94:
	branch F_1967 l00005D98_ds_t
l00005D98_ds_t:
l00005ED4:
	word32 r11_1976
	word32 r15_1981
	fn0000FEDC(r14_28 >>u 1<32>, -30<i32>, r15, out r11_1976, out r15_1981)
	word32 r1_1975 = <invalid>
	Mem1988[r1_1975 + 40<i32>:word32] = r14_28 *s -200<i32> + -1<i32>
	Mem1994[r1_1975 + 44<i32>:word32] = r11_1976 & 0xFF<32>
	r20_1962 = Mem1994[r3 + 36<i32>:word32]
	word32 r11_2002
	word32 r15_3137
	fn0000FEDC(r14_28 * 3<32> + r14_28 * 0x60<32> + r14_28, -1000<i32>, r15_1981, out r11_2002, out r15_3137)
	r22_1946 = -3<i32>
	r15_1951 = -2<i32>
	r8_1952 = r11_2002 + -1<i32>
	r16_1954 = r16_1280 + -5<i32> & 0xFF<32>
	r12_1947 = r14_28 * 2<32> + (r14_28 << 3<32>) + r14_28 + -1<i32>
	r18_1948 = r18_1261 + -5<i32> & 0xFF<32>
	r19_1955 = -10<i32>
	r2_1956 = 0xFFFFFFFB<32>
	r27_1958 = 0xFFFFFFFE<32>
	r25_1959 = -4<i32>
	r13_1960 = -1<i32>
	r5_1961 = 0xFFFFFFFD<32>
l00005D98_ds_f:
	bool F_2034 = r24_1817 == 7<32>
l00005D9C:
	branch !F_2034 l00005DA0_ds_t
l00005DA0_ds_t:
l00005DA0_ds_f:
l00005DA4:
l00005F70:
	word32 r11_2044
	word32 r15_2049
	fn0000FEDC(r14_28 >>u 1<32>, -30<i32>, r15, out r11_2044, out r15_2049)
	word32 r1_2043 = <invalid>
	Mem2056[r1_2043 + 40<i32>:word32] = r14_28 *s -200<i32> + -1<i32>
	Mem2062[r1_2043 + 44<i32>:word32] = r11_2044 & 0xFF<32>
	word32 r11_2070
	word32 r15_3138
	fn0000FEDC(r14_28 * 3<32> + r14_28 * 0x60<32> + r14_28, -1000<i32>, r15_2049, out r11_2070, out r15_3138)
	r18_1948 = r18_1261 + -8<i32> & 0xFF<32>
	r15_1951 = -3<i32>
	r20_1962 = Mem2062[r3 + 36<i32>:word32]
	r8_1952 = r11_2070 + -1<i32>
	r12_1947 = r14_28 * 2<32> + (r14_28 << 3<32>) + r14_28 + -1<i32>
	r16_1954 = r16_1280 + -8<i32> & 0xFF<32>
	r19_1955 = -13<i32>
	r2_1956 = -12<i32>
	r22_1946 = 0xFFFFFFFB<32>
	r27_1958 = 0xFFFFFFFD<32>
	r25_1959 = -6<i32>
	r13_1960 = -2<i32>
	r5_1961 = 0xFFFFFFFB<32>
	r24_1817 = -10<i32>
l00006004:
	r14_1953 = r14_28 + -1<i32>
	r7_1939 = 0xFFFFFFFB<32>
	r17_1945 = -5<i32>
	r4_1957 = 0xFFFFFFFB<32>
	r26_1950 = -195<i32>
	r21_1964 = 0<i32>
l00005D7C_ds_f:
l00005D80:
	branch !(r24_1817 == 2<32>) l00005D88_ds_t
l00005D88_ds_t:
l00006010:
	Mem2119[r1_1017 + 44<i32>:word32] = -27<i32>
	Mem2134[r1_1017 + 40<i32>:word32] = 0<i32>
	r22_1946 = 0<i32>
	r7_1939 = -3<i32>
	r17_1945 = -4<i32>
	r15_1951 = -2<i32>
	r13_1960 = -1<i32>
	r19_1955 = 0xFFFFFFFC<32>
	r18_1948 = -8<i32>
	r16_1954 = -12<i32>
	r2_1956 = -6<i32>
	r4_1957 = 0xFFFFFFFE<32>
	r27_1958 = 0xFFFFFFFD<32>
	r25_1959 = 0xFFFFFFFD<32>
	r5_1961 = -1<i32>
	r20_1962 = 0<32>
	r24_1817 = 0<32>
	r26_1950 = 0<32>
	r21_1964 = 0<32>
	r14_1953 = 0<32>
	r12_1947 = 0<32>
	r8_1952 = 0<32>
l00005D88_ds_f:
l00005D8C:
l00005DAC:
	word32 r11_2143
	word32 r15_2148
	fn0000FEDC(r14_28 >>u 1<32>, -15<i32>, r15, out r11_2143, out r15_2148)
	word32 r1_2142 = <invalid>
	Mem2155[r1_2142 + 40<i32>:word32] = r14_28 *s -400<i32> + -1<i32>
	Mem2161[r1_2142 + 44<i32>:word32] = r11_2143 & 0xFF<32>
	word32 r11_2163
	word32 r15_3135
	fn0000FEDC(r14_28 *s -500<i32>, -1000<i32>, r15_2148, out r11_2163, out r15_3135)
	r19_1955 = -3<i32>
	r22_1946 = 0<i32>
	r12_1947 = r14_28 *s -200<i32> + -1<i32>
	r13_1960 = -1<i32>
	r18_1948 = r18_1261 + -5<i32> & 0xFF<32>
	r4_1957 = r24_1817
	r26_1950 = Mem2161[r3 + 28<i32>:word32]
	r8_1952 = r11_2163 + -1<i32>
	r14_1953 = r14_28 + -1<i32>
	r16_1954 = r16_1280 + -5<i32> & 0xFF<32>
	r17_1945 = -5<i32>
	r7_1939 = -4<i32>
	r15_1951 = 0xFFFFFFFD<32>
	r2_1956 = -12<i32>
	r27_1958 = 0xFFFFFFFD<32>
	r25_1959 = 0xFFFFFFFD<32>
	r5_1961 = -1<i32>
	r20_1962 = 0<32>
	r24_1817 = 0<32>
	r21_1964 = -611<i32>
l0000606C:
	branch CONVERT(Mem2203[r3 + 24<i32>:word16], word16, word32) != 0<32> l00006080
l0000607C:
	Mem2208[r3 + 24<i32>:word32] = r21_1964
l00006080:
	branch CONVERT(Mem2210[r3 + 28<i32>:word16], word16, word32) != 0<32> l00006094
l00006090:
	Mem2215[r3 + 28<i32>:word32] = r26_1950
l00006094:
	branch CONVERT(Mem2217[r3 + 32<i32>:word16], word16, word32) != 0<32> l000060A8
l000060A4:
	Mem2224[r3 + 32<i32>:word32] = r24_1817
l000060A8:
	branch CONVERT(Mem2226[r3 + 36<i32>:word16], word16, word32) != 0<32> l000060BC
l000060B8:
	Mem2234[r3 + 36<i32>:word32] = r20_1962
l000060BC:
	Mem2247[0x1C63030<32>:word32] = CONVERT(Mem2237[r3 + 26<i32>:word16], word16, word32)
	Mem2251[0x1C63034<32>:word32] = CONVERT(Mem2247[r3 + 30<i32>:word16], word16, word32)
	Mem2255[0x1C63038<32>:word32] = CONVERT(Mem2251[r3 + 34<i32>:word16], word16, word32)
	Mem2259[0x1C6303C<32>:word32] = CONVERT(Mem2255[r3 + 38<i32>:word16], word16, word32)
	Mem2275[0x1C6302C<32>:word32] = Mem2259[r3 + 12<i32>:word32] >>u 4<32> & 3<32>
	Mem2344[0x1C63058<32>:word32] = dwArg74 << 0x10<32> | dwArg7C | r16_1954 << 0x18<32> | dwArg8C << 8<32>
	Mem2348[0x1C6305C<32>:word32] = dwArg60 << 0x10<32> | dwArg70 << 8<32> | dwArg78
	Mem2350[0x1C63060<32>:word32] = r27_1958 << 0x18<32> | r25_1959 << 0x10<32> | r18_1948 | r19_1955 << 8<32>
	Mem2353[0x1C63064<32>:word32] = r22_1946 << 0x10<32> | r4_1957 << 0xC<32> | r2_1956
	Mem2354[0x1C63068<32>:word32] = dwArg64 << 0x18<32> | dwArg90 << 0x10<32> | dwArg6C | dwArg68 << 8<32>
	Mem2398[0x1C6306C<32>:word32] = r17_1945 << 0x18<32> | r17_1945 << 0x10<32> | r15_1951 | r7_1939 << 8<32>
	Mem2419[0x1C63078<32>:word32] = Mem2398[0x1C63078<32>:word32] & 0xFFFF0000<32> | 0x3310<32>
	Mem2423[0x1C63080<32>:word32] = r13_1960 | 0x2000100<32> | r5_1961 << 0x10<32>
	Mem2424[0x1C63050<32>:word32] = r8_1952 << 0x14<32> | dwArg88
	Mem2434[0x1C63054<32>:word32] = r14_1953 << 0x14<32> | r12_1947
	Mem2438[0x1C63090<32>:word32] = dwArg80 << 0x10<32> | dwArg84
	return
fn000051E8_exit:


word32 fn000062BC(word32 r3, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006394
// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r9
// Preserved:
fn000062BC_entry:
l000062BC:
	word32 r4_34
	word32 r3_11 = Mem0[r3 + 92<i32>:word32] >>u 0x14<32> & 7<32>
	branch r3_11 >u 5<32> l000062D8_ds_t
l000062D8_ds_t:
l000062D8_ds_f:
l000062DC:
	switch (Mem10[(r3_11 << 2<32>) + 0x12478<32>:word32]) { l00006380 l000062F8 l00006304 l00006310 l00006324 l0000631C l000062F0_thunk_fn0000AF54 l000062F0_thunk_fn0000AF4C }
l000062F0_thunk_fn0000AF4C:
	return fn0000AF4C()
l000062F0_thunk_fn0000AF54:
	return fn0000AF54()
l0000631C:
	r4_34 = 0xF5860000<32>
l00006324:
	r4_34 = 0xF2063333<32>
l00006310:
	r4_34 = 0xED866666<32>
l00006304:
	r4_34 = 0xE9069999<32>
l000062F8:
	r4_34 = 0xE486CCCC<32>
l0000632C:
	Mem47[0x1C20290<32>:word32] = r4_34
	Mem53[0x1C20020<32>:word32] = Mem47[0x1C20020<32>:word32] | 0x1000000<32>
	Mem56[0x1C20020<32>:word32] = Mem53[0x1C20020<32>:word32] | 0x100000<32>
l00006360:
	branch (Mem56[0x1C20020<32>:word32] & 0x100000<32>) != 0<32> l00006360
l00006378:
	word32 r14_104
	word32 r15_105
	fn0000C8A0(-20<i32>, r15, out r14_104, out r15_105)
l00006380:
	return dwLoc18
fn000062BC_exit:


word32 fn00006394(word32 r3, word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000064DC
// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r11 r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00006394_entry:
l00006394:
	word32 r2_6 = Mem4[r3:word32]
	branch (0<32> - (r2_6 ^ 0x378<32>) | r2_6 ^ 0x378<32>) >= 0<i32> l000063C0_ds_t
l000063C0_ds_t:
l000063C0_ds_f:
l000063C4:
	branch (0<32> - (r2_6 ^ 0x348<32>) | r2_6 ^ 0x348<32>) < 0<i32> l000063E4
l000063DC:
	Mem32[r3:word32] = r2_6 - 24<i32>
l000063E4:
	word32 r14_131
	word32 r11_44
	word32 r15_116
	fn0000FEDC(Mem34[r3:word32] * 2<32>, -24<i32>, r15, out r11_44, out r15_116)
	word32 r2_108 = -1<i32>
	branch r11_44 <=u 0x20<32> l00006400_ds_t
l00006400_ds_t:
	r14_131 = r11_44
l00006400_ds_f:
l00006404:
	branch r11_44 <=u 0x40<32> l0000640C_ds_t
l0000640C_ds_t:
	r2_108 = -2<i32>
l0000640C_ds_f:
l00006410:
	word32 r11_68
	fn0001003C(r11_44, -3<i32>, r15_116, out r11_68, out r15_116)
	r2_108 = -3<i32>
	branch r11_68 == 0<32> l00006428_ds_t
l00006428_ds_t:
l00006428_ds_f:
l0000642C:
	branch (r11_44 & -3<i32>) == 0<32> l00006438_ds_t
l00006438_ds_t:
	r2_108 = -4<i32>
l00006438_ds_f:
l0000643C:
	word32 r11_94
	fn0001003C(r11_44, -5<i32>, r15_116, out r11_94, out r15_116)
	r2_108 = -5<i32>
	branch r11_94 == 0<32> l0000645C
l00006458:
	r2_108 = 0<i32>
l0000645C:
l00006460:
	word32 r11_119
	fn0000FEDC(r11_44, r2_108, r15_116, out r11_119, out r15_116)
	r14_131 = r11_119
l0000646C:
	word32 r4_147 = r14_131 - 1<i32> << 8<32> | r2_108 - 1<i32> << 4<32>
	Mem150[0x1C20020<32>:word32] = r4_147 | 0x80000000<32>
	Mem153[0x1C20020<32>:word32] = r4_147 | 0x80100000<32>
	word32 r15_167
	word32 r14_219
	fn0000C8A0(-20<i32>, r15_116, out r14_219, out r15_167)
	word32 r11_187 = fn000062BC(r3, r15_167) << 3<32>
	r15Out = r15_167
	return r11_187
fn00006394_exit:


void fn000064DC(word32 r3, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000073EC
// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r9
fn000064DC_entry:
l000064DC:
	Mem27[0x1C2015C<32>:word32] = Mem11[0x1C2015C<32>:word32] & 0x7FFFFFFF<32>
	Mem34[0x1C200FC<32>:word32] = Mem27[0x1C200FC<32>:word32] & 0x7FFFFFFF<32>
	Mem40[0x1C20060<32>:word32] = Mem34[0x1C20060<32>:word32] & 0xFFFFBFFF<32>
	Mem44[0x1C202C0<32>:word32] = Mem40[0x1C202C0<32>:word32] & 0xFFFFBFFF<32>
	word32 r3_46 = Mem44[0x1C20020<32>:word32]
	Mem49[0x1C20020<32>:word32] = r3_46 & 0x7FFFFFFF<32>
	Mem51[0x1C20020<32>:word32] = r3_46 & 0x7FFFFFFF<32> | 0x100000<32>
	Mem56[0x1C200F4<32>:word32] = Mem51[0x1C200F4<32>:word32] & 0x7FFFFFFF<32>
	word32 r15_70
	word32 r14_221
	word32 r22_78 = Mem56[fn0000C8A0(-10<i32>, r15, out r14_221, out r15_70):word32]
	word32 r15_85
	Mem98[r3:word32] = fn00006394(r3, r15_70, out r15_85) >>u 1<32>
	word32 r15_109
	word32 r14_222
	Mem118[fn0000C8A0(-1000<i32>, r15_85, out r14_222, out r15_109):word32] = r22_78 & 0xFFCFFFFF<32>
	word32 r14_123
	word32 r15_129
	word32 r2_120 = fn0000C8A0(-10<i32>, r15_109, out r14_123, out r15_129)
	Mem139[r2_120:word32] = r22_78 & 0xFFCFFFFF<32> | 0x10000<32>
	Mem142[0x1C202C0<32>:word32] = Mem139[0x1C202C0<32>:word32] | 0x4000<32>
	Mem145[0x1C20060<32>:word32] = Mem142[0x1C20060<32>:word32] | 0x4000<32>
	Mem149[0x1C62094<32>:word32] = -1<i32>
	Mem153[0x1C200FC<32>:word32] = Mem149[0x1C200FC<32>:word32] | 0x80000000<32>
	Mem156[r14_123:word32] = Mem153[r14_123:word32] | 0x80000000<32>
	Mem159[r2_120:word32] = Mem156[r2_120:word32] | 0x80000000<32>
	word32 r15_173
	word32 r14_223
	Mem182[0x1C6300C<32>:word32] = fn0000C8A0(-2000<i32>, r15_129, out r14_223, out r15_173)
	word32 r14_224
	word32 r15_225
	fn0000C8A0(-10<i32>, r15_173, out r14_224, out r15_225)
	return
fn000064DC_exit:


word32 fn00006678(word32 r3, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000073EC
// MayUse:  r3:[0..31]
// LiveOut: r1 r15 r2
// Trashed: CV r1 r11 r12 r13 r15 r2 r3 r4 r5 r6 r7 r8
// Preserved:
fn00006678_entry:
l00006678:
	word32 r7_23
	word32 r6_9 = Mem5[r3 + 4<i32>:word32]
	word32 r4_20 = Mem5[r3 + 20<i32>:word32]
	word32 r5_19 = Mem5[0x1C62000<32>:word32] & 0xFF000FFF<32> | 0x400000<32> | (r6_9 & 7<32>) << 0x10<32>
	branch (r4_20 & 1<32>) == 0<32> l000066C0_ds_t
l000066C0_ds_t:
	r7_23 = -4096<i32>
l000066C0_ds_f:
l000066C4:
	r7_23 = 0<i32>
l000066C8:
	word32 r5_42
	branch r6_9 >u 7<32> || r6_9 <u 6<i32> l000066D4_ds_t
l000066D4_ds_t:
	word32 r5_35 = r5_19 | r7_23
l000066E4:
	r5_42 = r5_35 | Mem5[r3 + 92<i32>:word32] << 0xE<32> & 0x80000<32>
l000066D4_ds_f:
	word32 r5_43 = r5_19 | r7_23
l000066D8:
	r5_42 = r5_43 | 0x80000<32>
l000066F8:
	Mem51[0x1C62000<32>:word32] = r5_42
	word32 r13_195 = -1<i32>
	branch (r4_20 & 0x100<32>) == 0<32> l0000671C
l00006718:
	r13_195 = -2<i32>
l0000671C:
	word32 r11_64 = Mem51[r3 + 16<i32>:word32]
	word32 r15_65 = r4_20 >>u 0xC<32> & 1<32>
	word32 r4_124 = 0<i32>
	word32 r7_116 = 0x1C62000<32>
	word32 r8_113 = 0<32>
l00006738:
	word32 r5_100
	word32 r6_92 = r11_64 >>u r4_124
	word32 r5_91 = Mem73[r7_116:word32] & 0xFFFFF000<32> | r15_65 | (r11_64 >>u r4_124 + -12<i32> & 1<32>) << 2<32> | (r11_64 >>u r4_124 + -4<i32> & 0xFF<32>) - 1<i32> << 4<32> & 0xFF<32>
	branch (r6_92 & 0xF<32>) == 2<32> l00006788_ds_t
l00006788_ds_t:
l000067C8:
	r5_100 = r5_91 | 0x800<32>
l00006788_ds_f:
l0000678C:
	branch (r6_92 & 0xF<32>) >u 2<32> l00006790_ds_t
l00006790_ds_t:
l000067A8:
	branch (r6_92 & 0xF<32>) == 4<32> l000067AC_ds_t
l000067AC_ds_t:
l000067C0:
	r5_100 = r5_91 | 0x900<32>
l000067AC_ds_f:
l000067B0:
	branch !((r6_92 & 0xF<32>) == 8<32>) l000067D0
l000067B8:
	r5_100 = r5_91 | 0xA00<32>
l00006790_ds_f:
l00006794:
	branch !((r6_92 & 0xF<32>) == 1<32>) l000067D0
l000067D0:
	r5_100 = r5_91 | 0x600<32>
l000067A0:
	r5_100 = r5_91 | 0x700<32>
l000067D4:
	Mem111[r7_116:word32] = r5_100
	r8_113 = r8_113 + -1<i32>
	r7_116 = r7_116 + -4<i32>
	branch r8_113 <u r13_195 l000067E8_ds_t
l000067E8_ds_t:
	r4_124 = r4_124 + -16<i32>
l000067E8_ds_f:
l000067EC:
	word32 r5_129 = -513<i32>
	branch (Mem111[0x1C62000<32>:word32] & 1<32>) == 0<32> l00006808_ds_t
l00006808_ds_t:
l00006808_ds_f:
l0000680C:
	r5_129 = -771<i32>
l00006810:
	Mem150[0x1C63120<32>:word32] = r5_129
	branch (r4_20 & 1<32>) == 0<32> l00006820_ds_t
l00006820_ds_t:
l00006820_ds_f:
l00006824:
	Mem156[0x1C63444<32>:word32] = 0<i32>
	Mem157[0x1C634C4<32>:word32] = 0<i32>
l00006834:
	word32 r4_164 = Mem163[r3 + 56<i32>:word32]
	Mem173[0x1C62000<32>:word32] = (r4_164 & 3<32>) << 0x19<32> | Mem163[0x1C62000<32>:word32]
	Mem179[0x1C62004<32>:word32] = r4_164 << 0xA<32> & 0x1FF000<32> | Mem173[0x1C62004<32>:word32]
	r15Out = r15_65
	return dwLoc0C
fn00006678_exit:


word32 fn00006E54()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007FAC
// MayUse: 
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1
fn00006E54_entry:
l00006E54:
	word32 r11_20
	word32 r3_6 = Mem0[0x1C62000<32>:word32]
	word32 r3_14 = r3_6 & 3<32>
	word32 r11_17 = (r3_6 >>u 8<32> & 0xF<32>) + (r3_6 >>u 4<32> & 0xF<32>) - 14<i32> + (r3_6 >>u 2<32> & 3<32>)
	branch (r3_6 & 3<32>) == 0<32> l00006E94_ds_t
l00006E94_ds_t:
	r11_20 = -1<i32> << r11_17
l00006E94_ds_f:
	r11_20 = -1<i32> << r11_17
l00006E98:
	word32 r4_24 = Mem0[0x1C62004<32>:word32]
	r3_14 = r11_20
	branch (r4_24 & 3<32>) == 0<32> l00006EB0_ds_t
l00006EB0_ds_t:
l00006EB0_ds_f:
l00006EB4:
	r3_14 = -1<i32> << (((r4_24 >>u 8<32> & 0xF<32>) + (r4_24 >>u 4<32> & 0xF<32>)) - 14<i32>) + (r4_24 >>u 2<32> & 3<32>)
l00006ED8:
	return r3_14 + r11_20
fn00006E54_exit:


word32 fn00006EE0(word32 r3, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007428
//      fn00007634
// MayUse:  r3:[0..31]
// LiveOut: r11 r2
// Trashed: CV r1 r11 r2 r4 r5 r6 r7
// Preserved:
fn00006EE0_entry:
l00006EE0:
	word32 r4_18
	word32 r11_62
	branch (Mem5[0x1C63010<32>:word32] & 0x400000<32>) == 0<32> l00006F00_ds_t
l00006F00_ds_t:
l00006F50:
	r4_18 = Mem5[r3 + 20<i32>:word32] & 0xFFFFFFF0<32> | 0x1000<32>
l00006F00_ds_f:
l00006F04:
	word32 r5_34
	word32 r5_23 = Mem5[0x1C63348<32>:word32]
	word32 r6_29 = Mem5[0x1C633C8<32>:word32] >>u 0x18<32> & 3<32>
	word32 r7_30 = Mem5[0x1C63448<32>:word32]
	word32 r4_31 = Mem5[0x1C634C8<32>:word32]
	branch r6_29 != 2<32> l00006F38_ds_t
l00006F38_ds_t:
l00006FB0:
	r5_34 = r6_29 | r5_23 >>u 0x18<32> & 3<32>
l00006F38_ds_f:
	word32 r5_37 = r5_23 >>u 0x18<32> & 3<32>
l00006F3C:
	branch (r5_23 >>u 0x18<32> & 3<32>) == 2<32> l00006F44_ds_t
l00006F44_ds_t:
l00006F64:
	branch (r4_31 >>u 0x18<32> & 3<32>) != 2<32> l00006F74_ds_t
l00006F74_ds_t:
l00006F74_ds_f:
l00006F78:
	branch (r7_30 >>u 0x18<32> & 3<32>) != 2<32> l00006F9C
l00006F9C:
	r4_18 = Mem5[r3 + 20<i32>:word32] & 0xFFFF0FF0<32> | 1<32>
l00006F8C:
	r4_18 = Mem5[r3 + 20<i32>:word32] & 0xFFFF0FF0<32>
l00006F44_ds_f:
	r5_34 = r6_29 | r5_37
l00006F48:
l00006FB8:
	r11_62 = 0<i32>
	branch r5_34 != 0<i32> l00006FDC
l00006FC4:
	r4_18 = Mem5[r3 + 20<i32>:word32] & 0xFFFFEFF0<32> | 0x1001<32>
l00006FD4:
	Mem73[r3 + 20<i32>:word32] = r4_18
	r11_62 = -1<i32>
l00006FDC:
	r11Out = r11_62
	return dwLoc0C
fn00006EE0_exit:


word32 fn00006FE8(word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007428
//      fn00007634
// MayUse:  r15:[0..31]
// LiveOut: r11 r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r9
fn00006FE8_entry:
l00006FE8:
	Mem22[0x1C63100<32>:word32] = Mem7[0x1C63100<32>:word32] | 0x2000000<32>
	Mem27[0x40000000<32>:word32] = 0x12345678<32>
	word32 r14_36
	word32 r15_42
	word32 r2_33 = fn0000C8A0(-10<i32>, r15, out r14_36, out r15_42)
	word32 r1_32 = <invalid>
	branch (Mem27[r2_33 | 0x3010<32>:word32] >>u 0xD<32> & 1<32>) == 0<32> l00007054_ds_t
l00007054_ds_t:
l000070C0:
	word32 r3_55 = Mem27[r14_36 + 20<i32>:word32]
	branch (r3_55 & 0xF<32>) != 0<32> l000070D0_ds_t
l000070D0_ds_t:
l000070D0_ds_f:
l000070D4:
	Mem65[r14_36 + 20<i32>:word32] = r3_55 & 0xFFFFFFF0<32>
l00007054_ds_f:
l00007058:
	word32 r4_74 = Mem27[r2_33 | 0x3348<32>:word32] >>u 0x1C<32> & 1<32>
	word32 r3_76 = Mem27[r2_33 | 0x33C8<32>:word32] >>u 0x1C<32> & 1<32>
	Mem80[r1_32:word32] = r4_74
	branch r4_74 != 0<i32> l00007094_ds_t
l00007094_ds_t:
	Mem82[r1_32 + 4<i32>:word32] = r3_76
l000070E0:
l00007094_ds_f:
	Mem84[r1_32 + 4<i32>:word32] = r3_76
l00007098:
	branch r3_76 != 0<i32> l000070A0_ds_t
l000070A0_ds_t:
l000070A0_ds_f:
l000070A4:
	Mem92[r14_36 + 20<i32>:word32] = Mem84[r14_36 + 20<i32>:word32] & 0xFFFFFFF0<32> | 1<32>
l000070E4:
	word32 r20_101 = Mem99[0x1C63100<32>:word32]
	Mem105[0x1C63100<32>:word32] = r20_101 & 0xFBFFFFFF<32>
	word32 r15_118
	word32 r14_380
	fn0000C8A0(-100<i32>, r15_42, out r14_380, out r15_118)
	Mem129[0x1C63100<32>:word32] = r20_101 & 0xFBFFFFFF<32> | 0x4000000<32>
	Mem133[0x1C63100<32>:word32] = Mem129[0x1C63100<32>:word32] | 0x1000000<32>
	Mem136[0x1C63010<32>:word32] = Mem133[0x1C63010<32>:word32] & 0xFFFFDFFF<32>
	word32 r14_143
	word32 r15_149
	word32 r2_140 = fn0000C8A0(-10<i32>, r15_118, out r14_143, out r15_149)
	branch r2_140 != 0<32> l00007148_ds_t
l00007148_ds_t:
l00007164:
	branch (Mem136[r14_143 + 20<i32>:word32] >>u 0xC<32> & 0xF<32>) == 0<32> l00007178_ds_t
l00007178_ds_t:
	r2_140 = -1<i32>
l000072F8:
	Mem170[0x1C63100<32>:word32] = Mem136[0x1C63100<32>:word32] & 0xFDFFFFFF<32>
l00007178_ds_f:
l0000717C:
	word32 r3_175 = Mem136[r14_143 + 16<i32>:word32]
	Mem191[(-1<i32> << (((r3_175 >>u 0xC<32> & 0xF<32>) + (r3_175 >>u 4<32> & 0xFF<32>)) + -11<i32>) + (r3_175 & 0xF<32>) * 2<32>) + 0x40000000<32>:word32] = 0x1234ABCD<32>
	word32 r1_195 = <invalid>
	word32 r14_199
	word32 r15_205
	branch (Mem191[0x1C63010<32>:word32] >>u 0xD<32> & fn0000C8A0(-10<i32>, r15_149, out r14_199, out r15_205)) == 0<32> l000071E0_ds_t
l000071E0_ds_t:
l0000728C:
	Mem219[r14_199 + 20<i32>:word32] = Mem191[r14_199 + 20<i32>:word32] | 0x1000<32>
l000071E0_ds_f:
l000071E4:
	word32 r2_242
	word32 r2_223 = Mem191[0x1C63348<32>:word32]
	word32 r3_224 = Mem191[0x1C633C8<32>:word32]
	word32 r4_225 = Mem191[0x1C63448<32>:word32]
	word32 r5_231 = Mem191[0x1C634C8<32>:word32]
	Mem235[r1_195:word32] = r2_223 >>u 0x1C<32>
	Mem236[r1_195 + 4<i32>:word32] = r3_224 >>u 0x1C<32>
	Mem237[r1_195 + 8<i32>:word32] = r4_225 >>u 0x1C<32>
	branch r2_223 >>u 0x1C<32> == 0<32> l00007230_ds_t
l00007230_ds_t:
l0000726C:
	branch r3_224 >>u 0x1C<32> != 0<32> l00007298
l00007278:
	r2_242 = Mem237[r14_199 + 20<i32>:word32] | 0x1000<32>
l00007230_ds_f:
l00007234:
	branch r3_224 >>u 0x1C<32> == 0<32> l0000723C_ds_t
l0000723C_ds_t:
l0000723C_ds_f:
l00007240:
	branch r4_225 >>u 0x1C<32> == 0<32> l00007248_ds_t
l00007248_ds_t:
l00007248_ds_f:
l0000724C:
	branch r5_231 >>u 0x1C<32> == 0<32> l00007254_ds_t
l00007254_ds_t:
l00007254_ds_f:
l00007258:
	r2_242 = Mem237[r14_199 + 20<i32>:word32] & 0xFFFF0FFF<32>
l00007280:
	Mem259[r14_199 + 20<i32>:word32] = r2_242
l00007298:
	word32 r18_267 = Mem266[0x1C63100<32>:word32]
	Mem271[0x1C63100<32>:word32] = r18_267 & 0xFBFFFFFF<32>
	word32 r14_278
	word32 r15_284
	fn0000C8A0(-100<i32>, r15_205, out r14_278, out r15_284)
	Mem295[r14_278:word32] = r18_267 & 0xFBFFFFFF<32> | 0x4000000<32>
	Mem298[r14_278:word32] = Mem295[r14_278:word32] | 0x1000000<32>
	Mem302[0x1C63010<32>:word32] = Mem298[0x1C63010<32>:word32] & 0xFFFFDFFF<32>
	word32 r15_382
	word32 r14_381
	fn0000C8A0(-10<i32>, r15_284, out r14_381, out r15_382)
l00007148_ds_f:
l0000714C:
	Mem326[0x1C63100<32>:word32] = Mem136[0x1C63100<32>:word32] & 0xFDFFFFFF<32>
l00007318:
	r15Out = r15_149
	return r2_140
fn00006FE8_exit:


word32 fn00007338(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007FAC
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r3 r5 r6 r7 r8
// Preserved:
fn00007338_entry:
l00007338:
	word32 r6_19 = 0x40000000<32>
	word32 r3_9 = r3 >>u 1<32> << 0x14<32>
	word32 r5_10 = 0<i32>
l0000737C:
	branch r5_10 <u r4 l00007384_ds_t
l00007384_ds_t:
l00007354:
	Mem20[r6_19:word32] = r5_10 + 0x1234567<32>
	Mem26[r6_19 + ((r3 >>u 1<32>) << 0x14<32>):word32] = r5_10 + 0xFEDCBA98<32>
	r6_19 = r6_19 + -4<i32>
	r5_10 = r5_10 + -1<i32>
l00007384_ds_f:
l00007388:
	word32 r6_30 = 0x40000000<32>
	word32 r5_31 = 0<i32>
l000073D0:
	word32 r11_47
	branch r5_31 <u r4 l000073D8_ds_t
l000073D8_ds_t:
	word32 r7_38 = r6_30 + r3_9
l00007394:
	branch Mem75[r7_38:word32] != r5_31 + 0xFEDCBA98<32> l000073AC_ds_t
l000073AC_ds_t:
	r11_47 = -1<i32>
l000073AC_ds_f:
	r11_47 = -1<i32>
l000073B0:
	branch Mem75[r6_30:word32] != r5_31 + 0x1234567<32> l000073C8_ds_t
l000073C8_ds_t:
l000073C8_ds_f:
	r6_30 = r6_30 + -4<i32>
l000073CC:
	r5_31 = r5_31 + -1<i32>
l000073D8_ds_f:
l000073DC:
	r11_47 = 0<i32>
l000073E0:
	return r11_47
fn00007338_exit:


word32 fn000073EC(word32 r3, word32 r14, word32 r15, word32 r16, word32 r18, word32 r20, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007428
//      fn00007634
//      fn0000770C
//      fn00007FAC
// MayUse:  r14:[0..31] r15:[0..31] r16:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r16 r18 r2 r20
// Trashed: CV r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn000073EC_entry:
l000073EC:
	fn000064DC(r3, r15)
	word32 r15_30
	word32 r2_31 = fn00006678(r3, out r15_30)
	word32 r1_26 = <invalid>
	fn000051E8(r2_31, r15_30, Mem6[r1_26 + 96<i32>:word32], Mem6[r1_26 + 100<i32>:word32], Mem6[r1_26 + 104<i32>:word32], Mem6[r1_26 + 108<i32>:word32], Mem6[r1_26 + 112<i32>:word32], Mem6[r1_26 + 116<i32>:word32], Mem6[r1_26 + 120<i32>:word32], Mem6[r1_26 + 124<i32>:word32], Mem6[r1_26 + 128<i32>:word32], Mem6[r1_26 + 132<i32>:word32], Mem6[r1_26 + 136<i32>:word32], Mem6[r1_26 + 140<i32>:word32], Mem6[r1_26 + 144<i32>:word32])
	word32 r9_65 = Mem6[r1_26 + -12<i32>:word32]
	word32 r2_66 = Mem6[r1_26 - 16<i32>:word32]
l00006880:
	Mem68[r1_26 - 32<i32>:word32] = r2_66
	Mem71[r1_26 - 28<i32>:word32] = r14
	word32 r14_72 = Mem71[r2_31 + 92<i32>:word32]
	word32 r7_80 = Mem71[r2_31 + 12<i32>:word32] & 1<32> ^ 1<32>
	word32 r5_81 = Mem71[0x1C63108<32>:word32] & 0xFFFFF0FF<32> | 0x300<32>
	Mem82[r1_26 + -12<i32>:word32] = r9_65
	Mem84[r1_26 - 24<i32>:word32] = r16
	Mem86[r1_26 - 20<i32>:word32] = r18
	Mem88[r1_26 - 16<i32>:word32] = r20
	Mem92[0x1C63108<32>:word32] = r5_81
	word32 r14_91 = r14_72 >>u 2<32> & 3<32>
	word32 r6_93 = Mem92[r2_31:word32]
	word32 r3_118 = 0x1C63344<32>
l000068E4:
	word32 r4_108
	word32 r5_106 = Mem98[r3_118:word32] & 0xFFFFFFCF<32> | r7_80 << 5<32>
	branch r6_93 <=u 0x258<32> l00006900_ds_t
l00006900_ds_t:
	r4_108 = r5_106 & 0xFFFF0FF1<32>
l00006900_ds_f:
l00006904:
	r4_108 = r5_106 & 0xFFFF09F1<32> | 0x400<32>
l00006914:
	Mem116[r3_118:word32] = r4_108
	r3_118 = r3_118 + -128<i32>
	branch r3_118 != 0x1C63544<32> l0000692C_ds_t
l0000692C_ds_t:
l0000692C_ds_f:
l00006930:
	word32 r4_174
	word32 r16_157
	word32 r3_163
	Mem133[0x1C63208<32>:word32] = (Mem116[0x1C63208<32>:word32] | 2<32>) & 0xFFFFF7FF<32>
	word32 r15_140 = fn00004D60(r2_31)
	branch r14_91 == 1<32> l0000695C_ds_t
l0000695C_ds_t:
l00006970:
	Mem161[0x1C63108<32>:word32] = Mem133[0x1C63108<32>:word32] & 0xFFFFFF3F<32>
	r16_157 = 0x1C630BC<32>
	r3_163 = Mem161[0x1C630BC<32>:word32] & 0xFFFFFEF8<32>
l0000695C_ds_f:
l00006960:
	branch !(r14_91 == 2<32>) l00006964_ds_t
l00006964_ds_t:
l00006A04:
	Mem170[0x1C63108<32>:word32] = Mem133[0x1C63108<32>:word32] & 0xFFFFFFBF<32>
	Mem173[0x1C63108<32>:word32] = Mem170[0x1C63108<32>:word32] | 0xC0<32>
	r4_174 = Mem173[r2_31 + 4<i32>:word32]
l00006964_ds_f:
l00006968:
l00006998:
	Mem183[0x1C63108<32>:word32] = Mem133[0x1C63108<32>:word32] & 0xFFFFFF3F<32> | 0x80<32>
	Mem197[0x1C630BC<32>:word32] = Mem183[0x1C630BC<32>:word32] & 0xFFFFFEF8<32> | 0x100<32> | (Mem183[0x1C63060<32>:word32] >>u 0x10<32> & 0x1F<32>) - 2<i32>
	r16_157 = 0x1C6311C<32>
	r3_163 = (Mem197[0x1C6311C<32>:word32] | 0x8000000<32>) & 0x7FFFFFFF<32>
l000069F8:
	Mem203[r16_157:word32] = r3_163
	r4_174 = Mem203[r2_31 + 4<i32>:word32]
l00006A24:
	branch r4_174 >u 7<32> || r4_174 <u 6<i32> l00006A30_ds_t
l00006A30_ds_t:
l00006A30_ds_f:
l00006A34:
	Mem220[0x1C6311C<32>:word32] = Mem215[0x1C6311C<32>:word32] & 0x88FFFFFF<32> | 0x22000000<32>
l00006A54:
	word32 r5_234
	branch (Mem223[r2_31 + 20<i32>:word32] & 0x1000<32>) == 0<32> l00006A64_ds_t
l00006A64_ds_t:
l00006A8C:
	r5_234 = Mem223[0x1C630C0<32>:word32] & 0xF0000000<32> | 0x1003087<32>
l00006A64_ds_f:
l00006A68:
	r5_234 = Mem223[0x1C630C0<32>:word32] & 0xF0000000<32> | 0x3003087<32>
l00006AA8:
	word32 r15_343
	Mem246[0x1C630C0<32>:word32] = r5_234
	branch (Mem246[0x1F01510<32>:word32] & 3<32>) == 0<32> l00006AC4_ds_t
l00006AC4_ds_t:
l00006C98:
	word32 r3_272
	Mem268[0x1C63140<32>:word32] = Mem246[r2_31 + 8<i32>:word32] & 0xFFFFFF<32> | Mem246[0x1C63140<32>:word32] & 0xFF000000<32>
	branch r14_91 != 1<32> l00006CC8_ds_t
l00006CC8_ds_t:
	bool F_271 = r4_174 == 3<32>
l00006D18:
	branch F_271 l00006D1C_ds_t
l00006D1C_ds_t:
	r3_272 = -1522<i32>
l00006D1C_ds_f:
l00006D20:
	r3_272 = -1394<i32>
l00006CC8_ds_f:
l00006CCC:
	Mem282[0x1C63000<32>:word32] = -82<i32>
	Mem285[0x1C63000<32>:word32] = -83<i32>
l00006CE4:
	branch (Mem285[0x1C63010<32>:word32] & 1<32>) == 0<32> l00006CE4
l00006CF8:
	word32 r14_1020
	branch Mem285[fn0000C8A0(-10<i32>, r15_140, out r14_1020, out r15_140) + 4<i32>:word32] == 3<32> l00006D0C_ds_t
l00006D0C_ds_t:
	r3_272 = -1440<i32>
l00006D0C_ds_f:
l00006D10:
	r3_272 = -1312<i32>
l00006D24:
	Mem327[0x1C63000<32>:word32] = r3_272
	Mem329[0x1C63000<32>:word32] = r3_272 | 1<32>
	word32 r14_1021
	fn0000C8A0(-10<i32>, r15_140, out r14_1021, out r15_343)
l00006D44:
	branch (Mem329[0x1C63010<32>:word32] & 1<32>) == 0<32> l00006D44
l00006AC4_ds_f:
l00006AC8:
	word32 r3_391
	Mem359[0x1F01510<32>:word32] = Mem246[0x1F01510<32>:word32] & 0xFFFFFFFD<32>
	word32 r14_366
	word32 r15_372
	Mem390[0x1C63140<32>:word32] = Mem359[fn0000C8A0(-10<i32>, r15_140, out r14_366, out r15_372) + 8<i32>:word32] & 0xFFFFFF<32> | Mem359[0x1C63140<32>:word32] & 0xFF000000<32>
	branch r14_366 != 1<32> l00006B14_ds_t
l00006B14_ds_t:
	r3_391 = -98<i32>
l00006B14_ds_f:
l00006B18:
	Mem398[0x1C63000<32>:word32] = -82<i32>
	Mem401[0x1C63000<32>:word32] = -83<i32>
l00006B30:
	branch (Mem401[0x1C63010<32>:word32] & 1<32>) == 0<32> l00006B30
l00006B44:
	word32 r14_1016
	fn0000C8A0(-10<i32>, r15_372, out r14_1016, out r15_372)
	r3_391 = -32<i32>
l00006B50:
	Mem432[0x1C63000<32>:word32] = r3_391
	Mem434[0x1C63000<32>:word32] = r3_391 | 1<32>
	word32 r14_1015
	word32 r15_448
	fn0000C8A0(-10<i32>, r15_372, out r14_1015, out r15_448)
l00006B70:
	branch (Mem434[0x1C63010<32>:word32] & 1<32>) == 0<32> l00006B80_ds_t
l00006B80_ds_t:
l00006B80_ds_f:
l00006B84:
	Mem470[0x1C6310C<32>:word32] = Mem434[0x1C6310C<32>:word32] & 0xF9FFFFFF<32> | 0x4000000<32>
	word32 r14_1017
	word32 r15_484
	fn0000C8A0(-10<i32>, r15_448, out r14_1017, out r15_484)
	Mem495[0x1C63004<32>:word32] = Mem470[0x1C63004<32>:word32] | 1<32>
l00006BC0:
	branch (Mem495[0x1C63018<32>:word32] & 7<32>) != 3<32> l00006BD0_ds_t
l00006BD0_ds_t:
l00006BD0_ds_f:
l00006BD4:
	Mem508[0x1F01510<32>:word32] = Mem495[0x1F01510<32>:word32] & 0xFFFFFFFE<32>
	word32 r14_1018
	word32 r15_522
	fn0000C8A0(-10<i32>, r15_484, out r14_1018, out r15_522)
	Mem535[0x1C63004<32>:word32] = Mem508[0x1C63004<32>:word32] & 0xFFFFFFFE<32>
l00006C0C:
	branch (Mem535[0x1C63018<32>:word32] & 7<32>) != 1<32> l00006C1C_ds_t
l00006C1C_ds_t:
l00006C1C_ds_f:
l00006C20:
	word32 r14_550
	fn0000C8A0(-15<i32>, r15_522, out r14_550, out r15_343)
	branch r14_550 != 1<32> l00006C30_ds_t
l00006C30_ds_t:
l00006D58:
l00006C30_ds_f:
l00006C34:
	Mem574[0x1C63108<32>:word32] = Mem535[0x1C63108<32>:word32] & 0xFFFFFF3F<32>
	Mem580[0x1C6310C<32>:word32] = Mem574[0x1C6310C<32>:word32] & 0xF9FFFFFF<32> | 0x2000000<32>
	word32 r14_1019
	fn0000C8A0(r14_550, r15_343, out r14_1019, out r15_343)
	Mem603[0x1C63000<32>:word32] = -1025<i32>
l00006C7C:
	branch (Mem603[0x1C63010<32>:word32] & 1<32>) == 0<32> l00006C8C_ds_t
l00006C8C_ds_t:
l00006C8C_ds_f:
l00006C90:
l00006D60:
	word32 r4_619 = Mem615[0x1C63010<32>:word32] >>u 0x14<32> & 0xFF<32>
	word32 r20_624 = ((0<32> - r4_619 | r4_619) ^ 0xFFFF<32>) >>u 0x1F<32>
l00006D80:
	branch (Mem615[0x1C63018<32>:word32] & 1<32>) == 0<32> l00006D90_ds_t
l00006D90_ds_t:
l00006D90_ds_f:
l00006D94:
	Mem636[0x1C6308C<32>:word32] = Mem615[0x1C6308C<32>:word32] | 0x80000000<32>
	word32 r14_1022
	word32 r15_654
	fn0000C8A0(-10<i32>, r15_343, out r14_1022, out r15_654)
	Mem665[0x1C6308C<32>:word32] = Mem636[0x1C6308C<32>:word32] & 0x7FFFFFFF<32>
	word32 r14_1023
	word32 r15_678
	fn0000C8A0(-10<i32>, r15_654, out r14_1023, out r15_678)
	Mem689[0x1C620D0<32>:word32] = Mem665[0x1C620D0<32>:word32] | 0x80000000<32>
	word32 r14_696
	word32 r15_702
	word32 r2_713 = Mem689[fn0000C8A0(-10<i32>, r15_678, out r14_696, out r15_702) + 4<i32>:word32]
	Mem717[0x1C6310C<32>:word32] = Mem689[0x1C6310C<32>:word32] & 0xF9FFFFFF<32>
	branch r2_713 >u 7<32> || r2_713 <u 6<i32> l00006E10_ds_t
l00006E10_ds_t:
l00006E10_ds_f:
l00006E14:
	branch r14_696 != 1<32> l00006E18_ds_t
l00006E18_ds_t:
l00006E18_ds_f:
l00006E1C:
	Mem728[0x1C6311C<32>:word32] = Mem717[0x1C6311C<32>:word32] & 0xFFFFFF3F<32> | 0x40<32>
l00006E30:
	r11Out = r20_624
	r14Out = dwLoc14
	r15Out = r15_702
	r16Out = dwLoc10
	r18Out = dwLoc0C
	r20Out = r2
	return dwLoc18
fn000073EC_exit:


word32 fn00007428(word32 r3, word32 r15, word32 r20, ptr32 & r15Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007A3C
// MayUse:  r15:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r15 r20
// Trashed: CV r11 r12 r13 r15 r17 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r9
fn00007428_entry:
l00007428:
	word32 r14_10 = Mem7[r3 + 92<i32>:word32]
	word32 r18_18 = Mem17[r3 + 16<i32>:word32]
	word32 r16_19 = Mem17[r3 + 20<i32>:word32]
	Mem20[r3 + 16<i32>:word32] = 0xB000B0<32>
	Mem24[r3 + 92<i32>:word32] = r14_10 | 1<32>
	Mem25[r3 + 20<i32>:word32] = 0<i32>
	branch ((r14_10 | 1<32>) & 0x10<32>) == 0<i32> l00007474_ds_t
l00007474_ds_t:
l00007474_ds_f:
l00007478:
	Mem33[r3 + 92<i32>:word32] = r14_10 | 5<32>
l00007480:
	bool F_114
	Mem38[r3:word32] = Mem35[r3 + 68<i32>:word32] & 0x3FF<32>
	Mem40[r3 + 4<i32>:word32] = -7<i32>
	Mem43[r3 + 8<i32>:word32] = 0x3B3BF9<32>
	Mem45[r3 + 80<i32>:word32] = -21765<i32>
	Mem47[r3 + 84<i32>:word32] = 0x33330000<32>
	Mem49[r3 + 88<i32>:word32] = 0xCCCC<32>
	Mem52[r3 + 36<i32>:word32] = -2<i32>
	word32 r11_433
	word32 r14_145
	word32 r18_149
	word32 r16_147
	word32 r15_104
	word32 r20_152
	word32 r2_116 = fn000073EC(r3, r14_10, r15, r16_19, r18_18, r20, out r11_433, out r14_145, out r15_104, out r16_147, out r18_149, out r20_152)
	branch (Mem52[r2_116 + 92<i32>:word32] & 0x10<32>) != 0<32> l000074EC
l000074EC:
	word32 r11_91
	r2_116 = fn00006EE0(r2_116, out r11_91)
	F_114 = r11_91 != 0<32>
l000074DC:
	F_114 = fn00006FE8(r15_104, out r15_104) != 0<32>
l000074F8:
	word32 r11_253
	branch F_114 l00007608
l00007500:
	bool F_180
	Mem121[r2_116:word32] = Mem52[r2_116 + 68<i32>:word32] >>u 0xA<32> & 0x3FF<32>
	Mem123[r2_116 + 4<i32>:word32] = -6<i32>
	Mem126[r2_116 + 8<i32>:word32] = 0x3B3BF9<32>
	Mem128[r2_116 + 80<i32>:word32] = -21765<i32>
	Mem130[r2_116 + 84<i32>:word32] = 0x33330000<32>
	Mem132[r2_116 + 88<i32>:word32] = 0xCCCC<32>
	Mem135[r2_116 + 36<i32>:word32] = -2<i32>
	word32 r11_434
	r2_116 = fn000073EC(r2_116, r14_145, r15_104, r16_147, r18_149, r20_152, out r11_434, out r14_145, out r15_104, out r16_147, out r18_149, out r20_152)
	branch (Mem135[r2_116 + 92<i32>:word32] & 0x10<32>) != 0<32> l00007570
l00007570:
	word32 r11_172
	r2_116 = fn00006EE0(r2_116, out r11_172)
	F_180 = r11_172 != 0<32>
l00007560:
	F_180 = fn00006FE8(r15_104, out r15_104) != 0<32>
l0000757C:
	branch F_180 l00007608
l00007584:
	bool F_261
	Mem202[r2_116:word32] = Mem135[r2_116 + 68<i32>:word32] >>u 0x14<32> & 0x3FF<32>
	Mem204[r2_116 + 4<i32>:word32] = -3<i32>
	Mem207[r2_116 + 8<i32>:word32] = 0x3B3BF9<32>
	Mem209[r2_116 + 80<i32>:word32] = -21765<i32>
	Mem211[r2_116 + 84<i32>:word32] = 0x33330000<32>
	Mem213[r2_116 + 88<i32>:word32] = 0xBBBB<32>
	Mem216[r2_116 + 28<i32>:word32] = -64<i32>
	word32 r11_435
	r2_116 = fn000073EC(r2_116, r14_145, r15_104, r16_147, r18_149, r20_152, out r11_435, out r14_145, out r15_104, out r16_147, out r18_149, out r20_152)
	branch (Mem216[r2_116 + 92<i32>:word32] & 0x10<32>) != 0<32> l000075F4
l000075F4:
	r2_116 = fn00006EE0(r2_116, out r11_253)
	F_261 = r11_253 == 0<32>
l000075E4:
	r11_253 = fn00006FE8(r15_104, out r15_104)
	F_261 = r11_253 == 0<32>
l00007600:
	branch F_261 l00007618
l00007608:
	Mem282[r2_116 + 92<i32>:word32] = r14_145
	Mem285[r2_116 + 16<i32>:word32] = r18_149
	Mem288[r2_116 + 20<i32>:word32] = r16_147
	r11_253 = -1<i32>
l00007618:
	r15Out = r15_104
	r20Out = r20_152
	return r11_253
fn00007428_exit:


word32 fn00007634(word32 r3, word32 r15, word32 r18, word32 r20, ptr32 & r15Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007A3C
// MayUse:  r15:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r15 r18 r20
// Trashed: CV r11 r12 r13 r15 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00007634_entry:
l00007634:
	word32 r14_10 = Mem7[r3 + 92<i32>:word32]
	word32 r16_16 = Mem15[r3 + 16<i32>:word32]
	Mem18[r3 + 16<i32>:word32] = 0xB000B0<32>
	Mem21[r3 + 92<i32>:word32] = r14_10 | 1<32>
	Mem22[r3 + 20<i32>:word32] = -4096<i32>
	branch ((r14_10 | 1<32>) & 0x10<32>) == 0<32> l00007678_ds_t
l00007678_ds_t:
l00007678_ds_f:
l0000767C:
	Mem30[r3 + 92<i32>:word32] = r14_10 | 5<32>
l00007684:
	word32 r14_44
	word32 r16_46
	word32 r18_48
	word32 r20_51
	word32 r11_184
	word32 r15_134
	word32 r2_106 = fn000073EC(r3, r14_10, r15, r16_16, r18, r20, out r11_184, out r14_44, out r15_134, out r16_46, out r18_48, out r20_51)
	word32 r11_110 = 0<i32>
	branch (Mem71[0x1C63010<32>:word32] & 0x100000<32>) != 0<i32> l000076F4
l000076B0:
	bool F_103
	branch (Mem71[r2_106 + 92<i32>:word32] & 0x10<32>) != 0<i32> l000076D4
l000076D4:
	r2_106 = fn00006EE0(r2_106, out r11_110)
	F_103 = r11_110 == 0<32>
l000076C4:
	r11_110 = fn00006FE8(r15_134, out r15_134)
	F_103 = r11_110 == 0<32>
l000076E0:
	branch F_103 l000076F4
l000076E8:
	Mem107[r2_106 + 92<i32>:word32] = r14_44
	Mem109[r2_106 + 16<i32>:word32] = r16_46
	r11_110 = -1<i32>
l000076F4:
	r15Out = r15_134
	r18Out = r18_48
	r20Out = r20_51
	return r11_110
fn00007634_exit:


word32 fn0000770C(word32 r3, word32 r14, word32 r15, word32 r16, word32 r18, word32 r20, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007A3C
// MayUse:  r14:[0..31] r15:[0..31] r16:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r16 r18 r2 r20
// Trashed: CV r1 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000770C_entry:
l0000770C:
	word32 r20_29
	word32 r16_813
	word32 r14_812
	word32 r18_814
	word32 r15_23
	word32 r11_19
	word32 r2_28 = fn000073EC(r3, r14, r15, r16, r18, r20, out r11_19, out r14_812, out r15_23, out r16_813, out r18_814, out r20_29)
	branch r11_19 == 0<32> l00007734_ds_t
l00007734_ds_t:
l00007734_ds_f:
	word32 r7_171 = 0<i32>
l00007738:
	word32 r23_49 = Mem12[r2_28 + 20<i32>:word32]
	word32 r11_53 = r23_49 >>u 8<32> & 0xF<32>
	word32 r5_52 = 0x40000000<32>
	word32 r19_54 = 0<i32>
	r11_19 = r11_53 + -1<i32>
	word32 r17_428 = 0<i32>
l000079E0:
	word32 r15_63 = r5_52 ^ 0xFFFF<32>
	word32 r8_64 = r5_52
	word32 r6_65 = r15_63
	word32 r4_66 = 0<i32>
l0000776C:
	word32 r12_72
	branch (r4_66 & 1<32>) != 0<32> l00007778_ds_t
l00007778_ds_t:
	r12_72 = r8_64
l00007778_ds_f:
l0000777C:
	r12_72 = r6_65
l00007780:
	Mem78[r8_64:word32] = r12_72
	r4_66 = r4_66 + -1<i32>
	r8_64 = r8_64 + -4<i32>
	branch r4_66 != 0x40<32> l00007794_ds_t
l00007794_ds_t:
	r6_65 = r6_65 - 4<i32>
l00007794_ds_f:
l00007798:
	Mem97[0x1C62000<32>:word32] = Mem78[0x1C62000<32>:word32] & 0xFFFFF0F3<32> | 0x6F0<32>
	word32 r6_143 = -11<i32>
	word32 r14_102 = 0xFFFFFFEA<32>
l000077B4:
	word32 r8_100 = 0<i32>
	word32 r12_105 = r15_63
	word32 r4_106 = 0<32>
	word32 r14_108 = (-1<i32> << r14_102) + r5_52
l000077C8:
	word32 r21_114
	branch (r4_106 & 1<32>) == 0<32> l000077D4_ds_t
l000077D4_ds_t:
	r21_114 = r12_105
l000077D4_ds_f:
l000077D8:
	r21_114 = r8_100 + r5_52
l000077DC:
	word32 r4_172
	bool F_144
	branch r21_114 == Mem97[r8_100 + r14_108:word32] l000077EC_ds_t
l000077EC_ds_t:
	r4_106 = r4_106 + -1<i32>
l0000780C:
	r8_100 = r8_100 + -4<i32>
	branch r4_106 != 0x40<32> l00007818_ds_t
l00007818_ds_t:
	r12_105 = r12_105 - 4<i32>
l00007818_ds_f:
l0000781C:
	F_144 = r6_143 >u 0xF<32>
l000077EC_ds_f:
	word32 r4_145 = r4_106 + -1<i32>
l000077F0:
	branch !(r4_145 == 0x41<32>) l000077FC_ds_t
l000077FC_ds_t:
	r6_143 = r6_143 + -1<i32>
l00007824:
	branch r6_143 != 0x11<32> l0000782C_ds_t
l0000782C_ds_t:
	r14_102 = r6_143 + -11<i32>
l0000782C_ds_f:
l00007830:
l000077FC_ds_f:
	word32 r6_159 = r6_143 + -1<i32>
l00007800:
	r6_143 = r6_159 - 1<i32>
	F_144 = r6_159 >u 0x10<32> || r6_159 <u 1<i32>
l00007838:
	branch !F_144 l0000783C_ds_t
l0000783C_ds_t:
	r4_172 = r7_171 + -4<i32>
l0000783C_ds_f:
l00007840:
l00007844:
	r6_143 = -16<i32>
	r4_172 = r7_171 + -4<i32>
l00007848:
	word32 r14_224 = r6_143 << r4_172 | (-255<i32> << r4_172 ^ 0xFFFF<32>) & Mem97[r2_28 + 16<i32>:word32]
	Mem233[0x1C62000<32>:word32] = Mem97[0x1C62000<32>:word32] & 0xFFFFF003<32> | 0x6A4<32>
	word32 r12_214 = r15_63
	word32 r8_231 = r5_52
	word32 r4_234 = 0<i32>
l00007880:
	word32 r21_240
	branch (r4_234 & 1<32>) != 0<32> l0000788C_ds_t
l0000788C_ds_t:
	r21_240 = r8_231
l0000788C_ds_f:
l00007890:
	r21_240 = r12_214
l00007894:
	branch r21_240 != Mem233[r8_231 + 2048<i32>:word32] l000078A0_ds_t
l000078A0_ds_t:
l000078A0_ds_f:
	r8_231 = r8_231 + -4<i32>
l000078A4:
	r4_234 = r4_234 + -1<i32>
	branch r4_234 != 0x40<32> l000078B0_ds_t
l000078B0_ds_t:
	r12_214 = r12_214 - 4<i32>
l000078B0_ds_f:
l000078B4:
	word32 r4_264 = r4_234 ^ 0x40<32>
	Mem301[0x1C62000<32>:word32] = Mem233[0x1C62000<32>:word32] & 0xFFFFF003<32> | 0xAA0<32>
	word32 r4_266 = 0<32> - r4_264 | r4_264
	word32 r4_272 = r7_171 + -12<i32>
	word32 r14_297 = r4_266 >>u 0x1F<32> << r4_272 | r14_224 & (-15<i32> << r4_272 ^ 0xFFFF<32>)
	word32 r4_302 = -9<i32>
	word32 r16_312 = 0<32>
l000078F8:
	word32 r12_313 = 0<i32>
	word32 r21_315 = r15_63
	word32 r16_318 = r16_312 + r5_52
	word32 r8_320 = 0<32>
l00007908:
	word32 r29_325
	branch (r8_320 & 1<32>) == 0<32> l00007914_ds_t
l00007914_ds_t:
	r29_325 = r21_315
l00007914_ds_f:
l00007918:
	r29_325 = r12_313 + r5_52
l0000791C:
	word32 r12_385
	word32 r12_382
	bool F_355
	branch r29_325 == Mem301[r12_313 + r16_318:word32] l0000792C_ds_t
l0000792C_ds_t:
	r8_320 = r8_320 + -1<i32>
l0000794C:
	r12_313 = r12_313 + -4<i32>
	branch r8_320 != 0x40<32> l00007958_ds_t
l00007958_ds_t:
	r21_315 = r21_315 - 4<i32>
l00007958_ds_f:
l0000795C:
	F_355 = r4_302 >u 0xC<32>
l0000792C_ds_f:
	word32 r8_356 = r8_320 + -1<i32>
l00007930:
	branch !(r8_356 == 0x41<32>) l0000793C_ds_t
l0000793C_ds_t:
	r4_302 = r4_302 + -1<i32>
l00007964:
	branch r4_302 != 0xE<32> l0000796C_ds_t
l0000796C_ds_t:
	r16_312 = -1<i32> << r4_302
l0000796C_ds_f:
l00007970:
l0000793C_ds_f:
	word32 r4_371 = r4_302 + -1<i32>
l00007940:
	r4_302 = r4_371 - 1<i32>
	F_355 = r4_371 >u 0xD<32> || r4_371 <u 1<i32>
l00007978:
	branch F_355 l0000797C_ds_t
l0000797C_ds_t:
l00007990:
l00007994:
	r4_302 = -13<i32>
	r12_382 = 0xFFFFFFE9<32>
l0000797C_ds_f:
	bool F_384 = r4_302 == 9<32>
l00007980:
	branch F_384 l00007984_ds_t
l00007984_ds_t:
	r12_385 = 0<i32>
l00007984_ds_f:
l00007988:
	r12_382 = r4_302 - 10<i32>
l00007998:
	r12_385 = -1<i32> << r12_382
l0000799C:
	word32 r15_410 = -15<i32> << r7_171
	r17_428 = r17_428 + -1<i32>
	r15_23 = r15_410 ^ 0xFFFF<32>
	r7_171 = r7_171 + -16<i32>
	word32 r8_464 = r12_385 << r7_171 | r14_297 & (r15_410 ^ 0xFFFF<32>)
	branch r17_428 >=u r11_53 + -1<i32> l000079C0_ds_t
l000079C0_ds_t:
	Mem475[r2_28 + 16<i32>:word32] = r8_464
l000079F4:
	branch r11_53 == 0xFFFFFFFE<32> l000079FC_ds_t
l000079FC_ds_t:
l000079FC_ds_f:
l00007A00:
	word32 r3_502
	branch !(r8_464 >>u 0x10<32> != (r8_464 & 0xFFFF<32>)) l00007A10_ds_t
l00007A10_ds_t:
	r3_502 = r23_49 & 0xFFFFF0FF<32>
l00007A10_ds_f:
l00007A14:
	r3_502 = r23_49 & 0xFFFFF0FF<32> | 0x100<32>
l00007A18:
	Mem507[r2_28 + 20<i32>:word32] = r3_502
	r11_19 = -1<i32>
l00007A20:
	r11Out = r11_19
	r14Out = dwLoc38
	r15Out = r15_23
	r16Out = dwLoc34
	r18Out = dwLoc30
	r20Out = r20_29
	return dwLoc3C
fn0000770C_exit:
l000079C0_ds_f:
	Mem539[r2_28 + 16<i32>:word32] = r8_464
l000079C4:
	r19_54 = r19_54 + -2<i32> + r6_143 + (r4_266 >>u 0x1F<32>) + r4_302
	r5_52 = r5_52 + (-1<i32> << r19_54 + -1<i32>)


word32 fn00007A3C(word32 r3, word32 r14, word32 r15, word32 r16, word32 r18, word32 r20, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007FAC
// MayUse:  r14:[0..31] r15:[0..31] r16:[0..31] r18:[0..31] r20:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r16 r18 r20
// Trashed: CV r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn00007A3C_entry:
l00007A3C:
	word32 r11_116
	branch (Mem0[r3 + 92<i32>:word32] & 0x2000<32>) != 0<32> l00007A58_ds_t
l00007A58_ds_t:
l00007A58_ds_f:
l00007A5C:
	r11_116 = fn00007428(r3, r15, r20, out r15, out r20)
	branch r11_116 == 0<32> l00007AD0
l00007A70:
	branch (Mem9[r3 + 92<i32>:word32] & 0x4000<32>) != 0<32> l00007A98
l00007A84:
	r11_116 = fn00007634(r3, r15, r18, r20, out r15, out r18, out r20)
	branch r11_116 == 0<32> l00007AD0
l00007A98:
	word32 r2_94 = fn0000770C(r3, r14, r15, r16, r18, r20, out r11_116, out r14, out r15, out r16, out r18, out r20)
	branch r11_116 == 0<32> l00007AD0
l00007AAC:
	word32 r3_113 = Mem9[r2_94 + 92<i32>:word32]
	branch (r3_113 & 0x8000<32>) != 0<32> l00007ABC_ds_t
l00007ABC_ds_t:
	r11_116 = -1<i32>
l00007ABC_ds_f:
	r11_116 = -1<i32>
l00007AC0:
	Mem124[r2_94 + 92<i32>:word32] = (r3_113 | 3<32>) & 0xFFFF9FFF<32>
l00007AD0:
	r14Out = r14
	r15Out = r15
	r16Out = r16
	r18Out = r18
	r20Out = r20
	return r11_116
fn00007A3C_exit:


word32 fn00007AE0(word32 r4, word32 r14, word32 r15, word32 r18, word32 r20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007FAC
// MayUse:  r14:[0..31] r15:[0..31] r18:[0..31] r20:[0..31] r4:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00007AE0_entry:
l00007AE0:
	word32 r16_9 = Mem8[0x1F01510<32>:word32]
	word32 r16_14 = r16_9 & 3<32>
	branch (r16_9 & 3<32>) != 0<32> l00007B0C_ds_t
l00007B0C_ds_t:
l00007B0C_ds_f:
l00007B10:
	branch (Mem13[r4 + 92<i32>:word32] & 1<32>) != 0<32> l00007B38
l00007B24:
	branch fn00007A3C(r4, r14, r15, r16_9 & 3<32>, r18, r20, out r14, out r15, out r16_14, out r18, out r20) == 0<32> l00007B34_ds_t
l00007B34_ds_t:
l00007B34_ds_f:
l00007B38:
	word32 r11_62
	word32 r16_67
	word32 r18_425
	word32 r20_426
	word32 r14_424
	word32 r2_71 = fn000073EC(r4, r14, r15, r16_14, r18, r20, out r11_62, out r14_424, out r15, out r16_67, out r18_425, out r20_426)
	branch r11_62 == 0<32> l00007B48_ds_t
l00007B48_ds_t:
l00007B48_ds_f:
l00007B4C:
	word32 r14_103
	word32 r14_91 = Mem13[r2_71 + 20<i32>:word32]
	branch r14_91 >= 0<i32> l00007B58_ds_t
l00007B58_ds_t:
l00007B64:
	word32 r11_94 = fn00006E54()
	Mem105[r2_71 + 20<i32>:word32] = r11_94 << 0x10<32> | CONVERT(Mem13[r2_71 + 22<i32>:word16], word16, word32)
	r14_103 = r11_94
l00007B58_ds_f:
l00007B5C:
	r14_103 = r14_91 >>u 0x10<32> & 0x7FFF<32>
l00007B80:
	word32 r5_118
	word32 r3_110 = Mem109[r2_71 + 92<i32>:word32]
	branch (r3_110 & 0x200<32>) == 0<32> l00007B90_ds_t
l00007B90_ds_t:
l00007BB4:
	r5_118 = Mem109[0x1C63100<32>:word32] & 0xFFFF0FFF<32>
l00007B90_ds_f:
l00007B94:
	r5_118 = Mem109[0x1C63100<32>:word32] & 0xFFFF0FFF<32> | 0x5000<32>
l00007BC8:
	Mem129[0x1C63100<32>:word32] = r5_118
	Mem135[0x1C63140<32>:word32] = Mem129[0x1C63140<32>:word32] | 0x80000000<32>
	branch (r3_110 & 0x100<32>) == 0<32> l00007BF0_ds_t
l00007BF0_ds_t:
l00007BF0_ds_f:
l00007BF4:
	Mem144[0x1C630B8<32>:word32] = Mem135[0x1C630B8<32>:word32] | 0x300<32>
l00007C08:
	word32 r5_154
	branch (r3_110 & 0x4000000<32>) == 0<32> l00007C14_ds_t
l00007C14_ds_t:
l00007C2C:
	r5_154 = Mem152[0x1C63108<32>:word32] | 0x2000<32>
l00007C14_ds_f:
l00007C18:
	r5_154 = Mem152[0x1C63108<32>:word32] & 0xFFFFDFFF<32>
l00007C38:
	Mem163[0x1C63108<32>:word32] = r5_154
	branch Mem163[r2_71 + 4<i32>:word32] != 7<32> l00007C48_ds_t
l00007C48_ds_t:
l00007C48_ds_f:
l00007C4C:
	Mem179[0x1C6307C<32>:word32] = Mem163[0x1C6307C<32>:word32] & 0xFFF0FFFF<32> | 0x10000<32>
l00007C74:
	branch (r3_110 & 0x8000000<32>) != 0<32> l00007C80_ds_t
l00007C80_ds_t:
l00007C80_ds_f:
l00007C84:
	fn00005078()
l00007C90:
	branch r16_67 == 0<32> l00007CB0
l00007C98:
	branch (Mem208[r2_71 + 92<i32>:word32] & 0x10000000<32>) == 0<32> l00007CAC_ds_t
l00007CAC_ds_t:
l00007CAC_ds_f:
l00007CB0:
	Mem226[0x1C62094<32>:word32] = 0xFFFFFFFF<32>
	branch fn00007338(r14_103, -256<i32>) != 0<i32> l00007CE0
l00007CDC:
l00007CE0:
	return r15
fn00007AE0_exit:


void fn00007E04(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31]
// LiveOut:
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn00007E04_entry:
l00007E04:
	Mem12[0x1C62094<32>:word32] = 0<i32>
	word32 r15_27
	word32 r14_217
	word32 r2_18 = fn0000C8A0(-1<i32>, r15, out r14_217, out r15_27)
	Mem38[r2_18 | 0x3004<32>:word32] = Mem12[r2_18 | 0x3004<32>:word32] | 0x101<32>
l00007E40:
	branch (Mem38[r2_18 | 0x3018<32>:word32] & 7<32>) != 3<32> l00007E50_ds_t
l00007E50_ds_t:
l00007E50_ds_f:
l00007E54:
	word32 r15_60
	word32 r14_218
	word32 r2_51 = fn0000C8A0(-1<i32>, r15_27, out r14_218, out r15_60)
	Mem71[r2_51:word32] = Mem38[r2_51:word32] & 0xFF00FFFF<32>
	word32 r14_78
	word32 r15_84
	fn0000C8A0(-1<i32>, r15_60, out r14_78, out r15_84)
	word32 r3_104 = r14_78 | 0x3344<32>
l00007E84:
	Mem102[r3_104:word32] = Mem94[r3_104:word32] & 0xFF3F0FF4<32> | 0x40500A<32>
	r3_104 = r3_104 + -128<i32>
	branch r3_104 != 0x1C63544<32> l00007EB4_ds_t
l00007EB4_ds_t:
l00007EB4_ds_f:
l00007EB8:
	Mem117[0x1C63208<32>:word32] = Mem102[0x1C63208<32>:word32] & 0xFFFFFC24<32> | 0x313<32>
	Mem122[0x1F01510<32>:word32] = Mem117[0x1F01510<32>:word32] | 3<32>
	word32 r15_136
	word32 r14_219
	Mem145[fn0000C8A0(-10<i32>, r15_84, out r14_219, out r15_136):word32] = 0<i32>
	word32 r2_149 = Mem145[0x1C20020<32>:word32]
	Mem152[0x1C20020<32>:word32] = r2_149 & 0x7FFFFFFF<32>
	Mem155[0x1C20020<32>:word32] = r2_149 & 0x7FFFFFFF<32> | 0x100000<32>
	Mem161[0x1C200F4<32>:word32] = Mem155[0x1C200F4<32>:word32] & 0x7FFFFFFF<32>
	Mem165[0x1C200F4<32>:word32] = Mem161[0x1C200F4<32>:word32] | 0x10000<32>
	Mem170[0x1C20060<32>:word32] = Mem165[0x1C20060<32>:word32] & 0xFFFFBFFF<32>
	Mem176[0x1C2015C<32>:word32] = Mem170[0x1C2015C<32>:word32] & 0x7FFFFFFF<32>
	Mem180[0x1C202C0<32>:word32] = Mem176[0x1C202C0<32>:word32] & 0xFFFFBFFF<32>
	word32 r15_221
	word32 r14_220
	fn0000C8A0(-1<i32>, r15_136, out r14_220, out r15_221)
	return
fn00007E04_exit:


word32 fn00007FAC(word32 r14, word32 r15, word32 r18, word32 r20, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r14:[0..31] r15:[0..31] r18:[0..31] r20:[0..31]
// LiveOut: r15 r9
// Trashed: CV r1 r11 r12 r13 r15 r17 r18 r19 r20 r21 r23 r25 r27 r29 r3 r31 r4 r5 r6 r7 r8 r9
// Preserved:
fn00007FAC_entry:
l00007FAC:
	word32 r4_8 = Mem5[0x12E8C<32>:word32]
l00007FC8_thunk_fn00007AE0:
	r15Out = fn00007AE0(r4_8, r14, r15, r18, r20)
	return dwLoc0C
fn00007FAC_exit:


word32 fn00007FD0(word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31]
// LiveOut: r15 r2
// Trashed: CV r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn00007FD0_entry:
l00007FD0:
	Mem8[0x1C62094<32>:word32] = 0xFFFFFFFF<32>
	word32 r15_23
	word32 r14_39
	word32 r2_14 = fn0000C8A0(-10<i32>, r15, out r14_39, out r15_23)
l00007FF8_thunk_fn0000AEDC:
	fn0000AEDC(0x9071<32>)
	r15Out = r15_23
	return r2_14
fn00007FD0_exit:


word32 fn00008000(word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31]
// LiveOut: r15 r2
// Trashed: CV r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn00008000_entry:
l00008000:
	Mem8[0x1C62094<32>:word32] = 0x10000<32>
	word32 r15_23
	word32 r14_39
	word32 r2_14 = fn0000C8A0(-10<i32>, r15, out r14_39, out r15_23)
l00008028_thunk_fn0000AEDC:
	fn0000AEDC(0x9072<32>)
	r15Out = r15_23
	return r2_14
fn00008000_exit:


word32 fn00008030(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..7]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn00008030_entry:
l00008030:
	Mem20[0x1C62094<32>:word32] = (-1<i32> << r3 ^ 0xFFFF<32>) & Mem0[0x1C62094<32>:word32] | CONVERT(SLICE(r4, byte, 0), byte, int32) << r3
	word32 r15_34
	word32 r14_49
	fn0000C8A0(-10<i32>, r15, out r14_49, out r15_34)
l00008078_thunk_fn0000AEDC:
	fn0000AEDC(0x9073<32>)
	return r15_34
fn00008030_exit:


word32 fn00008080(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000082FC
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r5 r7
// Preserved:
fn00008080_entry:
l00008080:
	word32 r5_13 = (r3 & 0xFFFFFFFC<32>) + 0x1C17000<32>
	word32 r3_12 = (r3 & 3<32>) << 3<32>
	Mem29[r5_13:word32] = r4 << r3_12 | (-1<i32> << r3_12 ^ 0xFFFF<32>) & Mem4[r5_13:word32]
	return dwLoc14
fn00008080_exit:


void fn000080EC(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000082FC
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r5 r7
// Preserved:
fn000080EC_entry:
l000080EC:
	word32 r5_13 = (r3 & 0xFFFFFFFC<32>) + 0x1C17000<32>
	word32 r3_12 = (r3 & 3<32>) << 3<32>
	Mem30[r5_13:word32] = r4 << r3_12 + -4<i32> | (-1<i32> << r3_12 + -4<i32> ^ 0xFFFF<32>) & Mem4[r5_13:word32]
	return
fn000080EC_exit:


void fn000082AC(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000082FC
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r4 r6
// Preserved:
fn000082AC_entry:
l000082AC:
	word32 r3_11 = -1<i32> << r3 * 2<32>
	Mem22[0x1C17040<32>:word32] = r3_11 | (r3_11 ^ 0xFFFF<32>) & Mem0[0x1C17040<32>:word32]
	return
fn000082AC_exit:


word32 fn000082FC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008788
//      fn0000E98C
// MayUse: 
// LiveOut: r2
// Trashed: CV r11 r2 r3 r4 r5 r6 r7
// Preserved: r1 r9
fn000082FC_entry:
l000082FC:
	fn0000B320(-17<i32>)
	fn0000BC38(-17<i32>)
	fn000080EC(0<i32>, 0<32>)
	fn00008080(0<i32>, -1<i32>)
	fn000080EC(-1<i32>, -1<i32>)
	fn00008080(-1<i32>, 0<i32>)
	fn000080EC(-2<i32>, 0<i32>)
	fn00008080(-2<i32>, -1<i32>)
	fn000080EC(-3<i32>, -1<i32>)
	fn00008080(-3<i32>, 0<i32>)
	fn000080EC(-4<i32>, -1<i32>)
	fn00008080(-4<i32>, 0<i32>)
	fn000080EC(-5<i32>, 0<i32>)
	word32 r2_139 = fn00008080(-5<i32>, -1<i32>)
	word32 r5_146 = Mem4[0x1315C<32>:word32]
	branch r5_146 != 0<32> l000083C0_ds_t
l000083C0_ds_t:
l000083D8:
	fn000082AC(-1<i32>)
	fn000082AC(-4<i32>)
	return r2_139
fn000082FC_exit:
l000083C0_ds_f:
l000083C4:
	fn00008BB8(-17<i32>, 0x815C<32>, r5_146)
	fn00008B60(-17<i32>)


word32 fn000083F8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000875C
// MayUse: 
// LiveOut: r2
// Trashed: CV r11 r2 r3 r4
// Preserved: r1 r9
fn000083F8_entry:
l000083F8:
	fn0000BC38(-17<i32>)
	return fn0000B320(-17<i32>)
fn000083F8_exit:


void fn00008428(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r14 r16 r18 r2 r9
fn00008428_entry:
l00008428:
	word32 r1_17 = fp - 24<i32>
	branch (CONVERT(Mem12[r3 + 1<i32>:byte], byte, word32) & 2<32>) != 0<32> l00008454_ds_t
l00008454_ds_t:
	word32 r2_21 = r4
l0000847C:
l00008484:
	word32 r3_26 = Mem12[0x1C17108<32>:word32]
	branch r3_26 == 1<32> l00008490_ds_t
l00008490_ds_t:
l00008460:
	branch r2_21 == 0<32> l00008468_ds_t
l00008468_ds_t:
l00008468_ds_f:
l0000846C:
	r2_21 = fn0000C768(r3_26)
	r1_17 = <invalid>
l00008490_ds_f:
l00008494:
	Mem54[r1_17:word32] = fn0000F888(r3)
	Mem57[0x1C17188<32>:word32] = Mem54[r1_17:word32]
l000084B0:
	branch Mem57[0x1C1714C<32>:word32] == 0<32> l000084BC_ds_t
l000084BC_ds_t:
l000084BC_ds_f:
l000084C0:
	branch Mem57[r1_17:word32] == Mem57[0x1C1718C<32>:word32] l00008558
l000084DC:
l00008454_ds_f:
	word32 r2_73 = r4
l00008458:
l000084FC:
l00008500:
	word32 r3_78 = Mem12[0x1C17100<32>:word32]
	branch r3_78 == 1<32> l0000850C_ds_t
l0000850C_ds_t:
	bool F_81 = r2_73 == 0<32>
l000084E4:
	branch F_81 l000084E8_ds_t
l000084E8_ds_t:
l000084E8_ds_f:
l000084EC:
	r2_73 = fn0000C768(r3_78)
l0000850C_ds_f:
l00008510:
	Mem105[0x1C17180<32>:word32] = fn0000F888(r3)
	branch (CONVERT(Mem105[r3 + 1<i32>:byte], byte, word32) & 1<32>) == 0<32> l00008558
l00008538:
	branch (Mem105[r3 + 32<i32>:word32] | Mem105[r3 + 36<i32>:word32]) == 0<32> l00008538
l00008554:
l00008558:
	return
fn00008428_exit:


word32 fn00008574(word32 r3, word32 r4, ptr32 & r9Out, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
//      fn00010570
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1 r14 r16 r2 r9
// Trashed: CV r1 r11 r14 r16 r2 r3 r4 r5 r6 r9
// Preserved:
fn00008574_entry:
l00008574:
	word32 r1_101
	word32 r3_13 = CONVERT(Mem10[r3 + 1<i32>:byte], byte, word32)
	word32 r2_15 = r4
	branch (r3_13 & 2<32>) == 0<32> l0000859C_ds_t
l0000859C_ds_t:
l000085EC:
	branch (r3_13 & 1<32>) != 0<32> l000085F8_ds_t
l000085F8_ds_t:
l000085F8_ds_f:
l000085FC:
	branch !(r3_13 != 0<32>) l00008604_ds_t
l00008604_ds_t:
l00008628:
l0000862C:
	word32 r3_31 = Mem10[0x1C17100<32>:word32]
	branch r3_31 == 1<32> l00008638_ds_t
l00008638_ds_t:
	bool F_34 = r2_15 == 0<32>
l00008610:
	branch F_34 l00008614_ds_t
l00008614_ds_t:
l00008614_ds_f:
l00008618:
	r2_15 = fn0000C768(r3_31)
l00008638_ds_f:
l0000863C:
	fn0000F888(r3)
l00008604_ds_f:
l00008608:
	r1_101 = fp + -32<i32>
l0000859C_ds_f:
l000085A0:
l000085C4:
l000085C8:
	word32 r3_69 = Mem10[0x1C17114<32>:word32]
	branch r3_69 == 1<32> l000085A8
l000085A8:
	branch fn0000C768(r3_69) == 0<32> l000085B8_ds_t
l000085B8_ds_t:
l00008658:
l000085B8_ds_f:
l000085BC:
l000085D8:
	word32 r11_89 = fn0000F888(r3)
l0000864C:
	Mem94[0x1C17194<32>:word32] = r11_89
l0000865C:
	r1_101 = fp
l00008660:
	word32 r2_107 = Mem104[r1_101 - 16<i32>:word32]
	word32 r14_108 = Mem104[r1_101 - 12<i32>:word32]
	word32 r16_109 = Mem104[r1_101 - 8<i32>:word32]
	r9Out = Mem104[r1_101 - 4<i32>:word32]
	r14Out = r14_108
	r16Out = r16_109
	return r2_107
fn00008574_exit:


word32 fn00008674()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse: 
// LiveOut: r11
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn00008674_entry:
l00008674:
	word32 r2_14
	word32 r4_42
	word32 r11_25
	branch Mem8[0x1C17144<32>:word32] == 0<32> l00008690_ds_t
l00008690_ds_t:
l000086DC:
	r2_14 = Mem8[0x1C17150<32>:word32]
	branch r2_14 == 0<32> l000086EC_ds_t
l000086EC_ds_t:
l000086EC_ds_f:
l000086F0:
	word32 r11_19 = fn0000F874(Mem8[0x1C17190<32>:word32])
	r2_14 = r11_19
	r11_25 = fn0000F154(r11_19)
	branch r11_25 == 0<32> l00008744
l00008714:
	word32 r3_33
	branch !(CONVERT(Mem8[r11_19:byte], byte, word32) != 5<32>) l00008720_ds_t
l00008720_ds_t:
	r3_33 = -6<i32>
l00008720_ds_f:
l00008724:
	r3_33 = -3<i32>
l00008728:
	Mem41[r11_19:byte] = SLICE(r3_33, byte, 0)
	r4_42 = -256<i32>
l00008690_ds_f:
l00008694:
	word32 r11_48 = fn0000F874(Mem8[0x1C17184<32>:word32])
	r2_14 = r11_48
	r11_25 = fn0000F154(r11_48)
	branch r11_25 == 0<32> l00008744
l00008744:
	r2_14 = r11_25
l00008748:
l000086BC:
	word32 r3_68
	branch !(CONVERT(Mem8[r11_48:byte], byte, word32) != 5<32>) l000086C8_ds_t
l000086C8_ds_t:
	r3_68 = -6<i32>
l000086C8_ds_f:
l000086CC:
	r3_68 = -3<i32>
l000086D0:
	Mem76[r11_48:byte] = SLICE(r3_68, byte, 0)
	r4_42 = -4<i32>
l00008730:
	Mem82[0x1C17050<32>:word32] = r4_42
l0000874C:
	return r2_14
fn00008674_exit:


word32 fn0000875C(ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse: 
// LiveOut: r2 r9
// Trashed: CV r1 r11 r2 r3 r4 r9
// Preserved:
fn0000875C_entry:
l0000875C:
	Mem8[0x1315C<32>:word32] = -1<i32>
	word32 r2_12 = fn000083F8()
	r9Out = dwLoc0C
	return r2_12
fn0000875C_exit:


word32 fn00008788()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse: 
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r9
// Preserved:
fn00008788_entry:
l00008788:
	Mem22[0x1315C<32>:word32] = fn000082FC()
	return dwLoc18
fn00008788_exit:


void fn000087BC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn000087BC_entry:
l000087BC:
	fn0000B320(-16<i32>)
	word32 r2_23 = fn0000BC38(-16<i32>)
	Mem30[0x137EC<32>:word32] = r2_23
	Mem31[0x137F4<32>:word32] = r2_23
	Mem32[0x137FC<32>:word32] = r2_23
	Mem33[0x13804<32>:word32] = r2_23
	Mem34[0x1380C<32>:word32] = r2_23
	Mem35[0x13814<32>:word32] = r2_23
	Mem36[0x1381C<32>:word32] = r2_23
	Mem37[0x13824<32>:word32] = r2_23
	Mem40[0x13160<32>:word32] = r2_23
	return
fn000087BC_exit:


void fn00008834(word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F250
//      fn0000F368
// MayUse:  r4:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r14 r2 r9
fn00008834_entry:
l00008834:
	word32 r11_17
	word32 r2_18 = fn0000E718(VR, out r11_17)
	Mem30[(r2_18 << 3<32>) + 0x137E8<32>:word32] = r11_17
	branch Mem30[0x13160<32>:word32] != 0<32> l00008880_ds_t
l00008880_ds_t:
l00008880_ds_f:
l00008884:
	word32 r4_40 = r4 *s 0x1E8480<32>
l000088B8:
	branch Mem30[r2_18 + 0x706040<32> << 2<32>:word32] == 1<32> l000088C4_ds_t
l000088C4_ds_t:
	bool F_49 = r4_40 != 0<32>
l000088A0:
	branch F_49 l000088A4_ds_t
l000088A4_ds_t:
	r4_40 = r4_40 - 1<i32>
l000088A4_ds_f:
l000088A8:
	fn0000E740(r11_17, VR)
l000088C4_ds_f:
l000088C8:
	Mem72[(r2_18 << 3<32>) + 0x137EC<32>:word32] = -1<i32>
l000088E4:
	return
fn00008834_exit:


void fn000088FC(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F250
//      fn0000F368
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn000088FC_entry:
l000088FC:
	word32 r2_11 = Mem7[0x13160<32>:word32]
	branch r2_11 == 0<32> l0000891C_ds_t
l0000891C_ds_t:
l0000893C:
	Mem21[r3 + 0x706040<32> << 2<32>:word32] = r2_11
	word32 r3_22 = (r3 << 3<32>) + 0x137E8<32>
	Mem24[r3_22 + 4<i32>:word32] = r2_11
	fn0000E740(Mem24[r3_22:word32], VR)
l0000891C_ds_f:
l00008920:
	fn0000E740(Mem7[(r3 << 3<32>) + 0x137E8<32>:word32], VR)
l0000896C:
	return
fn000088FC_exit:


void fn0000897C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AC14
//      fn00010570
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1
fn0000897C_entry:
l0000897C:
	Mem8[0x13160<32>:word32] = -1<i32>
	return
fn0000897C_exit:


void fn00008998()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn00008998_entry:
l00008998:
	fn0000B320(-16<i32>)
	Mem30[0x13160<32>:word32] = fn0000BC38(-16<i32>)
	return
fn00008998_exit:


void fn000089E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008AF0
// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4
// Preserved:
fn000089E0_entry:
l000089E0:
	Mem10[0x13828<32>:word32] = 0x1F00C00<32>
	Mem11[0x1F00C40<32>:word32] = 0<i32>
	Mem13[0x1F00C50<32>:word32] = 0<i32>
	Mem15[0x1F00C10<32>:word32] = 0xFFFFFFFF<32>
	return
fn000089E0_exit:


void fn00008A20()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn00008A20_entry:
l00008A20:
	Mem9[0x13828<32>:word32] = 0<i32>
	return
fn00008A20_exit:


word32 fn00008AC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E758
// MayUse: 
// LiveOut: r11
// Trashed: CV r1 r11 r3
// Preserved:
fn00008AC0_entry:
l00008AC0:
	return Mem0[Mem0[0x13828<32>:word32]:word32] >>u 2<32>
fn00008AC0_exit:


void fn00008AF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn00008AF0_entry:
l00008AF0:
	fn000089E0()
	word32 r3_18 = 0x13834<32>
l00008B10:
	Mem23[r3_18:word32] = 0x8AE8<32>
	Mem24[r3_18 + 4<i32>:word32] = 0<i32>
	r3_18 = r3_18 + -8<i32>
	branch r3_18 != 0x13934<32> l00008B30_ds_t
l00008B30_ds_t:
l00008B30_ds_f:
l00008B34:
	return
fn00008AF0_exit:


word32 fn00008B60(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000082FC
//      fn00009290
//      fn0000A664
//      fn0000C588
//      fn0000F444
//      fn00010570
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r3 r4 r5 r6 r9
// Preserved:
fn00008B60_entry:
l00008B60:
l00008A48:
	branch r3 != 0<32> l00008A50_ds_t
l00008A50_ds_t:
l00008A50_ds_f:
l00008A54:
	Mem17[Mem4[0x13828<32>:word32] + 16<i32>:word32] = -1<i32>
l00008A64:
	word32 r4_24 = Mem23[0x13828<32>:word32]
	Mem29[r4_24 + 64<i32>:word32] = -1<i32> << r3 | Mem23[r4_24 + 64<i32>:word32]
	return 0<i32>
fn00008B60_exit:


word32 fn00008B78(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r3 r4 r5 r6 r9
// Preserved:
fn00008B78_entry:
l00008B78:
l00008A90:
	word32 r4_14 = Mem4[0x13828<32>:word32]
	Mem20[r4_14 + 64<i32>:word32] = (-1<i32> << r3 ^ 0xFFFF<32>) & Mem4[r4_14 + 64<i32>:word32]
	return 0<i32>
fn00008B78_exit:


word32 fn00008B90(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4
// Preserved: r1
fn00008B90_entry:
l00008B90:
	word32 r4_8 = Mem0[0x13828<32>:word32]
	Mem10[r4_8 + 12<i32>:word32] = r3
	Mem13[r4_8 + 80<i32>:word32] = Mem10[r4_8 + 80<i32>:word32] | 1<32>
	return 0<i32>
fn00008B90_exit:


void fn00008BB8(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000082FC
//      fn0000C48C
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn00008BB8_entry:
l00008BB8:
	word32 r3_10 = (r3 << 3<32>) + 0x13834<32>
	Mem13[r3_10:word32] = r4
	Mem15[r3_10 + 4<i32>:word32] = r5
	return
fn00008BB8_exit:


word32 fn00008C74(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
//      fn00012320
// MayUse:  r3:[0..31]
// LiveOut: r1 r11
// Trashed: CV r1 r11 r3 r4 r5
// Preserved:
fn00008C74_entry:
l00008C74:
	return -1<i32> << r3 & Mem0[Mem0[0x13828<32>:word32] + 16<i32>:word32]
fn00008C74_exit:


word32 fn00008CA4(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000F444
//      fn00010570
//      fn00012320
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn00008CA4_entry:
l00008CA4:
	Mem12[Mem0[0x13828<32>:word32] + 16<i32>:word32] = -1<i32> << r3
	return 0<i32>
fn00008CA4_exit:


void fn00008CC8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3 r4 r5
// Preserved:
fn00008CC8_entry:
l00008CC8:
	word32 r3_8 = Mem0[0x13828<32>:word32]
	Mem13[0x1382C<32>:word32] = Mem10[r3_8 + 64<i32>:word32]
	word32 r5_15 = Mem13[r3_8 + 80<i32>:word32]
	Mem17[r3_8 + 64<i32>:word32] = 0<i32>
	Mem19[r3_8 + 80<i32>:word32] = 0<i32>
	Mem20[0x13830<32>:word32] = r5_15
	return
fn00008CC8_exit:


word32 fn00008D58(ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000092CC
// MayUse: 
// LiveOut: r11 r2
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r8
// Preserved:
fn00008D58_entry:
l00008D58:
	word32 r11_17
	word32 r7_12 = Mem5[0x1F02030<32>:word32] >>u 8<32> & 0x7F<32>
	word32 r4_13 = Mem5[0x13374<32>:word32]
	word32 r5_14 = r7_12 + r4_13
	branch r5_14 >u 0xFF<32> l00008D8C_ds_t
l00008D8C_ds_t:
	r11_17 = 0xFFFFFFE4<32>
l00008D8C_ds_f:
l00008D90:
	word32 r4_23 = r4_13 + 0x13370<32>
	word32 r3_24 = 0<i32>
l00008DB4:
	branch r3_24 != r7_12 l00008DBC_ds_t
l00008DBC_ds_t:
l00008DA4:
	Mem36[r4_23:byte] = Mem32[0x1F02020<32>:byte]
	r3_24 = r3_24 + -1<i32>
	r4_23 = r4_23 + -1<i32>
l00008DBC_ds_f:
	r11_17 = 0<i32>
l00008DC0:
	Mem44[0x13374<32>:word32] = r5_14
l00008DCC:
	r11Out = r11_17
	return dwLoc0C
fn00008D58_exit:


word32 fn00008DD8(word32 r3, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000092CC
// MayUse:  r3:[0..31]
// LiveOut: r11 r15 r2
// Trashed: CV r1 r11 r15 r2 r3 r4 r5 r6 r7 r8
// Preserved: r12 r13
fn00008DD8_entry:
l00008DD8:
	word32 r5_187 = fp - 564<i32>
	word32 r4_12 = fp - 564<i32>
l00008DF0:
	Mem13[r4_12:byte] = 0<8>
	r4_12 = r4_12 + -1<i32>
	branch r4_12 != fp - 604<i32> l00008DF0
l00008E04:
	word32 r4_18 = 0<i32>
l00008E2C:
	branch r4_18 <u r3 l00008E34_ds_t
l00008E34_ds_t:
l00008E10:
	Mem35[fp - 309<i32> + r4_18:byte] = Mem32[r4_18 + 0x13378<32>:byte]
	r4_18 = r4_18 + -1<i32> & 0xFF<32>
l00008E34_ds_f:
l00008E38:
	word32 r4_117 = 0<i32>
	word32 r7_164 = 0<32>
l00008F18:
	word32 r8_49
	branch r7_164 <u r3 + -1<i32> l00008F20_ds_t
l00008F20_ds_t:
	r8_49 = -1<i32>
l00008F20_ds_f:
l00008F24:
	r8_49 = 0<i32>
l00008F28:
	branch (r8_49 & 0xFF<32>) == 0<32> l00008F34_ds_t
l00008F34_ds_t:
l00008F34_ds_f:
	bool F_60 = r7_164 <=u 0x27<32>
l00008F38:
	word32 r8_61
	branch F_60 l00008F3C_ds_t
l00008F3C_ds_t:
	r8_61 = -1<i32>
l00008F3C_ds_f:
l00008F40:
	r8_61 = 0<i32>
l00008F44:
	branch (r8_61 & 0xFF<32>) != 0<32> l00008F50_ds_t
l00008F50_ds_t:
	word32 r8_74 = fp - 308<i32> + r7_164
l00008E58:
	word32 r12_82
	word32 r11_79 = CONVERT(Mem78[r8_74:byte], byte, word32)
	branch (r11_79 & 0x7F<32>) <= 19<i32> l00008E68_ds_t
l00008E68_ds_t:
	r12_82 = 0<i32>
l00008E68_ds_f:
l00008E6C:
	branch (r11_79 & 0x7F<32>) <= 40<i32> l00008E74_ds_t
l00008E74_ds_t:
	r12_82 = -1<i32>
l00008E74_ds_f:
l00008E78:
	r12_82 = 0<i32>
l00008E7C:
	word32 r8_139
	word32 r2_126
	branch r12_82 == 0<32> l00008E84_ds_t
l00008E84_ds_t:
l00008EB0:
	word32 r13_100
	branch (r11_79 & 0x7F<32>) <= 39<i32> l00008EB4_ds_t
l00008EB4_ds_t:
	r13_100 = r12_82
l00008EB4_ds_f:
l00008EB8:
	branch (r11_79 & 0x7F<32>) <= 80<i32> l00008EC0_ds_t
l00008EC0_ds_t:
	r13_100 = -1<i32>
l00008EC0_ds_f:
l00008EC4:
	r13_100 = r12_82
l00008EC8:
	branch r13_100 << 0x18<32> == 0<32> l00008ED4_ds_t
l00008ED4_ds_t:
l00008ED4_ds_f:
l00008ED8:
	word32 r8_118
	word32 r4_125
	branch r11_79 << 0x18<32> >= 0<i32> l00008EE0_ds_t
l00008EE0_ds_t:
	r8_118 = r4_117 + -1<i32>
l00008EF0:
	r4_125 = fp - 564<i32> + r4_117
	r2_126 = 0<i32>
l00008EE0_ds_f:
	r8_118 = r4_117 + -1<i32>
l00008EE4:
	r4_125 = fp - 564<i32> + r4_117
	r2_126 = -1<i32>
l00008EF8:
	Mem135[r4_125:byte] = SLICE(r2_126, byte, 0)
	r4_117 = r8_118 & 0xFF<32>
	r8_139 = fp - 564<i32> + r4_117
l00008E84_ds_f:
l00008E88:
	branch r11_79 << 0x18<32> >= 0<i32> l00008EA4
l00008EA4:
	r8_139 = fp - 564<i32> + r4_117
	r2_126 = 0<i32>
l00008E98:
	r8_139 = fp - 564<i32> + r4_117
	r2_126 = -1<i32>
l00008F04:
	Mem155[r8_139:byte] = SLICE(r2_126, byte, 0)
	r4_117 = r4_117 + -1<i32> & 0xFF<32>
l00008F10:
	r7_164 = r7_164 + -1<i32> & 0xFF<32>
l00008F50_ds_f:
l00008F54:
	word32 r11_169
	branch r4_117 <=u 0x1A<32> l00008F5C_ds_t
l00008F5C_ds_t:
	r11_169 = 0xFFFFFFFF<32>
l00008F5C_ds_f:
l00008F60:
	word32 r3_185 = 0<i32>
l00008F68:
	branch CONVERT(Mem78[r5_187:byte], byte, word32) != 0<32> l00008F74_ds_t
l00008F74_ds_t:
	r3_185 = r3_185 * 2<32>
l00008F74_ds_f:
	word32 r3_194 = r3_185 * 2<32>
l00008F78:
	r3_185 = r3_194 | 1<32>
l00008F7C:
	r5_187 = r5_187 + -2<i32>
	branch r5_187 != fp - 592<i32> l00008F68
l00008F8C:
	word32 r4_209
	word32 r11_204 = r3_185 & 0x7C0<32>
	word32 r5_205 = r3_185 & 0x3F<32>
	branch (r3_185 & 0x1000<32>) == 0<32> l00008FA4_ds_t
l00008FA4_ds_t:
	r4_209 = -64<i32>
l00008FA4_ds_f:
l00008FA8:
	r4_209 = 0<i32>
l00008FAC:
	word32 r3_217 = r4_209 + r5_205
	r11_169 = r3_217 << 0x10<32> | r11_204 >>u 6<32> | (r3_217 ^ 0xFFFF<32>) << 0x18<32>
l00008FC4:
	r11Out = r11_169
	r15Out = fp - 308<i32>
	return dwLoc0264
fn00008DD8_exit:


void fn00009290()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012320
// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r3 r4 r5 r6 r7 r9
// Preserved:
fn00009290_entry:
l00009290:
	branch Mem5[0x43B0<32>:word32] == 0<32> l000092A8_ds_t
l000092A8_ds_t:
l000092BC:
	return
l000092A8_ds_f:
l000092AC:
l00008FD0:
	Mem35[0x13484<32>:word32] = Mem21[0x1F02000<32>:word32]
	Mem41[0x13488<32>:word32] = Mem35[0x1F02010<32>:word32]
	Mem46[0x1348C<32>:word32] = Mem41[0x1F0202C<32>:word32]
	Mem51[0x13490<32>:word32] = Mem46[0x1F02030<32>:word32]
	Mem56[0x13494<32>:word32] = Mem51[0x1F02034<32>:word32]
	word32 r11_60
	fn0000AF1C(-31<i32>, out r11_60)
	Mem67[0x1347C<32>:word32] = r11_60
	word32 r11_71
	fn0000B250(-31<i32>, out r11_71)
	Mem80[0x13480<32>:word32] = r11_71
	fn00009744(-1<i32>, -11<i32>, -2<i32>)
	fn000097BC(-1<i32>, -11<i32>, -1<i32>)
	fn00009834(-1<i32>, -11<i32>, 0<i32>)
	word32 r1_105 = <invalid>
	word32 r14_118
	fn0000B610(-31<i32>, -1<i32>, Mem80[r1_105 + 20<i32>:word32], out r14_118)
	fn0000B320(-31<i32>)
	fn0000B0B8(-31<i32>, -1<i32>)
	fn0000BDC8(-31<i32>)
	fn0000B320(-31<i32>)
	word32 r2_163 = fn0000B320(-23<i32>)
	Mem168[r2_163:word32] = -48<i32>
	Mem171[0x1F02034<32>:word32] = 0x100032C<32>
	Mem173[0x1F02010<32>:word32] = -4<i32>
	Mem175[0x1F02030<32>:word32] = -255<i32>
	Mem177[r14_118:word32] = -7955<i32>
	Mem180[r2_163:word32] = Mem177[r2_163:word32] | 3<32>
	Mem184[0x13374<32>:word32] = 0<i32>
	fn00008CA4(-5<i32>)
	fn00008B60(-5<i32>)
	return
fn00009290_exit:


word32 fn000092CC(ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
//      fn00012320
// MayUse: 
// LiveOut: r11 r15
// Trashed: CV r11 r12 r13 r15 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn000092CC_entry:
l000092CC:
	word32 r11_338
	word32 r3_369
	word32 r14_11 = Mem10[0x13164<32>:word32]
	word32 r2_12 = Mem10[0x1F02030<32>:word32]
	Mem15[0x1F02030<32>:word32] = r2_12
	branch (r2_12 & 0x10<32>) == 0<32> l00009300_ds_t
l00009300_ds_t:
l00009300_ds_f:
l00009304:
	word32 r11_23
	r2_12 = fn00008D58(out r11_23)
	branch r11_23 == 0<32> l00009314_ds_t
l00009314_ds_t:
l00009324:
	r3_369 = r2_12 & 2<32>
	branch r3_369 == 0<32> l00009330_ds_t
l00009330_ds_t:
	r11_338 = r2_12 & 1<32>
l00009668:
	branch r11_338 == 0<32> l00009670_ds_t
l00009670_ds_t:
l00009670_ds_f:
l00009674:
l00009330_ds_f:
l00009334:
	word32 r11_114
	fn00008D58(out r11_114)
	branch r11_114 == 0<32> l00009344_ds_t
l00009344_ds_t:
l00009360:
	branch r14_11 != 0x10000000<32> l0000936C_ds_t
l0000936C_ds_t:
l00009388:
	word32 r7_63 = Mem15[0x13374<32>:word32]
	word32 r3_118 = r11_114
	word32 r2_65 = 0x13370<32>
	word32 r5_413 = r11_114
l000093D0:
	branch r11_114 <u r7_63 l0000939C
l0000939C:
	r3_118 = CONVERT(Mem15[r2_65:byte], byte, word32)
	branch (r3_118 & 0x80<32>) == 0<32> l000093AC_ds_t
l000093AC_ds_t:
	bool F_77 = r5_413 >u 0x70<32>
l000093BC:
	branch F_77 l000093DC
l000093C4:
	r5_413 = r3_118 & 0x80<32>
l000093AC_ds_f:
l000093B0:
	r5_413 = r5_413 + (r3_118 & 0x7F<32>)
l000093C8:
	r11_114 = r11_114 + -1<i32>
	r2_65 = r2_65 + -1<i32>
l000093DC:
	word32 r2_164
	word32 r3_160
	word32 r2_91 = r3_118 >>u 7<32>
	branch (r2_91 & 1<32>) != 0<32> l000093EC_ds_t
l000093EC_ds_t:
l000093EC_ds_f:
	bool F_96 = r5_413 <=u 0x70<32>
l000093F0:
	word32 r4_101
	branch F_96 l000093F4_ds_t
l000093F4_ds_t:
	r4_101 = -1<i32>
l000093F4_ds_f:
l000093F8:
	r4_101 = r2_91 & 1<32>
l000093FC:
	word32 r4_103 = r4_101 & 0xFF<32>
	branch r4_103 != 0<32> l00009408_ds_t
l00009408_ds_t:
l00009408_ds_f:
	bool F_110 = r11_114 <u r7_63
l0000940C:
l00009450:
	branch F_110 l00009454_ds_t
l00009454_ds_t:
l00009414:
	r3_118 = CONVERT(Mem15[r11_114 + 0x13378<32>:byte], byte, word32)
	branch (r3_118 & 0x80<32>) == 0<32> l0000942C_ds_t
l0000942C_ds_t:
l00009440:
	r4_103 = r4_103 + (r3_118 & 0x7F<32>)
l0000942C_ds_f:
	bool F_126 = r4_103 >u 0x38<32>
l00009430:
	branch F_126 l00009458
l00009438:
	r4_103 = 0<i32>
l00009448:
	r11_114 = r11_114 + -1<i32>
	F_110 = r11_114 <u r7_63
l00009454_ds_f:
l00009458:
	word32 r3_140 = r3_118 & 0x80<32>
	word32 r3_145 = ((0<32> - r3_140 | r3_140) ^ 0xFFFF<32>) >>u 0x1F<32>
	branch r3_145 != 0<32> l00009474_ds_t
l00009474_ds_t:
l00009474_ds_f:
	bool F_149 = r4_103 <=u 0x38<32>
l00009478:
	word32 r5_150
	branch F_149 l0000947C_ds_t
l0000947C_ds_t:
	r5_150 = -1<i32>
l0000947C_ds_f:
l00009480:
	r5_150 = r3_145
l00009484:
	word32 r5_156 = r5_150 & 0xFF<32>
	branch r5_156 != 0<32> l00009490_ds_t
l00009490_ds_t:
l00009548:
	r3_160 = 0<i32>
l00009490_ds_f:
	word32 r4_162 = -1<i32>
l00009494:
	r2_164 = r5_156
	word32 r3_165 = r5_156
l0000952C:
	branch r11_114 <u r7_63 l00009534_ds_t
l00009534_ds_t:
	bool F_171 = r4_162 == 0<32>
l000094A4:
	word32 r6_177 = CONVERT(Mem15[r11_114 + 0x13378<32>:byte], byte, word32)
	branch F_171 l000094B8_ds_t
l000094B8_ds_t:
l000094E4:
	branch (r6_177 & 0x80<32>) == 0<32> l000094EC_ds_t
l000094EC_ds_t:
l00009520:
	r3_165 = r3_165 + (r6_177 & 0x7F<32>)
l000094EC_ds_f:
	bool F_185 = r3_165 >u 0x4A<32>
l000094F0:
	branch F_185 l000094F4_ds_t
l000094F4_ds_t:
l00009558:
	r3_160 = r4_162
l000094F4_ds_f:
	bool F_188 = r3_165 <=u 0x24<32>
l000094F8:
	branch F_188 l000094FC_ds_t
l000094FC_ds_t:
l000094FC_ds_f:
	word32 r3_192 = -1<i32> << r5_156
l00009500:
	r2_164 = r2_164 | r3_192
l00009504:
	r5_156 = r5_156 + -1<i32>
	branch r5_156 == 0x20<32> l00009568
l00009514:
	r3_165 = r6_177 & 0x7F<32>
l000094B8_ds_f:
l000094BC:
	branch (r6_177 & 0x80<32>) == 0<32> l000094C4_ds_t
l000094C4_ds_t:
	bool F_203 = r3_165 >u 0x24<32>
l000094D4:
	branch F_203 l000094D8_ds_t
l000094D8_ds_t:
l00009550:
	r3_160 = r6_177 & 0x80<32>
l0000955C:
	branch r3_160 <u r7_63 l00009564_ds_t
l00009564_ds_t:
l00009540:
	r3_160 = r3_160 + -1<i32>
l00009564_ds_f:
	r2_164 = 0xFFFFFFFF<32>
l00009568:
l000094D8_ds_f:
	r4_162 = r6_177 & 0x80<32>
l000094DC:
	r3_165 = r6_177 & 0x7F<32>
l000094C4_ds_f:
l000094C8:
	r3_165 = r3_165 + (r6_177 & 0x7F<32>)
l00009518:
	r4_162 = -1<i32>
l00009528:
	r11_114 = r11_114 + -1<i32>
l00009534_ds_f:
l00009538:
l0000956C:
	Mem236[0x13478<32>:word32] = r2_164
l0000936C_ds_f:
l00009370:
	word32 r11_241
	Mem253[fn00008DD8(Mem15[0x13374<32>:word32], out r11_241, out r15) | 0x3478<32>:word32] = r11_241
l00009574:
	Mem258[0x13374<32>:word32] = 0<i32>
	word32 r4_263 = Mem258[0x13478<32>:word32]
	word32 r8_270 = Mem258[0x13370<32>:word32]
	word32 r11_272 = Mem258[0x1316C<32>:word32]
	word32 r3_274 = 0x13164<32>
	word32 r7_276 = Mem258[0x13168<32>:word32]
	word32 r12_277 = (r4_263 & 0xFF000000<32>) >>u 8<32> ^ r4_263 & 0xFF0000<32>
	word32 r5_278 = 0x13164<32>
	word32 r4_279 = 0<i32>
l00009640:
	branch r4_279 <u r11_272 l000095E0
l000095E0:
	word32 r8_286 = Mem258[r5_278:word32]
	branch (r4_263 & 0xFFFF<32>) != (r8_286 & 0xFFFF<32>) l00009634
l000095F4:
	branch r12_277 != 0xFF0000<32> l00009600_ds_t
l00009600_ds_t:
	r7_276 = 0<i32>
l00009634:
	r4_279 = r4_279 + -1<i32>
	r5_278 = r5_278 + -8<i32>
	r8_270 = r4_263 & 0xFFFF<32>
l00009600_ds_f:
l00009604:
	Mem310[0x13370<32>:word32] = r4_263 & 0xFFFF<32>
	word32 r6_307 = (r4_263 & 0xFF0000<32>) >>u 0x10<32>
	Mem315[0x13168<32>:word32] = r6_307
	word32 r5_312 = 0x13170<32>
	word32 r4_316 = 0<i32>
l000096CC:
	branch r4_316 <u r11_272 l000096D4_ds_t
l000096D4_ds_t:
l00009684:
	bool F_331
	branch r14_11 == 0<32> l00009688_ds_t
l00009688_ds_t:
	word32 r7_325 = Mem315[r5_312:word32]
l000096A4:
	branch r6_307 != r7_325 l000096C0
l000096B0:
	F_331 = (r4_263 & 0xFFFF<32>) == Mem315[r3_274:word32]
l00009688_ds_f:
	word32 r7_332 = Mem315[r5_312:word32]
l0000968C:
	branch r6_307 != r7_332 l000096C0
l00009698:
	F_331 = (r8_286 & 0xFFFF<32>) == Mem315[r3_274:word32]
l000096B8:
	branch F_331 l000096E0
l000096E0:
	r11_338 = -1<i32>
l000096C0:
	r4_316 = r4_316 + -1<i32>
	r3_274 = r3_274 + -8<i32>
	r5_312 = r5_312 + -8<i32>
l000096D4_ds_f:
l0000964C:
	Mem354[0x13370<32>:word32] = r8_270
	Mem359[0x13168<32>:word32] = r7_276
l000096D8:
	r11_338 = 0<i32>
l00009344_ds_f:
l00009348:
	Mem368[0x13374<32>:word32] = 0<i32>
	r11_338 = 0<32>
l00009314_ds_f:
	r3_369 = 0<i32>
l00009318:
l00009678:
	Mem375[0x13374<32>:word32] = r3_369
	r11_338 = r3_369
l000096E4:
	r15Out = r15
	return r11_338
fn000092CC_exit:


void fn000096F8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut:
// Trashed: CV r11 r2 r3 r4 r5
// Preserved: r1 r9
fn000096F8_entry:
l000096F8:
	fn0000B320(-32<i32>)
	Mem19[0x1F02E18<32>:word32] = -1<i32>
	Mem20[0x1F02E38<32>:word32] = -1<i32>
	return
fn000096F8_exit:


word32 fn00009744(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000998C
//      fn0000A664
//      fn0000AADC
//      fn0000CB40
//      fn0000D640
//      fn0000D76C
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r3 r7
// Preserved:
fn00009744_entry:
l00009744:
	word32 r3_14 = r3 * 9<32> + 0x7C0AF7<32> + (r4 >>u 3<32>)
	word32 r4_17 = (r4 & 7<32>) << 2<32>
	Mem33[r3_14 << 2<32>:word32] = r5 << r4_17 | (-7<i32> << r4_17 ^ 0xFFFF<32>) & Mem6[r3_14 << 2<32>:word32]
	return dwLoc14
fn00009744_exit:


word32 fn000097BC(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000A664
//      fn0000CB40
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r7
// Preserved:
fn000097BC_entry:
l000097BC:
	word32 r3_14 = r3 * 9<32> + 0x7C0AFE<32> + (r4 >>u 4<32>)
	word32 r4_17 = (r4 & 0xF<32>) * 2<32>
	Mem33[r3_14 << 2<32>:word32] = r5 << r4_17 | (-3<i32> << r4_17 ^ 0xFFFF<32>) & Mem6[r3_14 << 2<32>:word32]
	return dwLoc14
fn000097BC_exit:


word32 fn00009834(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000998C
//      fn0000AADC
//      fn0000CB40
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r3 r7
// Preserved:
fn00009834_entry:
l00009834:
	word32 r3_14 = r3 * 9<32> + 0x7C0AFC<32> + (r4 >>u 4<32>)
	word32 r4_17 = (r4 & 0xF<32>) * 2<32>
	Mem33[r3_14 << 2<32>:word32] = r5 << r4_17 | (-3<i32> << r4_17 ^ 0xFFFF<32>) & Mem6[r3_14 << 2<32>:word32]
	return dwLoc14
fn00009834_exit:


void fn000098AC(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000998C
//      fn00009ED0
//      fn0000A708
//      fn0000AADC
//      fn0000AC14
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3 r5 r7
// Preserved:
fn000098AC_entry:
l000098AC:
	word32 r3_9 = (r3 << 2<32>) + (r3 << 5<32>)
	Mem30[r3_9 + 0x1F02BEC<32>:word32] = (r5 & 1<32>) << r4 | (-1<i32> << r4 ^ 0xFFFF<32>) & Mem7[r3_9 + 0x1F02BEC<32>:word32]
	return
fn000098AC_exit:


word32 fn00009918(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A070
//      fn0000A6B0
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r4 r5
// Preserved:
fn00009918_entry:
l00009918:
	return Mem7[(r3 << 2<32>) + (r3 << 5<32>) + 0x1F02BEC<32>:word32] >>u r4 & 1<32>
fn00009918_exit:


word32 fn00009958(word32 r3, word32 r4, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn00009958_entry:
l00009958:
	r11Out = r4 & Mem4[(r3 << 5<32>) + 0x1F02DF4<32>:word32]
	return dwLoc14
fn00009958_exit:


word32 fn0000998C(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r18 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000998C_entry:
l0000998C:
	word32 r11_16 = fn0000D628()
	branch r11_16 != 0<32> l000099C4_ds_t
l000099C4_ds_t:
l00009A78:
	Mem26[0x134AC<32>:word32] = 0<i32>
	fn000098AC(-1<i32>, -5<i32>, 0<32>)
	fn000098AC(-1<i32>, -8<i32>, -1<i32>)
	fn000098AC(-1<i32>, -9<i32>, -1<i32>)
	fn00009744(-1<i32>, -5<i32>, -1<i32>)
	fn00009744(-1<i32>, -8<i32>, -1<i32>)
	fn00009744(-1<i32>, -9<i32>, -1<i32>)
	fn00009834(-1<i32>, -5<i32>, -3<i32>)
	fn00009834(-1<i32>, -8<i32>, -3<i32>)
	word32 r2_125 = fn00009834(-1<i32>, -9<i32>, -3<i32>)
	Mem134[r2_125:word32] = Mem26[r2_125:word32] | 0x1A0000<32>
	Mem137[0x13938<32>:word32] = -17<i32>
	Mem141[0x13934<32>:word32] = -22<i32>
	fn0000EDF4(-15<i32>, 0x12C16<32>, r15, VR)
l000099C4_ds_f:
l000099C8:
	Mem159[0x134AC<32>:word32] = -1<i32>
	Mem160[0x13938<32>:word32] = r11_16
	Mem161[0x13934<32>:word32] = -15<i32>
	word32 r22_282
	word32 r28_283
	fn0000D214(fp - 27<i32>, fp - 26<i32>, -1<i32>, VR, out r22_282, out r28_283)
	word32 r22_284
	word32 r24_285
	fn0000D298(fp - 27<i32>, fp - 26<i32>, -1<i32>, VR, out r22_284, out r24_285)
	word32 r15_205 = fn0000EDF4(0xFFFFFFF1<32>, 0x12C08<32>, r15, VR)
	word32 r22_286
	word32 r28_287
	fn0000D214(fp - 27<i32>, fp - 26<i32>, -1<i32>, VR, out r22_286, out r28_287)
	word32 r22_288
	word32 r24_289
	fn0000D298(fp - 27<i32>, fp - 26<i32>, -1<i32>, VR, out r22_288, out r24_289)
	Mem253[0x13017<32>:byte] = 0xFF<8>
	Mem254[0x1301F<32>:byte] = 0xFF<8>
	Mem255[0x13027<32>:byte] = 0xFF<8>
	Mem256[0x1302F<32>:byte] = 0xFF<8>
l00009B48:
	return r15_205
fn0000998C_exit:


word32 fn00009B70()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E110
//      fn000101A8
//      fn00010570
// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn00009B70_entry:
l00009B70:
	return Mem0[0x134AC<32>:word32]
fn00009B70_exit:


void fn00009B80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A708
//      fn0000AA80
// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00009B80_exit:
fn00009B80_entry:
l00009B80:
	Mem10[0x1F01000<32>:word32] = 0<i32>
	Mem14[0x1F01014<32>:word32] = -257<i32>
	Mem17[0x1F01018<32>:word32] = 0<i32>
	word32 r2_21 = fn0000C768(-1<i32>)
	Mem30[r2_21:word32] = Mem17[r2_21:word32] | 1<32>
l00009BC8:


word32 fn00009C2C(word32 r3, word32 r4, word32 r15, word32 VR, ptr32 & r15Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E1AC
//      fn0000F444
//      fn000101A8
//      fn000103C0
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r11 r15 r22
// Trashed: CV r11 r13 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn00009C2C_entry:
l00009C2C:
	word32 r11_163
	word32 r1_108 = fp - 20<i32>
	branch r3 >u 0x16<32> l00009C50_ds_t
l00009C50_ds_t:
	r11_163 = 0xFFFFFFEA<32>
l00009C50_ds_f:
l00009C54:
	branch r3 >u 0x10<32> l00009C5C_ds_t
l00009C5C_ds_t:
	r11_163 = 0<i32>
l00009C5C_ds_f:
l00009C60:
	word32 r4_32 = r3 * 0x18<32> + 0x12E90<32>
	word32 r3_35 = CONVERT(Mem10[r4_32 + -4<i32>:word16], word16, word32)
	branch r4 <u r3_35 l00009C88_ds_t
l00009C88_ds_t:
	r11_163 = 0xFFFFFFEA<32>
l00009C88_ds_f:
	r11_163 = 0xFFFFFFEA<32>
l00009C8C:
	branch r4 >u CONVERT(Mem10[r4_32 + -10<i32>:word16], word16, word32) l00009DC4
l00009CA0:
	word32 r11_73
	branch r4 >u CONVERT(Mem10[r4_32 + -2<i32>:word16], word16, word32) l00009CCC
l00009CCC:
	word32 r3_47 = CONVERT(Mem10[r4_32 + -12<i32>:word16], word16, word32)
	branch r4 >u r3_47 l00009CD8_ds_t
l00009CD8_ds_t:
l00009CEC:
	word32 r4_51 = CONVERT(Mem10[r4_32 + 16<i32>:word16], word16, word32)
	word32 r11_58
	fn0000FEDC(r4_51 - 1<i32> - r3_47 + r4, r4_51, r15, out r11_58, out r15)
	r1_108 = <invalid>
	r11_73 = r11_58 + CONVERT(Mem10[r4_32 + -5<i32>:byte], byte, word32) & 0x7F<32>
l00009CD8_ds_f:
l00009CDC:
l00009CB0:
	word32 r4_79 = CONVERT(Mem10[r4_32 + 8<i32>:word16], word16, word32)
	word32 r11_85
	fn0000FEDC(r4_79 - 1<i32> - r3_35 + r4, r4_79, r15, out r11_85, out r15)
	r1_108 = <invalid>
	r11_73 = r11_85 & 0x7F<32>
l00009D0C:
	Mem100[r1_108 + 2<i32>:byte] = SLICE(r11_73, byte, 0)
l00009D10:
	word32 r3_111 = r3 * 0x18<32> + 0x12E90<32>
	Mem115[r1_108 + 3<i32>:byte] = Mem113[r3_111 + 3<i32>:byte]
	Mem121[r1_108 + 2<i32>:byte] = SLICE(Mem115[r3_111 + 20<i32>:word32] & CONVERT(Mem115[r1_108 + 2<i32>:byte], byte, word32), byte, 0)
	word32 r14_109 = r1_108 + -3<i32>
	word32 r24_261
	word32 r22_259
	word32 r28_260
	word32 r11_156 = fn0000D214(r14_109, r1_108 + -1<i32>, -1<i32>, VR, out r22_259, out r28_260) | fn0000D298(r14_109, r1_108 + -2<i32>, -1<i32>, VR, out r22, out r24_261)
	branch CONVERT(Mem121[(r3 << 3<32>) + 0x13017<32>:byte], byte, word32) == 0<32> l00009D88_ds_t
l00009D88_ds_t:
l00009DC0:
	r11_163 = r11_156 & 0xFF<32>
l00009DC4:
	r15Out = r15
	r22Out = r22
	return r11_163
fn00009C2C_exit:
l00009D88_ds_f:
l00009D8C:
	word32 r2_176
	word32 r2_173 = CONVERT(Mem121[r1_108 + 2<i32>:byte], byte, word32)
	word32 r3_174 = CONVERT(Mem121[r1_108 + 1<i32>:byte], byte, word32)
	branch r2_173 <u r3_174 l00009DA8
l00009DA8:
	r2_176 = r3_174 - r2_173
l00009DA0:
	r2_176 = r2_173 - r3_174
l00009DAC:
	Mem182[r1_108 + 2<i32>:byte] = SLICE(r2_176, byte, 0)
	word32 r15_258
	word32 r14_257
	fn0000C8A0((CONVERT(Mem182[r1_108 + 2<i32>:byte], byte, word32) << 4<32>) + -100<i32>, r15, out r14_257, out r15_258)


word32 fn00009DDC(word32 r3, word32 VR, ptr32 & r11Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E110
//      fn0000E1AC
//      fn0000F444
//      fn000101A8
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11 r2 r22
// Trashed: CV r1 r11 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn00009DDC_entry:
l00009DDC:
	word32 r11_114 = 0xFFFFFFEA<32>
	branch r3 >u 0x16<32> l00009DF8_ds_t
l00009DF8_ds_t:
l00009DF8_ds_f:
l00009DFC:
	branch r3 == 0x11<32> l00009E04_ds_t
l00009E04_ds_t:
	r11_114 = -3300<i32>
l00009E04_ds_f:
l00009E08:
	branch r3 == 0x12<32> l00009E10_ds_t
l00009E10_ds_t:
	r11_114 = -1200<i32>
l00009E10_ds_f:
	r11_114 = -1200<i32>
l00009E14:
	branch r3 == 0x13<32> l00009E1C_ds_t
l00009E1C_ds_t:
l00009E1C_ds_f:
l00009E20:
	branch r3 == 0x14<32> l00009E24_ds_t
l00009E24_ds_t:
	r11_114 = -1100<i32>
l00009E24_ds_f:
l00009E28:
	branch r3 == 0x15<32> l00009E30_ds_t
l00009E30_ds_t:
	r11_114 = -3300<i32>
l00009E30_ds_f:
	r11_114 = -3300<i32>
l00009E34:
	branch r3 == 0x16<32> l00009E3C_ds_t
l00009E3C_ds_t:
l00009E3C_ds_f:
l00009E40:
	word32 r2_81
	word32 r11_79
	word32 r28_144
	fn0000D214(fp - 15<i32>, fp - 14<i32>, -1<i32>, VR, out r22, out r28_144)
	word32 r2_48 = r3 * 0x18<32> + 0x12E90<32>
	word32 r3_71 = CONVERT(Mem50[r2_48 + -6<i32>:word16], word16, word32)
	branch r3_71 <= 0<32> l00009E88_ds_t
l00009E88_ds_t:
l00009E9C:
	branch r3_71 != 0<32> l00009EA0_ds_t
l00009EA0_ds_t:
l00009EAC:
	r11_79 = (0<32> - r3_71) *s CONVERT(Mem50[r2_48 + 16<i32>:word16], word16, word32)
	r2_81 = CONVERT(Mem50[r2_48 + -12<i32>:word16], word16, word32)
l00009EA0_ds_f:
l00009EA4:
	r11_114 = CONVERT(Mem50[r2_48 + -12<i32>:word16], word16, word32)
l00009E88_ds_f:
l00009E8C:
	r2_81 = CONVERT(Mem50[r2_48 + 4<i32>:word16], word16, word32)
	r11_79 = CONVERT(Mem50[r2_48 + -8<i32>:word16], word16, word32) *s 0<32>
l00009EBC:
	r11_114 = r11_79 + r2_81
l00009EC0:
	r11Out = r11_114
	r22Out = r22
	return dwLoc20
fn00009DDC_exit:


word32 fn00009ED0(word32 r3, word32 r4, word32 VR, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
//      fn000101A8
//      fn000103C0
// MayUse:  r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16
// Trashed: CV r1 r11 r14 r16 r18 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn00009ED0_entry:
l00009ED0:
	word32 r1_154
	branch r3 >u 0xF<32> l00009EF4_ds_t
l00009EF4_ds_t:
l00009F7C:
	word32 r4_45
	word32 r5_48
	branch (0<32> - (r3 ^ 0x13<32>) | r3 ^ 0x13<32>) >= 0<i32> l00009F90_ds_t
l00009F90_ds_t:
l00009F90_ds_f:
l00009F94:
	branch (0<32> - (r3 ^ 0x11<32>) | r3 ^ 0x11<32>) >= 0<i32> l00009FA8_ds_t
l00009FA8_ds_t:
l00009FA8_ds_f:
l00009FAC:
	branch r3 != 0x14<32> l00009FB0_ds_t
l00009FB0_ds_t:
l0000A000:
	branch r3 != 0x12<32> l0000A004_ds_t
l0000A004_ds_t:
l0000A014:
	branch r3 != 0x15<32> l0000A018_ds_t
l0000A018_ds_t:
l0000A02C:
	branch r3 != 0x16<32> l0000A030_ds_t
l0000A030_ds_t:
l0000A030_ds_f:
	word32 r5_41 = 0<32> - r4
l0000A034:
	r4_45 = -5<i32>
	r5_48 = ((r5_41 | r4) ^ 0xFFFF<32>) >>u 0x1F<32>
l0000A018_ds_f:
l0000A01C:
	r4_45 = -7<i32>
l0000A004_ds_f:
l0000A008:
	r4_45 = -9<i32>
l0000A024:
	r5_48 = r4
l00009FB0_ds_f:
l00009FB4:
l00009FB8:
	Mem77[0x13498<32>:word32] = (-1<i32> << r3 ^ 0xFFFF<32>) & Mem12[0x13498<32>:word32]
	Mem80[0x13498<32>:word32] = r4 << r3 | Mem77[0x13498<32>:word32]
	word32 r2_81 = Mem80[0x13498<32>:word32]
	r4_45 = -8<i32>
	r5_48 = (0<32> - r2_81 | r2_81) >>u 0x1F<32>
l0000A048:
	fn000098AC(-1<i32>, r4_45, r5_48)
l00009EF4_ds_f:
l00009EF8:
	Mem112[(r3 << 3<32>) + 0x1300E<32>:byte] = SLICE(r4, byte, 0)
	word32 r22_212
	word32 r28_213
	fn0000D214(fp - 27<i32>, fp - 26<i32>, -1<i32>, VR, out r22_212, out r28_213)
	word32 r22_214
	word32 r24_215
	fn0000D298(fp - 27<i32>, fp - 26<i32>, -1<i32>, VR, out r22_214, out r24_215)
	branch r4 != 1<32> l0000A050
l0000A050:
	r1_154 = fp + -48<i32>
l00009F6C:
	fn0000C768(r4)
	r1_154 = fp
l0000A054:
	word32 r16_175 = Mem170[r1_154 - 12<i32>:word32]
	r14Out = Mem170[r1_154 - 16<i32>:word32]
	r16Out = r16_175
	return 0<i32>
fn00009ED0_exit:


word32 fn0000A070(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r22 r24 r26 r28 r3 r4 r5 r6 r7
// Preserved: r1 r14 r2 r9
fn0000A070_entry:
l0000A070:
	word32 r11_106
	branch r3 >u 0xF<32> l0000A084_ds_t
l0000A084_ds_t:
l0000A0E4:
	branch (0<32> - (r3 ^ 0x13<32>) | r3 ^ 0x13<32>) >= 0<i32> l0000A0F8_ds_t
l0000A0F8_ds_t:
l0000A0F8_ds_f:
l0000A0FC:
	branch (0<32> - (r3 ^ 0x11<32>) | r3 ^ 0x11<32>) >= 0<i32> l0000A10C_ds_t
l0000A10C_ds_t:
l0000A10C_ds_f:
l0000A110:
	branch r3 != 0x14<32> l0000A114_ds_t
l0000A114_ds_t:
l0000A130:
	word32 r4_50
	branch r3 != 0x12<32> l0000A134_ds_t
l0000A134_ds_t:
l0000A144:
	branch r3 != 0x15<32> l0000A148_ds_t
l0000A148_ds_t:
l0000A160:
	branch r3 != 0x16<32> l0000A168_ds_t
l0000A168_ds_t:
	r11_106 = 0xFFFFFFEA<32>
l0000A168_ds_f:
l0000A16C:
	word32 r11_39 = fn00009918(-1<i32>, -5<i32>)
	r11_106 = ((0<32> - r11_39 | r11_39) ^ 0xFFFF<32>) >>u 0x1F<32>
l0000A148_ds_f:
	r4_50 = -7<i32>
l0000A14C:
l0000A134_ds_f:
l0000A138:
	r4_50 = -9<i32>
l0000A150:
	r11_106 = fn00009918(-1<i32>, r4_50)
l0000A114_ds_f:
l0000A118:
	r11_106 = Mem8[0x13498<32>:word32] >>u r3 & 1<32>
l0000A084_ds_f:
l0000A088:
	word32 r2_84 = (r3 << 3<32>) + 0x13010<32>
	word32 r14_90 = CONVERT(Mem87[r2_84 + -4<i32>:word16], word16, word32)
	word32 r28_192
	word32 r22_191
	fn0000D214(fp - 19<i32>, fp - 18<i32>, -1<i32>, VR, out r22_191, out r28_192)
	word32 r11_105 = CONVERT(bLoc0E, byte, word32) >> r14_90
	r11_106 = r11_105 & 1<32>
	branch (r11_105 & 1<32>) == 0<32> l0000A0CC_ds_t
l0000A0CC_ds_t:
l0000A0DC:
	Mem110[r2_84 + -2<i32>:byte] = SLICE(r11_105 & 1<32>, byte, 0)
l0000A0CC_ds_f:
l0000A0D0:
	Mem115[r2_84 + -2<i32>:byte] = 0xFF<8>
	r11_106 = -1<i32>
l0000A188:
l0000A18C:
	return r11_106
fn0000A070_exit:


word32 fn0000A22C(word32 r3, word32 VR, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
//      fn00012320
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn0000A22C_entry:
l0000A22C:
	branch Mem9[0x134AC<32>:word32] != 1<32> l0000A24C_ds_t
l0000A24C_ds_t:
l0000A24C_ds_f:
l0000A250:
	word32 r22_143
	word32 r28_144
	fn0000D214(fp - 32<i32>, fp - 24<i32>, -6<i32>, VR, out r22_143, out r28_144)
	word32 r3_38 = CONVERT(bLoc17, byte, word32)
	branch (r3_38 & 1<32>) == 0<32> l0000A280_ds_t
l0000A280_ds_t:
l0000A280_ds_f:
l0000A284:
	Mem46[r3:word32] = Mem20[r3:word32] | 0x40000<32>
l0000A298:
	branch (r3_38 & 2<32>) == 0<32> l0000A2A0_ds_t
l0000A2A0_ds_t:
l0000A2A0_ds_f:
l0000A2A4:
	Mem58[r3:word32] = Mem54[r3:word32] | 0x20000<32>
l0000A2B8:
	branch (r3_38 & 0x20<32>) == 0<32> l0000A2C0_ds_t
l0000A2C0_ds_t:
l0000A2C0_ds_f:
l0000A2C4:
	Mem68[r3:word32] = Mem65[r3:word32] | 0x10000<32>
l0000A2D0:
	branch (r3_38 & 0x40<32>) == 0<32> l0000A2EC
l0000A2E0:
	Mem77[r3:word32] = Mem74[r3:word32] | 0x8000<32>
l0000A2EC:
	r11Out = 0<i32>
	return dwLoc38
fn0000A22C_exit:


void fn0000A300(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012320
// MayUse:  VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r9
// Preserved:
fn0000A300_entry:
l0000A300:
	branch Mem8[0x134AC<32>:word32] != 1<32> l0000A320_ds_t
l0000A320_ds_t:
l0000A354:
	return
fn0000A300_exit:
l0000A320_ds_f:
l0000A324:
	word32 r22_56
	word32 r24_57
	fn0000D298(fp - 14<i32>, fp - 12<i32>, -2<i32>, VR, out r22_56, out r24_57)


word32 fn0000A364(word32 r3, word32 VR, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11 r14
// Trashed: CV r1 r11 r14 r2 r3 r5 r9
// Preserved:
fn0000A364_entry:
l0000A364:
	word32 r5_13 = Mem12[0x134AC<32>:word32]
	branch r5_13 != 1<32> l0000A38C_ds_t
l0000A38C_ds_t:
l0000A5B8:
	r14Out = dwLocA8
	return 0<i32>
fn0000A364_exit:
l0000A38C_ds_f:
l0000A390:
	word32 r24_293
	word32 r22_292
	fn0000D298(fp - 104<i32>, fp - 147<i32>, r5_13, VR, out r22_292, out r24_293)
	word32 r3_47 = fp - 104<i32>
	word32 r4_48 = -32<i32>
l0000A3B4:
	Mem52[r3_47:byte] = SLICE(r4_48, byte, 0)
	word32 r4_53 = r4_48 + -1<i32>
	r4_48 = r4_53 & 0xFF<32>
	branch (r4_53 & 0xFF<32>) != 0x37<32> l0000A3C8_ds_t
l0000A3C8_ds_t:
	r3_47 = r3_47 + -1<i32>
l0000A3C8_ds_f:
l0000A3CC:
	word32 r28_295
	word32 r22_294
	fn0000D214(fp - 104<i32>, fp - 80<i32>, -23<i32>, VR, out r22_294, out r28_295)
	word32 r4_162 = fp - 128<i32>
	word32 r3_165 = 0<i32>
	word32 r8_168 = Mem164[r3 + 40<i32>:word32]
	word32 r7_169 = Mem164[r3 + 44<i32>:word32]
	word32 r6_170 = Mem164[r3 + 48<i32>:word32]
	word32 r5_171 = Mem164[r3 + 52<i32>:word32]
l0000A548:
	r8_168 = r8_168 | CONVERT(Mem164[r4_162:byte], byte, word32) << r3_165
	r7_169 = r7_169 | CONVERT(Mem164[r4_162 + 4<i32>:byte], byte, word32) << r3_165
	r6_170 = r6_170 | CONVERT(Mem164[r4_162 + 8<i32>:byte], byte, word32) << r3_165
	word32 r11_188 = CONVERT(Mem164[r4_162 + 12<i32>:byte], byte, word32) << r3_165
	r3_165 = r3_165 + -8<i32>
	r4_162 = r4_162 + -1<i32>
	branch r3_165 != 0x20<32> l0000A584_ds_t
l0000A584_ds_t:
	r5_171 = r5_171 | r11_188
l0000A584_ds_f:
	word32 r5_195 = r5_171 | r11_188
l0000A588:
	Mem198[r3 + 52<i32>:word32] = r5_195
	Mem199[r3 + 40<i32>:word32] = r8_168
	Mem200[r3 + 44<i32>:word32] = r7_169
	Mem201[r3 + 48<i32>:word32] = r6_170
	word32 r24_297
	word32 r22_296
	fn0000D298(fp - 104<i32>, fp - 147<i32>, -1<i32>, VR, out r22_296, out r24_297)


word32 fn0000A5D0(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn0000A5D0_entry:
l0000A5D0:
	word32 r4_20
	word32 r3_17
	word32 r4_7 = Mem0[r3 + 40<i32>:word32]
	branch Mem0[r3 + 48<i32>:word32] != 1<32> l0000A5E0_ds_t
l0000A5E0_ds_t:
	word32 r3_8 = Mem0[r3 + 44<i32>:word32]
l0000A5FC:
	Mem14[0x134A4<32>:word32] = r4_7 * 2<32> + (r4_7 << 3<32>)
	r3_17 = r3_8 * 2<32> + (r3_8 << 3<32>)
	r4_20 = 0x134A8<32>
l0000A5E0_ds_f:
	r3_17 = Mem0[r3 + 44<i32>:word32]
l0000A5E4:
	Mem24[0x1349C<32>:word32] = r4_7
	r4_20 = 0x134A0<32>
l0000A628:
	Mem29[r4_20:word32] = r3_17
	return 0<i32>
fn0000A5D0_exit:


word32 fn0000A634(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn0000A634_entry:
l0000A634:
	fn0000DF10(0x3CA8<32>, r3 + -40<i32>, -80<i32>)
	return 0<i32>
fn0000A634_exit:


void fn0000A664()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012320
// MayUse: 
// LiveOut:
// Trashed: CV r11 r2 r3 r4 r5 r7 r9
// Preserved: r1
fn0000A664_entry:
l0000A664:
	branch Mem5[0x43B4<32>:word32] == 0<32> l0000A67C_ds_t
l0000A67C_ds_t:
l0000A688:
	fn00009744(-1<i32>, -6<i32>, 0<i32>)
l0000A6A8_thunk_fn000097BC:
	fn000097BC(-1<i32>, -6<i32>, -1<i32>)
	return
fn0000A664_exit:
l0000A67C_ds_f:
l0000A680:
	fn00008B60(0<i32>)


word32 fn0000A6B0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012320
// MayUse: 
// LiveOut: r11
// Trashed: CV r11 r2 r3 r4 r5
// Preserved: r1 r9
fn0000A6B0_entry:
l0000A6B0:
	word32 r3_16 = 0<i32>
	branch fn00009918(-1<i32>, -6<i32>) != 0<i32> l0000A6F8
l0000A6D4:
	fn0000DB28(-10<i32>)
	word32 r11_28 = fn00009918(-1<i32>, -6<i32>)
	r3_16 = ((0<32> - r11_28 | r11_28) ^ 0xFFFF<32>) >>u 0x1F<32>
l0000A6F8:
	return r3_16
fn0000A6B0_exit:


void fn0000A708(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AA80
//      fn00012320
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000A708_exit:
fn0000A708_entry:
l0000A708:
	word32 r2_13 = Mem12[0x134AC<32>:word32]
	branch r2_13 != 1<32> l0000A72C_ds_t
l0000A72C_ds_t:
l0000A774:
	fn0000EDF4(-15<i32>, 0x12C28<32>, r15, VR)
	fn000098AC(-1<i32>, -5<i32>, -1<i32>)
	fn000098AC(-1<i32>, -9<i32>, 0<i32>)
	fn000098AC(-1<i32>, -8<i32>, 0<i32>)
	fn0000C768(-1000<i32>)
	fn000098AC(-1<i32>, -8<i32>, -1<i32>)
	fn000098AC(-1<i32>, -9<i32>, -1<i32>)
	fn0000C768(-10<i32>)
	fn000098AC(-1<i32>, -5<i32>, 0<i32>)
	fn0000C768(-100<i32>)
	fn00009B80()
l0000A72C_ds_f:
l0000A730:
	word32 r22_184
	word32 r28_185
	fn0000D214(fp - 23<i32>, fp - 22<i32>, r2_13, VR, out r22_184, out r28_185)
	word32 r22_186
	word32 r24_187
	fn0000D298(fp - 23<i32>, fp - 22<i32>, r2_13, VR, out r22_186, out r24_187)
l0000A76C:


word32 fn0000A92C(word32 r15, word32 VR, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AA80
//      fn0000AADC
//      fn0000AC14
// MayUse:  r15:[0..31] Stack +0000:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r2 r9
fn0000A92C_entry:
l0000A92C:
	fn0000AC84(r15)
	word32 r14_281
	fn0000B610(-1<i32>, -2<i32>, dwArg00, out r14_281)
	fn0000C768(-1<i32>)
	fn0000BAC8(r9)
	fn0000897C()
	fn0000B950(-11<i32>)
	fn0000B950(-12<i32>)
	fn0000C768(-1<i32>)
	fn0000BC38(-33<i32>)
	word32 r2_88 = Mem10[fn0000C768(-1<i32>):word32]
	branch r2_88 != 1<32> l0000A9B0_ds_t
l0000A9B0_ds_t:
l0000AA20:
	fn000098AC(-1<i32>, -5<i32>, -1<i32>)
	fn000098AC(-1<i32>, -9<i32>, 0<i32>)
	fn000098AC(-1<i32>, -8<i32>, 0<i32>)
	fn0000C768(-1500<i32>)
	r15 = fn0000EDF4(-15<i32>, 0x12C37<32>, r15, VR)
l0000A9B0_ds_f:
l0000A9B4:
	word32 r28_283
	word32 r22_282
	fn0000D214(fp + 17<i32>, fp + 18<i32>, r2_88, VR, out r22_282, out r28_283)
	word32 r22_284
	word32 r24_285
	fn0000D298(fp + 17<i32>, fp + 18<i32>, r2_88, VR, out r22_284, out r24_285)
	word32 r22_286
	word32 r28_287
	fn0000D214(fp + 17<i32>, fp + 18<i32>, r2_88, VR, out r22_286, out r28_287)
	word32 r22_288
	word32 r24_289
	fn0000D298(fp + 17<i32>, fp + 18<i32>, r2_88, VR, out r22_288, out r24_289)
l0000AA6C:
	return r15
fn0000A92C_exit:


void fn0000AA80(word32 r2, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000122B8
// MayUse:  r15:[0..31] r2:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000AA80_exit:
fn0000AA80_entry:
l0000AA80:
	branch Mem8[0x134AC<32>:word32] == 1<32> l0000AA9C_ds_t
l0000AA9C_ds_t:
l0000AACC:
l0000AAD4_thunk_fn00009B80:
	fn00009B80()
l0000AA9C_ds_f:
l0000AAA0:
	word32 r15_25 = fn0000A92C(r15, VR, r2)
	Mem43[0x1F0142C<32>:word32] = Mem8[0x1F0142C<32>:word32] & 0xFFFFFFFE<32>
l0000AAC4_thunk_fn0000A708:
	fn0000A708(r15_25, VR)


void fn0000AADC(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000122B8
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000AADC_exit:
fn0000AADC_entry:
l0000AADC:
	word32 r2_17 = Mem14[0x134AC<32>:word32]
	branch r2_17 != 1<32> l0000AB0C_ds_t
l0000AB0C_ds_t:
l0000AB60:
	fn00009744(-1<i32>, -2<i32>, -1<i32>)
	fn00009744(-1<i32>, -7<i32>, -1<i32>)
	fn00009834(-1<i32>, -2<i32>, -3<i32>)
	fn00009834(-1<i32>, -7<i32>, -3<i32>)
	fn000098AC(-1<i32>, -2<i32>, 0<i32>)
	fn000098AC(-1<i32>, -7<i32>, 0<i32>)
	word32 r1_80 = <invalid>
	fn0000A92C(r15, VR, Mem14[r1_80:word32])
	Mem110[0x1F00180<32>:word32] = -1956<i32>
	Mem115[0x1F0142C<32>:word32] = Mem110[0x1F0142C<32>:word32] & 0xFFFFFFFE<32>
	Mem118[0x1F01C00<32>:word32] = 0<i32>
l0000AB0C_ds_f:
l0000AB10:
	fn0000EDF4(-15<i32>, 0x12C41<32>, r15, VR)
	word32 r22_181
	word32 r28_182
	fn0000D214(fp - 23<i32>, fp - 22<i32>, r2_17, VR, out r22_181, out r28_182)
	word32 r22_183
	word32 r24_184
	fn0000D298(fp - 23<i32>, fp - 22<i32>, r2_17, VR, out r22_183, out r24_184)
l0000ABF4:


word32 fn0000AC14(word32 r15, word32 VR, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012320
// MayUse:  r15:[0..31] Stack +0000:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r14 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000AC14_entry:
l0000AC14:
	word32 r2_11 = 0x1700030<32>
l0000AC28:
	branch (Mem7[r2_11:word32] & 0x10000<32>) == 0<32> l0000AC3C_ds_t
l0000AC3C_ds_t:
l0000AC74:
	r2_11 = fn0000C768(-1<i32>)
l0000AC3C_ds_f:
l0000AC40:
	word32 r15_41 = fn0000EDF4(-15<i32>, 0x12C4B<32>, r15, VR)
	fn00004844()
	word32 r15_62 = fn0000490C(r15_41)
l0000AC6C_thunk_fn0000A92C:
	return fn0000A92C(r15_62, VR, dwArg00)
fn0000AC14_exit:


word32 fn0000AC84(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AC14
//      fn00010570
// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r12 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r9
fn0000AC84_entry:
l0000AC84:
	branch Mem20[0x134B0<32>:word32] != 0<32> l0000ACB8_ds_t
l0000ACB8_ds_t:
l0000ACB8_ds_f:
l0000ACBC:
	word32 r11_31
	fn0000AF1C(-1<i32>, out r11_31)
	word32 r1_30 = <invalid>
	word32 r14_43
	fn0000B610(-1<i32>, -3<i32>, Mem20[r1_30 + 20<i32>:word32], out r14_43)
	fn0000DB28(-1600<i32>)
	word32 r12_55
	fn000046C0(out r12_55)
	fn0000DB28(r14_43 | 0x4240<32>)
	word32 r12_68
	fn000046C0(out r12_68)
	word32 r1_66 = <invalid>
	word32 r14_81
	fn0000B610(-1<i32>, -2<i32>, Mem20[r1_66 + 20<i32>:word32], out r14_81)
	fn0000DB28(-1600<i32>)
	word32 r12_93
	fn000046C0(out r12_93)
	fn0000DB28(r14_81 | 0x4240<32>)
	word32 r12_106
	fn000046C0(out r12_106)
	word32 r1_104 = <invalid>
	word32 r14_236
	word32 r2_120 = fn0000B610(-1<i32>, r11_31, Mem20[r1_104 + 20<i32>:word32], out r14_236)
	word32 r11_129
	word32 r15_134
	fn0000FEDC(r12_68 - r12_55, -24000<i32>, r15, out r11_129, out r15_134)
	word32 r11_147
	word32 r15_152
	fn0000FEDC(r12_106 - r12_93, -24000<i32>, r15_134, out r11_147, out r15_152)
	word32 r11_162
	fn0000FEDC(r11_129 *s -24000<i32>, r11_147, r15_152, out r11_162, out r15)
	Mem178[0x13098<32>:word32] = r11_162 *s -1000<i32>
	Mem182[0x1309C<32>:word32] = r11_162 *s -1000<i32> >>u 9<32>
	Mem185[r2_120:word32] = -1<i32>
l0000AD94:
	return r15
fn0000AC84_exit:


word32 fn0000ADBC(word32 r15, word32 dwArg1C)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  r15:[0..31] Stack +001C:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000ADBC_entry:
l0000ADBC:
	Mem11[0x13948<32>:word32] = 0x1F01400<32>
	Mem16[0x13944<32>:word32] = 0x1C20000<32>
	Mem20[0x1393C<32>:word32] = 0x1C20028<32>
	word32 r11_25
	word32 r15_31
	word32 r14_115
	fn0000BF88(-11<i32>, r15, out r11_25, out r14_115, out r15_31)
	word32 r15_46
	word32 r14_116
	word32 r11_43 = fn0000FFD8(r11_25, 0xBEBC200<32>, r15_31, out r14_116, out r15_46)
	branch !(r11_43 == 0<32>) l0000AE24
l0000AE20:
	r11_43 = -1<i32>
l0000AE24:
	word32 r3_66 = Mem20[0x13948<32>:word32]
	Mem74[r3_66:word32] = Mem20[r3_66:word32] & 0xFFFFE0FF<32> | (r11_43 - 1<i32> & 0x1F<32>) << 8<32>
	word32 r14_117
	Mem89[0x13940<32>:word32] = fn0000B610(-1<i32>, -11<i32>, dwArg1C, out r14_117)
	Mem96[0x1C20204<32>:word32] = Mem89[0x1C20204<32>:word32] & 0xFFFF0000<32> | 0x400<32>
	return r15_46
fn0000ADBC_exit:


void fn0000AEDC(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004844
//      fn0000490C
//      fn00004978
//      fn00004A6C
//      fn00007FD0
//      fn00008000
//      fn00008030
//      fn0000E98C
//      fn0000F444
//      fn00010570
//      fn000122B8
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: r4
// Preserved: r1
fn0000AEDC_entry:
l0000AEDC:
	Mem6[0x1F0010C<32>:word32] = r3
	return
fn0000AEDC_exit:


void fn0000AF04(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00012320
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved: r1
fn0000AF04_entry:
l0000AF04:
	Mem5[r3:word32] = r4
	return
fn0000AF04_exit:


word32 fn0000AF1C(word32 r3, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000AC84
//      fn0000B610
//      fn00010570
// MayUse:  r3:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000AF1C_entry:
l0000AF1C:
	branch r3 >u 0x20<32> || r3 <u 1<i32> l0000AF2C_ds_t
l0000AF2C_ds_t:
l0000B01C:
l0000B028_in_fn0000AF1C:
	r11Out = 0<i32>
	return dwLoc0C
l0000AF2C_ds_f:
l0000AF30:
	word32 r3_23 = Mem4[(r3 - 1<i32> << 2<32>) + 0x12490<32>:word32]
	word32 r2_25
	word32 r11_27
	call r3_23 (retsize: 0;)
		uses: r2:0x12490<32>,r3:r3_23,Stack +FFFFFFF8:dwLoc0C
		defs: r11:r11_27,r2:r2_25
	r11Out = r11_27
	return r2_25
fn0000AF1C_exit:


word32 fn0000AF4C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000062BC
// MayUse: 
// LiveOut: r2
// Trashed: CV r1 r11 r2
// Preserved:
fn0000AF4C_entry:
l0000AF4C:
l0000B028_in_fn0000AF4C:
	return dwLoc08
fn0000AF4C_exit:


word32 fn0000AF54()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000062BC
// MayUse: 
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000AF54_entry:
l0000AF54:
l0000B010:
l0000B028:
	return dwLoc08
fn0000AF54_exit:


word32 fn0000B034(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B0B8
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r11
// Trashed: CV r1 r11 r2 r3 r6
// Preserved:
fn0000B034_entry:
l0000B034:
	word32 r11_14
	branch r3 >u 0x10<32> l0000B040_ds_t
l0000B040_ds_t:
l0000B058:
	word32 r6_18
	word32 r3_19
	branch r3 >u 0x20<32> l0000B060_ds_t
l0000B060_ds_t:
l0000B074:
	branch r3 >u 0x40<32> l0000B078_ds_t
l0000B078_ds_t:
l0000B088:
	branch r3 >u 0x80<32> l0000B090_ds_t
l0000B090_ds_t:
	r11_14 = 0xFFFFFFEA<32>
l0000B090_ds_f:
l0000B094:
	Mem22[r4:word32] = -3<i32>
	r6_18 = -3<i32>
	r3_19 = r3 + -7<i32>
l0000B078_ds_f:
	r6_18 = -2<i32>
l0000B07C:
	Mem27[r4:word32] = -2<i32>
	r3_19 = r3 + -3<i32>
l0000B060_ds_f:
l0000B064:
	Mem30[r4:word32] = -1<i32>
	r6_18 = -1<i32>
	r3_19 = r3 + -1<i32>
l0000B0A0:
	Mem40[r5:word32] = r3_19 >>u r6_18
	r11_14 = 0<i32>
l0000B040_ds_f:
l0000B044:
	Mem45[r4:word32] = 0<i32>
	Mem46[r5:word32] = r3
	r11_14 = 0<32>
l0000B0AC:
	return r11_14
fn0000B034_exit:


void fn0000B0B8(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000E1AC
//      fn000100B8
//      fn00010570
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r2 r9
fn0000B0B8_entry:
l0000B0B8:
	branch r3 == 3<32> l0000B0C8_ds_t
l0000B0C8_ds_t:
l0000B144:
	word32 r3_16 = Mem6[0x13948<32>:word32]
	Mem21[r3_16 + 12<i32>:word32] = Mem6[r3_16 + 12<i32>:word32] & 0xFFFFFFFC<32> | r4 - 1<i32> & 3<32>
l0000B0C8_ds_f:
l0000B0CC:
	branch r3 >u 3<32> l0000B0D4_ds_t
l0000B0D4_ds_t:
l0000B0EC:
	branch r3 == 0x14<32> l0000B0F0_ds_t
l0000B0F0_ds_t:
l0000B1F4:
	Mem43[0x1C20050<32>:word32] = r4 - 1<i32> & 3<32> | Mem6[0x1C20050<32>:word32] & 0xFFFFFFFC<32>
l0000B0F0_ds_f:
l0000B0F4:
	branch !(r3 == 0x1F<32>) l0000B0F8_ds_t
l0000B0F8_ds_t:
l0000B0F8_ds_f:
l0000B0FC:
l0000B174:
	word32 r11_53 = fn0000B034(r4, fp - 20<i32>, fp - 16<i32>)
	word32 r1_52 = <invalid>
	branch r11_53 != 0<32> l0000B184_ds_t
l0000B184_ds_t:
l0000B184_ds_f:
l0000B188:
	word32 r4_65 = Mem6[r1_52 + 4<i32>:word32]
	word32 r3_67 = Mem6[0x13948<32>:word32]
l0000B1A0:
	branch r4_65 >u 1<32> l0000B1A8_ds_t
l0000B1A8_ds_t:
	r4_65 = r4_65 >>u 1<32>
l0000B19C:
	r11_53 = r11_53 + -1<i32>
l0000B1A8_ds_f:
l0000B1AC:
	Mem85[r3_67 + 84<i32>:word32] = Mem6[r3_67 + 84<i32>:word32] & 0xFFFCFFFF<32> | (r11_53 & 3<32>) << 0x10<32>
	Mem93[r3_67 + 84<i32>:word32] = Mem85[r3_67 + 84<i32>:word32] & 0xFFFFFFF0<32> | Mem85[r1_52:word32] - 1<i32> & 0xF<32>
l0000B0D4_ds_f:
l0000B0D8:
	branch !(r3 == 1<32>) l0000B0E0_ds_t
l0000B0E0_ds_t:
l0000B238:
l0000B0E0_ds_f:
l0000B0E4:
l0000B104:
	word32 r5_103 = Mem6[0x13948<32>:word32]
	word32 r3_104 = 0<i32>
l0000B114:
	branch r4 >u 1<32> l0000B11C_ds_t
l0000B11C_ds_t:
	r4 = r4 >>u 1<32>
l0000B110:
	r3_104 = r3_104 + -1<i32>
l0000B11C_ds_f:
l0000B120:
	Mem121[r5_103:word32] = Mem6[r5_103:word32] & 0xFFFFFFCF<32> | (r3_104 & 3<32>) << 4<32>
l0000B23C:
	return
fn0000B0B8_exit:


word32 fn0000B250(word32 r3, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000BF88
//      fn0000E110
//      fn0000E1AC
// MayUse:  r3:[0..31]
// LiveOut: r11 r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000B250_entry:
l0000B250:
	branch r3 >u 0x20<32> || r3 <u 1<i32> l0000B260_ds_t
l0000B260_ds_t:
l0000B310:
	r11Out = 0xFFFFFFEA<32>
	return dwLoc14
l0000B260_ds_f:
l0000B264:
	word32 r3_22 = Mem4[(r3 - 1<i32> << 2<32>) + 0x12510<32>:word32]
	word32 r2_24
	word32 r11_26
	call r3_22 (retsize: 0;)
		uses: r2:0x12510<32>,r3:r3_22,Stack +FFFFFFF4:dwLoc14
		defs: r11:r11_26,r2:r2_24
	r11Out = r11_26
	return r2_24
fn0000B250_exit:


word32 fn0000B320(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000082FC
//      fn000083F8
//      fn000087BC
//      fn00008998
//      fn00009290
//      fn000096F8
//      fn0000C32C
//      fn0000CB40
//      fn0000D640
//      fn0000D76C
// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000B320_entry:
l0000B320:
	branch r3 >u 0x20<32> || r3 <u 14<i32> l0000B330_ds_t
l0000B330_ds_t:
l0000B4C4:
	return dwLoc0C
l0000B330_ds_f:
l0000B334:
	word32 r3_22 = Mem4[(r3 - 14<i32> << 2<32>) + 0x12590<32>:word32]
	word32 r2_24
	call r3_22 (retsize: 0;)
		uses: r2:0x12590<32>,r3:r3_22,Stack +FFFFFFF8:dwLoc0C
		defs: r2:r2_24
	return r2_24
fn0000B320_exit:


void fn0000B4D4(word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CB40
//      fn0000D640
// MayUse:  r4:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r9
// Preserved:
fn0000B4D4_entry:
l0000B4D4:
l0000B4E8_thunk_fn0000F8E8:
	fn0000F8E8(0x13940<32>, r4, VR)
	return
fn0000B4D4_exit:


word32 fn0000B4F0(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D76C
// MayUse:  r4:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r5 r6 r7 r9
// Preserved:
fn0000B4F0_entry:
l0000B4F0:
l0000F9A0:
	word32 r6_13 = Mem12[0x13940<32>:word32]
	branch r6_13 == 0<32> l0000F9B4_ds_t
l0000F9B4_ds_t:
l0000F9B4_ds_f:
l0000F9B8:
	word32 r5_21 = Mem12[r6_13 + 8<i32>:word32]
	branch r5_21 != 0<32> l0000F9E8
l0000F9E8:
	branch Mem12[r5_21 + 4<i32>:word32] != r4 l0000FA04
l0000FA04:
	word32 r3_28 = Mem12[r5_21 + 8<i32>:word32]
	branch r3_28 != 0<32> l0000FA10_ds_t
l0000FA10_ds_t:
	r6_13 = r5_21
l0000F9E4:
	r5_21 = r3_28
l0000FA10_ds_f:
l0000FA14:
l0000F9F8:
	Mem37[r6_13 + 8<i32>:word32] = Mem12[r5_21 + 8<i32>:word32]
l0000F9C8:
	branch Mem12[r6_13 + 4<i32>:word32] != r4 l0000F9D4_ds_t
l0000F9D4_ds_t:
l0000F9D4_ds_f:
l0000F9D8:
	Mem45[0x13940<32>:word32] = r5_21
	r5_21 = r6_13
l0000FA1C:
	Mem50[r5_21:word32] = 0<i32>
	Mem51[r5_21 + 8<i32>:word32] = 0<i32>
l0000FA2C:
	return dwLoc14
fn0000B4F0_exit:


word32 fn0000B610(word32 r3, word32 r4, word32 dwArg14, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
//      fn0000AC14
//      fn0000AC84
//      fn0000ADBC
//      fn000100B8
//      fn00010570
// MayUse:  r3:[0..31] r4:[0..31] Stack +0014:[0..31]
// LiveOut: r14 r2
// Trashed: CV r11 r14 r2 r3 r4 r5
// Preserved: r1 r9
fn0000B610_entry:
l0000B610:
	word32 r2_109
	word32 r3_112
	branch r3 == 0xA<32> l0000B624_ds_t
l0000B624_ds_t:
l0000B700:
	branch r4 == 3<32> l0000B708_ds_t
l0000B708_ds_t:
l0000B754:
	r2_109 = 0x1C20054<32>
	r3_112 = Mem6[0x1C20054<32>:word32] & 0xFFFFCFFF<32> | 0x1000<32>
l0000B708_ds_f:
l0000B70C:
	branch r4 >u 3<32> l0000B710_ds_t
l0000B710_ds_t:
l0000B728:
	branch r4 == 4<32> l0000B72C_ds_t
l0000B72C_ds_t:
l0000B770:
	r2_109 = 0x1C20054<32>
	r3_112 = Mem6[0x1C20054<32>:word32] & 0xFFFFCFFF<32> | 0x2000<32>
l0000B72C_ds_f:
l0000B730:
	branch !(r4 == 0xB<32>) l0000B8C4
l0000B738:
l0000B78C:
	r2_109 = 0x1C20054<32>
	r3_112 = Mem6[0x1C20054<32>:word32] | 0x3000<32>
l0000B710_ds_f:
l0000B714:
	branch !(r4 == 1<32>) l0000B8C4
l0000B720:
l0000B740:
	r2_109 = 0x1C20054<32>
	r3_112 = Mem6[0x1C20054<32>:word32] & 0xFFFFCFFF<32>
l0000B624_ds_f:
l0000B628:
	word32 r4_263
	word32 r3_262
	word32 r4_242
	word32 r3_241
	branch r3 >u 0xA<32> l0000B630_ds_t
l0000B630_ds_t:
l0000B650:
	branch r3 == 0xD<32> l0000B654_ds_t
l0000B654_ds_t:
l0000B7DC:
	branch r4 == 3<32> l0000B7E4_ds_t
l0000B7E4_ds_t:
l0000B810:
	r2_109 = 0x1C20058<32>
	r3_241 = Mem6[0x1C20058<32>:word32] & 0xFCFFFFFF<32>
	r4_242 = 0x1000000<32>
l0000B7E4_ds_f:
l0000B7E8:
	branch r4 == 0xB<32> l0000B7EC_ds_t
l0000B7EC_ds_t:
l0000B830:
	r2_109 = 0x1C20058<32>
	r3_241 = Mem6[0x1C20058<32>:word32] & 0xFCFFFFFF<32>
	r4_242 = 0x2000000<32>
l0000B7EC_ds_f:
l0000B7F0:
	branch !(r4 == 1<32>) l0000B7F4_ds_t
l0000B7F4_ds_t:
l0000B7F4_ds_f:
l0000B7F8:
	r2_109 = 0x1C20058<32>
	r3_262 = Mem6[0x1C20058<32>:word32]
	r4_263 = 0xFCFFFFFF<32>
l0000B654_ds_f:
l0000B658:
	branch r3 == 0x1F<32> l0000B65C_ds_t
l0000B65C_ds_t:
l0000B85C:
	word32 r2_83
	word32 r3_85
	branch r4 == 1<32> l0000B864_ds_t
l0000B864_ds_t:
l0000B878:
	r2_83 = Mem6[0x13948<32>:word32]
	r3_85 = Mem6[r2_83 + 84<i32>:word32] & 0xFCFFFFFF<32>
l0000B864_ds_f:
l0000B868:
	branch !(r4 == 3<32>) l0000B8C4
l0000B870:
l0000B898:
	r2_83 = Mem6[0x13948<32>:word32]
	r3_85 = Mem6[r2_83 + 84<i32>:word32] & 0xFCFFFFFF<32> | 0x1000000<32>
l0000B8B8:
	Mem98[r2_83 + 84<i32>:word32] = r3_85
l0000B65C_ds_f:
l0000B660:
	branch !(r3 == 0xB<32>) l0000B664_ds_t
l0000B664_ds_t:
l0000B664_ds_f:
l0000B668:
l0000B79C:
	branch r4 == 0xB<32> l0000B7A0_ds_t
l0000B7A0_ds_t:
l0000B7C0:
	r2_109 = 0x1C2005C<32>
	r3_112 = Mem6[0x1C2005C<32>:word32] & 0xFFFFFFFC<32> | 1<32>
l0000B7A0_ds_f:
l0000B7A4:
	branch !(r4 == 0x17<32>) l0000B7A8_ds_t
l0000B7A8_ds_t:
l0000B7A8_ds_f:
l0000B7AC:
	r2_109 = 0x1C2005C<32>
	r3_112 = Mem6[0x1C2005C<32>:word32] & 0xFFFFFFFC<32>
l0000B630_ds_f:
l0000B634:
	branch r3 == 1<32> l0000B63C_ds_t
l0000B63C_ds_t:
l0000B670:
	word32 r11_126
	word32 r2_127 = fn0000AF1C(r3, out r11_126)
	branch r11_126 == r2_127 l0000B680_ds_t
l0000B680_ds_t:
l0000B8BC:
l0000B680_ds_f:
l0000B684:
l0000B50C:
	word32 r14_148
	word32 r2_151
	branch r2_127 == 2<32> l0000B520_ds_t
l0000B520_ds_t:
l0000B578:
	r14_148 = -3<i32>
	r2_151 = Mem143[0x13098<32>:word32]
l0000B520_ds_f:
l0000B524:
	branch r2_127 >u 2<32> l0000B52C_ds_t
l0000B52C_ds_t:
l0000B544:
	branch r2_127 == 3<32> l0000B548_ds_t
l0000B548_ds_t:
l0000B55C:
	r14_148 = -1<i32>
	r2_151 = 0x16E3600<32>
l0000B548_ds_f:
l0000B54C:
	branch !(r2_127 == 0xB<32>) l0000B550_ds_t
l0000B550_ds_t:
l0000B550_ds_f:
l0000B554:
	r14_148 = -2<i32>
l0000B58C:
	r2_151 = 0xBEBC200<32>
l0000B52C_ds_f:
l0000B530:
	branch !(r2_127 == 1<32>) l0000B538_ds_t
l0000B538_ds_t:
l0000B5F8:
l0000B538_ds_f:
l0000B53C:
	r14_148 = 0<i32>
l0000B56C:
	r2_151 = Mem143[0x1309C<32>:word32]
l0000B590:
	fn0000FA38(0x13940<32>, 0<i32>, r2_151, dwArg14)
	word32 r3_196 = Mem143[0x13948<32>:word32]
	Mem200[r3_196 + 12<i32>:word32] = Mem143[r3_196 + 12<i32>:word32] & 0xFFFFFFFC<32>
	Mem208[r3_196:word32] = Mem200[r3_196:word32] & 0xFFFCFFFF<32> | r14_148 << 0x10<32>
	fn0000FA38(0x13940<32>, -1<i32>, r2_151, dwArg14)
l0000B5FC:
	r14Out = r2
	return dwLoc0C
l0000B63C_ds_f:
l0000B640:
	branch !(r3 == 4<32>) l0000B644_ds_t
l0000B644_ds_t:
l0000B644_ds_f:
l0000B648:
l0000B694:
	branch r4 == 3<32> l0000B698_ds_t
l0000B698_ds_t:
l0000B6C0:
	r2_109 = 0x1C20050<32>
	r3_241 = Mem6[0x1C20050<32>:word32] & 0xFFFCFFFF<32>
	r4_242 = 0x10000<32>
l0000B698_ds_f:
l0000B69C:
	branch r4 == 6<32> l0000B6A0_ds_t
l0000B6A0_ds_t:
l0000B6E0:
	r2_109 = 0x1C20050<32>
	r3_241 = Mem6[0x1C20050<32>:word32] & 0xFFFCFFFF<32>
	r4_242 = 0x20000<32>
l0000B84C:
	r3_112 = r3_241 | r4_242
l0000B6A0_ds_f:
l0000B6A4:
	branch !(r4 == 1<32>) l0000B6A8_ds_t
l0000B6A8_ds_t:
l0000B8C4:
l0000B6A8_ds_f:
l0000B6AC:
	r2_109 = 0x1C20050<32>
	r3_262 = Mem6[0x1C20050<32>:word32]
	r4_263 = 0xFFFCFFFF<32>
l0000B808:
	r3_112 = r3_262 & r4_263
l0000B850:
	Mem271[r2_109:word32] = r3_112
l0000B8C8:
	r14Out = r14
	return r2
fn0000B610_exit:


word32 fn0000B8D8(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BE00
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000B8D8_entry:
l0000B8D8:
	branch r4 <=u 0x7829B800<32> l0000B8F4_ds_t
l0000B8F4_ds_t:
l0000B8F4_ds_f:
l0000B8F8:
	r4 = 0x7829B800<32>
l0000B8FC:
	word32 r11_25
	word32 r15_30
	fn0000FEDC(r4, 0x5B8D80<32>, r15, out r11_25, out r15_30)
	word32 r11_40 = (r11_25 << 2<32>) + 0x12624<32>
	Mem44[r3:byte] = Mem9[r11_40:byte]
	Mem46[r3 + 1<i32>:byte] = Mem44[r11_40 + 1<i32>:byte]
	word32 r11_48 = CONVERT(Mem46[r11_40 + 3<i32>:byte], byte, word32)
	Mem49[r3 + 2<i32>:byte] = Mem46[r11_40 + 2<i32>:byte]
	Mem50[r3 + 3<i32>:byte] = SLICE(r11_48, byte, 0)
	return r15_30
fn0000B8D8_exit:


word32 fn0000B950(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000490C
//      fn00004A6C
//      fn0000AC14
//      fn00010570
// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000B950_entry:
l0000B950:
	branch r3 >u 0xF<32> || r3 <u 1<i32> l0000B960_ds_t
l0000B960_ds_t:
l0000BA98:
	return dwLoc0C
l0000B960_ds_f:
l0000B964:
	word32 r3_22 = Mem4[(r3 - 1<i32> << 2<32>) + 0x12B68<32>:word32]
	word32 r2_24
	call r3_22 (retsize: 0;)
		uses: r2:0x12B68<32>,r3:r3_22,Stack +FFFFFFF8:dwLoc0C
		defs: r2:r2_24
	return r2_24
fn0000B950_exit:


void fn0000BAA8(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C32C
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r9
// Preserved:
fn0000BAA8_entry:
l0000BAA8:
l0000BAC0_thunk_fn0000F8E8:
	fn0000F8E8(0x134B4<32>, r3, VR)
	return
fn0000BAA8_exit:


void fn0000BAC8(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AC14
//      fn00010570
// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn0000BAC8_entry:
l0000BAC8:
	Mem11[0x134B8<32>:word32] = -1<i32>
	fn0000FA38(0x134B4<32>, -1<i32>, 0<i32>, r9)
	Mem27[0x1F01444<32>:word32] = Mem11[0x1F01444<32>:word32] | 0xA7000000<32>
	Mem32[0x1F01444<32>:word32] = (Mem27[0x1F01444<32>:word32] | 0xA7000000<32>) & 0xFFFFFFFC<32>
	fn0000DB28(-20<i32>)
	Mem42[0x1F01444<32>:word32] = Mem32[0x1F01444<32>:word32] | 0xA7000000<32>
	Mem47[0x1F01444<32>:word32] = (Mem42[0x1F01444<32>:word32] | 0xA7000000<32>) & 0xFFFFFFFB<32>
	return
fn0000BAC8_exit:


void fn0000BB60(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r2 r9
fn0000BB60_entry:
l0000BB60:
	Mem14[0x1F01444<32>:word32] = Mem9[0x1F01444<32>:word32] | 0xA7000000<32>
	Mem17[0x1F01444<32>:word32] = Mem14[0x1F01444<32>:word32] | 0xA7000004<32>
	word32 r2_21 = fn0000C768(-2<i32>)
	Mem32[r2_21:word32] = Mem17[r2_21:word32] | 0xA7000000<32>
	Mem35[r2_21:word32] = Mem32[r2_21:word32] | 0xA7000003<32>
	word32 r2_39 = fn0000C768(-2<i32>)
	Mem50[r2_39:word32] = Mem35[r2_39:word32] | 0xA7000000<32>
	Mem58[r2_39:word32] = Mem50[r2_39:word32] & 0x58F00FFF<32> | 0xA7070000<32>
	fn0000FA38(0x134B4<32>, 0<i32>, 0<32>, r9)
	Mem71[0x134B8<32>:word32] = 0<i32>
	return
fn0000BB60_exit:


word32 fn0000BC28()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C8A0
// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000BC28_entry:
l0000BC28:
	return Mem0[0x134B8<32>:word32]
fn0000BC28_exit:


word32 fn0000BC38(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000082FC
//      fn000083F8
//      fn000087BC
//      fn00008998
//      fn0000AC14
//      fn0000BDC8
//      fn0000C32C
//      fn0000CB40
//      fn0000D640
//      fn0000D76C
//      fn00010570
// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000BC38_entry:
l0000BC38:
	branch r3 >u 0x21<32> || r3 <u 14<i32> l0000BC48_ds_t
l0000BC48_ds_t:
l0000BDB8:
	return dwLoc0C
l0000BC48_ds_f:
l0000BC4C:
	word32 r3_22 = Mem4[(r3 - 14<i32> << 2<32>) + 0x12BA4<32>:word32]
	word32 r2_24
	call r3_22 (retsize: 0;)
		uses: r2:0x12BA4<32>,r3:r3_22,Stack +FFFFFFF8:dwLoc0C
		defs: r2:r2_24
	return r2_24
fn0000BC38_exit:


void fn0000BDC8(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009290
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4
// Preserved: r1 r2 r9
fn0000BDC8_entry:
l0000BDC8:
	fn0000BC38(fn0000BC38(r3))
	return
fn0000BDC8_exit:


word32 fn0000BE00(word32 r3, word32 r4, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E1AC
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn0000BE00_entry:
l0000BE00:
	branch !(r3 == 6<32>) l0000BE18_ds_t
l0000BE18_ds_t:
l0000BE18_ds_f:
l0000BE1C:
	r15 = fn0000B8D8(fp - 16<i32>, r4, r15)
	word32 r3_34 = Mem8[0x13944<32>:word32]
	word32 r2_36 = Mem8[r3_34:word32]
	word32 r4_35 = CONVERT(bLoc0D, byte, word32)
	branch (r2_36 >>u 0x10<32> & 3<32>) >= r4_35 l0000BE48_ds_t
l0000BE48_ds_t:
l0000BE6C:
	word32 r3_41 = CONVERT(bLoc0E, byte, word32)
	branch (r2_36 & 3<32>) >= r3_41 l0000BE7C_ds_t
l0000BE7C_ds_t:
l0000BEA4:
	word32 r4_80
	Mem61[Mem8[0x13944<32>:word32]:word32] = (r2_36 & 0xFFFFE0FF<32> | (CONVERT(bLoc10, byte, word32) & 0x1F<32>) << 8<32>) & 0xFFFFFFCF<32> | (CONVERT(bLoc0F, byte, word32) & 3<32>) << 4<32>
	fn0000DB28(-20<i32>)
	word32 r2_117 = fn0000C768(-1<i32>)
	word32 r1_69 = <invalid>
	word32 r3_77 = CONVERT(Mem61[r1_69 + 2<i32>:byte], byte, word32)
	branch (r2_117 & 3<32>) <= r3_77 l0000BF04_ds_t
l0000BF04_ds_t:
	r4_80 = r2_117 >>u 0x10<32>
l0000BF04_ds_f:
l0000BF08:
	r2_117 = r2_117 & 0xFFFFFFFC<32> | r3_77 & 3<32>
	Mem87[Mem61[0x13944<32>:word32]:word32] = r2_117
	fn0000DB28(-2000<i32>)
	r4_80 = r2_117 >>u 0x10<32>
l0000BF2C:
	word32 r3_96 = CONVERT(Mem95[r1_69 + 3<i32>:byte], byte, word32)
	branch (r4_80 & 3<32>) <= r3_96 l0000BF3C_ds_t
l0000BF3C_ds_t:
l0000BF70:
	return r15
fn0000BE00_exit:
l0000BF3C_ds_f:
l0000BF40:
	Mem123[Mem95[0x13944<32>:word32]:word32] = r2_117 & 0xFFFCFFFF<32> | (r3_96 & 3<32>) << 0x10<32>
	fn0000DB28(-2000<i32>)
l0000BE7C_ds_f:
l0000BE80:
	Mem137[Mem8[0x13944<32>:word32]:word32] = r2_36 & 0xFFFFFFFC<32> | r3_41 & 3<32>
	fn0000DB28(-2000<i32>)
l0000BE48_ds_f:
l0000BE4C:
	Mem149[r3_34:word32] = r2_36 & 0xFFFCFFFF<32> | (r4_35 & 3<32>) << 0x10<32>
	fn0000DB28(-2000<i32>)


word32 fn0000BF88(word32 r3, word32 r15, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000ADBC
//      fn0000BF88
//      fn0000C8A0
//      fn0000C9C8
//      fn0000D640
//      fn0000D95C
//      fn0000E110
//      fn0000E1AC
// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r11 r14 r15 r2
// Trashed: CV r1 r11 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000BF88_entry:
l0000BF88:
	word32 r11_103
	word32 r1_147
	branch r3 == 0xB<32> l0000BF98_ds_t
l0000BF98_ds_t:
l0000C0DC:
	word32 r2_16 = Mem6[Mem6[0x1393C<32>:word32]:word32]
	r11_103 = ((r2_16 >>u 8<32> & 0x1F<32>) + -1<i32>) *s ((r2_16 >>u 4<32> & 3<32>) + -1<i32>) *s 0x16E3600<32> >> 1<32>
l0000BF98_ds_f:
l0000BF9C:
	word32 r2_154
	word32 r4_123
	word32 r3_125
	branch r3 >u 0xB<32> l0000BFA4_ds_t
l0000BFA4_ds_t:
l0000BFCC:
	branch r3 == 0x16<32> l0000BFD0_ds_t
l0000BFD0_ds_t:
l0000C03C:
l0000BFD0_ds_f:
l0000BFD4:
	branch r3 == 0x19<32> l0000BFD8_ds_t
l0000BFD8_ds_t:
l0000C0B0:
	word32 r15_265
	word32 r11_263
	word32 r14_264
	fn0000BF88(-22<i32>, r15, out r11_263, out r14_264, out r15_265)
	word32 r11_51
	r3_125 = fn0000B250(-3<i32>, out r11_51)
	r4_123 = r11_51
l0000BFD8_ds_f:
l0000BFDC:
	branch !(r3 == 0x11<32>) l0000BFE0_ds_t
l0000BFE0_ds_t:
	r11_103 = 0<i32>
l0000BFE0_ds_f:
l0000BFE4:
l0000C040:
	word32 r3_70 = Mem6[Mem6[0x13948<32>:word32]:word32] >>u 0x10<32> & 3<32>
	branch r3_70 == 2<32> l0000C05C_ds_t
l0000C05C_ds_t:
l0000C07C:
	r3_125 = r11_81
	word32 r11_81
	word32 r15_267
	word32 r14_266
	r4_123 = (Mem6[Mem6[fn0000BF88(-11<i32>, r15, out r11_81, out r14_266, out r15_267):word32]:word32] >>u 8<32> & 0x1F<32>) + -1<i32>
l0000C05C_ds_f:
l0000C060:
	branch r3_70 == 3<32> l0000C064_ds_t
l0000C064_ds_t:
l0000C0A0:
	r2_154 = 0x13098<32>
l0000C064_ds_f:
l0000C068:
	branch r3_70 == 1<32> l0000C124
l0000C070:
l0000BFA4_ds_f:
l0000BFA8:
	branch r3 == 3<32> l0000BFB0_ds_t
l0000BFB0_ds_t:
l0000C124:
	r11_103 = 0x16E3600<32>
l0000BFB0_ds_f:
l0000BFB4:
	branch r3 == 6<32> l0000BFB8_ds_t
l0000BFB8_ds_t:
l0000BFEC:
	word32 r3_109 = Mem6[Mem6[0x13944<32>:word32]:word32]
	r4_123 = (r3_109 & 3<32>) + -1<i32> << (r3_109 >>u 0x10<32> & 3<32>)
	r3_125 = ((r3_109 >>u 8<32> & 0x1F<32>) + -1<i32>) *s ((r3_109 >>u 4<32> & 3<32>) + -1<i32>) *s 0x16E3600<32>
l0000C0CC:
	r11_103 = fn0000FFD8(r3_125, r4_123, r15, out r14, out r15)
	r1_147 = fp
l0000BFB8_ds_f:
l0000BFBC:
	branch !(r3 == 1<32>) l0000C11C
l0000C11C:
	r11_103 = 0<i32>
l0000BFC4:
l0000C074:
	r2_154 = 0x1309C<32>
l0000C0A8:
	r11_103 = Mem6[r2_154:word32]
l0000C12C:
	r1_147 = fp + -16<i32>
l0000C130:
	word32 r2_171 = Mem6[r1_147 - 8<i32>:word32]
	r11Out = r11_103
	r14Out = r14
	r15Out = r15
	return r2_171
fn0000BF88_exit:


void fn0000C32C(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000C32C_entry:
l0000C32C:
	Mem11[0x13958<32>:word32] = 0x1F00800<32>
	fn0000B320(-28<i32>)
	word32 r6_32 = Mem11[fn0000BC38(-28<i32>):word32]
	word32 r4_33 = 0x130BC<32>
	word32 r3_34 = 0<i32>
l0000C378:
	word32 r2_38 = r3_34 + -1<i32>
	word32 r3_44 = r6_32 + (r2_38 << 5<32>)
	Mem46[r4_33:word32] = r3_44
	Mem47[r3_44:word32] = 0<i32>
	Mem52[r3_44:word32] = Mem47[r3_44:word32] & 0xFFFFFFF3<32>
	Mem55[r3_44:word32] = Mem52[r3_44:word32] | 4<32>
	Mem58[r3_44:word32] = Mem55[r3_44:word32] & 0xFFFFFF8F<32>
	Mem60[r3_44:word32] = Mem58[r3_44:word32]
	Mem62[r4_33 - 12<i32>:word32] = -24000<i32>
	r3_34 = r2_38
	branch r2_38 != 2<32> l0000C3D4_ds_t
l0000C3D4_ds_t:
	r4_33 = r4_33 + -28<i32>
l0000C3D4_ds_f:
l0000C3D8:
	Mem72[0x130A8<32>:word32] = -1<i32>
	Mem75[0x13954<32>:word32] = 0x130A4<32>
	word32 r3_76 = Mem75[0x130BC<32>:word32]
	Mem79[r3_76:word32] = Mem75[r3_76:word32] | 0x80<32>
	fn0000BAA8(0xC1DC<32>, VR)
	Mem95[0x130A0<32>:word32] = 0<i32>
	return
fn0000C32C_exit:


word32 fn0000C48C(word32 r3, word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E904
// MayUse:  r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r14 r16 r18 r2 r9
fn0000C48C_entry:
l0000C48C:
	word32 r14_13 = Mem12[0x130A0<32>:word32]
	word32 r2_16 = 0<i32>
	branch r14_13 != 0<i32> l0000C4C0_ds_t
l0000C4C0_ds_t:
l0000C4C0_ds_f:
l0000C4C4:
	word32 r3_37
	word32 r11_28
	word32 r2_29 = fn0000E718(VR, out r11_28)
	word32 r5_35 = Mem15[(r2_29 | 0x30A4<32>) + 4<i32>:word32]
	branch r5_35 == 0<32> l0000C4DC_ds_t
l0000C4DC_ds_t:
	r3_37 = r5_35 << 2<32>
l0000C4DC_ds_f:
l0000C4E0:
	branch Mem15[(r2_29 | 0x30A4<32>) + 32<i32>:word32] != 0<32> l0000C4EC_ds_t
l0000C4EC_ds_t:
	r2_16 = r14_13
l0000C4EC_ds_f:
l0000C4F0:
	r5_35 = -1<i32>
	r3_37 = 0xFFFFFFFC<32>
l0000C4F8:
	word32 r2_49 = (r5_35 << 5<32>) - r3_37
	Mem56[r2_49 + 0x130B4<32>:word32] = r3
	Mem57[r2_49 + 0x130A8<32>:word32] = -1<i32>
	Mem59[r2_49 + 0x130B8<32>:word32] = r4
	r2_16 = r2_49 + 0x130A4<32>
l0000C51C:
	fn0000E740(r11_28, VR)
	branch r2_16 == 0<32> l0000C52C_ds_t
l0000C52C_ds_t:
l0000C540:
	return r2_16
fn0000C48C_exit:
l0000C52C_ds_f:
l0000C530:
	fn00008BB8(Mem79[r2_16 + 8<i32>:word32], 0xC13C<32>, r2_16)


void fn0000C588(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E904
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1 r14 r2 r9
fn0000C588_entry:
l0000C588:
	branch Mem12[0x130A0<32>:word32] != 0<32> l0000C5B0_ds_t
l0000C5B0_ds_t:
l0000C5B0_ds_f:
l0000C5B4:
	word32 r6_22 = Mem12[r3 + 24<i32>:word32]
	Mem26[r6_22 + 4<i32>:word32] = r4 *s Mem12[r3 + 12<i32>:word32]
	Mem29[r6_22:word32] = Mem26[r6_22:word32] | 2<32>
l0000C5D0:
	branch (Mem29[r6_22:word32] & 2<32>) != 0<32> l0000C5D0
l0000C5E4:
	Mem43[r6_22:word32] = Mem29[r6_22:word32] & 0xFFFFFF7F<32>
	Mem47[r6_22:word32] = r5 << 7<32> | Mem43[r6_22:word32]
	word32 r4_51 = -1<i32> << Mem47[r3:word32]
	word32 r3_52 = Mem47[0x13958<32>:word32]
	Mem53[r3_52 + 4<i32>:word32] = r4_51
	Mem56[r3_52:word32] = r4_51 | Mem53[r3_52:word32]
	fn00008B60(Mem56[r3 + 8<i32>:word32])
	word32 r2_67 = Mem56[r3 + 24<i32>:word32]
	Mem71[r2_67:word32] = Mem56[r2_67:word32] | 1<32>
l0000C648:
	return
fn0000C588_exit:


word32 fn0000C768(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000490C
//      fn00004A6C
//      fn00008428
//      fn00008574
//      fn00009B80
//      fn00009ED0
//      fn0000A708
//      fn0000AC14
//      fn0000BB60
//      fn0000BE00
//      fn0000E1AC
//      fn000100B8
//      fn00010570
// MayUse:  r3:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r2 r3 r4 r5 r6
// Preserved:
fn0000C768_entry:
l0000C768:
	branch Mem5[0x130A0<32>:word32] != 0<32> l0000C784_ds_t
l0000C784_ds_t:
l0000C784_ds_f:
l0000C788:
	branch r3 == 0<32> l0000C78C_ds_t
l0000C78C_ds_t:
l0000C78C_ds_f:
l0000C790:
	word32 r5_17 = Mem5[0x13954<32>:word32]
	word32 r4_19 = Mem5[r5_17 + 24<i32>:word32]
	Mem22[r4_19 + 4<i32>:word32] = r3 *s Mem5[r5_17 + 12<i32>:word32]
	Mem25[r4_19:word32] = Mem22[r4_19:word32] | 2<32>
l0000C7B4:
	branch (Mem25[r4_19:word32] & 2<32>) != 0<32> l0000C7C4_ds_t
l0000C7C4_ds_t:
l0000C7C4_ds_f:
l0000C7C8:
	word32 r5_38 = -1<i32> << Mem25[r5_17:word32]
	word32 r3_39 = Mem25[0x13958<32>:word32]
	Mem40[r3_39 + 4<i32>:word32] = r5_38
	Mem43[r4_19:word32] = Mem40[r4_19:word32] | 1<32>
l0000C7EC:
	branch (r5_38 & Mem43[r3_39 + 4<i32>:word32]) == 0<32> l0000C7EC
l0000C800:
	Mem55[r4_19:word32] = Mem43[r4_19:word32] & 0xFFFFFFFE<32>
	Mem56[r3_39 + 4<i32>:word32] = r5_38
l0000C814:
	return dwLoc0C
fn0000C768_exit:


word32 fn0000C8A0(word32 r3, word32 r15, ptr32 & r14Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000043D0
//      fn00004B44
//      fn00004C48
//      fn00004D60
//      fn000062BC
//      fn00006394
//      fn000064DC
//      fn00006FE8
//      fn000073EC
//      fn00007E04
//      fn00007FD0
//      fn00008000
//      fn00008030
//      fn00009C2C
//      fn0000D49C
//      fn0000F444
//      fn00010570
// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r1 r14 r15 r2
// Trashed: CV r1 r11 r12 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000C8A0_entry:
l0000C8A0:
	branch r3 == 0<32> l0000C8B4_ds_t
l0000C8B4_ds_t:
l0000C914:
	r14Out = r14
	r15Out = r15
	return dwLoc18
l0000C8B4_ds_f:
l0000C8B8:
	branch fn0000BC28() == 0<32> l0000C8C8_ds_t
l0000C8C8_ds_t:
l0000C904:
l0000C820:
	branch r3 == 0<32> l0000C838_ds_t
l0000C838_ds_t:
l0000C838_ds_f:
l0000C83C:
	word32 r14_52
	word32 r2_49 = r12_40 + r3 * 0x18<32>
	word32 r12_40
	word32 r11_39 = fn000046C0(out r12_40)
	branch r2_49 <u r12_40 l0000C85C_ds_t
l0000C85C_ds_t:
	r14_52 = r11_39 + -1<i32>
l0000C85C_ds_f:
l0000C860:
	r14_52 = r11_39
l0000C868:
	word32 r12_61
	word32 r11_60 = fn000046C0(out r12_61)
	branch r14_52 >u r11_60 l0000C878_ds_t
l0000C878_ds_t:
l0000C878_ds_f:
	bool F_70 = r14_52 != r11_60
l0000C87C:
	branch F_70 l0000C880_ds_t
l0000C880_ds_t:
l0000C880_ds_f:
	bool F_73 = r2_49 >u r12_61
l0000C884:
	branch F_73 l0000C868
l0000C88C:
	r14Out = r2
	r15Out = r15
	return dwLoc0C
l0000C8C8_ds_f:
l0000C8CC:
	word32 r11_87
	word32 r14_92
	word32 r15_93
	word32 r11_110
	word32 r15_115
	fn0000FEDC(r11_87 *s fn0000BF88(-17<i32>, r15, out r11_87, out r14_92, out r15_93) + 0xF423F<32>, 0xF4240<32>, r15_93, out r11_110, out r15_115)
l0000C8FC_thunk_fn0000DB28:
	fn0000DB28(r11_110)
	r14Out = r14_92
	r15Out = r15_115
	return r2
fn0000C8A0_exit:


void fn0000C93C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CCA8
// MayUse: 
// LiveOut:
// Trashed: r3 r4
// Preserved: r1
fn0000C93C_entry:
l0000C93C:
	Mem8[0x1F0240C<32>:word32] = Mem0[0x1F0240C<32>:word32] | 8<32>
l0000C954:
	branch (Mem8[0x1F0240C<32>:word32] & 8<32>) != 0<32> l0000C954
l0000C968:
	return
fn0000C93C_exit:


void fn0000C970()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CB40
//      fn0000CCA8
// MayUse: 
// LiveOut:
// Trashed: CV r3 r4
// Preserved: r1
fn0000C970_entry:
l0000C970:
	Mem7[0x1F02418<32>:word32] = -1<i32>
l0000C980:
	branch Mem7[0x1F02418<32>:word32] != 0<32> l0000C980
l0000C990:
	return
fn0000C970_exit:


void fn0000C998()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CCA8
// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r2 r3 r4
// Preserved:
fn0000C998_entry:
l0000C998:
	Mem12[0x1F0240C<32>:word32] = (Mem5[0x1F0240C<32>:word32] | 0x20<32>) & 0xFFFFFFF7<32>
	return
fn0000C998_exit:


word32 fn0000C9C8(word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CB40
// MayUse:  r15:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r9
fn0000C9C8_entry:
l0000C9C8:
	word32 r2_147
	word32 r14_141
	word32 r14_100
	word32 r11_22
	word32 r15_28
	word32 r14_243
	fn0000BF88(-25<i32>, r15, out r11_22, out r14_243, out r15_28)
	word32 r15_43
	word32 r14_244
	word32 r11_40 = fn0000FFD8(r11_22, -10<i32>, r15_28, out r14_244, out r15_43)
	word32 r11_59
	word32 r15_108
	fn0000FEDC(r11_40, 0x61A80<32>, r15_43, out r11_59, out r15_108)
	branch r11_59 == 0<32> l0000CA18_ds_t
l0000CA18_ds_t:
l0000CA94:
	r2_147 = r11_59
	r14_100 = -1<i32>
l0000CA18_ds_f:
l0000CA1C:
	r2_147 = 0<i32>
	word32 r16_177 = -1<i32>
l0000CA24:
	word32 r11_86
	fn0000FEDC(r11_59, r16_177, r15_108, out r11_86, out r15_108)
	r14_100 = r11_86 - 1<i32> & 0xFF<32>
l0000CA6C:
	branch r14_100 <=u 0xF<32> l0000CA74_ds_t
l0000CA74_ds_t:
	word32 r22_103 = r14_100 + -1<i32>
l0000CA3C:
	word32 r11_110
	word32 r15_115
	fn0000FEDC(r11_40, r22_103, r15_108, out r11_110, out r15_115)
	word32 r11_126
	fn0000FEDC(r11_110, r16_177, r15_115, out r11_126, out r15_108)
	branch r11_126 <=u 0x61A80<32> l0000CA64_ds_t
l0000CA64_ds_t:
	r14_141 = r14_100 << 3<32>
l0000CA64_ds_f:
l0000CA68:
	r14_100 = r22_103 & 0xFF<32>
l0000CA74_ds_f:
l0000CA78:
	word32 r2_148 = r2_147 + -1<i32>
	r2_147 = r2_148 & 0xFF<32>
	branch (r2_148 & 0xFF<32>) == 8<32> l0000CA88_ds_t
l0000CA88_ds_t:
l0000CA9C:
	r14_141 = r14_100 << 3<32>
l0000CAA0:
	Mem162[0x1F02414<32>:word32] = r14_141 | r2_147
	return r15_108
fn0000C9C8_exit:
l0000CA88_ds_f:
	word32 r16_175 = r16_177 * 2<32>
l0000CA8C:
	r16_177 = r16_175 & 0xFF<32>


word32 fn0000CB40(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r1 r11 r13 r15 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000CB40_entry:
l0000CB40:
	word32 r2_9 = Mem7[0x4020<32>:word32]
	branch r2_9 == 0<32> l0000CB5C_ds_t
l0000CB5C_ds_t:
l0000CB78:
	word32 r2_19 = fn00009744(-1<i32>, r2_9, -2<i32>)
	fn00009834(-1<i32>, fn000097BC(-1<i32>, r2_19, r2_19), -2<i32>)
	fn000097BC(-1<i32>, -1<i32>, fn00009744(-1<i32>, -1<i32>, -2<i32>))
	fn00009834(-1<i32>, -1<i32>, -2<i32>)
	fn0000B320(-25<i32>)
	word32 r2_94 = fn0000BC38(-25<i32>)
	r15 = fn0000C9C8(r15)
	Mem114[r2_94 | 0x240C<32>:word32] = -68<i32>
	fn0000C970()
	branch Mem114[r2_94 | 0x2420<32>:word32] == 0x3A<32> l0000CC20_ds_t
l0000CC20_ds_t:
l0000CC20_ds_f:
l0000CC24:
	word32 r2_126 = -11<i32>
l0000CC30:
	r2_126 = r2_126 - 1<i32>
	branch r2_126 != 0<32> l0000CC2C
l0000CC2C:
	Mem134[r2_94 | 0x2420<32>:word32] = -10<i32>
l0000CC40:
	Mem139[0x1F02420<32>:word32] = -10<i32>
	Mem143[0x1F02418<32>:word32] = -1<i32>
l0000CC60:
	fn0000B4D4(0xCAD4<32>, VR)
	Mem162[0x134C0<32>:byte] = 0<8>
l0000CB5C_ds_f:
l0000CB60:
	Mem173[0x134C0<32>:byte] = 0xFF<8>
l0000CC90:
	return r15
fn0000CB40_exit:


word32 fn0000CCA8(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 VR, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r20Out, ptr32 & r22Out, ptr32 & r24Out, ptr32 & r28Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D214
//      fn0000D298
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16 r18 r2 r20 r22 r24 r28
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r22 r24 r26 r28 r9
// Preserved:
fn0000CCA8_entry:
l0000CCA8:
	word32 r2_41
	word32 r16_191 = r6
	word32 r20_33 = CONVERT(Mem23[0x134C0<32>:byte], byte, int32)
	word32 r14_223 = r7
	branch r20_33 != 0<32> l0000CD04_ds_t
l0000CD04_ds_t:
	r2_41 = 0xFFFFFFF3<32>
l0000CD04_ds_f:
l0000CD08:
	branch r7 >u 4<32> l0000CD10_ds_t
l0000CD10_ds_t:
	r2_41 = 0xFFFFFFEA<32>
l0000D1E0:
	r11Out = r2_41
	r14Out = dwLoc7C
	r16Out = dwLoc78
	r18Out = dwLoc74
	r20Out = dwLoc70
	r22Out = dwLoc6C
	r24Out = dwLoc68
	r28Out = dwLoc60
	return dwLoc80
fn0000CCA8_exit:
l0000CD10_ds_f:
l0000CD14:
	Mem73[0x1F0240C<32>:word32] = (Mem23[0x1F0240C<32>:word32] | 4<32>) & 0xFFFFFFF7<32>
	word32 r11_78
	word32 r2_79 = fn0000E718(VR, out r11_78)
	Mem86[r2_79 | 0x241C<32>:word32] = r20_33
	word32 r1_77 = <invalid>
	Mem90[r1_77:word32] = Mem86[r2_79 | 0x2410<32>:word32] & 0xFF<32>
	branch Mem90[r1_77:word32] != 0xF8<32> l0000CD6C_ds_t
l0000CD6C_ds_t:
l0000CD6C_ds_f:
l0000CD70:
	fn0000C998()
	word32 r1_97 = <invalid>
	word32 r6_103 = -2047<i32>
l0000CD7C:
	branch (Mem90[0x1F0240C<32>:word32] & 8<32>) != 0<32> l0000CD8C_ds_t
l0000CD8C_ds_t:
l0000CDA8:
	branch r6_103 == 0<32> l0000CDB0_ds_t
l0000CDB0_ds_t:
l0000CDB0_ds_f:
l0000CDB4:
	Mem120[r1_97:word32] = Mem90[0x1F02410<32>:word32]
	branch Mem120[r1_97:word32] != 8<32> l0000CDCC_ds_t
l0000CDCC_ds_t:
l0000CDCC_ds_f:
l0000CDD0:
	word32 r22_126 = (r4 & 0xFF<32>) * 2<32>
	Mem131[0x1F02408<32>:word32] = r22_126 & 0xFF<32>
	fn0000C93C()
	word32 r6_134 = -2047<i32>
l0000CDF0:
	branch (Mem131[0x1F0240C<32>:word32] & 8<32>) != 0<32> l0000CE00_ds_t
l0000CE00_ds_t:
l0000CE1C:
	branch r6_134 == 0<32> l0000CE24_ds_t
l0000CE24_ds_t:
l0000CE24_ds_f:
l0000CE28:
	Mem151[r1_97:word32] = Mem131[0x1F02410<32>:word32]
	branch Mem151[r1_97:word32] != 0x18<32> l0000CE40_ds_t
l0000CE40_ds_t:
l0000CE40_ds_f:
l0000CE44:
	Mem158[0x1F02408<32>:word32] = r5 & 0xFF<32>
	fn0000C93C()
	word32 r5_162 = -2047<i32>
l0000CE58:
	branch (Mem158[0x1F0240C<32>:word32] & 8<32>) != 0<32> l0000CE68_ds_t
l0000CE68_ds_t:
l0000CE84:
	branch r5_162 == 0<32> l0000CE8C_ds_t
l0000CE8C_ds_t:
l0000CE8C_ds_f:
l0000CE90:
	Mem179[r1_97:word32] = Mem158[0x1F02410<32>:word32]
	branch Mem179[r1_97:word32] != 0x28<32> l0000CEA8_ds_t
l0000CEA8_ds_t:
l0000CEA8_ds_f:
l0000CEAC:
	branch !(r3 != 0<32>) l0000CEB0_ds_t
l0000CEB0_ds_t:
l0000CF30:
	bool F_189 = r7 != 0<32>
l0000CF3C:
	branch F_189 l0000CEBC
l0000CEBC:
	Mem195[0x1F02408<32>:word32] = CONVERT(Mem192[r16_191:byte], byte, word32)
	fn0000C93C()
	word32 r2_196 = -2047<i32>
l0000CECC:
	branch (Mem195[0x1F0240C<32>:word32] & 8<32>) == 0<32> l0000CEDC_ds_t
l0000CEDC_ds_t:
	r2_196 = r2_196 - 1<i32>
l0000CEF8:
	branch r2_196 != 0xFFFFFFFF<32> l0000CF00_ds_t
l0000CF00_ds_t:
l0000CF00_ds_f:
l0000CF04:
l0000CEDC_ds_f:
	word32 r2_213 = r2_196 - 1<i32>
l0000CEE0:
	branch !(r2_213 == 0<32>) l0000CEEC_ds_t
l0000CEEC_ds_t:
l0000CF0C:
	Mem228[r1_97:word32] = Mem195[0x1F02410<32>:word32]
	r14_223 = r14_223 - 1<i32>
	branch Mem228[r1_97:word32] != 0x28<32> l0000CF24_ds_t
l0000CF24_ds_t:
l0000CF24_ds_f:
	r16_191 = r16_191 + -1<i32>
l0000CF28:
	F_189 = r14_223 != 0<32>
l0000CEEC_ds_f:
l0000CEF0:
l0000CF44:
l0000CEB0_ds_f:
l0000CEB4:
l0000CF4C:
	fn0000C998()
	fn0000C93C()
	word32 r1_243 = <invalid>
	word32 r5_251 = -2047<i32>
l0000CF60:
	branch (Mem179[0x1F0240C<32>:word32] & 8<32>) != 0<32> l0000CF70_ds_t
l0000CF70_ds_t:
l0000CF8C:
	branch r5_251 == 0<32> l0000CF94_ds_t
l0000CF94_ds_t:
l0000CF94_ds_f:
l0000CF98:
	Mem268[r1_243:word32] = Mem179[0x1F02410<32>:word32]
	branch Mem268[r1_243:word32] != 0x10<32> l0000CFB0_ds_t
l0000CFB0_ds_t:
l0000CFB0_ds_f:
l0000CFB4:
	Mem277[0x1F02408<32>:word32] = r22_126 | 1<32>
	fn0000C93C()
	word32 r4_280 = -2047<i32>
l0000CFD0:
	branch (Mem277[0x1F0240C<32>:word32] & 8<32>) != 0<32> l0000CFE0_ds_t
l0000CFE0_ds_t:
l0000CFFC:
	branch r4_280 == 0<32> l0000D004_ds_t
l0000D004_ds_t:
l0000D004_ds_f:
l0000D008:
	Mem297[r1_243:word32] = Mem277[0x1F02410<32>:word32]
	branch Mem297[r1_243:word32] != 0x40<32> l0000D020_ds_t
l0000D020_ds_t:
l0000D020_ds_f:
l0000D024:
l0000D0CC:
	bool F_305 = r7 != 0<32>
l0000D0D4:
	branch F_305 l0000D0D8_ds_t
l0000D0D8_ds_t:
	r14_223 = r14_223 - 1<i32>
l0000D02C:
	branch r14_223 != 0<32> l0000D044
l0000D038:
	Mem315[0x1F0240C<32>:word32] = Mem312[0x1F0240C<32>:word32] & 0xF3<32>
l0000D044:
	fn0000C93C()
	word32 r2_316 = -2047<i32>
l0000D04C:
	branch (Mem570[0x1F0240C<32>:word32] & 8<32>) == 0<32> l0000D05C_ds_t
l0000D05C_ds_t:
	r2_316 = r2_316 - 1<i32>
l0000D078:
	branch r2_316 != 0xFFFFFFFF<32> l0000D080_ds_t
l0000D080_ds_t:
l0000D080_ds_f:
l0000D084:
l0000D05C_ds_f:
	word32 r2_333 = r2_316 - 1<i32>
l0000D060:
	branch !(r2_333 == 0<32>) l0000D06C_ds_t
l0000D06C_ds_t:
l0000D08C:
	bool F_359
	Mem349[r16_191:byte] = Mem570[0x1F02408<32>:byte]
	Mem357[r1_243:word32] = Mem349[0x1F02410<32>:word32]
	branch r14_223 == 0<32> l0000D0B4
l0000D0B4:
	F_359 = Mem357[r1_243:word32] != 0x58<32>
l0000D0A8:
	F_359 = Mem357[r1_243:word32] != 0x50<32>
l0000D0BC:
	branch F_359 l0000D0C0_ds_t
l0000D0C0_ds_t:
l0000D0E8:
l0000D0C0_ds_f:
	r16_191 = r16_191 + -1<i32>
l0000D0C4:
	F_305 = r14_223 != 0<32>
l0000D06C_ds_f:
l0000D070:
l0000D0D8_ds_f:
l0000D0DC:
l0000CFE0_ds_f:
l0000CFE4:
	r4_280 = r4_280 - 1<i32>
	branch r4_280 != 0<32> l0000CFF0_ds_t
l0000CFF0_ds_t:
l0000CFF0_ds_f:
l0000CFF4:
l0000CF70_ds_f:
l0000CF74:
	r5_251 = r5_251 - 1<i32>
	branch r5_251 != 0<32> l0000CF80_ds_t
l0000CF80_ds_t:
l0000CF80_ds_f:
l0000CF84:
l0000CE68_ds_f:
l0000CE6C:
	r5_162 = r5_162 - 1<i32>
	branch r5_162 != 0<32> l0000CE58
l0000CE7C:
l0000D0EC:
l0000CE00_ds_f:
l0000CE04:
	r6_134 = r6_134 - 1<i32>
	branch r6_134 != 0<32> l0000CE10_ds_t
l0000CE10_ds_t:
l0000CE10_ds_f:
l0000CE14:
l0000CD8C_ds_f:
l0000CD90:
	r6_103 = r6_103 - 1<i32>
	branch r6_103 != 0<32> l0000CD9C_ds_t
l0000CD9C_ds_t:
l0000CD9C_ds_f:
l0000CDA0:
l0000D0F0:
l0000D0F4:
	Mem439[0x1F0240C<32>:word32] = (Mem428[0x1F0240C<32>:word32] | 0x10<32>) & 0xFFFFFFF7<32>
	word32 r5_437 = -2047<i32>
l0000D10C:
	branch (Mem439[0x1F0240C<32>:word32] & 0x10<32>) == 0<32> l0000D11C_ds_t
l0000D11C_ds_t:
l0000D11C_ds_f:
	r5_437 = r5_437 - 1<i32>
l0000D120:
	branch r5_437 != 0<32> l0000D10C
l0000D12C:
	fn0000C93C()
	word32 r5_454 = -2047<i32>
l0000D148:
	branch (Mem439[0x1F0240C<32>:word32] & 0x10<32>) == 0<32> l0000D158_ds_t
l0000D158_ds_t:
l0000D158_ds_f:
	r5_454 = r5_454 - 1<i32>
l0000D15C:
	branch r5_454 != 0<32> l0000D148
l0000D168:
	word32 r4_472 = -2047<i32>
l0000D174:
	branch Mem439[0x1F02410<32>:word32] == 0xF8<32> l0000D180_ds_t
l0000D180_ds_t:
	bool F_480 = r4_472 != 0<32>
l0000D19C:
	branch F_480 l0000D1A0_ds_t
l0000D1A0_ds_t:
	word32 r5_481 = -2047<i32>
l0000D1B4:
l0000D1BC:
	branch Mem439[0x1F02420<32>:word32] == 0x3A<32> l0000D1C8_ds_t
l0000D1C8_ds_t:
l0000D1C8_ds_f:
	r5_481 = r5_481 - 1<i32>
l0000D1CC:
	branch r5_481 != 0<32> l0000D1BC
l0000D1A0_ds_f:
l0000D180_ds_f:
l0000D184:
	r4_472 = r4_472 - 1<i32>
	branch r4_472 != 0<32> l0000D174
l0000D194:
l0000D1A4:
	fn0000C970()
l0000D1D8:
	fn0000E740(r11_78, VR)


word32 fn0000D214(word32 r3, word32 r4, word32 r5, word32 VR, ptr32 & r22Out, ptr32 & r28Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000998C
//      fn00009C2C
//      fn00009DDC
//      fn00009ED0
//      fn0000A070
//      fn0000A22C
//      fn0000A364
//      fn0000A708
//      fn0000AADC
//      fn0000AC14
//      fn0000D31C
//      fn0000D49C
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] VR:[0..31]
// LiveOut: r11 r22 r28
// Trashed: CV r11 r22 r24 r26 r28 r3 r4 r5 r6 r7
// Preserved: r1 r14 r16 r18 r2 r20 r9
fn0000D214_entry:
l0000D214:
	word32 r14_5 = 0<i32>
	word32 r20_17 = r3
	word32 r18_21 = r4
	word32 r16_23 = r5
	word32 r2_24 = 0<32>
l0000D268:
	branch r2_24 <u r16_23 l0000D270_ds_t
l0000D270_ds_t:
	word32 r6_29 = r18_21 + r2_24
l0000D248:
	word32 r11_42
	word32 r14_43
	word32 r24_99
	r2_24 = fn0000CCA8(-1<i32>, -54<i32>, CONVERT(Mem15[r20_17 + r2_24:byte], byte, word32), r6_29, -1<i32>, VR, out r11_42, out r14_43, out r16_23, out r18_21, out r20_17, out r22, out r24_99, out r28)
	r14_5 = r14_43 | r11_42
l0000D270_ds_f:
l0000D274:
	r22Out = r22
	r28Out = r28
	return r14_5
fn0000D214_exit:


word32 fn0000D298(word32 r3, word32 r4, word32 r5, word32 VR, ptr32 & r22Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000998C
//      fn00009C2C
//      fn00009ED0
//      fn0000A300
//      fn0000A364
//      fn0000A708
//      fn0000AADC
//      fn0000AC14
//      fn0000D408
//      fn0000D49C
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] VR:[0..31]
// LiveOut: r11 r22 r24
// Trashed: CV r11 r22 r24 r26 r28 r3 r4 r5 r6 r7
// Preserved: r1 r14 r16 r18 r2 r20 r9
fn0000D298_entry:
l0000D298:
	word32 r14_5 = 0<i32>
	word32 r20_17 = r3
	word32 r18_21 = r4
	word32 r16_23 = r5
	word32 r2_24 = 0<32>
l0000D2EC:
	branch r2_24 <u r16_23 l0000D2F4_ds_t
l0000D2F4_ds_t:
	word32 r6_29 = r18_21 + r2_24
l0000D2CC:
	word32 r11_42
	word32 r14_43
	word32 r28_99
	r2_24 = fn0000CCA8(0<i32>, -54<i32>, CONVERT(Mem15[r20_17 + r2_24:byte], byte, word32), r6_29, -1<i32>, VR, out r11_42, out r14_43, out r16_23, out r18_21, out r20_17, out r22, out r24, out r28_99)
	r14_5 = r14_43 | r11_42
l0000D2F4_ds_f:
l0000D2F8:
	r22Out = r22
	r24Out = r24
	return r14_5
fn0000D298_exit:


word32 fn0000D31C(word32 r3, word32 VR, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16
// Trashed: CV r1 r11 r14 r16 r2 r22 r24 r26 r28 r3 r4 r5 r6 r7 r9
// Preserved:
fn0000D31C_entry:
l0000D31C:
	word32 r14_14 = Mem10[r3 + 40<i32>:word32]
	word32 r3_15 = 0<i32>
	word32 r6_16 = fp - 40<i32>
	word32 r4_18 = 0<32>
l0000D378:
	branch r4_18 <u r14_14 l0000D380_ds_t
l0000D380_ds_t:
	bool F_22 = r4_18 >u 3<32>
l0000D348:
	word32 r5_29
	branch F_22 l0000D35C
l0000D35C:
	r5_29 = Mem27[r3 + 48<i32>:word32] >>u r3_15 - 32<i32>
l0000D350:
	r5_29 = Mem27[r3 + 44<i32>:word32] >>u r3_15
l0000D368:
	Mem35[r6_16:byte] = SLICE(r5_29, byte, 0)
	r4_18 = r4_18 + -1<i32>
	r3_15 = r3_15 + -8<i32>
	r6_16 = r6_16 + -1<i32>
l0000D380_ds_f:
l0000D384:
	word32 r22_150
	word32 r28_151
	word32 r11_52 = fn0000D214(fp - 40<i32>, fp - 32<i32>, r14_14, VR, out r22_150, out r28_151)
	word32 r3_64 = 0<i32>
	word32 r4_66 = fp - 32<i32>
	word32 r6_67 = 0<32>
l0000D3E4:
	branch r6_67 <u r14_14 l0000D3A4
l0000D3A4:
	branch r6_67 >u 3<32> l0000D3AC_ds_t
l0000D3AC_ds_t:
	word32 r5_74 = CONVERT(Mem73[r4_66:byte], byte, word32)
l0000D3C4:
	Mem82[r3 + 56<i32>:word32] = Mem73[r3 + 56<i32>:word32] | r5_74 << r3_64 - 32<i32>
l0000D3AC_ds_f:
	word32 r5_83 = CONVERT(Mem73[r4_66:byte], byte, word32)
l0000D3B0:
	Mem87[r3 + 52<i32>:word32] = Mem73[r3 + 52<i32>:word32] | r5_83 << r3_64
l0000D3D8:
	r6_67 = r6_67 + -1<i32>
	r4_66 = r4_66 + -1<i32>
	r3_64 = r3_64 + -8<i32>
l0000D3F0:
	r14Out = dwLoc4C
	r16Out = dwLoc48
	return r11_52
fn0000D31C_exit:


word32 fn0000D408(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r12 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000D408_entry:
l0000D408:
	word32 r4_17 = 0<i32>
	word32 r5_8 = Mem4[r3 + 40<i32>:word32]
	word32 r8_24 = fp - 28<i32>
	word32 r7_11 = fp - 20<i32>
	word32 r6_12 = 0<32>
l0000D474:
	branch r6_12 <u r5_8 l0000D47C_ds_t
l0000D47C_ds_t:
	bool F_16 = r6_12 >u 3<32>
l0000D428:
	word32 r11_27
	branch F_16 l0000D448
l0000D448:
	word32 r11_18 = r4_17 - 32<i32>
	Mem25[r8_24:byte] = SLICE(Mem21[r3 + 48<i32>:word32] >>u r11_18, byte, 0)
	r11_27 = Mem25[r3 + 56<i32>:word32] >>u r11_18
l0000D430:
	Mem30[r8_24:byte] = SLICE(Mem21[r3 + 44<i32>:word32] >>u r4_17, byte, 0)
	r11_27 = Mem30[r3 + 52<i32>:word32] >>u r4_17
l0000D460:
	Mem36[r7_11:byte] = SLICE(r11_27, byte, 0)
	r6_12 = r6_12 + -1<i32>
	r4_17 = r4_17 + -8<i32>
	r8_24 = r8_24 + -1<i32>
	r7_11 = r7_11 + -1<i32>
l0000D47C_ds_f:
l0000D480:
	word32 r24_81
	word32 r22_80
	return fn0000D298(fp - 28<i32>, fp - 20<i32>, r5_8, VR, out r22_80, out r24_81)
fn0000D408_exit:


word32 fn0000D49C(word32 r3, word32 r15, word32 VR, ptr32 & r14Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r15:[0..31] r3:[0..31] VR:[0..31]
// LiveOut: r11 r14 r16
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r22 r24 r26 r28 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000D49C_entry:
l0000D49C:
	word32 r4_25 = 0<i32>
	word32 r18_28 = Mem24[r3 + 40<i32>:word32]
	word32 r30_29 = Mem24[r3 + 68<i32>:word32]
	word32 r8_30 = fp - 100<i32>
	word32 r7_31 = fp - 92<i32>
	word32 r6_32 = fp - 84<i32>
	word32 r2_34 = 0<32>
l0000D554:
	branch r2_34 <u r18_28 l0000D55C_ds_t
l0000D55C_ds_t:
	bool F_38 = r2_34 >u 3<32>
l0000D4EC:
	word32 r5_53
	branch F_38 l0000D518
l0000D518:
	word32 r5_40 = r4_25 - 32<i32>
	Mem47[r8_30:byte] = SLICE(Mem43[r3 + 48<i32>:word32] >>u r5_40, byte, 0)
	Mem51[r7_31:byte] = SLICE(Mem47[r3 + 56<i32>:word32] >>u r5_40, byte, 0)
	r5_53 = Mem51[r3 + 64<i32>:word32] >>u r5_40
l0000D4F4:
	Mem56[r8_30:byte] = SLICE(Mem43[r3 + 44<i32>:word32] >>u r4_25, byte, 0)
	Mem59[r7_31:byte] = SLICE(Mem56[r3 + 52<i32>:word32] >>u r4_25, byte, 0)
	r5_53 = Mem59[r3 + 60<i32>:word32] >>u r4_25
l0000D53C:
	Mem65[r6_32:byte] = SLICE(r5_53, byte, 0)
	r2_34 = r2_34 + -1<i32>
	r4_25 = r4_25 + -8<i32>
	r8_30 = r8_30 + -1<i32>
	r7_31 = r7_31 + -1<i32>
	r6_32 = r6_32 + -1<i32>
l0000D55C_ds_f:
l0000D560:
	word32 r16_147 = 0<i32>
	word32 r2_150 = fp - 76<i32>
	word32 r14_148 = 0<32>
l0000D5E4:
	branch r14_148 <u r18_28 l0000D5EC_ds_t
l0000D5EC_ds_t:
l0000D580:
	word32 r28_101
	word32 r22_280
	fn0000D214(fp - 100<i32> + r14_148, r2_150, -1<i32>, VR, out r22_280, out r28_101)
	branch r30_29 != 0<32> l0000D594_ds_t
l0000D594_ds_t:
l0000D594_ds_f:
l0000D598:
	Mem120[r2_150:byte] = SLICE((CONVERT(Mem115[r28_101 + r14_148:byte], byte, word32) ^ 0xFF<32>) & CONVERT(Mem115[r2_150:byte], byte, word32), byte, 0)
l0000D5B4:
	word32 r22_130
	word32 r24_131
	word32 r11_129 = fn0000D298(fp - 100<i32>, fp - 76<i32>, r18_28, VR, out r22_130, out r24_131)
	word32 r5_145 = CONVERT(Mem144[r24_131 + r14_148:byte], byte, word32)
	branch r5_145 == 0<32> l0000D5D0_ds_t
l0000D5D0_ds_t:
	r16_147 = r11_129
l0000D5DC:
	r14_148 = r14_148 + -1<i32>
	r2_150 = r2_150 + -1<i32>
l0000D5D0_ds_f:
l0000D5D4:
	word32 r15_282
	word32 r14_281
	fn0000C8A0(r5_145 *s r22_130, r15, out r14_281, out r15_282)
l0000D5EC_ds_f:
l0000D5F0:
	r14Out = dwLocC0
	r16Out = dwLocBC
	return r16_147
fn0000D49C_exit:


word32 fn0000D628()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000998C
// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000D628_entry:
l0000D628:
	return CONVERT(Mem0[0x134C0<32>:byte], byte, int32)
fn0000D628_exit:


word32 fn0000D640(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000ED78
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn0000D640_entry:
l0000D640:
	word32 r11_11 = fn0000ECE8()
	Mem19[0x134C4<32>:word32] = ((0<32> - r11_11 | r11_11) ^ 0xFFFF<32>) >>u 0x1F<32>
	branch Mem19[0x134C4<32>:word32] != 0<32> l0000D680_ds_t
l0000D680_ds_t:
l0000D680_ds_f:
l0000D684:
	Mem31[0x134C8<32>:word32] = 0x1C200<32>
	fn00009744(-1<i32>, -2<i32>, 0xFFFFFFFE<32>)
	fn00009744(-1<i32>, -3<i32>, -2<i32>)
	fn0000BC38(-27<i32>)
	fn0000B320(-27<i32>)
	word32 r11_74
	word32 r14_79
	word32 r15_80
	word32 r2_75 = fn0000BF88(-25<i32>, r15, out r11_74, out r14_79, out r15_80)
	word32 r11_96
	fn0000FEDC(r11_74 + (Mem31[r14_79:word32] << 3<32>), Mem31[r14_79:word32] << 4<32>, r15_80, out r11_96, out r15)
	Mem115[0x1F0280C<32>:word32] = Mem31[0x1F0280C<32>:word32] | 0x80<32>
	Mem117[0x1F02800<32>:word32] = r11_96 & 0xFF<32>
	Mem119[0x1F02804<32>:word32] = r11_96 >>u 8<32> & 0xFF<32>
	Mem122[0x1F028A4<32>:word32] = r2_75
	Mem124[0x1F0280C<32>:word32] = -3<i32>
	Mem126[0x1F02808<32>:word32] = -7<i32>
	fn0000B4D4(0xDA70<32>, VR)
	Mem143[0x130DC<32>:word32] = r2_75
l0000D758:
	return r15
fn0000D640_exit:


void fn0000D76C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EC54
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7
// Preserved: r1 r2 r9
fn0000D76C_entry:
l0000D76C:
	Mem10[0x130DC<32>:word32] = -1<i32>
	word32 r11_13 = fn0000ECE8()
	Mem23[0x134C4<32>:word32] = ((0<32> - r11_13 | r11_13) ^ 0xFFFF<32>) >>u 0x1F<32>
	fn00009744(fn00009744(fn0000B4F0(0xDA70<32>), -2<i32>, -7<i32>), -3<i32>, -7<i32>)
	fn0000B320(-27<i32>)
	fn0000BC38(-27<i32>)
	return
fn0000D76C_exit:


void fn0000D804(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D8D8
// MayUse:  r3:[0..7]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn0000D804_entry:
l0000D804:
	branch Mem0[0x130DC<32>:word32] != 0<32> l0000D820_ds_t
l0000D820_ds_t:
l0000D820_ds_f:
	word32 r3_13 = CONVERT(SLICE(r3, byte, 0), byte, int32)
l0000D824:
	branch Mem0[0x134C4<32>:word32] != 0<32> l0000D838_ds_t
l0000D838_ds_t:
l0000D838_ds_f:
l0000D83C:
l0000D840:
	branch (Mem0[0x1F0287C<32>:word32] & 2<32>) == 0<32> l0000D840
l0000D854:
	Mem31[0x1F02800<32>:word32] = r3_13
l0000D864:
	return
fn0000D804_exit:


word32 fn0000D8D8(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EDF4
// MayUse:  r3:[0..31]
// LiveOut: r2
// Trashed: CV r1 r11 r2 r3 r9
// Preserved:
fn0000D8D8_entry:
l0000D8D8:
	branch Mem9[0x130DC<32>:word32] != 0<32> l0000D8FC_ds_t
l0000D8FC_ds_t:
l0000D8FC_ds_f:
l0000D900:
	branch !(Mem9[0x134C4<32>:word32] != 0<32>) l0000D93C
l0000D93C:
	word32 r11_23 = CONVERT(Mem9[r3:int8], int8, int32)
	branch r11_23 != 0<32> l0000D948_ds_t
l0000D948_ds_t:
l0000D920:
	branch r11_23 != 0xA<32> l0000D930
l0000D930:
	fn0000D804(CONVERT(Mem9[r3:int8], int8, int32))
l0000D928:
	fn0000D804(-13<i32>)
l0000D948_ds_f:
l0000D94C:
l0000D918:
l0000D950:
	return dwLoc18
fn0000D8D8_exit:


word32 fn0000D95C(word32 r3, word32 r15, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r15:[0..31] r3:[0..31]
// LiveOut: r11 r14
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000D95C_entry:
l0000D95C:
	word32 r11_104
	branch Mem8[0x134C4<32>:word32] != 0<32> l0000D97C_ds_t
l0000D97C_ds_t:
	r11_104 = 0xFFFFFFF3<32>
l0000D97C_ds_f:
l0000D980:
	Mem20[0x134C8<32>:word32] = r3
l0000D994:
	branch Mem20[0x1F02880<32>:word32] != 0<32> l0000D994
l0000D9A4:
	word32 r11_32
	word32 r15_38
	fn0000BF88(-25<i32>, r15, out r11_32, out r14, out r15_38)
	word32 r15_163
	word32 r11_56
	fn0000FEDC(r11_32 + (Mem20[0x134C8<32>:word32] << 3<32>), Mem20[0x134C8<32>:word32] << 4<32>, r15_38, out r11_56, out r15_163)
	word32 r6_71 = Mem20[0x1F0280C<32>:word32]
	branch !(r11_56 == 0<32>) l0000D9E0_ds_t
l0000D9E0_ds_t:
l0000D9E0_ds_f:
l0000D9E4:
	r11_56 = -1<i32>
l0000D9E8:
	Mem88[0x1F028A4<32>:word32] = Mem20[0x1F028A4<32>:word32] | 2<32>
	Mem91[0x1F0280C<32>:word32] = r6_71 | 0x80<32>
	Mem94[0x1F02800<32>:word32] = r11_56 & 0xFF<32>
	Mem96[0x1F02804<32>:word32] = r11_56 >>u 8<32> & 0xFF<32>
	Mem97[0x1F0280C<32>:word32] = r6_71 & 0xFFFFFF7F<32>
	Mem100[0x1F028A4<32>:word32] = Mem97[0x1F028A4<32>:word32] | 4<32>
l0000DA38:
	word32 r11_103 = Mem100[0x1F028A4<32>:word32]
	r11_104 = r11_103 & 4<32>
	branch (r11_103 & 4<32>) != 0<32> l0000DA38
l0000DA4C:
	Mem111[0x1F028A4<32>:word32] = (Mem100[0x1F028A4<32>:word32] | 4<32>) & 0xFFFFFFFD<32>
l0000DA60:
	r14Out = r14
	return r11_104
fn0000D95C_exit:


void fn0000DB28(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A6B0
//      fn0000AC84
//      fn0000BAC8
//      fn0000BE00
//      fn0000C8A0
//      fn00010570
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r3
// Preserved: r1
fn0000DB28_entry:
l0000DB28:
	branch r3 != 0<32> l0000DB30_ds_t
l0000DB30_ds_t:
	r3 = r3 - 1<i32>
l0000DB30_ds_f:
l0000DB34:
	return
fn0000DB28_exit:


word32 fn0000DB40(word32 r3, word32 r4, word32 r5, word32 r15, ptr32 & r15Out, ptr32 & r16Out, ptr32 & r18Out, ptr32 & r22Out, ptr32 & r24Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EDF4
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r15 r16 r18 r2 r22 r24
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r18 r2 r20 r22 r24 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000DB40_entry:
l0000DB40:
	word32 r2_146 = r3
	branch r3 != 0<32> l0000DB74_ds_t
l0000DB74_ds_t:
l0000DB88:
	word32 r18_28 = 0<i32>
	branch r3 >= 0<i32> l0000DBA0
l0000DB98:
	r2_146 = 0<32> - r3
	r18_28 = -1<i32>
l0000DBA0:
	word32 r16_34 = 0<i32>
l0000DBB0:
	word32 r15_50
	Mem69[fp - 48<i32> + r16_34:byte] = Mem67[fn0001005C(r2_146, r5, r15, out r15_50) + 0x12BF4<32>:byte]
	word32 r14_72
	word32 r11_70 = fn0000FFD8(r2_146, r5, r15_50, out r14_72, out r15)
	word32 r3_84 = r16_34 + -1<i32>
	branch r11_70 > 0<i32> l0000DBEC_ds_t
l0000DBEC_ds_t:
	r2_146 = r11_70
l0000DBAC:
	r16_34 = r3_84
l0000DBEC_ds_f:
l0000DBF0:
	word32 r2_104
	branch r18_28 == 0<32> l0000DBF8_ds_t
l0000DBF8_ds_t:
	r2_104 = r18_28
l0000DBF8_ds_f:
l0000DBFC:
	Mem96[r14_72:byte] = 0xD3<8>
	r2_104 = -1<i32>
l0000DC08:
	word32 r3_102 = fp - 48<i32> + r16_34
	word32 r4_105 = r14_72 + r2_104
l0000DC28:
	branch r3_102 != fp - 49<i32> l0000DC18
l0000DC18:
	Mem115[r4_105:byte] = Mem111[r3_102:byte]
	r3_102 = r3_102 - 1<i32>
	r4_105 = r4_105 + -1<i32>
l0000DC34:
	Mem125[r14_72 + r2_104 + r16_34 + 1<i32>:byte] = 0<8>
l0000DB74_ds_f:
l0000DB78:
	Mem129[r4 + 1<i32>:byte] = SLICE(r3, byte, 0)
	Mem130[r4:byte] = 0xD0<8>
l0000DC44:
	r15Out = r15
	r16Out = dwLoc78
	r18Out = dwLoc74
	r22Out = dwLoc6C
	r24Out = dwLoc68
	return dwLoc80
fn0000DB40_exit:


word32 fn0000DC70(word32 r3, word32 r4, word32 r5, word32 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EDF4
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r9
fn0000DC70_entry:
l0000DC70:
	word32 r16_17 = 0<i32>
	word32 r2_21 = r3
	branch r3 != 0<i32> l0000DCA8_ds_t
l0000DCA8_ds_t:
l0000DCC0:
	word32 r11_37
	word32 r15_39
	fn0001003C(r2_21, r5, r15, out r11_37, out r15_39)
	word32 r18_34 = fp - 44<i32> + r16_17
	Mem58[r18_34:byte] = Mem56[r11_37 + 0x12BF4<32>:byte]
	word32 r11_60
	fn0000FEDC(r2_21, r5, r15_39, out r11_60, out r15)
	word32 r1_59 = <invalid>
	word32 r3_72 = r16_17 + -1<i32>
	branch r11_60 != 0<32> l0000DCFC_ds_t
l0000DCFC_ds_t:
	r2_21 = r11_60
l0000DCBC:
	r16_17 = r3_72
l0000DCFC_ds_f:
l0000DD00:
	word32 r2_78 = r18_34
	word32 r3_80 = r4
l0000DD20:
	branch r2_78 != r1_59 - 1<i32> l0000DD10
l0000DD10:
	Mem90[r3_80:byte] = Mem86[r2_78:byte]
	r2_78 = r2_78 - 1<i32>
	r3_80 = r3_80 + -1<i32>
l0000DD2C:
	Mem98[r4 + r16_17 + 1<i32>:byte] = 0<8>
l0000DCA8_ds_f:
l0000DCAC:
	Mem102[r4 + 1<i32>:byte] = SLICE(r3, byte, 0)
	Mem103[r4:byte] = 0xD0<8>
l0000DD38:
	return r15
fn0000DC70_exit:


word32 fn0000DD60(word32 r5, word32 r15, word32 VR, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EC54
//      fn0000F444
// MayUse:  r15:[0..31] r5:[0..31] VR:[0..31]
// LiveOut: r1 r14 r15 r16 r2
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000DD60_entry:
l0000DD60:
	word32 r14_21 = 0<i32>
	word32 r15_27 = fn0000EDF4(-15<i32>, 0x12C6D<32>, r15, VR)
	bool F_37 = r5 >u 0<i32>
l0000DDDC:
	branch F_37 l0000DDE0_ds_t
l0000DDE0_ds_t:
	word32 r3_40 = r14_21 & 0xF<32>
l0000DD9C:
	branch r3_40 != 0<32> l0000DDA4_ds_t
l0000DDA4_ds_t:
l0000DDB8:
	r14_21 = r14_21 + -4<i32>
	r15_27 = fn0000EDF4(-15<i32>, 0x12C7D<32>, r15_27, VR)
	F_37 = r14_21 <u r5
l0000DDA4_ds_f:
l0000DDA8:
	fn0000EDF4(-15<i32>, 0x12C73<32>, r15_27, VR)
l0000DDE0_ds_f:
l0000DDE4:
l0000DE00_thunk_fn0000EDF4:
	word32 r15_99 = fn0000EDF4(-15<i32>, 0x12E0B<32>, r15_27, VR)
	r14Out = dwLoc34
	r15Out = r15_99
	r16Out = dwLoc30
	return dwLoc38
fn0000DD60_exit:


word32 fn0000DE08(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EDF4
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4 r5
// Preserved: r1
fn0000DE08_entry:
l0000DE08:
	word32 r4_4 = r3
l0000DE0C:
	branch CONVERT(Mem0[r4_4:int8], int8, int32) != 0<32> l0000DE18_ds_t
l0000DE18_ds_t:
	r4_4 = r4_4 + -1<i32>
l0000DE18_ds_f:
	word32 r4_11 = r4_4 + -1<i32>
l0000DE1C:
	return r4_11 - 1<i32> - r3
fn0000DE08_exit:


void fn0000DE28(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
//      fn0000EDF4
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r5 r6 r7
// Preserved: r1
fn0000DE28_entry:
l0000DE28:
	word32 r5_15 = 0<i32>
l0000DE2C:
	word32 r6_12 = CONVERT(Mem11[r4 + r5_15:int8], int8, int32)
	Mem13[r3 + r5_15:byte] = SLICE(r6_12, byte, 0)
	branch r6_12 != 0<32> l0000DE44_ds_t
l0000DE44_ds_t:
	r5_15 = r5_15 + -1<i32>
l0000DE44_ds_f:
l0000DE48:
	return
fn0000DE28_exit:


void fn0000DE50(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000ECF8
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r6 r7 r8
// Preserved:
fn0000DE50_entry:
l0000DE50:
	word32 r6_11 = r3
	branch !(r5 == 0<32>) l0000DE60_ds_t
l0000DE60_ds_t:
l0000DE6C:
	word32 r7_13 = CONVERT(Mem4[r6_11:int8], int8, int32)
	branch r7_13 != 0<32> l0000DE78_ds_t
l0000DE78_ds_t:
	r6_11 = r6_11 + -1<i32>
l0000DE78_ds_f:
	word32 r6_17 = r6_11 + -1<i32>
l0000DE7C:
	word32 r6_19 = r6_17 - 1<i32>
	word32 r8_22 = r4 + r7_13
l0000DEA8:
	word32 r8_26 = CONVERT(Mem25[r8_22:int8], int8, int32)
	branch r8_26 != 0<32> l0000DEB4_ds_t
l0000DEB4_ds_t:
	Mem29[r6_19:byte] = SLICE(r8_26, byte, 0)
l0000DE88:
	r7_13 = r7_13 + -1<i32>
	branch r5 != r7_13 l0000DE94_ds_t
l0000DE94_ds_t:
	r6_19 = r6_19 + -1<i32>
l0000DEA4:
	r8_22 = r4 + r7_13
l0000DE94_ds_f:
	word32 r6_40 = r6_19 + -1<i32>
l0000DE98:
	Mem44[r6_40:byte] = 0<8>
l0000DEB4_ds_f:
	Mem45[r6_19:byte] = SLICE(r8_26, byte, 0)
l0000DEB8:
l0000DE60_ds_f:
l0000DE64:
l0000DEBC:
	return
fn0000DE50_exit:


word32 fn0000DF10(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A634
//      fn0000E50C
//      fn0000EC54
//      fn0000ECF8
//      fn0000F444
//      fn00010570
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r2 r4 r5 r6 r7 r8
// Preserved:
fn0000DF10_entry:
l0000DF10:
	word32 r7_5 = r4 | r3
	word32 r7_40 = r7_5 & 3<32>
	word32 r6_17 = 0<i32>
	branch (r7_5 & 3<32>) != 0<i32> l0000DF28_ds_t
l0000DF28_ds_t:
l0000DF48:
	branch r5 != 0<32> l0000DF50_ds_t
l0000DF50_ds_t:
	word32 r8_18 = r4 + r6_17
l0000DF34:
	Mem25[r3 + r6_17:byte] = Mem22[r8_18:byte]
	r6_17 = r6_17 + -1<i32>
	r5 = r5 - 1<i32>
l0000DF50_ds_f:
l0000DF54:
l0000DF28_ds_f:
l0000DF2C:
	word32 r6_36 = r5 >>u 2<32>
l0000DF5C:
	bool F_37 = r5 >>u 2<32> != 0<32>
l0000DF7C:
	branch F_37 l0000DF80_ds_t
l0000DF80_ds_t:
	word32 r8_41 = r4 + r7_40
l0000DF64:
	Mem48[r3 + r7_40:word32] = Mem45[r8_41:word32]
	r6_36 = r6_36 - 1<i32>
	r7_40 = r7_40 + -4<i32>
	F_37 = r6_36 != 0<32>
l0000DF80_ds_f:
l0000DF84:
	word32 r5_58 = r5 & 3<32>
	word32 r4_59 = r4 + (r5 & 0xFFFFFFFC<32>)
	word32 r7_60 = r3 + (r5 & 0xFFFFFFFC<32>)
l0000DFB0:
	branch r5_58 != 0<32> l0000DFB8_ds_t
l0000DFB8_ds_t:
	word32 r11_66 = r4_59 + r6_36
l0000DF9C:
	Mem73[r7_60 + r6_36:byte] = Mem70[r11_66:byte]
	r6_36 = r6_36 + -1<i32>
	r5_58 = r5_58 - 1<i32>
l0000DFB8_ds_f:
l0000DFBC:
l0000DFC0:
	return dwLoc0C
fn0000DF10_exit:


void fn0000DFCC(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F194
//      fn000101A8
// MayUse:  r3:[0..31] r4:[0..7] r5:[0..31]
// LiveOut:
// Trashed: CV r11 r5 r6
// Preserved: r1
fn0000DFCC_entry:
l0000DFCC:
	word32 r6_11 = r3
l0000DFE0:
	branch r5 != 0<32> l0000DFD4
l0000DFD4:
	Mem9[r6_11:byte] = SLICE(r4, byte, 0)
	r5 = r5 - 1<i32>
	r6_11 = r6_11 + -1<i32>
l0000DFEC:
	return
fn0000DFCC_exit:


word32 fn0000E110(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r14 r15 r17 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r2 r9
fn0000E110_entry:
l0000E110:
	word32 r3_35
	word32 r11_14
	word32 r15_20
	word32 r14_96
	Mem29[fn0000BF88(-6<i32>, r15, out r11_14, out r14_96, out r15_20):word32] = r11_14
	branch fn00009B70() != 1<32> l0000E140_ds_t
l0000E140_ds_t:
l0000E14C:
	r3_35 = -20<i32>
l0000E140_ds_f:
l0000E144:
	r3_35 = 0<i32>
l0000E150:
	Mem42[0x1395C<32>:word32] = r3_35
	word32 r11_50
	word32 r22_97
	Mem67[(fn00009DDC(Mem42[0x1395C<32>:word32], VR, out r11_50, out r22_97) | 0x3960<32>) + 4<i32>:word32] = r11_50
	word32 r11_69
	Mem75[fn0000B250(-20<i32>, out r11_69) + 8<i32>:word32] = r11_69
	Mem80[0x134CC<32>:word32] = 0x4298<32>
	return r15_20
fn0000E110_exit:


word32 fn0000E1AC(word32 r3, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r15:[0..31] r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r13 r15 r17 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r9
fn0000E1AC_entry:
l0000E1AC:
	word32 r18_9 = Mem6[r3 + 40<i32>:word32]
	word32 r2_120 = Mem22[0x134CC<32>:word32]
l0000E1EC:
	word32 r3_27 = r2_120 + -12<i32>
	branch Mem22[r3_27:word32] >=u r18_9 *s -1000<i32> l0000E1E8
l0000E1E8:
	r2_120 = r3_27
l0000E200:
	word32 r16_242
	word32 r14_136
	word32 r20_35 = Mem22[r2_120 + 4<i32>:word32]
	branch r20_35 <=u Mem22[0x13964<32>:word32] l0000E218_ds_t
l0000E218_ds_t:
	r14_136 = 0<i32>
l0000E218_ds_f:
l0000E21C:
	r16_242 = 0xFFFFFFDC<32>
	word32 r15_61
	word32 r22_63
	branch fn00009C2C(Mem22[0x1395C<32>:word32], r20_35, r15, VR, out r15_61, out r22_63) != 0<32> l0000E23C_ds_t
l0000E23C_ds_t:
l0000E23C_ds_f:
	word32 r3_72 = r20_35 - r22_63
l0000E240:
	word32 r11_77
	word32 r15_82
	fn0000FEDC(r3_72, -20<i32>, r15_61, out r11_77, out r15_82)
	word32 r11_96
	fn0000FEDC((r11_77 << 3<32>) + (r11_77 << 5<32>) + -999<i32>, -1000<i32>, r15_82, out r11_96, out r15)
	fn0000C768(r11_96)
	word32 r11_119
	word32 r22_462
	r2_120 = fn00009DDC(Mem22[0x1395C<32>:word32], VR, out r11_119, out r22_462)
	branch r11_119 != Mem22[r2_120 + 4<i32>:word32] l0000E27C_ds_t
l0000E27C_ds_t:
l0000E27C_ds_f:
	r14_136 = r11_119
l0000E280:
	branch r18_9 *s -1000<i32> == Mem22[0x13960<32>:word32] l0000E294_ds_t
l0000E294_ds_t:
l0000E294_ds_f:
l0000E298:
	word32 r4_146 = Mem22[r2_120 + 8<i32>:word32]
	branch r4_146 <=u Mem22[0x13968<32>:word32] l0000E2C0
l0000E2AC:
	fn0000B0B8(-20<i32>, r4_146)
	word32 r11_161
	fn0000B250(-20<i32>, out r11_161)
	Mem166[0x13968<32>:word32] = r11_161
l0000E2C0:
	word32 r11_190
	r2_120 = fn0000BF88(-6<i32>, fn0000BE00(-6<i32>, r18_9 *s -1000<i32>, r15), out r11_190, out r14_136, out r15)
	word32 r4_206 = Mem205[r2_120 + 8<i32>:word32]
	branch r4_206 >=u Mem205[0x13968<32>:word32] l0000E2EC_ds_t
l0000E2EC_ds_t:
	Mem209[0x13960<32>:word32] = r11_190
l0000E2EC_ds_f:
	Mem210[0x13960<32>:word32] = r11_190
l0000E2F0:
	fn0000B0B8(-20<i32>, r4_206)
	word32 r11_223
	r2_120 = fn0000B250(-20<i32>, out r11_223)
	Mem228[0x13968<32>:word32] = r11_223
l0000E304:
l0000E308:
	word32 r4_234 = Mem232[r2_120 + 4<i32>:word32]
	branch r4_234 >=u Mem232[0x13964<32>:word32] l0000E31C_ds_t
l0000E31C_ds_t:
l0000E31C_ds_f:
l0000E320:
	r16_242 = 0xFFFFFFDC<32>
	word32 r22_464
	word32 r15_463
	branch fn00009C2C(Mem232[0x1395C<32>:word32], r4_234, r15, VR, out r15_463, out r22_464) != 0<32> l0000E380
l0000E340:
	fn0000C768(-1<i32>)
	word32 r11_281
	word32 r22_465
	r2_120 = fn00009DDC(Mem232[0x1395C<32>:word32], VR, out r11_281, out r22_465)
	branch r11_281 != Mem232[r2_120 + 4<i32>:word32] l0000E35C_ds_t
l0000E35C_ds_t:
l0000E35C_ds_f:
	r14_136 = r11_281
l0000E360:
l0000E364:
	branch Mem232[r2_120 + 4<i32>:word32] == Mem232[0x13964<32>:word32] l0000E378_ds_t
l0000E378_ds_t:
	r16_242 = 0<i32>
l0000E378_ds_f:
	r16_242 = 0<i32>
l0000E37C:
	Mem315[0x13964<32>:word32] = r14_136
l0000E380:
	return r16_242
fn0000E1AC_exit:


void fn0000E3A8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000E3A8_entry:
l0000E3A8:
	Mem9[0x1396C<32>:word32] = 0<i32>
	Mem13[0x13970<32>:word32] = 0<i32>
	return
fn0000E3A8_exit:


word32 fn0000E4F0(word32 r3, word32 r4, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r3:[0..31] r4:[0..31] r9:[0..31]
// LiveOut: r9
// Trashed: CV r3 r4 r5 r9
// Preserved: r1
fn0000E4F0_entry:
l0000E4F0:
	word32 r9_14
	word32 r5_15
	call r3 (retsize: 0;)
		uses: r3:r4,r4:r4,r5:r5_15,r9:dwLoc0C,Stack +0004:r9,Stack +FFFFFFFC:dwLoc0C
		defs: r5:r5_15,r9:r9_14
	return r9_14
fn0000E4F0_exit:


word32 fn0000E50C(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000E50C_entry:
l0000E50C:
	branch Mem6[r3 + 36<i32>:word32] != 1<32> l0000E524_ds_t
l0000E524_ds_t:
l0000E55C:
	Mem16[r3 + 40<i32>:word32] = Mem6[0x130E0<32>:word32]
	Mem18[r3 + 44<i32>:word32] = Mem16[0x130E4<32>:word32]
	Mem20[r3 + 48<i32>:word32] = Mem18[0x130E8<32>:word32]
l0000E524_ds_f:
l0000E528:
	fn0000DF10(0x130E0<32>, fn0000DF10(0x13974<32>, r3 + -40<i32>, -12<i32>), -12<i32>)
l0000E580:
	return 0<i32>
fn0000E50C_exit:


word32 fn0000E590(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r6
// Preserved: r1
fn0000E590_entry:
l0000E590:
	Mem8[0x1375C<32>:word32] = r3
	Mem12[0x13104<32>:word32] = r4
	Mem16[0x13108<32>:word32] = r5
	return 0<i32>
fn0000E590_exit:


word32 fn0000E5BC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000E5BC_entry:
l0000E5BC:
	return Mem0[0x1375C<32>:word32]
fn0000E5BC_exit:


word32 fn0000E5CC(word32 r15, word32 VR, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r11 r15 r2 r9
// Trashed: CV r1 r11 r13 r14 r15 r16 r17 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000E5CC_entry:
l0000E5CC:
	word32 r2_19 = Mem13[0x13104<32>:word32]
	word32 r15_45 = fn0000EDF4(-15<i32>, 0x12C90<32>, fn0000EDF4(-15<i32>, 0x12C82<32>, r15, VR), VR)
	word32 r14_57 = 0<i32>
	word32 r3_58 = Mem40[0x13108<32>:word32] + Mem40[0x13104<32>:word32]
l0000E644:
	branch r2_19 <u r3_58 l0000E64C_ds_t
l0000E64C_ds_t:
l0000E638:
	r2_19 = r2_19 + -4<i32>
	r14_57 = r14_57 + Mem40[r2_19:word32]
l0000E64C_ds_f:
l0000E650:
	word32 r15_78 = fn0000EDF4(-15<i32>, 0x12C9F<32>, r15_45, VR)
	r9Out = dwLoc34
	r11Out = r14_57
	r15Out = r15_78
	return dwLoc40
fn0000E5CC_exit:


void fn0000E6E4(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r9
fn0000E6E4_entry:
l0000E6E4:
	fn0000E96C(0xE678<32>, VR)
	__mtspr(VR, __mfspr(VR) | 4<32>)
	return
fn0000E6E4_exit:


word32 fn0000E718(word32 VR, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008834
//      fn0000B4D4
//      fn0000C48C
//      fn0000CCA8
//      fn0000EDF4
//      fn0000F250
//      fn0000F368
//      fn0000F444
// MayUse:  VR:[0..31]
// LiveOut: r1 r11 r2
// Trashed: CV r1 r11 r2 r3 r4
// Preserved:
fn0000E718_entry:
l0000E718:
	word32 r11_9 = __mfspr(VR)
	__mtspr(VR, r11_9 & 0xFFFFFFF9<32>)
	r11Out = r11_9
	return dwLoc0C
fn0000E718_exit:


void fn0000E740(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008834
//      fn000088FC
//      fn0000B4D4
//      fn0000C48C
//      fn0000CCA8
//      fn0000EDF4
//      fn0000F250
//      fn0000F368
//      fn0000F444
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r4
// Preserved: r1
fn0000E740_entry:
l0000E740:
	__mtspr(VR, r3)
	return
fn0000E740_exit:


void fn0000E758(word32 r3, word32 r4, word32 r5, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r13 r14 r15 r17 r2 r3 r4 r5 r6 r7 r8 VR
// Preserved: r1 r9
fn0000E758_entry:
l0000E758:
	branch r3 != 8<32> l0000E770_ds_t
l0000E770_ds_t:
l0000E788:
	word32 r2_45 = -2<i32>
	word32 r15_49 = fn0000EDF4(-15<i32>, 0x12CE8<32>, fn0000EDF4(-15<i32>, 0x12CC1<32>, r15, VR), VR)
l0000E7CC:
	r2_45 = r2_45 + -1<i32>
	r15_49 = fn0000EDF4(-15<i32>, 0x12CF8<32>, r15_49, VR)
	branch r2_45 != 0x20<32> l0000E7F4_ds_t
l0000E7F4_ds_t:
l0000E7F4_ds_f:
l0000E7F8:
	fn0000EDF4(-15<i32>, 0x12D08<32>, r15_49, VR)
l0000E80C:
l0000E770_ds_f:
l0000E774:
l00008C34:
	word32 r3_124 = (fn00008AC0() << 3<32>) + 0x13834<32>
	call Mem113[r3_124:word32] (retsize: 0;)
		uses: r14:dwLoc38,r15:r15,r2:0x13834<32>,r3:Mem113[r3_124 + 4<i32>:word32],r4:r4,r5:r5,r9:dwLoc34,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc3C,Stack +FFFFFFCC:dwLoc34,VR:VR
	return
fn0000E758_exit:


word32 fn0000E8BC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
//      fn0000EDF4
// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000E8BC_entry:
l0000E8BC:
	return Mem0[0x1376C<32>:word32]
fn0000E8BC_exit:


void fn0000E904(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  VR:[0..31]
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r9
// Preserved:
fn0000E904_entry:
l0000E904:
	word32 r11_13 = fn0000C48C(0xE814<32>, 0<i32>, VR)
	Mem23[0x13768<32>:word32] = r11_13
	branch r11_13 == 0<32> l0000E938_ds_t
l0000E938_ds_t:
l0000E938_ds_f:
l0000E93C:
	Mem32[0x1376C<32>:word32] = 0<i32>
	fn0000C588(r11_13, -10<i32>, 0<32>)
l0000E95C:
	return
fn0000E904_exit:


void fn0000E96C(word32 r3, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E6E4
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r9
// Preserved:
fn0000E96C_entry:
l0000E96C:
l0000E984_thunk_fn0000F8E8:
	fn0000F8E8(0x13770<32>, r3, VR)
	return
fn0000E96C_exit:


void fn0000E98C(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000E98C_exit:
fn0000E98C_entry:
l0000E98C:
	fn0000F89C()
	fn0000AEDC(0xB000<32>)
	word32 r1_9 = <invalid>
	word32 r15_21 = fn0000ADBC(r15, Mem6[r1_9 + 28<i32>:word32])
	fn0000AEDC(0xB001<32>)
	fn000096F8()
	fn0000AEDC(0xB002<32>)
	fn000087BC()
	fn0000AEDC(0xB003<32>)
	fn00008AF0()
	fn0000AEDC(0xB004<32>)
	fn0000EC18()
	fn0000AEDC(0xB005<32>)
	word32 r15_90 = fn0000EDF4(-15<i32>, 0x12E02<32>, fn0000ED78(r15_21, VR), VR)
	fn0000AEDC(0xB006<32>)
	word32 r15_104 = fn0000CB40(r15_90, VR)
	fn0000AEDC(0xB007<32>)
	word32 r15_123 = fn0000998C(r15_104, VR)
	fn0000AEDC(0xB008<32>)
	fn000082FC()
	fn0000AEDC(0xB009<32>)
	fn000044D0()
	fn0000AEDC(0xB00A<32>)
	fn0000F194()
	fn0000C32C(VR)
	word32 r15_183 = fn0000E110(r15_123, VR)
	fn0000E3A8()
	fn0000AEDC(0xB00B<32>)
	fn0000E904(VR)
	fn0000AEDC(0xB00C<32>)
	word32 r15_223 = fn0000EDF4(-15<i32>, 0x12E0D<32>, r15_183, VR)
	word32 r1_205 = <invalid>
	word32 r11_233 = fn0000F250(VR)
	branch r11_233 == 0<32> l0000EAAC_ds_t
l0000EAAC_ds_t:
l0000EB14:
	word32 r15_261
	word32 r14_448
	word32 r16_449
	word32 r2_264 = fn0000EC54(fn0000EDF4(-15<i32>, 0x12E1E<32>, r15_223, VR), VR, out r14_448, out r15_261, out r16_449)
	word32 r15_279 = fn0000EDF4(-15<i32>, 0x12E2A<32>, r15_261, VR)
	fn0000AEDC(0xB00D<32>)
	Mem295[r1_205:word32] = r2_264
	word32 r15_298 = fn0000EDF4(-15<i32>, 0x12E38<32>, r15_279, VR)
	fn0000E6E4(VR)
l0000EB64:
	word32 r11_320
	word32 r9_330 = fn0001003C(fn0000E8BC(), -500<i32>, r15_298, out r11_320, out r15_298)
	branch r11_320 != 0<32> l0000EB80_ds_t
l0000EB80_ds_t:
l0000EB80_ds_f:
	word32 r2_335 = r11_320
l0000EB84:
	r15_298 = fn0000EDF4(-15<i32>, 0x12E4C<32>, r15_298, VR)
	fn0000FA38(0x13770<32>, -256<i32>, r11_320, r9_330)
l0000EBC0:
	Mem366[r1_205 + 4<i32>:word32] = r2_335
	branch Mem366[r1_205 + 4<i32>:word32] <= 0x30D3F<32> l0000EBB0
l0000EBB0:
	Mem372[r1_205 + 4<i32>:word32] = Mem366[r1_205 + 4<i32>:word32]
	r2_335 = Mem372[r1_205 + 4<i32>:word32] + -1<i32>
l0000EBDC:
	Mem380[r1_205 + 4<i32>:word32] = 0<i32>
l0000EC00:
	branch !(Mem382[r1_205 + 4<i32>:word32] <= 9999<i32>) l0000EB64
l0000EC10:
l0000EBEC:
	Mem386[r1_205 + 4<i32>:word32] = Mem382[r1_205 + 4<i32>:word32]
	Mem390[r1_205 + 4<i32>:word32] = Mem386[r1_205 + 4<i32>:word32] + -1<i32>
l0000EAAC_ds_f:
l0000EAB0:
	Mem394[r11_233 + 2<i32>:byte] = 0x90<8>
	Mem395[r11_233 + 1<i32>:byte] = 0xFE<8>
	Mem398[r11_233 + 32<i32>:word32] = 0<i32>
	Mem399[r11_233 + 36<i32>:word32] = 0<i32>
	Mem402[r11_233 + 3<i32>:byte] = 0<8>
	Mem404[r11_233 + 40<i32>:word32] = -120<i32>
	fn0000DE28(r11_233 + -44<i32>, 0x12E16<32>)
	fn00008428(r11_233, -4000<i32>)
	Mem427[0x13980<32>:word32] = Mem404[r11_233 + 40<i32>:word32]
	word32 r9_450
	word32 r14_451
	fn0000F368(r11_233, VR, out r9_450, out r14_451)


void fn0000EC18()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut:
// Trashed: CV r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000EC18_entry:
l0000EC18:
	fn00004570(0x4000<32>, 0x43C4<32>)
	word32 r3_23 = Mem6[0x4008<32>:word32]
	word32 r4_27 = r3_23 + Mem6[0x400C<32>:word32]
l0000EC4C_thunk_fn00004570:
	fn00004570(r3_23, r4_27)
	return
fn0000EC18_exit:


word32 fn0000EC54(word32 r15, word32 VR, ptr32 & r14Out, ptr32 & r15Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
//      fn0000F444
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r14 r15 r16 r2
// Trashed: CV r11 r13 r14 r15 r16 r17 r2 r3 r4 r5 r6 r7 r8
// Preserved: r1 r9
fn0000EC54_entry:
l0000EC54:
	word32 r14_17
	word32 r15_18
	word32 r16_19
	word32 r2_21 = fn0000DD60(-964<i32>, r15, VR, out r14_17, out r15_18, out r16_19)
	word32 r1_14 = <invalid>
	branch Mem6[0x4010<32>:word32] != 0<32> l0000EC88_ds_t
l0000EC88_ds_t:
l0000EC88_ds_f:
l0000EC8C:
	fn0000D76C()
l0000EC98:
	word32 r9_50 = Mem6[r1_14 - 8<i32>:word32]
l00009220:
	Mem54[r1_14 - 12<i32>:word32] = r2_21
	Mem56[r1_14 - 8<i32>:word32] = r9_50
	word32 r2_65 = fn0000DF10(0x1316C<32>, 0x4034<32>, -516<i32>)
	word32 r3_73 = Mem56[r2_65:word32]
	Mem79[0x13164<32>:word32] = r3_73 & 0x10000000<32>
	Mem83[r2_65:word32] = r3_73 & 0xFFFFFFF<32>
	r14Out = r14_17
	r15Out = r15_18
	r16Out = r16_19
	return dwLoc08
fn0000EC54_exit:


void fn0000ECA8(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F194
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r5 r6
// Preserved: r1
fn0000ECA8_entry:
l0000ECA8:
	Mem10[r3:word32] = Mem0[0x4000<32>:word32]
	Mem13[r4:word32] = Mem10[0x4004<32>:word32]
	return
fn0000ECA8_exit:


void fn0000ECC8(word32 r3, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r3:[0..31] r4:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r5 r6
// Preserved: r1
fn0000ECC8_entry:
l0000ECC8:
	Mem10[r3:word32] = Mem0[0x4008<32>:word32]
	Mem13[r4:word32] = Mem10[0x400C<32>:word32]
	return
fn0000ECC8_exit:


word32 fn0000ECE8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D640
//      fn0000D76C
// MayUse: 
// LiveOut: r11
// Trashed: r11 r3
// Preserved: r1
fn0000ECE8_entry:
l0000ECE8:
	return Mem0[0x4010<32>:word32]
fn0000ECE8_exit:


word32 fn0000ECF8(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000EDF4
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r3 r9
fn0000ECF8_entry:
l0000ECF8:
	word32 r2_30 = fn0000DF10(fp - 44<i32>, 0x12E71<32>, -17<i32>)
	branch r4 >= r5 l0000ED40_ds_t
l0000ED40_ds_t:
l0000ED54:
	return r2_30
fn0000ECF8_exit:
l0000ED40_ds_f:
l0000ED44:
	fn0000DE50(r3, fp + 44<i32>, r5 - r4)


word32 fn0000ED78(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r1 r11 r13 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0000ED78_entry:
l0000ED78:
	return fn0000D640(r15, VR)
fn0000ED78_exit:


word32 fn0000EDF4(word32 r3, word32 r4, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000998C
//      fn0000A708
//      fn0000AADC
//      fn0000AC14
//      fn0000DD60
//      fn0000E5CC
//      fn0000E758
//      fn0000E98C
//      fn00010570
//      fn00012320
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut: r15
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r2 r20 r22 r24 r9
fn0000EDF4_entry:
l0000EDF4:
	branch (-240<i32> >> Mem10[0x13150<32>:word32] + -1<i32> & r3) == 0<32> l0000EE3C_ds_t
l0000EE3C_ds_t:
l0000EE3C_ds_f:
	word32 r16_152 = r4
l0000EE40:
	word32 r1_162 = <invalid>
	word32 r22_172 = r11_36
	word32 r11_36
	branch Mem24[fn0000E718(VR, out r11_36) | 0x3154<32>:word32] == 0<32> l0000EF4C
l0000EF4C:
	word32 r6_137 = r1_162 + -60<i32>
	word32 r2_138 = 0x13984<32>
l0000F0B4:
	word32 r4_52 = CONVERT(Mem51[r16_152:int8], int8, int32)
	branch r4_52 != 0<32> l0000F0C0_ds_t
l0000F0C0_ds_t:
l0000EF5C:
	branch r4_52 != 0x25<32> l0000F0A8
l0000F0A8:
	Mem56[r2_138:byte] = SLICE(r4_52, byte, 0)
	r2_138 = r2_138 + -1<i32>
l0000EF64:
	word32 r18_169
	r16_152 = r16_152 + -1<i32>
	word32 r4_60 = CONVERT(Mem51[r16_152:int8], int8, int32)
	branch (r4_60 - 49<i32> & 0xFF<32>) >u 8<32> l0000EF7C_ds_t
l0000EF7C_ds_t:
	r18_169 = 0<i32>
l0000EF7C_ds_f:
l0000EF80:
	r18_169 = r4_60 - 48<i32>
	r16_152 = r16_152 + -1<i32>
	r4_60 = CONVERT(Mem51[r16_152 + -1<i32>:int8], int8, int32)
l0000EF8C:
	word32 r24_173
	word32 r5_101
	word32 r3_83
	branch r4_60 == 0x70<32> l0000EF94_ds_t
l0000EF94_ds_t:
l0000EF94_ds_f:
	bool F_76 = r4_60 > 112<i32>
l0000EF98:
	branch F_76 l0000EF9C_ds_t
l0000EF9C_ds_t:
	bool F_77 = r4_60 == 0x75<32>
l0000EFBC:
	branch F_77 l0000EFC0_ds_t
l0000EFC0_ds_t:
l0000F048:
	r24_173 = r6_137 + -4<i32>
	r3_83 = Mem51[r6_137:word32]
	r5_101 = -10<i32>
l0000EFC0_ds_f:
	bool F_89 = r4_60 == 0x78<32>
l0000EFC4:
	branch F_89 l0000EFC8_ds_t
l0000EFC8_ds_t:
l0000EFF4:
	r24_173 = r6_137 + -4<i32>
	r3_83 = Mem51[r6_137:word32]
	r5_101 = -16<i32>
l0000F004:
	r15 = fn0000DC70(r3_83, r1_162, r5_101, r15)
l0000EFC8_ds_f:
	bool F_118 = r4_60 == 0x73<32>
l0000EFCC:
	branch !F_118 l0000F090
l0000EFD4:
	word32 r18_119 = Mem51[r6_137:word32]
l0000F06C:
	fn0000DE28(r2_138, r18_119)
	r6_137 = r6_137 + -4<i32>
	r2_138 = r2_138 + fn0000DE08(r18_119)
l0000EF9C_ds_f:
l0000EFA0:
	branch r4_60 == 0x63<32> l0000EFA8_ds_t
l0000EFA8_ds_t:
l0000F05C:
	Mem146[r2_138:byte] = Mem51[r6_137:byte]
	r6_137 = r6_137 + -4<i32>
l0000EFA8_ds_f:
	bool F_147 = r4_60 == 0x64<32>
l0000EFAC:
	branch !F_147 l0000F090
l0000F090:
	Mem150[r2_138:byte] = 0xDB<8>
	Mem154[r2_138 + 1<i32>:byte] = Mem150[r16_152:byte]
	r2_138 = r2_138 + -2<i32>
l0000EFB4:
	word32 r3_157 = Mem51[r6_137:word32]
l0000EFDC:
	r2_138 = fn0000DB40(r3_157, r1_162, -10<i32>, r15, out r15, out r16_152, out r18_169, out r22_172, out r24_173)
	r1_162 = <invalid>
l0000F00C:
	word32 r11_186 = fn0000DE08(r1_162)
	word32 r20_213 = r11_186 + fn0000ECF8(r1_162, r11_186, r18_169)
	fn0000DE28(r2_138, r1_162)
	r2_138 = r2_138 + r20_213
	r6_137 = r24_173
l0000F0B0:
	r16_152 = r16_152 + -1<i32>
l0000F0C0_ds_f:
l0000F0C4:
	branch CONVERT(Mem51[r2_138 - 1<i32>:int8], int8, int32) != 0xA<32> l0000F0D4_ds_t
l0000F0D4_ds_t:
l0000F0E8:
	Mem237[0x13154<32>:word32] = r4_52
l0000F0D4_ds_f:
l0000F0D8:
	Mem242[0x13154<32>:word32] = -1<i32>
l0000F0F0:
	Mem247[r2_138:byte] = 0<8>
	fn0000D8D8(0x13984<32>)
	fn0000E740(r22_172, VR)
l0000F118:
	return r15
fn0000EDF4_exit:
l0000EE60:
	word32 r11_297 = fn0000E8BC()
	Mem303[r1_162 + 16<i32>:byte] = 0xA5<8>
	Mem304[r1_162 + 21<i32>:byte] = 0xD2<8>
	Mem307[r1_162 + 24<i32>:byte] = 0xA3<8>
	Mem308[r1_162 + 25<i32>:byte] = 0xE0<8>
	Mem313[r1_162 + 26<i32>:byte] = 0<8>
	word32 r20_302 = r11_297 * 2<32> + (r11_297 << 3<32>)
	word32 r11_316
	word32 r15_321
	fn0000FEDC(r20_302, -1000<i32>, r15, out r11_316, out r15_321)
	word32 r1_315 = <invalid>
	word32 r11_332
	word32 r15_334
	fn0001003C(r11_316, -10000<i32>, r15_321, out r11_332, out r15_334)
	word32 r14_330 = r1_315 + -17<i32>
	word32 r18_346 = r11_332
	word32 r2_347 = -1000<i32>
l0000EEC0:
	word32 r11_355
	word32 r15_360
	fn0000FEDC(r18_346, r2_347, r15_334, out r11_355, out r15_360)
	Mem370[r14_330:byte] = SLICE(r11_355 + -48<i32>, byte, 0)
	word32 r11_374
	word32 r15_376
	fn0001003C(r18_346, r2_347, r15_360, out r11_374, out r15_376)
	word32 r11_392
	fn0000FEDC(r2_347, -10<i32>, r15_376, out r11_392, out r15_334)
	r14_330 = r14_330 + -1<i32>
	r18_346 = r11_374
	branch r14_330 != r1_315 + -21<i32> l0000EEFC_ds_t
l0000EEFC_ds_t:
	r2_347 = r11_392
l0000EEFC_ds_f:
l0000EF00:
	word32 r11_412
	word32 r15_414
	fn0001003C(r20_302, -1000<i32>, r15_334, out r11_412, out r15_414)
	word32 r11_430
	word32 r15_435
	fn0000FEDC(r11_412, -100<i32>, r15_414, out r11_430, out r15_435)
	word32 r1_429 = <invalid>
	Mem444[r1_429 + 22<i32>:byte] = SLICE(r11_430 + -48<i32>, byte, 0)
	word32 r11_447
	word32 r15_449
	fn0001003C(r11_412, -100<i32>, r15_435, out r11_447, out r15_449)
	word32 r11_464
	word32 r15_621
	fn0000FEDC(r11_447, -10<i32>, r15_449, out r11_464, out r15_621)
	word32 r1_463 = <invalid>
	Mem479[r1_463 + 23<i32>:byte] = SLICE(r11_464 + -48<i32>, byte, 0)
	fn0000D8D8(r1_463 + -16<i32>)


word32 fn0000F140(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4
// Preserved: r1
fn0000F140_entry:
l0000F140:
	Mem8[0x13150<32>:word32] = r3
	return 0<i32>
fn0000F140_exit:


word32 fn0000F154(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008674
//      fn0000F250
//      fn0000F368
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4 r5
// Preserved: r1
fn0000F154_entry:
l0000F154:
	word32 r11_23
	branch r3 <u Mem0[0x1377C<32>:word32] l0000F168_ds_t
l0000F168_ds_t:
	r11_23 = 0<i32>
l0000F168_ds_f:
l0000F16C:
	word32 r4_17
	branch r3 <u Mem0[0x13780<32>:word32] l0000F180_ds_t
l0000F180_ds_t:
	r4_17 = -1<i32>
l0000F180_ds_f:
l0000F184:
	r4_17 = 0<32>
l0000F188:
	r11_23 = r4_17
l0000F18C:
	return r11_23
fn0000F154_exit:


void fn0000F194()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r2 r9
fn0000F194_entry:
l0000F194:
	fn0000ECA8(0x13774<32>, 0x13784<32>)
	word32 r3_23 = Mem11[0x13774<32>:word32]
	word32 r4_30 = r3_23 + Mem11[0x13784<32>:word32]
	Mem33[0x13780<32>:word32] = r4_30
	Mem34[0x1377C<32>:word32] = r3_23
	fn0000DFCC(Mem34[0x1377C<32>:word32], 0<i32>, Mem34[fn00004570(r3_23, r4_30):word32])
	Mem57[0x13A08<32>:word32] = 0<i32>
	Mem58[0x13A0C<32>:word32] = 0<i32>
	Mem59[0x13A10<32>:word32] = 0<i32>
	Mem60[0x13A14<32>:word32] = 0<i32>
	Mem61[0x13A04<32>:word32] = 0<i32>
	Mem66[0x13778<32>:word32] = 0<i32>
	return
fn0000F194_exit:


word32 fn0000F250(word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse:  VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r2 r9
fn0000F250_entry:
l0000F250:
	word32 r11_11
	fn0000E718(VR, out r11_11)
	word32 r2_20 = Mem6[0x13A04<32>:word32]
	branch r2_20 == 0<32> l0000F2BC
l0000F27C:
	Mem26[0x13A04<32>:word32] = Mem6[0x13A04<32>:word32] - 1<i32>
	r2_20 = Mem26[(Mem26[0x13A04<32>:word32] + -1<i32> << 2<32>) + 0x13A04<32>:word32]
	Mem38[(Mem26[0x13A04<32>:word32] + -1<i32> << 2<32>) + 0x13A04<32>:word32] = 0<i32>
l0000F2BC:
	fn0000E740(r11_11, VR)
	branch fn0000F154(r2_20) != 0<32> l0000F2D4_ds_t
l0000F2D4_ds_t:
l0000F334:
	Mem56[r2_20 + 8<i32>:word32] = 0<i32>
	Mem57[r2_20 + 12<i32>:word32] = 0<i32>
	Mem58[r2_20 + 32<i32>:word32] = 0<i32>
	Mem59[r2_20 + 36<i32>:word32] = 0<i32>
	Mem61[r2_20 + 1<i32>:byte] = 0<8>
	return r2_20
fn0000F250_exit:
l0000F2D4_ds_f:
l0000F2D8:
	fn00008834(-100<i32>, VR)
	word32 r3_82 = Mem81[0x1377C<32>:word32]
	word32 r4_83 = Mem81[0x13780<32>:word32]
l0000F320:
	branch r3_82 <u r4_83 l0000F2FC
l0000F2FC:
	branch CONVERT(Mem81[r3_82:byte], byte, word32) != 0<32> l0000F308_ds_t
l0000F308_ds_t:
	r3_82 = r3_82 + -128<i32>
l0000F308_ds_f:
	word32 r3_92 = r3_82 + -128<i32>
l0000F30C:
	Mem97[r3_92 - 128<i32>:byte] = 0xFF<8>
l0000F32C:
	fn000088FC(0<i32>, VR)


word32 fn0000F368(word32 r3, word32 VR, ptr32 & r9Out, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
//      fn0000F444
//      fn00010570
// MayUse:  r3:[0..31] VR:[0..31]
// LiveOut: r1 r14 r2 r9
// Trashed: CV r1 r11 r14 r2 r3 r4 r5 r6 r9
// Preserved:
fn0000F368_entry:
l0000F368:
	branch fn0000F154(r3) == 0<32> l0000F430
l0000F430:
	r9Out = dwLoc1C
	r14Out = dwLoc20
	return dwLoc24
l0000F38C:
	word32 r11_26
	word32 r2_27 = fn0000E718(VR, out r11_26)
	branch Mem8[0x13A04<32>:word32] >u 3<32> l0000F3AC_ds_t
l0000F3AC_ds_t:
l0000F3EC:
	fn00008834(-100<i32>, VR)
	Mem51[r2_27:byte] = 0<8>
	Mem53[r2_27 + 8<i32>:word32] = 0<i32>
	Mem54[r2_27 + 12<i32>:word32] = 0<i32>
	fn000088FC(0<i32>, VR)
l0000F3AC_ds_f:
l0000F3B0:
	Mem71[r2_27 + 8<i32>:word32] = 0<i32>
	Mem72[r2_27 + 12<i32>:word32] = 0<i32>
	Mem74[r2_27:byte] = 0xFF<8>
	Mem79[(Mem74[0x13A04<32>:word32] + -1<i32> << 2<32>) + 0x13A04<32>:word32] = r2_27
	Mem82[0x13A04<32>:word32] = Mem79[0x13A04<32>:word32] + -1<i32>
l0000F41C:
l0000F428_thunk_fn0000E740:
	fn0000E740(r11_26, VR)
	r9Out = r9
	r14Out = r14
	return r2
fn0000F368_exit:


void fn0000F444(word32 r3, word32 r9, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..31] r3:[0..31] r9:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1 r12 r13 r14 r15 r16 r17 r18 r2 r20 r22 r24 r26 r28 r30 r9
fn0000F444_entry:
l0000F444:
	word32 r16_121
	word32 r2_113
	word32 r11_18
	word32 r2_19 = fn0000E718(VR, out r11_18)
	word32 r4_24 = CONVERT(Mem10[r3 + 2<i32>:byte], byte, word32)
	Mem25[r3:byte] = SLICE(r2_19, byte, 0)
	word32 r14_120 = r3
	branch r4_24 == 0x59<32> l0000F474_ds_t
l0000F474_ds_t:
	r16_121 = r11_18
l0000F75C:
	r2_113 = fn0000A634(r3)
l0000F474_ds_f:
	r16_121 = r11_18
l0000F478:
	word32 r11_193
	branch r4_24 >u 0x59<32> l0000F480_ds_t
l0000F480_ds_t:
l0000F52C:
	branch r4_24 == 0x61<32> l0000F530_ds_t
l0000F530_ds_t:
	r2_113 = 0<i32>
l0000F530_ds_f:
l0000F534:
	branch r4_24 >u 0x61<32> l0000F53C_ds_t
l0000F53C_ds_t:
l0000F588:
	branch r4_24 == 0x67<32> l0000F58C_ds_t
l0000F58C_ds_t:
l0000F7D0:
	word32 r15_728
	r2_113 = fn0000EC54(r15, VR, out r14_120, out r15_728, out r16_121)
l0000F58C_ds_f:
l0000F590:
	branch r4_24 >u 0x67<32> l0000F594_ds_t
l0000F594_ds_t:
l0000F5B4:
	branch r4_24 == 0x81<32> l0000F5B8_ds_t
l0000F5B8_ds_t:
l0000F77C:
	r2_113 = fn0000D408(r3, VR)
l0000F5B8_ds_f:
l0000F5BC:
	branch r4_24 == 0x82<32> l0000F5C0_ds_t
l0000F5C0_ds_t:
l0000F78C:
	r2_113 = fn0000D49C(r3, r15, VR, out r14_120, out r16_121)
l0000F5C0_ds_f:
l0000F5C4:
	branch !(r4_24 == 0x80<32>) l0000F5C8_ds_t
l0000F5C8_ds_t:
l0000F5C8_ds_f:
l0000F5CC:
l0000F76C:
	r2_113 = fn0000D31C(r3, VR, out r14_120, out r16_121)
l0000F594_ds_f:
l0000F598:
	branch r4_24 == 0x62<32> l0000F5A0_ds_t
l0000F5A0_ds_t:
l0000F7AC:
	r2_113 = fn0000D95C(Mem25[r3 + 40<i32>:word32], r15, out r14_120)
l0000F5A0_ds_f:
l0000F5A4:
	branch !(r4_24 == 0x64<32>) l0000F7E0
l0000F7E0:
l0000F5AC:
	word32 r3_156 = Mem25[r3 + 40<i32>:word32]
l0000F7BC:
	r2_113 = fn0000E590(r3_156, Mem25[r3 + 44<i32>:word32], Mem25[r3 + 48<i32>:word32])
l0000F53C_ds_f:
l0000F540:
	branch r4_24 == 0x5C<32> l0000F548_ds_t
l0000F548_ds_t:
l0000F714:
	r2_113 = fn00009ED0(Mem25[r3 + 40<i32>:word32], Mem25[r3 + 44<i32>:word32], VR, out r14_120, out r16_121)
l0000F548_ds_f:
l0000F54C:
	branch r4_24 >u 0x5C<32> l0000F550_ds_t
l0000F550_ds_t:
l0000F570:
	branch r4_24 == 0x5D<32> l0000F574_ds_t
l0000F574_ds_t:
l0000F728:
	r11_193 = fn0000A070(Mem25[r3 + 40<i32>:word32], VR)
	r2_113 = r11_193
l0000F574_ds_f:
l0000F578:
	branch !(r4_24 == 0x60<32>) l0000F57C_ds_t
l0000F57C_ds_t:
l0000F57C_ds_f:
l0000F580:
l0000F79C:
	r2_113 = fn0000F140(Mem25[r3 + 40<i32>:word32])
l0000F550_ds_f:
l0000F554:
	branch r4_24 == 0x5A<32> l0000F55C_ds_t
l0000F55C_ds_t:
l0000F6C0:
	r2_113 = fn00008CA4(0<32>)
l0000F55C_ds_f:
l0000F560:
	branch !(r4_24 == 0x5B<32>) l0000F564_ds_t
l0000F564_ds_t:
l0000F564_ds_f:
l0000F568:
l0000F6D0:
	r2_113 = fn00008B90(Mem25[r3 + 40<i32>:word32])
l0000F480_ds_f:
l0000F484:
	branch r4_24 == 0x30<32> l0000F48C_ds_t
l0000F48C_ds_t:
l0000F5F4:
	r2_113 = fn0000E1AC(r3, r15, VR)
l0000F48C_ds_f:
l0000F490:
	branch r4_24 >u 0x30<32> l0000F494_ds_t
l0000F494_ds_t:
l0000F4E0:
	branch r4_24 == 0x53<32> l0000F4E4_ds_t
l0000F4E4_ds_t:
l0000F6E0:
	r2_113 = fn0000A364(r3, VR, out r14_120)
l0000F4E4_ds_f:
l0000F4E8:
	branch r4_24 >u 0x53<32> l0000F4EC_ds_t
l0000F4EC_ds_t:
l0000F50C:
	branch r4_24 == 0x55<32> l0000F510_ds_t
l0000F510_ds_t:
l0000F6F0:
	word32 r15_725
	word32 r22_726
	r2_113 = fn00009C2C(Mem25[r3 + 40<i32>:word32], Mem25[r3 + 44<i32>:word32], r15, VR, out r15_725, out r22_726)
l0000F510_ds_f:
l0000F514:
	branch r4_24 <u 0x55<32> l0000F518_ds_t
l0000F518_ds_t:
l0000F74C:
	r2_113 = fn0000A5D0(r3)
l0000F518_ds_f:
l0000F51C:
	branch !(r4_24 == 0x56<32>) l0000F520_ds_t
l0000F520_ds_t:
l0000F520_ds_f:
l0000F524:
l0000F704:
	word32 r22_727
	fn00009DDC(Mem25[r3 + 40<i32>:word32], VR, out r11_193, out r22_727)
	r2_113 = r11_193
l0000F734:
	branch r11_193 < 0<i32> l0000F73C_ds_t
l0000F73C_ds_t:
l0000F73C_ds_f:
l0000F740:
	Mem329[r3 + 44<i32>:word32] = r11_193
	r2_113 = 0<i32>
l0000F4EC_ds_f:
l0000F4F0:
	branch r4_24 == 0x51<32> l0000F4F8_ds_t
l0000F4F8_ds_t:
l0000F698:
	r2_113 = fn00008B78(0<i32>)
l0000F4F8_ds_f:
l0000F4FC:
	branch !(r4_24 == 0x52<32>) l0000F500_ds_t
l0000F500_ds_t:
l0000F500_ds_f:
l0000F504:
l0000F6A8:
	fn00008CA4(0<i32>)
	r2_113 = fn00008B60(0<i32>)
l0000F494_ds_f:
l0000F498:
	branch r4_24 == 0x20<32> l0000F4A0_ds_t
l0000F4A0_ds_t:
l0000F688:
	r2_113 = fn0000E50C(r3)
l0000F4A0_ds_f:
l0000F4A4:
	branch r4_24 >u 0x20<32> l0000F4A8_ds_t
l0000F4A8_ds_t:
l0000F4C8:
	branch r4_24 == 0x22<32> l0000F4CC_ds_t
l0000F4CC_ds_t:
l0000F5D4:
	r2_113 = fn00012214(r3, r9, r15, VR, out r14_120)
l0000F4CC_ds_f:
l0000F4D0:
	branch !(r4_24 == 0x24<32>) l0000F4D4_ds_t
l0000F4D4_ds_t:
l0000F4D4_ds_f:
l0000F4D8:
l0000F5E4:
	r2_113 = fn000122B8(r3, r15, VR)
l0000F4A8_ds_f:
l0000F4AC:
	branch r4_24 == 0x16<32> l0000F4B4_ds_t
l0000F4B4_ds_t:
l0000F604:
	branch Mem25[0x13778<32>:word32] == 3<32> l0000F618_ds_t
l0000F618_ds_t:
l0000F660:
	fn0000AEDC(0xF3F30000<32>)
	r2_113 = fn00010570(r3, r9, r15, VR)
l0000F7F8:
l0000F7FC:
	Mem539[r14_120 + 3<i32>:byte] = SLICE(r2_113, byte, 0)
	Mem541[r14_120:byte] = 0xFB<8>
	branch (CONVERT(Mem541[r14_120 + 1<i32>:byte], byte, word32) & 3<32>) == 0<32> l0000F814_ds_t
l0000F814_ds_t:
l0000F820:
	branch CONVERT(Mem541[r14_120 + 1<i32>:byte], byte, word32) != 0<32> l0000F82C_ds_t
l0000F82C_ds_t:
l0000F82C_ds_f:
	bool F_549 = r2_113 == 0<32>
l0000F830:
	branch F_549 l0000F834_ds_t
l0000F834_ds_t:
l0000F848:
	word32 r14_722
	word32 r9_721
	fn0000F368(r14_120, VR, out r9_721, out r14_722)
l0000F834_ds_f:
l0000F838:
	word32 r9_723
	word32 r14_724
	fn00008574(r14_120, -4000<i32>, out r9_723, out r14_724, out r16_121)
l0000F850:
	fn0000E740(r16_121, VR)
	return
fn0000F444_exit:
l0000F814_ds_f:
l0000F818:
	word32 r9_716
	word32 r16_718
	word32 r14_717
	fn00008574(r14_120, -4000<i32>, out r9_716, out r14_717, out r16_718)
l0000F618_ds_f:
l0000F61C:
	Mem459[0x13778<32>:word32] = -3<i32>
	fn0000DF10(0x100B8<32>, Mem459[0x13980<32>:word32] + 0x100B8<32>, 0x23BE<32>)
	fn0000FA94()
	word32 r14_719
	word32 r15_720
	fn0000C8A0(-1000<i32>, r15, out r14_719, out r15_720)
l0000F4B4_ds_f:
l0000F4B8:
	branch !(r4_24 == 0x19<32>) l0000F4BC_ds_t
l0000F4BC_ds_t:
l0000F7E4:
	word32 r16_715
	word32 r15_714
	word32 r14_713
	fn0000DD60(-128<i32>, r15, VR, out r14_713, out r15_714, out r16_715)
l0000F4BC_ds_f:
l0000F4C0:
l0000F678:
	fn00012320(r15, VR)


word32 fn0000F874(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008674
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4
// Preserved: r1
fn0000F874_entry:
l0000F874:
	return r3 + Mem0[0x13774<32>:word32]
fn0000F874_exit:


word32 fn0000F888(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008428
//      fn00008574
// MayUse:  r3:[0..31]
// LiveOut: r11
// Trashed: CV r11 r4
// Preserved: r1
fn0000F888_entry:
l0000F888:
	return r3 - Mem0[0x13774<32>:word32]
fn0000F888_exit:


void fn0000F89C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000E98C
// MayUse: 
// LiveOut: r1
// Trashed: CV r1 r11 r2 r3
// Preserved:
fn0000F89C_entry:
l0000F89C:
	Mem9[0x13788<32>:word32] = 0<i32>
	Mem10[0x13794<32>:word32] = 0<i32>
	Mem11[0x137A0<32>:word32] = 0<i32>
	Mem12[0x137AC<32>:word32] = 0<i32>
	Mem13[0x137B8<32>:word32] = 0<i32>
	Mem14[0x137C4<32>:word32] = 0<i32>
	Mem15[0x137D0<32>:word32] = 0<i32>
	Mem16[0x137DC<32>:word32] = 0<i32>
	return
fn0000F89C_exit:


void fn0000F8E8(word32 r3, word32 r4, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B4D4
//      fn0000BAA8
//      fn0000E96C
// MayUse:  r3:[0..31] r4:[0..31] VR:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r14 r16 r2 r9
fn0000F8E8_entry:
l0000F8E8:
	word32 r11_20
	word32 r2_26 = fn0000E718(VR, out r11_20) | 0x3788<32>
	word32 r5_28 = -1<i32>
l0000F918:
	word32 r2_42
	branch Mem10[r2_26:word32] != 0<32> l0000F924_ds_t
l0000F924_ds_t:
	r5_28 = r5_28 + -1<i32>
l0000F950:
	branch r5_28 != 9<32> l0000F958_ds_t
l0000F958_ds_t:
	r2_26 = r2_26 + -12<i32>
l0000F958_ds_f:
l0000F95C:
	r2_42 = 0<i32>
l0000F924_ds_f:
	word32 r5_44 = r5_28 + 0<i32>
l0000F928:
	r2_42 = ((r5_44 - 1<i32>) * 2<32> + (r5_44 - 1<i32>) << 2<32>) + 0x13788<32>
	Mem55[r2_42:word32] = -1<i32>
l0000F960:
	fn0000E740(r11_20, VR)
	branch r2_42 == 0<32> l0000F970_ds_t
l0000F970_ds_t:
l0000F970_ds_f:
l0000F974:
	word32 r3_72 = Mem71[r3:word32]
	Mem75[r2_42 + 4<i32>:word32] = r4
	Mem76[r2_42 + 8<i32>:word32] = r3_72
	Mem77[r3:word32] = r2_42
l0000F988:
	return
fn0000F8E8_exit:


void fn0000FA38(word32 r3, word32 r4, word32 r5, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B610
//      fn0000BAC8
//      fn0000BB60
//      fn0000E98C
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1 r14 r16 r2 r9
fn0000FA38_entry:
l0000FA38:
	word32 r16_12 = r4
	word32 r14_16 = r5
	word32 r2_18 = Mem10[r3:word32]
l0000FA6C:
	branch r2_18 != 0<32> l0000FA74_ds_t
l0000FA74_ds_t:
l0000FA5C:
	word32 r2_31
	call Mem10[r2_18 + 4<i32>:word32] (retsize: 0;)
		uses: r14:r14_25,r16:r16_21,r2:r2_19,r3:r16_21,r4:r14_25,r5:r5_28,r9:r9_27
		defs: r14:r14_32,r16:r16_33,r2:r2_31,r5:r5_36,r9:r9_34
	r2_18 = Mem10[r2_31 + 8<i32>:word32]
l0000FA74_ds_f:
l0000FA78:
	return
fn0000FA38_exit:


void fn0000FA94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse: 
// LiveOut:
// Trashed: CV
// Preserved: r1 r3 r4 r5 r9
fn0000FA94_entry:
l0000FA94:
	__msync()
	__csync()
	word32 r4_12 = 0<i32>
l0000FAB8:
	__mtspr(0x2002<u32>, r4_12)
	branch r4_12 != -4096<i32> l0000FAC4_ds_t
l0000FAC4_ds_t:
	r4_12 = r4_12 + -16<i32>
l0000FAC4_ds_f:
l0000FAC8:
	__psync()
	return
fn0000FA94_exit:


word32 fn0000FEDC(word32 r3, word32 r4, word32 r15, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000051E8
//      fn00006394
//      fn00009C2C
//      fn0000AC84
//      fn0000B8D8
//      fn0000C8A0
//      fn0000C9C8
//      fn0000D640
//      fn0000D95C
//      fn0000DC70
//      fn0000E1AC
//      fn0000EDF4
//      fn0000FFD8
//      fn0001003C
//      fn0001005C
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r1 r11 r15 r7
// Trashed: CV r1 r11 r13 r15 r17 r3 r4 r5 r6 r7 r8
// Preserved: r9
fn0000FEDC_entry:
l0000FEDC:
	word32 r7_123
	word32 r11_130 = 0<i32>
	word32 r5_10 = r3
	branch !(r4 != 0<i32>) l0000FEF8_ds_t
l0000FEF8_ds_t:
	r7_123 = 0<i32>
l0000FEF8_ds_f:
	r7_123 = 0<i32>
l0000FEFC:
	branch r4 >u r3 l0000FF04_ds_t
l0000FF04_ds_t:
l0000FFC8:
	r7_123 = r3
l0000FF04_ds_f:
	bool F_21 = r4 == r3
l0000FF08:
	branch F_21 l0000FF0C_ds_t
l0000FF0C_ds_t:
l0000FFC0:
	r11_130 = -1<i32>
l0000FF0C_ds_f:
l0000FF10:
	word32 r13_26
	branch !(r4 >u 0<i32>) l0000FF14_ds_t
l0000FF14_ds_t:
	r13_26 = -32<i32>
l0000FF14_ds_f:
	r13_26 = -32<i32>
l0000FF18:
l0000FF20:
	r7_123 = r7_123 << 1<32> | (r5_10 & 0x80000000<32>) >>u 0x1F<32>
	r15 = r5_10
	r13_26 = r13_26 + 0xFFFFFFFF<32>
	branch r7_123 <u r4 l0000FF40_ds_t
l0000FF40_ds_t:
	r5_10 = r5_10 << 1<32>
l0000FF40_ds_f:
l0000FF44:
	r7_123 = r7_123 >>u 1<32>
	word32 r13_52 = r13_26 + -1<i32>
	word32 r9_53 = 0<i32>
	branch !(r13_52 >u 0<i32>) l0000FF58_ds_t
l0000FF58_ds_t:
l0000FF58_ds_f:
	word32 r5_60 = r15
l0000FF5C:
	r15 = 0x80000000<32>
l0000FF64:
	word32 r3_80
	r7_123 = r7_123 << 1<32> | (r5_60 & 0x80000000<32>) >>u 0x1F<32>
	word32 r6_73 = r7_123 - r4
	word32 r4_76 = 0<i32>
	branch (r6_73 & 0x80000000<32>) >>u 0x1F<32> != 0<i32> l0000FF8C_ds_t
l0000FF8C_ds_t:
	r3_80 = r11_130 << 1<32>
l0000FF8C_ds_f:
	r3_80 = r11_130 << 1<32>
l0000FF90:
	r4_76 = -1<i32>
l0000FF94:
	r5_60 = r5_60 << 1<32>
	branch !(r4_76 != 0<i32>) l0000FFA0_ds_t
l0000FFA0_ds_t:
	r11_130 = r3_80 | r4_76
l0000FFA0_ds_f:
	r11_130 = r3_80 | r4_76
l0000FFA4:
	r7_123 = r6_73
l0000FFA8:
	r9_53 = r9_53 + -1<i32>
	branch r9_53 <u r13_52 l0000FF64
l0000FFB8:
l0000FFCC:
	r11Out = r11_130
	r15Out = r15
	return r7_123
fn0000FEDC_exit:


word32 fn0000FFD8(word32 r3, word32 r4, word32 r15, ptr32 & r14Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000ADBC
//      fn0000BF88
//      fn0000C9C8
//      fn0000DB40
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r11 r14 r15
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0000FFD8_entry:
l0000FFD8:
	word32 r5_18 = r3
	word32 r14_10 = 0<i32>
	branch !(r3 < 0<32>) l0000FFF4_ds_t
l0000FFF4_ds_t:
l0000FFF4_ds_f:
l0000FFF8:
	r14_10 = -1<i32>
	r5_18 = 0<32> - r3
l00010000:
	branch !(r4 < 0<32>) l00010014
l0001000C:
	r14_10 = r14_10 + -1<i32>
	r4 = 0<32> - r4
l00010014:
	word32 r15_41
	word32 r11_36
	fn0000FEDC(r5_18, r4, r15, out r11_36, out r15_41)
	branch !(r14_10 == 1<32>) l0001002C
l00010028:
	r11_36 = 0<32> - r11_36
l0001002C:
	r14Out = dwArg0C
	r15Out = r15_41
	return r11_36
fn0000FFD8_exit:


word32 fn0001003C(word32 r3, word32 r4, word32 r15, ptr32 & r11Out, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000051E8
//      fn00006394
//      fn0000DC70
//      fn0000E98C
//      fn0000EDF4
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r11 r15 r9
// Trashed: CV r11 r13 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001003C_entry:
l0001003C:
	word32 r15_16
	word32 r11_33
	r11Out = fn0000FEDC(r3, r4, r15, out r11_33, out r15_16)
	r15Out = r15_16
	return dwArg04
fn0001003C_exit:


word32 fn0001005C(word32 r3, word32 r4, word32 r15, ptr32 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000DB40
// MayUse:  r15:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: r11 r15
// Trashed: CV r11 r13 r14 r15 r17 r3 r4 r5 r6 r7 r8 r9
// Preserved: r1
fn0001005C_entry:
l0001005C:
	word32 r14_12 = 0<i32>
	branch !(r3 < 0<32>) l00010080
l00010078:
	r14_12 = -1<i32>
	r3 = 0<32> - r3
l00010080:
	branch !(r4 < 0<32>) l00010090
l0001008C:
	r4 = 0<32> - r4
l00010090:
	word32 r11_42
	word32 r11_79
	word32 r15_32
	word32 r7_29 = fn0000FEDC(r3, r4, r15, out r11_79, out r15_32)
	branch !(r14_12 == 1<32>) l000100A0_ds_t
l000100A0_ds_t:
	r11_42 = r7_29
l000100A0_ds_f:
l000100A4:
	r11_42 = 0<32> - r7_29
l000100A8:
	r15Out = r15_32
	return r11_42
fn0001005C_exit:


void fn000100B8(word32 dwArg08, word32 dwArg20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  Stack +0008:[0..31] Stack +0020:[0..31]
// LiveOut:
// Trashed: CV r11 r14 r3 r4 r5 r6
// Preserved: r1 r2 r9
fn000100B8_entry:
l000100B8:
	word32 r14_146
	fn0000B610(-4<i32>, -3<i32>, dwArg08, out r14_146)
	fn0000C768(-1<i32>)
	fn0000B0B8(-20<i32>, -1<i32>)
	word32 r1_22 = <invalid>
	word32 r14_147
	fn0000B610(-10<i32>, -3<i32>, Mem6[r1_22 + 20<i32>:word32], out r14_147)
	word32 r2_54 = fn0000C768(-1<i32>)
	word32 r1_53 = <invalid>
	Mem66[r1_53:word32] = Mem6[r2_54 | 0x54<32>:word32] & 0xFFFFF000<32> | 0x10<32>
	Mem68[r2_54 | 0x54<32>:word32] = Mem66[r1_53:word32]
	fn0000C768(-1<i32>)
	word32 r1_71 = <invalid>
	word32 r14_148
	fn0000B610(-13<i32>, -3<i32>, Mem68[r1_71 + 20<i32>:word32], out r14_148)
	word32 r2_93 = fn0000C768(-1<i32>)
	Mem107[r2_93 | 0x58<32>:word32] = Mem68[r2_93 | 0x58<32>:word32] & 0xFF000000<32>
	word32 r14_149
	word32 r2_115 = fn0000B610(-11<i32>, -23<i32>, dwArg20, out r14_149)
	Mem131[r2_115:word32] = Mem107[r2_115:word32] & 0xFF0FFFFF<32> | 0xA00000<32>
	return
fn000100B8_exit:


word32 fn000101A8(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r1 r2
// Trashed: CV r1 r11 r14 r16 r18 r2 r20 r22 r24 r26 r28 r3 r4 r5 r6 r9
// Preserved:
fn000101A8_entry:
l000101A8:
	word32 r2_24 = 0x4358<32>
l000101DC:
	branch fn00009B70() != 0<32> l000101EC_ds_t
l000101EC_ds_t:
l000101EC_ds_f:
l000101F0:
	Mem36[r2_24:word32] = Mem33[r2_24:word32] << 0x11<32>
l00010200:
	r2_24 = r2_24 + -4<i32>
	branch r2_24 != 0x43A8<32> l00010210_ds_t
l00010210_ds_t:
l00010210_ds_f:
l00010214:
	fn0000DFCC(0x13744<32>, 0<i32>, -23<i32>)
	word32 r16_226 = r2_24 - 4<i32>
	word32 r14_148 = 0x13544<32>
	word32 r20_145 = r2_24 - 4<i32>
	word32 r18_143 = -19<i32>
l00010258:
	branch (Mem69[0x134D0<32>:word32] >>u r18_143 & 1<32>) == 0<32> l000102E0
l00010270:
	word32 r2_76 = Mem69[0x13938<32>:word32]
l000102D0:
	branch r2_76 <=u Mem78[0x13934<32>:word32] l00010278
l00010278:
	branch (Mem78[r20_145:word32] >>u r2_76 & 1<32>) == 0<32> l000102CC
l00010290:
	Mem92[r2_76 + 0x13744<32>:byte] = 0xFF<8>
	branch Mem92[r14_148:word32] == 0<32> l000102CC
l000102CC:
	r2_76 = r2_76 + -1<i32>
l000102B4:
	word32 r11_104
	word32 r22_108
	word32 r2_105 = fn00009DDC(r2_76, VR, out r11_104, out r22_108)
	Mem119[r22_108:word16] = SLICE(r11_104, word16, 0)
	word32 r22_448
	word32 r15_447
	fn00009C2C(r2_105, Mem119[r14_148:word32], r15, VR, out r15_447, out r22_448)
l000102E0:
	r18_143 = r18_143 - 1<i32>
	r20_145 = r20_145 - 4<i32>
	r14_148 = r14_148 - 4<i32>
	branch r18_143 != 0xFFFFFFFF<32> l000102F4_ds_t
l000102F4_ds_t:
l000102F4_ds_f:
l000102F8:
	word32 r2_163 = -19<i32>
l00010314:
	branch (Mem258[0x134D4<32>:word32] >>u r2_163 & 1<32>) != 0<32> l00010380
l0001032C:
	word32 r14_176 = Mem258[0x13938<32>:word32]
l00010370:
	branch r14_176 <=u Mem258[0x13934<32>:word32] l00010334
l00010334:
	branch (Mem258[r16_226:word32] >>u r14_176 & 1<32>) == 0<32> l00010348_ds_t
l00010348_ds_t:
l00010348_ds_f:
l0001034C:
	word32 r4_192 = CONVERT(Mem258[r14_176 + 0x13744<32>:int8], int8, int32)
	branch r4_192 != 0<32> l0001036C
l0001036C:
	r14_176 = r14_176 + -1<i32>
l00010364:
	word32 r16_450
	word32 r14_449
	fn00009ED0(r14_176, r4_192, VR, out r14_449, out r16_450)
l00010380:
	r2_163 = r2_163 - 1<i32>
	branch r2_163 != 0xFFFFFFFF<32> l0001038C_ds_t
l0001038C_ds_t:
	r16_226 = r16_226 - 4<i32>
l0001038C_ds_f:
l00010390:
	return dwLoc78
fn000101A8_exit:


word32 fn000103C0(word32 r15, word32 VR, ptr32 & r9Out, ptr32 & r18Out, ptr32 & r20Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010570
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut: r18 r2 r20 r9
// Trashed: CV r1 r14 r16 r18 r2 r20 r22 r24 r26 r28 r9
// Preserved: r3 r4
fn000103C0_entry:
l000103C0:
	word32 r14_17 = 0x4358<32>
	word32 r20_30 = 0x134F8<32>
	word32 r22_32 = 0x1371C<32>
	word32 r18_33 = 0x4358<32>
	word32 r16_34 = 0<i32>
l00010424:
	branch (Mem29[0x134D0<32>:word32] >>u r16_34 & 1<32>) == 0<32> l0001048C
l0001043C:
	branch Mem29[r20_30:word32] == 0<32> l0001048C
l0001044C:
	word32 r2_50 = Mem29[0x13938<32>:word32]
l0001047C:
	branch r2_50 <=u Mem29[0x13934<32>:word32] l00010454
l00010454:
	branch (Mem29[r18_33:word32] >>u r2_50 & 1<32>) == 0<32> l00010478
l00010478:
	r2_50 = r2_50 + -1<i32>
l0001046C:
	word32 r22_331
	word32 r15_330
	fn00009C2C(r2_50, CONVERT(Mem29[r22_32:word16], word16, word32), r15, VR, out r15_330, out r22_331)
l0001048C:
	r16_34 = r16_34 + -1<i32>
	r20_30 = r20_30 + -4<i32>
	r18_33 = r18_33 + -4<i32>
	branch r16_34 != 0x14<32> l000104A0_ds_t
l000104A0_ds_t:
	r22_32 = r22_32 + -2<i32>
l000104A0_ds_f:
l000104A4:
	word32 r16_106 = 0<i32>
l000104C0:
	branch (Mem29[0x134D4<32>:word32] >>u r16_106 & 1<32>) != 0<32> l00010530
l000104D8:
	word32 r2_119 = Mem29[0x13938<32>:word32]
l00010520:
	branch r2_119 <=u Mem29[0x13934<32>:word32] l000104E0
l000104E0:
	branch (Mem29[r14_17:word32] >>u r2_119 & 1<32>) == 0<32> l0001051C
l000104F8:
	branch CONVERT(Mem29[r2_119 + 0x13744<32>:int8], int8, int32) != 0<32> l00010510_ds_t
l00010510_ds_t:
l0001051C:
	r2_119 = r2_119 + -1<i32>
l00010510_ds_f:
l00010514:
	word32 r16_333
	word32 r14_332
	fn00009ED0(r2_119, -1<i32>, VR, out r14_332, out r16_333)
l00010530:
	r16_106 = r16_106 + -1<i32>
	branch r16_106 != 0x14<32> l0001053C_ds_t
l0001053C_ds_t:
	r14_17 = r14_17 + -4<i32>
l0001053C_ds_f:
l00010540:
	r9Out = dwLoc54
	r18Out = dwLoc6C
	r20Out = dwLoc68
	return dwLoc78
fn000103C0_exit:


word32 fn00010570(word32 r3, word32 r9, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
//      fn00012214
// MayUse:  r15:[0..31] r3:[0..31] r9:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r11 r12 r13 r15 r17 r20 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8
// Preserved: r1 r14 r16 r18 r19 r2 r21 r23 r25 r27 r29 r31 r9
fn00010570_entry:
l00010570:
	word32 r11_3031
	fn0000AEDC(0xF3F31000<32>)
	fn0000ECC8(fp - 112<i32>, fp - 108<i32>)
	fn0000DF10(fp - 72<i32>, dwLoc18, -32<i32>)
	word32 r1_34 = <invalid>
	word32 r4_44 = Mem13[r1_34 + 40<i32>:word32]
	branch r4_44 <=u 0x447<32> l000105C4_ds_t
l000105C4_ds_t:
	r11_3031 = 0xFFFFFFF4<32>
l000105C4_ds_f:
l000105C8:
	word32 r2_59 = fn0000DF10(0x134E4<32>, (r4_44 >>u 1<32>) + dwLoc18, -548<i32>)
	word32 r1_57 = <invalid>
	Mem68[r1_57 + 16<i32>:word32] = Mem13[r3 + 44<i32>:word32]
	fn0000AEDC(0xF3F31001<32>)
	word32 r4_71 = Mem68[r2_59 + 16<i32>:word32]
	word32 r2_73 = Mem68[r2_59 + 12<i32>:word32]
	word32 r3_75 = r2_73 & r4_71
	Mem77[0x134D0<32>:word32] = r3_75
	Mem82[0x134D4<32>:word32] = r3_75 | r4_71 ^ 0xFFFF<32> | r2_73
	word32 r15_89 = fn0000AC84(r15)
	word32 r11_102
	Mem107[fn0000AF1C(-1<i32>, out r11_102):word32] = r11_102
	word32 r1_101 = <invalid>
l00010644:
	branch (Mem107[0x1700030<32>:word32] & 0x10000<32>) == 0<32> l00010658_ds_t
l00010658_ds_t:
l00010658_ds_f:
l0001065C:
	Mem125[r1_101:word32] = Mem107[0x134E4<32>:word32]
	word32 r15_132 = fn0000EDF4(-15<i32>, 0x12420<32>, r15_89, VR)
	fn0000AEDC(0xF3F32000<32>)
	fn0000AEDC(0xF3F33001<32>)
	fn00008CC8()
	word32 r1_146 = <invalid>
	branch (Mem125[r1_146 + 4<i32>:word32] & 0x3087F000<32>) == 0<32> l000106AC_ds_t
l000106AC_ds_t:
l000106AC_ds_f:
l000106B0:
	branch fn00009B70() != 1<32> l000106DC
l000106DC:
l000106E0:
	fn0000E4F0(0x48100C94<32>, r1_146 + -4<i32>, r9)
	fn0000AEDC(0xF3F33002<32>)
	word32 r9_186
	word32 r2_183 = fn0000875C(out r9_186)
	fn0000897C()
	fn0000AEDC(r2_183 | 0x3003<32>)
	fn00004844()
	fn0000AEDC(r2_183 | 0x3004<32>)
	Mem212[0x13708<32>:word32] = Mem125[0x1F02E18<32>:word32]
	Mem213[0x1F02E18<32>:word32] = 0<i32>
	word32 r2_217 = fn0000C768(-1<i32>)
	fn0000AEDC(r2_217 | 0x3005<32>)
	word32 r9_233 = fn0000E4F0(0x48100F2C<32>, 0x134E4<32>, r9_186)
	fn0000AEDC(r2_217 | 0x3006<32>)
	word32 r15_245
	word32 r2_247 = fn00008000(r15_132, out r15_245)
	word32 r1_1091 = <invalid>
	branch Mem213[r2_247 + 100<i32>:word32] == 0<32> l00010784_ds_t
l00010784_ds_t:
l00010804:
	fn0000AEDC(0xF3F33007<32>)
	word32 r15_266 = fn0000490C(r15_245)
	word32 r14_4493
	word32 r2_283 = fn0000B610(-1<i32>, -2<i32>, Mem213[r1_1091 + 20<i32>:word32], out r14_4493)
	fn0000AEDC(r2_283 | 0x3008<32>)
	fn0000DB28(-1600<i32>)
	fn0000AEDC(r2_283 | 0x3009<32>)
	branch (Mem213[0x134D0<32>:word32] & 0x10<32>) == 0<32> l00010860
l00010860:
	fn0000AEDC(0xF3F33091<32>)
	word32 r14_4495
	fn0000B610(-10<i32>, -1<i32>, Mem213[r1_1091 + 20<i32>:word32], out r14_4495)
	word32 r14_4496
	fn0000B610(-11<i32>, -23<i32>, Mem213[r1_1091 + 20<i32>:word32], out r14_4496)
	word32 r14_4497
	fn0000AEDC(fn0000B610(-13<i32>, -1<i32>, Mem213[r1_1091 + 20<i32>:word32], out r14_4497) | 0x3092<32>)
	branch (Mem213[0x13578<32>:word32] & 1<32>) != 0<32> l000108B0_ds_t
l000108B0_ds_t:
l000108B0_ds_f:
l000108B4:
	Mem351[0x1C20000<32>:word32] = Mem213[0x1C20000<32>:word32] & 0x7FFFFFFF<32>
l000108D0:
	branch (Mem355[0x13580<32>:word32] & 1<32>) == 0<32> l000108E4_ds_t
l000108E4_ds_t:
l000108E4_ds_f:
l000108E8:
	word32 r6_367 = Mem355[0x13584<32>:word32]
	Mem368[0x13718<32>:word32] = Mem355[0x1C20000<32>:word32] & 0xFFFC0000<32>
	Mem380[0x13718<32>:word32] = Mem368[0x13718<32>:word32] | r6_367 | Mem368[0x13590<32>:word32] << 0x10<32> | Mem368[0x1358C<32>:word32] << 8<32> | Mem368[0x13588<32>:word32] << 4<32>
	Mem382[0x1C20000<32>:word32] = Mem380[0x13718<32>:word32]
l00010944:
	fn0000AEDC(0xF3F33921<32>)
	branch (Mem389[0x13578<32>:word32] & 4<32>) != 0<32> l00010964_ds_t
l00010964_ds_t:
l00010964_ds_f:
l00010968:
	Mem401[0x1C20008<32>:word32] = Mem389[0x1C20008<32>:word32] & 0x7FFFFFFF<32>
l00010988:
	branch (Mem405[0x13580<32>:word32] & 4<32>) == 0<32> l0001099C_ds_t
l0001099C_ds_t:
l0001099C_ds_f:
l000109A0:
	word32 r6_418 = Mem405[0x135A4<32>:word32]
	Mem419[0x13718<32>:word32] = Mem405[0x1C20008<32>:word32] & 0xFFF00000<32>
	Mem431[0x13718<32>:word32] = Mem419[0x13718<32>:word32] | r6_418 | Mem419[0x135B0<32>:word32] << 0x12<32> | Mem419[0x135AC<32>:word32] << 0x10<32> | Mem419[0x135A8<32>:word32] << 8<32>
	Mem433[0x1C20008<32>:word32] = Mem431[0x13718<32>:word32]
l00010A00:
	fn0000AEDC(0xF3F33922<32>)
	branch (Mem440[0x13578<32>:word32] & 8<32>) != 0<32> l00010A20_ds_t
l00010A20_ds_t:
l00010A20_ds_f:
l00010A24:
	Mem452[0x1C20010<32>:word32] = Mem440[0x1C20010<32>:word32] & 0x7FFFFFFF<32>
l00010A44:
	branch (Mem456[0x13580<32>:word32] & 8<32>) == 0<32> l00010A58_ds_t
l00010A58_ds_t:
l00010A58_ds_f:
l00010A5C:
	word32 r6_470 = Mem456[0x135B4<32>:word32]
	Mem471[0x13718<32>:word32] = Mem456[0x1C20010<32>:word32] & 0xFFFF8000<32>
	Mem477[0x13718<32>:word32] = Mem471[0x13718<32>:word32] | r6_470 | Mem471[0x135B8<32>:word32] << 8<32>
	Mem479[0x1C20010<32>:word32] = Mem477[0x13718<32>:word32]
l00010AA4:
	fn0000AEDC(0xF3F33923<32>)
	branch (Mem486[0x13578<32>:word32] & 0x10<32>) != 0<32> l00010AC4_ds_t
l00010AC4_ds_t:
l00010AC4_ds_f:
l00010AC8:
	Mem498[0x1C20018<32>:word32] = Mem486[0x1C20018<32>:word32] & 0x7FFFFFFF<32>
l00010AE8:
	branch (Mem502[0x13580<32>:word32] & 0x10<32>) == 0<32> l00010AFC_ds_t
l00010AFC_ds_t:
l00010AFC_ds_f:
l00010B00:
	word32 r6_516 = Mem502[0x135C4<32>:word32]
	Mem517[0x13718<32>:word32] = Mem502[0x1C20018<32>:word32] & 0xFFFF8000<32>
	Mem523[0x13718<32>:word32] = Mem517[0x13718<32>:word32] | r6_516 | Mem517[0x135C8<32>:word32] << 8<32>
	Mem525[0x1C20018<32>:word32] = Mem523[0x13718<32>:word32]
l00010B48:
	fn0000AEDC(0xF3F33924<32>)
	branch (Mem532[0x13578<32>:word32] & 0x20<32>) != 0<32> l00010B68_ds_t
l00010B68_ds_t:
l00010B68_ds_f:
l00010B6C:
	Mem546[0x1C20020<32>:word32] = Mem532[0x1C20020<32>:word32] & 0x7FFFFFFF<32>
	Mem549[0x1C20020<32>:word32] = Mem546[0x1C20020<32>:word32] & 0xFFEFFFFF<32>
l00010BA0:
	branch (Mem553[0x13580<32>:word32] & 0x20<32>) == 0<32> l00010BB4_ds_t
l00010BB4_ds_t:
l00010BB4_ds_f:
l00010BB8:
	word32 r6_567 = Mem553[0x135D4<32>:word32]
	Mem568[0x13718<32>:word32] = Mem553[0x1C20020<32>:word32] & 0xFFFFE000<32>
	Mem578[0x13718<32>:word32] = Mem568[0x13718<32>:word32] | r6_567 | Mem568[0x135DC<32>:word32] << 8<32> | Mem568[0x135D8<32>:word32] << 4<32>
	Mem582[0x1C20020<32>:word32] = Mem578[0x1C20020<32>:word32] & 0xFFEFFFFF<32>
	Mem584[0x1C20020<32>:word32] = Mem582[0x13718<32>:word32]
l00010C20:
	fn0000AEDC(0xF3F33925<32>)
	branch (Mem591[0x13578<32>:word32] & 0x40<32>) != 0<32> l00010C40_ds_t
l00010C40_ds_t:
l00010C40_ds_f:
l00010C44:
	Mem603[0x1C20028<32>:word32] = Mem591[0x1C20028<32>:word32] & 0x7FFFFFFF<32>
l00010C64:
	branch (Mem607[0x13580<32>:word32] & 0x40<32>) == 0<32> l00010C78_ds_t
l00010C78_ds_t:
l00010C78_ds_f:
l00010C7C:
	word32 r6_616 = Mem607[0x135E4<32>:word32]
	Mem621[0x13718<32>:word32] = Mem607[0x1C20028<32>:word32] & 0xFFFF0000<32>
	Mem630[0x13718<32>:word32] = Mem621[0x13718<32>:word32] | r6_616 | Mem621[0x135EC<32>:word32] << 8<32> | Mem621[0x135E8<32>:word32] << 4<32>
	Mem632[0x1C20028<32>:word32] = Mem630[0x13718<32>:word32]
l00010CD0:
	fn0000AEDC(0xF3F33926<32>)
	branch (Mem639[0x13578<32>:word32] & 0x800<32>) != 0<32> l00010CF0_ds_t
l00010CF0_ds_t:
l00010CF0_ds_f:
l00010CF4:
	Mem651[0x1C2002C<32>:word32] = Mem639[0x1C2002C<32>:word32] & 0x7FFFFFFF<32>
l00010D14:
	branch (Mem655[0x13580<32>:word32] & 0x800<32>) == 0<32> l00010D28_ds_t
l00010D28_ds_t:
l00010D28_ds_f:
l00010D2C:
	word32 r7_668 = Mem655[0x13634<32>:word32]
	Mem669[0x13718<32>:word32] = Mem655[0x1C2002C<32>:word32] & 0xFFFC0000<32>
	word32 r5_670 = Mem669[0x1363C<32>:word32]
	Mem680[0x13718<32>:word32] = Mem669[0x13718<32>:word32] | r7_668 | r5_670 << 0x10<32> | r5_670 << 8<32> | Mem669[0x13638<32>:word32] << 4<32>
	Mem682[0x1C2002C<32>:word32] = Mem680[0x13718<32>:word32]
l00010D88:
	fn0000AEDC(0xF3F33927<32>)
	branch (Mem689[0x13578<32>:word32] & 0x400<32>) != 0<32> l00010DA8_ds_t
l00010DA8_ds_t:
l00010DA8_ds_f:
l00010DAC:
	Mem701[0x1C20030<32>:word32] = Mem689[0x1C20030<32>:word32] & 0x7FFFFFFF<32>
l00010DCC:
	branch (Mem705[0x13580<32>:word32] & 0x400<32>) == 0<32> l00010DE0_ds_t
l00010DE0_ds_t:
l00010DE0_ds_f:
l00010DE4:
	word32 r6_719 = Mem705[0x13624<32>:word32]
	Mem720[0x13718<32>:word32] = Mem705[0x1C20030<32>:word32] & 0xFFFF8000<32>
	Mem726[0x13718<32>:word32] = Mem720[0x13718<32>:word32] | r6_719 | Mem720[0x13628<32>:word32] << 8<32>
	Mem728[0x1C20030<32>:word32] = Mem726[0x13718<32>:word32]
l00010E2C:
	fn0000AEDC(0xF3F33928<32>)
	branch (Mem735[0x13578<32>:word32] & 0x80<32>) != 0<32> l00010E4C_ds_t
l00010E4C_ds_t:
l00010E4C_ds_f:
l00010E50:
	Mem747[0x1C20038<32>:word32] = Mem735[0x1C20038<32>:word32] & 0x7FFFFFFF<32>
l00010E70:
	branch (Mem751[0x13580<32>:word32] & 0x80<32>) == 0<32> l00010E84_ds_t
l00010E84_ds_t:
l00010E84_ds_f:
l00010E88:
	word32 r6_765 = Mem751[0x135F4<32>:word32]
	Mem766[0x13718<32>:word32] = Mem751[0x1C20038<32>:word32] & 0xFFFF8000<32>
	Mem772[0x13718<32>:word32] = Mem766[0x13718<32>:word32] | r6_765 | Mem766[0x135F8<32>:word32] << 8<32>
	Mem774[0x1C20038<32>:word32] = Mem772[0x13718<32>:word32]
l00010ED0:
	fn0000AEDC(0xF3F33929<32>)
	branch (Mem781[0x13578<32>:word32] & 0x2000<32>) != 0<32> l00010EF0_ds_t
l00010EF0_ds_t:
l00010EF0_ds_f:
l00010EF4:
	Mem793[0x1C20040<32>:word32] = Mem781[0x1C20040<32>:word32] & 0x7FFFFFFF<32>
l00010F14:
	branch (Mem797[0x13580<32>:word32] & 0x2000<32>) == 0<32> l00010F28_ds_t
l00010F28_ds_t:
l00010F28_ds_f:
l00010F2C:
	word32 r6_811 = Mem797[0x13654<32>:word32]
	Mem812[0x13718<32>:word32] = Mem797[0x1C20040<32>:word32] & 0xFFFFF000<32>
	Mem821[0x13718<32>:word32] = Mem812[0x13718<32>:word32] | r6_811 | Mem812[0x1365C<32>:word32] << 8<32> | Mem812[0x13658<32>:word32] << 4<32>
	Mem823[0x1C20040<32>:word32] = Mem821[0x13718<32>:word32]
l00010F80:
	fn0000AEDC(0xF3F3392A<32>)
	branch (Mem830[0x13578<32>:word32] & 0x100<32>) != 0<32> l00010FA0_ds_t
l00010FA0_ds_t:
l00010FA0_ds_f:
l00010FA4:
	Mem842[0x1C20044<32>:word32] = Mem830[0x1C20044<32>:word32] & 0x7FFFFFFF<32>
l00010FC4:
	branch (Mem846[0x13580<32>:word32] & 0x100<32>) == 0<32> l00010FD8_ds_t
l00010FD8_ds_t:
l00010FD8_ds_f:
l00010FDC:
	word32 r6_860 = Mem846[0x13604<32>:word32]
	Mem861[0x13718<32>:word32] = Mem846[0x1C20044<32>:word32] & 0xFFFF8000<32>
	Mem867[0x13718<32>:word32] = Mem861[0x13718<32>:word32] | r6_860 | Mem861[0x13608<32>:word32] << 8<32>
	Mem869[0x1C20044<32>:word32] = Mem867[0x13718<32>:word32]
l00011024:
	fn0000AEDC(0xF3F3392B<32>)
	branch (Mem876[0x13578<32>:word32] & 0x200<32>) != 0<32> l00011044_ds_t
l00011044_ds_t:
l00011044_ds_f:
l00011048:
	Mem888[0x1C20048<32>:word32] = Mem876[0x1C20048<32>:word32] & 0x7FFFFFFF<32>
l00011068:
	branch (Mem892[0x13580<32>:word32] & 0x200<32>) == 0<32> l0001107C_ds_t
l0001107C_ds_t:
l0001107C_ds_f:
l00011080:
	word32 r6_906 = Mem892[0x13614<32>:word32]
	Mem907[0x13718<32>:word32] = Mem892[0x1C20048<32>:word32] & 0xFFFF8000<32>
	Mem913[0x13718<32>:word32] = Mem907[0x13718<32>:word32] | r6_906 | Mem907[0x13618<32>:word32] << 8<32>
	Mem915[0x1C20048<32>:word32] = Mem913[0x13718<32>:word32]
l000110C8:
	fn0000AEDC(0xF3F3392C<32>)
	branch (Mem922[0x13578<32>:word32] & 0x1000<32>) != 0<32> l000110E8_ds_t
l000110E8_ds_t:
l000110E8_ds_f:
l000110EC:
	Mem936[0x1C2004C<32>:word32] = Mem922[0x1C2004C<32>:word32] & 0x7FFFFFFF<32>
	Mem939[0x1C2004C<32>:word32] = Mem936[0x1C2004C<32>:word32] & 0xBFFFFFFF<32>
l00011120:
	branch (Mem943[0x13580<32>:word32] & 0x1000<32>) == 0<32> l00011134_ds_t
l00011134_ds_t:
l00011134_ds_f:
l00011138:
	word32 r6_957 = Mem943[0x13644<32>:word32]
	Mem958[0x13718<32>:word32] = Mem943[0x1C2004C<32>:word32] & 0xFFFF8000<32>
	Mem965[0x13718<32>:word32] = Mem958[0x13718<32>:word32] | r6_957 | Mem958[0x13648<32>:word32] << 8<32>
	Mem969[0x1C2004C<32>:word32] = Mem965[0x1C2004C<32>:word32] & 0xBFFFFFFF<32>
	Mem971[0x1C2004C<32>:word32] = Mem969[0x13718<32>:word32]
l00011194:
	fn0000AEDC(0xF3F33093<32>)
	branch (Mem978[0x13664<32>:word32] & 1<32>) == 0<32> l000111B4_ds_t
l000111B4_ds_t:
l000111C0:
	branch (Mem978[0x13664<32>:word32] & 4<32>) == 0<32> l000111D8_ds_t
l000111D8_ds_t:
l000111E4:
	branch (Mem978[0x13664<32>:word32] & 0x10<32>) == 0<32> l000112D4
l00011200:
	word32 r4_996 = Mem978[0x136B8<32>:word32]
	branch (0<32> - (r4_996 ^ 3<32>) | r4_996 ^ 3<32>) >= 0<i32> l00011218_ds_t
l00011218_ds_t:
l00011218_ds_f:
l0001121C:
	branch (0<32> - (r4_996 ^ 1<32>) | r4_996 ^ 1<32>) < 0<i32> l0001122C_ds_t
l0001122C_ds_t:
l00011280:
	branch r4_996 != 0xB<32> l00011284_ds_t
l00011284_ds_t:
l000112D4:
l00011284_ds_f:
l00011288:
	word32 r4_1021 = Mem978[0x136C0<32>:word32] << 4<32> | Mem978[0x136BC<32>:word32] << 6<32> | Mem978[0x1C20054<32>:word32] & 0xFFFFFF0F<32>
	Mem1024[0x13714<32>:word32] = r4_1021
	Mem1025[0x1C20054<32>:word32] = r4_1021
	word32 r1_1028 = <invalid>
	word32 r14_4501
	fn0000B610(-10<i32>, Mem1025[fn0000C768(-1<i32>) + 468<i32>:word32], Mem1025[r1_1028 + 20<i32>:word32], out r14_4501)
l0001122C_ds_f:
l00011230:
	word32 r14_4499
	fn0000B610(-10<i32>, r4_996, Mem978[r1_1091 + 20<i32>:word32], out r14_4499)
	word32 r2_1092 = fn0000C768(-1<i32>)
	word32 r3_1107 = Mem978[0x136C0<32>:word32] << 4<32> | Mem978[r2_1092:word32] & 0xFFFFFFCF<32>
	Mem1110[0x13714<32>:word32] = r3_1107
	Mem1111[r2_1092:word32] = r3_1107
	r1_1091 = <invalid>
l000112D8:
	branch (Mem1115[0x13664<32>:word32] & 0x20<32>) == 0<32> l000112EC_ds_t
l000112EC_ds_t:
l000112F8:
	branch (Mem1115[0x13664<32>:word32] & 0x40<32>) == 0<32> l00011310_ds_t
l00011310_ds_t:
l00011310_ds_f:
l00011314:
	word32 r2_1136 = Mem1115[0x136E8<32>:word32] << 8<32> | Mem1115[0x1C20054<32>:word32] & 0xFFFFFCFF<32>
	Mem1139[0x13714<32>:word32] = r2_1136
	Mem1140[0x1C20054<32>:word32] = r2_1136
l00011340:
	branch (Mem1143[0x13664<32>:word32] & 0x80<32>) == 0<32> l000113A0
l0001135C:
	word32 r14_4502
	word32 r2_1157 = fn0000B610(-13<i32>, Mem1143[0x136F4<32>:word32], Mem1143[r1_1091 + 20<i32>:word32], out r14_4502)
	word32 r2_1170 = Mem1143[0x1C20058<32>:word32] & 0xFFFC0000<32> | Mem1143[r2_1157 + 544<i32>:word32] | Mem1143[r2_1157 + 540<i32>:word32] << 0x10<32>
	Mem1173[0x13714<32>:word32] = r2_1170
	Mem1174[0x1C20058<32>:word32] = r2_1170
l000113A0:
	word32 r2_1178 = Mem1177[0x13574<32>:word32]
	branch (r2_1178 & 8<32>) != 0<32> l000113B8_ds_t
l000113B8_ds_t:
l000113DC:
	branch (r2_1178 & 3<32>) != 0<32> l000113E8_ds_t
l000113E8_ds_t:
l000113E8_ds_f:
l000113EC:
	Mem1194[r1_1091 + 36<i32>:word32] = Mem1177[0x1F01444<32>:word32] | 0xA7000000<32>
	Mem1196[0x1F01444<32>:word32] = Mem1194[r1_1091 + 36<i32>:word32]
	Mem1199[r1_1091 + 36<i32>:word32] = Mem1196[0x1F01444<32>:word32] | 0xA7000000<32>
	Mem1202[r1_1091 + 36<i32>:word32] = Mem1199[r1_1091 + 36<i32>:word32] & 0xFFFFFFFC<32>
	Mem1204[0x1F01444<32>:word32] = Mem1202[r1_1091 + 36<i32>:word32]
l0001142C:
l000113B8_ds_f:
l000113BC:
	word32 r14_4503
	fn0000B610(-1<i32>, -2<i32>, Mem1177[r1_1091 + 20<i32>:word32], out r14_4503)
	fn0000C768(-1<i32>)
	fn0000BAC8(r9_233)
l00011430:
	fn0000AEDC(0xF3F3300A<32>)
	branch (Mem1274[0x134D4<32>:word32] & 0x10<32>) != 0<32> l00011450_ds_t
l00011450_ds_t:
l00011450_ds_f:
l00011454:
	fn0000B950(-11<i32>)
	fn0000B950(-12<i32>)
l00011470:
	branch (Mem1274[0x134D4<32>:word32] & 8<32>) != 0<32> l00011484_ds_t
l00011484_ds_t:
l00011484_ds_f:
l00011488:
	fn0000B950(-15<i32>)
l00011498:
	branch (Mem1274[0x134D4<32>:word32] & 0x10<32>) != 0<32> l000114B8
l000114B8:
	fn0000AEDC(0xF3F3300B<32>)
	word32 r2_1403 = fn000101A8(r15_266, VR)
	fn0000AEDC(r2_1403 | 0x300C<32>)
	Mem1422[0x134DC<32>:word32] = 0<i32>
	fn0000AEDC(r2_1403 | 0x4000<32>)
	word32 r15_1431 = fn0000EDF4(-15<i32>, 0x1242A<32>, r15_266, VR)
	fn0000AEDC(r2_1403 | 0x5000<32>)
	Mem1447[0x134E0<32>:word32] = 0<i32>
	word32 r1_1398 = <invalid>
	word32 r2_1448 = 0<32>
l0001151C:
	word32 r3_1457
	branch (Mem1447[r1_1398 + 4<i32>:word32] & 0x3087F000<32>) == 0<32> l00011530_ds_t
l00011530_ds_t:
	r3_1457 = Mem1447[r1_1398 + 4<i32>:word32]
l00011530_ds_f:
l00011534:
	r1_1398 = <invalid>
	branch fn00008C74(0<i32>) == 0<32> l00011568
l00011548:
	fn00008CA4(0<i32>)
	word32 r11_1481
	r2_1448 = fn0000A22C(0x134E0<32>, VR, out r11_1481)
	r1_1398 = <invalid>
	branch r11_1481 == 0<32> l00011734
l00011568:
	r3_1457 = Mem1447[r1_1398 + 4<i32>:word32]
l0001156C:
	word32 r3_1555
	word32 r3_1505
	branch (r3_1457 & 0x800000<32>) == 0<32> l0001157C_ds_t
l0001157C_ds_t:
	r3_1505 = Mem1447[r1_1398 + 4<i32>:word32]
l0001157C_ds_f:
l00011580:
	word32 r4_1517
	word32 r1_1509 = <invalid>
	branch fn00008C74(-13<i32>) != 0<32> l00011590_ds_t
l00011590_ds_t:
	r4_1517 = Mem1447[r1_1509 + 24<i32>:word32]
l00011590_ds_f:
l00011594:
	word32 r1_1521 = <invalid>
	branch fn00008C74(-20<i32>) != 0<32> l000115A4_ds_t
l000115A4_ds_t:
	r4_1517 = Mem1447[r1_1521 + 24<i32>:word32]
l000115A4_ds_f:
l000115A8:
	r1_1398 = <invalid>
	branch fn00008C74(-21<i32>) == 0<32> l000115B8_ds_t
l000115B8_ds_t:
	r3_1505 = Mem1447[r1_1398 + 4<i32>:word32]
l000115B8_ds_f:
l000115BC:
	r4_1517 = Mem1447[r1_1398 + 24<i32>:word32]
l000115C0:
	word32 r11_1549
	r2_1448 = fn00009958(-1<i32>, r4_1517 & 0xFFF<32>, out r11_1549)
	r1_1398 = <invalid>
	branch !(r11_1549 == 0<32>) l000115D4_ds_t
l000115D4_ds_t:
	r3_1555 = 0x800000<32>
l000115D4_ds_f:
l000115D8:
	r3_1505 = Mem1447[r1_1398 + 4<i32>:word32]
l000115DC:
	word32 r3_1565
	branch (r3_1505 & 0x80000<32>) == 0<32> l000115EC_ds_t
l000115EC_ds_t:
	r3_1565 = Mem1447[r1_1398 + 4<i32>:word32]
l000115EC_ds_f:
l000115F0:
	r1_1398 = <invalid>
	branch fn00008C74(-5<i32>) == 0<32> l00011600_ds_t
l00011600_ds_t:
	r3_1565 = Mem1447[r1_1398 + 4<i32>:word32]
l00011600_ds_f:
l00011604:
	fn00008CA4(-5<i32>)
	branch !(fn000092CC(out r15_1431) != 1<32>) l0001161C_ds_t
l0001161C_ds_t:
	r3_1555 = 0x80000<32>
l0001161C_ds_f:
l00011620:
	r3_1565 = Mem1447[r1_1398 + 4<i32>:word32]
l00011624:
	word32 r3_1609
	branch (r3_1565 & 0x100000<32>) == 0<32> l00011634_ds_t
l00011634_ds_t:
	r3_1609 = Mem1447[r1_1398 + 4<i32>:word32]
l00011634_ds_f:
l00011638:
	r1_1398 = <invalid>
	branch !(fn00008C74(-8<i32>) == 0<32>) l00011648_ds_t
l00011648_ds_t:
	r3_1555 = 0x100000<32>
l00011648_ds_f:
l0001164C:
	r3_1609 = Mem1447[r1_1398 + 4<i32>:word32]
l00011650:
	word32 r3_1630
	branch (r3_1609 & 0x200000<32>) == 0<32> l00011660_ds_t
l00011660_ds_t:
	r3_1630 = Mem1447[r1_1398 + 4<i32>:word32]
l00011660_ds_f:
l00011664:
	r1_1398 = <invalid>
	branch !(fn00008C74(-9<i32>) == 0<32>) l00011674_ds_t
l00011674_ds_t:
	r3_1555 = 0x200000<32>
l00011674_ds_f:
l00011678:
	r3_1630 = Mem1447[r1_1398 + 4<i32>:word32]
l0001167C:
	word32 r3_1651
	branch (r3_1630 & 0x400000<32>) == 0<32> l0001168C_ds_t
l0001168C_ds_t:
	r3_1651 = Mem1447[r1_1398 + 4<i32>:word32]
l0001168C_ds_f:
l00011690:
	branch r2_1448 >=u Mem1447[r1_1398 + 20<i32>:word32] l000116B4
l000116B4:
	r3_1555 = 0x400000<32>
l000116A0:
	r2_1448 = fn0000C768(-1<i32>)
	r1_1398 = <invalid>
	r3_1651 = Mem1447[r1_1398 + 4<i32>:word32]
l000116BC:
	word32 r3_1681
	branch (r3_1651 & 0x1000000<32>) == 0<32> l000116CC_ds_t
l000116CC_ds_t:
	r3_1681 = Mem1447[r1_1398 + 4<i32>:word32]
l000116CC_ds_f:
l000116D0:
	branch fn00008C74(-27<i32>) != 0<32> l000116E0_ds_t
l000116E0_ds_t:
	r3_1555 = 0x1000000<32>
l000116E0_ds_f:
l000116E4:
	r1_1398 = <invalid>
	branch !(fn00008C74(-28<i32>) == 0<32>) l000116F4_ds_t
l000116F4_ds_t:
	r3_1555 = 0x1000000<32>
l000116F4_ds_f:
l000116F8:
	r3_1681 = Mem1447[r1_1398 + 4<i32>:word32]
l000116FC:
	branch (r3_1681 & 0xA000000<32>) == 0<32> l0001170C_ds_t
l0001170C_ds_t:
l0001170C_ds_f:
l00011710:
	r1_1398 = <invalid>
	branch fn00008C74(-22<i32>) == 0<32> l00011720_ds_t
l00011720_ds_t:
l00011720_ds_f:
l00011724:
	r3_1555 = 0xA000000<32>
l00011728:
	Mem1730[0x134E0<32>:word32] = r3_1555
l00011734:
	fn0000AEDC(0xF3F36000<32>)
	fn0000AEDC(0xF3F37001<32>)
	word32 r18_1762
	word32 r20_1764
	word32 r9_1769
	fn0000AEDC(fn000103C0(r15_1431, VR, out r9_1769, out r18_1762, out r20_1764) | 0x7002<32>)
	branch (Mem1776[0x134D4<32>:word32] & 0x10<32>) != 0<32> l00011770_ds_t
l00011770_ds_t:
l00011788:
	word32 r1_1786 = <invalid>
	branch (Mem1776[fn0000C768(-1<i32>):word32] & 0x10<32>) != 0<32> l000117A8_ds_t
l000117A8_ds_t:
l000117BC:
	word32 r2_1859
	fn0000AEDC(0xF3F37003<32>)
	word32 r2_1804 = Mem1776[0x13574<32>:word32]
	branch (r2_1804 & 8<32>) != 0<32> l00011808
l00011808:
	branch (r2_1804 & 3<32>) != 0<32> l00011814_ds_t
l00011814_ds_t:
l00011814_ds_f:
l00011818:
	Mem1816[r1_1786 + 36<i32>:word32] = Mem1776[0x1F01444<32>:word32] | 0xA7000000<32>
	Mem1818[0x1F01444<32>:word32] = Mem1816[r1_1786 + 36<i32>:word32]
	Mem1821[r1_1786 + 36<i32>:word32] = Mem1818[0x1F01444<32>:word32] | 0xA7000000<32>
	Mem1824[r1_1786 + 36<i32>:word32] = Mem1821[r1_1786 + 36<i32>:word32] | 1<32>
	Mem1826[0x1F01444<32>:word32] = Mem1824[r1_1786 + 36<i32>:word32]
	word32 r2_1830 = fn0000C768(-2<i32>)
	r1_1786 = <invalid>
	Mem1842[r1_1786 + 36<i32>:word32] = Mem1826[r2_1830:word32] | 0xA7000000<32>
	Mem1845[r2_1830:word32] = Mem1842[r1_1786 + 36<i32>:word32]
	Mem1848[r1_1786 + 36<i32>:word32] = Mem1845[r2_1830:word32] | 0xA7000000<32>
	Mem1851[r1_1786 + 36<i32>:word32] = Mem1848[r1_1786 + 36<i32>:word32] & 0xFFF8FFFF<32>
	Mem1854[r1_1786 + 36<i32>:word32] = Mem1851[r1_1786 + 36<i32>:word32] | 0x40000<32>
	Mem1856[r2_1830:word32] = Mem1854[r1_1786 + 36<i32>:word32]
l000118B4:
	r2_1859 = 0x134E4<32>
l000117E4:
	fn0000BB60(r9_1769)
	fn0000C768(-1<i32>)
	r1_1786 = <invalid>
	word32 r14_4504
	r2_1859 = fn0000B610(-1<i32>, -3<i32>, Mem1776[r1_1786 + 20<i32>:word32], out r14_4504) | 0x34E4<32>
l000118B8:
	branch (Mem1891[r2_1859 + 384<i32>:word32] & 5<32>) == 0<32> l000118C8_ds_t
l000118C8_ds_t:
l000118C8_ds_f:
l000118CC:
	word32 r14_4505
	fn0000B610(-4<i32>, -3<i32>, Mem1891[r1_1786 + 20<i32>:word32], out r14_4505)
	fn0000C768(-1<i32>)
	fn0000B0B8(-20<i32>, -1<i32>)
	r1_1786 = <invalid>
l000118F0:
	branch (Mem1891[0x13664<32>:word32] & 0x50<32>) == 0<32> l00011904_ds_t
l00011904_ds_t:
l00011944:
	branch (Mem1891[0x13664<32>:word32] & 0x20<32>) == 0<32> l0001195C_ds_t
l0001195C_ds_t:
l0001195C_ds_f:
l00011960:
	word32 r14_4507
	fn0000B610(-11<i32>, -23<i32>, Mem1891[r1_1786 + 20<i32>:word32], out r14_4507)
l00011970:
	branch (Mem1891[0x13664<32>:word32] & 0x80<32>) == 0<32> l00011984_ds_t
l00011984_ds_t:
l00011984_ds_f:
l00011988:
	word32 r14_4508
	fn0000B610(-13<i32>, -3<i32>, Mem1891[r1_1786 + 20<i32>:word32], out r14_4508)
	word32 r2_1986 = fn0000C768(-1<i32>)
	r1_1786 = <invalid>
	Mem1996[r1_1786 + 36<i32>:word32] = Mem1891[r2_1986:word32] & 0xFF000000<32>
	Mem1998[r2_1986:word32] = Mem1996[r1_1786 + 36<i32>:word32]
l000119B8:
	branch (Mem2001[0x13580<32>:word32] & 1<32>) == 0<32> l000119D0_ds_t
l000119D0_ds_t:
l000119D0_ds_f:
l000119D4:
	Mem2010[0x1C20000<32>:word32] = -4096<i32>
l000119E4:
	branch (Mem2014[0x1357C<32>:word32] & 1<32>) == 0<32> l000119F8_ds_t
l000119F8_ds_t:
l000119F8_ds_f:
l000119FC:
	Mem2024[0x1C20000<32>:word32] = Mem2014[0x1C20000<32>:word32] | 0x80000000<32>
l00011A14:
	branch (Mem2028[0x13580<32>:word32] & 4<32>) == 0<32> l00011A28_ds_t
l00011A28_ds_t:
l00011A28_ds_f:
l00011A2C:
	Mem2038[0x1C20008<32>:word32] = 0x35514<32>
l00011A44:
	branch (Mem2042[0x1357C<32>:word32] & 4<32>) == 0<32> l00011A58_ds_t
l00011A58_ds_t:
l00011A58_ds_f:
l00011A5C:
	Mem2053[0x1C20008<32>:word32] = Mem2042[0x1C20008<32>:word32] | 0x80000000<32>
l00011A78:
	branch (Mem2057[0x13580<32>:word32] & 8<32>) == 0<32> l00011A8C_ds_t
l00011A8C_ds_t:
l00011A8C_ds_f:
l00011A90:
	Mem2067[0x1C20010<32>:word32] = 0x3006207<32>
l00011AA8:
	branch (Mem2071[0x1357C<32>:word32] & 8<32>) == 0<32> l00011ABC_ds_t
l00011ABC_ds_t:
l00011ABC_ds_f:
l00011AC0:
	Mem2082[0x1C20010<32>:word32] = Mem2071[0x1C20010<32>:word32] | 0x80000000<32>
l00011ADC:
	branch (Mem2086[0x13580<32>:word32] & 0x10<32>) == 0<32> l00011AF0_ds_t
l00011AF0_ds_t:
l00011AF0_ds_f:
l00011AF4:
	Mem2096[0x1C20018<32>:word32] = 0x3006207<32>
l00011B0C:
	branch (Mem2100[0x1357C<32>:word32] & 0x10<32>) == 0<32> l00011B20_ds_t
l00011B20_ds_t:
l00011B20_ds_f:
l00011B24:
	Mem2111[0x1C20018<32>:word32] = Mem2100[0x1C20018<32>:word32] | 0x80000000<32>
l00011B40:
	branch (Mem2115[0x13580<32>:word32] & 0x20<32>) == 0<32> l00011B54_ds_t
l00011B54_ds_t:
l00011B54_ds_f:
l00011B58:
	Mem2126[0x1C20020<32>:word32] = -4096<i32>
	Mem2129[0x1C20020<32>:word32] = Mem2126[0x1C20020<32>:word32] | 0x40000000<32>
l00011B7C:
	branch (Mem2133[0x1357C<32>:word32] & 0x20<32>) == 0<32> l00011B90_ds_t
l00011B90_ds_t:
l00011B90_ds_f:
l00011B94:
	Mem2145[0x1C20020<32>:word32] = Mem2133[0x1C20020<32>:word32] | 0x80000000<32>
	Mem2148[0x1C20020<32>:word32] = Mem2145[0x1C20020<32>:word32] | 0x40000000<32>
l00011BC0:
	branch (Mem2152[0x13580<32>:word32] & 0x40<32>) == 0<32> l00011BD4_ds_t
l00011BD4_ds_t:
l00011BD4_ds_f:
l00011BD8:
	Mem2162[0x1C20028<32>:word32] = 0x41811<32>
l00011BF0:
	branch (Mem2166[0x1357C<32>:word32] & 0x40<32>) == 0<32> l00011C04_ds_t
l00011C04_ds_t:
l00011C04_ds_f:
l00011C08:
	Mem2177[0x1C20028<32>:word32] = Mem2166[0x1C20028<32>:word32] | 0x80000000<32>
l00011C24:
	branch (Mem2181[0x13580<32>:word32] & 0x800<32>) == 0<32> l00011C38_ds_t
l00011C38_ds_t:
l00011C38_ds_f:
l00011C3C:
	Mem2191[0x1C2002C<32>:word32] = 0x41811<32>
l00011C54:
	branch (Mem2195[0x1357C<32>:word32] & 0x800<32>) == 0<32> l00011C68_ds_t
l00011C68_ds_t:
l00011C68_ds_f:
l00011C6C:
	Mem2206[0x1C2002C<32>:word32] = Mem2195[0x1C2002C<32>:word32] | 0x80000000<32>
l00011C88:
	branch (Mem2210[0x13580<32>:word32] & 0x400<32>) == 0<32> l00011C9C_ds_t
l00011C9C_ds_t:
l00011C9C_ds_f:
l00011CA0:
	Mem2220[0x1C20030<32>:word32] = 0x3006207<32>
l00011CB8:
	branch (Mem2224[0x1357C<32>:word32] & 0x400<32>) == 0<32> l00011CCC_ds_t
l00011CCC_ds_t:
l00011CCC_ds_f:
l00011CD0:
	Mem2235[0x1C20030<32>:word32] = Mem2224[0x1C20030<32>:word32] | 0x80000000<32>
l00011CEC:
	branch (Mem2239[0x13580<32>:word32] & 0x80<32>) == 0<32> l00011D00_ds_t
l00011D00_ds_t:
l00011D00_ds_f:
l00011D04:
	Mem2249[0x1C20038<32>:word32] = 0x3006207<32>
l00011D1C:
	branch (Mem2253[0x1357C<32>:word32] & 0x80<32>) == 0<32> l00011D30_ds_t
l00011D30_ds_t:
l00011D30_ds_f:
l00011D34:
	Mem2264[0x1C20038<32>:word32] = Mem2253[0x1C20038<32>:word32] | 0x80000000<32>
l00011D50:
	branch (Mem2268[0x13580<32>:word32] & 0x2000<32>) == 0<32> l00011D64_ds_t
l00011D64_ds_t:
l00011D64_ds_f:
l00011D68:
	Mem2278[0x1C20040<32>:word32] = -1301<i32>
l00011D7C:
	branch (Mem2282[0x1357C<32>:word32] & 0x2000<32>) == 0<32> l00011D90_ds_t
l00011D90_ds_t:
l00011D90_ds_f:
l00011D94:
	Mem2293[0x1C20040<32>:word32] = Mem2282[0x1C20040<32>:word32] | 0x80000000<32>
l00011DB0:
	branch (Mem2297[0x13580<32>:word32] & 0x100<32>) == 0<32> l00011DC4_ds_t
l00011DC4_ds_t:
l00011DC4_ds_f:
l00011DC8:
	Mem2307[0x1C20044<32>:word32] = 0x3001300<32>
l00011DE0:
	branch (Mem2311[0x1357C<32>:word32] & 0x100<32>) == 0<32> l00011DF4_ds_t
l00011DF4_ds_t:
l00011DF4_ds_f:
l00011DF8:
	Mem2322[0x1C20044<32>:word32] = Mem2311[0x1C20044<32>:word32] | 0x80000000<32>
l00011E14:
	branch (Mem2326[0x13580<32>:word32] & 0x200<32>) == 0<32> l00011E28_ds_t
l00011E28_ds_t:
l00011E28_ds_f:
l00011E2C:
	Mem2336[0x1C20048<32>:word32] = 0x3006207<32>
l00011E44:
	branch (Mem2340[0x1357C<32>:word32] & 0x200<32>) == 0<32> l00011E58_ds_t
l00011E58_ds_t:
l00011E58_ds_f:
l00011E5C:
	Mem2351[0x1C20048<32>:word32] = Mem2340[0x1C20048<32>:word32] | 0x80000000<32>
l00011E78:
	branch (Mem2355[0x13580<32>:word32] & 0x1000<32>) == 0<32> l00011E8C_ds_t
l00011E8C_ds_t:
l00011E8C_ds_f:
l00011E90:
	Mem2366[0x1C2004C<32>:word32] = -4096<i32>
	Mem2369[0x1C2004C<32>:word32] = Mem2366[0x1C2004C<32>:word32] | 0x40000000<32>
l00011EB4:
	branch (Mem2373[0x1357C<32>:word32] & 0x1000<32>) == 0<32> l00011EC8_ds_t
l00011EC8_ds_t:
l00011EC8_ds_f:
l00011ECC:
	Mem2385[0x1C2004C<32>:word32] = Mem2373[0x1C2004C<32>:word32] | 0x80000000<32>
	Mem2388[0x1C2004C<32>:word32] = Mem2385[0x1C2004C<32>:word32] | 0x40000000<32>
l00011EF8:
	branch (Mem2392[0x134D0<32>:word32] & 0x10<32>) == 0<32> l00011F18
l00011F18:
	fn0000AEDC(0xF3F37004<32>)
	word32 r15_2461 = fn00004A6C(r15_1431)
	fn0000AEDC(0xF3F37005<32>)
	branch Mem2392[0x13548<32>:word32] == 0<32> l00011F48_ds_t
l00011F48_ds_t:
l00011F48_ds_f:
l00011F4C:
	Mem2486[0x1C20028<32>:word32] = Mem2392[0x1C20028<32>:word32] & 0x7FFFFFFF<32>
	Mem2491[0x1C20028<32>:word32] = Mem2486[0x1370C<32>:word32] & 0x7FFFFFFF<32>
	word32 r15_2504
	word32 r14_4509
	word32 r2_2495 = fn0000C8A0(-100<i32>, r15_2461, out r14_4509, out r15_2504)
	Mem2514[r2_2495:word32] = Mem2491[r2_2495:word32] | 0x80000000<32>
	word32 r14_2522
	word32 r15_2528
	Mem2537[fn0000C8A0(-20<i32>, r15_2504, out r14_2522, out r15_2528):word32] = Mem2514[r14_2522:word32] & 7<32>
	word32 r14_2544
	word32 r15_2550
	Mem2561[fn0000C8A0(-200<i32>, r15_2528, out r14_2544, out r15_2550):word32] = Mem2537[r14_2544:word32] & 0x3000007<32>
	word32 r15_2574
	word32 r14_4510
	word32 r2_2565 = fn0000C8A0(-20<i32>, r15_2550, out r14_4510, out r15_2574)
	Mem2584[r2_2565:word32] = Mem2561[r2_2565:word32] | 0x80000000<32>
	word32 r14_2591
	word32 r15_2597
	fn0000C8A0(-10000<i32>, r15_2574, out r14_2591, out r15_2597)
	r9_1769 = fn00007FAC(r14_2591, r15_2597, r18_1762, r20_1764, out r15_2461)
	branch fn0000E5BC() == 0<32> l00012064
l00012008:
	word32 r11_2745
	Mem2761[fn0000E5CC(fn00008030(-16<i32>, -1<i32>, r15_2461), VR, out r9_1769, out r11_2745, out r15_2461):word32] = r11_2745
	branch r11_2745 == Mem2761[0x1396C<32>:word32] l00012064
l00012064:
	word32 r15_2772
	word32 r2_2774 = fn00007FD0(r15_2461, out r15_2772)
	fn0000AEDC(r2_2774 | 0x7006<32>)
	fn0000E4F0(0x48100F7C<32>, 0x134E4<32>, r9_1769)
	fn0000AEDC(r2_2774 | 0x7007<32>)
	Mem2841[0x1F02E18<32>:word32] = Mem2836[0x13708<32>:word32]
	word32 r2_2845 = fn0000C768(-1<i32>)
	fn0000AEDC(r2_2845 | 0x7008<32>)
	fn0000AEDC(r2_2845 | 0x7009<32>)
	word32 r2_2858 = fn00008788()
	fn00008998()
	fn0000AEDC(r2_2858 | 0x700A<32>)
	fn00004978()
	fn0000AEDC(r2_2858 | 0x700B<32>)
	word32 r16_2835 = 0x13970<32>
	word32 r14_2839 = 0x1396C<32>
	word32 r15_2891 = fn0000EDF4(-15<i32>, 0x12443<32>, r15_2772, VR)
l00012110:
	word32 r11_2902 = fn00008674()
	branch r11_2902 == 0<32> l00012120_ds_t
l00012120_ds_t:
l00012120_ds_f:
l00012124:
	branch CONVERT(Mem2913[r11_2902 + 2<i32>:byte], byte, word32) != 0x11<32> l00012130_ds_t
l00012130_ds_t:
l00012130_ds_f:
l00012134:
	word32 r4_2923 = Mem2913[r16_2835:word32]
	Mem2924[r11_2902 + 40<i32>:word32] = Mem2913[0x134E0<32>:word32]
	word32 r3_2927 = r4_2923 ^ Mem2924[r14_2839:word32]
	Mem2928[r11_2902:byte] = 0xFB<8>
	Mem2933[r11_2902 + 44<i32>:word32] = (0<32> - r3_2927 | r3_2927) >>u 0x1F<32>
l0001215C:
	word32 r9_2949
	word32 r1_2943
	word32 r2_2954
	branch (CONVERT(Mem2935[r11_2902 + 1<i32>:byte], byte, word32) & 3<32>) == 0<32> l0001216C_ds_t
l0001216C_ds_t:
l00012180:
	r1_2943 = <invalid>
	r2_2954 = CONVERT(Mem2935[fn0000F368(r11_2902, VR, out r9_2949, out r14_2839):byte], byte, word32)
l0001216C_ds_f:
l00012170:
	r1_2943 = <invalid>
	r2_2954 = CONVERT(Mem2935[fn00008574(r11_2902, -4000<i32>, out r9_2949, out r14_2839, out r16_2835):byte], byte, word32)
l0001218C:
	branch r2_2954 != 5<32> l00012194_ds_t
l00012194_ds_t:
l00012194_ds_f:
l00012198:
	fn0000AEDC(0xF3F3700C<32>)
	fn0000E4F0(0x48100DF4<32>, r1_2943 + -4<i32>, r9_2949)
	fn0000AEDC(0xF3F3700D<32>)
	fn0000AEDC(0xF3F38000<32>)
	word32 r14_4511
	Mem3014[r1_2943:word32] = Mem2935[fn0000B610(-1<i32>, Mem2935[0x134D8<32>:word32], Mem2935[r1_2943 + 20<i32>:word32], out r14_4511) | 0x34E4<32>:word32]
	fn0000EDF4(-15<i32>, 0x12459<32>, r15_2891, VR)
	r11_3031 = 0<i32>
l000121F8:
	return r11_3031
fn00010570_exit:
l00012040:
	fn0000AEDC(0xF1F1900F<32>)
	fn0000EDF4(-15<i32>, 0x12430<32>, r15_2461, VR)
l0001205C:
l00011F10:
	fn000100B8(Mem2392[r1_1786 + 8<i32>:word32], Mem2392[r1_1786 + 32<i32>:word32])
l00011904_ds_f:
l00011908:
	word32 r14_4506
	fn0000B610(-10<i32>, -3<i32>, Mem1891[r1_1786 + 20<i32>:word32], out r14_4506)
	word32 r2_3086 = fn0000C768(-1<i32>)
	word32 r1_3085 = <invalid>
	Mem3097[r1_3085 + 36<i32>:word32] = Mem1891[r2_3086:word32] & 0xFFFFF000<32> | 0x10<32>
	Mem3099[r2_3086:word32] = Mem3097[r1_3085 + 36<i32>:word32]
	fn0000C768(-1<i32>)
l000117A8_ds_f:
l000117AC:
	fn0000BC38(-33<i32>)
	fn0000C768(-1<i32>)
l00011770_ds_f:
l00011774:
	fn0000B950(-11<i32>)
	fn0000B950(-12<i32>)
l000114B0:
	fn0000BC38(-33<i32>)
l000112EC_ds_f:
l000112F0:
	word32 r14_4500
	fn0000B610(-11<i32>, Mem1115[0x136CC<32>:word32], Mem1115[r1_1091 + 20<i32>:word32], out r14_4500)
l000111D8_ds_f:
l000111DC:
	fn0000B0B8(-20<i32>, Mem978[0x13698<32>:word32])
l000111B4_ds_f:
l000111B8:
	word32 r14_4498
	fn0000B610(-4<i32>, Mem978[0x13668<32>:word32], Mem978[r1_1091 + 20<i32>:word32], out r14_4498)
l00010858:
	fn000100B8(Mem213[r1_1091 + 8<i32>:word32], Mem213[r1_1091 + 32<i32>:word32])
l00010784_ds_f:
l00010788:
	Mem3199[0x1375C<32>:word32] = Mem213[r2_247 + 104<i32>:word32]
	Mem3203[0x13104<32>:word32] = Mem3199[r2_247 + 108<i32>:word32]
	Mem3207[0x13108<32>:word32] = Mem3203[r2_247 + 112<i32>:word32]
	branch fn0000E5BC() == 0<32> l000107D4
l000107C4:
	word32 r11_3213
	word32 r9_4494
	Mem3230[fn0000E5CC(r15_245, VR, out r9_4494, out r11_3213, out r15_245) | 0x396C<32>:word32] = r11_3213
l000107D4:
	Mem3238[0x1370C<32>:word32] = Mem3234[0x1C20028<32>:word32]
	Mem3242[0x13710<32>:word32] = Mem3238[0x1C2015C<32>:word32]
	fn00007E04(r15_245)
l000106C4:
	fn0000E4F0(0x48100FCC<32>, r1_146 + -4<i32>, r9)
	fn00008B60(0<i32>)


word32 fn00012214(word32 r3, word32 r9, word32 r15, word32 VR, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r15:[0..31] r3:[0..31] r9:[0..31] VR:[0..31]
// LiveOut: r11 r14
// Trashed: CV r1 r11 r12 r13 r14 r15 r17 r2 r20 r22 r24 r26 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00012214_entry:
l00012214:
	word32 r1_18
	word32 r14_10 = Mem8[r3 + 48<i32>:word32]
	word32 r2_13 = Mem8[r3 + 40<i32>:word32]
	branch r14_10 != 0<32> l00012234_ds_t
l00012234_ds_t:
l00012258:
	branch r14_10 != 3<32> l00012260_ds_t
l00012260_ds_t:
l00012288:
	r1_18 = fp + -24<i32>
l00012260_ds_f:
l00012264:
	branch r2_13 != 0<32> l0001227C
l0001227C:
	fn00004C48(0<i32>, r2_13, r15)
l0001226C:
	fn00010570(r3, r9, r15, VR)
	r1_18 = fp + -24<i32>
l00012234_ds_f:
	word32 r5_60 = Mem8[r3 + 44<i32>:word32]
l00012238:
	fn00004B44(r14_10, fn000049C0(r5_60, r2_13), r15)
	r1_18 = fp
l0001228C:
	r14Out = Mem8[r1_18 - 8<i32>:word32]
	return 0<i32>
fn00012214_exit:


word32 fn000122B8(word32 r3, word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r15:[0..31] r3:[0..31] VR:[0..31]
// LiveOut: r11
// Trashed: CV r1 r11 r2 r9
// Preserved:
fn000122B8_entry:
l000122B8:
	word32 r2_8 = Mem6[r3 + 40<i32>:word32]
	branch r2_8 == 0<32> l000122CC_ds_t
l000122CC_ds_t:
l000122E4:
	fn0000AEDC(0xA101<32>)
	fn0000AADC(r15, VR)
l000122CC_ds_f:
l000122D0:
	branch r2_8 >u 2<32> l000122D8_ds_t
l000122D8_ds_t:
l00012310:
	return 0xFFFFFFEA<32>
fn000122B8_exit:
l000122D8_ds_f:
l000122DC:
l000122FC:
	fn0000AEDC(0xA102<32>)
	fn0000AA80(r2_8, r15, VR)


void fn00012320(word32 r15, word32 VR)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000F444
// MayUse:  r15:[0..31] VR:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
l00012418:
fn00012320_exit:
fn00012320_entry:
l00012320:
	fn0000A664()
	fn00009290()
	fn0000AF04(0x1F00108<32>, -15<i32>)
	word32 r1_18 = <invalid>
	word32 r15_164 = fn0000AC14(r15, VR, Mem6[r1_18:word32])
l00012350:
	word32 r1_59 = <invalid>
	branch fn00008C74(0<i32>) == 0<32> l000123A8
l000123A8:
	branch fn00008C74(-5<i32>) == 0<32> l000123D8
l000123BC:
	fn00008CA4(-5<i32>)
	branch fn000092CC(out r15_164) == 1<32> l000123D4_ds_t
l000123D4_ds_t:
l000123D4_ds_f:
l000123D8:
	branch fn0000A6B0() != 1<32> l000123E8_ds_t
l000123E8_ds_t:
l000123E8_ds_f:
l00012364:
	fn00008CA4(0<i32>)
	word32 r11_187
	fn0000A22C(r1_59, VR, out r11_187)
	word32 r1_121 = <invalid>
	branch (Mem6[r1_121:word32] & 0x78000<32>) == 0<32> l000123A0
l000123A0:
	fn0000A300(VR)
l00012390:
	fn0000A300(VR)
l000123EC:
	word32 r15_169 = fn0000EDF4(-15<i32>, 0x12464<32>, r15_164, VR)
	Mem184[0x1F0142C<32>:word32] = Mem6[0x1F0142C<32>:word32] & 0xFFFFFFFE<32>
	fn0000A708(r15_169, VR)


void fn00018000()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn00018000_entry:
l00018000:
	word32 r3_8 = Mem0[0x1310C<32>:word32]
	Mem11[r3_8 + 2044<i32>:word32] = Mem0[0x1C2021C<32>:word32]
	Mem12[r3_8 + 1500<i32>:word32] = 0x1C20000<32>
	Mem14[r3_8 + 2048<i32>:word32] = Mem12[0x1C20220<32>:word32]
	Mem16[r3_8 + 2052<i32>:word32] = Mem14[0x1C20224<32>:word32]
	Mem18[r3_8 + 2056<i32>:word32] = Mem16[0x1C20228<32>:word32]
	Mem20[r3_8 + 2060<i32>:word32] = Mem18[0x1C2022C<32>:word32]
	Mem22[r3_8 + 2068<i32>:word32] = Mem20[0x1C20234<32>:word32]
	Mem24[r3_8 + 2076<i32>:word32] = Mem22[0x1C2023C<32>:word32]
	Mem26[r3_8 + 2088<i32>:word32] = Mem24[0x1C20248<32>:word32]
	Mem28[r3_8 + 2096<i32>:word32] = Mem26[0x1C20250<32>:word32]
	Mem30[r3_8 + 2140<i32>:word32] = Mem28[0x1C2027C<32>:word32]
	Mem32[r3_8 + 2144<i32>:word32] = Mem30[0x1C20280<32>:word32]
	Mem34[r3_8 + 2148<i32>:word32] = Mem32[0x1C20284<32>:word32]
	Mem36[r3_8 + 2152<i32>:word32] = Mem34[0x1C20288<32>:word32]
	Mem38[r3_8 + 2156<i32>:word32] = Mem36[0x1C2028C<32>:word32]
	Mem40[r3_8 + 2172<i32>:word32] = Mem38[0x1C2029C<32>:word32]
	Mem42[r3_8 + 2184<i32>:word32] = Mem40[0x1C202A8<32>:word32]
	Mem44[r3_8 + 1504<i32>:word32] = Mem42[0x1C20000<32>:word32]
	Mem46[r3_8 + 1512<i32>:word32] = Mem44[0x1C20008<32>:word32]
	Mem48[r3_8 + 1520<i32>:word32] = Mem46[0x1C20010<32>:word32]
	Mem50[r3_8 + 1528<i32>:word32] = Mem48[0x1C20018<32>:word32]
	Mem52[r3_8 + 1544<i32>:word32] = Mem50[0x1C20028<32>:word32]
	Mem54[r3_8 + 1572<i32>:word32] = Mem52[0x1C20044<32>:word32]
	Mem56[r3_8 + 1560<i32>:word32] = Mem54[0x1C20038<32>:word32]
	Mem58[r3_8 + 1576<i32>:word32] = Mem56[0x1C20048<32>:word32]
	Mem60[r3_8 + 1584<i32>:word32] = Mem58[0x1C20050<32>:word32]
	Mem62[r3_8 + 1588<i32>:word32] = Mem60[0x1C20054<32>:word32]
	Mem64[r3_8 + 1592<i32>:word32] = Mem62[0x1C20058<32>:word32]
	Mem66[r3_8 + 1596<i32>:word32] = Mem64[0x1C2005C<32>:word32]
	Mem68[r3_8 + 1600<i32>:word32] = Mem66[0x1C20060<32>:word32]
	Mem70[r3_8 + 1604<i32>:word32] = Mem68[0x1C20064<32>:word32]
	Mem72[r3_8 + 1608<i32>:word32] = Mem70[0x1C20068<32>:word32]
	Mem74[r3_8 + 1612<i32>:word32] = Mem72[0x1C2006C<32>:word32]
	Mem76[r3_8 + 1616<i32>:word32] = Mem74[0x1C20070<32>:word32]
	Mem78[r3_8 + 1620<i32>:word32] = Mem76[0x1C20074<32>:word32]
	Mem80[r3_8 + 1632<i32>:word32] = Mem78[0x1C20080<32>:word32]
	Mem82[r3_8 + 1640<i32>:word32] = Mem80[0x1C20088<32>:word32]
	Mem84[r3_8 + 1644<i32>:word32] = Mem82[0x1C2008C<32>:word32]
	Mem86[r3_8 + 1648<i32>:word32] = Mem84[0x1C20090<32>:word32]
	Mem88[r3_8 + 1656<i32>:word32] = Mem86[0x1C20098<32>:word32]
	Mem90[r3_8 + 1660<i32>:word32] = Mem88[0x1C2009C<32>:word32]
	Mem92[r3_8 + 1664<i32>:word32] = Mem90[0x1C200A0<32>:word32]
	Mem94[r3_8 + 1668<i32>:word32] = Mem92[0x1C200A4<32>:word32]
	Mem96[r3_8 + 1680<i32>:word32] = Mem94[0x1C200B0<32>:word32]
	Mem98[r3_8 + 1684<i32>:word32] = Mem96[0x1C200B4<32>:word32]
	Mem100[r3_8 + 1688<i32>:word32] = Mem98[0x1C200B8<32>:word32]
	Mem102[r3_8 + 1696<i32>:word32] = Mem100[0x1C200C0<32>:word32]
	Mem104[r3_8 + 1708<i32>:word32] = Mem102[0x1C200CC<32>:word32]
	Mem106[r3_8 + 1760<i32>:word32] = Mem104[0x1C20100<32>:word32]
	Mem108[r3_8 + 1764<i32>:word32] = Mem106[0x1C20104<32>:word32]
	Mem110[r3_8 + 1784<i32>:word32] = Mem108[0x1C20118<32>:word32]
	Mem112[r3_8 + 1792<i32>:word32] = Mem110[0x1C20120<32>:word32]
	Mem114[r3_8 + 1796<i32>:word32] = Mem112[0x1C20124<32>:word32]
	Mem116[r3_8 + 1808<i32>:word32] = Mem114[0x1C20130<32>:word32]
	Mem118[r3_8 + 1812<i32>:word32] = Mem116[0x1C20134<32>:word32]
	Mem120[r3_8 + 1820<i32>:word32] = Mem118[0x1C2013C<32>:word32]
	Mem122[r3_8 + 1824<i32>:word32] = Mem120[0x1C20140<32>:word32]
	Mem124[r3_8 + 1828<i32>:word32] = Mem122[0x1C20144<32>:word32]
	Mem126[r3_8 + 1840<i32>:word32] = Mem124[0x1C20150<32>:word32]
	Mem128[r3_8 + 1844<i32>:word32] = Mem126[0x1C20154<32>:word32]
	Mem130[r3_8 + 1920<i32>:word32] = Mem128[0x1C201A0<32>:word32]
	Mem132[r3_8 + 2016<i32>:word32] = Mem130[0x1C20200<32>:word32]
	Mem134[r3_8 + 2020<i32>:word32] = Mem132[0x1C20204<32>:word32]
	Mem136[r3_8 + 2208<i32>:word32] = Mem134[0x1C202C0<32>:word32]
	Mem138[r3_8 + 2212<i32>:word32] = Mem136[0x1C202C4<32>:word32]
	Mem140[r3_8 + 2216<i32>:word32] = Mem138[0x1C202C8<32>:word32]
	Mem142[r3_8 + 2224<i32>:word32] = Mem140[0x1C202D0<32>:word32]
	Mem144[r3_8 + 2232<i32>:word32] = Mem142[0x1C202D8<32>:word32]
	Mem146[r3_8 + 2256<i32>:word32] = Mem144[0x1C202F0<32>:word32]
	Mem148[r3_8 + 2272<i32>:word32] = Mem146[0x1C20300<32>:word32]
	Mem150[r3_8 + 2276<i32>:word32] = Mem148[0x1C20304<32>:word32]
	return
fn00018000_exit:


void fn00018250(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r9
// Preserved:
fn00018250_entry:
l00018250:
	word32 r4_10 = Mem7[0x1310C<32>:word32]
	word32 r3_12 = Mem7[r4_10 + 1500<i32>:word32]
	Mem13[r3_12 + 512<i32>:word32] = Mem7[r4_10 + 2016<i32>:word32]
	Mem15[r3_12 + 516<i32>:word32] = Mem13[r4_10 + 2020<i32>:word32]
	Mem17[r3_12 + 540<i32>:word32] = Mem15[r4_10 + 2044<i32>:word32]
	Mem19[r3_12 + 544<i32>:word32] = Mem17[r4_10 + 2048<i32>:word32]
	Mem21[r3_12 + 548<i32>:word32] = Mem19[r4_10 + 2052<i32>:word32]
	Mem23[r3_12 + 552<i32>:word32] = Mem21[r4_10 + 2056<i32>:word32]
	Mem25[r3_12 + 556<i32>:word32] = Mem23[r4_10 + 2060<i32>:word32]
	Mem27[r3_12 + 564<i32>:word32] = Mem25[r4_10 + 2068<i32>:word32]
	Mem29[r3_12 + 572<i32>:word32] = Mem27[r4_10 + 2076<i32>:word32]
	Mem31[r3_12 + 584<i32>:word32] = Mem29[r4_10 + 2088<i32>:word32]
	Mem33[r3_12 + 592<i32>:word32] = Mem31[r4_10 + 2096<i32>:word32]
	Mem35[r3_12 + 636<i32>:word32] = Mem33[r4_10 + 2140<i32>:word32]
	Mem37[r3_12 + 640<i32>:word32] = Mem35[r4_10 + 2144<i32>:word32]
	Mem39[r3_12 + 644<i32>:word32] = Mem37[r4_10 + 2148<i32>:word32]
	Mem41[r3_12 + 648<i32>:word32] = Mem39[r4_10 + 2152<i32>:word32]
	Mem43[r3_12 + 652<i32>:word32] = Mem41[r4_10 + 2156<i32>:word32]
	Mem45[r3_12 + 668<i32>:word32] = Mem43[r4_10 + 2172<i32>:word32]
	Mem47[r3_12 + 680<i32>:word32] = Mem45[r4_10 + 2184<i32>:word32]
	Mem49[r3_12:word32] = Mem47[r4_10 + 1504<i32>:word32]
	Mem51[r3_12 + 8<i32>:word32] = Mem49[r4_10 + 1512<i32>:word32]
	Mem53[r3_12 + 16<i32>:word32] = Mem51[r4_10 + 1520<i32>:word32]
	Mem55[r3_12 + 24<i32>:word32] = Mem53[r4_10 + 1528<i32>:word32]
	Mem57[r3_12 + 40<i32>:word32] = Mem55[r4_10 + 1544<i32>:word32]
	Mem59[r3_12 + 68<i32>:word32] = Mem57[r4_10 + 1572<i32>:word32]
	Mem61[r3_12 + 56<i32>:word32] = Mem59[r4_10 + 1560<i32>:word32]
	Mem63[r3_12 + 72<i32>:word32] = Mem61[r4_10 + 1576<i32>:word32]
	word32 r9_71 = fn00018F10(0xC8A0<32>, -10<i32>, r9)
	word32 r2_75 = Mem63[Mem63[0x1310C<32>:word32] + 1500<i32>:word32]
	branch (Mem63[r2_75:word32] >>u 0x1C<32> & 1<32>) == 0<32> l00018368_ds_t
l00018368_ds_t:
l00018368_ds_f:
l0001836C:
	branch (Mem63[r2_75 + 8<i32>:word32] >>u 0x1C<32> & 1<32>) == 0<32> l00018380_ds_t
l00018380_ds_t:
l00018380_ds_f:
l00018384:
	branch (Mem63[r2_75 + 16<i32>:word32] >>u 0x1C<32> & 1<32>) == 0<32> l00018398_ds_t
l00018398_ds_t:
l00018398_ds_f:
l0001839C:
	branch (Mem63[r2_75 + 24<i32>:word32] >>u 0x1C<32> & 1<32>) == 0<32> l000183B0_ds_t
l000183B0_ds_t:
l000183B0_ds_f:
l000183B4:
	branch (Mem63[r2_75 + 40<i32>:word32] >>u 0x1C<32> & 1<32>) == 0<32> l000183C8_ds_t
l000183C8_ds_t:
l000183C8_ds_f:
l000183CC:
	branch (Mem63[r2_75 + 68<i32>:word32] >>u 0x1C<32> & 1<32>) == 0<32> l000183E0_ds_t
l000183E0_ds_t:
l000183E0_ds_f:
l000183E4:
	branch (Mem63[r2_75 + 56<i32>:word32] >>u 0x1C<32> & 1<32>) == 0<32> l00018400
l000183FC:
l00018400:
l00018404:
	word32 r9_129 = fn00018F10(0xC8A0<32>, -2<i32>, r9_71)
	word32 r4_134 = Mem63[0x1310C<32>:word32]
	word32 r3_136 = Mem63[r4_134 + 1500<i32>:word32]
	Mem150[r3_136 + 80<i32>:word32] = Mem143[r4_134 + 1584<i32>:word32] & 3<32> | Mem63[r3_136 + 80<i32>:word32] & 0xFFFFFFFC<32>
	word32 r9_158 = fn00018F10(0xC8A0<32>, -2<i32>, r9_129)
	word32 r4_161 = Mem150[0x1310C<32>:word32]
	word32 r3_163 = Mem150[r4_161 + 1500<i32>:word32]
	word32 r4_174 = Mem170[r4_161 + 1584<i32>:word32] & 0x30000<32> | Mem150[r3_163 + 80<i32>:word32] & 0xFFFCFFFF<32>
	Mem177[r3_163 + 80<i32>:word32] = r4_174
	word32 r9_185 = fn00018F10(0xC8A0<32>, -2<i32>, r9_158)
	word32 r3_192 = Mem191[0x1310C<32>:word32]
	Mem200[Mem191[r3_192 + 1500<i32>:word32] + 80<i32>:word32] = Mem191[r3_192 + 1584<i32>:word32] & 0x300<32> | r4_174 & 0xFFFFFCFF<32>
	word32 r9_208 = fn00018F10(0xC8A0<32>, -2<i32>, r9_185)
	word32 r4_211 = Mem200[0x1310C<32>:word32]
	word32 r3_213 = Mem200[r4_211 + 1500<i32>:word32]
	word32 r4_222 = Mem218[r4_211 + 1588<i32>:word32] & 0x3FF<32> | Mem200[r3_213 + 84<i32>:word32] & 0xFFFFFC00<32>
	Mem225[r3_213 + 84<i32>:word32] = r4_222
	word32 r9_233 = fn00018F10(0xC8A0<32>, -2<i32>, r9_208)
	word32 r3_240 = Mem239[0x1310C<32>:word32]
	Mem248[Mem239[r3_240 + 1500<i32>:word32] + 84<i32>:word32] = Mem239[r3_240 + 1588<i32>:word32] & 0x3000<32> | r4_222 & 0xFFFFCFFF<32>
	word32 r9_256 = fn00018F10(0xC8A0<32>, -2<i32>, r9_233)
	word32 r4_259 = Mem248[0x1310C<32>:word32]
	word32 r3_261 = Mem248[r4_259 + 1500<i32>:word32]
	word32 r4_272 = Mem267[r4_259 + 1592<i32>:word32] & 0x1FFFF<32> | Mem248[r3_261 + 88<i32>:word32] & 0xFFFE0000<32>
	Mem275[r3_261 + 88<i32>:word32] = r4_272
	word32 r9_283 = fn00018F10(0xC8A0<32>, -2<i32>, r9_256)
	word32 r3_292 = Mem291[0x1310C<32>:word32]
	Mem300[Mem291[r3_292 + 1500<i32>:word32] + 88<i32>:word32] = Mem291[r3_292 + 1592<i32>:word32] & 0x3000000<32> | r4_272 & 0xFCFFFFFF<32>
	word32 r9_308 = fn00018F10(0xC8A0<32>, -2<i32>, r9_283)
	word32 r3_311 = Mem300[0x1310C<32>:word32]
	word32 r4_313 = Mem300[r3_311 + 1500<i32>:word32]
	Mem314[r4_313 + 92<i32>:word32] = Mem300[r3_311 + 1596<i32>:word32]
	Mem316[r4_313 + 704<i32>:word32] = Mem314[r3_311 + 2208<i32>:word32]
	Mem318[r4_313 + 708<i32>:word32] = Mem316[r3_311 + 2212<i32>:word32]
	Mem320[r4_313 + 712<i32>:word32] = Mem318[r3_311 + 2216<i32>:word32]
	Mem322[r4_313 + 720<i32>:word32] = Mem320[r3_311 + 2224<i32>:word32]
	Mem324[r4_313 + 728<i32>:word32] = Mem322[r3_311 + 2232<i32>:word32]
	word32 r9_332 = fn00018F10(0xC8A0<32>, -1<i32>, r9_308)
	word32 r4_335 = Mem324[0x1310C<32>:word32]
	word32 r3_337 = Mem324[r4_335 + 1500<i32>:word32]
	Mem338[r3_337 + 116<i32>:word32] = Mem324[r4_335 + 1620<i32>:word32]
	Mem340[r3_337 + 128<i32>:word32] = Mem338[r4_335 + 1632<i32>:word32]
	Mem342[r3_337 + 136<i32>:word32] = Mem340[r4_335 + 1640<i32>:word32]
	Mem344[r3_337 + 140<i32>:word32] = Mem342[r4_335 + 1644<i32>:word32]
	Mem346[r3_337 + 144<i32>:word32] = Mem344[r4_335 + 1648<i32>:word32]
	Mem348[r3_337 + 152<i32>:word32] = Mem346[r4_335 + 1656<i32>:word32]
	Mem350[r3_337 + 156<i32>:word32] = Mem348[r4_335 + 1660<i32>:word32]
	Mem352[r3_337 + 160<i32>:word32] = Mem350[r4_335 + 1664<i32>:word32]
	Mem354[r3_337 + 164<i32>:word32] = Mem352[r4_335 + 1668<i32>:word32]
	Mem356[r3_337 + 176<i32>:word32] = Mem354[r4_335 + 1680<i32>:word32]
	Mem358[r3_337 + 180<i32>:word32] = Mem356[r4_335 + 1684<i32>:word32]
	Mem360[r3_337 + 184<i32>:word32] = Mem358[r4_335 + 1688<i32>:word32]
	Mem362[r3_337 + 192<i32>:word32] = Mem360[r4_335 + 1696<i32>:word32]
	Mem364[r3_337 + 204<i32>:word32] = Mem362[r4_335 + 1708<i32>:word32]
	Mem366[r4_335 + 1760<i32>:word32] = Mem364[r3_337 + 256<i32>:word32]
	Mem368[r3_337 + 260<i32>:word32] = Mem366[r4_335 + 1764<i32>:word32]
	Mem370[r3_337 + 280<i32>:word32] = Mem368[r4_335 + 1784<i32>:word32]
	Mem372[r3_337 + 288<i32>:word32] = Mem370[r4_335 + 1792<i32>:word32]
	Mem374[r3_337 + 292<i32>:word32] = Mem372[r4_335 + 1796<i32>:word32]
	Mem376[r3_337 + 304<i32>:word32] = Mem374[r4_335 + 1808<i32>:word32]
	Mem378[r3_337 + 308<i32>:word32] = Mem376[r4_335 + 1812<i32>:word32]
	Mem380[r3_337 + 316<i32>:word32] = Mem378[r4_335 + 1820<i32>:word32]
	Mem382[r3_337 + 320<i32>:word32] = Mem380[r4_335 + 1824<i32>:word32]
	Mem384[r3_337 + 324<i32>:word32] = Mem382[r4_335 + 1828<i32>:word32]
	Mem386[r3_337 + 336<i32>:word32] = Mem384[r4_335 + 1840<i32>:word32]
	Mem388[r3_337 + 340<i32>:word32] = Mem386[r4_335 + 1844<i32>:word32]
	Mem390[r3_337 + 416<i32>:word32] = Mem388[r4_335 + 1920<i32>:word32]
	word32 r9_398 = fn00018F10(0xC8A0<32>, -1<i32>, r9_332)
	word32 r4_401 = Mem390[0x1310C<32>:word32]
	word32 r3_403 = Mem390[r4_401 + 1500<i32>:word32]
	Mem404[r3_403 + 96<i32>:word32] = Mem390[r4_401 + 1600<i32>:word32]
	Mem406[r3_403 + 100<i32>:word32] = Mem404[r4_401 + 1604<i32>:word32]
	Mem408[r3_403 + 104<i32>:word32] = Mem406[r4_401 + 1608<i32>:word32]
	Mem410[r3_403 + 108<i32>:word32] = Mem408[r4_401 + 1612<i32>:word32]
	Mem412[r3_403 + 112<i32>:word32] = Mem410[r4_401 + 1616<i32>:word32]
	word32 r9_420 = fn00018F10(0xC8A0<32>, -10<i32>, r9_398)
	word32 r2_423 = Mem412[0x1310C<32>:word32]
	word32 r3_424 = Mem412[r2_423 + 1500<i32>:word32]
	Mem426[r3_424 + 752<i32>:word32] = Mem412[r2_423 + 2256<i32>:word32]
	Mem428[r3_424 + 768<i32>:word32] = Mem426[r2_423 + 2272<i32>:word32]
	Mem432[r3_424 + 772<i32>:word32] = Mem428[r2_423 + 2276<i32>:word32]
	fn00018F10(0xC768<32>, -1<i32>, r9_420)
	return
fn00018250_exit:


void fn000187E8(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r4 r5 r6 r7 r8
// Preserved:
fn000187E8_entry:
l000187E8:
	word32 r7_5 = r4 | r3
	word32 r7_40 = r7_5 & 3<32>
	word32 r6_17 = 0<i32>
	branch (r7_5 & 3<32>) != 0<i32> l00018800_ds_t
l00018800_ds_t:
l00018820:
	branch r5 != 0<32> l00018828_ds_t
l00018828_ds_t:
	word32 r8_18 = r4 + r6_17
l0001880C:
	Mem25[r3 + r6_17:byte] = Mem22[r8_18:byte]
	r6_17 = r6_17 + -1<i32>
	r5 = r5 - 1<i32>
l00018828_ds_f:
l0001882C:
l00018800_ds_f:
l00018804:
	word32 r6_36 = r5 >>u 2<32>
l00018834:
	bool F_37 = r5 >>u 2<32> != 0<32>
l00018854:
	branch F_37 l00018858_ds_t
l00018858_ds_t:
	word32 r8_41 = r4 + r7_40
l0001883C:
	Mem48[r3 + r7_40:word32] = Mem45[r8_41:word32]
	r6_36 = r6_36 - 1<i32>
	r7_40 = r7_40 + -4<i32>
	F_37 = r6_36 != 0<32>
l00018858_ds_f:
l0001885C:
	word32 r5_58 = r5 & 3<32>
	word32 r4_59 = r4 + (r5 & 0xFFFFFFFC<32>)
	word32 r7_60 = r3 + (r5 & 0xFFFFFFFC<32>)
l00018888:
	branch r5_58 != 0<32> l00018890_ds_t
l00018890_ds_t:
	word32 r11_66 = r4_59 + r6_36
l00018874:
	Mem73[r7_60 + r6_36:byte] = Mem70[r11_66:byte]
	r6_36 = r6_36 + -1<i32>
	r5_58 = r5_58 - 1<i32>
l00018890_ds_f:
l00018894:
l00018898:
	return
fn000187E8_exit:


void fn000188A4(word32 r3, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r4:[0..7] r5:[0..31]
// LiveOut:
// Trashed: CV r11 r5 r6
// Preserved: r1
fn000188A4_entry:
l000188A4:
	word32 r6_11 = r3
l000188B8:
	branch r5 != 0<32> l000188AC
l000188AC:
	Mem9[r6_11:byte] = SLICE(r4, byte, 0)
	r5 = r5 - 1<i32>
	r6_11 = r6_11 + -1<i32>
l000188C4:
	return
fn000188A4_exit:


void fn000188CC(word32 r3, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00018AC4
//      fn00019168
//      fn00019230
//      fn000192A8
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: CV r3 r4 r5 r6 r7 r8
// Preserved: r1
fn000188CC_entry:
l000188CC:
	word32 r4_18 = r4 + (r6 << 2<32>) *s (r5 - 1<i32>)
	word32 r8_11 = 0<32> - (r6 << 2<32>)
	word32 r3_14 = r3 + ((r5 << 2<32>) - 4<i32>)
l00018904:
	branch r5 != 0<32> l0001890C_ds_t
l0001890C_ds_t:
	r4_18 = r4_18 + r8_11
l000188F0:
	Mem28[r3_14:word32] = Mem25[r4_18 + (r6 << 2<32>):word32]
	r5 = r5 - 1<i32>
	r3_14 = r3_14 - 4<i32>
l0001890C_ds_f:
l00018910:
	return
fn000188CC_exit:


void fn00018918(word32 r3, word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00018BDC
//      fn000191CC
//      fn0001926C
//      fn000192E0
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6 r7 r8
// Preserved: r1
fn00018918_entry:
l00018918:
	word32 r8_8 = 0<32> - (r6 << 2<32>)
	word32 r4_10 = r4 + ((r5 << 2<32>) - 4<i32>)
	word32 r3_14 = r3 + (r6 << 2<32>) *s (r5 - 1<i32>)
l00018950:
	branch r5 != 0<32> l00018958_ds_t
l00018958_ds_t:
	r3_14 = r3_14 + r8_8
l0001893C:
	Mem28[r3_14 + (r6 << 2<32>):word32] = Mem23[r4_10:word32]
	r5 = r5 - 1<i32>
	r4_10 = r4_10 - 4<i32>
l00018958_ds_f:
l0001895C:
	return
fn00018918_exit:


void fn00018964(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r9
// Preserved:
fn00018964_entry:
l00018964:
	branch (Mem4[r3:word32] & 0x800000<32>) == 0<32> l00018984_ds_t
l00018984_ds_t:
l00018984_ds_f:
l00018988:
	fn00018C24(-13<i32>)
	word32 r3_26 = Mem10[r3 + 24<i32>:word32]
	branch r3_26 == 0<32> l00018A4C
l00018A4C:
	return
fn00018964_exit:
l000189A0:
	branch (r3_26 & 2<32>) == 0<32> l000189AC_ds_t
l000189AC_ds_t:
l000189AC_ds_f:
l000189B0:
	Mem43[0x1F00CC4<32>:word32] = Mem10[0x1F00CC4<32>:word32] | 0x80000<32>
l000189C4:
	branch (Mem45[r3 + 24<i32>:word32] & 0x20<32>) == 0<32> l000189D4_ds_t
l000189D4_ds_t:
l000189D4_ds_f:
l000189D8:
	Mem55[0x1F00CC4<32>:word32] = Mem45[0x1F00CC4<32>:word32] | 0x200000<32>
l000189EC:
	branch (Mem57[r3 + 24<i32>:word32] & 0x40<32>) == 0<32> l000189FC_ds_t
l000189FC_ds_t:
l000189FC_ds_f:
l00018A00:
	Mem67[0x1F00CC4<32>:word32] = Mem57[0x1F00CC4<32>:word32] | 0x400000<32>
l00018A14:
	branch (Mem69[r3 + 24<i32>:word32] & 0x80<32>) == 0<32> l00018A24_ds_t
l00018A24_ds_t:
l00018A24_ds_f:
l00018A28:
	Mem79[0x1F00CC4<32>:word32] = Mem69[0x1F00CC4<32>:word32] | 0x8000000<32>
l00018A3C:
	fn00018C24(-25<i32>)
	fn00018C24(-26<i32>)


void fn00018A60(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r9
// Preserved:
fn00018A60_entry:
l00018A60:
	branch (Mem4[r3:word32] & 0x800000<32>) == 0<32> l00018A7C_ds_t
l00018A7C_ds_t:
l00018A7C_ds_f:
l00018A80:
	branch Mem9[r3 + 24<i32>:word32] == 0<32> l00018AB0
l00018AB0:
	return
fn00018A60_exit:
l00018A90:
	Mem28[0x1F00CC4<32>:word32] = 0<i32>
	fn00018C68(-25<i32>)
	fn00018C68(-25<i32>)


void fn00018AC4(word32 r3, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r3:[0..31] r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00018AC4_entry:
l00018AC4:
	fn000188CC(Mem12[0x1310C<32>:word32], 0x1C20800<32>, -151<i32>, -1<i32>)
	fn00018F10(0xC768<32>, -1<i32>, r9)
	word32 r3_38 = 0<i32>
l00018BB8:
	branch r3_38 <= 1<i32> l00018BC8_ds_t
l00018BC8_ds_t:
l00018B14:
	Mem86[Mem78[r3 + r3_38 * 0xC<32> + 120<i32>:word32]:word32] = Mem42[Mem42[r3 + r3_38 * 0xC<32> + 120<i32>:word32]:word32] & (Mem42[(r3 + r3_38 * 0xC<32>) + 124<i32>:word32] ^ 0xFFFF<32>) | Mem42[(r3 + r3_38 * 0xC<32>) + 124<i32>:word32] & Mem42[(r3 + ((r3_38 + -1<i32>) * 2<32> + (r3_38 + -1<i32>) << 2<32>)) + 116<i32>:word32]
	r3_38 = r3_38 + -1<i32>
l00018BC8_ds_f:
l00018BCC:
	return
fn00018AC4_exit:


void fn00018BDC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00018BDC_entry:
l00018BDC:
	Mem12[0x1C20068<32>:word32] = Mem5[0x1C20068<32>:word32] | 0x20<32>
	fn00018918(0x1C20800<32>, Mem12[0x1310C<32>:word32], -151<i32>, -1<i32>)
	return
fn00018BDC_exit:


void fn00018C24(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00018964
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1
fn00018C24_entry:
l00018C24:
	branch r3 != 0<32> l00018C2C_ds_t
l00018C2C_ds_t:
l00018C2C_ds_f:
l00018C30:
	Mem12[0x1F00C10<32>:word32] = -1<i32>
l00018C40:
	Mem23[0x1F00C40<32>:word32] = -1<i32> << r3 | Mem18[0x1F00C40<32>:word32]
	return
fn00018C24_exit:


void fn00018C68(word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00018A60
// MayUse:  r3:[0..31]
// LiveOut:
// Trashed: CV r11 r3 r4 r5 r6
// Preserved: r1
fn00018C68_entry:
l00018C68:
	Mem14[0x1F00C40<32>:word32] = (-1<i32> << r3 ^ 0xFFFF<32>) & Mem0[0x1F00C40<32>:word32]
	return
fn00018C68_exit:


word32 fn00018F10(word32 r3, word32 r4, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00018250
//      fn00018AC4
//      fn000190F8
// MayUse:  r3:[0..31] r4:[0..31] r9:[0..31]
// LiveOut: r9
// Trashed: CV r3 r4 r5 r9
// Preserved: r1
fn00018F10_entry:
l00018F10:
	word32 r9_14
	word32 r5_15
	call r3 (retsize: 0;)
		uses: r3:r4,r4:r4,r5:r5_15,r9:dwLoc0C,Stack +0004:r9,Stack +FFFFFFFC:dwLoc0C
		defs: r5:r5_15,r9:r9_14
	return r9_14
fn00018F10_exit:


void fn000190F8(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r9:[0..31]
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5 r9
// Preserved:
fn000190F8_entry:
l000190F8:
	fn00018F10(0xA1DC<32>, fp - 28<i32>, r9)
	return
fn000190F8_exit:


void fn00019168()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r14 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00019168_entry:
l00019168:
	fn000188CC(Mem7[0x1310C<32>:word32] + -612<i32>, 0x1C1E000<32>, -28<i32>, -1<i32>)
	fn000188CC(Mem12[0x1310C<32>:word32] + -724<i32>, 0x1C1E100<32>, -63<i32>, -1<i32>)
	return
fn00019168_exit:


void fn000191CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r14 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn000191CC_entry:
l000191CC:
	fn00018918(0x1C1E000<32>, Mem7[0x1310C<32>:word32] + -612<i32>, -28<i32>, -1<i32>)
	fn00018918(0x1C1E100<32>, Mem12[0x1310C<32>:word32] + -724<i32>, -63<i32>, -1<i32>)
	return
fn000191CC_exit:


void fn00019230()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn00019230_entry:
l00019230:
	fn000188CC(Mem7[0x1310C<32>:word32] + -984<i32>, 0x1C23404<32>, -6<i32>, -3<i32>)
	return
fn00019230_exit:


void fn0001926C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn0001926C_entry:
l0001926C:
	fn00018918(0x1C23408<32>, Mem5[0x1310C<32>:word32] + -984<i32>, -6<i32>, -3<i32>)
	return
fn0001926C_exit:


void fn000192A8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn000192A8_entry:
l000192A8:
	fn000188CC(Mem5[0x1310C<32>:word32] + -1212<i32>, 0x1C00000<32>, -61<i32>, -1<i32>)
	return
fn000192A8_exit:


void fn000192E0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r3 r4 r5 r6 r7 r8 r9
// Preserved:
fn000192E0_entry:
l000192E0:
	fn00018918(0x1C00000<32>, Mem5[0x1310C<32>:word32] + -1212<i32>, -61<i32>, -1<i32>)
	return
fn000192E0_exit:


void fn00019318()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r11 r3 r4 r5
// Preserved: r1
fn00019318_entry:
l00019318:
	word32 r5_7 = Mem0[0x1720008<32>:word32]
	Mem8[0x13764<32>:word32] = 0x1720000<32>
	word32 r4_13 = Mem8[0x1310C<32>:word32]
	Mem14[r4_13 + 1472<i32>:word32] = r5_7
	Mem16[r4_13 + 1476<i32>:word32] = Mem14[0x172000C<32>:word32]
	Mem18[r4_13 + 1476<i32>:word32] = Mem16[0x1720020<32>:word32]
	return
fn00019318_exit:


void fn00019358()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: CV r1 r11 r2 r3 r4 r5
// Preserved:
fn00019358_entry:
l00019358:
	word32 r3_8 = Mem7[0x13764<32>:word32]
	Mem11[r3_8:word32] = 0<i32>
	word32 r4_12 = Mem11[0x1310C<32>:word32]
	Mem16[r3_8 + 32<i32>:word32] = Mem11[r4_12 + 1496<i32>:word32]
	Mem18[r3_8 + 8<i32>:word32] = Mem16[r4_12 + 1472<i32>:word32]
	Mem20[r3_8 + 12<i32>:word32] = Mem18[r4_12 + 1476<i32>:word32]
	Mem22[r3_8:word32] = -1<i32>
	return
fn00019358_exit:


