void __start(word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__start_exit:
__start_entry:
l00400230:
	word32 r2_17 = Mem0[0x100107A0<p32>:word32]
	call Mem18[0x100107F8<p32>:word32] (retsize: 0;)
		uses: r2:r2_17,r4:dwArg00,r5:fp + 4<i32>,r6:(dwArg00 + 1<i32> << 2<8>) + (fp + 4<i32>),r7:Mem0[0x100106D8<p32>:word32],Stack +0010:r2_17,Stack +0018:dwArg00
l00400284:


void strcpy(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r1 r15 r2 r24 r25 r28 r3
// Preserved: sp
strcpy_entry:
l00400290:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:172<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:167<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:166<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:165<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:162<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:161<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:160<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:152<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:150<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:149<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:146<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:144<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:143<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:142<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:138<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:137<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:134<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:129<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:128<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:127<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:124<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:121<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:120<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:116<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:115<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:114<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:113<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:107<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:106<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:104<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:102<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:101<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:99<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:94<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:91<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:87<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:86<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:84<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:82<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:80<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:79<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:74<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:71<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:68<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:67<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:65<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:63<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:57<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:56<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:54<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:53<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:52<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:49<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:42<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:39<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:38<i32>
l0040061C_thunk___do_global_dtors_aux:
	__do_global_dtors_aux()
	return
strcpy_exit:


void printf(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
printf_exit:
printf_entry:
l004002A0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:167<i32>


void recv(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
recv_exit:
recv_entry:
l004002B0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:166<i32>


void connect(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
connect_exit:
connect_entry:
l004002C0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:165<i32>


void strerror(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r1 r15 r2 r24 r25 r28 r3
// Preserved: sp
strerror_entry:
l004002D0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:162<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:161<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:160<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:152<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:150<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:149<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:146<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:144<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:143<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:142<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:138<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:137<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:134<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:129<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:128<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:127<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:124<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:121<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:120<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:116<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:115<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:114<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:113<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:107<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:106<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:104<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:102<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:101<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:99<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:94<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:91<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:87<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:86<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:84<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:82<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:80<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:79<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:74<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:71<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:68<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:67<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:65<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:63<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:57<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:56<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:54<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:53<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:52<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:49<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:42<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:39<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:38<i32>
l0040061C_thunk___do_global_dtors_aux:
	__do_global_dtors_aux()
	return
strerror_exit:


void __xpg_basename(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__xpg_basename_exit:
__xpg_basename_entry:
l004002E0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:161<i32>


void snprintf(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
snprintf_exit:
snprintf_entry:
l004002F0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:160<i32>


void getpid(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getpid_exit:
getpid_entry:
l00400300:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:152<i32>


void fgets(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fgets_exit:
fgets_entry:
l00400310:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:150<i32>


void memcpy(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcpy_exit:
memcpy_entry:
l00400320:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:149<i32>


void tolower(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
tolower_exit:
tolower_entry:
l00400330:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:146<i32>


void malloc(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
malloc_exit:
malloc_entry:
l00400340:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:144<i32>


void vsnprintf(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r1 r15 r2 r24 r25 r28 r3
// Preserved: sp
vsnprintf_entry:
l00400350:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:143<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:142<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:138<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:137<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:134<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:129<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:128<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:127<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:124<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:121<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:120<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:116<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:115<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:114<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:113<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:107<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:106<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:104<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:102<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:101<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:99<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:94<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:91<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:87<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:86<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:84<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:82<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:80<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:79<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:74<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:71<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:68<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:67<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:65<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:63<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:57<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:56<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:54<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:53<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:52<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:49<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:42<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:39<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:38<i32>
l0040061C_thunk___do_global_dtors_aux:
	__do_global_dtors_aux()
	return
vsnprintf_exit:


void strtoul(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strtoul_exit:
strtoul_entry:
l00400360:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:142<i32>


void socket(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
socket_exit:
socket_entry:
l00400370:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:138<i32>


void select(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
select_exit:
select_entry:
l00400380:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:137<i32>


void fflush(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fflush_exit:
fflush_entry:
l00400390:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:134<i32>


void strncasecmp(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strncasecmp_exit:
strncasecmp_entry:
l004003A0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:129<i32>


void bzero(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
bzero_exit:
bzero_entry:
l004003B0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:128<i32>


void send(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
send_exit:
send_entry:
l004003C0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:127<i32>


void accept(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
accept_exit:
accept_entry:
l004003D0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:124<i32>


void rename(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
rename_exit:
rename_entry:
l004003E0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:121<i32>


void strrchr(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strrchr_exit:
strrchr_entry:
l004003F0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:120<i32>


void fprintf(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fprintf_exit:
fprintf_entry:
l00400400:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:116<i32>


void strcat(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcat_exit:
strcat_entry:
l00400410:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:115<i32>


void bind(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
bind_exit:
bind_entry:
l00400420:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:114<i32>


void inet_addr(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_addr_exit:
inet_addr_entry:
l00400430:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:113<i32>


void signal(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
signal_exit:
signal_entry:
l00400440:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:107<i32>


void read(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r1 r15 r2 r24 r25 r28 r3
// Preserved: sp
read_entry:
l00400450:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:106<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:104<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:102<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:101<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:99<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:94<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:91<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:87<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:86<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:84<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:82<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:80<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:79<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:74<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:71<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:68<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:67<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:65<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:63<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:57<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:56<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:54<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:53<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:52<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:49<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:42<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:39<i32>
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:38<i32>
l0040061C_thunk___do_global_dtors_aux:
	__do_global_dtors_aux()
	return
read_exit:


void strncmp(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strncmp_exit:
strncmp_entry:
l00400460:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:104<i32>


void strncpy(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strncpy_exit:
strncpy_entry:
l00400470:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:102<i32>


void unlink(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
unlink_exit:
unlink_entry:
l00400480:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:101<i32>


void strcasecmp(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcasecmp_exit:
strcasecmp_entry:
l00400490:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:99<i32>


void listen(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
listen_exit:
listen_entry:
l004004A0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:94<i32>


void fork(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fork_exit:
fork_entry:
l004004B0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:91<i32>


void gettimeofday(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
gettimeofday_exit:
gettimeofday_entry:
l004004C0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:87<i32>


void fopen(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fopen_exit:
fopen_entry:
l004004D0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:86<i32>


void ftell(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
ftell_exit:
ftell_entry:
l004004E0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:84<i32>


void fclose(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fclose_exit:
fclose_entry:
l004004F0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:82<i32>


void inet_ntoa(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_ntoa_exit:
inet_ntoa_entry:
l00400500:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:80<i32>


void time(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
time_exit:
time_entry:
l00400510:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:79<i32>


void strcspn(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcspn_exit:
strcspn_entry:
l00400520:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:74<i32>


void strsep(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strsep_exit:
strsep_entry:
l00400530:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:71<i32>


void getsockopt(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getsockopt_exit:
getsockopt_entry:
l00400540:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:68<i32>


void strftime(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strftime_exit:
strftime_entry:
l00400550:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:67<i32>


void __errno_location(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__errno_location_exit:
__errno_location_entry:
l00400560:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:65<i32>


void exit(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
exit_exit:
exit_entry:
l00400570:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:63<i32>


void gmtime(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
gmtime_exit:
gmtime_entry:
l00400580:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:57<i32>


void strspn(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strspn_exit:
strspn_entry:
l00400590:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:56<i32>


void strlen(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strlen_exit:
strlen_entry:
l004005A0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:54<i32>


void __uClibc_start_main(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__uClibc_start_main_exit:
__uClibc_start_main_entry:
l004005B0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:53<i32>


void toupper(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
toupper_exit:
toupper_entry:
l004005C0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:52<i32>


void strchr(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strchr_exit:
strchr_entry:
l004005D0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:49<i32>


void close(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
close_exit:
close_entry:
l004005E0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:42<i32>


void strpbrk(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strpbrk_exit:
strpbrk_entry:
l004005F0:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:39<i32>


void free(word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r1 r15 r2 r24 r25 r28 r3
// Preserved: sp
free_entry:
l00400600:
	call Mem0[r28 - 0x7FF0<32>:word32] (retsize: 0;)
		uses: r15:ra,r24:38<i32>
l0040061C_thunk___do_global_dtors_aux:
	__do_global_dtors_aux()
	return
free_exit:


void __do_global_dtors_aux()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strcpy
//      strerror
//      vsnprintf
//      read
//      free
// MayUse: 
// LiveOut:
// Trashed: r1 r2 r25 r28 r3
// Preserved: r4 ra sp
__do_global_dtors_aux_entry:
l00400620:
	branch Mem8[Mem8[0x10000878<32>:word32] + 8<i32>:word32] != 0<32> l0040064C_ds_t
l0040064C_ds_t:
l0040064C_ds_f:
l00400650:
	word32 r3_17 = Mem14[Mem14[0x10000878<32>:word32] + 4<i32>:word32]
	branch Mem14[r3_17:word32] == 0<32> l00400670_ds_t
l00400670_ds_t:
l00400670_ds_f:
	word32 r2_20 = r3_17 + 4<i32>
l00400674:
	word32 r25_23 = Mem22[r3_17:word32]
	Mem28[Mem22[0x10000878<32>:word32] + 4<i32>:word32] = r2_20
	word32 r4_34
	call r25_23 (retsize: 0;)
		uses: r3:r3_38,r4:r4_34
		defs: r4:r4_34
	r3_17 = Mem28[Mem28[0x10000878<32>:word32] + 4<i32>:word32]
	branch Mem28[r3_17:word32] != 0<32> l004006B4_ds_t
l004006B4_ds_t:
	r2_20 = r3_17 + 4<i32>
l004006B4_ds_f:
l004006B8:
	branch __deregister_frame_info == 0<32> l004006C4_ds_t
l004006C4_ds_t:
l004006C4_ds_f:
l004006C8:
	word32 r3_53
	call __deregister_frame_info (retsize: 0;)
		uses: r3:r3_53,r4:Mem43[0x10000878<32>:word32] + 2128<i32>
		defs: r3:r3_53
l004006E4:
	Mem62[Mem43[0x10000878<32>:word32] + 8<i32>:word32] = 1<i32>
l004006F4:
	return
__do_global_dtors_aux_exit:


void fini_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r28
// Preserved: ra sp
fini_dummy_entry:
l00400704:
	return
fini_dummy_exit:


void frame_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r28
// Preserved: r4 r5 ra sp
frame_dummy_entry:
l0040072C:
	branch __register_frame_info == 0<32> l0040074C_ds_t
l0040074C_ds_t:
l0040074C_ds_f:
l00400750:
	call __register_frame_info (retsize: 0;)
		uses: r4:Mem12[0x10000878<32>:word32] + 2128<i32>,r5:Mem12[0x10000878<32>:word32] + 2736<i32>
l00400774:
	return
frame_dummy_exit:


void init_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r28
// Preserved: ra sp
init_dummy_entry:
l00400784:
	return
init_dummy_exit:


void handle_stop(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r1 r2 r25 r28 r4 r5 r6 r7
// Preserved: r30 ra sp
handle_stop_entry:
l004007B0:
	word32 r5_44
	word32 r6_45
	word32 r7_46
	word32 r25_47
	print_log(3<i32>, 0x409DD4<32>, out r5_44, out r6_45, out r7_46, out r25_47)
	Mem34[Mem17[0x100008C0<32>:word32]:word32] = 1<i32>
	return
handle_stop_exit:


void handle_log_rotate(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5 r6 r7
// Preserved: r30 ra sp
handle_log_rotate_entry:
l0040083C:
	word32 r5_49
	word32 r6_50
	word32 r7_51
	word32 r25_52
	print_log(3<i32>, 0x409E04<32>, out r5_49, out r6_50, out r7_51, out r25_52)
	log_rotate(ra)
	return
handle_log_rotate_exit:


void main(word32 r4, word32 r5, word32 r16, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r16:[0..31] r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r1 r2 r25 r28 r3 r30 r4 r5 r6 r7 sp
// Preserved: r16
main_exit:
main_entry:
l004008D0:
	Mem25[Mem21[0x10000A20<32>:word32]:word32] = Mem21[Mem21[0x10000914<32>:word32]:word32]
	signal(2<i32>, handle_stop)
	signal(1<i32>, handle_log_rotate)
	properties_load(Mem25[r5:word32], 0<32>, ra)
	word32 r5_65
	word32 r4_64 = properties_parse_command_line(r4, r5, r16, ra, out r5_65)
	branch Mem25[Mem25[0x10000A40<32>:word32] + 0x4BC<32>:word32] == 0<32> l00400A54
l004009BC:
	word32 r25_74
	word32 r2_77
	call fork (retsize: 0;)
		uses: r25:r25_74,r4:r4_64,r5:r5_65
		defs: r2:r2_77,r25:r25_74
	branch r2_77 == 0<32> l00400A00
l00400A00:
	close(0<32>)
	close(1<i32>)
	close(2<i32>)
l00400A54:
	word32 r2_133 = Mem132[0x10000A40<32>:word32]
	branch r2_133 == 0x695<32> l00400B20
l00400A74:
	branch CONVERT(Mem136[r2_133 + 1685<i32>:int8], int8, word32) == 0<32> l00400B20
l00400A8C:
	word32 r2_150 = fopen(r2_133 + 1685<i32>, 0x409E44<32>)
	branch r2_150 == 0<32> l00400B20
l00400AC4:
	getpid()
	fprintf(r2_150, 0x409E48<32>, 0<32>)
	fclose(r2_150)
l00400B20:
	Mem194[Mem190[0x100008F4<32>:word32]:word32] = Mem190[Mem190[0x10000A40<32>:word32] + 0x38C<32>:word32]
	Mem198[Mem194[0x100008A0<32>:word32]:word32] = Mem194[0x10000A40<32>:word32] + 925<i32>
	Mem203[Mem198[0x10000A28<32>:word32]:word32] = Mem198[Mem198[0x10000A40<32>:word32] + 0x684<32>:word32] << 0xA<8>
	Mem207[Mem203[0x1000090C<32>:word32]:word32] = Mem203[Mem203[0x10000A40<32>:word32] + 0x5EC<32>:word32]
	word32 r25_228
	call __xpg_basename (retsize: 0;)
		uses: r2:r5,r25:r25_228,r4:Mem207[r5:word32],r5:open_log(0x409E4C<32>, ra)
		defs: r25:r25_228
	branch Mem257[Mem257[0x10000A28<32>:word32]:word32] >= 0<32> l00400C88
l00400C78:
l00400C88:
	word32 r6_1498
	word32 r5_286
	word32 r7_1499
	word32 r25_1500
	print_log(3<i32>, 0x409E50<32>, out r5_286, out r6_1498, out r7_1499, out r25_1500)
	word32 r4_294
	word32 r5_295
	word32 r2_296 = clist_new(ra, out r4_294, out r5_295)
	branch r2_296 != 0<32> l00400D28
l00400D28:
	word32 r2_325 = slist_new(ra)
	branch r2_325 != 0<32> l00400D6C
l00400D6C:
	slist_add(r2_325, server_new(Mem330[0x10000A40<32>:word32] + 13<i32>, Mem330[Mem330[0x10000A40<32>:word32] + 0x12C<32>:word32], Mem330[Mem330[0x10000A40<32>:word32] + 0x554<32>:word32], 0<32>, ra))
	slist_add(r2_325, server_new(Mem364[0x10000A40<32>:word32] + 13<i32>, Mem364[Mem364[0x10000A40<32>:word32] + 0x1C4<32>:word32], Mem364[Mem364[0x10000A40<32>:word32] + 0x554<32>:word32], 1<i32>, ra))
	bzero(fp + -328<i32>, 16<i32>)
	word32 r2_419 = CONVERT(Mem417[Mem417[0x10000A40<32>:word32] + 0x2F6<32>:uint16], uint16, word32)
	word32 r5_410 = <invalid>
	word32 r25_424
	word32 r6_428
	word32 r3_429
	word32 r7_430
	word32 r5_1005
	call inet_addr (retsize: 0;)
		uses: r2:r2_419,r25:r25_424,r3:r3_429,r4:Mem420[0x10000A40<32>:word32] + 469<i32>,r5:r5_410,r6:r6_428,r7:r7_430,Stack +0058:2<16>,Stack +005A:SLICE(r2_419, word16, 0)
		defs: r25:r25_424,r3:r3_429,r5:r5_426,r6:r6_428,r7:r7_430
	word32 dwLoc0150_1279 = Mem432[r2_325 + 8<32>:word32]
l00400EA4:
	word32 r28_1010 = 0x10008860<32>
	branch dwLoc0150_1279 != 0<32> l00400EBC
l00400EBC:
	branch server_open(dwLoc0150_1279, ra, out r5_1005) != 0<32> l00400EF8
l00400EF8:
	dwLoc0150_1279 = Mem437[dwLoc0150_1279 + 0x18<32>:word32]
l00400EDC:
	exit(-1<i32>)
	r5_1005 = r5_458
l00400EB4:
l00400F10:
	branch Mem470[Mem470[r28_1010 - 0x7FA0<32>:word32]:word32] == 0<32> l00400F30
l00400F30:
	word32 r2_484
	call Mem474[r28_1010 - 0x7F30<32>:word32] (retsize: 0;)
		uses: r4:0<32>,r5:r5_479,Stack +0040:0<32>
		defs: r2:r2_484
	word32 dwLoc0160_1284 = 0<32>
	word32 dwLoc2C_1288 = 0<32>
l00400F5C:
	branch CONVERT(dwLoc2C_1288 <u 32<i32>, bool, word32) != 0<32> l00400F78
l00400F78:
	Mem501[fp + -304<i32> + (dwLoc2C_1288 << 2<8>):word32] = 0<32>
	dwLoc2C_1288 = dwLoc2C_1288 + 1<i32>
l00400F70:
l00400FA4:
	word32 dwLoc28_1293 = 0<32>
l00400FB0:
	branch CONVERT(dwLoc28_1293 <u 32<i32>, bool, word32) != 0<32> l00400FCC
l00400FCC:
	Mem516[fp + -176<i32> + (dwLoc28_1293 << 2<8>):word32] = 0<32>
	dwLoc28_1293 = dwLoc28_1293 + 1<i32>
l00400FC4:
l00400FF8:
	word32 dwLoc0150_1300 = Mem509[r2_325 + 8<32>:word32]
l0040100C:
	branch dwLoc0150_1300 != 0<32> l00401024
l00401024:
	word32 r2_527 = Mem524[dwLoc0150_1300:word32]
	Mem544[fp + -304<i32> + ((r2_527 >>u 5<8>) << 2<8>):word32] = Mem524[fp + -304<i32> + ((r2_527 >>u 5<8>) << 2<8>):word32] | 1<i32> << (Mem524[dwLoc0150_1300:word32] & 0x1F<32>)
	branch CONVERT(dwLoc0160_1284 < Mem544[dwLoc0150_1300:word32], bool, word32) == 0<32> l004010B4
l004010A0:
	dwLoc0160_1284 = Mem544[dwLoc0150_1300:word32]
l004010B4:
	dwLoc0150_1300 = Mem553[dwLoc0150_1300 + 0x18<32>:word32]
l0040101C:
l004010CC:
	word32 dwLoc0158_1311 = Mem524[r2_296 + 8<32>:word32]
l004010E0:
	branch dwLoc0158_1311 != 0<32> l004010F8
l004010F8:
	branch Mem561[dwLoc0158_1311:word32] < 0<32> l0040121C
l00401110:
	branch CONVERT(dwLoc0160_1284 < Mem561[dwLoc0158_1311:word32], bool, word32) == 0<32> l00401140
l0040112C:
	dwLoc0160_1284 = Mem561[dwLoc0158_1311:word32]
l00401140:
	branch Mem573[dwLoc0158_1311 + 0xFAC<32>:word32] != 0<32> l004011BC
l004011BC:
	word32 r2_577 = Mem573[dwLoc0158_1311:word32]
	Mem594[fp + -176<i32> + ((r2_577 >>u 5<8>) << 2<8>):word32] = Mem573[fp + -176<i32> + ((r2_577 >>u 5<8>) << 2<8>):word32] | 1<i32> << (Mem573[dwLoc0158_1311:word32] & 0x1F<32>)
l00401158:
	word32 r2_596 = Mem573[dwLoc0158_1311:word32]
	Mem613[fp + -304<i32> + ((r2_596 >>u 5<8>) << 2<8>):word32] = Mem573[fp + -304<i32> + ((r2_596 >>u 5<8>) << 2<8>):word32] | 1<i32> << (Mem573[dwLoc0158_1311:word32] & 0x1F<32>)
l0040121C:
	branch Mem615[dwLoc0158_1311 + 4<32>:word32] < 0<32> l00401340
l00401234:
	branch CONVERT(dwLoc0160_1284 < Mem615[dwLoc0158_1311 + 4<32>:word32], bool, word32) == 0<32> l00401264
l00401250:
	dwLoc0160_1284 = Mem615[dwLoc0158_1311 + 4<32>:word32]
l00401264:
	branch Mem626[dwLoc0158_1311 + 0x178C<32>:word32] != 0<32> l004012E0
l004012E0:
	word32 r2_630 = Mem626[dwLoc0158_1311 + 4<32>:word32]
	Mem647[fp + -176<i32> + ((r2_630 >>u 5<8>) << 2<8>):word32] = Mem626[fp + -176<i32> + ((r2_630 >>u 5<8>) << 2<8>):word32] | 1<i32> << (Mem626[dwLoc0158_1311 + 4<32>:word32] & 0x1F<32>)
l0040127C:
	word32 r2_649 = Mem626[dwLoc0158_1311 + 4<32>:word32]
	Mem666[fp + -304<i32> + ((r2_649 >>u 5<8>) << 2<8>):word32] = Mem626[fp + -304<i32> + ((r2_649 >>u 5<8>) << 2<8>):word32] | 1<i32> << (Mem626[dwLoc0158_1311 + 4<32>:word32] & 0x1F<32>)
l00401340:
	dwLoc0158_1311 = Mem668[dwLoc0158_1311 + 0x17B8<32>:word32]
l004010F0:
l00401358:
	word32 r25_717
	word32 r2_720
	call select (retsize: 0;)
		uses: r2:dwLoc0160_1313 + 1<i32>,r25:r25_717,r3:fp + -304<i32>,r4:dwLoc0160_1313 + 1<i32>,r5:fp + -304<i32>,r6:0<32>,r7:0<32>,Stack +0010:0<32>
		defs: r2:r2_720,r25:r25_717,r5:r5_719
	branch r2_720 >= 0<32> l00401454
l00401454:
	r28_1010 = 0x10008860<32>
	word32 dwLoc0150_1341 = Mem684[r2_325 + 8<32>:word32]
l00401468:
	branch dwLoc0150_1341 != 0<32> l00401480
l00401480:
	branch (Mem795[fp + -304<i32> + ((Mem795[dwLoc0150_1341:word32] >>u 5<8>) << 2<8>):word32] >> (Mem795[dwLoc0150_1341:word32] & 0x1F<32>) & 1<32>) == 0<32> l0040159C
l004014CC:
	word32 r2_826
	call Mem795[r28_1010 - 0x7F28<32>:word32] (retsize: 0;)
		uses: r2:dwLoc0150_1342 + 8<i32>,r3:fp + -328<i32>,r4:dwLoc0150_1342 + 8<i32>,r5:fp + -328<i32>,r6:Mem795[dwLoc0150_1342:word32],r7:Mem795[dwLoc0150_1342 + 0x20<32>:word32]
		defs: r2:r2_826,r5:r5_825
	r28_1010 = 0x10008860<32>
	branch r2_826 != 0<32> l00401524
l00401524:
	r28_1010 = 0x10008860<32>
	branch clist_add(r2_296, r2_826, out r5_1005) != 0<32> l0040159C
l00401548:
	word32 r25_1507
	word32 r5_853
	word32 r6_1505
	word32 r7_1506
	print_log(1<i32>, 0x409ECC<32>, out r5_853, out r6_1505, out r7_1506, out r25_1507)
	r5_1005 = client_destroy(r2_826, ra)
	r28_1010 = 0x10008860<32>
l0040151C:
l0040159C:
	dwLoc0150_1341 = Mem870[dwLoc0150_1341 + 0x18<32>:word32]
l00401478:
l004015B4:
	word32 dwLoc0158_1348 = Mem795[r2_296 + 8<32>:word32]
l004015C8:
	branch dwLoc0158_1348 != 0<32> l004015E0
l004015E0:
	branch dwLoc0158_1348 == 0<32> l00401724
l004015F0:
	branch Mem878[dwLoc0158_1348:word32] < 0<32> l00401724
l00401608:
	branch (Mem878[fp + -304<i32> + ((Mem878[dwLoc0158_1348:word32] >>u 5<8>) << 2<8>):word32] >> (Mem878[dwLoc0158_1348:word32] & 0x1F<32>) & 1<32>) == 0<32> l00401724
l00401654:
	call Mem878[r28_1010 - 0x7EF8<32>:word32] (retsize: 0;)
		uses: r4:dwLoc0158_1349,r5:r5_900
		defs: r5:r5_904
	r28_1010 = 0x10008860<32>
	branch Mem878[dwLoc0158_1348 + 0x7D8<32>:word32] > 0<32> l004016D8
l004016D8:
	word32 r2_913 = Mem878[dwLoc0158_1348 + 0x17C0<32>:word32]
	call r2_913 (retsize: 0;)
		uses: r2:r2_913,r25:r25_927,r4:dwLoc0158_1349,r5:r5_904,Stack +0184:r2_913
	word32 r25_927
	r5_1005 = client_send_request(dwLoc0158_1348, ra, out r25_927)
	r28_1010 = 0x10008860<32>
l00401688:
	branch Mem878[dwLoc0158_1348:word32] < 0<32> l00401724
l004016A0:
	close(Mem878[dwLoc0158_1348:word32])
	Mem950[dwLoc0158_1348:word32] = -1<i32>
	r5_1005 = <invalid>
	r28_1010 = 0x10008860<32>
l00401724:
	branch dwLoc0158_1348 == 0<32> l0040184C
l00401734:
	branch Mem952[dwLoc0158_1348 + 4<32>:word32] < 0<32> l0040184C
l0040174C:
	branch (Mem952[fp + -304<i32> + ((Mem952[dwLoc0158_1348 + 4<32>:word32] >>u 5<8>) << 2<8>):word32] >> (Mem952[dwLoc0158_1348 + 4<32>:word32] & 0x1F<32>) & 1<32>) == 0<32> l0040184C
l00401798:
	call Mem952[r28_1010 - 0x7E10<32>:word32] (retsize: 0;)
		uses: r4:dwLoc0158_1349,r5:r5_973
		defs: r5:r5_977
	r28_1010 = 0x10008860<32>
	branch Mem952[dwLoc0158_1348 + 0x178C<32>:word32] > 0<32> l0040181C
l0040181C:
	word32 r2_986 = Mem952[dwLoc0158_1348 + 0x17C4<32>:word32]
	word32 r25_990
	call r2_986 (retsize: 0;)
		uses: r2:r2_986,r25:r25_990,r4:dwLoc0158_1349,r5:r5_977,Stack +0188:r2_986
		defs: r25:r25_990,r5:r5_992
	r28_1010 = 0x10008860<32>
l004017CC:
	branch Mem952[dwLoc0158_1348 + 4<32>:word32] < 0<32> l0040184C
l004017E4:
	close(Mem952[dwLoc0158_1348 + 4<32>:word32])
	Mem1013[dwLoc0158_1348 + 4<32>:word32] = -1<i32>
	r5_1005 = <invalid>
	r28_1010 = 0x10008860<32>
l0040184C:
	branch dwLoc0158_1348 == 0<32> l004018F0
l0040185C:
	branch Mem1015[dwLoc0158_1348:word32] < 0<32> l004018F0
l00401874:
	branch (Mem1015[fp + -176<i32> + ((Mem1015[dwLoc0158_1348:word32] >>u 5<8>) << 2<8>):word32] >> (Mem1015[dwLoc0158_1348:word32] & 0x1F<32>) & 1<32>) == 0<32> l004018F0
l004018C0:
	word32 r2_1032 = Mem1015[dwLoc0158_1348 + 0x17C4<32>:word32]
	word32 r25_1040
	call r2_1032 (retsize: 0;)
		uses: r2:r2_1032,r25:r25_1040,r4:dwLoc0158_1349,r5:r5_1038,Stack +018C:r2_1032
		defs: r25:r25_1040,r5:r5_1042
	r28_1010 = 0x10008860<32>
l004018F0:
	branch dwLoc0158_1348 == 0<32> l00401980
l00401900:
	branch Mem1049[dwLoc0158_1348 + 4<32>:word32] < 0<32> l00401980
l00401918:
	branch (Mem1049[fp + -176<i32> + ((Mem1049[dwLoc0158_1348 + 4<32>:word32] >>u 5<8>) << 2<8>):word32] >> (Mem1049[dwLoc0158_1348 + 4<32>:word32] & 0x1F<32>) & 1<32>) == 0<32> l00401980
l00401964:
	call Mem1049[r28_1010 - 0x7EB0<32>:word32] (retsize: 0;)
		uses: r4:dwLoc0158_1349,r5:r5_1071
		defs: r5:r5_1075
	r28_1010 = 0x10008860<32>
l00401980:
	branch dwLoc0158_1348 == 0<32> l00401AA4
l00401990:
	branch Mem1049[dwLoc0158_1348 + 4<32>:word32] >= 0<32> l004019C0
l004019A8:
	branch Mem1049[dwLoc0158_1348:word32] < 0<32> l00401A80
l004019C0:
	branch Mem1049[dwLoc0158_1348 + 4<32>:word32] >= 0<32> l00401A08
l004019D8:
	branch Mem1049[dwLoc0158_1348:word32] < 0<32> l00401A08
l004019F0:
	branch Mem1049[dwLoc0158_1348 + 0x178C<32>:word32] <= 0<32> l00401A80
l00401A08:
	branch Mem1049[dwLoc0158_1348:word32] >= 0<32> l00401A50
l00401A20:
	branch Mem1049[dwLoc0158_1348 + 4<32>:word32] < 0<32> l00401A50
l00401A38:
	branch Mem1049[dwLoc0158_1348 + 0xFAC<32>:word32] <= 0<32> l00401A80
l00401A50:
	word32 r2_1128
	call Mem1049[r28_1010 - 0x7FC8<32>:word32] (retsize: 0;)
		uses: r4:dwLoc0158_1349,r5:r2_484
		defs: r2:r2_1128,r5:r5_1127
	r28_1010 = 0x10008860<32>
	branch CONVERT(r2_1128 < 3<i32>, bool, word32) == 0<32> l00401A80
l00401A80:
	call Mem1049[r28_1010 - 0x7E4C<32>:word32] (retsize: 0;)
		uses: r4:r2_296,r5:dwLoc0158_1349
		defs: r5:r5_1145
	r28_1010 = 0x10008860<32>
	dwLoc0158_1348 = 0<32>
l00401A78:
l00401AA4:
	branch dwLoc0158_1348 != 0<32> l00401ABC
l00401ABC:
	dwLoc0158_1348 = Mem1153[dwLoc0158_1348 + 0x17B8<32>:word32]
l00401AB4:
l004015D8:
l00401398:
	r5_1005 = <invalid>
	r28_1010 = 0x10008860<32>
	branch Mem684[__errno_location():word32] != 4<i32> l004013C4
l004013C4:
	__errno_location()
	strerror(Mem684[__errno_location():word32])
	word32 r25_1504
	word32 r6_1502
	word32 r7_1503
	word32 r5_1501
	print_log(0<32>, 0x409EB0<32>, out r5_1501, out r6_1502, out r7_1503, out r25_1504)
	exit(-1<i32>)
	r5_1005 = r5_783
l004013BC:
l00400F28:
l00401AD4:
	call Mem470[r28_1010 - 0x7ED0<32>:word32] (retsize: 0;)
		uses: r4:r2_296,r5:r5_479
	slist_destroy(r2_325, ra)
	branch r2_133 == 0x695<32> l00401B50
l00401B1C:
	branch CONVERT(Mem470[r2_133 + 1685<i32>:int8], int8, word32) == 0<32> l00401B50
l00401B34:
	unlink(r2_133 + 1685<i32>)
l00401B50:
	exit(0<32>)
l00400D50:
	exit(-1<i32>)
l00400D0C:
	exit(-1<i32>)
l004009E4:
	exit(0<32>)


void client_new(word32 r4, word32 r5, word32 r6, word32 r7, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
client_new_entry:
l00401B70:
	word32 r2_29 = malloc(6100<i32>)
	branch r2_29 != 0<32> l00401BC8_ds_t
l00401BC8_ds_t:
l00401BFC:
	bzero(r2_29 + 6040<i32>, 16<i32>)
	Mem52[r2_29 + 0x1798<32>:word16] = 2<16>
	Mem56[r2_29 + 0x179A<32>:word16] = SLICE(CONVERT(Mem52[r4 + 2<32>:uint16], uint16, word32), word16, 0)
	Mem60[r2_29 + 0x179C<32>:word32] = Mem56[r4 + 4<32>:word32]
	Mem77[r2_29:word32] = accept(r6, r2_29 + 6040<i32>, fp + -32<i32>)
	Mem82[r2_29 + 0x17A8<32>:word16] = 2<16>
	Mem86[r2_29 + 0x17AA<32>:word16] = SLICE(CONVERT(Mem82[r5 + 2<32>:uint16], uint16, word32), word16, 0)
	Mem90[r2_29 + 0x17AC<32>:word32] = Mem86[r5 + 4<32>:word32]
	Mem93[r2_29 + 0x1790<32>:word32] = r7
	word32 r5_100
	word32 r6_101
	word32 r7_102
	Mem108[r2_29 + 4<32>:word32] = open_destination(r2_29 + 6056<i32>, ra, out r5_100, out r6_101, out r7_102)
	branch Mem108[r2_29 + 4<32>:word32] >= 0<32> l00401DDC
l00401DDC:
	call inet_ntoa (retsize: 0;)
		uses: r2:r2_29,r25:r25_194,r4:Mem108[r2_29 + 0x179C<32>:word32],r5:r5_100,r6:r6_101,r7:r7_102
	word32 r5_346
	word32 r6_347
	word32 r7_348
	word32 r25_349
	print_log(3<i32>, 0x409F60<32>, out r5_346, out r6_347, out r7_348, out r25_349)
	Mem145[r2_29 + 0x7D8<32>:word32] = 0<32>
	Mem147[r2_29 + 0xFAC<32>:word32] = 0<32>
	Mem149[r2_29 + 0x178C<32>:word32] = 0<32>
	Mem153[r2_29 + 0xFB0<32>:word32] = r2_29 + 2012<i32>
	Mem157[r2_29 + 0x1788<32>:word32] = r2_29 + 4024<i32>
	Mem159[r2_29 + 0x1794<32>:word32] = 0<32>
	Mem161[r2_29 + 0xFB4<32>:word32] = 0<32>
	Mem163[r2_29 + 0x17BC<32>:word32] = 0<32>
	Mem165[r2_29 + 0x17B8<32>:word32] = 0<32>
	Mem178[r2_29 + 0x17C8<32>:word32] = time(0<32>)
	Mem191[r2_29 + 0x17CC<32>:word32] = time(0<32>)
	Mem204[r2_29 + 0x17D0<32>:word32] = time(0<32>)
	word32 r25_194 = <invalid>
	branch r7 == 0<32> l00401F8C
l00401F8C:
	Mem210[r2_29 + 0x17C0<32>:word32] = client_parse_request
	Mem213[r2_29 + 0x17C4<32>:word32] = client_copy_reply
l00401F70:
	branch r7 == 1<i32> l00401FB4
l00401FB4:
	Mem218[r2_29 + 0x17C0<32>:word32] = client_copy_request
	Mem221[r2_29 + 0x17C4<32>:word32] = client_parse_reply
	word32 r6_227
	word32 r7_228
	client_prepare_connect(r2_29, ra, out r6_227, out r7_228)
	word32 r25_354
	client_send_request(r2_29, ra, out r25_354)
l00401F84:
l0040200C:
l00401D48:
	word32 r5_350
	word32 r6_351
	word32 r7_352
	word32 r25_353
	print_log(1<i32>, 0x409F28<32>, out r5_350, out r6_351, out r7_352, out r25_353)
	close(Mem247[r2_29:word32])
	free(r2_29)
l00401BC8_ds_f:
l00401BCC:
	word32 r5_342
	word32 r6_343
	word32 r7_344
	word32 r25_345
	print_log(0<32>, 0x409F00<32>, out r5_342, out r6_343, out r7_344, out r25_345)
l00402014:
	return
client_new_exit:


word32 client_prepare_connect(word32 r4, word32 ra, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_new
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut: r5 r6 r7
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r16 r30 ra sp
client_prepare_connect_entry:
l00402028:
	call getsockopt (retsize: 0;)
		uses: r2:fp + -24<i32>,r25:r25_74,r3:r4,r4:Mem24[r4:word32],r5:0<32>,r6:80<i32>,r7:r4 + 6040<i32>,Stack +0010:fp + -24<i32>,Stack +0020:0x10008860<32>,Stack +0128:16<i32>,Stack +0140:r4
	call inet_ntoa (retsize: 0;)
		uses: r2:r4,r25:r25_74,r4:Mem24[r4 + 0x179C<32>:word32]
	call inet_ntoa (retsize: 0;)
		uses: r2:r4,r25:r25_74,r4:Mem24[r4 + 0x179C<32>:word32]
	word32 r2_76 = snprintf(fp + -280<i32>, 256<i32>, 0x409F94<32>, 0<32>)
	word32 r25_74 = <invalid>
	word32 dwLoc18_124 = r2_76
	branch CONVERT(r2_76 < 256<i32>, bool, word32) != 0<32> l00402158
l0040214C:
	dwLoc18_124 = 256<i32>
l00402158:
	word32 r7_104
	word32 r5_105
	word32 r6_106
	add_to_request(r4, Mem89[r4 + 0xFB0<32>:word32], fp + -280<i32>, dwLoc18_124, ra, out r5_105, out r6_106, out r7_104)
	r6Out = r6_106
	r7Out = r7_104
	return r5_105
client_prepare_connect_exit:


void client_copy_request(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6
// Preserved: r30 ra sp
client_copy_request_entry:
l004021A0:
	memcpy(r4 + 2012<i32>, r4 + 8<i32>, Mem15[r4 + 0x7D8<32>:word32])
	Mem34[r4 + 0xFB0<32>:word32] = r4 + 2012<i32>
	Mem38[r4 + 0xFAC<32>:word32] = Mem34[r4 + 0x7D8<32>:word32]
	return
client_copy_request_exit:


void client_parse_request(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
client_parse_request_entry:
l00402244:
	word32 dwLoc40_521 = r4 + 8<i32>
	word32 r2_21 = Mem19[r4 + 0x7D8<32>:word32]
	word32 dwLoc28_523 = r4 + 2012<i32>
	word32 dwLoc20_525 = Mem28[r4 + 0xFB4<32>:word32]
l004022C4:
	branch r2_21 > 0<32> l004022DC
l004022DC:
	word32 r2_47 = get_a_line(fp + -2064<i32>, dwLoc40_521, fp + -2072<i32>)
	word32 dwLoc1C_533 = 0<32>
	branch CONVERT(bLoc0810, int8, word32) == 10<i32> l00402368
l00402348:
	branch CONVERT(bLoc0810, int8, word32) == 13<i32> l00402368
l00402368:
	dwLoc1C_533 = 1<i32>
l00402360:
l00402370:
	word32 r2_75 = Mem73[r4 + 0x1794<32>:word32]
	branch r2_75 == 1<i32> l00402604
l00402604:
	branch dwLoc1C_533 == 0<32> l00402660
l00402660:
	branch CONVERT(true, bool, word32) != 0<32> l004027F8
l00402674:
	branch strncasecmp(fp + -2064<i32>, 0x409FBC<32>, 6<i32>) != 0<32> l004027F8
l004027F8:
	branch CONVERT(true, bool, word32) != 0<32> l00402894
l0040280C:
	branch strncasecmp(0x409FE0<32>, fp + -2064<i32>, 10<i32>) != 0<32> l00402894
l00402894:
	request_save_line(dwLoc20_525, fp + -2064<i32>, 0<32>, ra)
l00402840:
	request_get_content_length(dwLoc20_525, fp + -2064<i32>, ra)
	request_save_line(dwLoc20_525, fp + -2064<i32>, 0<32>, ra)
l004026A8:
	branch dwLoc20_525 != 0<32> l004026F8
l004026F8:
	request_get_host(dwLoc20_525, fp + -2064<i32>, ra)
	request_make_url(dwLoc20_525, ra)
	word32 r5_697
	word32 r6_698
	word32 r7_699
	word32 r5_700
	word32 r6_701
	word32 r7_702
	dwLoc28_523 = add_to_request(r4, request_add_lines(dwLoc20_525, r4, add_to_request(r4, dwLoc28_523, dwLoc20_525 + 532<i32>, CONVERT(strlen(dwLoc20_525 + 532<i32>), size_t, uint32), ra, out r5_697, out r6_698, out r7_699)), fp + -2064<i32>, 0<32>, ra, out r5_700, out r6_701, out r7_702)
	Mem248[r4 + 0x1794<32>:word32] = 2<i32>
l004026B8:
	word32 r5_703
	word32 r6_704
	word32 r7_705
	word32 r25_706
	print_log(2<i32>, 0x409FC4<32>, out r5_703, out r6_704, out r7_705, out r25_706)
l00402614:
	word32 r25_696
	word32 r5_693
	word32 r6_694
	word32 r7_695
	print_log(2<i32>, 0x40A0B4<32>, out r5_693, out r6_694, out r7_695, out r25_696)
	Mem280[r4 + 0x1794<32>:word32] = 0<32>
l004023A4:
	branch CONVERT(r2_75 < 2<i32>, bool, word32) == 0<32> l004023D0
l004023D0:
	branch r2_75 == 2<i32> l004028C4
l004028C4:
	word32 r6_681
	word32 r7_682
	word32 r5_680
	dwLoc28_523 = add_to_request(r4, dwLoc28_523, fp + -2064<i32>, 0<32>, ra, out r5_680, out r6_681, out r7_682)
	branch dwLoc1C_533 == 0<32> l00402950
l00402950:
	branch CONVERT(true, bool, word32) != 0<32> l00402A34
l00402964:
	branch strncasecmp(0x409FF4<32>, fp + -2064<i32>, 10<i32>) != 0<32> l00402A34
l00402998:
	request_get_content_length(dwLoc20_525, fp + -2064<i32>, ra)
l00402900:
	branch dwLoc20_525 == 0<32> l0040293C
l00402910:
	branch Mem300[dwLoc20_525 + 0x554<32>:word32] != 0<32> l0040293C
l0040293C:
	Mem337[r4 + 0x1794<32>:word32] = 3<i32>
l00402928:
	Mem339[r4 + 0x1794<32>:word32] = 0<32>
l004023E4:
	branch r2_75 == 3<i32> l004029C4
l004029C4:
	word32 r7_685
	word32 r6_684
	word32 r5_683
	dwLoc28_523 = add_to_request(r4, dwLoc28_523, fp + -2064<i32>, 0<32>, ra, out r5_683, out r6_684, out r7_685)
	Mem362[dwLoc20_525 + 0x554<32>:word32] = Mem356[dwLoc20_525 + 0x554<32>:word32]
	branch Mem362[dwLoc20_525 + 0x554<32>:word32] != 0<32> l00402A34
l00402A28:
	Mem366[r4 + 0x1794<32>:word32] = 0<32>
l004023F8:
l004023B8:
	branch r2_75 == 0<32> l00402400
l00402400:
	branch dwLoc1C_533 != 0<32> l004025D0
l004025D0:
	word32 r5_669
	word32 r6_670
	word32 r7_671
	add_to_request(r4, dwLoc28_523, fp + -2064<i32>, 0<32>, ra, out r5_669, out r6_670, out r7_671)
l00402410:
	branch Mem76[r4 + 0xFB4<32>:word32] == 0<32> l004024FC
l004024FC:
	dwLoc20_525 = request_new(fp + -2064<i32>, ra)
l00402428:
	word32 r25_675
	word32 r7_674
	word32 r6_673
	word32 r5_672
	print_log(4<i32>, 0x40A008<32>, out r5_672, out r6_673, out r7_674, out r25_675)
	word32 r2_413 = Mem76[r4 + 0xFB4<32>:word32]
	dwLoc20_525 = r2_413
	branch request_parse_line(r2_413, fp + -2064<i32>, ra) != 0<32> l0040251C
l0040249C:
	word32 r5_676
	word32 r6_677
	word32 r25_679
	word32 r7_678
	print_log(4<i32>, 0x40A03C<32>, out r5_676, out r6_677, out r7_678, out r25_679)
	request_destroy(r2_413)
	dwLoc20_525 = 0<32>
l0040251C:
	Mem457[r4 + 0xFB4<32>:word32] = dwLoc20_525
	branch dwLoc20_525 == 0<32> l00402550
l00402550:
	word32 r7_688
	word32 r25_689
	word32 r6_687
	word32 r5_686
	print_log(3<i32>, 0x40A074<32>, out r5_686, out r6_687, out r7_688, out r25_689)
	word32 r7_692
	word32 r6_691
	word32 r5_690
	add_to_request(r4, dwLoc28_523, fp + -2064<i32>, 0<32>, ra, out r5_690, out r6_691, out r7_692)
	Mem495[r4 + 0x1794<32>:word32] = 2<i32>
l0040253C:
	Mem498[r4 + 0x1794<32>:word32] = 1<i32>
l004023C8:
l00402A34:
	dwLoc40_521 = r2_47
l004022D4:
l00402A48:
l00402A4C:
	return
client_parse_request_exit:


word32 add_to_request(word32 r4, word32 r5, word32 r6, word32 r7, word32 ra, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_prepare_connect
//      client_parse_request
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut: r2 r5 r6 r7
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
add_to_request_entry:
l00402A60:
	word32 r7_130
	word32 r6_129
	word32 r2_103
	word32 r5_128
	branch r5 != 0<32> l00402AE0
l00402AE0:
	branch r6 == 0<32> l00402B08
l00402AF0:
	branch r7 <= 0<32> l00402B08
l00402B08:
	word32 r25_135
	print_log(2<i32>, 0x40A124<32>, out r5_128, out r6_129, out r7_130, out r25_135)
	r2_103 = r5
l00402B00:
l00402B4C:
	Mem51[r4 + 0xFAC<32>:word32] = Mem21[r4 + 0xFAC<32>:word32] + r7
	branch CONVERT(Mem51[r4 + 0xFAC<32>:word32] < 2000<i32>, bool, word32) == 0<32> l00402BC0
l00402BC0:
	word32 r25_136
	print_log(1<i32>, 0x40A148<32>, out r5_128, out r6_129, out r7_130, out r25_136)
	Mem71[r4 + 0xFAC<32>:word32] = 0<32>
	r2_103 = 0<32>
l00402B88:
	memcpy(r5, r6, r7)
	r7_130 = <invalid>
	r6_129 = <invalid>
	r5_128 = <invalid>
	r2_103 = r5 + r7
l00402AA0:
	word32 r25_134
	print_log(1<i32>, 0x40A0E4<32>, out r5_128, out r6_129, out r7_130, out r25_134)
	r2_103 = 0<32>
l00402C08:
	r5Out = r5_128
	r6Out = r6_129
	r7Out = r7_130
	return r2_103
add_to_request_exit:


word32 get_a_line(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r3 r4 r5
// Preserved: r30 sp
get_a_line_entry:
l00402C1C:
	word32 dwArg00_107 = r4
	word32 dwArg04_108 = r5
l00402C44:
	branch Mem19[r6:word32] <= 0<32> l00402CE8
l00402C5C:
	branch CONVERT(Mem19[dwArg04_108:int8], int8, word32) == 10<i32> l00402CE8
l00402C74:
	branch CONVERT(Mem19[dwArg04_108:int8], int8, word32) != 13<i32> l00402C94
l00402C94:
	Mem32[dwArg00_107:byte] = Mem19[dwArg04_108:byte]
	Mem42[r6:word32] = Mem36[r6:word32] + -1<i32>
	dwArg04_108 = dwArg04_108 + 1<i32>
	dwArg00_107 = dwArg00_107 + 1<i32>
l00402C8C:
l00402CE8:
	branch Mem19[r6:word32] <= 0<32> l00402D84
l00402D00:
	branch CONVERT(Mem19[dwArg04_108:int8], int8, word32) == 10<i32> l00402D38
l00402D18:
	branch CONVERT(Mem19[dwArg04_108:int8], int8, word32) == 13<i32> l00402D38
l00402D38:
	Mem59[dwArg00_107:byte] = Mem19[dwArg04_108:byte]
	Mem69[r6:word32] = Mem63[r6:word32] + -1<i32>
	dwArg04_108 = dwArg04_108 + 1<i32>
	dwArg00_107 = dwArg00_107 + 1<i32>
l00402D30:
l00402D84:
	branch Mem71[r6:word32] <= 0<32> l00402E20
l00402D9C:
	branch CONVERT(Mem71[dwArg04_108:int8], int8, word32) == 10<i32> l00402DD4
l00402DB4:
	branch CONVERT(Mem71[dwArg04_108:int8], int8, word32) == 13<i32> l00402DD4
l00402DD4:
	Mem86[dwArg00_107:byte] = Mem71[dwArg04_108:byte]
	Mem96[r6:word32] = Mem90[r6:word32] + -1<i32>
	dwArg04_108 = dwArg04_108 + 1<i32>
	dwArg00_107 = dwArg00_107 + 1<i32>
l00402DCC:
l00402E20:
	Mem100[dwArg00_107:byte] = 0<8>
	return dwArg04_108
get_a_line_exit:


void client_read_request(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
client_read_request_entry:
l00402E44:
	Mem28[r4 + 0x17CC<32>:word32] = time(0<32>)
	word32 r25_37
	word32 r2_39
	call recv (retsize: 0;)
		uses: r2:r4 + 8<i32>,r25:r25_37,r3:r4,r4:Mem28[r4:word32],r5:r4 + 8<i32>,r6:1744<i32>,r7:16384<i32>,Stack +0010:0x10008860<32>,Stack +0028:r4
		defs: r2:r2_39,r25:r25_37
	Mem47[r4 + 0x7D8<32>:word32] = r2_39
	return
client_read_request_exit:


word32 client_send_request(word32 r4, word32 ra, ptr32 & r25Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      client_new
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut: r25 r5
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
client_send_request_entry:
l00402EF8:
	Mem29[r4 + 0x17CC<32>:word32] = time(0<32>)
	word32 r5_118 = <invalid>
	word32 r25_110 = <invalid>
	branch Mem29[r4 + 0xFAC<32>:word32] > 0<32> l00402F68
l00402F68:
	word32 r2_42
	call send (retsize: 0;)
		uses: r2:r4,r25:r25_40,r3:r4,r4:Mem29[r4 + 4<32>:word32],r5:Mem29[r4 + 0xFB0<32>:word32],r6:Mem29[r4 + 0xFAC<32>:word32],r7:0<32>
		defs: r2:r2_42,r25:r25_40,r5:r5_45
	branch r2_42 != Mem48[r4 + 0xFAC<32>:word32] l00402FDC
l00402FDC:
	Mem57[r4 + 0xFB0<32>:word32] = Mem48[r4 + 0xFB0<32>:word32] + r2_42
	Mem63[r4 + 0xFAC<32>:word32] = Mem57[r4 + 0xFAC<32>:word32] - r2_42
	word32 r6_125
	word32 r7_126
	print_log(4<i32>, 0x40A174<32>, out r5_118, out r6_125, out r7_126, out r25_110)
l00402FB4:
	Mem82[r4 + 0xFAC<32>:word32] = 0<32>
	Mem86[r4 + 0xFB0<32>:word32] = r4 + 2012<i32>
l00403060:
l00402F60:
l00403068:
	r25Out = r25_110
	return r5_118
client_send_request_exit:


void client_read_reply(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6
// Preserved: r30 ra sp
client_read_reply_entry:
l0040307C:
	Mem27[r4 + 0x17D0<32>:word32] = time(0<32>)
	Mem44[r4 + 0x178C<32>:word32] = CONVERT(read(Mem27[r4 + 4<32>:word32], r4 + 4024<i32>, 1999<i32>), ssize_t, uint32)
	Mem48[r4 + 0x1788<32>:word32] = r4 + 4024<i32>
	return
client_read_reply_exit:


void client_parse_reply(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28
// Preserved: r30 r4 ra sp
client_parse_reply_entry:
l00403140:
	branch Mem15[r4 + 0x178C<32>:word32] > 0<32> l00403184
l00403184:
	branch client_check_reply_http(r4) == 0<32> l004031AC
l004031AC:
	client_copy_reply(r4)
l004031A4:
l0040317C:
l004031C8:
	return
client_parse_reply_exit:


void client_copy_reply(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3
// Preserved: r30 r4 r5 r6 r7 ra sp
client_copy_reply_entry:
l004031DC:
	branch Mem15[r4 + 0x178C<32>:word32] > 0<32> l00403220
l00403220:
	Mem30[r4 + 0x17D0<32>:word32] = time(0<32>)
	word32 r25_39
	word32 r2_41
	call send (retsize: 0;)
		uses: r2:r4,r25:r25_39,r3:r4,r4:Mem30[r4:word32],r5:Mem30[r4 + 0x1788<32>:word32],r6:Mem30[r4 + 0x178C<32>:word32],r7:0<32>
		defs: r2:r2_41,r25:r25_39
	branch r2_41 != Mem47[r4 + 0x178C<32>:word32] l004032BC
l004032BC:
	Mem56[r4 + 0x1788<32>:word32] = Mem47[r4 + 0x1788<32>:word32] + r2_41
	Mem62[r4 + 0x178C<32>:word32] = Mem56[r4 + 0x178C<32>:word32] - r2_41
l00403294:
	Mem66[r4 + 0x1788<32>:word32] = r4 + 4024<i32>
	Mem68[r4 + 0x178C<32>:word32] = 0<32>
l004032FC:
l00403218:
l00403304:
	return
client_copy_reply_exit:


word32 client_check_reply_http(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r3 r4 r5 r6
// Preserved: r30 ra sp
client_check_reply_http_entry:
l00403318:
	word32 dwLoc18_180 = Mem15[r4 + 0x1788<32>:word32]
	word32 dwLoc14_181 = Mem18[r4 + 0x178C<32>:word32]
l00403364:
	branch dwLoc14_181 <= 0<32> l004033D0
l00403374:
	branch CONVERT(Mem23[dwLoc18_180:int8], int8, word32) == 10<i32> l004033AC
l0040338C:
	branch CONVERT(Mem23[dwLoc18_180:int8], int8, word32) == 13<i32> l004033AC
l004033AC:
	dwLoc18_180 = dwLoc18_180 + 1<i32>
	dwLoc14_181 = dwLoc14_181 + -1<i32>
l004033A4:
l004033D0:
	word32 r2_153
	branch CONVERT(dwLoc14_181 < 5<i32>, bool, word32) != 0<32> l004036A4
l004033E4:
	branch strncasecmp(dwLoc18_180, 0x40A1A8<32>, 4<i32>) != 0<32> l004036A4
l004036A4:
	r2_153 = 0<32>
l00403414:
	Mem67[r4 + 0x17C4<32>:word32] = client_copy_reply
l00403424:
	branch dwLoc14_181 > 0<32> l0040345C
l0040345C:
	branch dwLoc14_181 <= 0<32> l004034CC
l0040346C:
	branch CONVERT(Mem72[dwLoc18_180:int8], int8, word32) == 10<i32> l004034CC
l00403484:
	branch CONVERT(Mem72[dwLoc18_180:int8], int8, word32) != 13<i32> l004034A4
l004034A4:
	dwLoc14_181 = dwLoc14_181 + -1<i32>
	dwLoc18_180 = dwLoc18_180 + 1<i32>
l0040349C:
l004034CC:
	branch CONVERT(dwLoc14_181 < 2<i32>, bool, word32) != 0<32> l00403424
l004034E0:
	branch CONVERT(Mem72[dwLoc18_180:int8], int8, word32) == 10<i32> l00403518
l004034F8:
	branch CONVERT(Mem72[dwLoc18_180:int8], int8, word32) == 13<i32> l00403518
l00403518:
	branch CONVERT(Mem72[dwLoc18_180 + 1<i32>:int8], int8, word32) == 10<i32> l00403558
l00403534:
	branch CONVERT(Mem72[dwLoc18_180 + 1<i32>:int8], int8, word32) == 13<i32> l00403558
l00403558:
	word32 dwLoc18_205 = dwLoc18_180 + 1<i32>
	dwLoc14_181 = dwLoc14_181 + -2<i32>
	dwLoc18_180 = dwLoc18_205 + 1<i32>
	branch CONVERT(dwLoc14_181 < 2<i32>, bool, word32) != 0<32> l00403424
l0040359C:
	branch CONVERT(Mem116[dwLoc18_205 + 1<i32>:int8], int8, word32) == 10<i32> l004035D4
l004035B4:
	branch CONVERT(Mem116[dwLoc18_205 + 1<i32>:int8], int8, word32) == 13<i32> l004035D4
l004035D4:
	branch CONVERT(Mem116[dwLoc18_205 + 2<i32>:int8], int8, word32) == 10<i32> l00403614
l004035F0:
	branch CONVERT(Mem116[dwLoc18_205 + 2<i32>:int8], int8, word32) == 13<i32> l00403614
l00403614:
	branch dwLoc14_181 <= 0xFFFFFFFE<32> l0040367C
l0040367C:
	Mem150[r4 + 0x1788<32>:word32] = r4 + 4024<i32>
	Mem152[r4 + 0x178C<32>:word32] = 0<32>
	r2_153 = 1<i32>
l00403654:
	Mem156[r4 + 0x1788<32>:word32] = dwLoc18_205 + 3<i32>
	Mem159[r4 + 0x178C<32>:word32] = dwLoc14_181 + -2<i32>
	r2_153 = 0<32>
l0040360C:
l004035CC:
l00403550:
l00403510:
l00403434:
	Mem164[r4 + 0x1788<32>:word32] = r4 + 4024<i32>
	Mem166[r4 + 0x178C<32>:word32] = 0<32>
	r2_153 = 1<i32>
l004036A8:
	return r2_153
client_check_reply_http_exit:


void client_close(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_destroy
//      clist_close_all
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4
// Preserved: r30 ra sp
client_close_entry:
l004036BC:
	branch r4 == 0<32> l00403780
l004036F0:
	branch Mem15[r4:word32] < 0<32> l00403738
l00403708:
	close(Mem15[r4:word32])
	Mem29[r4:word32] = -1<i32>
l00403738:
	branch Mem31[r4 + 4<32>:word32] < 0<32> l00403780
l00403750:
	close(Mem31[r4 + 4<32>:word32])
	Mem47[r4 + 4<32>:word32] = -1<i32>
l00403780:
	return
client_close_exit:


word32 client_destroy(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      clist_delete
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut: r5
// Trashed: r2 r25 r28 r4
// Preserved: r30 ra sp
client_destroy_entry:
l00403794:
	client_close(r4)
	branch Mem15[r4 + 0xFB4<32>:word32] == 0<32> l00403810
l004037EC:
	request_destroy(Mem15[r4 + 0xFB4<32>:word32])
l00403810:
	free(r4)
	return <invalid>
client_destroy_exit:


void client_check_activ(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
client_check_activ_entry:
l00403840:
	word32 dwArg04_123 = r5
	branch r5 >= 0<32> l00403898
l0040387C:
	dwArg04_123 = time(0<32>)
l00403898:
	branch CONVERT(Mem32[Mem32[0x1000090C<32>:word32]:word32] < dwArg04_123 - Mem32[r4 + 0x17CC<32>:word32], bool, word32) == 0<32> l00403948
l004038C8:
	word32 r5_168
	word32 r6_169
	word32 r7_170
	word32 r25_171
	print_log(3<i32>, 0x40A1B0<32>, out r5_168, out r6_169, out r7_170, out r25_171)
l00403948:
	branch CONVERT(Mem72[Mem72[0x1000090C<32>:word32]:word32] < dwArg04_123 - Mem72[r4 + 0x17D0<32>:word32], bool, word32) == 0<32> l00403A00
l00403978:
	word32 r5_172
	word32 r6_173
	word32 r7_174
	word32 r25_175
	print_log(3<i32>, 0x40A1F4<32>, out r5_172, out r6_173, out r7_174, out r25_175)
l00403A00:
	return
client_check_activ_exit:


word32 open_destination(word32 r4, word32 ra, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_new
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut: r2 r5 r6 r7
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r16 r30 ra sp
open_destination_entry:
l00403A1C:
	word32 r7_141
	word32 r6_138
	word32 r5_137
	word32 r2_143
	word32 r2_26 = socket(2<i32>, 2<i32>, 6<i32>)
	branch r2_26 >= 0<32> l00403B10
l00403B10:
	r7_141 = <invalid>
	r6_138 = <invalid>
	r5_137 = <invalid>
	branch connect(r2_26, r4, 16<i32>) >= 0<32> l00403BD4
l00403BD4:
	r2_143 = r2_26
l00403B3C:
	__errno_location()
	strerror(Mem30[__errno_location():word32])
	word32 r25_176
	print_log(1<i32>, 0x40A268<32>, out r5_137, out r6_138, out r7_141, out r25_176)
	r2_143 = -1<i32>
l00403A78:
	__errno_location()
	strerror(Mem30[__errno_location():word32])
	word32 r25_175
	print_log(1<i32>, 0x40A224<32>, out r5_137, out r6_138, out r7_141, out r25_175)
	r2_143 = -1<i32>
l00403BDC:
	r5Out = r5_137
	r6Out = r6_138
	r7Out = r7_141
	return r2_143
open_destination_exit:


word32 clist_new(word32 ra, ptr32 & r4Out, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  ra:[0..31]
// LiveOut: r2 r4 r5
// Trashed: r2 r25 r28 r4 r5
// Preserved: r30 ra sp
clist_new_entry:
l00403C00:
	word32 r2_30
	word32 r2_18 = malloc(12<i32>)
	word32 r5_19 = <invalid>
	word32 r4_17 = <invalid>
	branch r2_18 != 0<32> l00403C48_ds_t
l00403C48_ds_t:
l00403C7C:
	Mem25[r2_18 + 8<32>:word32] = 0<32>
	Mem27[r2_18:word32] = 0<32>
	Mem29[r2_18 + 4<32>:word32] = 0<32>
	r2_30 = r2_18
l00403C48_ds_f:
l00403C4C:
	word32 r6_63
	word32 r7_64
	word32 r25_65
	r4_17 = print_log(0<32>, 0x40A2A0<32>, out r5_19, out r6_63, out r7_64, out r25_65)
	r2_30 = 0<32>
l00403CA8:
	r4Out = r4_17
	r5Out = r5_19
	return r2_30
clist_new_exit:


word32 clist_add(word32 r4, word32 r5, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2 r5
// Trashed: r2 r25 r28 r3 r4
// Preserved: r30 sp
clist_add_entry:
l00403CBC:
	branch Mem15[r4 + 8<32>:word32] == 0<32> l00403D28
l00403CF8:
	Mem21[Mem15[r4 + 8<32>:word32] + 0x17BC<32>:word32] = r5
	Mem25[r5 + 0x17B8<32>:word32] = Mem21[r4 + 8<32>:word32]
l00403D28:
	Mem29[r5 + 0x17BC<32>:word32] = 0<32>
	Mem32[r4 + 8<32>:word32] = r5
	Mem38[r4:word32] = Mem32[r4:word32] + 1<i32>
	branch CONVERT(Mem38[r4 + 4<32>:word32] < Mem38[r4:word32], bool, word32) == 0<32> l00403D9C
l00403D84:
	Mem47[r4 + 4<32>:word32] = Mem38[r4:word32]
l00403D9C:
	word32 r2_51 = Mem49[r4:word32]
	r5Out = <invalid>
	return r2_51
clist_add_exit:


word32 clist_remove(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      clist_delete
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r5
// Trashed: r2 r25 r28 r3
// Preserved: r30 sp
clist_remove_entry:
l00403DBC:
	branch r5 == 0<32> l00403EA0
l00403DF0:
	branch r5 != Mem15[r4 + 8<32>:word32] l00403E28
l00403E28:
	Mem24[Mem15[r5 + 0x17BC<32>:word32] + 0x17B8<32>:word32] = Mem15[r5 + 0x17B8<32>:word32]
l00403E08:
	Mem28[r4 + 8<32>:word32] = Mem15[r5 + 0x17B8<32>:word32]
l00403E48:
	branch Mem30[r5 + 0x17B8<32>:word32] == 0<32> l00403E80
l00403E60:
	Mem37[Mem30[r5 + 0x17B8<32>:word32] + 0x17BC<32>:word32] = Mem30[r5 + 0x17BC<32>:word32]
l00403E80:
	Mem45[r4:word32] = Mem39[r4:word32] + -1<i32>
l00403EA0:
	return <invalid>
clist_remove_exit:


void clist_find_fdin(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3
// Preserved: r30 sp
clist_find_fdin_entry:
l00403EC0:
	word32 dwLoc10_38 = Mem15[r4 + 8<32>:word32]
l00403EF8:
	branch dwLoc10_38 == 0<32> l00403F44
l00403F08:
	branch Mem20[dwLoc10_38:word32] != r5 l00403F2C
l00403F2C:
	dwLoc10_38 = Mem20[dwLoc10_38 + 0x17B8<32>:word32]
l00403F24:
l00403F44:
	return
clist_find_fdin_exit:


void clist_find_fdout(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3
// Preserved: r30 sp
clist_find_fdout_entry:
l00403F5C:
	word32 dwLoc10_38 = Mem15[r4 + 8<32>:word32]
l00403F94:
	branch dwLoc10_38 == 0<32> l00403FE0
l00403FA4:
	branch Mem20[dwLoc10_38 + 4<32>:word32] != r5 l00403FC8
l00403FC8:
	dwLoc10_38 = Mem20[dwLoc10_38 + 0x17B8<32>:word32]
l00403FC0:
l00403FE0:
	return
clist_find_fdout_exit:


void clist_delete(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      clist_destroy_all
// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r25 r28 r4 r5
// Preserved: r30 ra sp
clist_delete_entry:
l00403FF8:
	clist_remove(r4, r5)
	client_destroy(r5, ra)
	return
clist_delete_exit:


void clist_close_all(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      clist_destroy
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4
// Preserved: r30 ra sp
clist_close_all_entry:
l00404070:
	word32 dwLoc18_42 = Mem15[r4 + 8<32>:word32]
l004040A8:
	branch dwLoc18_42 != 0<32> l004040C0
l004040C0:
	client_close(dwLoc18_42)
	dwLoc18_42 = Mem20[dwLoc18_42 + 0x17B8<32>:word32]
l004040B8:
l004040F4:
	return
clist_close_all_exit:


void clist_destroy_all(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      clist_destroy
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5
// Preserved: r30 ra sp
clist_destroy_all_entry:
l00404108:
l00404140:
	branch Mem20[r4 + 8<32>:word32] != 0<32> l00404160
l00404160:
	clist_delete(r4, Mem20[r4 + 8<32>:word32], ra)
l00404158:
l0040419C:
	return
clist_destroy_all_exit:


void clist_destroy(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r25 r28 r4
// Preserved: r30 ra sp
clist_destroy_entry:
l004041B0:
	clist_close_all(r4, ra)
	clist_destroy_all(r4, ra)
	free(r4)
	return
clist_destroy_exit:


word32 request_new(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r3 r4 r5
// Preserved: r30 ra sp
request_new_entry:
l00404240:
	word32 r2_56
	word32 r2_20 = malloc(1372<i32>)
	branch r2_20 != 0<32> l0040428C_ds_t
l0040428C_ds_t:
l004042C0:
	Mem28[r2_20:byte] = 0<8>
	Mem30[r2_20 + 0x114<32>:byte] = 0<8>
	Mem32[r2_20 + 0x314<32>:byte] = 0<8>
	Mem34[r2_20 + 0x214<32>:byte] = 0<8>
	Mem36[r2_20 + 0x14<32>:byte] = 0<8>
	Mem38[r2_20 + 0x414<32>:word32] = 0<32>
	Mem41[r2_20 + 0x558<32>:word32] = -1<i32>
	Mem43[r2_20 + 0x554<32>:word32] = 0<32>
	branch r4 == 0<32> l0040435C
l00404330:
	branch request_parse_line(r2_20, r4, ra) != 0<32> l0040435C
l0040435C:
	r2_56 = r2_20
l00404354:
	r2_56 = 0<32>
l0040428C_ds_f:
l00404290:
	word32 r5_99
	word32 r6_100
	word32 r7_101
	word32 r25_102
	print_log(0<32>, 0x40A308<32>, out r5_99, out r6_100, out r7_101, out r25_102)
	r2_56 = 0<32>
l00404364:
	return r2_56
request_new_exit:


word32 request_parse_line(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
//      request_new
// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r4 r5
// Preserved: r30 ra sp
request_parse_line_entry:
l00404378:
	word32 r2_56
	word32 r5_23
	word32 r2_24 = get_method(r4, r5, out r5_23)
	branch is_a_method(r4) != 0<32> l004043E8
l004043E8:
	get_version(r4 + 788<i32>, get_uri(r4 + 276<i32>, r2_24))
	r2_56 = 1<i32>
l004043E0:
	r2_56 = 0<32>
l00404444:
	return r2_56
request_parse_line_exit:


void request_save_line(word32 r4, word32 r5, word32 r6, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
request_save_line_entry:
l00404458:
	byte bArg0B_150 = SLICE(r6, byte, 0)
	branch r4 != 0<32> l004044D4
l004044D4:
	branch CONVERT(Mem19[r4 + 0x558<32>:word32] < 63<i32>, bool, word32) != 0<32> l00404544
l00404544:
	Mem29[r4 + 0x558<32>:word32] = Mem19[r4 + 0x558<32>:word32] + 1<i32>
	Mem48[r4 + 4<i32> + ((Mem29[r4 + 0x558<32>:word32] << 2<8>) + 1040<i32>):word32] = malloc(r6)
	branch Mem48[r4 + 4<i32> + ((Mem48[r4 + 0x558<32>:word32] << 2<8>) + 1040<i32>):word32] != 0<32> l0040463C
l0040463C:
	Mem64[r4 + 4<i32> + (Mem48[r4 + 0x558<32>:word32] + 1296<i32>):byte] = bArg0B_150
	memcpy(Mem64[r4 + 4<i32> + ((Mem64[r4 + 0x558<32>:word32] << 2<8>) + 1040<i32>):word32], r5, r6)
l004045DC:
	word32 r5_172
	word32 r6_173
	word32 r7_174
	word32 r25_175
	print_log(2<i32>, 0x40A364<32>, out r5_172, out r6_173, out r7_174, out r25_175)
	Mem104[r4 + 0x558<32>:word32] = Mem48[r4 + 0x558<32>:word32] + -1<i32>
l004044F0:
	word32 r5_168
	word32 r6_169
	word32 r7_170
	word32 r25_171
	print_log(2<i32>, 0x40A344<32>, out r5_168, out r6_169, out r7_170, out r25_171)
l00404494:
	word32 r5_164
	word32 r6_165
	word32 r7_166
	word32 r25_167
	print_log(2<i32>, 0x40A398<32>, out r5_164, out r6_165, out r7_166, out r25_167)
l004046B0:
	return
request_save_line_exit:


void request_make_url(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
request_make_url_entry:
l004046C4:
	branch r4 != 0<32> l00404738
l00404738:
	branch strncasecmp(r4 + 276<i32>, 0x40A3FC<32>, 7<i32>) != 0<32> l004047D4
l004047D4:
	branch CONVERT(Mem15[r4 + 0x114<32>:int8], int8, word32) != 47<i32> l0040485C
l0040485C:
	snprintf(r4 + 532<i32>, 256<i32>, 0x40A424<32>, 0<32>)
l004047EC:
	snprintf(r4 + 532<i32>, 256<i32>, 0x40A410<32>, 0<32>)
l00404774:
	snprintf(r4 + 532<i32>, 256<i32>, 0x40A404<32>, 0<32>)
l004046F8:
	word32 r5_150
	word32 r6_151
	word32 r7_152
	word32 r25_153
	print_log(2<i32>, 0x40A3C4<32>, out r5_150, out r6_151, out r7_152, out r25_153)
l004048C8:
	return
request_make_url_exit:


word32 request_add_lines(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
request_add_lines_entry:
l004048DC:
	word32 r28_127 = 0x10008860<32>
	word32 dwArg08_152 = r6
	word32 dwLoc18_153 = 0<32>
l0040490C:
	branch CONVERT(Mem22[r4 + 0x558<32>:word32] < dwLoc18_153, bool, word32) == 0<32> l00404930
l00404930:
	branch Mem22[r4 + 4<i32> + ((dwLoc18_153 << 2<8>) + 1040<i32>):word32] == 0<32> l00404A90
l0040495C:
	branch CONVERT(CONVERT(Mem22[r4 + 4<i32> + (dwLoc18_153 + 1296<i32>):int8], int8, word32) + Mem22[r5 + 0xFAC<32>:word32] < 2000<i32>, bool, word32) == 0<32> l00404A58
l00404A58:
	call Mem22[r28_127 - 0x7E74<32>:word32] (retsize: 0;)
		uses: r4:2<i32>,r5:Mem22[r28_45 - 0x7FE0<32>:word32] + -23492<i32>,r6:Mem22[r28_45 - 0x7FE0<32>:word32] + -23472<i32>,r7:132<i32>
	r28_127 = 0x10008860<32>
l00404994:
	Mem72[r5 + 0xFAC<32>:word32] = Mem22[r5 + 0xFAC<32>:word32] + CONVERT(Mem22[(r4 + 4<i32>) + (dwLoc18_153 + 1296<i32>):int8], int8, word32)
	word32 r2_84 = CONVERT(Mem72[r4 + 4<i32> + (dwLoc18_153 + 1296<i32>):int8], int8, word32)
	word32 r7_95
	call Mem72[r28_127 - 0x7E18<32>:word32] (retsize: 0;)
		uses: r2:r2_84,r3:r4,r4:dwArg08_158,r5:Mem72[r4 + 4<i32> + ((dwLoc18_155 << 2<8>) + 1040<i32>):word32],r6:r2_84,r7:r7_95
		defs: r7:r7_95
	r28_127 = 0x10008860<32>
	dwArg08_152 = dwArg08_152 + CONVERT(Mem72[(r4 + 4<i32>) + (dwLoc18_153 + 1296<i32>):int8], int8, word32)
l00404A90:
	dwLoc18_153 = dwLoc18_153 + 1<i32>
l00404928:
l00404AA4:
	branch Mem112[r4 + 0x558<32>:word32] >= 0<32> l00404AC4
l00404AC4:
	word32 r3_118 = Mem112[r4 + 1368<i32>:word32]
	Mem125[r4 + 1368<i32>:word32] = r3_118 + -1<i32>
	word32 r2_123 = r4 + 4<i32> + ((r3_118 << 2<8>) + 1040<i32>)
	word32 r7_137
	call Mem125[r28_127 - 0x7FD4<32>:word32] (retsize: 0;)
		uses: r2:r2_123,r3:r3_118 + -1<i32>,r4:Mem125[r2_123:word32],r5:r4 + 1368<i32>,r6:r4,r7:r7_137
		defs: r7:r7_137
	r28_127 = 0x10008860<32>
l00404ABC:
l00404B18:
	return dwArg08_152
request_add_lines_exit:


word32 get_method(word32 r4, word32 r5, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      request_parse_line
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2 r5
// Trashed: r2 r25 r28 r4 r5 r6
// Preserved: r30 ra sp
get_method_entry:
l00404B34:
	word32 r2_26
	call strsep (retsize: 0;)
		uses: r2:fp + 4<i32>,r25:r25_34,r4:fp + 4<i32>,r5:0x40A464<32>,Stack +0010:0x10008860<32>,Stack +0030:r4,Stack +0034:r5
		defs: r2:r2_26
	strncpy(r4, r2_26, 256<i32>)
	word32 r5_36 = <invalid>
	r5Out = r5_36
	word32 r25_34 = <invalid>
	return r5
get_method_exit:


word32 get_uri(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      request_parse_line
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r4 r5 r6
// Preserved: r30 ra sp
get_uri_entry:
l00404BC8:
	word32 r2_26
	call strsep (retsize: 0;)
		uses: r2:fp + 4<i32>,r25:r25_34,r4:fp + 4<i32>,r5:0x40A464<32>,Stack +0010:0x10008860<32>,Stack +0030:r4,Stack +0034:r5
		defs: r2:r2_26
	strncpy(r4, r2_26, 256<i32>)
	word32 r25_34 = <invalid>
	return r5
get_uri_exit:


void get_version(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      request_parse_line
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5 r6
// Preserved: r30 ra sp
get_version_entry:
l00404C5C:
	word32 r2_26
	call strsep (retsize: 0;)
		uses: r2:fp + 4<i32>,r25:r25_34,r4:fp + 4<i32>,r5:0x40A468<32>,Stack +0010:0x10008860<32>,Stack +0030:r4,Stack +0034:r5
		defs: r2:r2_26
	strncpy(r4, r2_26, 256<i32>)
	word32 r25_34 = <invalid>
	return
get_version_exit:


void request_get_host(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 r4 ra sp
request_get_host_entry:
l00404CF0:
	branch r4 == 0<32> l00404F6C
l00404D28:
	branch r4 == -20<i32> l00404F6C
l00404F6C:
	word32 r7_239
	word32 r6_238
	word32 r5_237
	word32 r25_240
	print_log(2<i32>, 0x40A4F0<32>, out r5_237, out r6_238, out r7_239, out r25_240)
l00404D38:
	word32 r2_48 = strpbrk(r5, 0x40A46C<32>)
	word32 dwLoc18_192 = r2_48
	branch r2_48 != 0<32> l00404DB0
l00404DB0:
	branch CONVERT(dwLoc18_192 <u r5 + 256<i32>, bool, word32) == 0<32> l00404E1C
l00404DD0:
	branch CONVERT(Mem56[dwLoc18_192:int8], int8, word32) == 32<i32> l00404E08
l00404DE8:
	branch CONVERT(Mem56[dwLoc18_192:int8], int8, word32) == 9<i32> l00404E08
l00404E08:
	dwLoc18_192 = dwLoc18_192 + 1<i32>
l00404E00:
l00404E1C:
	word32 r2_90 = strpbrk(dwLoc18_192, 0x40A468<32>)
	branch r2_90 != 0<32> l00404E94
l00404E94:
	branch CONVERT(r2_90 - dwLoc18_192 < 257<i32>, bool, word32) != 0<32> l00404F04
l00404F04:
	strncpy(r4 + 20<i32>, dwLoc18_192, r2_90 - dwLoc18_192)
	Mem124[r4 + 4<i32> + ((r2_90 - dwLoc18_192) + 16<i32>):byte] = 0<8>
l00404FA4:
l00404EB0:
	word32 r5_249
	word32 r6_250
	word32 r7_251
	word32 r25_252
	print_log(2<i32>, 0x40A4D0<32>, out r5_249, out r6_250, out r7_251, out r25_252)
l00404E54:
	word32 r5_245
	word32 r6_246
	word32 r7_247
	word32 r25_248
	print_log(2<i32>, 0x40A4AC<32>, out r5_245, out r6_246, out r7_247, out r25_248)
l00404D70:
	word32 r6_242
	word32 r5_241
	word32 r25_244
	word32 r7_243
	print_log(2<i32>, 0x40A470<32>, out r5_241, out r6_242, out r7_243, out r25_244)
l00404FAC:
	return
request_get_host_exit:


void request_get_content_length(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
request_get_content_length_entry:
l00404FC0:
	branch r4 == 0<32> l00405210
l00404FF8:
	branch r4 == -20<i32> l00405210
l00405210:
	word32 r7_231
	word32 r6_230
	word32 r5_229
	word32 r25_232
	print_log(2<i32>, 0x40A538<32>, out r5_229, out r6_230, out r7_231, out r25_232)
l00405008:
	word32 r2_48 = strpbrk(r5, 0x40A46C<32>)
	word32 dwLoc18_184 = r2_48
	branch r2_48 != 0<32> l00405080
l00405080:
	branch CONVERT(dwLoc18_184 <u r5 + 256<i32>, bool, word32) == 0<32> l004050EC
l004050A0:
	branch CONVERT(Mem56[dwLoc18_184:int8], int8, word32) == 32<i32> l004050D8
l004050B8:
	branch CONVERT(Mem56[dwLoc18_184:int8], int8, word32) == 9<i32> l004050D8
l004050D8:
	dwLoc18_184 = dwLoc18_184 + 1<i32>
l004050D0:
l004050EC:
	word32 r2_90 = strpbrk(dwLoc18_184, 0x40A468<32>)
	branch r2_90 != 0<32> l00405164
l00405164:
	branch CONVERT(r2_90 - dwLoc18_184 < 257<i32>, bool, word32) != 0<32> l004051D4
l004051D4:
	Mem116[r4 + 0x554<32>:word32] = strtoul(dwLoc18_184, fp + -20<i32>, 10<i32>)
l00405248:
l00405180:
	word32 r5_241
	word32 r6_242
	word32 r7_243
	word32 r25_244
	print_log(2<i32>, 0x40A4D0<32>, out r5_241, out r6_242, out r7_243, out r25_244)
l00405124:
	word32 r5_237
	word32 r6_238
	word32 r7_239
	word32 r25_240
	print_log(2<i32>, 0x40A4AC<32>, out r5_237, out r6_238, out r7_239, out r25_240)
l00405040:
	word32 r6_234
	word32 r5_233
	word32 r25_236
	word32 r7_235
	print_log(2<i32>, 0x40A564<32>, out r5_233, out r6_234, out r7_235, out r25_236)
l00405250:
	return
request_get_content_length_exit:


word32 is_a_method(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      request_parse_line
// MayUse:  r4:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r3 r4 r5 r6
// Preserved: r30 ra sp
is_a_method_entry:
l00405264:
	word32 dwLoc18_57 = 0<32>
l0040528C:
	word32 r2_45
	branch Mem18[Mem18[0x100009C8<32>:word32] + (dwLoc18_79 << 2<8>):word32] != 0<32> l004052BC
l004052BC:
	dwLoc18_57 = dwLoc18_79 + 1<i32>
	dwLoc18_79 = dwLoc18_57
	branch strncmp(Mem31[Mem18[0x100009C8<32>:word32] + (dwLoc18_79 << 2<8>):word32], r4, 20<i32>) != 0<32> l0040528C
l00405308:
	r2_45 = 1<i32>
l004052B4:
l00405310:
	r2_45 = 0<32>
l00405314:
	return r2_45
is_a_method_exit:


void request_destroy(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      client_parse_request
//      client_destroy
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6
// Preserved: r30 ra sp
request_destroy_entry:
l00405328:
l0040534C:
	branch Mem17[r4 + 0x558<32>:word32] >= 0<32> l0040536C
l0040536C:
	word32 r3_23 = Mem17[r4 + 1368<i32>:word32]
	Mem30[r4 + 1368<i32>:word32] = r3_23 + -1<i32>
	free(Mem30[r4 + 4<i32> + ((r3_23 << 2<8>) + 1040<i32>):word32])
l00405364:
l004053C0:
	free(r4)
	return
request_destroy_exit:


void properties_parse_int(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
properties_parse_int_entry:
l004053F0:
	strtoul(r4, fp + -24<i32>, 0<32>)
	branch CONVERT(Mem30[dwLoc18:int8], int8, word32) == 0<32> l004054B4
l00405454:
	branch dwLoc18 == r5 l004054B4
l004054B4:
l00405468:
	word32 r25_93
	word32 r7_92
	word32 r6_91
	word32 r5_90
	print_log(2<i32>, 0x40A590<32>, out r5_90, out r6_91, out r7_92, out r25_93)
l004054BC:
	return
properties_parse_int_exit:


void properties_load(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
properties_load_entry:
l004054D0:
	word32 dwArg04_530 = r5
	word32 dwLoc30_535 = 0<32>
	branch r4 != 0<32> l0040555C
l0040555C:
	branch r5 != 0<32> l00405698
l0040556C:
	word32 r2_52 = malloc(CONVERT(strlen(r4), size_t, uint32) + 11<i32>)
	dwArg04_530 = r2_52
	branch r2_52 != 0<32> l004055F4
l004055F4:
	word32 dwLoc48_539
	strcpy(r2_52, r4)
	dwLoc30_535 = 1<i32>
	word32 r2_78 = strrchr(r2_52, 47<i32>)
	branch r2_78 == 0<32> l00405668
l00405668:
	dwLoc48_539 = r2_52
l0040564C:
	Mem90[r2_78 + 1<i32>:byte] = 0<8>
	dwLoc48_539 = r2_78 + 1<i32>
l00405674:
	strcpy(dwLoc48_539, fp + -64<i32>)
l00405698:
	word32 r2_120 = fopen(dwArg04_530, 0x40A614<32>)
	branch r2_120 != 0<32> l0040571C
l0040571C:
	branch dwLoc30_535 == 0<32> l00405748
l0040572C:
	free(dwArg04_530)
l00405748:
	word32 r2_151 = fgets(fp + -328<i32>, 255<i32>, r2_120)
	branch r2_151 != 0<32> l00405788
l00405788:
	word32 r2_164 = strchr(r2_151, 10<i32>)
	branch r2_164 == 0<32> l004057C4
l004057B8:
	Mem172[r2_164:byte] = 0<8>
l004057C4:
	word32 r2_184 = strchr(r2_151, 35<i32>)
	branch r2_184 == 0<32> l00405800
l004057F4:
	Mem192[r2_184:byte] = 0<8>
l00405800:
	word32 r25_202
	word32 r2_205
	call strspn (retsize: 0;)
		uses: r25:r25_202,r4:r2_151,r5:0x40A640<32>
		defs: r2:r2_205,r25:r25_202
	word32 r2_212 = r2_151 + r2_205
	branch CONVERT(Mem213[r2_212:int8], int8, word32) != 0<32> l00405858
l00405858:
	word32 r2_225
	call strcspn (retsize: 0;)
		uses: r2:r2_212,r25:r25_239,r4:r2_212,r5:0x40A644<32>,Stack +014C:r2_212
		defs: r2:r2_225
	word32 r2_232 = r2_212 + r2_225
	word32 r2_242 = strchr(r2_232, 61<i32>)
	word32 r25_239 = <invalid>
	branch r2_242 != 0<32> l00405920
l00405920:
	word32 r2_259
	call strspn (retsize: 0;)
		uses: r2:r2_242 + 1<i32>,r25:r25_274,r4:r2_242 + 1<i32>,r5:0x40A640<32>,Stack +0128:r2_242 + 1<i32>
		defs: r2:r2_259
	word32 r2_266 = r2_242 + 1<i32> + r2_259
	word32 r25_274
	word32 r2_277
	call strcspn (retsize: 0;)
		uses: r2:r2_266,r25:r25_274,r3:r2_259,r4:r2_266,r5:0x40A640<32>,Stack +0128:r2_266,Stack +0154:r2_266
		defs: r2:r2_277,r25:r25_274
	Mem287[r2_266 + r2_277:byte] = 0<8>
	Mem289[r2_232:byte] = 0<8>
	word32 dwLoc2C_567 = 0<32>
	word32 dwLoc014C_568 = 0<32>
l004059CC:
	branch CONVERT(Mem293[Mem293[0x10000A40<32>:word32] + ((dwLoc014C_568 * 0x14<32> - dwLoc014C_568 << 3<8>) + 8<i32>) + 4<32>:int8], int8, word32) == 32<i32> l00405C40
l00405A0C:
	branch dwLoc2C_567 != 0<32> l00405C40
l00405C40:
	branch dwLoc2C_567 != 0<32> l00405748
l00405C50:
	word32 r7_633
	word32 r25_634
	word32 r5_631
	word32 r6_632
	print_log(1<i32>, 0x40A5C4<32>, out r5_631, out r6_632, out r7_633, out r25_634)
l00405A1C:
	branch strcasecmp(r2_212, Mem293[Mem293[0x10000A40<32>:word32] + 4<i32> + (dwLoc014C_568 * 0x14<32> - dwLoc014C_568 << 3<8>):word32]) != 0<32> l00405C2C
l00405A70:
	dwLoc2C_567 = 1<i32>
	word32 r2_366 = Mem355[Mem355[0x10000A40<32>:word32] + ((dwLoc014C_568 * 0x14<32> - dwLoc014C_568 << 3<8>) + 8<i32>):word32]
	branch r2_366 == 1<i32> l00405B54
l00405B54:
	word32 r2_377
	call 0x4053F0<32> (retsize: 0;)
		uses: r25:0x4053F0<32>,r4:r2_266,r5:0<32>
		defs: r2:r2_377
	Mem394[Mem367[0x10000A40<32>:word32] + 4<i32> + ((dwLoc014C_568 * 0x14<32> - dwLoc014C_568 << 3<8>) + 144<i32>):word32] = r2_377
l00405AC8:
	branch CONVERT(r2_366 <u 1<i32>, bool, word32) != 0<32> l00405AF8
l00405AF8:
	strncpy((dwLoc014C_568 * 0x14<32> - dwLoc014C_568 << 3<8>) + (Mem367[0x10000A40<32>:word32] + 13<i32>), r2_266, 20<i32>)
l00405ADC:
	branch r2_366 == 2<i32> l00405BBC
l00405BBC:
	Mem448[Mem367[0x10000A40<32>:word32] + 4<i32> + ((dwLoc014C_568 * 0x14<32> - dwLoc014C_568 << 3<8>) + 144<i32>):word32] = CONVERT(strchr(0x40A5C0<32>, CONVERT(Mem367[r2_266:int8], int8, word32)) >u 0<32>, bool, word32)
l00405AF0:
l00405C2C:
	dwLoc014C_568 = dwLoc014C_568 + 1<i32>
l004058D8:
	word32 r7_629
	word32 r25_630
	word32 r5_627
	word32 r6_628
	print_log(2<i32>, 0x40A648<32>, out r5_627, out r6_628, out r7_629, out r25_630)
l00405850:
l00405780:
l00405C9C:
	fclose(r2_120)
l004056D0:
	word32 r6_624
	word32 r7_625
	word32 r25_626
	word32 r5_623
	print_log(1<i32>, 0x40A618<32>, out r5_623, out r6_624, out r7_625, out r25_626)
l004055B4:
	word32 r25_622
	word32 r5_619
	word32 r6_620
	word32 r7_621
	print_log(1<i32>, 0x40A5EC<32>, out r5_619, out r6_620, out r7_621, out r25_622)
l00405554:
l00405CBC:
	return
properties_load_exit:


word32 properties_parse_command_line(word32 r4, word32 r5, word32 r16, word32 ra, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r16:[0..31] r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut: r4 r5
// Trashed: r1 r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r16 r30 ra sp
properties_parse_command_line_entry:
l00405CD0:
	word32 r28_125 = 0x10008860<32>
	word32 dwLoc28_364 = 0<32>
	r5_168 = r5
	r4_167 = r4
l00405D00:
	word32 r4_167
	word32 r5_168
	branch CONVERT(dwLoc28_364 < r4, bool, word32) != 0<32> l00405D20
l00405D20:
	branch CONVERT(Mem22[Mem22[(dwLoc28_364 << 2<8>) + r5:word32]:int8], int8, word32) != 45<i32> l0040625C
l00405D50:
	word32 dwLoc18_371
	byte bLoc1C_368 = Mem22[Mem22[(dwLoc28_364 << 2<8>) + r5:word32] + 1<i32>:byte]
	branch CONVERT(bLoc1C_368, byte, word32) == 0<32> l00405DF4
l00405D90:
	branch CONVERT(Mem40[Mem40[(dwLoc28_364 << 2<8>) + r5:word32] + 2<i32>:int8], int8, word32) == 0<32> l00405DF4
l00405DF4:
	branch CONVERT(dwLoc28_364 < r4, bool, word32) == 0<32> l00405E40
l00405E40:
	dwLoc18_371 = Mem40[r28_125 - 0x7FE0<32>:word32] + -22928<i32>
l00405E0C:
	dwLoc28_364 = dwLoc28_364 + 1<i32>
	dwLoc18_371 = Mem61[(dwLoc28_364 + 1<i32> << 2<8>) + r5:word32]
l00405DC4:
	dwLoc18_371 = Mem40[(dwLoc28_364 << 2<8>) + r5:word32] + 2<i32>
l00405E54:
	branch CONVERT(bLoc1C_368, byte, word32) != 104<i32> l00405EA4
l00405EA4:
	word32 dwLoc20_382 = 0<32>
	word32 dwLoc24_383 = 0<32>
l00405EAC:
	branch CONVERT(Mem116[Mem116[r28_125 - 0x7E20<32>:word32] + ((dwLoc24_383 * 0x14<32> - dwLoc24_383 << 3<8>) + 8<i32>) + 4<32>:int8], int8, word32) == 32<i32> l004061DC
l00405EEC:
	branch dwLoc20_382 != 0<32> l004061DC
l004061DC:
	branch dwLoc20_382 != 0<32> l0040625C
l0040625C:
	dwLoc28_364 = dwLoc28_364 + 1<i32>
l004061EC:
	word32 r2_139 = CONVERT(bLoc1C_368, byte, word32)
	call Mem142[r28_125 - 0x7E74<32>:word32] (retsize: 0;)
		uses: r2:r2_139,r4:1<i32>,r5:Mem142[r28_125 - 0x7FE0<32>:word32] + -22924<i32>,r6:Mem142[r28_125 - 0x7FE0<32>:word32] + -22900<i32>,r7:200<i32>,Stack +0010:r2_139
	r4_167 = properties_print_usage(Mem142[r5:word32], out r5_168)
l00405EFC:
	branch CONVERT(bLoc1C_368, byte, word32) == CONVERT(Mem116[(Mem116[r28_125 - 0x7E20<32>:word32] + ((dwLoc24_383 * 0x14<32> - dwLoc24_383 << 3<8>) + 8<i32>)) + 4<32>:int8], int8, word32) l00406004
l00405F40:
	branch Mem116[Mem116[r28_125 - 0x7E20<32>:word32] + ((dwLoc24_383 * 0x14<32> - dwLoc24_383 << 3<8>) + 8<i32>):word32] != 2<i32> l004061C8
l00405F80:
	word32 r2_199 = CONVERT(bLoc1C_368, byte, word32)
	word32 r5_205
	word32 r2_206
	call Mem116[r28_125 - 0x7F9C<32>:word32] (retsize: 0;)
		uses: r2:r2_199,r4:r2_199,r5:r5_202,r6:r6_230,r7:r7_231
		defs: r2:r2_206,r5:r5_205
	word32 r2_222 = CONVERT(Mem116[Mem116[0x10000A40<32>:word32] + ((dwLoc24_383 * 0x14<32> - dwLoc24_383 << 3<8>) + 8<i32>) + 4<32>:int8], int8, word32)
	word32 r25_225
	word32 r2_228
	word32 r6_230
	word32 r7_231
	call toupper (retsize: 0;)
		uses: r2:r2_222,r25:r25_225,r3:dwLoc24_384,r4:r2_222,r5:r5_205,r6:r6_230,r7:r7_231
		defs: r2:r2_228,r25:r25_225,r4:r4_226,r5:r5_227,r6:r6_230,r7:r7_231
	r28_125 = 0x10008860<32>
	branch r2_206 == r2_228 l00406004
l00406004:
	dwLoc20_382 = 1<i32>
	word32 r2_247 = Mem235[Mem235[r28_125 - 0x7E20<32>:word32] + ((dwLoc24_383 * 0x14<32> - dwLoc24_383 << 3<8>) + 8<i32>):word32]
	branch r2_247 == 1<i32> l004060E8
l004060E8:
	word32 r25_253 = Mem248[r28_125 - 0x7FE4<32>:word32]
	word32 r2_261
	word32 r6_263
	word32 r7_264
	call r25_253 + 21488<i32> (retsize: 0;)
		uses: r25:r25_253 + 21488<i32>,r4:dwLoc18_460,r5:0<32>,r6:r6_263,r7:r7_264
		defs: r2:r2_261,r5:r5_260,r6:r6_263,r7:r7_264
	Mem278[Mem248[0x10000A40<32>:word32] + 4<i32> + ((dwLoc24_383 * 0x14<32> - dwLoc24_383 << 3<8>) + 144<i32>):word32] = r2_261
	r28_125 = 0x10008860<32>
	r4_167 = r2_261
l0040605C:
	branch CONVERT(r2_247 <u 1<i32>, bool, word32) != 0<32> l0040608C
l0040608C:
	word32 r2_286 = dwLoc24_383 * 0x14<32> - dwLoc24_383
	word32 r2_290 = (r2_286 << 3<8>) + (Mem248[r28_125 - 0x7E20<32>:word32] + 13<i32>)
	word32 r7_301
	call Mem248[r28_125 - 0x7ED4<32>:word32] (retsize: 0;)
		uses: r2:r2_290,r3:r2_286 << 3<8>,r4:r2_290,r5:dwLoc18_460,r6:20<i32>,r7:r7_301
		defs: r4:r4_296,r5:r5_297,r7:r7_301
	r28_125 = 0x10008860<32>
l00406070:
	branch r2_247 == 2<i32> l00406150
l00406150:
	r4_167 = Mem248[r28_125 - 0x7E20<32>:word32] + 4<i32> + ((dwLoc24_383 * 0x14<32> - dwLoc24_383 << 3<8>) + 144<i32>)
	Mem324[r4_167:word32] = CONVERT(Mem248[(CONVERT(bLoc1C_368, byte, word32) << 1<8>) + Mem248[Mem248[r28_125 - 0x7DF4<32>:word32]:word32]:uint16], uint16, word32) & 1<32> & 0xFFFF<32>
	dwLoc28_364 = dwLoc28_364 + -1<i32>
l00406084:
l00405FFC:
l004061C8:
	dwLoc24_383 = dwLoc24_383 + 1<i32>
l00405E64:
	call Mem75[r28_125 - 0x7DC4<32>:word32] (retsize: 0;)
		uses: r2:r5,r4:Mem75[r5:word32],r5:r5_89,r6:r6_109,r7:r7_110
	exit(0<32>)
	r28_125 = r28_111
	r5_168 = r5_106
	r4_167 = r4_105
l00405D18:
l00406270:
l00406274:
	r5Out = r5_168
	return r4_167
properties_parse_command_line_exit:


word32 properties_print_usage(word32 r4, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      properties_parse_command_line
// MayUse:  r4:[0..31]
// LiveOut: r4 r5
// Trashed: r1 r2 r25 r28 r3 r4 r5 r6
// Preserved: r30 ra sp
properties_print_usage_entry:
l0040628C:
	branch r4 == 0<32> l00406304
l004062C0:
	branch CONVERT(Mem15[r4:int8], int8, word32) == 0<32> l00406304
l00406304:
	printf(0x40A6BC<32>, 0<32>)
l004062D8:
	printf(0x40A6AC<32>, 0<32>)
l00406328:
	word32 dwLoc18_226 = 0<32>
l0040632C:
	branch CONVERT(Mem48[Mem48[0x10000A40<32>:word32] + ((dwLoc18_226 * 0x14<32> - dwLoc18_226 << 3<8>) + 8<i32>) + 4<32>:int8], int8, word32) != 32<i32> l00406374
l00406374:
	branch Mem48[Mem48[0x10000A40<32>:word32] + ((dwLoc18_226 * 0x14<32> - dwLoc18_226 << 3<8>) + 8<i32>):word32] != 2<i32> l00406530
l00406530:
	printf(0x40A6D8<32>, 0<32>)
l004063B4:
	branch (CONVERT(Mem48[(CONVERT(Mem48[Mem48[0x10000A40<32>:word32] + ((dwLoc18_226 * 0x14<32> - dwLoc18_226 << 3<8>) + 8<i32>) + 4<32>:int8], int8, word32) << 1<8>) + Mem48[Mem48[0x10000A6C<32>:word32]:word32]:uint16], uint16, word32) & 1<32> & 0xFFFF<32>) == 0<32> l00406474
l00406474:
	word32 r2_136 = CONVERT(Mem48[Mem48[0x10000A40<32>:word32] + ((dwLoc18_226 * 0x14<32> - dwLoc18_226 << 3<8>) + 8<i32>) + 4<32>:int8], int8, word32)
	word32 r25_139
	call toupper (retsize: 0;)
		uses: r2:r2_136,r25:r25_139,r3:dwLoc18_227,r4:r2_136
		defs: r25:r25_139
l0040641C:
	word32 r2_157 = CONVERT(Mem48[Mem48[0x10000A40<32>:word32] + ((dwLoc18_226 * 0x14<32> - dwLoc18_226 << 3<8>) + 8<i32>) + 4<32>:int8], int8, word32)
	word32 r25_160
	call tolower (retsize: 0;)
		uses: r2:r2_157,r25:r25_160,r3:dwLoc18_227,r4:r2_157
		defs: r25:r25_160
l004064C8:
	printf(0x40A6D0<32>, 0<32>)
l004065BC:
	dwLoc18_226 = dwLoc18_226 + 1<i32>
l0040636C:
l004065D0:
	printf(0x40A6E0<32>, 0<32>)
	word32 r5_207 = <invalid>
	r5Out = r5_207
	word32 r4_205 = <invalid>
	return r4_205
properties_print_usage_exit:


word32 print_log(word32 r4, word32 r5, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r25Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      handle_stop
//      handle_log_rotate
//      main
//      client_new
//      client_parse_request
//      add_to_request
//      client_send_request
//      client_check_activ
//      open_destination
//      clist_new
//      request_new
//      request_save_line
//      request_make_url
//      request_get_host
//      request_get_content_length
//      properties_parse_int
//      properties_load
//      open_log
//      server_new
//      server_open
//      server_destroy
//      slist_new
//      slist_delete
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r25 r4 r5 r6 r7
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
print_log_entry:
	word32 r25_3 = 0x406610<32>
l00406610:
	branch CONVERT(Mem22[Mem22[0x100008F4<32>:word32]:word32] < r4, bool, word32) != 0<32> l004066D4
l00406664:
	word32 r2_40
	call vsnprintf (retsize: 0;)
		uses: r2:fp + -1048<i32>,r25:r25_52,r4:fp + -1048<i32>,r5:1023<i32>,r6:r5,r7:fp + 8<i32>,Stack +0018:fp + 8<i32>
		defs: r2:r2_40
	call 0x40697C<32> (retsize: 0;)
		uses: r2:fp + -1048<i32>,r25:0x40697C<32>,r4:Mem43[Mem43[0x10000A20<32>:word32]:word32],r5:r4,r6:r2_40,r7:fp + -1048<i32>,Stack +0420:r2_40
		defs: r25:r25_52,r4:r4_56,r5:r5_53,r6:r6_54,r7:r7_55
l004066D4:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r25Out = r25_3
	return r4
print_log_exit:


word32 open_log(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      log_rotate
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut: r5
// Trashed: r1 r2 r25 r28 r3 r4 r5 r6
// Preserved: r30 ra sp
open_log_entry:
l004066E8:
	word32 r5_41
	branch CONVERT(Mem15[Mem15[Mem15[0x100008A0<32>:word32]:word32]:int8], int8, word32) == 0<32> l004067EC
l0040672C:
	branch CONVERT(Mem15[Mem15[Mem15[0x100008A0<32>:word32]:word32]:int8], int8, word32) == 45<i32> l004067EC
l004067EC:
	Mem28[Mem15[0x10000A20<32>:word32]:word32] = Mem15[Mem15[0x10000914<32>:word32]:word32]
	strcpy(Mem28[Mem28[0x100008A0<32>:word32]:word32], 0x40A73C<32>)
	r5_41 = <invalid>
l0040674C:
	Mem56[Mem15[0x10000A20<32>:word32]:word32] = fopen(Mem15[Mem15[0x100008A0<32>:word32]:word32], r4)
	r5_41 = <invalid>
	branch Mem56[Mem56[0x10000A20<32>:word32]:word32] != 0<32> l00406834
l00406798:
	Mem62[Mem56[0x10000A20<32>:word32]:word32] = Mem56[Mem56[0x10000914<32>:word32]:word32]
	word32 r6_99
	word32 r7_100
	word32 r25_101
	print_log(0<32>, 0x40A704<32>, out r5_41, out r6_99, out r7_100, out r25_101)
l00406834:
	return r5_41
open_log_exit:


void log_rotate(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      handle_log_rotate
//      log_string
// MayUse:  ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5
// Preserved: r30 ra sp
log_rotate_entry:
l00406848:
	fclose(Mem12[Mem12[0x10000A20<32>:word32]:word32])
	branch CONVERT(Mem12[Mem12[Mem12[0x100008A0<32>:word32]:word32]:int8], int8, word32) == 0<32> l00406944
l004068AC:
	branch CONVERT(Mem12[Mem12[Mem12[0x100008A0<32>:word32]:word32]:int8], int8, word32) == 45<i32> l00406944
l004068CC:
	strcpy(fp + -272<i32>, Mem12[Mem12[0x100008A0<32>:word32]:word32])
	strcat(fp + -272<i32>, 0x40A744<32>)
	word32 r25_54
	word32 r2_56
	word32 r3_57
	call rename (retsize: 0;)
		uses: r2:r2_56,r25:r25_54,r3:r3_57,r4:Mem12[Mem12[0x100008A0<32>:word32]:word32],r5:fp + -272<i32>
		defs: r2:r2_56,r25:r25_54,r3:r3_57
l00406944:
	open_log(0x40A740<32>, ra)
	return
log_rotate_exit:


void log_string(word32 r4, word32 r5, word32 r7, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r1 r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r16 r17 r30 ra sp
log_string_entry:
l0040697C:
	gettimeofday(fp + -40<i32>, 0<32>)
	word32 r7_33 = <invalid>
	word32 r5_30 = <invalid>
	word32 r2_43
	call gmtime (retsize: 0;)
		uses: r2:fp + -40<i32>,r25:r25_92,r3:r3_98,r4:fp + -40<i32>,r5:r5_30,r6:r6_95,r7:r7_33,Stack +0018:0x10008860<32>,Stack +0044:dwLoc24,Stack +0068:r4
		defs: r2:r2_43
	r2_57 = CONVERT(strftime(fp + -72<i32>, 28<i32>, 0x40A74C<32>, r2_43), size_t, uint32)
	fprintf(r4, 0x40A760<32>, 0<32>)
	fflush(r4)
	Mem106[Mem75[0x10000878<32>:word32] + 2084<i32>:word32] = Mem75[Mem75[0x10000878<32>:word32] + 2084<i32>:word32] + 1<i32>
	word32 r3_98 = <invalid>
	word32 r6_95 = <invalid>
	word32 r25_92 = <invalid>
	branch Mem106[Mem106[0x10000A28<32>:word32]:word32] == 0<32> l00406BCC
l00406AEC:
	word32 r2_110 = Mem106[Mem106[0x10000A28<32>:word32]:word32]
	word32 dwLoc20_178 = r2_110
	branch r2_110 >= 0<32> l00406B20
l00406B10:
	dwLoc20_178 = r2_110 + 1023<i32>
l00406B20:
	branch CONVERT(dwLoc20_178 >> 0xA<8> < Mem117[Mem117[0x10000878<32>:word32] + 2084<i32>:word32], bool, word32) == 0<32> l00406BCC
l00406B4C:
	branch CONVERT(ftell(r4) < Mem117[Mem117[0x10000A28<32>:word32]:word32], bool, word32) != 0<32> l00406BA4
l00406BA4:
	Mem150[Mem117[0x10000878<32>:word32] + 2084<i32>:word32] = Mem117[Mem117[0x10000878<32>:word32] + 2084<i32>:word32] + -10<i32>
l00406B84:
	log_rotate(ra)
l00406BCC:
	return
log_string_exit:


word32 server_new(word32 r4, word32 r5, word32 r6, word32 r7, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r4:[0..31] r5:[0..15] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r30 ra sp
server_new_entry:
l00406BF0:
	word32 r2_114
	uint16 wArg06_110 = SLICE(r5, uint16, 0)
	word32 r2_29 = malloc(36<i32>)
	branch r2_29 != 0<32> l00406C48_ds_t
l00406C48_ds_t:
l00406C7C:
	Mem37[r2_29:word32] = -1<i32>
	Mem40[r2_29 + 0x20<32>:word32] = r7
	Mem42[r2_29 + 0x18<32>:word32] = 0<32>
	Mem44[r2_29 + 0x1C<32>:word32] = 0<32>
	Mem47[r2_29 + 4<32>:word32] = r6
	bzero(r2_29 + 8<i32>, 16<i32>)
	Mem63[r2_29 + 8<32>:word16] = 2<16>
	word32 r2_65 = CONVERT(wArg06_110, uint16, word32)
	Mem66[r2_29 + 0xA<32>:word16] = SLICE(r2_65, word16, 0)
	word32 r7_57 = <invalid>
	word32 r6_56 = <invalid>
	word32 r5_55 = <invalid>
	word32 r25_69
	word32 r2_74
	call inet_addr (retsize: 0;)
		uses: r2:r2_65,r25:r25_69,r3:r2_29,r4:r4,r5:r5_55,r6:r6_56,r7:r7_57
		defs: r2:r2_74,r25:r25_69
	Mem79[r2_29 + 0xC<32>:word32] = r2_74
	r2_114 = r2_29
l00406C48_ds_f:
l00406C4C:
	word32 r5_122
	word32 r6_123
	word32 r7_124
	word32 r25_125
	print_log(0<32>, 0x40A770<32>, out r5_122, out r6_123, out r7_124, out r25_125)
	r2_114 = 0<32>
l00406D38:
	return r2_114
server_new_exit:


word32 server_open(word32 r4, word32 ra, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut: r2 r5
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r16 r30 ra sp
server_open_entry:
l00406D4C:
	word32 r5_104
	word32 r2_110
	word32 r2_26 = socket(2<i32>, 2<i32>, 6<i32>)
	branch r2_26 >= 0<32> l00406E40
l00406E40:
	branch bind(r2_26, r4 + 8<i32>, 16<i32>) >= 0<32> l00406F0C
l00406F0C:
	word32 r25_50
	word32 r2_54
	call listen (retsize: 0;)
		uses: r2:r4,r25:r25_50,r4:r2_26,r5:Mem30[r4 + 4<32>:word32]
		defs: r2:r2_54,r25:r25_50,r5:r5_52
	branch r2_54 >= 0<32> l00406FCC
l00406FCC:
	Mem60[r4:word32] = r2_26
	r2_110 = 1<i32>
l00406F34:
	__errno_location()
	strerror(Mem30[__errno_location():word32])
	word32 r6_246
	word32 r7_247
	word32 r25_248
	print_log(1<i32>, 0x40A7FC<32>, out r5_104, out r6_246, out r7_247, out r25_248)
	r2_110 = 0<32>
l00406E74:
	__errno_location()
	strerror(Mem30[__errno_location():word32])
	word32 r6_243
	word32 r7_244
	word32 r25_245
	print_log(1<i32>, 0x40A7D4<32>, out r5_104, out r6_243, out r7_244, out r25_245)
	r2_110 = 0<32>
l00406DA8:
	__errno_location()
	strerror(Mem30[__errno_location():word32])
	word32 r6_240
	word32 r7_241
	word32 r25_242
	print_log(1<i32>, 0x40A79C<32>, out r5_104, out r6_240, out r7_241, out r25_242)
	r2_110 = 0<32>
l00406FE0:
	r5Out = r5_104
	return r2_110
server_open_exit:


void server_close(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      server_destroy
//      slist_close_all
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4
// Preserved: r30 ra sp
server_close_entry:
l00406FF8:
	branch r4 == 0<32> l00407074
l0040702C:
	branch Mem15[r4:word32] <= 0<32> l00407074
l00407044:
	close(Mem15[r4:word32])
	Mem29[r4:word32] = -1<i32>
l00407074:
	return
server_close_exit:


void server_destroy(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      slist_delete
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5 r6 r7
// Preserved: r30 ra sp
server_destroy_entry:
l0040708C:
	word32 r5_60
	word32 r6_61
	word32 r7_62
	word32 r25_63
	print_log(4<i32>, 0x40A81C<32>, out r5_60, out r6_61, out r7_62, out r25_63)
	server_close(r4)
	free(r4)
	return
server_destroy_exit:


word32 slist_new(word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  ra:[0..31]
// LiveOut: r2
// Trashed: r2 r25 r28 r4 r5
// Preserved: r30 ra sp
slist_new_entry:
l00407150:
	word32 r2_30
	word32 r2_18 = malloc(12<i32>)
	branch r2_18 != 0<32> l00407198_ds_t
l00407198_ds_t:
l004071CC:
	Mem25[r2_18 + 8<32>:word32] = 0<32>
	Mem27[r2_18:word32] = 0<32>
	Mem29[r2_18 + 4<32>:word32] = 0<32>
	r2_30 = r2_18
l00407198_ds_f:
l0040719C:
	word32 r5_61
	word32 r6_62
	word32 r7_63
	word32 r25_64
	print_log(0<32>, 0x40A850<32>, out r5_61, out r6_62, out r7_63, out r25_64)
	r2_30 = 0<32>
l004071F8:
	return r2_30
slist_new_exit:


void slist_add(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4
// Preserved: r30 sp
slist_add_entry:
l0040720C:
	branch Mem15[r4 + 8<32>:word32] == 0<32> l00407278
l00407248:
	Mem21[Mem15[r4 + 8<32>:word32] + 0x1C<32>:word32] = r5
	Mem25[r5 + 0x18<32>:word32] = Mem21[r4 + 8<32>:word32]
l00407278:
	Mem29[r5 + 0x1C<32>:word32] = 0<32>
	Mem32[r4 + 8<32>:word32] = r5
	Mem38[r4:word32] = Mem32[r4:word32] + 1<i32>
	branch CONVERT(Mem38[r4 + 4<32>:word32] < Mem38[r4:word32], bool, word32) == 0<32> l004072EC
l004072D4:
	Mem47[r4 + 4<32>:word32] = Mem38[r4:word32]
l004072EC:
	return
slist_add_exit:


void slist_remove(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      slist_delete
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3
// Preserved: r30 sp
slist_remove_entry:
l0040730C:
	branch r5 == 0<32> l004073F0
l00407340:
	branch r5 != Mem15[r4 + 8<32>:word32] l00407378
l00407378:
	Mem24[Mem15[r5 + 0x1C<32>:word32] + 0x18<32>:word32] = Mem15[r5 + 0x18<32>:word32]
l00407358:
	Mem28[r4 + 8<32>:word32] = Mem15[r5 + 0x18<32>:word32]
l00407398:
	branch Mem30[r5 + 0x18<32>:word32] == 0<32> l004073D0
l004073B0:
	Mem37[Mem30[r5 + 0x18<32>:word32] + 0x1C<32>:word32] = Mem30[r5 + 0x1C<32>:word32]
l004073D0:
	Mem45[r4:word32] = Mem39[r4:word32] + -1<i32>
l004073F0:
	return
slist_remove_exit:


void slist_find_fd(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3
// Preserved: r30 sp
slist_find_fd_entry:
l00407410:
	word32 dwLoc10_38 = Mem15[r4 + 8<32>:word32]
l00407448:
	branch dwLoc10_38 == 0<32> l00407494
l00407458:
	branch Mem20[dwLoc10_38:word32] != r5 l0040747C
l0040747C:
	dwLoc10_38 = Mem20[dwLoc10_38 + 0x18<32>:word32]
l00407474:
l00407494:
	return
slist_find_fd_exit:


void slist_delete(word32 r4, word32 r5, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      slist_destroy_all
// MayUse:  r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5 r6 r7
// Preserved: r30 ra sp
slist_delete_entry:
l004074AC:
	slist_remove(r4, r5)
	word32 r5_39
	word32 r6_63
	word32 r7_64
	word32 r25_65
	print_log(2<i32>, 0x40A87C<32>, out r5_39, out r6_63, out r7_64, out r25_65)
	server_destroy(r5, ra)
	return
slist_delete_exit:


void slist_close_all(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      slist_destroy
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4
// Preserved: r30 ra sp
slist_close_all_entry:
l00407568:
	word32 dwLoc18_42 = Mem15[r4 + 8<32>:word32]
l004075A0:
	branch dwLoc18_42 != 0<32> l004075B8
l004075B8:
	server_close(dwLoc18_42)
	dwLoc18_42 = Mem20[dwLoc18_42 + 0x18<32>:word32]
l004075B0:
l004075EC:
	return
slist_close_all_exit:


void slist_destroy_all(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      slist_destroy
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5
// Preserved: r30 ra sp
slist_destroy_all_entry:
l00407600:
l00407638:
	branch Mem20[r4 + 8<32>:word32] != 0<32> l00407658
l00407658:
	slist_delete(r4, Mem20[r4 + 8<32>:word32], ra)
l00407650:
l00407694:
	return
slist_destroy_all_exit:


void slist_destroy(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r25 r28 r4
// Preserved: r30 ra sp
slist_destroy_entry:
l004076A8:
	slist_close_all(r4, ra)
	slist_destroy_all(r4, ra)
	free(r4)
	return
slist_destroy_exit:


void __fixunsdfsi(real64 f12_f13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Sequence f12:f13:[0..63]
// LiveOut:
// Trashed: cc0 f0 f1 f2 r1 r2 r25 r28 r3
// Preserved: FCSR sp
__fixunsdfsi_entry:
l00407740:
	branch !(f12_f13 >= 5.46040909e-315) l004077D4
l00407790:
l004077D4:
	return
__fixunsdfsi_exit:


void _fpadd_parts(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r2 r25 r28 r3 r4 r5 r7 r8 r9
// Preserved: sp
_fpadd_parts_entry:
l004077E0:
	word32 r7_10 = Mem0[r4:word32]
	branch CONVERT(r7_10 <u 2<i32>, bool, word32) != 0<32> l00407800_ds_t
l00407800_ds_t:
l00407800_ds_f:
l00407804:
	word32 r4_15 = Mem0[r5:word32]
	branch CONVERT(r4_15 <u 2<i32>, bool, word32) != 0<32> l00407814_ds_t
l00407814_ds_t:
l00407814_ds_f:
l00407818:
	branch (r7_10 ^ 4<32>) != 0<32> l00407820_ds_t
l00407820_ds_t:
l0040784C:
	branch (r4_15 ^ 4<32>) == 0<32> l00407850_ds_t
l00407850_ds_t:
l00407850_ds_f:
l00407854:
	branch (r4_15 ^ 2<32>) != 0<32> l0040785C_ds_t
l0040785C_ds_t:
l004078B4:
	branch (r7_10 ^ 2<32>) == 0<32> l004078B8_ds_t
l004078B8_ds_t:
l004078B8_ds_f:
l004078BC:
	word32 r8_27 = Mem0[r4 + 8<32>:word32]
	word32 r7_179 = Mem0[r5 + 8<32>:word32]
	word32 r10_29 = Mem0[r4 + 0xC<32>:word32]
	word32 r2_30 = r8_27 - r7_179
	word32 r9_31 = Mem0[r5 + 0xC<32>:word32]
	branch r2_30 >= 0<32> l004078DC
l004078D8:
	r2_30 = -r2_30
l004078DC:
	branch CONVERT(r2_30 < 32<i32>, bool, word32) == 0<32> l004078E4_ds_t
l004078E4_ds_t:
	word32 r2_37 = CONVERT(r7_179 < r8_27, bool, word32)
l0040793C:
	branch r2_37 == 0<32> l00407950
l00407950:
	r8_27 = r7_179
	r10_29 = 0<32>
l00407948:
	r9_31 = 0<32>
l004078E4_ds_f:
	word32 r2_41 = CONVERT(r7_179 < r8_27, bool, word32)
l004078E8:
	word32 r2_42
	branch r2_41 == 0<32> l004078EC_ds_t
l004078EC_ds_t:
	r2_42 = CONVERT(r8_27 < r7_179, bool, word32)
l004078EC_ds_f:
l004078F0:
	word32 r7_44 = r8_27 - r7_179
l004078F4:
	word32 r3_46 = r9_31 >>u 1<8>
	word32 r2_47 = r9_31 & 1<32>
	r7_44 = r7_44 + -1<i32>
	branch r7_44 != 0<32> l00407904_ds_t
l00407904_ds_t:
	r9_31 = r2_47 | r3_46
l00407904_ds_f:
	r9_31 = r2_47 | r3_46
l00407908:
	r7_179 = r8_27
	r2_42 = CONVERT(r8_27 < r8_27, bool, word32)
l00407910:
	branch r2_42 == 0<32> l00407958
l0040791C:
	r8_27 = r8_27 + 1<i32>
	word32 r2_59 = r10_29 >>u 1<8>
	word32 r3_60 = r10_29 & 1<32>
	branch CONVERT(r8_27 < r7_179, bool, word32) != 0<32> l00407930_ds_t
l00407930_ds_t:
	r10_29 = r3_60 | r2_59
l00407930_ds_f:
	r10_29 = r3_60 | r2_59
l00407934:
l00407958:
	word32 r7_102
	word32 r4_75 = Mem0[r4 + 4<32>:word32]
	branch r4_75 == Mem0[r5 + 4<32>:word32] l004079F0
l004079F0:
	Mem97[r6 + 4<32>:word32] = r4_75
	Mem100[r6 + 8<32>:word32] = r8_27
	word32 r2_90 = r10_29 + r9_31
	Mem101[r6 + 0xC<32>:word32] = r2_90
	r7_102 = r2_90
l0040796C:
	word32 r3_104
	branch r4_75 != 0<32> l00407970_ds_t
l00407970_ds_t:
	r3_104 = r9_31 - r10_29
l00407970_ds_f:
l00407974:
	r3_104 = r10_29 - r9_31
l00407978:
	branch r3_104 < 0<32> l0040797C_ds_t
l0040797C_ds_t:
l00407990:
	Mem111[r6 + 4<32>:word32] = 1<i32>
	Mem113[r6 + 8<32>:word32] = r8_27
	Mem114[r6 + 0xC<32>:word32] = -r3_104
l0040797C_ds_f:
l00407980:
	Mem116[r6 + 8<32>:word32] = r8_27
	Mem117[r6 + 0xC<32>:word32] = r3_104
	Mem118[r6 + 4<32>:word32] = 0<32>
l004079A0:
	r7_102 = Mem120[r6 + 0xC<32>:word32]
	branch CONVERT(r7_102 >u 0xC0000001<32>, bool, word32) != 0<32> l004079B8_ds_t
l004079B8_ds_t:
l004079B8_ds_f:
l004079BC:
	Mem138[r6 + 8<32>:word32] = Mem131[r6 + 8<32>:word32] + -1<i32>
	word32 r5_129 = r7_102 << 1<8>
	Mem139[r6 + 0xC<32>:word32] = r5_129
	branch CONVERT(r5_129 >u 0xC0000001<32>, bool, word32) == 0<32> l004079E4_ds_t
l004079E4_ds_t:
	r7_102 = r5_129
l004079E4_ds_f:
	r7_102 = r5_129
l004079E8:
l00407A08:
	branch r7_102 >= 0<32> l00407A0C_ds_t
l00407A0C_ds_t:
	Mem146[r6:word32] = 3<i32>
l00407A0C_ds_f:
	Mem147[r6:word32] = 3<i32>
l00407A10:
	word32 r2_148 = Mem147[r6 + 8<32>:word32]
	Mem153[r6 + 0xC<32>:word32] = r7_102 & 1<32> | r7_102 >>u 1<8>
	Mem154[r6 + 8<32>:word32] = r2_148 + 1<i32>
l00407A2C:
l0040785C_ds_f:
l00407860:
	branch (r7_10 ^ 2<32>) != 0<32> l004078AC
l004078AC:
	return
l0040786C:
	Mem160[r6:word32] = r7_10
	Mem163[r6 + 4<32>:word32] = Mem160[r4 + 4<32>:word32]
	Mem165[r6 + 8<32>:word32] = Mem163[r4 + 8<32>:word32]
	Mem167[r6 + 0xC<32>:word32] = Mem165[r4 + 0xC<32>:word32]
	Mem171[r6 + 4<32>:word32] = Mem167[r4 + 4<32>:word32] & Mem167[r5 + 4<32>:word32]
	return
l00407820_ds_f:
l00407824:
	branch (r4_15 ^ 4<32>) != 0<32> l00407844
l00407830:
	branch Mem0[r4 + 4<32>:word32] != Mem0[r5 + 4<32>:word32] l00407A30
l00407A30:
	return
l00407844:
	return
_fpadd_parts_exit:


void __addsf3(word32 r16, word32 ra, word32 f12, word32 f14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f14:[0..31] r16:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5 r6
// Preserved: r16 r17 ra sp
__addsf3_entry:
l00407A38:
	__unpack_f(fp + -24<i32>, fp + -72<i32>)
	__unpack_f(fp + -20<i32>, fp + -56<i32>)
	word32 r2_48
	call 0x4077E0<32> (retsize: 0;)
		uses: r25:0x4077E0<32>,r4:fp + -72<i32>,r5:fp + -56<i32>,r6:fp + -40<i32>
		defs: r2:r2_48
	__pack_f(r2_48)
	return
__addsf3_exit:


void __subsf3(word32 r16, word32 ra, word32 f12, word32 f14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f14:[0..31] r16:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r4 r5 r6
// Preserved: r16 r17 ra sp
__subsf3_entry:
l00407AE0:
	__unpack_f(fp + -24<i32>, fp + -72<i32>)
	__unpack_f(fp + -20<i32>, fp + -56<i32>)
	word32 r2_50
	call 0x4077E0<32> (retsize: 0;)
		uses: r2:dwLoc34 ^ 1<32>,r25:0x4077E0<32>,r4:fp + -72<i32>,r5:fp + -56<i32>,r6:fp + -40<i32>,Stack +002C:dwLoc34 ^ 1<32>
		defs: r2:r2_50
	__pack_f(r2_50)
	return
__subsf3_exit:


void __mulsf3(word32 r16, word32 ra, word32 f12, word32 f14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f14:[0..31] r16:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: r16 r17 ra sp
__mulsf3_entry:
l00407BA0:
	__unpack_f(fp + -24<i32>, fp + -72<i32>)
	__unpack_f(fp + -20<i32>, fp + -56<i32>)
	branch CONVERT(dwLoc48 <u 2<i32>, bool, word32) != 0<32> l00407C08_ds_t
l00407C08_ds_t:
l00407C08_ds_f:
l00407C0C:
	branch CONVERT(dwLoc38 <u 2<i32>, bool, word32) != 0<32> l00407C1C_ds_t
l00407C1C_ds_t:
l00407C1C_ds_f:
l00407C20:
	branch (dwLoc48 ^ 4<32>) != 0<32> l00407C24_ds_t
l00407C24_ds_t:
l00407C40:
	branch (dwLoc38 ^ 4<32>) != 0<32> l00407C44_ds_t
l00407C44_ds_t:
l00407C5C:
	branch (dwLoc48 ^ 2<32>) != 0<32> l00407C60_ds_t
l00407C60_ds_t:
l00407C80:
	branch (dwLoc38 ^ 2<32>) != 0<32> l00407CA8
l00407CA8:
	word32 r4_106
	uint64 hi_lo_57 = dwLoc3C *u dwLoc2C
	word32 hi_67 = SLICE(hi_lo_57, word32, 32)
	word32 lo_69 = SLICE(hi_lo_57, word32, 0)
	word32 r6_109 = hi_67 >> 0<8>
	branch hi_67 >> 0<8> >= 0<32> l00407CF4_ds_t
l00407CF4_ds_t:
	r4_106 = lo_69
l00407CF4_ds_f:
	r4_106 = lo_69
l00407CF8:
	word32 r2_78 = hi_67 >> 0<8> & 1<32>
l00407D04:
	branch r2_78 == 0<32> l00407D0C_ds_t
l00407D0C_ds_t:
	r6_109 = r6_109 >>u 1<8>
l00407D0C_ds_f:
	r6_109 = r6_109 >>u 1<8>
l00407D10:
	r4_106 = r4_106 >>u 1<8> | 0x80000000<32>
l00407D18:
	branch r6_109 < 0<32> l00407D1C_ds_t
l00407D1C_ds_t:
	r2_78 = r6_109 & 1<32>
l00407D1C_ds_f:
l00407D20:
l00407D24:
	branch CONVERT(r6_109 >u 0x3FFFFFFF<32>, bool, word32) != 0<32> l00407D6C
l00407D38:
l00407D48:
	r6_109 = r6_109 << 1<8>
	branch (r4_106 & 0x80000000<32>) == 0<32> l00407D54_ds_t
l00407D54_ds_t:
l00407D54_ds_f:
l00407D58:
	r6_109 = r6_109 | 1<32>
l00407D5C:
	branch CONVERT(r6_109 >u 0x3FFFFFFF<32>, bool, word32) == 0<32> l00407D64_ds_t
l00407D64_ds_t:
	r4_106 = r4_106 << 1<8>
l00407D64_ds_f:
	r4_106 = r4_106 << 1<8>
l00407D68:
l00407D6C:
	branch (r6_109 & 0x7F<32>) != 64<i32> l00407D78_ds_t
l00407D78_ds_t:
l00407D78_ds_f:
l00407D7C:
	branch (r6_109 & 0x80<32>) != 0<32> l00407D90
l00407D88:
	branch r4_106 == 0<32> l00407D8C_ds_t
l00407D8C_ds_t:
l00407D8C_ds_f:
l00407D90:
l00407D98:
l00407C60_ds_f:
l00407C44_ds_f:
l00407C48:
	branch (dwLoc48 ^ 2<32>) == 0<32> l00407DA4
l00407C54:
l00407C8C:
l00407C24_ds_f:
l00407C28:
	branch (dwLoc38 ^ 2<32>) == 0<32> l00407DA4
l00407C38:
l00407C64:
l00407DA4:
	__pack_f(r4)
	return
__mulsf3_exit:


void __divsf3(word32 r16, word32 ra, word32 f12, word32 f14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f14:[0..31] r16:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7 r8
// Preserved: r16 r17 ra sp
__divsf3_entry:
l00407DD0:
	__unpack_f(fp + -24<i32>, fp + -56<i32>)
	__unpack_f(fp + -20<i32>, fp + -40<i32>)
	branch CONVERT(dwLoc38 <u 2<i32>, bool, word32) != 0<32> l00407E38_ds_t
l00407E38_ds_t:
l00407E38_ds_f:
l00407E3C:
	branch CONVERT(dwLoc28 <u 2<i32>, bool, word32) != 0<32> l00407E4C_ds_t
l00407E4C_ds_t:
l00407E4C_ds_f:
l00407E50:
	branch (dwLoc38 ^ 4<32>) == 0<32> l00407E64_ds_t
l00407E64_ds_t:
l00407E64_ds_f:
l00407E68:
	branch (dwLoc38 ^ 2<32>) != 0<32> l00407E70_ds_t
l00407E70_ds_t:
l00407E88:
	branch (dwLoc28 ^ 4<32>) != 0<32> l00407E8C_ds_t
l00407E8C_ds_t:
l00407EA0:
	branch (dwLoc28 ^ 2<32>) != 0<32> l00407EA4_ds_t
l00407EA4_ds_t:
l00407EB4:
	word32 r4_186 = dwLoc2C
	word32 r5_185 = CONVERT(dwLoc2C <u dwLoc1C, bool, word32)
	branch r5_185 == 0<32> l00407ED0_ds_t
l00407ED0_ds_t:
l00407ED0_ds_f:
l00407ED4:
	r4_186 = dwLoc2C << 1<8>
	r5_185 = CONVERT(dwLoc2C << 1<8> <u dwLoc1C, bool, word32)
l00407EE4:
	word32 r2_76 = 0x40000000<32>
	word32 r6_77 = 0<32>
l00407EEC:
	branch r5_185 != 0<32> l00407F00
l00407EF8:
	r6_77 = r6_77 | r2_76
	r4_186 = r4_186 - dwLoc1C
l00407F00:
	r4_186 = r4_186 << 1<8>
	r2_76 = r2_76 >>u 1<8>
	branch r2_76 != 0<32> l00407F0C_ds_t
l00407F0C_ds_t:
	r5_185 = CONVERT(r4_186 <u dwLoc1C, bool, word32)
l00407F0C_ds_f:
l00407F10:
	branch (r6_77 & 0x7F<32>) != 64<i32> l00407F1C_ds_t
l00407F1C_ds_t:
l00407F1C_ds_f:
	word32 r2_96 = r6_77 & 0x80<32>
l00407F20:
	branch r2_96 != 0<32> l00407F30
l00407F28:
	branch r4_186 == 0<32> l00407F34
l00407F30:
l00407F34:
l00407EA4_ds_f:
l00407EA8:
l00407E8C_ds_f:
l00407E90:
l00407E70_ds_f:
l00407E74:
	branch dwLoc38 == dwLoc28 l00407F3C
l00407E80:
l00407F3C:
	__pack_f(r4)
	return
__divsf3_exit:


void __floatsisf(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: f0 r1 r2 r25 r28 r3
// Preserved: r4 r5 r6 ra sp
__floatsisf_entry:
l00407F70:
	branch r4 != 0<32> l00407F98_ds_t
l00407F98_ds_t:
l00407FA8:
	word32 dwLoc0C_75
	branch r4 >>u 0x1F<8> == 0<32> l00407FB0_ds_t
l00407FB0_ds_t:
l00407FD0:
	dwLoc0C_75 = r4
l00407FB0_ds_f:
l00407FB4:
	branch r4 == 0x80000000<32> l00407FC4_ds_t
l00407FC4_ds_t:
l00407FC4_ds_f:
	word32 r2_24 = -r4
l00407FC8:
	dwLoc0C_75 = r2_24
l00407FD4:
	word32 r6_28 = dwLoc0C_75
	branch CONVERT(dwLoc0C_75 >u 0x3FFFFFFF<32>, bool, word32) != 0<32> l00408014
l00407FEC:
l00407FF8:
	word32 r3_36 = r6_28 << 1<8>
	branch CONVERT(r3_36 >u 0x3FFFFFFF<32>, bool, word32) == 0<32> l00408008_ds_t
l00408008_ds_t:
	r6_28 = r3_36
l00408008_ds_f:
l0040800C:
l00407F98_ds_f:
l00407F9C:
l00408014:
	__pack_f(fp + -24<i32>)
l00408028:
	return
__floatsisf_exit:


void __fixsfsi(word32 ra, word32 f12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5
// Preserved: ra sp
__fixsfsi_entry:
l00408040:
	__unpack_f(fp + -16<i32>, fp + -32<i32>)
	branch (dwLoc20 ^ 2<32>) == 0<32> l00408080_ds_t
l00408080_ds_t:
l00408080_ds_f:
l00408084:
	branch CONVERT(dwLoc20 <u 2<i32>, bool, word32) != 0<32> l004080E8
l00408090:
	branch (dwLoc20 ^ 4<32>) == 0<32> l004080B8
l0040809C:
	branch dwLoc18 < 0<32> l004080A8_ds_t
l004080A8_ds_t:
l004080A8_ds_f:
l004080AC:
	branch CONVERT(dwLoc18 < 31<i32>, bool, word32) != 0<32> l004080CC
l004080CC:
	branch dwLoc1C == 0<32> l004080E0_ds_t
l004080E0_ds_t:
l004080E0_ds_f:
l004080E4:
l004080B8:
l004080E8:
	return
__fixsfsi_exit:


void __extendsfdf2(word32 ra, word32 f12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: ra sp
__extendsfdf2_entry:
l00408100:
	__unpack_f(fp + -16<i32>, fp + -32<i32>)
	__make_dp(dwLoc1C, dwLoc18, ra, dwLoc14 >>u 2<8>, dwLoc14 << 0x1E<8>)
	return
__extendsfdf2_exit:


void _fpadd_parts(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r2 r24 r25 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: r14 r15 sp
_fpadd_parts_entry:
l00408180:
	word32 r7_10 = Mem0[r4:word32]
	branch CONVERT(r7_10 <u 2<i32>, bool, word32) != 0<32> l004081A4_ds_t
l004081A4_ds_t:
l004081A4_ds_f:
l004081A8:
	word32 r4_18 = Mem0[r5:word32]
	branch CONVERT(r4_18 <u 2<i32>, bool, word32) != 0<32> l004081B8_ds_t
l004081B8_ds_t:
l004081B8_ds_f:
l004081BC:
	branch (r7_10 ^ 4<32>) != 0<32> l004081C4_ds_t
l004081C4_ds_t:
l004081F0:
	branch (r4_18 ^ 4<32>) == 0<32> l004081F4_ds_t
l004081F4_ds_t:
l004081F4_ds_f:
l004081F8:
	branch (r4_18 ^ 2<32>) != 0<32> l00408200_ds_t
l00408200_ds_t:
l00408270:
	branch (r7_10 ^ 2<32>) == 0<32> l00408274_ds_t
l00408274_ds_t:
l00408274_ds_f:
l00408278:
	word32 r12_136 = Mem0[r4 + 8<32>:word32]
	word32 r7_268 = Mem0[r5 + 8<32>:word32]
	word32 r10_120 = Mem0[r4 + 0x10<32>:word32]
	word32 r11_113 = Mem0[r4 + 0x14<32>:word32]
	word32 r2_34 = r12_136 - r7_268
	word32 r8_124 = Mem0[r5 + 0x10<32>:word32]
	word32 r9_109 = Mem0[r5 + 0x14<32>:word32]
	branch r2_34 >= 0<32> l004082A0
l0040829C:
	r2_34 = -r2_34
l004082A0:
	branch CONVERT(r2_34 < 64<i32>, bool, word32) == 0<32> l004082A8_ds_t
l004082A8_ds_t:
	word32 r2_42 = CONVERT(r7_268 < r12_136, bool, word32)
l00408338:
	branch r2_42 == 0<32> l00408350
l00408350:
	r12_136 = r7_268
	r10_120 = 0<32>
	r11_113 = 0<32>
l00408344:
	r8_124 = 0<32>
	r9_109 = 0<32>
l004082A8_ds_f:
	word32 r2_48 = CONVERT(r7_268 < r12_136, bool, word32)
l004082AC:
	word32 r2_49
	branch r2_48 == 0<32> l004082B0_ds_t
l004082B0_ds_t:
	r2_49 = CONVERT(r12_136 < r7_268, bool, word32)
l004082B0_ds_f:
l004082B4:
	word32 r7_53 = r12_136 - r7_268
l004082C0:
	word32 r5_60 = r9_109 >>u 1<8> | r8_124 << 0x1F<8>
	word32 r3_62 = r9_109 & 1<i32>
	r7_53 = r7_53 + -1<i32>
	r8_124 = r8_124 >>u 1<8>
	branch r7_53 != 0<32> l004082E4_ds_t
l004082E4_ds_t:
	r9_109 = r3_62 | r5_60
l004082E4_ds_f:
	r9_109 = r3_62 | r5_60
l004082E8:
	r7_268 = r12_136
	r2_49 = CONVERT(r12_136 < r12_136, bool, word32)
l004082F0:
	branch r2_49 == 0<32> l0040835C
l004082FC:
l00408304:
	r12_136 = r12_136 + 1<i32>
	word32 r5_81 = r11_113 >>u 1<8> | r10_120 << 0x1F<8>
	word32 r3_86 = r11_113 & 1<i32>
	r10_120 = r10_120 >>u 1<8>
	branch CONVERT(r12_136 < r7_268, bool, word32) != 0<32> l0040832C_ds_t
l0040832C_ds_t:
	r11_113 = r3_86 | r5_81
l0040832C_ds_f:
	r11_113 = r3_86 | r5_81
l00408330:
l0040835C:
	word32 r6_102 = Mem0[r4 + 4<32>:word32]
	branch r6_102 == Mem0[r5 + 4<32>:word32] l0040836C_ds_t
l0040836C_ds_t:
l00408470:
	Mem135[r6 + 4<32>:word32] = r6_102
	Mem138[r6 + 8<32>:word32] = r12_136
	word32 r3_118 = r11_113 + r9_109
	Mem139[r6 + 0x10<32>:word32] = r10_120 + r8_124 + CONVERT(r3_118 <u r9_109, bool, word32)
	Mem140[r6 + 0x14<32>:word32] = r3_118
l0040836C_ds_f:
	word32 r2_141 = CONVERT(r9_109 <u r11_113, bool, word32)
l00408370:
	word32 r4_144
	word32 r5_142 = r9_109 - r11_113
	word32 r4_143 = r8_124 - r10_120
	branch r6_102 != 0<32> l0040837C_ds_t
l0040837C_ds_t:
	r4_144 = r4_143 - r2_141
l0040837C_ds_f:
l00408380:
	r5_142 = r11_113 - r9_109
	r4_144 = r10_120 - r8_124 - CONVERT(r11_113 <u r9_109, bool, word32)
l00408390:
	branch r4_144 < 0<32> l00408394_ds_t
l00408394_ds_t:
l004083AC:
	Mem158[r6 + 4<32>:word32] = 1<i32>
	Mem160[r6 + 8<32>:word32] = r12_136
	word32 r5_153 = -r5_142
	Mem161[r6 + 0x10<32>:word32] = -r4_144 - CONVERT(r5_153 >u 0<32>, bool, word32)
	Mem162[r6 + 0x14<32>:word32] = r5_153
l00408394_ds_f:
l00408398:
	Mem164[r6 + 8<32>:word32] = r12_136
	Mem165[r6 + 0x10<32>:word32] = r4_144
	Mem166[r6 + 0x14<32>:word32] = r5_142
	Mem167[r6 + 4<32>:word32] = 0<32>
l004083CC:
	word32 r9_171 = Mem169[r6 + 0x14<32>:word32]
	word32 r8_170 = Mem169[r6 + 0x10<32>:word32]
	word32 r4_176 = r8_170 + -1<i32> + CONVERT(r9_171 <u 0<i32>, bool, word32)
	branch CONVERT(r4_176 >u 0xFFFFFFF<32>, bool, word32) != 0<32> l00408490
l004083F8:
	word32 r2_179
	branch r4_176 != 0xFFFFFFF<32> l004083FC_ds_t
l004083FC_ds_t:
	r2_179 = r9_171 >>u 0x1F<8>
l004083FC_ds_f:
l00408400:
	branch CONVERT(r9_171 <u 0<i32>, bool, word32) == 0<32> l00408490
l0040840C:
	r2_179 = r9_171 >>u 0x1F<8>
l00408410:
	word32 r6_186 = r8_170 << 1<8>
l00408414:
	word32 r7_194 = r9_171 << 1<8>
	word32 r6_189 = r6_186 | r2_179
	Mem203[r6 + 8<32>:word32] = Mem191[r6 + 8<32>:word32] + -1<i32>
	Mem204[r6 + 0x10<32>:word32] = r6_189
	Mem205[r6 + 0x14<32>:word32] = r7_194
	word32 r4_199 = r6_189 + -1<i32> + CONVERT(r7_194 <u 0<i32>, bool, word32)
	branch CONVERT(r4_199 >u 0xFFFFFFF<32>, bool, word32) != 0<32> l00408450_ds_t
l00408450_ds_t:
l00408450_ds_f:
	word32 r11_207 = CONVERT(r7_194 <u 0<i32>, bool, word32)
l00408454:
	r8_170 = r6_189
	branch r4_199 != 0xFFFFFFF<32> l0040845C_ds_t
l0040845C_ds_t:
	r9_171 = r7_194
l0040845C_ds_f:
	r9_171 = r7_194
l00408460:
	branch r11_207 == 0<32> l00408464_ds_t
l00408464_ds_t:
l00408490:
	branch CONVERT(Mem213[r6 + 0x10<32>:word32] >u 0x1FFFFFFF<32>, bool, word32) == 0<32> l004084A8_ds_t
l004084A8_ds_t:
	Mem219[r6:word32] = 3<i32>
l004084A8_ds_f:
	Mem220[r6:word32] = 3<i32>
l004084AC:
	word32 r4_221 = Mem220[r6 + 0x10<32>:word32]
	word32 r5_222 = Mem220[r6 + 0x14<32>:word32]
	word32 r6_230 = Mem220[r6 + 8<32>:word32]
	Mem235[r6 + 0x10<32>:word32] = r4_221 >>u 1<8>
	Mem236[r6 + 0x14<32>:word32] = r5_222 & 1<i32> | (r5_222 >>u 1<8> | r4_221 << 0x1F<8>)
	Mem237[r6 + 8<32>:word32] = r6_230 + 1<i32>
l004084F0:
l00408464_ds_f:
	r2_179 = r7_194 >>u 0x1F<8>
l00408468:
	r6_186 = r6_189 << 1<8>
l00408200_ds_f:
l00408204:
	branch (r7_10 ^ 2<32>) != 0<32> l00408268
l00408268:
	return
l00408210:
	Mem245[r6:word32] = r7_10
	Mem248[r6 + 4<32>:word32] = Mem245[r4 + 4<32>:word32]
	Mem250[r6 + 8<32>:word32] = Mem248[r4 + 8<32>:word32]
	Mem252[r6 + 0xC<32>:word32] = Mem250[r4 + 0xC<32>:word32]
	Mem254[r6 + 0x10<32>:word32] = Mem252[r4 + 0x10<32>:word32]
	Mem256[r6 + 0x14<32>:word32] = Mem254[r4 + 0x14<32>:word32]
	Mem260[r6 + 4<32>:word32] = Mem256[r4 + 4<32>:word32] & Mem256[r5 + 4<32>:word32]
	return
l004081C4_ds_f:
l004081C8:
	branch (r4_18 ^ 4<32>) != 0<32> l004081E8
l004081D4:
	branch Mem0[r4 + 4<32>:word32] != Mem0[r5 + 4<32>:word32] l004084F4
l004084F4:
	return
l004081E8:
	return
_fpadd_parts_exit:


void __adddf3(word32 r16, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r16:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7 r8
// Preserved: r16 r17 r18 ra sp
__adddf3_entry:
l004084FC:
	__unpack_d(fp + -40<i32>, fp + -112<i32>)
	__unpack_d(fp + -32<i32>, fp + -88<i32>)
	word32 r2_64
	call 0x408180<32> (retsize: 0;)
		uses: r25:0x408180<32>,r4:fp + -112<i32>,r5:fp + -88<i32>,r6:fp + -64<i32>
		defs: r2:r2_64
	__pack_d(r2_64)
	return
__adddf3_exit:


void __subdf3(word32 r16, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r16:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7 r8
// Preserved: r16 r17 r18 ra sp
__subdf3_entry:
l004085CC:
	__unpack_d(fp + -40<i32>, fp + -112<i32>)
	__unpack_d(fp + -32<i32>, fp + -88<i32>)
	word32 r2_67
	call 0x408180<32> (retsize: 0;)
		uses: r2:dwLoc54 ^ 1<32>,r25:0x408180<32>,r4:fp + -112<i32>,r5:fp + -88<i32>,r6:fp + -64<i32>,Stack +0034:dwLoc54 ^ 1<32>
		defs: r2:r2_67
	__pack_d(r2_67)
	return
__subdf3_exit:


void __muldf3(word32 r17, word32 r19, word32 r20, word32 r21, word32 r22, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r17:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
__muldf3_entry:
l004086B0:
	__unpack_d(fp + -64<i32>, fp + -136<i32>)
	__unpack_d(fp + -56<i32>, fp + -112<i32>)
	branch CONVERT(dwLoc88 <u 2<i32>, bool, word32) != 0<32> l0040874C_ds_t
l0040874C_ds_t:
l0040874C_ds_f:
l00408750:
	branch CONVERT(dwLoc70 <u 2<i32>, bool, word32) != 0<32> l00408760_ds_t
l00408760_ds_t:
l00408760_ds_f:
l00408764:
	branch (dwLoc88 ^ 4<32>) != 0<32> l00408768_ds_t
l00408768_ds_t:
l00408784:
	branch (dwLoc70 ^ 4<32>) != 0<32> l00408788_ds_t
l00408788_ds_t:
l004087A0:
	branch (dwLoc88 ^ 2<32>) != 0<32> l004087A4_ds_t
l004087A4_ds_t:
l004087C4:
	branch (dwLoc70 ^ 2<32>) != 0<32> l004087EC
l004087EC:
	word32 r16_166
	int64 hi_lo_116 = (dwLoc60 >>u 0<8>) *u dwLoc74
	int64 hi_lo_122 = dwLoc5C *u (dwLoc78 >>u 0<8>)
	word32 lo_119 = SLICE(hi_lo_116, word32, 0)
	word32 lo_125 = SLICE(hi_lo_122, word32, 0)
	word32 r21_136 = lo_119 + lo_125
	word32 r24_131 = SLICE(hi_lo_116, word32, 32) + (dwLoc60 >>u 0<8>) *s 0<i32> + dwLoc74 *s 0<32>
	int64 hi_lo_147 = dwLoc5C *u dwLoc74
	int64 hi_lo_153 = (dwLoc60 >>u 0<8>) *u (dwLoc78 >>u 0<8>)
	word32 lo_160 = (dwLoc78 >>u 0<8>) *s 0<32>
	word32 r20_140 = r24_131 + ((SLICE(hi_lo_122, word32, 32) + dwLoc5C *s 0<32>) + (dwLoc78 >>u 0<8>) *s 0<i32>) + CONVERT(r21_136 <u lo_125, bool, word32)
	word32 dwLoc30_660 = 0<32>
	word32 lo_150 = SLICE(hi_lo_147, word32, 0)
	word32 r16_152 = SLICE(hi_lo_147, word32, 32) + dwLoc5C *s 0<i32>
	word32 lo_156 = SLICE(hi_lo_153, word32, 0)
	word32 r18_162 = SLICE(hi_lo_153, word32, 32) + (dwLoc60 >>u 0<8>) *s 0<32> + lo_160
	branch CONVERT(r20_140 <u r24_131, bool, word32) != 0<32> l00408910_ds_t
l00408910_ds_t:
	r16_166 = r16_152 + dwLoc74 *s 0<i32>
l00408910_ds_f:
	r16_166 = r16_152 + dwLoc74 *s 0<i32>
l00408914:
	branch r24_131 != r20_140 l00408918_ds_t
l00408918_ds_t:
l00408918_ds_f:
	word32 r2_169 = CONVERT(r21_136 <u lo_119, bool, word32)
l0040891C:
	branch r2_169 == 0<32> l00408934
l00408924:
	dwLoc30_660 = 1<i32>
l00408934:
	word32 r10_189 = r16_166 + lo_160 + CONVERT(lo_150 <u 0<32>, bool, word32)
	word32 dwLoc2C_667 = 0<32>
	branch CONVERT(r10_189 <u r16_166, bool, word32) != 0<32> l00408978
l00408968:
	branch r16_166 != r10_189 l0040896C_ds_t
l0040896C_ds_t:
l0040896C_ds_f:
	word32 r2_192 = CONVERT(lo_150 <u lo_150, bool, word32)
l00408970:
	branch r2_192 == 0<32> l00408998
l00408978:
	dwLoc30_660 = dwLoc30_660 + CONVERT(false, bool, word32)
	dwLoc2C_667 = 1<i32>
l00408998:
	word32 r7_256
	word32 r5_218 = (r20_140 >>u 0<8>) + lo_156
	word32 r13_237 = dwLoc2C_667 + r5_218
	word32 r12_243 = dwLoc30_660 + (r18_162 + CONVERT(r5_218 <u lo_156, bool, word32)) + CONVERT(r13_237 <u r5_218, bool, word32)
	word32 r6_253 = r10_189
	branch CONVERT(r12_243 >u 0x1FFFFFFF<32>, bool, word32) == 0<32> l00408A14_ds_t
l00408A14_ds_t:
	r7_256 = lo_150
l00408A14_ds_f:
	r7_256 = lo_150
l00408A18:
l00408A38:
	r12_243 = r12_243 >>u 1<8>
	r13_237 = r13_237 >>u 1<8> | r12_243 << 0x1F<8>
	word32 r4_275 = CONVERT(r12_243 >u 0x1FFFFFFF<32>, bool, word32)
	branch (r13_237 & 1<i32>) == 0<32> l00408A54_ds_t
l00408A54_ds_t:
l00408A54_ds_f:
l00408A58:
	r6_253 = r6_253 >>u 1<8> | 0x80000000<32>
	r7_256 = r7_256 >>u 1<8> | r6_253 << 0x1F<8>
l00408A70:
	branch r4_275 != 0<32> l00408A74_ds_t
l00408A74_ds_t:
l00408A74_ds_f:
l00408A78:
l00408A7C:
	branch CONVERT(r12_243 >u 0xFFFFFFF<32>, bool, word32) != 0<32> l00408AF4
l00408A90:
l00408AAC:
	word32 r12_322 = r12_243 << 1<8> | r13_237 >>u 0x1F<8>
	r13_237 = r13_237 << 1<8>
	branch (r6_253 & 0x80000000<32>) == 0<32> l00408ACC_ds_t
l00408ACC_ds_t:
l00408ACC_ds_f:
l00408AD0:
	r13_237 = r13_237 | 1<i32>
l00408AD8:
	r12_243 = r12_322
	r6_253 = r6_253 << 1<8> | r7_256 >>u 0x1F<8>
	branch CONVERT(r12_322 >u 0xFFFFFFF<32>, bool, word32) == 0<32> l00408AEC_ds_t
l00408AEC_ds_t:
	r7_256 = r7_256 << 1<8>
l00408AEC_ds_f:
	r7_256 = r7_256 << 1<8>
l00408AF0:
l00408AF4:
	branch false l00408B04_ds_t
l00408B04_ds_t:
l00408B04_ds_f:
	word32 r5_356 = r13_237 & 255<i32>
l00408B08:
	branch r5_356 != 128<i32> l00408B10_ds_t
l00408B10_ds_t:
l00408B10_ds_f:
l00408B14:
	branch (r13_237 & 256<i32>) != 0<32> l00408B2C_ds_t
l00408B2C_ds_t:
l00408B2C_ds_f:
	word32 r2_372 = r7_256 | r6_253
l00408B30:
	branch r2_372 == 0<32> l00408B34_ds_t
l00408B34_ds_t:
l00408B34_ds_f:
l00408B38:
l00408B44:
l00408B48:
l004087A4_ds_f:
l00408788_ds_f:
l0040878C:
	branch (dwLoc88 ^ 2<32>) == 0<32> l00408B58
l00408798:
l004087D0:
l00408768_ds_f:
l0040876C:
	branch (dwLoc70 ^ 2<32>) == 0<32> l00408B58
l0040877C:
l004087A8:
l00408B58:
	__pack_d(r4)
	return
__muldf3_exit:


void __divdf3(word32 r17, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r17:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r25 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__divdf3_entry:
l00408BA0:
	__unpack_d(fp + -40<i32>, fp + -88<i32>)
	__unpack_d(fp + -32<i32>, fp + -64<i32>)
	branch CONVERT(dwLoc58 <u 2<i32>, bool, word32) != 0<32> l00408C2C_ds_t
l00408C2C_ds_t:
l00408C2C_ds_f:
l00408C30:
	branch CONVERT(dwLoc40 <u 2<i32>, bool, word32) != 0<32> l00408C40_ds_t
l00408C40_ds_t:
l00408C40_ds_f:
l00408C44:
	branch (dwLoc58 ^ 4<32>) == 0<32> l00408C58_ds_t
l00408C58_ds_t:
l00408C58_ds_f:
l00408C5C:
	branch (dwLoc58 ^ 2<32>) != 0<32> l00408C64_ds_t
l00408C64_ds_t:
l00408C7C:
	branch (dwLoc40 ^ 4<32>) != 0<32> l00408C80_ds_t
l00408C80_ds_t:
l00408CA0:
	branch (dwLoc40 ^ 2<32>) != 0<32> l00408CA4_ds_t
l00408CA4_ds_t:
l00408CB4:
	word32 r4_108 = dwLoc48
	word32 r5_109 = dwLoc44
	word32 r14_113 = CONVERT(dwLoc48 <u dwLoc30, bool, word32)
	branch r14_113 != 0<32> l00408CD8_ds_t
l00408CD8_ds_t:
l00408CD8_ds_f:
l00408CDC:
	branch dwLoc30 != dwLoc48 l00408CE0_ds_t
l00408CE0_ds_t:
l00408CE0_ds_f:
	word32 r2_101 = CONVERT(dwLoc44 <u dwLoc2C, bool, word32)
l00408CE4:
	branch r2_101 == 0<32> l00408D08
l00408CEC:
	r4_108 = dwLoc48 << 1<8> | dwLoc44 >>u 0x1F<8>
	r5_109 = dwLoc44 << 1<8>
	r14_113 = CONVERT(r4_108 <u dwLoc30, bool, word32)
l00408D08:
	word32 r10_114 = 0x10000000<32>
	word32 r11_115 = 0<i32>
	word32 r13_117 = 0<32>
l00408D18:
	branch r14_113 != 0<32> l00408D4C
l00408D24:
	word32 r2_123
	branch dwLoc30 != r4_108 l00408D28_ds_t
l00408D28_ds_t:
	r2_123 = CONVERT(r5_109 <u dwLoc2C, bool, word32)
l00408D28_ds_f:
l00408D2C:
	branch CONVERT(r5_109 <u dwLoc2C, bool, word32) != 0<32> l00408D34_ds_t
l00408D34_ds_t:
l00408D34_ds_f:
	r2_123 = CONVERT(r5_109 <u dwLoc2C, bool, word32)
l00408D38:
	r5_109 = r5_109 - dwLoc2C
	r4_108 = r4_108 - dwLoc30 - r2_123
	r13_117 = r13_117 | r11_115
l00408D4C:
	word32 r6_156 = r4_108 << 1<8> | r5_109 >>u 0x1F<8>
	r11_115 = r11_115 >>u 1<8> | r10_114 << 0x1F<8>
	r10_114 = r10_114 >>u 1<8>
	word32 r7_158 = r5_109 << 1<8>
	r4_108 = r6_156
	r14_113 = CONVERT(r6_156 <u dwLoc30, bool, word32)
	branch (r11_115 | r10_114) != 0<32> l00408D7C_ds_t
l00408D7C_ds_t:
	r5_109 = r7_158
l00408D7C_ds_f:
l00408D80:
	branch false l00408D90_ds_t
l00408D90_ds_t:
l00408D90_ds_f:
	word32 r5_170 = r13_117 & 255<i32>
l00408D94:
	branch r5_170 != 128<i32> l00408DD0
l00408DA0:
	branch (r13_117 & 256<i32>) != 0<32> l00408DB8_ds_t
l00408DB8_ds_t:
l00408DB8_ds_f:
	word32 r2_178 = r7_158 | r6_156
l00408DBC:
	branch r2_178 == 0<32> l00408DD0
l00408DC4:
l00408DD0:
l00408CA4_ds_f:
l00408CA8:
l00408C80_ds_f:
l00408C84:
l00408C64_ds_f:
l00408C68:
	branch dwLoc58 == dwLoc40 l00408DDC
l00408C74:
l00408DDC:
	__pack_d(r4)
	return
__divdf3_exit:


void __eqdf2(word32 r17, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r17:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7 r8
// Preserved: r16 r17 r18 ra sp
__eqdf2_entry:
l00408E10:
	__unpack_d(fp + -40<i32>, fp + -88<i32>)
	__unpack_d(fp + -32<i32>, fp + -64<i32>)
	branch CONVERT(dwLoc58 <u 2<i32>, bool, word32) != 0<32> l00408E9C_ds_t
l00408E9C_ds_t:
l00408E9C_ds_f:
l00408EA0:
	branch CONVERT(dwLoc40 <u 2<i32>, bool, word32) != 0<32> l00408EB0_ds_t
l00408EB0_ds_t:
l00408EB0_ds_f:
l00408EB4:
	__fpcmp_parts_d(r4, fp + -64<i32>)
l00408EC8:
	return
__eqdf2_exit:


void __nedf2(word32 r17, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r17:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7 r8
// Preserved: r16 r17 r18 ra sp
__nedf2_entry:
l00408EE0:
	__unpack_d(fp + -40<i32>, fp + -88<i32>)
	__unpack_d(fp + -32<i32>, fp + -64<i32>)
	branch CONVERT(dwLoc58 <u 2<i32>, bool, word32) != 0<32> l00408F6C_ds_t
l00408F6C_ds_t:
l00408F6C_ds_f:
l00408F70:
	branch CONVERT(dwLoc40 <u 2<i32>, bool, word32) != 0<32> l00408F80_ds_t
l00408F80_ds_t:
l00408F80_ds_f:
l00408F84:
	__fpcmp_parts_d(r4, fp + -64<i32>)
l00408F98:
	return
__nedf2_exit:


void __gedf2(word32 r17, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r17:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7 r8
// Preserved: r16 r17 r18 ra sp
__gedf2_entry:
l00408FB0:
	__unpack_d(fp + -40<i32>, fp + -88<i32>)
	__unpack_d(fp + -32<i32>, fp + -64<i32>)
	branch CONVERT(dwLoc58 <u 2<i32>, bool, word32) != 0<32> l0040903C_ds_t
l0040903C_ds_t:
l0040903C_ds_f:
l00409040:
	branch CONVERT(dwLoc40 <u 2<i32>, bool, word32) != 0<32> l00409050_ds_t
l00409050_ds_t:
l00409050_ds_f:
l00409054:
	__fpcmp_parts_d(r4, fp + -64<i32>)
l00409068:
	return
__gedf2_exit:


void __ltdf2(word32 r17, word32 ra, word32 f12, word32 f13, word32 f14, word32 f15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] f14:[0..31] f15:[0..31] r17:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7 r8
// Preserved: r16 r17 r18 ra sp
__ltdf2_entry:
l00409080:
	__unpack_d(fp + -40<i32>, fp + -88<i32>)
	__unpack_d(fp + -32<i32>, fp + -64<i32>)
	branch CONVERT(dwLoc58 <u 2<i32>, bool, word32) != 0<32> l0040910C_ds_t
l0040910C_ds_t:
l0040910C_ds_f:
l00409110:
	branch CONVERT(dwLoc40 <u 2<i32>, bool, word32) != 0<32> l00409120_ds_t
l00409120_ds_t:
l00409120_ds_f:
l00409124:
	__fpcmp_parts_d(r4, fp + -64<i32>)
l00409138:
	return
__ltdf2_exit:


void __floatsidf(word32 r4, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: f0 f1 r1 r2 r25 r28 r3
// Preserved: r4 r5 r6 ra sp
__floatsidf_entry:
l00409150:
	branch r4 != 0<32> l00409178_ds_t
l00409178_ds_t:
l00409188:
	word32 dwLoc0C_109
	word32 dwLoc10_88
	branch r4 >>u 0x1F<8> == 0<32> l00409190_ds_t
l00409190_ds_t:
l004091C0:
	dwLoc10_88 = r4 >> 0x1F<8>
	dwLoc0C_109 = r4
l00409190_ds_f:
l00409194:
	branch r4 == 0x80000000<32> l004091A8_ds_t
l004091A8_ds_t:
l004091A8_ds_f:
	word32 r2_28 = -r4
l004091AC:
	dwLoc10_88 = r2_28 >> 0x1F<8>
	dwLoc0C_109 = r2_28
l004091D0:
	branch CONVERT(dwLoc10_88 >u 0xFFFFFFF<32>, bool, word32) != 0<32> l0040922C
l004091E8:
l004091F4:
	word32 r2_48 = dwLoc10_88 << 1<8> | dwLoc0C_109 >>u 0x1F<8>
	dwLoc10_88 = r2_48
	dwLoc0C_109 = dwLoc0C_109 << 1<8>
	branch CONVERT(r2_48 >u 0xFFFFFFF<32>, bool, word32) == 0<32> l00409224_ds_t
l00409224_ds_t:
l00409224_ds_f:
l00409228:
l00409178_ds_f:
l0040917C:
l0040922C:
	__pack_d(fp + -32<i32>)
l00409240:
	return
__floatsidf_exit:


void __negdf2(word32 ra, word32 f12, word32 f13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6
// Preserved: ra sp
__negdf2_entry:
l00409250:
	__unpack_d(fp + -16<i32>, fp + -40<i32>)
	__pack_d(fp + -40<i32>)
	return
__negdf2_exit:


void __make_dp(word32 r5, word32 r6, word32 ra, word32 dwArg10, word32 dwArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __extendsfdf2
// MayUse:  r5:[0..31] r6:[0..31] ra:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6
// Preserved: ra sp
__make_dp_entry:
l004092D0:
	__pack_d(fp + -32<i32>)
	return
__make_dp_exit:


void __truncdfsf2(word32 ra, word32 f12, word32 f13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  f12:[0..31] f13:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r2 r25 r28 r3 r4 r5 r6 r7
// Preserved: ra sp
__truncdfsf2_entry:
l00409330:
	__unpack_d(fp + -16<i32>, fp + -40<i32>)
	branch (dwLoc14 & 0x3FFFFFFF<32>) == 0<32> l004093A8_ds_t
l004093A8_ds_t:
l004093A8_ds_f:
l004093AC:
l004093B0:
	__make_fp(dwLoc24, dwLoc20, r7, ra)
	return
__truncdfsf2_exit:


void __pack_f(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __addsf3
//      __subsf3
//      __mulsf3
//      __divsf3
//      __floatsisf
//      __make_fp
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: f0 r2 r25 r3 r4 r5 r6 r7
// Preserved: sp
__pack_f_entry:
l004093E0:
	word32 r3_7 = Mem0[r4:word32]
	word32 r4_22 = Mem0[r4 + 0xC<32>:word32]
	branch CONVERT(r3_7 <u 2<i32>, bool, word32) == 0<32> l004093F8_ds_t
l004093F8_ds_t:
l0040940C:
	branch (r3_7 ^ 4<32>) == 0<32> l004094C0
l00409418:
	branch (r3_7 ^ 2<32>) != 0<32> l0040942C
l0040942C:
	branch r4_22 == 0<32> l00409430_ds_t
l00409430_ds_t:
l00409430_ds_f:
l00409434:
	word32 r5_16 = Mem0[r4 + 8<32>:word32]
	branch CONVERT(r5_16 < -126<i32>, bool, word32) == 0<32> l00409444_ds_t
l00409444_ds_t:
	word32 r2_18 = CONVERT(r5_16 < 128<i32>, bool, word32)
l004094B4:
	branch r2_18 != 0<32> l004094CC
l004094CC:
	branch (r4_22 & 0x7F<32>) != 64<i32> l004094D8_ds_t
l004094D8_ds_t:
l004094F0:
	r4_22 = r4_22 + 63<i32>
l004094D8_ds_f:
l004094DC:
	branch (r4_22 & 0x80<32>) == 0<32> l004094F4
l004094E8:
	r4_22 = r4_22 + 64<i32>
l004094F4:
	branch r4_22 >= 0<32> l00409508
l00409500:
l00409508:
l004094C0:
l00409444_ds_f:
l00409448:
	word32 r4_44
	word32 r2_36 = -126<i32> - r5_16
	word32 r3_41 = CONVERT((r4_22 & (1<i32> << r2_36) + -1<i32>) >u 0<32>, bool, word32)
	word32 r4_42 = r4_22 >>u r2_36
	branch CONVERT(r2_36 < 26<i32>, bool, word32) != 0<32> l00409470_ds_t
l00409470_ds_t:
	r4_44 = r4_42 | r3_41
l00409470_ds_f:
l00409474:
	r4_44 = 0<32>
l00409478:
	branch (r4_44 & 0x7F<32>) != 64<i32> l0040949C
l0040949C:
l00409488:
	branch (r4_44 & 0x80<32>) == 0<32> l004094A0
l00409494:
l004094A0:
l00409424:
l004093F8_ds_f:
l004093FC:
l0040950C:
l00409510:
	return
__pack_f_exit:


void __unpack_f(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __addsf3
//      __subsf3
//      __mulsf3
//      __divsf3
//      __fixsfsi
//      __extendsfdf2
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6
// Preserved: sp
__unpack_f_entry:
l00409540:
	word32 r3_6 = Mem0[r4:word32]
	Mem14[r5 + 4<32>:word32] = r3_6 >>u 0x1F<8>
	word32 r4_13 = r3_6 >>u 0x17<8> & 0xFF<32>
	branch r4_13 != 0<32> l00409564_ds_t
l00409564_ds_t:
l004095C4:
	branch r4_13 != 255<i32> l004095CC_ds_t
l004095CC_ds_t:
l00409604:
	Mem22[r5 + 0xC<32>:word32] = (r3_6 & 0x7FFFFF<32>) << 7<8> | 0x40000000<32>
	Mem23[r5 + 8<32>:word32] = r4_13 + -127<i32>
	Mem24[r5:word32] = 3<i32>
	return
l004095CC_ds_f:
l004095D0:
	branch (r3_6 & 0x7FFFFF<32>) != 0<32> l004095D4_ds_t
l004095D4_ds_t:
l004095E4:
	branch (r3_6 & 0x7FFFFF<32> & 0x100000<32>) == 0<32> l004095EC_ds_t
l004095EC_ds_t:
l004095F8:
	Mem29[r5:word32] = 0<32>
l004095EC_ds_f:
l004095F0:
	Mem31[r5:word32] = 1<i32>
l004095FC:
	Mem34[r5 + 0xC<32>:word32] = r3_6 & 0x7FFFFF<32>
	return
l004095D4_ds_f:
l004095D8:
	Mem37[r5:word32] = 4<i32>
	return
l00409564_ds_f:
l00409568:
	branch (r3_6 & 0x7FFFFF<32>) != 0<32> l0040956C_ds_t
l0040956C_ds_t:
l0040957C:
	Mem45[r5 + 8<32>:word32] = -126<i32>
	word32 r5_40 = (r3_6 & 0x7FFFFF<32>) << 7<8>
	branch CONVERT(r5_40 >u 0x3FFFFFFF<32>, bool, word32) != 0<32> l00409598_ds_t
l00409598_ds_t:
	Mem46[r5:word32] = 3<i32>
l00409598_ds_f:
	Mem47[r5:word32] = 3<i32>
l0040959C:
	word32 r4_50 = -127<i32>
l004095A8:
	r5_40 = r5_40 << 1<8>
	branch CONVERT(r5_40 >u 0x3FFFFFFF<32>, bool, word32) == 0<32> l004095B4_ds_t
l004095B4_ds_t:
	r4_50 = r4_50 + -1<i32>
l004095B4_ds_f:
	word32 r4_57 = r4_50 + 0<i32>
l004095B8:
	Mem59[r5 + 8<32>:word32] = r4_57
l004095BC:
	Mem62[r5 + 0xC<32>:word32] = r5_40
	return
l0040956C_ds_f:
l00409570:
	Mem65[r5:word32] = 2<i32>
	return
__unpack_f_exit:


void __make_fp(word32 r5, word32 r6, word32 r7, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __truncdfsf2
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r25 r28 r4 r5 r6 r7
// Preserved: ra sp
__make_fp_entry:
l00409630:
	__pack_f(fp + -24<i32>)
	return
__make_fp_exit:


void __pack_d(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __adddf3
//      __subdf3
//      __muldf3
//      __divdf3
//      __floatsidf
//      __negdf2
//      __make_dp
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: f0 f1 r10 r11 r12 r13 r14 r15 r2 r25 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__pack_d_entry:
l00409680:
	word32 r3_9 = Mem0[r4:word32]
	word32 r10_10 = Mem0[r4 + 0x10<32>:word32]
	word32 r11_11 = Mem0[r4 + 0x14<32>:word32]
	branch CONVERT(r3_9 <u 2<i32>, bool, word32) == 0<32> l004096A4_ds_t
l004096A4_ds_t:
l004096C0:
	branch (r3_9 ^ 4<32>) == 0<32> l00409814
l004096CC:
	branch (r3_9 ^ 2<32>) != 0<32> l004096E4
l004096E4:
	branch (r11_11 | r10_10) == 0<32> l004098B8
l004096F0:
	word32 r4_18 = Mem0[r4 + 8<32>:word32]
	branch CONVERT(r4_18 < -1022<i32>, bool, word32) == 0<32> l00409700_ds_t
l00409700_ds_t:
	word32 r2_20 = CONVERT(r4_18 < 1024<i32>, bool, word32)
l00409808:
	branch r2_20 != 0<32> l00409824
l00409824:
	branch false l00409838_ds_t
l00409838_ds_t:
l00409838_ds_f:
l0040983C:
	branch (r11_11 & 255<i32>) != 128<i32> l00409874
l00409874:
	r10_10 = r10_10 + CONVERT(r11_11 <u 0<i32>, bool, word32)
l00409848:
	branch (r11_11 & 256<i32>) == 0<32> l00409860_ds_t
l00409860_ds_t:
l00409860_ds_f:
l00409864:
	r10_10 = r10_10 + CONVERT(r11_11 <u 0<i32>, bool, word32)
l00409880:
l00409884:
	branch CONVERT(r10_10 >u 0x1FFFFFFF<32>, bool, word32) == 0<32> l004098A8
l00409894:
l00409814:
l00409700_ds_f:
l00409704:
	word32 r10_101
	word32 r11_102
	word32 r4_64 = -1022<i32> - r4_18
	branch CONVERT(r4_64 < 57<i32>, bool, word32) != 0<32> l00409714_ds_t
l00409714_ds_t:
l00409724:
	word32 r5_74
	word32 r2_67 = 1<i32> << r4_64
	branch (r11_11 & r2_67 + -1<i32> | r10_10 & r2_67 + -1<i32> >> 0x1F<8>) == 0<32> l00409744_ds_t
l00409744_ds_t:
	r5_74 = 0<32>
l00409744_ds_f:
l00409748:
	r5_74 = 1<i32>
l0040974C:
	word32 r15_80
	word32 r14_88
	branch r4_64 << 0x1A<8> >= 0<32> l00409764
l00409764:
	branch r4_64 << 0x1A<8> == 0<32> l00409768_ds_t
l00409768_ds_t:
	r15_80 = r11_11 >>u r4_64
l00409768_ds_f:
	word32 r15_81 = r11_11 >>u r4_64
l0040976C:
	r15_80 = r15_81 | r10_10 << -r4_64
l00409778:
	r14_88 = r10_10 >>u r4_64
l00409758:
	r15_80 = r10_10 >>u r4_64
	r14_88 = 0<32>
l0040977C:
	r10_101 = r14_88
	r11_102 = r15_80 | r5_74
l00409714_ds_f:
l00409718:
	r10_101 = 0<32>
	r11_102 = 0<32>
l00409794:
	branch false l004097A4_ds_t
l004097A4_ds_t:
l004097A4_ds_f:
	word32 r5_112 = r11_102 & 255<i32>
l004097A8:
	branch r5_112 != 128<i32> l004097E0
l004097E0:
	r10_101 = r10_101 + CONVERT(r11_102 <u 0<i32>, bool, word32)
l004097B4:
	branch (r11_102 & 256<i32>) == 0<32> l004097CC_ds_t
l004097CC_ds_t:
l004097CC_ds_f:
l004097D0:
	r10_101 = r10_101 + CONVERT(r11_102 <u 0<i32>, bool, word32)
l004097EC:
l004097F0:
	branch CONVERT(r10_101 >u 0xFFFFFFF<32>, bool, word32) == 0<32> l004098A8
l00409800:
l004098A8:
l004096D8:
l004096A4_ds_f:
l004096A8:
l004098B8:
	return
__pack_d_exit:


void __unpack_d(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __adddf3
//      __subdf3
//      __muldf3
//      __divdf3
//      __eqdf2
//      __nedf2
//      __gedf2
//      __ltdf2
//      __negdf2
//      __truncdfsf2
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r28 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__unpack_d_entry:
l00409930:
	word32 r2_9 = Mem0[r4:word32]
	word32 r3_10 = Mem0[r4 + 4<32>:word32]
	Mem21[r5 + 4<32>:word32] = r2_9 >>u 0x1F<8> & 1<32>
	word32 r7_17 = r2_9 >>u 0x14<8> & 0x7FF<32>
	branch r7_17 != 0<32> l00409978_ds_t
l00409978_ds_t:
l004099F8:
	branch r7_17 != 2047<i32> l00409A00_ds_t
l00409A00_ds_t:
l00409A4C:
	Mem35[r5 + 0x10<32>:word32] = (r2_9 & 0xFFFFF<32>) << 8<8> | r3_10 >>u 0x18<8> | 0x10000000<32>
	Mem36[r5 + 0x14<32>:word32] = r3_10 << 8<8>
	Mem37[r5 + 8<32>:word32] = r7_17 + -1023<i32>
	Mem38[r5:word32] = 3<i32>
	return
l00409A00_ds_f:
l00409A04:
	branch (r3_10 | r2_9 & 0xFFFFF<32>) != 0<32> l00409A0C_ds_t
l00409A0C_ds_t:
l00409A18:
	branch (r2_9 & 0xFFFFF<32> & 0x80000<32>) == 0<32> l00409A30_ds_t
l00409A30_ds_t:
l00409A3C:
	Mem48[r5:word32] = 0<32>
l00409A30_ds_f:
l00409A34:
	Mem50[r5:word32] = 1<i32>
l00409A40:
	Mem53[r5 + 0x10<32>:word32] = r2_9 & 0xFFFFF<32>
	Mem55[r5 + 0x14<32>:word32] = r3_10
	return
l00409A0C_ds_f:
l00409A10:
	Mem57[r5:word32] = 4<i32>
	return
l00409978_ds_f:
l0040997C:
	branch (r3_10 | r2_9 & 0xFFFFF<32>) != 0<32> l00409984_ds_t
l00409984_ds_t:
l00409994:
	Mem69[r5 + 8<32>:word32] = -1022<i32>
	word32 r8_63 = (r2_9 & 0xFFFFF<32>) << 8<8> | r3_10 >>u 0x18<8>
	word32 r9_64 = r3_10 << 8<8>
	branch CONVERT(r8_63 >u 0xFFFFFFF<32>, bool, word32) != 0<32> l004099BC_ds_t
l004099BC_ds_t:
	Mem70[r5:word32] = 3<i32>
l004099BC_ds_f:
	Mem71[r5:word32] = 3<i32>
l004099C0:
l004099C8:
	r8_63 = r8_63 << 1<8> | r9_64 >>u 0x1F<8>
	word32 r2_80 = Mem79[r5 + 8<32>:word32]
	r9_64 = r9_64 << 1<8>
	branch CONVERT(r8_63 >u 0xFFFFFFF<32>, bool, word32) == 0<32> l004099E8_ds_t
l004099E8_ds_t:
	Mem86[r5 + 8<32>:word32] = r2_80 + -1<i32>
l004099E8_ds_f:
	Mem87[r5 + 8<32>:word32] = r2_80 + -1<i32>
l004099EC:
	Mem90[r5 + 0x10<32>:word32] = r8_63
	Mem92[r5 + 0x14<32>:word32] = r9_64
	return
l00409984_ds_f:
l00409988:
	Mem95[r5:word32] = 2<i32>
	return
__unpack_d_exit:


void __fpcmp_parts_d(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __eqdf2
//      __nedf2
//      __gedf2
//      __ltdf2
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r6 r7 r8
// Preserved: sp
__fpcmp_parts_d_entry:
l00409A90:
	word32 r6_6 = Mem0[r4:word32]
	branch CONVERT(r6_6 <u 2<i32>, bool, word32) != 0<32> l00409AB8
l00409AA4:
	word32 r3_9 = Mem0[r5:word32]
	branch CONVERT(r3_9 <u 2<i32>, bool, word32) == 0<32> l00409AC0
l00409AC0:
	branch (r6_6 ^ 4<32>) != 0<32> l00409AC8_ds_t
l00409AC8_ds_t:
l00409AE4:
	branch (r3_9 ^ 4<32>) == 0<32> l00409B08
l00409AF0:
	branch (r6_6 ^ 2<32>) != 0<32> l00409B20
l00409B20:
	branch (r3_9 ^ 2<32>) != 0<32> l00409B44
l00409B44:
	branch Mem0[r4 + 4<32>:word32] != Mem0[r5 + 4<32>:word32] l00409B54_ds_t
l00409B54_ds_t:
l00409B54_ds_f:
l00409B58:
	word32 r6_19 = Mem0[r4 + 8<32>:word32]
	word32 r3_20 = Mem0[r5 + 8<32>:word32]
	branch CONVERT(r3_20 < r6_19, bool, word32) != 0<32> l00409B6C_ds_t
l00409B6C_ds_t:
l00409B6C_ds_f:
l00409B70:
	branch CONVERT(r6_19 < r3_20, bool, word32) != 0<32> l00409B78_ds_t
l00409B78_ds_t:
l00409B78_ds_f:
l00409B7C:
	word32 r7_27 = Mem0[r4 + 0x10<32>:word32]
	word32 r6_28 = Mem0[r5 + 0x10<32>:word32]
	branch CONVERT(r6_28 <u r7_27, bool, word32) != 0<32> l00409B90_ds_t
l00409B90_ds_t:
l00409B90_ds_f:
l00409B94:
	word32 r2_32
	branch r7_27 != r6_28 l00409B98_ds_t
l00409B98_ds_t:
	r2_32 = CONVERT(r7_27 <u r6_28, bool, word32)
l00409B98_ds_f:
l00409B9C:
	branch CONVERT(Mem0[r5 + 0x14<32>:word32] <u Mem0[r4 + 0x14<32>:word32], bool, word32) == 0<32> l00409BB0_ds_t
l00409BB0_ds_t:
l00409BC0:
	r2_32 = CONVERT(r7_27 <u r6_28, bool, word32)
l00409BC4:
	branch r2_32 != 0<32> l00409BC8_ds_t
l00409BC8_ds_t:
l00409BC8_ds_f:
l00409BCC:
	branch r6_28 != r7_27 l00409BD0_ds_t
l00409BD0_ds_t:
l00409BD0_ds_f:
l00409BD4:
	branch CONVERT(Mem0[r4 + 0x14<32>:word32] <u Mem0[r5 + 0x14<32>:word32], bool, word32) == 0<32> l00409BFC
l00409BFC:
l00409BEC:
l00409BF0:
	return
l00409BB0_ds_f:
l00409BB4:
	return
l00409AFC:
	branch (r3_9 ^ 2<32>) == 0<32> l00409B04_ds_t
l00409B04_ds_t:
l00409C00:
	return
l00409B04_ds_f:
l00409B08:
	return
l00409AC8_ds_f:
l00409ACC:
	branch (r3_9 ^ 4<32>) != 0<32> l00409B2C
l00409B2C:
	return
l00409AD4:
	return
l00409AB8:
	return
__fpcmp_parts_d_exit:


void __do_global_ctors_aux()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r25 r28 r3
// Preserved: r16 r17 ra sp
__do_global_ctors_aux_entry:
l00409C10:
	word32 r2_11 = Mem10[0x10000878<32>:word32]
	word32 r25_17 = Mem16[r2_11 + 0x854<32>:word32]
	branch r25_17 == -1<i32> l00409C48_ds_t
l00409C48_ds_t:
l00409C48_ds_f:
	word32 r16_20 = r2_11 + 2132<i32>
l00409C4C:
l00409C50:
	call r25_17 (retsize: 0;)
	r16_20 = r16_20 + -4<i32>
	word32 r2_33 = Mem16[r16_20:word32]
	branch r2_33 != -1<i32> l00409C6C_ds_t
l00409C6C_ds_t:
	r25_17 = r2_33
l00409C6C_ds_f:
l00409C70:
	return
__do_global_ctors_aux_exit:


void init_dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r28
// Preserved: ra sp
init_dummy_entry:
l00409C84:
	return
init_dummy_exit:


