void herror()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
herror_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

herror_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __strdup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__strdup_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__strdup_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void clock_gettime()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
clock_gettime_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

clock_gettime_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
close_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

close_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void read()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
read_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

read_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void inet_ntop()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_ntop_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

inet_ntop_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void snprintf()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
snprintf_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

snprintf_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getaddrinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getaddrinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void dlopen()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
dlopen_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

dlopen_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void open()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
open_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

open_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __snprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__snprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__snprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void dlsym()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
dlsym_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

dlsym_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
exit_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

exit_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getopt_long()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getopt_long_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getopt_long_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __vasprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__vasprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__vasprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __asprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__asprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__asprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void getnameinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
getnameinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

getnameinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memset_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memset_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void inet_pton()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
inet_pton_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

inet_pton_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strcmp_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strcmp_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void free()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
free_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

free_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __printf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__printf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__printf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __sprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__sprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__sprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fwrite()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fwrite_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fwrite_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcmp_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memcmp_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fputs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fputs_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fputs_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void isatty()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
isatty_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

isatty_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __fprintf_chk()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__fprintf_chk_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__fprintf_chk_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __libc_start_main()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__libc_start_main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__libc_start_main_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void putchar()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
putchar_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

putchar_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fputc()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fputc_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fputc_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __stack_chk_fail()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__stack_chk_fail_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__stack_chk_fail_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void __errno_location()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
__errno_location_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

__errno_location_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strtol()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strtol_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strtol_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void strchr()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
strchr_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

strchr_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void memcpy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
memcpy_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

memcpy_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void abort()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
abort_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

abort_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void freeaddrinfo()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
freeaddrinfo_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

freeaddrinfo_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0000000000015180(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 ra s0 s1 s10 s11 s2 s3 s4 s5 s6 s7 s8 s9 sp t1 t3 t4 t5 t6
// Preserved: a1
fn0000000000015180_entry:
// DataOut: a0 a1 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015180:
	word64 sp_1016 = fp + -448
	word64 s0_1011 = 0
	word64 s6_43 = 0
	word64 s9_44 = 0
	word64 s10_1003 = 0
// DataOut: gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015200:
	a0 = DPB(a0, getopt_long(a0, a1, 0x00000000000119A8, 0x00000000000108E0, a4), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch a0 == -1 l0000000000015348
// DataOut: a0 a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015348:
	word64 s4_1008
	word64 s1_1012
	word64 a4_126 = (word64) Mem0[gp + -1904:int32]
	branch a4_126 >= a0 l0000000000015428
// DataOut: a4 a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015428:
	s4_1008 = 0
	s1_1012 = 0
// DataOut: a5 gp s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015350:
	word64 a1_1311 = (int64) ((word32) a4_126 + 1)
	Mem1314[gp + 2192:word32] = a1_1311
	word64 s2_1313 = a1 + (a4_126 << 0x00000003)
	s1_1012 = Mem1314[s2_1313:word64]
	s4_1008 = 0
	branch a1_1311 >= a0 l0000000000015378
// DataOut: a4 a5 gp s0 s1 s10 s2 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:<invalid> a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001536C:
	s4_1008 = Mem1314[s2_1313 + 8:word64]
	Mem1319[gp + 2192:word32] = (int64) ((word32) a4_126 + 2)
// DataOut: a5 gp s0 s1 s10 s4 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:0 s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015378:
	branch s6_43 != 0x0000000000000000 l0000000000015588
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015588:
	word64 a0_1308 = DPB(a0, __printf_chk(a0, 0x00000000000119C8, Mem0[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001537C:
	branch (word64) Mem0[sp_1016 + 28:int32] == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015384:
	branch (word64) Mem0[sp_1016:int32] == 0x0000000000000000 l00000000000153B4
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153B4:
	word64 a5_1014
	word64 s2_1021
	word64 a5_784
	word64 a0_903
	word64 a0_211
	Mem201[sp_1016 + 8:word64] = a0
	branch s9_44 == 0x0000000000000000 l0000000000015924
// DataOut: gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015924:
	word64 a0_1288 = fn0000000000017924(gp)
	a5_1014 = Mem201[sp_1016 + 8:word64]
	branch a0_1288 != 0x0000000000000000 l0000000000015458
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015930:
	branch (s0_1011 & 65544) != 65544 l0000000000015458
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015940:
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153BC:
	word64 a0_1281 = fn0000000000017924(gp)
	s2_1021 = s0_1011 | 2
	a5_1014 = Mem201[sp_1016 + 8:word64]
	branch a0_1281 == 0x0000000000000000 l0000000000015434
// DataOut: a5 gp s0 s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015434:
	branch (s0_1011 & 65544) != 65544 l00000000000153CC
// DataOut: a5 gp s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015444:
	s0_1011 = s0_1011 | 2
// DataOut: a5 gp s0 s1 s10 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:2 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015448:
	s2_1021 = s0_1011 | 0x0000000000004000
	branch s9_44 != 0x0000000000000000 l00000000000153CC
// DataOut: a5 gp s1 s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015454:
	s0_1011 = s2_1021
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015458:
	branch s10_1003 == 0x0000000000000000 l0000000000015CE4
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CE4:
	branch s1_1012 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CE8:
	branch (word64) Mem201[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CF0:
	word64 a0_1268 = DPB(0x0000000000011A30, fwrite(0x0000000000011A30, a1, a2, a3), 0)
	sp_1016 = fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001545C:
	word64 a0_1078 = fn00000000000166F4(gp, sp_1016 + 28, s10_1003, 1)
	branch a0_1078 < 0x0000000000000000 l0000000000015BC8
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC8:
	branch (word64) Mem201[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BD0:
	branch (word64) Mem201[sp_1016 + 28:int32] != 0x0000000000000000 l0000000000015E7C
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E7C:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BDC:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015474:
	Mem1082[sp_1016 + 8:word64] = a0_1078
	word64 s1_1083 = (word64) Mem1082[sp_1016 + 28:int32]
	Mem1084[sp_1016 + 32:word64] = 0x0000000000000000
	a0 = DPB(a0, clock_gettime(a0, a1), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	word64 a5_1087 = Mem1084[sp_1016:word64]
	branch false l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015494:
	word64 a5_1140
	branch s1_1083 == 0x0000000000000000 l0000000000015C48
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C48:
	Mem1196[sp_1016:word64] = a5_1087
	word64 s1_1197 = Mem1196[sp_1016 + 0x0000000000000028:word64]
	word64 a0_1198 = fn00000000000164D0(sp_1016 + 0x00000000000000F8, 4)
	word64 a5_1199 = Mem1196[sp_1016:word64]
	branch a0_1198 < 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C64:
	branch 15 >= a5_1199 l0000000000015C7C
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C6C:
	word64 a3_1241 = 1
	branch a3_1241 >=u (s1_1197 | 4) l0000000000015DB8
// DataOut: a3 a4 a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:15 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DB8:
	branch (s1_1197 | 4) == a3_1241 l0000000000015E00
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E00:
	Mem1250[sp_1016 + 0x00000000000000F8:byte] = -64
	Mem1252[sp_1016 + 0x00000000000000F9:byte] = -88
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DBC:
	Mem1243[sp_1016 + 0x00000000000000F8:byte] = -84
	Mem1248[sp_1016 + 0x00000000000000F9:byte] = Mem1243[sp_1016 + 0x0000000000000028:word64] >> 0x00000004 & 15 | 16
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:1 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C7C:
	Mem1238[sp_1016 + 0x00000000000000F8:byte] = 10
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C84:
	word64 a4_1201 = (word64) Mem1196[sp_1016 + 0x00000000000000F8:int32]
	Mem1207[sp_1016:word64] = a5_1199
	Mem1208[sp_1016 + 0x0000000000000010:word32] = a4_1201
	word64 s5_1210
	word64 a5_1211
	word64 s1_1213
	word64 s2_1215
	word64 s3_1216
	word64 s6_1218
	word64 s7_1219
	word64 s8_1220
	word64 s9_1221
	word64 s11_1223
	word64 ra_1224
	word64 a0_1225
	word64 a1_1226
	word64 a4_1227
	word64 a3_1228
	word64 a2_1229
	word64 a2_1232
	word64 a3_1233
	word64 a4_1234
	call inet_ntop (retsize: 0;)
		uses: a0_1085,a0_1206,a1,a1_1205,a2,a2_1204,a3,a3_1203,a4,a4_1201,a5_1199,dwLoc01A4_41,dwLoc01B8_50,dwLoc01C0_46,gp,qwLoc08_35,qwLoc10_15,qwLoc18_9,qwLoc20_17,qwLoc28_19,qwLoc30_21,qwLoc38_4,qwLoc40_23,qwLoc48_25,qwLoc50_27,qwLoc58_29,qwLoc60_31,qwLoc68_33,qwLoc78_11,ra,s0_1073,s1_1202,s10_45,s11,s2_1072,s3_38,s4_130,s5,s6_43,s7_49,s8_36,s9_44,sp_1086
		defs: a0_1225,a0_1230,a1_1226,a1_1231,a2_1229,a2_1232,a3_1228,a3_1233,a4_1227,a4_1234,a5_1211,gp_1212,ra_1224,s0_1214,s1_1213,s10_1222,s11_1223,s2_1215,s3_1216,s4_1217,s5_1210,s6_1218,s7_1219,s8_1220,s9_1221,sp_1209
	a5_1140 = Mem1208[sp_1016 + 8:word64]
	branch a0_1225 != 0x0000000000000000 l00000000000154DC
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015498:
	word64 a4_1158 = Mem1084[sp_1016 + 0x0000000000000028:word64] & 1 | -4
	Mem1159[sp_1016 + 0x0000000000000030:byte] = a4_1158
	branch fn00000000000164D0(sp_1016 + 0x0000000000000031, 15) < 0x0000000000000000 l0000000000015CB0
// DataOut: gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154BC:
	word64 s5_1168
	word64 a5_1169
	word64 s1_1171
	word64 s2_1173
	word64 s3_1174
	word64 s6_1176
	word64 s7_1177
	word64 s8_1178
	word64 s9_1179
	word64 s11_1181
	word64 ra_1182
	word64 a0_1183
	word64 a1_1184
	word64 a4_1185
	word64 a3_1186
	word64 a2_1187
	word64 a2_1190
	word64 a3_1191
	word64 a4_1192
	call inet_ntop (retsize: 0;)
		uses: a0_1085,a0_1166,a1,a1_1165,a2,a2_1164,a3,a3_1163,a4,a4_1158,a5_1161,dwLoc01A4_41,dwLoc01B8_50,dwLoc01C0_46,gp,qwLoc08_35,qwLoc10_15,qwLoc18_9,qwLoc20_17,qwLoc28_19,qwLoc30_21,qwLoc38_4,qwLoc40_23,qwLoc48_25,qwLoc50_27,qwLoc58_29,qwLoc60_31,qwLoc68_33,qwLoc78_11,ra,s0_1073,s1_1162,s10_45,s11,s2_1072,s3_38,s4_130,s5,s6_43,s7_49,s8_36,s9_44,sp_1086
		defs: a0_1183,a0_1188,a1_1184,a1_1189,a2_1187,a2_1190,a3_1186,a3_1191,a4_1185,a4_1192,a5_1169,gp_1170,ra_1182,s0_1172,s1_1171,s10_1180,s11_1181,s2_1173,s3_1174,s4_1175,s5_1168,s6_1176,s7_1177,s8_1178,s9_1179,sp_1167
	a5_1140 = Mem1159[sp_1016 + 8:word64]
	branch a0_1183 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000154DC:
	Mem1148[sp_1016 + 8:word64] = a5_1140
	a0 = DPB(a0, __asprintf_chk(a0, a1, 0x0000000000011A90, Mem1148[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	a5_1014 = Mem1148[sp_1016 + 8:word64]
	branch sp_1016 == 33 l0000000000015CB0
// DataOut: a5 gp s0 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:64 a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015508:
	s1_1012 = Mem1148[sp_1016 + 32:word64]
	branch s1_1012 == 0x0000000000000000 l0000000000015CB0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:-1 a3:<invalid> a2:0x0000000000011A90 a1:1 a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB0:
	branch (word64) Mem1084[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CB8:
	word64 a0_1119 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011A98, Mem1084[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153CC:
	branch s10_1003 == 0x0000000000000000 l00000000000155A8
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155A8:
	branch (word64) Mem201[sp_1016 + 28:int32] != 0x0000000000000000 l0000000000015944
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015944:
	Mem1064[sp_1016 + 8:word64] = a5_1014
	word64 a0_1065 = fn00000000000169D8(gp, s9_44)
	s1_1012 = a0_1065
	s0_1011 = s2_1021
	a5_1014 = Mem1064[sp_1016 + 8:word64]
	branch a0_1065 != 0x0000000000000000 l0000000000015510
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015510:
	branch (word64) Mem201[sp_1016:int32] != 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B0:
	branch (word64) Mem201[sp_1016:int32] == 0x0000000000000000 l000000000001598C
// DataOut: a5 gp s10 s2 s4 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001598C:
	Mem1057[sp_1016:word64] = a5_1014
	word64 a0_1058 = fn00000000000169D8(gp, s9_44)
	s1_1012 = a0_1058
	branch a0_1058 == 0x0000000000000000 l0000000000015964
// DataOut: gp s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159A4:
	s0_1011 = s2_1021
	a5_1014 = Mem1057[sp_1016:word64]
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015518:
	Mem980[sp_1016:word64] = a5_1014
	a0 = strchr(a0, a1)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	a5_1014 = Mem980[sp_1016:word64]
	branch s1_1012 == 0x0000000000000000 l00000000000155D8
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015530:
	Mem985[sp_1016 + 28:word32] = 1
	branch s4_1008 == 0x0000000000000000 l0000000000015BEC
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:58 a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BEC:
	Mem988[sp_1016:word64] = a5_1014
	a0 = strchr(a0, a1)
	a0_903 = s1_1012
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	a5_784 = Mem988[sp_1016 + 0xFFFFFFFFFFFFFFF8:word64]
	branch s1_1012 != 0x0000000000000000 l0000000000015BB8
// DataOut: a0 a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:58 a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C04:
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:1 a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155B8:
	Mem1050[sp_1016:word64] = a5_1014
	word64 a0_1051 = fn00000000000169D8(gp, s9_44)
	s1_1012 = a0_1051
	branch a0_1051 == 0x0000000000000000 l0000000000015964
// DataOut: gp s1 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015964:
	branch (word64) Mem201[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001596C:
	word64 a0_1044 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011A50, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D0:
	a5_1014 = Mem1050[sp_1016:word64]
	s0_1011 = s2_1021
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155D8:
	branch s4_1008 == 0x0000000000000000 l0000000000015BA0
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BA0:
	Mem950[sp_1016:word64] = a5_1014
	a0 = strchr(a0, a1)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	a0_903 = s1_1012
	a5_784 = Mem950[sp_1016:word64]
	branch s1_1012 == 0x0000000000000000 l00000000000155FC
// DataOut: a0 a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BB8:
	Mem919[a0_903:byte] = 0x0000000000000000
	s4_1008 = a0_903 + 1
	branch s4_1008 == 0x0000000000000000 l00000000000155FC
// DataOut: a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015BC4:
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:47 a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155DC:
	branch (word64) Mem201[sp_1016 + 28:int32] != 0x0000000000000000 l000000000001553C
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001553C:
	branch (word64) Mem201[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015544:
	word64 a0_889 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011AD0, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = fn0000000000015FCC(gp, 1)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155E4:
	word64 a0_847 = fn00000000000166F4(gp, sp_1016 + 28, s4_1008, 0)
	a5_784 = a0_847
	branch a0_847 < 0x0000000000000000 l0000000000015B6C
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B6C:
	branch (word64) Mem201[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B74:
	branch (word64) Mem201[sp_1016 + 28:int32] != 0x0000000000000000 l0000000000015CD8
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015CD8:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B80:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B88:
// DataOut: a0 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B8C:
	word64 a0_820 = DPB(a0, __fprintf_chk(a0, a1, 0x0000000000011A70, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000155FC:
	branch (word64) Mem201[sp_1016 + 28:int32] == 0x0000000000000000 l00000000000159B0
// DataOut: a5 gp s0 s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159B0:
	a0_211 = fn0000000000016D74(gp, s1_1012, a5_784, sp_1016 + 56, s0_1011)
// DataOut: a0 gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015604:
	a0_211 = fn00000000000175BC(gp, sp_1016 + 56)
// DataOut: a0 gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015618:
	branch a0_211 < 0x0000000000000000 l00000000000153D8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001561C:
	branch (s0_1011 & 4294623231) != 0x0000000000000000 l0000000000015630
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001562C:
	s0_1011 = s0_1011 | 8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015630:
	word64 a0_233 = DPB(a0, isatty(a0), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch 1 == 0x0000000000000000 l0000000000015644
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001563C:
	Mem733[gp + 2064:word32] = 1
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015644:
	branch (s0_1011 & 8) == 0x0000000000000000 l00000000000159C8
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159C8:
	branch (s0_1011 & 128) != 0x0000000000000000 l0000000000015D18
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D18:
	a0_233 = DPB(a0, __printf_chk(a0_233, 0x0000000000011C28, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D0:
	branch (s0_1011 & 512) != 0x0000000000000000 l0000000000015D48
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D48:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011C38, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159D8:
	branch (s0_1011 & 64) == 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E0:
	branch (word64) Mem201[sp_1016 + 28:int32] != 0x0000000000000000 l00000000000159FC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159E8:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011C48, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000159FC:
	branch (s0_1011 & 256) != 0x0000000000000000 l0000000000015D30
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D30:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011C58, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A04:
	branch s0_1011 << 0x0000000E < 0x0000000000000000 l0000000000015D78
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D78:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011C68, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A0C:
	branch (s0_1011 & 1024) == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A14:
	branch Mem201[sp_1016 + 224:word64] == 0x0000000000000000 l0000000000015A2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A1C:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011C78, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A2C:
	branch s0_1011 << 0x00000014 >= 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A34:
	branch Mem201[sp_1016 + 232:word64] == 0x0000000000000000 l0000000000015A4C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A3C:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011C88, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A4C:
	branch s0_1011 << 0x00000012 >= 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A54:
	word64 s2_673 = Mem201[sp_1016 + 240:word64]
	branch s2_673 == 0x0000000000000000 l0000000000015A80
// DataOut: gp s0 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A5C:
	word64 a0_676 = strchr(a0_233, a1)
	word64 sp_677 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch s2_673 == 0x0000000000000000 l0000000000015DA4
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DA4:
	a0_233 = DPB(a0_676, __printf_chk(a0_676, 0x0000000000011CA8, Mem201[sp_677:<unknown>]), 0)
	sp_1016 = sp_677 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A70:
	a0_233 = DPB(a0_676, __printf_chk(a0_676, 0x0000000000011C98, Mem201[sp_677:<unknown>]), 0)
	sp_1016 = sp_677 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A80:
	branch s0_1011 << 0x00000013 >= 0x0000000000000000 l0000000000015AAC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A88:
	word64 a0_660 = strchr(a0_233, a1)
	word64 sp_661 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch sp_1016 == 0x0000000000000098 l0000000000015D90
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D90:
	a0_233 = DPB(a0_660, __printf_chk(a0_660, 0x0000000000011CC8, Mem201[sp_661:<unknown>]), 0)
	sp_1016 = sp_661 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015A9C:
	a0_233 = DPB(a0_660, __printf_chk(a0_660, 0x0000000000011CB8, Mem201[sp_661:<unknown>]), 0)
	sp_1016 = sp_661 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AAC:
	branch (s0_1011 & 1) == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AB4:
	branch Mem201[sp_1016 + 112:word64] == 0x0000000000000000 l0000000000015ACC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ABC:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011CD8, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015ACC:
	branch (s0_1011 & 2) != 0x0000000000000000 l0000000000015D60
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015D60:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011CE8, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AD4:
	branch (s0_1011 & 0x000000000000C000) != 0x000000000000C000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE0:
	branch Mem201[sp_1016 + 128:word64] == 0x0000000000000000 l0000000000015AF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AE8:
	a0_233 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011CF8, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015AF8:
	word64 s0_594 = Mem201[sp_1016 + 120:word64]
	branch s0_594 == 0x0000000000000000 l0000000000015B24
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B00:
	word64 a0_628 = strchr(a0_233, a1)
	word64 sp_629 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch s0_594 == 0x0000000000000000 l0000000000015E90
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E90:
	a0_233 = DPB(a0_628, __printf_chk(a0_628, 0x0000000000011D18, Mem201[sp_629:<unknown>]), 0)
	sp_1016 = sp_629 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B14:
	a0_233 = DPB(a0_628, __printf_chk(a0_628, 0x0000000000011D08, Mem201[sp_629:<unknown>]), 0)
	sp_1016 = sp_629 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B24:
	word64 s0_600 = Mem201[sp_1016 + 136:word64]
	branch s0_600 == 0x0000000000000000 l0000000000015B50
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B2C:
	word64 a0_613 = strchr(a0_233, a1)
	word64 sp_614 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch s0_600 == 0x0000000000000000 l0000000000015EA4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015EA4:
	a0_233 = DPB(a0_613, __printf_chk(a0_613, 0x0000000000011D38, Mem201[sp_614:<unknown>]), 0)
	sp_1016 = sp_614 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B40:
	a0_233 = DPB(a0_613, __printf_chk(a0_613, 0x0000000000011D28, Mem201[sp_614:<unknown>]), 0)
	sp_1016 = sp_614 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:32 a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B50:
	branch Mem201[sp_1016 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015B58:
	word64 a0_609 = DPB(a0_233, __printf_chk(a0_233, 0x0000000000011D48, Mem201[sp_1016:<unknown>]), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x000000000000C000 s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001564C:
	word64 s4_470
	word64 s0_399
	word64 s2_238 = (word64) Mem201[sp_1016 + 216:int32]
	branch (word64) Mem201[sp_1016 + 28:int32] != 0x0000000000000000 l000000000001590C
// DataOut: gp s0 s10 s2 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001590C:
	branch s2_238 != 128 l0000000000015660
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015658:
	branch s2_238 == 32 l0000000000015914
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015914:
	branch Mem201[sp_1016 + 64:word64] == 0x0000000000000000 l0000000000015DDC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015DDC:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001591C:
	s4_470 = 1
// DataOut: gp s0 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015660:
	branch s10_1003 == 0x0000000000000000 l0000000000015860
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015860:
	word64 a0_494 = Mem201[sp_1016 + 88:word64]
	a0_233 = DPB(a0, strcmp(a0_233, a1), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch a0_494 == 0x0000000000000000 l0000000000015664
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015874:
	s4_470 = 0
	branch Mem201[sp_1016 + 0x0000000000000038:word64] == 0x0000000000000000 l0000000000015E14
// DataOut: gp s0 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E14:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:0 s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015880:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011AF8)
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B10)
	branch s4_470 == 0x0000000000000000 l0000000000015E74
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E74:
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158B8:
	branch (s0_1011 & 65544) == 65544 l0000000000015E64
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E64:
	s0_399 = 1
	branch Mem201[sp_1016 + 80:word64] != 0x0000000000000000 l0000000000015C2C
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E70:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:1 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015664:
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015668:
	branch Mem201[sp_1016 + 72:word64] == 0x0000000000000000 l0000000000015690
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015674:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B28)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015690:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B38)
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B58)
	branch Mem201[sp_1016 + 96:word64] == 0x0000000000000000 l00000000000156EC
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156D4:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B68)
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156EC:
	branch (s0_1011 & 65544) == 65544 l0000000000015C1C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C1C:
	branch Mem201[sp_1016 + 80:word64] == 0x0000000000000000 l00000000000156FC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C24:
	s0_399 = 0
// DataOut: gp s0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:0x0000000000012000 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C2C:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011B78)
	branch s0_399 != 0x0000000000000000 l00000000000158C8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158C8:
	branch Mem201[sp_1016 + 240:word64] == 0x0000000000000000 l00000000000158E8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158D0:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011B88)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158E8:
	branch Mem201[sp_1016 + 248:word64] == 0x0000000000000000 l00000000000157BC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000158F0:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BA0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C44:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:0x0000000000012000 s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000156FC:
	a0_233 = DPB(a0_233, putchar(a0_233), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch Mem201[sp_1016 + 240:word64] == 0x0000000000000000 l0000000000015728
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001570C:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011B88)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015728:
	branch Mem201[sp_1016 + 248:word64] == 0x0000000000000000 l000000000001574C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015730:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BA0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001574C:
	branch Mem201[sp_1016 + 224:word64] == 0x0000000000000000 l000000000001576C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015754:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BB0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001576C:
	branch Mem201[sp_1016 + 232:word64] == 0x0000000000000000 l000000000001578C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015774:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BC0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001578C:
	branch (word64) Mem201[sp_1016 + 28:int32] == 0x0000000000000000 l00000000000157A0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015794:
	branch 111 >=u (word64) Mem201[sp_1016 + 216:int32] l0000000000015E3C
// DataOut: a5 gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E3C:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BE0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:111 a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157A0:
	fn000000000001654C(gp, 0x0000000000011B08, 0x0000000000011BE0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157BC:
	branch Mem201[sp_1016 + 120:word64] == 0x0000000000000000 l0000000000015C08
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C08:
	branch Mem201[sp_1016 + 136:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C10:
	branch Mem201[sp_1016 + 144:word64] != 0x0000000000000000 l00000000000157C4
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015C18:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157C4:
	word64 a0_254 = DPB(a0_233, putchar(a0_233), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
	branch Mem201[sp_1016 + 128:word64] == 0x0000000000000000 l00000000000157F0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157D4:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011BF0)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F0:
	branch Mem201[sp_1016 + 120:word64] == 0x0000000000000000 l0000000000015814
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000157F8:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C00)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015814:
	branch Mem201[sp_1016 + 136:word64] == 0x0000000000000000 l0000000000015838
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001581C:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C10)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015838:
	branch Mem201[sp_1016 + 144:word64] == 0x0000000000000000 l00000000000153DC
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015840:
	fn000000000001654C(gp, 0x0000000000011B98, 0x0000000000011C18)
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x0000000000012000 s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:4 a1:<invalid> a0:<invalid> a6:<invalid> t3:<invalid> t1:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153D0:
	branch (word64) Mem201[gp + -2028:int32] == 0x0000000000000000 l000000000001556C
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001556C:
	word64 a0_1030 = DPB(0x0000000000011A08, fwrite(0x0000000000011A08, a1, a2, a3), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> -448(fp):<invalid> -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001538C:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l00000000000153D8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153D8:
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:<invalid> s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015394:
	word64 a0_1300 = DPB(0x00000000000119D8, fwrite(0x00000000000119D8, a1, a2, a3), 0)
	sp_1016 = sp_1016 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:a0 s2:<invalid> s0:0 s6:0 s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:0x00000000000119A8 a1:<invalid> a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153DC:
	branch Mem0[sp_1016 + 328:word64] != Mem0[gp + -1936:word64] l0000000000015E8C
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015E8C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000153EC:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:0x0000000000001000 s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:0 s10:0 s4:<invalid> s7:1 a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> a6:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000015224:
	branch 118 <u a0 l0000000000015200
// DataOut: a5 gp s0 s10 s2 s3 s6 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:-1 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001522C:
	word64 a5_97 = (word64) Mem0[(a0 << 0x00000000 >>u 0x0000001E) + 0x00000000000102A0:int32]
	word64 sp_100
	word64 s5_101
	word64 a5_102
	word64 gp_103
	word64 s1_104
	word64 s0_105
	word64 s2_106
	word64 s3_107
	word64 s4_108
	word64 s6_109
	word64 s7_110
	word64 s8_111
	word64 s9_112
	word64 s10_113
	word64 s11_114
	word64 ra_115
	word64 a0_116
	word64 a1_117
	word64 a4_118
	word64 a3_119
	word64 a2_120
	word64 a0_121
	word64 a1_122
	word64 a2_123
	word64 a3_124
	word64 a4_125
	call a5_97 (retsize: 0;)
		uses: a0_58,a0_61,a1,a1_57,a2,a2_56,a3,a3_55,a4,a4_95,a5_97,dwLoc01A4_41,dwLoc01B8_50,dwLoc01C0_46,gp,qwLoc08_35,qwLoc10_15,qwLoc18_9,qwLoc20_17,qwLoc28_19,qwLoc30_21,qwLoc38_4,qwLoc40_23,qwLoc48_25,qwLoc50_27,qwLoc58_29,qwLoc60_31,qwLoc68_33,qwLoc78_11,ra,s0_42,s1_47,s10_45,s11,s2_40,s3_38,s4_48,s5,s6_43,s7_49,s8_36,s9_44,sp_62
		defs: a0_116,a0_121,a1_117,a1_122,a2_120,a2_123,a3_119,a3_124,a4_118,a4_125,a5_102,gp_103,ra_115,s0_105,s1_104,s10_113,s11_114,s2_106,s3_107,s4_108,s5_101,s6_109,s7_110,s8_111,s9_112,sp_100
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:0x00000000000108E0 s8:0x0000000000001000 s3:a0 s2:a1 s0:0 s6:0 s9:0 s10:0 s4:0x0000000000012000 s7:1 a4:118 a3:0x00000000000108E0 a2:0x00000000000119A8 a1:a1 a0:<invalid> -448(fp):0x0000000000000000 -440(fp):<invalid> -420(fp):0x0000000000000000 -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000015180_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s1:<invalid> s8:<invalid> s3:<invalid> s2:<invalid> s0:<invalid> s6:<invalid> s9:<invalid> s10:<invalid> s4:<invalid> s7:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> ra:<invalid> s5:<invalid> s11:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -464(fp):<invalid> -456(fp):<invalid> -448(fp):<invalid> -440(fp):<invalid> -436(fp):1 -424(fp):0x0000000000000000 -420(fp):0x0000000000000000 -408(fp):-4 -208(fp):<invalid> -207(fp):<invalid> -120(fp):<invalid> -104(fp):s11 -96(fp):s10 -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000015EB8(word64 a0, word64 qwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 gp sp
// Preserved:
// Stack args: Stack +0000(64)
fn0000000000015EB8_entry:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Stack +0000(64)

l0000000000015EB8:
	word64 a0_23 = DPB(a0, __libc_start_main(a0, a1, fp + 8, a3, a4, a5, a6), 0)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000015EB8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp & -16 gp:0000000000013448 a5:a0 a0:<invalid> a1:<invalid> a2:fp + 8 a3:00000000000182E8 a4:0000000000018378 a6:fp & -16



void fn0000000000015EF0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: sp
fn0000000000015EF0_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015EF0:
	word64 a4_7 = 14
	branch a4_7 >=u 0x0000000000000007 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F0C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F20
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14

l0000000000015F20:
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

l0000000000015F18:
	word64 sp_20
	word64 a0_21
	word64 a5_22
	word64 a4_23
	word64 t1_24
	word64 ra_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_19,a4_7,a5_6,ra,sp_1,t1_18
		defs: a0_21,a4_23,a5_22,ra_25,sp_20,t1_24
	return
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000007 a4:14 t1:0x0000000000000000

fn0000000000015EF0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000007 a4:14 t1:0x0000000000000000



void fn0000000000015F24()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: sp
fn0000000000015F24_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F24:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F4C:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015F60
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000

l0000000000015F60:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

l0000000000015F58:
	word64 sp_21
	word64 a0_22
	word64 a5_23
	word64 a1_24
	word64 t1_25
	call 0x0000000000000000 (retsize: 0;)
		uses: a0_20,a1_10,a5_7,sp_1,t1_19
		defs: a0_22,a1_24,a5_23,sp_21,t1_25
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:0x0000000000010000 a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000

fn0000000000015F24_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a0:<invalid> a5:0x0000000000000000 a1:0x0000000000000000 t1:0x0000000000000000



void fn0000000000015F64(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut:
// Trashed: a0 a4 a5 t1
// Preserved: ra s0 sp
fn0000000000015F64_entry:
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F64:
	branch (word64) Mem0[gp + -1900:byte] != 0x0000000000000000 l0000000000015F84
// DataOut: gp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000015F78:
	fn0000000000015EF0()
	Mem15[gp + 2196:byte] = 1
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> -16(fp):s0 -8(fp):ra

l0000000000015F84:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra

fn0000000000015F64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> ra:ra s0:s0 a0:<invalid> a4:14 t1:0x0000000000000000 -16(fp):s0 -8(fp):ra



void fn0000000000015F94()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a0 a1 a5 t1
// Preserved: ra sp
fn0000000000015F94_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015F94:
	branch Mem0[0x0000000000019E28:word64] != 0x0000000000000000 l0000000000015FA8
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FA8:
	branch 0x0000000000000000 == 0x0000000000000000 l0000000000015FA4
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28
// LocalsOut: fp(64)

l0000000000015FB4:
	word64 sp_22
	word64 a5_23
	word64 a0_24
	word64 ra_25
	word64 a1_26
	word64 t1_27
	call 0x0000000000000000 (retsize: 0; depth: 16)
		uses: a0_3,a1,a5_19,qwLoc08_21,ra,sp_20,t1
		defs: a0_24,a1_26,a5_23,ra_25,sp_22,t1_27
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28

l0000000000015FC8_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:0x0000000000019E28 ra:ra -8(fp):ra

l0000000000015FA4:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28

l0000000000015FA4_thunk_fn0000000000015F24:
	fn0000000000015F24()
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:0x0000000000019E28

fn0000000000015F94_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:0x0000000000000000 a0:<invalid> a1:0x0000000000000000 t1:0x0000000000000000 ra:ra -8(fp):ra



word64 fn0000000000015FCC(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: sp
// Trashed: a0 a1 a2 a3 ra s0 sp
// Preserved:
fn0000000000015FCC_entry:
// DataOut: a0 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000015FCC:
	branch a0 != 0x0000000000000000 l0000000000016090
// DataOut: a3 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016090:
	word64 a0_78 = DPB(0x0000000000010BE0, fwrite(0x0000000000010BE0, a1, a2, a3), 0)
	word64 a0_85 = DPB(0x0000000000010C00, fwrite(0x0000000000010C00, a1, a2, a3), 0)
	word64 a0_92 = DPB(0x0000000000010C38, fwrite(0x0000000000010C38, a1, a2, a3), 0)
	word64 a0_99 = DPB(0x0000000000010C88, fwrite(0x0000000000010C88, a1, a2, a3), 0)
	word64 a0_106 = DPB(0x0000000000010CC8, fwrite(0x0000000000010CC8, a1, a2, a3), 0)
	word64 a0_113 = DPB(0x0000000000010D18, fwrite(0x0000000000010D18, a1, a2, a3), 0)
	word64 a0_120 = DPB(0x0000000000010D68, fwrite(0x0000000000010D68, a1, a2, a3), 0)
	word64 a0_127 = DPB(0x0000000000010D98, fwrite(0x0000000000010D98, a1, a2, a3), 0)
	word64 a0_134 = DPB(0x0000000000010DE8, fwrite(0x0000000000010DE8, a1, a2, a3), 0)
	word64 a0_141 = DPB(0x0000000000010E38, fwrite(0x0000000000010E38, a1, a2, a3), 0)
	word64 a0_145 = DPB(a0_141, fputc(a0_141, a1), 0)
	word64 a0_152 = DPB(0x0000000000010E88, fwrite(0x0000000000010E88, a1, a2, a3), 0)
	word64 a0_159 = DPB(0x0000000000010EA0, fwrite(0x0000000000010EA0, a1, a2, a3), 0)
	word64 a0_166 = DPB(0x0000000000010EE8, fwrite(0x0000000000010EE8, a1, a2, a3), 0)
	word64 a0_173 = DPB(0x0000000000010F28, fwrite(0x0000000000010F28, a1, a2, a3), 0)
	word64 a0_180 = DPB(0x0000000000010F68, fwrite(0x0000000000010F68, a1, a2, a3), 0)
	word64 a0_187 = DPB(0x0000000000010FA8, fwrite(0x0000000000010FA8, a1, a2, a3), 0)
	word64 a0_194 = DPB(0x0000000000010FF8, fwrite(0x0000000000010FF8, a1, a2, a3), 0)
	word64 a0_201 = DPB(0x0000000000011048, fwrite(0x0000000000011048, a1, a2, a3), 0)
	word64 a0_208 = DPB(0x0000000000011098, fwrite(0x0000000000011098, a1, a2, a3), 0)
	word64 a0_215 = DPB(0x00000000000110C8, fwrite(0x00000000000110C8, a1, a2, a3), 0)
	word64 a0_222 = DPB(0x0000000000011118, fwrite(0x0000000000011118, a1, a2, a3), 0)
	word64 a0_229 = DPB(0x0000000000011148, fwrite(0x0000000000011148, a1, a2, a3), 0)
	word64 a0_236 = DPB(0x0000000000011190, fwrite(0x0000000000011190, a1, a2, a3), 0)
	word64 a0_243 = DPB(0x00000000000111D8, fwrite(0x00000000000111D8, a1, a2, a3), 0)
	word64 a0_250 = DPB(0x0000000000011228, fwrite(0x0000000000011228, a1, a2, a3), 0)
	word64 a0_254 = DPB(a0_250, fputc(a0_250, a1), 0)
	word64 a0_261 = DPB(0x0000000000011258, fwrite(0x0000000000011258, a1, a2, a3), 0)
	word64 a0_268 = DPB(0x0000000000011268, fwrite(0x0000000000011268, a1, a2, a3), 0)
	word64 a0_275 = DPB(0x00000000000112C0, fwrite(0x00000000000112C0, a1, a2, a3), 0)
	word64 a0_282 = DPB(0x0000000000011300, fwrite(0x0000000000011300, a1, a2, a3), 0)
	word64 a0_289 = DPB(0x0000000000011348, fwrite(0x0000000000011348, a1, a2, a3), 0)
	word64 a0_296 = DPB(0x0000000000011388, fwrite(0x0000000000011388, a1, a2, a3), 0)
	word64 a0_308 = DPB(0x00000000000113C8, fwrite(0x00000000000113C8, a1, a2, a3), 0)
	return fp + 0xFFFFFFFFFFFFFEF8
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

l0000000000015FE0:
	word64 a0_26 = DPB(0x0000000000011408, fwrite(0x0000000000011408, a1, a2, a3), 0)
	word64 a0_33 = DPB(0x0000000000011458, fwrite(0x0000000000011458, a1, a2, a3), 0)
	word64 a0_40 = DPB(0x0000000000011498, fwrite(0x0000000000011498, a1, a2, a3), 0)
	word64 a0_47 = DPB(0x00000000000114E0, fwrite(0x00000000000114E0, a1, a2, a3), 0)
	word64 a0_54 = DPB(0x0000000000011530, fwrite(0x0000000000011530, a1, a2, a3), 0)
	word64 a0_61 = DPB(0x0000000000011578, fwrite(0x0000000000011578, a1, a2, a3), 0)
	word64 a0_73 = DPB(0x00000000000115A8, fwrite(0x00000000000115A8, a1, a2, a3), 0)
	return fp + 0xFFFFFFFFFFFFFFD0
// DataOut: gp sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a3:<invalid> -16(fp):s0 -8(fp):ra

fn0000000000015FCC_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:1 ra:<invalid> s0:<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000163B0(word64 gp, word64 a0, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s5Out, ptr64 & s6Out, ptr64 & s8Out, ptr64 & s9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: a0 s0 s2 s5 s6 s8 s9 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
// Preserved:
fn00000000000163B0_entry:
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -00F0(0)

l00000000000163B0:
	word64 s3_37 = 16
	word64 s0_38 = 1
	word64 a0_44 = DPB(fp + -232, __sprintf_chk(fp + -232, a1, a2, 0x00000000000115C8, tLocF0), 0)
	word64 sp_103 = fp + 0xFFFFFFFFFFFFFF08
	word64 s1_101 = fp + 0xFFFFFFFFFFFFFF12
	word64 s9_49 = 15
	word64 s7_50 = 58
	a0_109 = a0_44
	s0_100 = s0_38
	branch 1 == s3_37 l000000000001646C
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016430:
	word64 a0_109
	word64 s0_100
	a0_109 = DPB(a0_109, __sprintf_chk(a0_109, a1, a2, 0x00000000000115C8, Mem0[sp_103:<unknown>]), 0)
	sp_103 = sp_103 + 0xFFFFFFFFFFFFFFF8
	word64 a4_112 = s1_101 + 2
	branch (s0_100 & 1) == 0x0000000000000000 l00000000000164B8
// DataOut: a4 gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164B8:
	s1_101 = a4_112
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016454:
	branch s0_100 == s9_49 l00000000000164C4
// DataOut: a4 gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164C4:
	s1_101 = a4_112
// DataOut: gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016458:
	Mem116[s1_101 + 2:byte] = s7_50
	s1_101 = s1_101 + 3
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016464:
	s0_100 = (int64) ((word32) s0_100 + 1)
	branch s0_100 != s3_37 l0000000000016430
// DataOut: gp s0 s1 s10 s2 s3 s5 s6 s7 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001646C:
	Mem53[s1_101:byte] = 0x0000000000000000
	word64 sp_55
	word64 s0_56
	word64 s1_57
	word64 s2_58
	word64 s3_59
	word64 s4_60
	word64 s5_61
	word64 s6_62
	word64 s7_63
	word64 s8_64
	word64 s9_65
	word64 ra_66
	word64 a5_67
	word64 gp_68
	word64 a4_69
	word64 a0_70
	word64 a3_71
	word64 a2_72
	word64 a1_73
	word64 a0_74
	word64 a1_75
	word64 a2_76
	word64 a3_77
	call __strdup (retsize: 0;)
		uses: a0_44,a0_54,a1,a1_35,a2,a2_34,a3_33,a4_29,a5_27,gp,qwLoc08_24,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_14,qwLoc40_16,qwLoc48_18,qwLoc50_20,qwLoc58_22,qwLoc68_39,ra,s0_38,s1_51,s2_40,s3_37,s4_30,s5_48,s6_47,s7_50,s8,s9_49,sp_52,tLocF0
		defs: a0_70,a0_74,a1_73,a1_75,a2_72,a2_76,a3_71,a3_77,a4_69,a5_67,gp_68,ra_66,s0_56,s1_57,s2_58,s3_59,s4_60,s5_61,s6_62,s7_63,s8_64,s9_65,sp_55
	branch Mem53[sp_55 + 136:word64] != Mem53[gp_68 + -1936:word64] l00000000000164CC
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000164CC:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -238(fp):0x0000000000000000 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016484:
	word64 s0_81
	*s0Out = Mem53[sp_55 + 224:word64]
	word64 s2_83
	*s2Out = Mem53[sp_55 + 208:word64]
	word64 s5_86
	*s5Out = Mem53[sp_55 + 184:word64]
	word64 s6_87
	*s6Out = Mem53[sp_55 + 176:word64]
	word64 s8_89
	*s8Out = Mem53[sp_55 + 160:word64]
	word64 s9_90
	*s9Out = Mem53[sp_55 + 152:word64]
	return sp_55 + 240
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:0x0000000000011000 s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:16 s1:<invalid> s6:128 s5:1 s9:15 s7:58 -238(fp):0x0000000000000000 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000163B0_exit:
// DataOut: a0 s0 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> a4:<invalid> s4:<invalid> s0:<invalid> s2:<invalid> a3:0x00000000000115C8 a2:128 a1:1 a0:<invalid> s3:<invalid> s1:<invalid> s6:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -238(fp):0x0000000000000000 -236(fp):58 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000164D0(word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1
// LiveOut: a0
// Trashed: a0 a1 a2
// Preserved: ra s0 s1 s2 sp
fn00000000000164D0_entry:
// DataOut: a0 a1 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000164D0:
	word64 a0_24
	word64 a0_19 = DPB(0x00000000000115D0, open(0x00000000000115D0, a1), 0)
	branch false l0000000000016544
// DataOut: a0 gp s0 s10 s2 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016544:
	a0_24 = -1
// DataOut: a0 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFD8 s0:a0 a0:<invalid> s2:a1 a1:0 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016500:
	word64 a0_41 = DPB(a0_19, close(DPB(a0_19, read(a0_19, a1, a2), 0)), 0)
	a0_24 = (int64) (0x0000000000000000 - (word64) ((int64) (0x00000000000115D0 - a1) != 0x0000000000000000))
// DataOut: a0 gp s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFD8 s0:a0 a0:<invalid> s2:a1 a1:0 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001652C:
	return a0_24
// DataOut: a0 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> a0:<invalid> s2:a1 a1:<invalid> a2:a0 << 0x00000000 >>u 0x00000000 s1:<invalid> -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000164D0_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 a0:<invalid> s2:s2 a1:<invalid> a2:a0 << 0x00000000 >>u 0x00000000 s1:s1 ra:ra -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn000000000001654C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 t1 t3
// Preserved: ra s0 s1 s2 s3 sp
fn000000000001654C_entry:
// DataOut: a0 a1 gp s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001654C:
	word64 s0_38
	word64 t3_39
	word64 gp_40
	word64 t1_41
	word64 s2_42
	word64 s3_43
	word64 a1_44
	word64 a0_45
	word64 a3_46
	word64 ra_47
	word64 s1_48
	word64 a4_49
	word64 a5_50
	word64 a6_51
	word64 a7_52
	word64 a0_53
	word64 a1_54
	word64 a2_55
	word64 a2_56
	word64 a3_57
	word64 sp_37
	call __vasprintf_chk (retsize: 0; depth: 128)
		uses: a0_21,a1_19,a3_20,a4,a5,a6,a7,gp,qwLoc08_33,qwLoc10_31,qwLoc18_29,qwLoc20_27,qwLoc28_18,qwLoc38_23,qwLoc40_4,qwLoc48_25,qwLoc50_10,qwLoc58_12,qwLoc68_34,qwLoc70_35,qwLoc78_36,ra,s0,s1,s2_14,s3_16,sp_2,t1_8,t3_7
		defs: a0_45,a0_53,a1_44,a1_54,a2_55,a2_56,a3_46,a3_57,a4_49,a5_50,a6_51,a7_52,gp_40,ra_47,s0_38,s1_48,s2_42,s3_43,sp_37,t1_41,t3_39
	branch fp < 0xFFFFFFFFFFFFFF90 l00000000000165D8
// DataOut: gp s2 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000165A8:
	word64 a0_100 = DPB(a0_53, fputs(a0_53, a1_54), 0)
	word64 sp_101 = fp + 0xFFFFFFFFFFFFFF78
	branch (word64) Mem0[gp_40 + -2032:int32] != 0x0000000000000000 l000000000001661C
// DataOut: gp s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -128 t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:1 a3:fp + -40 a0:fp + -112 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7
// LocalsOut: fp(64)

l000000000001661C:
	a0_100 = DPB(a0_53, fputs(a0_100, a1_54), 0)
	sp_101 = fp + 0xFFFFFFFFFFFFFF70
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF78 t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165BC:
	word64 a0_81 = DPB(a0_100, fputs(a0_100, a1_54), 0)
	word64 sp_82 = sp_101 + 0xFFFFFFFFFFFFFFF8
	branch (word64) Mem0[gp_40 + -2032:int32] != 0x0000000000000000 l0000000000016600
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l0000000000016600:
	a0_81 = DPB(0x00000000000115E0, fwrite(0x00000000000115E0, a1_54, a2_56, a3_57), 0)
	sp_82 = sp_82 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:fp + -40 a0:<invalid> a5:<invalid> -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165D0:
	free(a0_81)
	sp_37 = sp_82 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165D8:
	branch Mem0[sp_37 + 24:word64] != Mem0[gp_40 + -1936:word64] l000000000001662C
// DataOut: gp s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l000000000001662C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

l00000000000165E4:
	return
// DataOut: gp s4
// DataOut (flags): 
// SymbolicIn: sp:<invalid> t3:<invalid> t1:fp + -40 s2:a1 s3:a0 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7

fn000000000001654C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp t3:<invalid> t1:fp + -40 s2:s2 s3:s3 a1:<invalid> a3:<invalid> a0:<invalid> a4:<invalid> a5:<invalid> ra:ra s0:s0 s1:s1 a2:4 -120(fp):fp + -40 -112(fp):0x0000000000000000 -104(fp):<invalid> -88(fp):s3 -80(fp):s2 -72(fp):s1 -64(fp):s0 -56(fp):ra -40(fp):a3 -32(fp):a4 -24(fp):a5 -16(fp):a6 -8(fp):a7



word64 fn0000000000016630(word64 gp, word64 a0, word64 a1, ptr64 & s1Out, ptr64 & a0Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0 s1 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp
// Preserved:
fn0000000000016630_entry:
// DataOut: a0 a1 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0048(64) Local -0050(64)

l0000000000016630:
	word64 a5_33
	word64 a0_22 = __errno_location()
	Mem24[a0:word32] = 0x0000000000000000
	word64 a0_29 = DPB(a0_22, strtol(a0_22), 0)
	branch qwLoc50 == 0x0000000000000000 l000000000001668C
// DataOut: a0 a5 gp s1 s10 s2 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016680:
	branch a0 == qwLoc50 l000000000001668C
// DataOut: a0 a5 gp s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016684:
	branch (word64) Mem24[qwLoc50:byte] == 0x0000000000000000 l00000000000166C4
// DataOut: a0 gp s1 s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166C4:
	a5_33 = (word64) Mem24[a0:int32]
	branch a5_33 != 0x0000000000000000 l0000000000016690
// DataOut: a0 a5 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166CC:
	word64 a4_53 = (int64) (word32) a0
	branch a0 != a4_53 l00000000000166E0
// DataOut: a4 a5 gp s10 s3 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166E0:
	a5_33 = -34
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166D8:
	Mem55[a1:word32] = a4_53
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l000000000001668C:
	a5_33 = (word64) Mem24[a0:int32]
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016690:
	branch 0x0000000000000000 >= a5_33 l00000000000166E8
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l00000000000166E8:
	a5_33 = -22
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016694:
	a5_33 = (int64) (0x0000000000000000 - a5_33)
// DataOut: a5 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64) Local -0048(64)

l0000000000016698:
	word64 a0_37
	*a0Out = a5_33
	branch qwLoc48 != Mem24[gp + -1936:word64] l00000000000166F0
// DataOut: a0 gp s10 s4
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a4:<invalid> a3:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0028(64)

l00000000000166F0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000166A8:
	word64 s1_40
	*s1Out = s3
	return fp + 0xFFFFFFFFFFFFFFF0
// DataOut: a0 gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB0 a5:<invalid> s2:a0 s3:a1 a0:<invalid> s1:<invalid> a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016630_exit:
// DataOut: a0 s1 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFF0 a5:<invalid> s2:<invalid> s3:<invalid> a0:<invalid> s1:s3 a2:0 a1:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> ra:s1 s0:s2 -64(fp):0x0000000000000000 -56(fp):<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000166F4(word64 gp, word64 a0, word64 a1, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000166F4_entry:
// DataOut: a0 a1 a2 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0048(64)

l00000000000166F4:
	word64 sp_110
	word64 s1_116
	word64 a0_33
	word64 sp_106 = fp + -64
	word64 s0_11 = (word64) Mem0[a0:int32]
	word64 s4_118 = a2
	branch s0_11 != 0x0000000000000000 l00000000000167C8
// DataOut: gp s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0048(64)

l000000000001672C:
	word64 a0_105 = strchr(a0, a1)
	sp_106 = fp + 0xFFFFFFFFFFFFFFB8
	branch a1 == 0x0000000000000000 l00000000000167C8
// DataOut: gp s0 s1 s10 s3 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0048(64)

l00000000000167C8:
	word64 a0_98
	sp_110 = fn0000000000016630(gp, a1, sp_106, out s1_116, out a0_98)
	branch a0_98 == 0x0000000000000000 l0000000000016794
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167D8:
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> s2:<invalid> a2:0 a3:<invalid> a4:<invalid> ra:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001673C:
	word64 s2_111
	word64 a5_112
	word64 s0_114
	word64 a0_115
	word64 s3_117
	word64 ra_119
	word64 a1_120
	word64 a2_121
	word64 a0_122
	word64 a1_123
	word64 a4_124
	call inet_pton (retsize: 0; depth: 72)
		uses: a0_105,a0_109,a1,a1_108,a2_107,a4,a5_7,dwLoc48,gp,qwLoc08_19,qwLoc10_9,qwLoc18_13,qwLoc20_4,qwLoc28_15,qwLoc30_17,qwLoc38_20,ra,s0_11,s1_21,s2,s3_23,s4_25,sp_106
		defs: a0_115,a0_122,a1_120,a1_123,a2_121,a4_124,a5_112,gp_113,ra_119,s0_114,s1_116,s2_111,s3_117,s4_118,sp_110
	branch a0_115 == 0x0000000000000000 l000000000001678C
// DataOut: gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:46 a0:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0048(64)

l0000000000016750:
	word64 a0_135 = fn00000000000182B4((word64) dwLoc48)
	branch a0_135 == 0x0000000000000000 l0000000000016790
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:2 a2:fp + 0xFFFFFFFFFFFFFFB8 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001675C:
	branch (a0_135 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016764:
	word64 a5_146 = (int64) (int32) (a0_135 >>u 0x00000001)
	branch a5_146 == 0x0000000000000000 l0000000000016790
// DataOut: a0 a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001676C:
	branch (a5_146 & 1) == 0x0000000000000000 l0000000000016820
// DataOut: a0 a5 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016820:
	a0_135 = (int64) (int32) (a0_135 >>u 0x00000002)
	branch a0_135 != 0x0000000000000000 l000000000001675C
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016828:
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016774:
	a0_135 = a5_146
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016778:
	a0_135 = (int64) (int32) (a0_135 >>u 0x00000001)
	branch a0_135 == 0x0000000000000000 l0000000000016790
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016784:
	branch (a0_135 & 1) != 0x0000000000000000 l0000000000016778
// DataOut: a0 gp s0 s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001678C:
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016790:
// DataOut: gp s1 s10 s4 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFB8 a5:<invalid> s0:<invalid> s1:a0 s3:a1 s4:a2 a1:a1 a0:<invalid> a2:fp + 0xFFFFFFFFFFFFFFB8 a3:<invalid> a4:<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016794:
	word64 a5_81 = (word64) Mem0[sp_110:int32]
	branch s4_118 == 0x0000000000000000 l00000000000167DC
// DataOut: a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001679C:
	branch 32 >= a5_81 l00000000000167DC
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a2:<invalid> a3:<invalid> a4:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167DC:
	a0_33 = a5_81
	branch a5_81 < 0x0000000000000000 l00000000000167C0
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167E4:
	branch (word64) Mem0[s1_116:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a5 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167EC:
	branch 32 < a5_81 l00000000000167C0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167A8:
	branch (word64) Mem0[s1_116:int32] != 0x0000000000000000 l00000000000167B8
// DataOut: a0 a5 gp s1 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:32 a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B0:
	Mem92[s1_116:word32] = 1
// DataOut: a0 a5 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167B8:
	a0_33 = a5_81
	branch 128 >= a5_81 l00000000000167F4
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167C0:
	a0_33 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000167F4:
	branch Mem0[sp_110 + 8:word64] != Mem0[gp + -1936:word64] l000000000001682C
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001682C:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016800:
	return a0_33
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s1:<invalid> s3:<invalid> s4:a2 a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> s2:<invalid> ra:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000166F4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 s1:s1 s3:s3 s4:s4 a1:<invalid> a0:<invalid> a4:<invalid> ra:ra s2:s2 a2:<invalid> a3:<invalid> -72(fp):<invalid> -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000016830(word64 gp, word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 gp
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: ra s0 sp
fn0000000000016830_entry:
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016830:
	word64 a5_7 = Mem0[gp + -1936:word64]
	word32 dwLoc20_10 = 0x0000000000000000
	branch a0 == 0x0000000000000000 l0000000000016864
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0018(64) Local -0020(64)

l000000000001684C:
	dwLoc20_10 = fn00000000000182B4((int64) (int32) (-1 << (int64) (32 - a0)))
// DataOut: gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> -32(fp):0x0000000000000000 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0018(64) Local -0020(64)

l0000000000016864:
	word64 a0_16 = (word64) dwLoc20_10
	branch a5_7 != Mem0[gp + -1936:word64] l0000000000016884
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> a0:<invalid> a3:<invalid> a4:<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016884:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> a0:<invalid> a4:<invalid> a3:<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000016874:
	return a0_16
// DataOut: a0 gp s10 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -32 a5:<invalid> a0:<invalid> a4:<invalid> a3:<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000016830_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid> a4:<invalid> ra:ra s0:s0 a3:<invalid> -32(fp):<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra



void fn00000000000168B8(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut:
// Trashed: a0 a3 a4 a5
// Preserved: ra s0 sp
fn00000000000168B8_entry:
// DataOut: a0 a1 gp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168B8:
	fn0000000000016830(gp, a1)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000168B8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 a0:<invalid> ra:ra a5:<invalid> a4:<invalid> a3:<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000168E4(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5
// Preserved: ra s0 s1 sp
fn00000000000168E4_entry:
// DataOut: a0 a1 gp s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000168E4:
	word64 a0_109
	word64 a0_125
	word64 sp_115 = fp + -96
	branch a0 == 2 l0000000000016984
// DataOut: a0 a1 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016984:
	word64 s0_216
	word64 a4_217
	word64 ra_219
	word64 s1_220
	word64 a5_221
	word64 a7_222
	word64 t5_224
	word64 a1_225
	word64 t4_226
	word64 t3_227
	word64 t1_228
	word64 a6_229
	word64 a3_230
	word64 a2_231
	word64 a0_232
	word64 a1_233
	word64 a2_234
	call getnameinfo (retsize: 0; depth: 96)
		uses: a0,a0_208,a1,a1_207,a2,a2_206,a3_205,a4_204,a5_203,a6_202,a7_15,bLoc51_214,bLoc52_213,bLoc53_212,bLoc54_211,dwLoc30,gp,qwLoc08_9,qwLoc10_4,qwLoc18_11,qwLoc28_13,qwLoc38,qwLoc40,qwLoc48,qwLoc50_209,qwLoc58_201,ra,s0,s1,sp_2,t1_200,t3_199,t4_198,t5_197,wLoc48,wLoc58_210
		defs: a0_223,a0_232,a1_225,a1_233,a2_231,a2_234,a3_230,a4_217,a5_221,a6_229,a7_222,gp_218,ra_219,s0_216,s1_220,sp_215,t1_228,t3_227,t4_226,t5_224
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016908:
	branch a0 == 10 l0000000000016934
// DataOut: a1 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:2 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000016934:
	word64 a0_168 = memcpy(fp + -64, a1, a2)
	word64 s0_178
	word64 a4_179
	word64 ra_181
	word64 s1_182
	word64 a5_183
	word64 a7_184
	word64 t5_186
	word64 a1_187
	word64 t4_188
	word64 t3_189
	word64 t1_190
	word64 a6_191
	word64 a3_192
	word64 a2_193
	word64 a0_194
	word64 a1_195
	word64 a2_196
	call getnameinfo (retsize: 0; depth: 104)
		uses: a0_168,a0_176,a1,a1_175,a2,a2_174,a3_173,a4_172,a5_171,a6_170,a7_15,bLoc51,bLoc52,bLoc53,bLoc54,dwLoc30_166,gp,qwLoc08_9,qwLoc10_4,qwLoc18_11,qwLoc28_13,qwLoc38_165,qwLoc40_164,qwLoc48_161,qwLoc50,qwLoc58,ra,s0,s1,sp_169,t1,t3,t4,t5,wLoc48_167,wLoc58
		defs: a0_185,a0_194,a1_187,a1_195,a2_193,a2_196,a3_192,a4_179,a5_183,a6_191,a7_184,gp_180,ra_181,s0_178,s1_182,sp_177,t1_190,t3_189,t4_188,t5_186
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a4:<invalid> a5:10 a7:a0 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016974:
	branch a0_109 != 0x0000000000000000 l0000000000016910
// DataOut: gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016978:
	word64 s0_118
	word64 a4_119
	word64 ra_121
	word64 s1_122
	word64 a5_123
	word64 a7_124
	word64 t5_126
	word64 a1_127
	word64 t4_128
	word64 t3_129
	word64 t1_130
	word64 a6_131
	word64 a3_132
	word64 a2_133
	word64 a0_134
	word64 a1_135
	word64 a2_136
	call __strdup (retsize: 0;)
		uses: a0_116,a0_98,a1_105,a1_97,a2_96,a2_99,a3_100,a4_110,a5_111,a6_101,a7_107,bLoc51_90,bLoc52_89,bLoc53_88,bLoc54_87,dwLoc30_94,gp_108,qwLoc08_9,qwLoc10_4,qwLoc18_11,qwLoc28_13,qwLoc38_93,qwLoc40_92,qwLoc48_91,qwLoc50_85,qwLoc58_84,ra_112,s0_113,s1_114,sp_115,t1_102,t3_103,t4_104,t5_106,wLoc48_95,wLoc58_86
		defs: a0_125,a0_134,a1_127,a1_135,a2_133,a2_136,a3_132,a4_119,a5_123,a6_131,a7_124,gp_120,ra_121,s0_118,s1_122,sp_117,t1_130,t3_129,t4_128,t5_126
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:0 a5:0 a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016910:
	a0_125 = 0
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> a0:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016914:
	branch Mem0[sp_115 + 56:word64] != Mem0[gp + -1936:word64] l00000000000169D4
// DataOut: a0 gp s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000169D4:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016920:
	return a0_125
// DataOut: a0 gp s10 s3 s6
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000168E4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a4:<invalid> a5:<invalid> a7:a0 a0:<invalid> ra:ra s0:s0 s1:s1 t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 a3:1025 a2:gp + -1896 a1:<invalid> -88(fp):fp + -88 -84(fp):<invalid> -83(fp):<invalid> -82(fp):<invalid> -81(fp):<invalid> -80(fp):0x0000000000000000 -72(fp):fp + -64 -64(fp):0x0000000000000000 -56(fp):0x0000000000000000 -48(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000169D8(word64 gp, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5
// Preserved: ra s0 s1 s2 s3 s4 sp
fn00000000000169D8_entry:
// DataOut: a1 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0070(64)

l00000000000169D8:
	word64 a0_126
	word64 a5_7 = Mem0[gp + -1936:word64]
	word64 sp_33
	word64 s4_34
	word64 a5_35
	word64 a4_37
	word64 a1_38
	word64 a0_39
	word64 a3_40
	word64 a2_41
	word64 ra_42
	word64 s0_43
	word64 s1_44
	word64 s2_45
	word64 s3_46
	word64 gp_123
	call getaddrinfo (retsize: 0; depth: 112)
		uses: a0_16,a1_15,a2_14,a3_13,a4_9,a5_7,dwLoc64_12,gp,qwLoc08_18,qwLoc10_20,qwLoc18_22,qwLoc20_24,qwLoc28_26,qwLoc30_4,qwLoc38_27,qwLoc40_32,qwLoc48_31,qwLoc50_30,qwLoc58_29,qwLoc60_28,qwLoc68_10,ra,s0,s1,s2,s3,s4,sp_2
		defs: a0_39,a1_38,a2_41,a3_40,a4_37,a5_35,gp_36,ra_42,s0_43,s1_44,s2_45,s3_46,s4_34,sp_33
	branch a0_39 != 0x0000000000000000 l0000000000016AD8
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0038(64) Local -0070(64)

l0000000000016AD8:
	a0_126 = 0
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:a1 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A34:
	word64 s0_148 = qwLoc70
	branch qwLoc70 == 0x0000000000000000 l0000000000016AA0
// DataOut: gp s0 s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:a1 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A3C:
	word64 s3_145 = 2
// DataOut: gp s0 s1 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:fp + -112 a2:fp + -104 a1:0 a0:a1 s0:<invalid> -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A68:
	word64 s0_142
	word64 a0_102 = (word64) Mem0[s0_148 + 4:int32]
	branch a0_102 != s3_145 l0000000000016A4C
// DataOut: a0 a1 gp s0 s1 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A4C:
	word64 sp_170
	word64 s4_171
	word64 a5_172
	word64 gp_173
	word64 a4_174
	word64 a1_175
	word64 a0_176
	word64 a3_177
	word64 a2_178
	word64 ra_179
	word64 s1_181
	word64 s2_182
	call inet_ntop (retsize: 0; depth: 112)
		uses: a0_102,a1_167,a2_169,a3_168,a4_93,a5_94,dwLoc64_12,gp_92,qwLoc08_18,qwLoc10_20,qwLoc18_22,qwLoc20_24,qwLoc28_26,qwLoc30_4,qwLoc38_27,qwLoc40_32,qwLoc48_31,qwLoc50_30,qwLoc58_29,qwLoc60_28,qwLoc68_10,qwLoc70,ra_95,s0_96,s1_97,s2_98,s3_99,s4_100,sp_101
		defs: a0_176,a1_175,a2_178,a3_177,a4_174,a5_172,gp_173,ra_179,s0_180,s1_181,s2_182,s3_183,s4_171,sp_170
	branch a0_176 != 0x0000000000000000 l0000000000016A88
// DataOut: gp s0 s1 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A74:
	word64 sp_153
	word64 s4_154
	word64 a5_155
	word64 gp_156
	word64 a4_157
	word64 a1_158
	word64 a0_159
	word64 a3_160
	word64 a2_161
	word64 ra_162
	word64 s1_164
	word64 s2_165
	call inet_ntop (retsize: 0; depth: 112)
		uses: a0_102,a1_150,a2_152,a3_151,a4_93,a5_94,dwLoc64_12,gp_92,qwLoc08_18,qwLoc10_20,qwLoc18_22,qwLoc20_24,qwLoc28_26,qwLoc30_4,qwLoc38_27,qwLoc40_32,qwLoc48_31,qwLoc50_30,qwLoc58_29,qwLoc60_28,qwLoc68_10,qwLoc70,ra_95,s0_96,s1_97,s2_98,s3_99,s4_100,sp_101
		defs: a0_159,a1_158,a2_161,a3_160,a4_157,a5_155,gp_156,ra_162,s0_163,s1_164,s2_165,s3_166,s4_154,sp_153
	branch a0_159 == 0x0000000000000000 l0000000000016A60
// DataOut: gp s0 s1 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A60:
	s0_148 = Mem0[s0_142 + 40:word64]
	branch s0_148 == 0x0000000000000000 l0000000000016A9C
// DataOut: gp s0 s1 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A9C:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016AA0:
	word64 sp_72
	word64 s4_73
	word64 a5_74
	word64 a4_76
	word64 a1_77
	word64 a0_78
	word64 a3_79
	word64 a2_80
	word64 ra_81
	word64 s0_82
	word64 s1_83
	word64 s2_84
	word64 s3_85
	call freeaddrinfo (retsize: 0; depth: 112)
		uses: a0_71,a1_38,a2_41,a3_40,a4_37,a5_35,dwLoc64_12,gp_36,qwLoc08_18,qwLoc10_20,qwLoc18_22,qwLoc20_24,qwLoc28_26,qwLoc30_4,qwLoc38_27,qwLoc40_32,qwLoc48_31,qwLoc50_30,qwLoc58_29,qwLoc60_28,qwLoc68_10,qwLoc70,ra_42,s0_70,s1_44,s2_45,s3_46,s4_34,sp_33
		defs: a0_78,a1_77,a2_80,a3_79,a4_76,a5_74,gp_75,ra_81,s0_82,s1_83,s2_84,s3_85,s4_73,sp_72
	a0_126 = 0
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016A88:
	word64 sp_105
	word64 s4_106
	word64 a5_107
	word64 gp_108
	word64 a4_109
	word64 a1_110
	word64 a0_111
	word64 a3_112
	word64 a2_113
	word64 ra_114
	word64 s0_115
	word64 s1_116
	word64 s2_117
	word64 s3_118
	call freeaddrinfo (retsize: 0; depth: 112)
		uses: a0_104,a1_103,a2_90,a3_91,a4_93,a5_94,dwLoc64_12,gp_92,qwLoc08_18,qwLoc10_20,qwLoc18_22,qwLoc20_24,qwLoc28_26,qwLoc30_4,qwLoc38_27,qwLoc40_32,qwLoc48_31,qwLoc50_30,qwLoc58_29,qwLoc60_28,qwLoc68_10,qwLoc70,ra_95,s0_96,s1_97,s2_98,s3_99,s4_100,sp_101
		defs: a0_111,a1_110,a2_113,a3_112,a4_109,a5_107,gp_108,ra_114,s0_115,s1_116,s2_117,s3_118,s4_106,sp_105
	word64 sp_120
	word64 s4_121
	word64 a5_122
	word64 a4_124
	word64 a1_125
	word64 a3_127
	word64 a2_128
	word64 ra_129
	word64 s0_130
	word64 s1_131
	word64 s2_132
	word64 s3_133
	call __strdup (retsize: 0; depth: 112)
		uses: a0_119,a1_110,a2_113,a3_112,a4_109,a5_107,dwLoc64_12,gp_108,qwLoc08_18,qwLoc10_20,qwLoc18_22,qwLoc20_24,qwLoc28_26,qwLoc30_4,qwLoc38_27,qwLoc40_32,qwLoc48_31,qwLoc50_30,qwLoc58_29,qwLoc60_28,qwLoc68_10,qwLoc70,ra_114,s0_115,s1_116,s2_117,s3_118,s4_106,sp_105
		defs: a0_126,a1_125,a2_128,a3_127,a4_124,a5_122,gp_123,ra_129,s0_130,s1_131,s2_132,s3_133,s4_121,sp_120
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:64 a2:gp + -864 a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0038(64)

l0000000000016AAC:
	branch a5_7 != Mem0[gp_123 + -1936:word64] l0000000000016AE0
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:a1 a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AE0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016AB8:
	return a0_126
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -112 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:<invalid> s1:gp + -864 s3:2 s2:64 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000169D8_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> s0:s0 ra:ra s1:s1 s2:s2 s3:s3 s4:s4 -104(fp):0x0000000000000000 -100(fp):a0 -96(fp):0x0000000000000000 -88(fp):0x0000000000000000 -80(fp):0x0000000000000000 -72(fp):0x0000000000000000 -64(fp):0x0000000000000000 -56(fp):<invalid> -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000016B38(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut:
// Trashed: a0 a5
// Preserved: sp
fn0000000000016B38_entry:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B38:
	branch 127 <u a0 l0000000000016B5C
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016B5C:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

l0000000000016B40:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:127

fn0000000000016B38_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a0:<invalid>



word64 fn0000000000016B68(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra sp
fn0000000000016B68_entry:
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000016B68:
	word64 a4_104
	word64 a0_6 = fn00000000000182B4(a0)
	word64 a5_7 = (int64) (int32) (a0_6 >>u 0x00000018)
	branch a5_7 == 0x0000000000000000 l0000000000016BD8
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000016BD8:
	a4_104 = 0x00000000000115E8
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B7C:
	branch a5_7 == 10 l0000000000016C2C
// DataOut: a0 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -8(fp):ra

l0000000000016B84:
	word64 a4_41 = (int64) (int32) (a0_6 >>u 0x00000010)
	branch a5_7 == 100 l0000000000016C58
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:10 a3:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C58:
	branch (a4_41 & 192) != 64 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C64:
	a4_104 = 0x0000000000011618
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:64 a0:<invalid> -8(fp):ra

l0000000000016B90:
	branch a5_7 == 127 l0000000000016C70
// DataOut: a0 a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:100 a0:<invalid> -8(fp):ra

l0000000000016C70:
	a4_104 = 0x0000000000011630
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016B98:
	word64 a2_60 = (int64) (int32) (a0_6 >>u 0x00000008)
	branch a5_7 == 169 l0000000000016C44
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:127 a0:<invalid> -8(fp):ra

l0000000000016C44:
	branch (a4_41 & 255) != 254 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C4C:
	a4_104 = 0x0000000000011640
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:254 a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BAC:
	branch a5_7 != 172 l0000000000016BF0
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:169 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF0:
	branch a5_7 != 192 l0000000000016C7C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C7C:
	branch a5_7 != 203 l0000000000016D18
// DataOut: a0 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D18:
	word64 a2_92 = 255
	branch a5_7 != a2_92 l0000000000016D4C
// DataOut: a0 a2 a3 a4 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D4C:
	branch a5_7 != 198 l0000000000016BC0
// DataOut: a4 a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D54:
	a4_104 = 0x0000000000011650
	branch (a4_41 & 254) != 18 l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:198 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D68:
	a4_104 = 0x0000000000011738
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011650 a3:18 a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D20:
	a4_104 = 0x0000000000011710
	branch (a4_41 & 255) != a5_7 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D2C:
	a4_104 = 0x0000000000011710
	branch (a2_60 & 255) != a2_92 l0000000000016BE0
// DataOut: a0 a2 a4 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D38:
	branch (a0_6 & a2_92) != (a2_60 & 255) l0000000000016BE0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D40:
	a4_104 = 0x0000000000011720
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:0x0000000000011710 a3:<invalid> a2:255 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C84:
	branch (a4_41 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C88:
	branch (a2_60 & 255) != 113 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C90:
	a4_104 = 0x00000000000116C0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:113 a3:<invalid> a2:203 a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BF8:
	branch ((a4_41 | a2_60) & 255) == 0x0000000000000000 l0000000000016CD0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CD0:
	a4_104 = 0x0000000000011660
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C04:
	branch (a4_41 & 255) == 2 l0000000000016CDC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CDC:
	branch (a2_60 & 255) != 0x0000000000000000 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CE0:
	a4_104 = 0x0000000000011680
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C0C:
	branch (a4_41 & 255) == 51 l0000000000016C9C
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:2 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C9C:
	branch (a2_60 & 255) != 100 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CA4:
	a4_104 = 0x00000000000116A0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:100 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C14:
	branch (a4_41 & 255) == 88 l0000000000016CB0
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:51 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB0:
	branch (a2_60 & 255) == 99 l0000000000016D00
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D00:
	a4_104 = 0x00000000000116E0
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:99 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C1C:
	branch (a4_41 & 255) == 52 l0000000000016CEC
// DataOut: a3 a5 a6 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:88 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CEC:
	branch (a2_60 & 255) != 193 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CF4:
	a4_104 = 0x0000000000011708
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:193 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C24:
	branch (a4_41 & 255) != 168 l0000000000016BC0
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:52 a3:<invalid> a2:<invalid> a1:192 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BB4:
	branch (a4_41 & 240) == 16 l0000000000016C2C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:172 a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016C2C:
	return 0x0000000000011608
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

l0000000000016BC0:
	branch 15 <u (int64) ((word32) a5_7 + -224) l0000000000016CB8
// DataOut: a5 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CB8:
	branch (a5_7 & 240) == 240 l0000000000016D0C
// DataOut: gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016D0C:
	a4_104 = 0x0000000000011710
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016CC4:
	a4_104 = 0x0000000000011650
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:240 a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BCC:
	a4_104 = 0x0000000000011748
// DataOut: a4 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:15 a2:<invalid> a1:<invalid> a6:<invalid> a0:<invalid> -8(fp):ra

l0000000000016BE0:
	return a4_104
// DataOut: a0 gp s0 s10 s3 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -16 a5:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra

fn0000000000016B68_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a4:<invalid> ra:ra a0:<invalid> a3:<invalid> a2:<invalid> a1:<invalid> a6:<invalid> -8(fp):ra



word64 fn0000000000016D74(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 t1 t3 t4 t5
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 sp
fn0000000000016D74_entry:
// DataOut: a0 a1 a2 a3 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01C0(64) Local -01C8(0)

l0000000000016D74:
	word64 a0_127
	word64 a0_41 = memset(a0, a1, a2)
	word64 s7_47
	word64 a5_48
	word64 s6_50
	word64 a2_51
	word64 s1_52
	word64 s5_53
	word64 a0_54
	word64 a1_55
	word64 s8_56
	word64 ra_57
	word64 s0_58
	word64 s2_59
	word64 s3_60
	word64 s4_61
	word64 a3_62
	word64 a0_63
	word64 a2_65
	word64 a4_66
	word64 a3_67
	word64 a4_68
	word64 gp_109
	word64 a1_132
	word64 sp_126
	call inet_pton (retsize: 0; depth: 456)
		uses: a0_41,a0_45,a1,a1_44,a2,a2_43,a3,a5_7,gp,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra,s0,s1_17,s2,s3,s4,s5_20,s6_11,s7,s8_36,sp_42
		defs: a0_54,a0_63,a1_55,a1_64,a2_51,a2_65,a3_62,a3_67,a4_66,a4_68,a5_48,gp_49,ra_57,s0_58,s1_52,s2_59,s3_60,s4_61,s5_53,s6_50,s7_47,s8_56,sp_46
	branch 0x0000000000000000 >= a0_54 l0000000000016E60
// DataOut: gp s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01C0(64) Local -01C8(0)

l0000000000016E60:
	branch (word64) Mem0[gp_109 + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:2 a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01C8(0)

l0000000000016E68:
	word64 a0_918 = DPB(a0_63, __fprintf_chk(a0_63, a1_132, 0x0000000000011788, tLoc01C8), 0)
	sp_126 = fp + 0xFFFFFFFFFFFFFE30
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:2 a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DDC:
	word64 a0_135
	branch s5_53 < 0x0000000000000000 l0000000000016E88
// DataOut: gp s1 s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:2 a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C0(64)

l0000000000016E88:
	branch s8_56 << 0x0000000D >= 0x0000000000000000 l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:2 a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -01C0(64)

l0000000000016E94:
	word64 a0_905 = fn00000000000182B4((word64) dwLoc01C0)
	word64 a5_906 = (int64) (int32) (a0_905 >>u 0x00000018)
	branch a0_905 >= 0x0000000000000000 l0000000000016EBC
// DataOut: a5 gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:a3 << 0x0000000D s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:32 a0:2 a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EA8:
	branch 63 <u (int64) ((word32) a5_906 + -128) l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:8 a0:<invalid> a1:a0 s8:a3 a3:<invalid> a4:<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EB8:
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:24 a0:<invalid> a1:a0 s8:a3 a3:<invalid> a4:63 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DE0:
	word64 a0_847 = s1_52
	word64 s0_848 = 3
	a0_135 = a0_63
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE38 a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:2 a1:a0 s8:a3 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016DF0:
	a0_135 = strchr(a0_135, a1_132)
	sp_126 = sp_126 + 0xFFFFFFFFFFFFFFF8 + 48
	Mem857[sp_126 + 48:word64] = a0_847
	branch a0_847 == 0x0000000000000000 l0000000000017194
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:46 -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017194:
	word64 s2_884 = -1
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171A0:
	a0_135 = DPB(a0_135, __asprintf_chk(a0_135, a1_132, 0x00000000000117A8, Mem857[sp_126:<unknown>]), 0)
	sp_126 = sp_126 + 0xFFFFFFFFFFFFFFF8
	branch sp_126 + 0 == s2_884 l00000000000172BC
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172BC:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171B8:
	s0_848 = (int64) ((word32) s0_848 + -1)
	branch s0_848 != 0x0000000000000000 l00000000000171A0
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171C4:
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:0x00000000000117A8 s5:a1 a0:<invalid> a1:1 s8:a3 s0:<invalid> s2:-1 s4:0x0000000000011000 s3:1 a3:<invalid> -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E00:
	a0_847 = a0_847 + 1
	Mem880[sp_126 + 48:word64] = a0_847
	s0_848 = (int64) ((word32) s0_848 + -1)
	branch s0_848 != 0x0000000000000000 l0000000000016DF0
// DataOut: a0 gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:a0 a2:fp + 0xFFFFFFFFFFFFFE40 s5:a1 a0:<invalid> a1:46 s8:a3 s0:<invalid> s2:46 -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E10:
	branch 32 >= s5_53 l0000000000016EBC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016EBC:
	word64 s7_162
	word64 a5_163
	word64 s6_165
	word64 a2_166
	word64 s1_167
	word64 s5_168
	word64 a0_169
	word64 a1_170
	word64 s8_171
	word64 ra_172
	word64 s0_173
	word64 s2_174
	word64 s3_175
	word64 s4_176
	word64 a3_177
	word64 a0_178
	word64 a4_181
	word64 a4_183
	word64 a3_182
	word64 a2_180
	word64 a1_179
	call inet_ntop (retsize: 0;)
		uses: a0_160,a0_63,a1_159,a1_64,a2_158,a2_65,a3_157,a3_67,a4_66,a4_68,a5_48,gp_49,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_57,s0_58,s1_52,s2_59,s3_60,s4_61,s5_53,s6_50,s7_47,s8_56,sp_156
		defs: a0_169,a0_178,a1_170,a1_179,a2_166,a2_180,a3_177,a3_182,a4_181,a4_183,a5_163,gp_164,ra_172,s0_173,s1_167,s2_174,s3_175,s4_176,s5_168,s6_165,s7_162,s8_171,sp_161
	branch a0_169 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016ED4:
	word64 sp_215
	word64 s7_216
	word64 a5_217
	word64 gp_218
	word64 s6_219
	word64 a2_220
	word64 s1_221
	word64 s5_222
	word64 a0_223
	word64 a1_224
	word64 s8_225
	word64 ra_226
	word64 s0_227
	word64 s2_228
	word64 s3_229
	word64 s4_230
	word64 a3_231
	word64 a0_232
	word64 a1_233
	word64 a2_234
	word64 a4_235
	word64 a3_236
	word64 a4_237
	call __strdup (retsize: 0;)
		uses: a0_178,a0_214,a1_170,a1_179,a2_166,a2_180,a3_177,a3_182,a4_181,a4_183,a5_163,gp_164,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_172,s0_173,s1_167,s2_174,s3_175,s4_176,s5_168,s6_165,s7_162,s8_171,sp_161
		defs: a0_223,a0_232,a1_224,a1_233,a2_220,a2_234,a3_231,a3_236,a4_235,a4_237,a5_217,gp_218,ra_226,s0_227,s1_221,s2_228,s3_229,s4_230,s5_222,s6_219,s7_216,s8_225,sp_215
	Mem238[s6_219:word64] = a0_223
	Mem241[sp_215 + 16:word32] = fn0000000000016830(gp_218, s5_222)
	Mem246[sp_215 + 56:word64] = 0x0000000000000000
	Mem247[sp_215 + 64:word64] = 0x0000000000000000
	Mem248[sp_215 + 72:word64] = 0x0000000000000000
	Mem249[sp_215 + 80:word64] = 0x0000000000000000
	Mem250[sp_215 + 88:word64] = 0x0000000000000000
	Mem251[sp_215 + 96:word32] = 0x0000000000000000
	Mem252[sp_215 + 100:word16] = 0x0000000000000000
	Mem253[sp_215 + 102:byte] = 0x0000000000000000
	word64 s7_255
	word64 a5_256
	word64 gp_257
	word64 s6_258
	word64 a2_259
	word64 s1_260
	word64 s5_261
	word64 a0_262
	word64 a1_263
	word64 s8_264
	word64 ra_265
	word64 s0_266
	word64 s2_267
	word64 s3_268
	word64 s4_269
	word64 a3_270
	word64 a2_273
	word64 a4_274
	word64 a3_275
	word64 a4_276
	call inet_ntop (retsize: 0;)
		uses: a0_232,a0_245,a1_233,a1_244,a2_234,a2_243,a3_236,a3_242,a4_235,a4_237,a5_217,gp_218,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_226,s0_227,s1_221,s2_228,s3_229,s4_230,s5_222,s6_219,s7_216,s8_225,sp_215
		defs: a0_262,a0_271,a1_263,a1_272,a2_259,a2_273,a3_270,a3_275,a4_274,a4_276,a5_256,gp_257,ra_265,s0_266,s1_260,s2_267,s3_268,s4_269,s5_261,s6_258,s7_255,s8_264,sp_254
	branch a0_262 == 0x0000000000000000 l0000000000017300
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017300:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -440(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F24:
	word64 sp_278
	word64 s7_279
	word64 a5_280
	word64 gp_281
	word64 s6_282
	word64 a2_283
	word64 s1_284
	word64 s5_285
	word64 a0_286
	word64 a1_287
	word64 s8_288
	word64 ra_289
	word64 s0_290
	word64 s2_291
	word64 s3_292
	word64 s4_293
	word64 a3_294
	word64 a0_295
	word64 a1_296
	word64 a2_297
	word64 a4_298
	word64 a3_299
	word64 a4_300
	call __strdup (retsize: 0;)
		uses: a0_271,a0_277,a1_263,a1_272,a2_259,a2_273,a3_270,a3_275,a4_274,a4_276,a5_256,gp_257,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_265,s0_266,s1_260,s2_267,s3_268,s4_269,s5_261,s6_258,s7_255,s8_264,sp_254
		defs: a0_286,a0_295,a1_287,a1_296,a2_283,a2_297,a3_294,a3_299,a4_298,a4_300,a5_280,gp_281,ra_289,s0_290,s1_284,s2_291,s3_292,s4_293,s5_285,s6_282,s7_279,s8_288,sp_278
	Mem301[s6_282 + 48:word64] = a0_286
	word64 s0_302 = (word64) Mem301[sp_278 + 8:int32]
	Mem303[s6_282 + 160:word32] = s5_285
	word64 a5_307 = fn0000000000016830(gp_281, s5_285) ^ -1 | s0_302
	Mem312[sp_278 + 32:word32] = a5_307
	Mem313[sp_278 + 56:word64] = 0x0000000000000000
	Mem314[sp_278 + 64:word64] = 0x0000000000000000
	Mem315[sp_278 + 72:word64] = 0x0000000000000000
	Mem316[sp_278 + 80:word64] = 0x0000000000000000
	Mem317[sp_278 + 88:word64] = 0x0000000000000000
	Mem318[sp_278 + 96:word32] = 0x0000000000000000
	Mem319[sp_278 + 100:word16] = 0x0000000000000000
	Mem320[sp_278 + 102:byte] = 0x0000000000000000
	word64 s7_322
	word64 a5_323
	word64 gp_324
	word64 s6_325
	word64 a2_326
	word64 s1_327
	word64 s5_328
	word64 a0_329
	word64 a1_330
	word64 s8_331
	word64 ra_332
	word64 s0_333
	word64 s2_334
	word64 s3_335
	word64 s4_336
	word64 a3_337
	word64 a2_340
	word64 a4_341
	word64 a3_342
	word64 a4_343
	call inet_ntop (retsize: 0;)
		uses: a0_295,a0_311,a1_296,a1_310,a2_297,a2_309,a3_299,a3_308,a4_298,a4_300,a5_307,gp_281,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_289,s0_302,s1_284,s2_291,s3_292,s4_293,s5_285,s6_282,s7_279,s8_288,sp_278
		defs: a0_329,a0_338,a1_330,a1_339,a2_326,a2_340,a3_337,a3_342,a4_341,a4_343,a5_323,gp_324,ra_332,s0_333,s1_327,s2_334,s3_335,s4_336,s5_328,s6_325,s7_322,s8_331,sp_321
	branch a0_329 == 0x0000000000000000 l00000000000172F4
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -440(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172F4:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -440(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016F84:
	word64 sp_345
	word64 s7_346
	word64 a5_347
	word64 gp_348
	word64 s6_349
	word64 a2_350
	word64 s1_351
	word64 s5_352
	word64 a0_353
	word64 a1_354
	word64 s8_355
	word64 ra_356
	word64 s0_357
	word64 s2_358
	word64 s3_359
	word64 s4_360
	word64 a3_361
	word64 a0_362
	word64 a1_363
	word64 a2_364
	word64 a4_365
	word64 a3_366
	word64 a4_367
	call __strdup (retsize: 0;)
		uses: a0_338,a0_344,a1_330,a1_339,a2_326,a2_340,a3_337,a3_342,a4_341,a4_343,a5_323,gp_324,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_332,s0_333,s1_327,s2_334,s3_335,s4_336,s5_328,s6_325,s7_322,s8_331,sp_321
		defs: a0_353,a0_362,a1_354,a1_363,a2_350,a2_364,a3_361,a3_366,a4_365,a4_367,a5_347,gp_348,ra_356,s0_357,s1_351,s2_358,s3_359,s4_360,s5_352,s6_349,s7_346,s8_355,sp_345
	Mem368[s6_349 + 40:word64] = a0_353
	word64 s0_369 = (word64) Mem368[sp_345 + 8:int32]
	word64 a0_371 = fn0000000000016830(gp_348, s5_352)
	word64 a3_372 = (word64) Mem368[sp_345 + 32:int32]
	word64 s0_373 = a0_371 & s0_369
	Mem377[sp_345 + 24:word32] = s0_373
	word64 a0_378
	word64 s5_379
	word64 s6_380
	word64 sp_381 = fn0000000000017F04(gp_348, s0_373, s5_352, s0_373, a3_372, out a0_378, out s5_379, out s6_380)
	Mem382[s6_380 + 24:word64] = a0_378
	Mem387[sp_381 + 56:word64] = 0x0000000000000000
	Mem388[sp_381 + 64:word64] = 0x0000000000000000
	Mem389[sp_381 + 72:word64] = 0x0000000000000000
	Mem390[sp_381 + 80:word64] = 0x0000000000000000
	Mem391[sp_381 + 88:word64] = 0x0000000000000000
	Mem392[sp_381 + 96:word32] = 0x0000000000000000
	Mem393[sp_381 + 100:word16] = 0x0000000000000000
	Mem394[sp_381 + 102:byte] = 0x0000000000000000
	word64 s7_396
	word64 a5_397
	word64 gp_398
	word64 s6_399
	word64 a2_400
	word64 s1_401
	word64 s5_402
	word64 a0_403
	word64 a1_404
	word64 s8_405
	word64 ra_406
	word64 s0_407
	word64 s2_408
	word64 s3_409
	word64 s4_410
	word64 a3_411
	word64 a2_414
	word64 a4_415
	word64 a3_416
	word64 a4_417
	call inet_ntop (retsize: 0;)
		uses: a0_362,a0_386,a1_363,a1_385,a2_364,a2_384,a3_366,a3_383,a4_365,a4_367,a5_347,gp_348,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_356,s0_373,s1_351,s2_358,s3_359,s4_360,s5_379,s6_380,s7_346,s8_355,sp_381
		defs: a0_403,a0_412,a1_404,a1_413,a2_400,a2_414,a3_411,a3_416,a4_415,a4_417,a5_397,gp_398,ra_406,s0_407,s1_401,s2_408,s3_409,s4_410,s5_402,s6_399,s7_396,s8_405,sp_395
	branch a0_403 == 0x0000000000000000 l00000000000172DC
// DataOut: gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 -440(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172DC:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016FF4:
	word64 a5_453
	word64 s7_420
	word64 a5_421
	word64 a2_424
	word64 s1_425
	word64 s5_426
	word64 a0_427
	word64 a1_428
	word64 ra_430
	word64 s0_431
	word64 s2_432
	word64 s3_433
	word64 s4_434
	word64 a3_435
	word64 a4_439
	word64 a3_440
	word64 a4_441
	word64 a2_438
	word64 a1_437
	word64 a0_436
	word64 s6_423
	word64 s8_429
	call __strdup (retsize: 0;)
		uses: a0_412,a0_418,a1_404,a1_413,a2_400,a2_414,a3_411,a3_416,a4_415,a4_417,a5_397,gp_398,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_406,s0_407,s1_401,s2_408,s3_409,s4_410,s5_402,s6_399,s7_396,s8_405,sp_395
		defs: a0_427,a0_436,a1_428,a1_437,a2_424,a2_438,a3_435,a3_440,a4_439,a4_441,a5_421,gp_422,ra_430,s0_431,s1_425,s2_432,s3_433,s4_434,s5_426,s6_423,s7_420,s8_429,sp_419
	word64 s0_442 = (word64) Mem394[sp_126 + 24:int32]
	Mem443[s6_423 + 32:word64] = a0_427
	Mem447[s6_423 + 184:word64] = fn0000000000016B68(s0_442)
	word64 a0_449 = fn00000000000182B4(s0_442)
	word64 a5_450 = (int64) (int32) (a0_449 >>u 0x00000018)
	branch a0_449 >= 0x0000000000000000 l0000000000017098
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017098:
	a5_453 = 0x0000000000011758
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017024:
	branch 63 >=u (int64) ((word32) a5_450 + -128) l000000000001727C
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001727C:
	a5_453 = 0x0000000000011760
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017030:
	branch 31 >=u (int64) ((word32) a5_450 + -192) l00000000000172A4
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:63 a4:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172A4:
	a5_453 = 0x0000000000011768
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001703C:
	branch 14 <u (int64) ((word32) a5_450 + -224) l00000000000172B0
// DataOut: gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172B0:
	a5_453 = 0x0000000000011778
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017048:
	a5_453 = 0x0000000000011770
// DataOut: a5 gp s0 s10 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:31 a4:14 s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170A0:
	word64 a5_540
	word64 a4_539
	Mem454[s6_423 + 192:word64] = a5_453
	word64 s2_455 = 32
	branch s5_426 == s2_455 l0000000000017158
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:<invalid> s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017158:
	Mem820[s6_423 + 168:word64] = a0_427
	Mem821[s6_423 + 176:word64] = a0_427
	a4_539 = s6_423 + 96
	a5_540 = 0x0000000000011780
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170AC:
	Mem556[sp_126 + 40:word32] = s0_442
	word64 a5_557 = 31
	branch s5_426 == a5_557 l0000000000017210
// DataOut: gp s0 s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017210:
	word64 s7_712
	word64 a5_713
	word64 gp_714
	word64 s6_715
	word64 a2_716
	word64 s1_717
	word64 s5_718
	word64 a0_719
	word64 a1_720
	word64 s8_721
	word64 ra_722
	word64 s0_723
	word64 s2_724
	word64 s3_725
	word64 s4_726
	word64 a3_727
	word64 a2_730
	word64 a4_731
	word64 a3_732
	word64 a4_733
	call inet_ntop (retsize: 0;)
		uses: a0_436,a0_710,a1_437,a1_709,a2_438,a2_708,a3_440,a3_707,a4_441,a4_452,a5_557,gp_422,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_430,s0_442,s1_425,s2_455,s3_444,s4_434,s5_426,s6_423,s7_420,s8_429,sp_419
		defs: a0_719,a0_728,a1_720,a1_729,a2_716,a2_730,a3_727,a3_732,a4_731,a4_733,a5_713,gp_714,ra_722,s0_723,s1_717,s2_724,s3_725,s4_726,s5_718,s6_715,s7_712,s8_721,sp_711
	branch a0_719 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017228:
	word64 sp_735
	word64 s7_736
	word64 a5_737
	word64 gp_738
	word64 s6_739
	word64 a2_740
	word64 s1_741
	word64 s5_742
	word64 a0_743
	word64 a1_744
	word64 s8_745
	word64 ra_746
	word64 s0_747
	word64 s2_748
	word64 s3_749
	word64 s4_750
	word64 a3_751
	word64 a0_752
	word64 a1_753
	word64 a2_754
	word64 a4_755
	word64 a3_756
	word64 a4_757
	call __strdup (retsize: 0;)
		uses: a0_728,a0_734,a1_720,a1_729,a2_716,a2_730,a3_727,a3_732,a4_731,a4_733,a5_713,gp_714,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_722,s0_723,s1_717,s2_724,s3_725,s4_726,s5_718,s6_715,s7_712,s8_721,sp_711
		defs: a0_743,a0_752,a1_744,a1_753,a2_740,a2_754,a3_751,a3_756,a4_755,a4_757,a5_737,gp_738,ra_746,s0_747,s1_741,s2_748,s3_749,s4_750,s5_742,s6_739,s7_736,s8_745,sp_735
	word64 a5_758 = (word64) Mem556[sp_735 + 16:int32]
	word64 a4_759 = (word64) Mem556[sp_735 + 24:int32]
	Mem760[s6_739 + 168:word64] = a0_743
	word64 a5_762 = a5_758 ^ -1 | a4_759
	Mem767[sp_735 + 48:word32] = a5_762
	word64 s7_769
	word64 a5_770
	word64 s6_772
	word64 a2_773
	word64 s1_774
	word64 s5_775
	word64 a0_776
	word64 a1_777
	word64 s8_778
	word64 ra_779
	word64 s0_780
	word64 s2_781
	word64 s3_782
	word64 s4_783
	word64 a3_784
	word64 a0_785
	word64 a4_788
	word64 a4_790
	call inet_ntop (retsize: 0;)
		uses: a0_752,a0_766,a1_753,a1_765,a2_754,a2_764,a3_756,a3_763,a4_757,a4_759,a5_762,gp_738,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_746,s0_747,s1_741,s2_748,s3_749,s4_750,s5_742,s6_739,s7_736,s8_745,sp_735
		defs: a0_776,a0_785,a1_777,a1_786,a2_773,a2_787,a3_784,a3_789,a4_788,a4_790,a5_770,gp_771,ra_779,s0_780,s1_774,s2_781,s3_782,s4_783,s5_775,s6_772,s7_769,s8_778,sp_768
	branch a0_776 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017260:
	word64 s7_793
	word64 a5_794
	word64 a2_797
	word64 s1_798
	word64 s5_799
	word64 a0_800
	word64 a1_801
	word64 ra_803
	word64 s0_804
	word64 s2_805
	word64 s3_806
	word64 s4_807
	word64 a3_808
	word64 a4_812
	word64 a3_813
	word64 a4_814
	call __strdup (retsize: 0;)
		uses: a0_785,a0_791,a1_777,a1_786,a2_773,a2_787,a3_784,a3_789,a4_788,a4_790,a5_770,gp_771,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_779,s0_780,s1_774,s2_781,s3_782,s4_783,s5_775,s6_772,s7_769,s8_778,sp_768
		defs: a0_800,a0_809,a1_801,a1_810,a2_797,a2_811,a3_808,a3_813,a4_812,a4_814,a5_794,gp_795,ra_803,s0_804,s1_798,s2_805,s3_806,s4_807,s5_799,s6_796,s7_793,s8_802,sp_792
	Mem816[s6_423 + 176:word64] = a0_800
	a4_539 = s6_423 + 96
	a5_540 = 0x0000000000012660
// DataOut: a4 a5 gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001716C:
	Mem553[a4_539:byte] = (word64) Mem454[a5_540:byte]
	Mem555[a4_539 + 1:byte] = (word64) Mem553[a5_540 + 1:byte]
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170B8:
	Mem587[sp_126 + 40:word32] = s0_442 | 0x0000000001000000
	word64 s7_589
	word64 a5_590
	word64 gp_591
	word64 s6_592
	word64 a2_593
	word64 s1_594
	word64 s5_595
	word64 a0_596
	word64 a1_597
	word64 s8_598
	word64 ra_599
	word64 s0_600
	word64 s2_601
	word64 s3_602
	word64 s4_603
	word64 a3_604
	word64 a2_607
	word64 a4_608
	word64 a3_609
	word64 a4_610
	call inet_ntop (retsize: 0;)
		uses: a0_436,a0_586,a1_437,a1_585,a2_438,a2_584,a3_440,a3_583,a4_441,a4_452,a5_581,gp_422,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_430,s0_582,s1_425,s2_455,s3_444,s4_434,s5_426,s6_423,s7_420,s8_429,sp_419
		defs: a0_596,a0_605,a1_597,a1_606,a2_593,a2_607,a3_604,a3_609,a4_608,a4_610,a5_590,gp_591,ra_599,s0_600,s1_594,s2_601,s3_602,s4_603,s5_595,s6_592,s7_589,s8_598,sp_588
	branch a0_596 == 0x0000000000000000 l00000000000172E8
// DataOut: gp s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:31 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172E8:
// DataOut: a0 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172C4:
	word64 a0_153 = DPB(a0_135, __fprintf_chk(a0_135, a1_132, 0x00000000000117B0, Mem0[sp_126:<unknown>]), 0)
	abort()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000170DC:
	word64 sp_612
	word64 s7_613
	word64 a5_614
	word64 gp_615
	word64 s6_616
	word64 a2_617
	word64 s1_618
	word64 s5_619
	word64 a0_620
	word64 a1_621
	word64 s8_622
	word64 ra_623
	word64 s0_624
	word64 s2_625
	word64 s3_626
	word64 s4_627
	word64 a3_628
	word64 a0_629
	word64 a1_630
	word64 a2_631
	word64 a4_632
	word64 a3_633
	word64 a4_634
	call __strdup (retsize: 0;)
		uses: a0_605,a0_611,a1_597,a1_606,a2_593,a2_607,a3_604,a3_609,a4_608,a4_610,a5_590,gp_591,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_599,s0_600,s1_594,s2_601,s3_602,s4_603,s5_595,s6_592,s7_589,s8_598,sp_588
		defs: a0_620,a0_629,a1_621,a1_630,a2_617,a2_631,a3_628,a3_633,a4_632,a4_634,a5_614,gp_615,ra_623,s0_624,s1_618,s2_625,s3_626,s4_627,s5_619,s6_616,s7_613,s8_622,sp_612
	word64 a5_635 = (word64) Mem587[sp_612 + 16:int32]
	Mem636[s6_616 + 168:word64] = a0_620
	Mem643[sp_612 + 48:word32] = fn00000000000182B4((int64) ((word32) fn00000000000182B4(a5_635 ^ -1 | (word64) Mem636[sp_612 + 24:int32]) + -1))
	word64 s7_649
	word64 a5_650
	word64 s6_652
	word64 a2_653
	word64 s1_654
	word64 s5_655
	word64 a0_656
	word64 a1_657
	word64 s8_658
	word64 ra_659
	word64 s0_660
	word64 s2_661
	word64 s3_662
	word64 s4_663
	word64 a3_664
	word64 a0_665
	word64 a4_668
	word64 a4_670
	call inet_ntop (retsize: 0;)
		uses: a0_629,a0_647,a1_630,a1_646,a2_631,a2_645,a3_633,a3_644,a4_632,a4_634,a5_638,gp_615,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_623,s0_624,s1_618,s2_625,s3_626,s4_627,s5_619,s6_616,s7_613,s8_622,sp_612
		defs: a0_656,a0_665,a1_657,a1_666,a2_653,a2_667,a3_664,a3_669,a4_668,a4_670,a5_650,gp_651,ra_659,s0_660,s1_654,s2_661,s3_662,s4_663,s5_655,s6_652,s7_649,s8_658,sp_648
	branch a0_656 == 0x0000000000000000 l0000000000017074
// DataOut: gp s10 s2 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:0x0000000001000000 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:16 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):a0 -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017074:
	branch (word64) Mem0[gp_109 + -2028:int32] != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001707C:
	word64 a0_212 = DPB(0x00000000000117F8, fwrite(0x00000000000117F8, a1_179, a2_180, a3_182), 0)
	sp_126 = sp_126 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017120:
	word64 sp_672
	word64 s7_673
	word64 a5_674
	word64 a2_677
	word64 s1_678
	word64 s5_679
	word64 a0_680
	word64 a1_681
	word64 ra_683
	word64 s0_684
	word64 s2_685
	word64 s3_686
	word64 s4_687
	word64 a3_688
	word64 a0_689
	word64 a4_692
	word64 a3_693
	word64 a4_694
	call __strdup (retsize: 0;)
		uses: a0_665,a0_671,a1_657,a1_666,a2_653,a2_667,a3_664,a3_669,a4_668,a4_670,a5_650,gp_651,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_659,s0_660,s1_654,s2_661,s3_662,s4_663,s5_655,s6_652,s7_649,s8_658,sp_648
		defs: a0_680,a0_689,a1_681,a1_690,a2_677,a2_691,a3_688,a3_693,a4_692,a4_694,a5_674,gp_675,ra_683,s0_684,s1_678,s2_685,s3_686,s4_687,s5_679,s6_676,s7_673,s8_682,sp_672
	Mem700[s6_423 + 176:word64] = a0_680
	a0_436 = DPB(a0_689, __snprintf_chk(a0_689, a1_437, a2_438, a3_693, 0x0000000000011828, Mem700[sp_672:<unknown>]), 0)
	sp_126 = sp_672 + 0xFFFFFFFFFFFFFFF8
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:2 a1:<invalid> s8:a3 a3:47 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001717C:
	branch s8_429 << 0x00000011 < 0x0000000000000000 l0000000000017288
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017288:
	fn0000000000017B40(gp_109, (word64) Mem454[sp_126 + 8:int32], s6_423 + 64, s6_423 + 72, s6_423 + 80, s6_423 + 88)
// DataOut: gp s10 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:a3 << 0x00000011 s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 s4:<invalid> t1:<invalid> t3:32 a6:<invalid> ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017184:
	word64 s8_484 = s8_429 & 1
	branch s8_484 != 0x0000000000000000 l00000000000171C8
// DataOut: gp s10 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 t1:<invalid> fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t3:32 ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171C8:
	word64 a0_489 = fn00000000000168E4(gp_109, 2, sp_126 + 8)
	Mem490[s6_423 + 56:word64] = a0_489
	branch a0_489 != 0x0000000000000000 l000000000001718C
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 t1:<invalid> fa4:<invalid> fa5:<invalid> a6:<invalid> fa3:<invalid> s4:<invalid> t3:32 ra:<invalid> a7:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171DC:
	word64 a5_491 = (word64) Mem490[gp_109 + -2028:int32]
	branch a5_491 != 0x0000000000000000 l0000000000016E20
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:1025 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000171E4:
	word64 a0_498 = DPB(a0_436, __sprintf_chk(a0_436, a1_437, a2_438, 0x0000000000011830, Mem490[sp_126:<unknown>]), 0)
	word64 s7_502
	word64 a5_503
	word64 s6_505
	word64 a2_506
	word64 s1_507
	word64 s5_508
	word64 a0_509
	word64 a1_510
	word64 s8_511
	word64 ra_512
	word64 s0_513
	word64 s2_514
	word64 s3_515
	word64 s4_516
	word64 a3_517
	word64 a0_518
	word64 a1_519
	word64 a2_520
	word64 a4_521
	word64 a3_522
	word64 a4_523
	call herror (retsize: 0;)
		uses: a0_498,a0_500,a1_459,a1_496,a2_458,a2_495,a3_457,a3_494,a4_456,a4_493,a5_491,gp_460,qwLoc0198_155,qwLoc08_26,qwLoc10_28,qwLoc18_13,qwLoc20_30,qwLoc28_32,qwLoc30_34,qwLoc38_15,qwLoc40_9,qwLoc48_4,qwLoc50_24,qwLoc58_37,ra_467,s0_468,s1_469,s2_470,s3_471,s4_472,s5_473,s6_474,s7_475,s8_484,sp_499
		defs: a0_509,a0_518,a1_510,a1_519,a2_506,a2_520,a3_517,a3_522,a4_521,a4_523,a5_503,gp_504,ra_512,s0_513,s1_507,s2_514,s3_515,s4_516,s5_508,s6_505,s7_502,s8_511,sp_501
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:1025 a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001718C:
	a0_127 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:a3 & 1 a3:<invalid> a4:<invalid> s0:<invalid> s3:<invalid> s2:32 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> s4:<invalid> ra:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E18:
	branch (word64) Mem857[gp_109 + -2028:int32] == 0x0000000000000000 l0000000000017054
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:32 s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017054:
	word64 a0_876 = DPB(a0_135, __fprintf_chk(a0_135, a1_132, 0x00000000000117D8, Mem857[sp_126:<unknown>]), 0)
	sp_126 = sp_126 + 0xFFFFFFFFFFFFFFF8
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:a2 s1:<invalid> a2:<invalid> s5:a1 a0:<invalid> a1:<invalid> s8:a3 s0:<invalid> s2:<invalid> s4:0x0000000000011000 s3:1 a3:<invalid> -416(fp):<invalid> -408(fp):a0 -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E20:
	a0_127 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> t1:<invalid> t3:<invalid> a6:<invalid> ra:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E24:
	branch Mem0[sp_126 + 360:word64] != Mem0[gp_109 + -1936:word64] l00000000000172D8
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000172D8:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000016E30:
	return a0_127
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s6:<invalid> s1:<invalid> a2:<invalid> s5:<invalid> a0:<invalid> a1:<invalid> s8:<invalid> a3:<invalid> a4:<invalid> s0:<invalid> s2:<invalid> s4:<invalid> s3:<invalid> a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> ra:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000016D74_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s6:s6 s1:s1 a2:<invalid> s5:s5 a0:<invalid> a1:<invalid> s8:s8 a3:<invalid> a4:<invalid> ra:ra s0:s0 s2:s2 s3:s3 s4:s4 s7:s7 a7:<invalid> t5:<invalid> t4:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -440(fp):<invalid> -432(fp):<invalid> -424(fp):<invalid> -416(fp):<invalid> -408(fp):<invalid> -400(fp):0x0000000000000000 -392(fp):0x0000000000000000 -384(fp):0x0000000000000000 -376(fp):0x0000000000000000 -368(fp):0x0000000000000000 -360(fp):0x0000000000000000 -356(fp):0x0000000000000000 -354(fp):0x0000000000000000 -304(fp):<invalid> -303(fp):<invalid> -88(fp):<invalid> -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn000000000001730C(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra s0 s1 sp
fn000000000001730C_entry:
// DataOut: a0 a1 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001730C:
	word64 a0_103
	word64 sp_2 = fp + -192
	branch 128 <u a0 l00000000000173BC
// DataOut: a0 a1 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l000000000001732C:
	word64 a5_66 = fp + -184
	word64 a4_67 = (int64) (8 - a0)
	word64 a3_68 = 7
	word64 a2_69 = -1
	word64 a1_70 = 255
	a4_113 = a4_67
	a5_114 = a5_66
	branch a0 == 0x0000000000000000 l000000000001736C
// DataOut: a0 a1 a2 a3 a4 a5 gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:128 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017354:
	word64 a4_113
	word64 a5_114
	branch a3_68 >= a0 l00000000000173C4
// DataOut: a0 a1 a2 a3 a4 a5 gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000173C4:
	Mem121[a5_114:byte] = (int64) (int32) (a1_70 << a4_113)
// DataOut: a0 a1 a2 a3 a4 a5 gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017358:
	Mem119[a5_114:byte] = a2_69
// DataOut: a0 a1 a2 a3 a4 a5 gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l000000000001735C:
	a0 = (int64) ((word32) a0 + -8)
	a5_114 = a5_114 + 1
	a4_113 = (int64) ((word32) a4_113 + 8)
	branch 0x0000000000000000 < a0 l0000000000017354
// DataOut: a0 a1 a2 a3 a4 a5 gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l000000000001736C:
	word64 s0_76
	word64 a4_77
	word64 ra_79
	word64 s1_80
	word64 a5_81
	word64 a0_82
	word64 a1_83
	word64 a3_84
	word64 a2_85
	word64 a0_86
	word64 a1_87
	word64 a2_88
	word64 a6_89
	call inet_ntop (retsize: 0; depth: 192)
		uses: a0,a0_74,a1,a1_73,a2,a2_72,a3_71,a4_67,a5_66,a6,gp,qwLoc08_9,qwLoc10_4,qwLoc18_11,qwLoc28_13,qwLocB0_64,qwLocB8_63,ra,s0,s1_65,sp_2
		defs: a0_82,a0_86,a1_83,a1_87,a2_85,a2_88,a3_84,a4_77,a5_81,a6_89,gp_78,ra_79,s0_76,s1_80,sp_75
	branch a0_82 == 0x0000000000000000 l00000000000173BC
// DataOut: gp s1 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:7 a2:-1 a1:255 a6:<invalid> a0:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000173BC:
	a0_103 = 0
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:10 a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017384:
	word64 a0_93 = memcpy(a0_86, fp + -184, a2_88)
	word64 s0_97
	word64 a4_98
	word64 ra_100
	word64 s1_101
	word64 a5_102
	word64 a1_104
	word64 a3_105
	word64 a2_106
	word64 a0_107
	word64 a1_108
	word64 a2_109
	word64 a6_110
	call __strdup (retsize: 0; depth: 200)
		uses: a0_93,a0_95,a1_87,a1_91,a2_88,a2_90,a3_84,a4_77,a5_81,a6_89,gp_78,qwLoc08_9,qwLoc10_4,qwLoc18_11,qwLoc28_13,qwLocB0_64,qwLocB8_63,ra_79,s0_76,s1_80,sp_94
		defs: a0_103,a0_107,a1_104,a1_108,a2_106,a2_109,a3_105,a4_98,a5_102,a6_110,gp_99,ra_100,s0_97,s1_101,sp_96
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -192 a4:<invalid> a5:<invalid> s1:a1 a3:128 a2:fp + -168 a1:fp + -184 a0:10 a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001739C:
	branch Mem0[sp_2 + 152:word64] != Mem0[gp + -1936:word64] l00000000000173D0
// DataOut: a0 gp s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173D0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000173A8:
	return a0_103
// DataOut: a0 gp s10 s3 s7
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a4:<invalid> a5:<invalid> a0:<invalid> s1:a1 a3:128 a2:<invalid> a1:fp + -184 a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra

fn000000000001730C_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a4:<invalid> a5:<invalid> a0:<invalid> ra:ra s0:s0 s1:s1 a3:128 a2:<invalid> a1:fp + -184 a6:<invalid> -184(fp):<invalid> -176(fp):0x0000000000000000 -40(fp):<invalid> -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000173D4(word64 a0, word64 a1, ptr64 & s0Out, ptr64 & a0Out, ptr64 & s2Out, ptr64 & s3Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1
// LiveOut: a0 s0 s2 s3 sp
// Trashed: a0 a1 a2 a3 a4 a5 ra s0 s1 s2 s3 sp
// Preserved:
fn00000000000173D4_entry:
// DataOut: a0 a1 gp s1 s10 s3 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0030(64)

l00000000000173D4:
	word64 sp_101 = fp + -48
	word64 s2_17 = (word64) Mem0[a0:byte]
	word64 s3_18 = (word64) Mem0[a0 + 1:byte]
	branch a1 == 128 l00000000000174DC
// DataOut: a0 a1 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0018(64) Local -0028(64) Local -0030(64)

l00000000000174DC:
	word64 a0_137 = DPB(a0, memcmp(a0, 0x0000000000010880, a2), 0)
	branch a0 == 0x0000000000000000 l0000000000017538
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64) Local -0028(64) Local -0030(64)

l0000000000017538:
	word64 a0_148
	*a0Out = 0x0000000000011858
	word64 s0_149
	*s0Out = s1
	word64 s2_151
	*s2Out = s3
	word64 s3_153
	*s3Out = qwLoc30
	return fp + 0xFFFFFFFFFFFFFFF8
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC8 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010880 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174F4:
	a0 = DPB(a0, memcmp(a0_137, 0x0000000000010898, a2), 0)
	sp_101 = fp + 0xFFFFFFFFFFFFFFC0
	branch a0 != 0x0000000000000000 l000000000001747C
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC8 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010880 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017508:
	word64 a0_145
	*a0Out = 0x0000000000011870
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFC0 a5:128 s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017400:
	branch 95 < a1 l0000000000017474
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:128 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017474:
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -48 a5:95 s0:a0 s2:<invalid> s3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001747C:
	word64 a0_90 = DPB(a0, memcmp(a0, 0x00000000000108B0, a2), 0)
	word64 sp_91 = sp_101 + 0xFFFFFFFFFFFFFFF8
	branch a0 == 0x0000000000000000 l000000000001755C
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:16 a1:0x0000000000010898 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001755C:
	word64 a0_122
	*a0Out = 0x0000000000011888
	word64 s0_123
	*s0Out = Mem0[sp_91 + 32:word64]
	word64 s2_125
	*s2Out = Mem0[sp_91 + 16:word64]
	word64 s3_126
	*s3Out = Mem0[sp_91 + 8:word64]
	return sp_91 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017490:
	word64 a0_95 = DPB(a0, memcmp(a0_90, 0x00000000000108C0, a2), 0)
	branch a0 == 0x0000000000000000 l0000000000017514
// DataOut: gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108B0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017514:
	word64 a0_114
	*a0Out = 0x00000000000118A0
	word64 s0_115
	*s0Out = Mem0[sp_91 + 0x0000000000000018:word64]
	word64 s2_117
	*s2Out = Mem0[sp_91 + 0x0000000000000008:word64]
	word64 s3_118
	*s3Out = Mem0[sp_91:word64]
	return sp_91 + 0x0000000000000028
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174A4:
	word64 a0_100 = DPB(a0, memcmp(a0_95, 0x00000000000108D0, a2), 0)
	sp_101 = sp_91 + 0xFFFFFFFFFFFFFFF0
	branch a0 != 0x0000000000000000 l0000000000017408
// DataOut: gp s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108C0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000174B8:
	word64 a0_104
	*a0Out = 0x00000000000118B8
	word64 s0_105
	*s0Out = Mem0[sp_91 + 0x0000000000000010:word64]
	word64 s2_107
	*s2Out = Mem0[sp_91:word64]
	word64 s3_108
	*s3Out = Mem0[sp_91 + 0xFFFFFFFFFFFFFFF8:word64]
	return sp_91 + 0x0000000000000020
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017408:
	word64 a5_58 = s2_17 << 0x00000008 | s3_18
	branch (a5_58 & 0x00000000FFFFE000) == 0x0000000000002000 l0000000000017580
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017580:
	word64 a0_81
	*a0Out = 0x00000000000118D8
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017420:
	branch (s2_17 & 254) == 252 l000000000001758C
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 s1:0x0000000000010480 a2:12 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001758C:
	word64 a0_79
	*a0Out = 0x00000000000118E8
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:252 s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001742C:
	branch (a5_58 & -64) == 65152 l0000000000017598
// DataOut: a5 gp s10 s2 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:252 s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017598:
	word64 a0_77
	*a0Out = 0x0000000000011900
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001743C:
	branch s2_17 == 255 l00000000000175A4
// DataOut: a5 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000175A4:
	word64 a0_75
	*a0Out = 0x0000000000011748
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017444:
	word64 a0_71
	*a0Out = 0x0000000000011710
	branch (a5_58 & -2) == 8194 l00000000000175B0
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:0x0000000000002000 a2:<invalid> s1:0x0000000000010480 a1:0x00000000000108D0 a0:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000175B0:
	word64 a0_73
	*a0Out = 0x0000000000011918
// DataOut: a0 gp s10 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:255 a3:<invalid> a2:<invalid> a0:0x0000000000011710 s1:0x0000000000010480 a1:0x00000000000108D0 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017458:
	word64 s0_46
	*s0Out = Mem0[sp_101 + 32:word64]
	word64 s2_48
	*s2Out = Mem0[sp_101 + 16:word64]
	word64 s3_49
	*s3Out = Mem0[sp_101 + 8:word64]
	return sp_101 + 48
// DataOut: a0 gp s0 s10 s2 s3 s5 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:a0 s2:<invalid> s3:<invalid> a4:<invalid> a3:<invalid> a0:<invalid> s1:0x0000000000010480 a2:<invalid> a1:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000173D4_exit:
// DataOut: a0 s0 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s2:<invalid> s3:<invalid> s1:<invalid> a2:<invalid> a1:<invalid> a0:<invalid> ra:<invalid> a4:<invalid> a3:<invalid> -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn00000000000175BC(word64 gp, word64 a2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a2 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 fa3 fa4 fa5 t1 t3 t4 t5 t6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn00000000000175BC_entry:
// DataOut: a2 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01A8(0)

l00000000000175BC:
	word64 a0_128
	word64 a0_43 = memset(a0, a1, a2)
	word64 s1_49
	word64 a5_50
	word64 s0_52
	word64 a2_53
	word64 s2_54
	word64 s4_55
	word64 a0_56
	word64 a1_57
	word64 s6_58
	word64 ra_59
	word64 s3_60
	word64 s5_61
	word64 s7_62
	word64 s8_63
	word64 s9_64
	word64 a3_65
	word64 a0_66
	word64 a1_67
	word64 a2_68
	word64 a4_69
	word64 a3_70
	word64 gp_113
	word64 sp_127
	call inet_pton (retsize: 0; depth: 424)
		uses: a0_43,a0_47,a1,a1_46,a2,a2_45,a3,a5_7,gp,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra,s0_11,s1,s2_20,s3,s4_18,s5,s6_38,s7,s8,s9,sp_44
		defs: a0_56,a0_66,a1_57,a1_67,a2_53,a2_68,a3_65,a3_70,a4_69,a5_50,gp_51,ra_59,s0_52,s1_49,s2_54,s3_60,s4_55,s5_61,s6_58,s7_62,s8_63,s9_64,sp_48
	branch 0x0000000000000000 >= a0_56 l00000000000177B4
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -01A8(0)

l00000000000177B4:
	branch (word64) Mem0[gp_113 + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE58 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:10 a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -01A8(0)

l00000000000177BC:
	word64 a0_549 = DPB(a0_66, __fprintf_chk(a0_66, a1_67, 0x0000000000011920, tLoc01A8), 0)
	sp_127 = fp + 0xFFFFFFFFFFFFFE50
	a0_128 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE58 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:10 a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017628:
	word64 s0_130
	word64 a0_131
	word64 s2_132
	word64 s5_133
	word64 s6_134
	word64 s8_135
	word64 s9_136
	word64 sp_137 = fn00000000000163B0(gp_113, fp + 0xFFFFFFFFFFFFFE60, out s0_130, out a0_131, out s2_132, out s5_133, out s6_134, out s8_135, out s9_136)
	Mem139[s0_130 + 8:word64] = a0_131
	word64 s1_145
	word64 a5_146
	word64 s0_148
	word64 a2_149
	word64 s2_150
	word64 s4_151
	word64 a0_152
	word64 a1_153
	word64 s6_154
	word64 ra_155
	word64 s3_156
	word64 s5_157
	word64 s7_158
	word64 s8_159
	word64 s9_160
	word64 a3_161
	word64 a0_162
	word64 a4_165
	word64 a3_166
	word64 a2_164
	word64 a1_163
	call inet_ntop (retsize: 0;)
		uses: a0_143,a0_66,a1_142,a1_67,a2_141,a2_68,a3_140,a3_70,a4_69,a5_50,gp_51,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_59,s0_130,s1_49,s2_132,s3_138,s4_55,s5_133,s6_134,s7_62,s8_135,s9_136,sp_137
		defs: a0_152,a0_162,a1_153,a1_163,a2_149,a2_164,a3_161,a3_166,a4_165,a5_146,gp_147,ra_155,s0_148,s1_145,s2_150,s3_156,s4_151,s5_157,s6_154,s7_158,s8_159,s9_160,sp_144
	branch a0_152 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFE58 a5:<invalid> s0:a2 a2:fp + 0xFFFFFFFFFFFFFE60 s4:a0 s2:a1 a0:10 a1:a0 s6:a3 -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017650:
	word64 s1_200
	word64 a5_201
	word64 s0_203
	word64 a2_204
	word64 s2_205
	word64 s4_206
	word64 a0_207
	word64 a1_208
	word64 s6_209
	word64 ra_210
	word64 s3_211
	word64 s5_212
	word64 s7_213
	word64 s8_214
	word64 s9_215
	word64 a3_216
	word64 a0_217
	word64 a1_218
	word64 a2_219
	word64 a4_220
	word64 a3_221
	call __strdup (retsize: 0;)
		uses: a0_162,a0_198,a1_153,a1_163,a2_149,a2_164,a3_161,a3_166,a4_165,a5_146,gp_147,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_155,s0_148,s1_145,s2_150,s3_156,s4_151,s5_157,s6_154,s7_158,s8_159,s9_160,sp_144
		defs: a0_207,a0_217,a1_208,a1_218,a2_204,a2_219,a3_216,a3_221,a4_220,a5_201,gp_202,ra_210,s0_203,s1_200,s2_205,s3_211,s4_206,s5_212,s6_209,s7_213,s8_214,s9_215,sp_199
	Mem222[s0_203:word64] = a0_207
	word64 s5_223 = 128
	branch s5_223 < s2_205 l00000000000177DC
// DataOut: gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177DC:
	branch (word64) Mem222[gp_113 + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000177E4:
	word64 a0_539 = DPB(a0_217, __fprintf_chk(a0_217, a1_218, 0x0000000000011940, Mem222[sp_127:<unknown>]), 0)
	sp_127 = sp_127 + 0xFFFFFFFFFFFFFFF8
	a0_128 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017664:
	branch s2_205 < 0x0000000000000000 l0000000000017868
// DataOut: gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017868:
// DataOut: gp s0 s10 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017668:
	s5_223 = s2_205
// DataOut: gp s0 s10 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:128 a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001766C:
	Mem227[s0_203 + 160:word32] = s5_223
	word64 a0_230 = fn000000000001730C(gp_113, s5_223, sp_127 + 24)
	Mem231[s0_203 + 48:word64] = a0_230
	branch a0_230 == 0x0000000000000000 l00000000000178F8
// DataOut: gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178F8:
	branch (word64) Mem231[gp_113 + -2028:int32] != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017900:
	word64 a0_528 = DPB(a0_217, __fprintf_chk(a0_217, a1_218, 0x0000000000011960, Mem231[sp_127:<unknown>]), 0)
	sp_127 = sp_127 + 0xFFFFFFFFFFFFFFF8
	a0_128 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017688:
	word64 a5_233 = sp_127 + 8
	word64 a2_235 = sp_127 + 40
	word64 a3_236 = sp_127 + 24
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001769C:
	word64 a4_244 = (word64) Mem231[a5_233:byte] & (word64) Mem231[a3_236:byte]
	Mem245[a2_235:byte] = a4_244
	a5_233 = a5_233 + 1
	a3_236 = a3_236 + 1
	a2_235 = a2_235 + 1
	branch sp_127 + 24 != a5_233 l000000000001769C
// DataOut: a2 a3 a5 gp s0 s10 s3 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> a6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176BC:
	word64 s1_252
	word64 a5_253
	word64 s0_255
	word64 a2_256
	word64 s2_257
	word64 s4_258
	word64 a0_259
	word64 a1_260
	word64 s6_261
	word64 ra_262
	word64 s3_263
	word64 s5_264
	word64 s7_265
	word64 s8_266
	word64 s9_267
	word64 a3_268
	word64 a0_269
	word64 a4_272
	call inet_ntop (retsize: 0;)
		uses: a0_217,a0_250,a1_218,a1_249,a2_219,a2_248,a3_221,a3_247,a4_244,a5_242,gp_202,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_210,s0_203,s1_200,s2_224,s3_211,s4_206,s5_225,s6_209,s7_226,s8_232,s9_234,sp_199
		defs: a0_259,a0_269,a1_260,a1_270,a2_256,a2_271,a3_268,a3_273,a4_272,a5_253,gp_254,ra_262,s0_255,s1_252,s2_257,s3_263,s4_258,s5_264,s6_261,s7_265,s8_266,s9_267,sp_251
	branch a0_259 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> a6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000176D4:
	word64 sp_275
	word64 s1_276
	word64 a5_277
	word64 gp_278
	word64 s0_279
	word64 a2_280
	word64 s2_281
	word64 s4_282
	word64 a0_283
	word64 a1_284
	word64 s6_285
	word64 ra_286
	word64 s3_287
	word64 s5_288
	word64 s7_289
	word64 s8_290
	word64 s9_291
	word64 a3_292
	word64 a0_293
	word64 a1_294
	word64 a2_295
	word64 a4_296
	word64 a3_297
	call __strdup (retsize: 0;)
		uses: a0_269,a0_274,a1_260,a1_270,a2_256,a2_271,a3_268,a3_273,a4_272,a5_253,gp_254,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_262,s0_255,s1_252,s2_257,s3_263,s4_258,s5_264,s6_261,s7_265,s8_266,s9_267,sp_251
		defs: a0_283,a0_293,a1_284,a1_294,a2_280,a2_295,a3_292,a3_297,a4_296,a5_277,gp_278,ra_286,s0_279,s1_276,s2_281,s3_287,s4_282,s5_288,s6_285,s7_289,s8_290,s9_291,sp_275
	Mem298[s0_279 + 32:word64] = a0_283
	word64 s0_300
	word64 a0_301
	word64 s2_302
	word64 s5_303
	word64 s6_304
	word64 s8_305
	word64 s9_306
	word64 sp_307 = fn00000000000163B0(gp_278, sp_275 + 40, out s0_300, out a0_301, out s2_302, out s5_303, out s6_304, out s8_305, out s9_306)
	Mem308[s0_300 + 16:word64] = a0_301
	word64 s0_311
	word64 a0_312
	word64 s2_313
	word64 s3_314
	word64 sp_315 = fn00000000000173D4(sp_307 + 40, s2_302, out s0_311, out a0_312, out s2_313, out s3_314)
	Mem316[s0_311 + 184:word64] = a0_312
	word64 a0_319 = fn0000000000018118(gp_278, sp_315 + 40, s5_303)
	Mem320[s0_311 + 24:word64] = a0_319
	word64 a5_321 = 128
	branch s2_313 != a5_321 l0000000000017870
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> a6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017870:
	word64 sp_432
	word64 s1_433
	word64 a5_434
	word64 gp_435
	word64 s0_436
	word64 a2_437
	word64 s2_438
	word64 s4_439
	word64 a0_440
	word64 a1_441
	word64 s6_442
	word64 ra_443
	word64 s3_444
	word64 s5_445
	word64 s7_446
	word64 a3_449
	word64 a0_450
	word64 a1_451
	word64 a2_452
	word64 a4_453
	word64 a3_454
	word64 s8_447
	word64 s9_448
	call __strdup (retsize: 0;)
		uses: a0_293,a0_431,a1_294,a1_317,a2_280,a2_295,a3_292,a3_297,a4_296,a5_321,gp_278,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_286,s0_311,s1_276,s2_313,s3_314,s4_282,s5_303,s6_304,s7_289,s8_305,s9_306,sp_315
		defs: a0_440,a0_450,a1_441,a1_451,a2_437,a2_452,a3_449,a3_454,a4_453,a5_434,gp_435,ra_443,s0_436,s1_433,s2_438,s3_444,s4_439,s5_445,s6_442,s7_446,s8_447,s9_448,sp_432
	Mem455[s0_436 + 168:word64] = a0_440
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001787C:
	word64 a4_459 = (word64) Mem455[s8_447:byte]
	s8_447 = s8_447 + 1
	word64 a5_462 = (word64) Mem455[s9_448:byte] ^ -1 | a4_459
	Mem463[s8_447 + 4095:byte] = a5_462
	s9_448 = s9_448 + 1
	branch s3_444 != s8_447 l000000000001787C
// DataOut: gp s0 s10 s2 s3 s6 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001789C:
	word64 s1_470
	word64 a5_471
	word64 s0_473
	word64 a2_474
	word64 s2_475
	word64 s4_476
	word64 a0_477
	word64 a1_478
	word64 s6_479
	word64 ra_480
	word64 s3_481
	word64 s5_482
	word64 s7_483
	word64 s8_484
	word64 s9_485
	word64 a3_486
	word64 a0_487
	word64 a4_490
	call inet_ntop (retsize: 0;)
		uses: a0_450,a0_468,a1_451,a1_467,a2_452,a2_466,a3_454,a3_465,a4_459,a5_462,gp_435,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_443,s0_436,s1_433,s2_438,s3_444,s4_439,s5_445,s6_442,s7_446,s8_460,s9_464,sp_432
		defs: a0_477,a0_487,a1_478,a1_488,a2_474,a2_489,a3_486,a3_491,a4_490,a5_471,gp_472,ra_480,s0_473,s1_470,s2_475,s3_481,s4_476,s5_482,s6_479,s7_483,s8_484,s9_485,sp_469
	branch a0_477 == 0x0000000000000000 l0000000000017768
// DataOut: gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017768:
	branch (word64) Mem139[gp_113 + -2028:int32] == 0x0000000000000000 l0000000000017804
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:9 a7:46 t3:-1 t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017804:
	word64 a0_195 = DPB(0x00000000000117F8, fwrite(0x00000000000117F8, a1_163, a2_164, a3_166), 0)
	sp_127 = sp_127 + 0xFFFFFFFFFFFFFFF8
	a0_128 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 a4:<invalid> s1:<invalid> s5:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:9 a7:46 t3:-1 t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178B4:
	word64 sp_493
	word64 s1_494
	word64 a5_495
	word64 gp_496
	word64 s0_497
	word64 a2_498
	word64 s2_499
	word64 s4_500
	word64 a0_501
	word64 a1_502
	word64 s6_503
	word64 ra_504
	word64 s3_505
	word64 s5_506
	word64 s7_507
	word64 s8_508
	word64 s9_509
	word64 a3_510
	word64 a0_511
	word64 a1_512
	word64 a2_513
	word64 a4_514
	word64 a3_515
	call __strdup (retsize: 0;)
		uses: a0_487,a0_492,a1_478,a1_488,a2_474,a2_489,a3_486,a3_491,a4_490,a5_471,gp_472,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_480,s0_473,s1_470,s2_475,s3_481,s4_476,s5_482,s6_479,s7_483,s8_484,s9_485,sp_469
		defs: a0_501,a0_511,a1_502,a1_512,a2_498,a2_513,a3_510,a3_515,a4_514,a5_495,gp_496,ra_504,s0_497,s1_494,s2_499,s3_505,s4_500,s5_506,s6_503,s7_507,s8_508,s9_509,sp_493
	Mem517[s0_497 + 176:word64] = a0_501
	word64 a5_516 = 128
	branch (int64) (a5_516 - s2_499) != a5_516 l0000000000017728
// DataOut: gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:10 a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178D0:
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:250 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017714:
	word64 a5_426 = Mem320[s0_311 + 32:word64]
	Mem429[s0_311 + 168:word64] = a5_426
	Mem430[s0_311 + 176:word64] = a5_426
// DataOut: gp s0 s10 s2 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:128 s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017728:
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017740:
	word64 s1_326
	word64 a5_327
	word64 s0_329
	word64 a2_330
	word64 s2_331
	word64 s4_332
	word64 a0_333
	word64 a1_334
	word64 s6_335
	word64 ra_336
	word64 s3_337
	word64 s5_338
	word64 s7_339
	word64 s8_340
	word64 s9_341
	word64 a3_342
	word64 a0_343
	word64 a1_344
	word64 a2_345
	word64 a4_346
	word64 a3_347
	call snprintf (retsize: 0;)
		uses: a0_293,a0_319,a1_294,a1_324,a2_295,a2_323,a3_292,a3_297,a4_296,a5_321,gp_278,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_286,s0_311,s1_276,s2_313,s3_314,s4_282,s5_303,s6_304,s7_289,s8_305,s9_306,sp_315
		defs: a0_333,a0_343,a1_334,a1_344,a2_330,a2_345,a3_342,a3_347,a4_346,a5_327,gp_328,ra_336,s0_329,s1_326,s2_331,s3_337,s4_332,s5_338,s6_335,s7_339,s8_340,s9_341,sp_325
	branch s6_335 << 0x00000011 < 0x0000000000000000 l00000000000178DC
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000178DC:
	fn0000000000017D10(gp_113, sp_127 + 8, s0_329 + 64, s0_329 + 72, s0_329 + 80, s0_329 + 88)
// DataOut: gp s0 s10 s3 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:0x0000000000011990 s4:<invalid> s2:<invalid> a0:<invalid> a1:64 s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> t1:9 a7:46 t3:-1 a6:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017758:
	branch (s6_335 & 1) != 0x0000000000000000 l0000000000017824
// DataOut: gp s0 s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> a7:46 t3:-1 t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017824:
	word64 a0_359 = fn00000000000168E4(gp_113, 10, sp_127 + 8)
	Mem360[s0_329 + 56:word64] = a0_359
	branch a0_359 != 0x0000000000000000 l0000000000017760
// DataOut: gp s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> a7:46 t3:-1 t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017838:
	word64 a5_361 = (word64) Mem360[gp_113 + -2028:int32]
	branch a5_361 != 0x0000000000000000 l0000000000017770
// DataOut: gp s10 s3 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:1025 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017840:
	word64 a0_368 = DPB(a0_343, __sprintf_chk(a0_343, a1_344, a2_345, 0x0000000000011830, Mem360[sp_127:<unknown>]), 0)
	word64 s1_372
	word64 a5_373
	word64 s0_375
	word64 a2_376
	word64 s2_377
	word64 s4_378
	word64 a0_379
	word64 a1_380
	word64 s6_381
	word64 ra_382
	word64 s3_383
	word64 s5_384
	word64 s7_385
	word64 s8_386
	word64 s9_387
	word64 a3_388
	word64 a0_389
	word64 a1_390
	word64 a2_391
	word64 a4_392
	word64 a3_393
	call herror (retsize: 0;)
		uses: a0_368,a0_370,a1_344,a1_366,a2_345,a2_365,a3_347,a3_364,a4_363,a5_361,gp_328,qwLoc08_26,qwLoc10_9,qwLoc18_4,qwLoc20_13,qwLoc28_28,qwLoc30_15,qwLoc38_30,qwLoc40_24,qwLoc48_32,qwLoc50_34,qwLoc58_36,qwLoc68_39,ra_336,s0_329,s1_326,s2_331,s3_337,s4_332,s5_338,s6_354,s7_339,s8_340,s9_341,sp_369
		defs: a0_379,a0_389,a1_380,a1_390,a2_376,a2_391,a3_388,a3_393,a4_392,a5_373,gp_374,ra_382,s0_375,s1_372,s2_377,s3_383,s4_378,s5_384,s6_381,s7_385,s8_386,s9_387,sp_371
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:1025 s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:0 fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017770:
	a0_128 = -1
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017760:
	a0_128 = 0
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> s3:<invalid> a3:<invalid> s5:<invalid> s7:<invalid> a4:<invalid> s8:<invalid> s9:<invalid> s1:<invalid> ra:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> a6:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017774:
	branch Mem0[sp_127 + 312:word64] != Mem0[gp_113 + -1936:word64] l0000000000017920
// DataOut: a0 gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> s5:<invalid> a4:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017920:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017780:
	return a0_128
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a2:<invalid> s4:<invalid> s2:<invalid> a0:<invalid> a1:<invalid> s6:<invalid> a3:<invalid> s3:<invalid> a4:<invalid> s5:<invalid> s1:<invalid> s9:<invalid> s7:<invalid> ra:<invalid> s8:<invalid> a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000175BC_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 a2:<invalid> s4:s4 s2:s2 a0:<invalid> a1:<invalid> s6:s6 a3:<invalid> s3:s3 a4:<invalid> ra:ra s1:s1 s5:s5 s7:s7 s8:s8 s9:s9 a6:<invalid> t4:<invalid> t5:<invalid> a7:<invalid> t3:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> t6:<invalid> -384(fp):<invalid> -104(fp):<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017924(word64 gp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 s8 s9 sp
fn0000000000017924_entry:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0068(0)

l0000000000017924:
	word64 s0_148
	branch Mem0[gp + -2016:word64] == 0x0000000000000000 l00000000000179B8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0068(0)

l00000000000179B8:
	s0_148 = (word64) Mem0[gp + -2024:int32]
	branch s0_148 != 0x0000000000000000 l000000000001795C
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(0)

l00000000000179C0:
	word64 a0_75 = dlopen(0x0000000000012A38, a1)
	Mem77[gp + 2080:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017B14
// DataOut: a0 gp s0 s10 s3
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0068(0)

l0000000000017B14:
	s0_148 = -1
	word64 a0_168 = DPB(a0_75, __snprintf_chk(a0_75, a1, a2, a3, 0x0000000000012A58, tLoc68), 0)
	Mem170[gp + 2072:word32] = s0_148
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF98 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:<invalid> s3:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l00000000000179DC:
	word64 a0_81 = dlsym(a0_75, 0x0000000000012A78)
	Mem84[gp + 2152:word64] = 0x0000000000012A38
	word64 a0_87 = dlsym(a0_81, 0x0000000000012A90)
	Mem93[gp + 2144:word64] = 0x0000000000012A38
	word64 a0_94 = dlsym(a0_87, 0x0000000000012AA0)
	Mem100[gp + 2136:word64] = 0x0000000000012A38
	word64 a0_101 = dlsym(a0_94, 0x0000000000012AC0)
	Mem107[gp + 2120:word64] = 0x0000000000012A38
	word64 a0_108 = dlsym(a0_101, 0x0000000000012AD0)
	Mem114[gp + 2112:word64] = 0x0000000000012A38
	word64 a0_115 = dlsym(a0_108, 0x0000000000012AE8)
	Mem121[gp + 2104:word64] = 0x0000000000012A38
	word64 a0_122 = dlsym(a0_115, 0x0000000000012B00)
	Mem128[gp + 2096:word64] = 0x0000000000012A38
	word64 a0_129 = dlsym(a0_122, 0x0000000000012B18)
	Mem135[gp + 2088:word64] = 0x0000000000012A38
	dlsym(a0_129, 0x0000000000012B38)
	Mem138[gp + 2128:word64] = 0x0000000000012A38
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s4 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF98 a5:<invalid> s0:<invalid> s4:0x0000000000013000 a1:1 a0:<invalid> s3:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AAC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s5 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s6 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB4:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s7 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AB8:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s8 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ABC:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 s9 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC0:
	branch 0x0000000000012A38 == 0x0000000000000000 l0000000000017ACC
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017ACC:
	word64 a0_142 = Mem138[0x0000000000012B58:word64]
	word64 a1_143 = Mem138[0x0000000000012B60:word64]
	word64 a2_144 = Mem138[0x0000000000012B68:word64]
	word64 a3_145 = Mem138[0x0000000000012B70:word64]
	word64 a4_146 = (word64) Mem138[0x0000000000012B78:int32]
	Mem149[gp + -800:word64] = Mem138[0x0000000000012B50:word64]
	Mem150[gp + -792:word64] = a0_142
	Mem151[gp + -784:word64] = a1_143
	Mem152[gp + -776:word64] = a2_144
	Mem153[gp + -768:word64] = a3_145
	Mem154[gp + -760:word32] = a4_146
	s0_148 = -1
	Mem155[gp + 2072:word32] = s0_148
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017AC4:
	Mem156[gp + 2072:word32] = 0x0000000000000000
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFF50 a5:<invalid> s0:<invalid> s4:<invalid> a1:0x0000000000012B38 a0:<invalid> s3:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001795C:
	branch (word64) Mem0[gp + -2028:int32] != 0x0000000000000000 l000000000001796C
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l0000000000017964:
	branch (word64) Mem0[gp + -800:byte] != 0x0000000000000000 l00000000000179A8
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64)

l00000000000179A8:
	word64 a0_69 = DPB(a0, fputs(a0, a1), 0)
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -96 a5:<invalid> s0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l000000000001796C:
	s0_148 = (word64) Mem0[gp + -2024:int32]
// DataOut: gp s0 s10 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> a1:<invalid> a0:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017970:
	return s0_148
// DataOut: a0 gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s4:<invalid> a1:<invalid> a0:<invalid> s3:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> s2:<invalid> s5:<invalid> s6:<invalid> s7:<invalid> s8:<invalid> s9:<invalid> a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017924_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> s0:s0 ra:ra a0:<invalid> s1:s1 s2:s2 s3:s3 s4:s4 s5:s5 s6:s6 s7:s7 s8:s8 s9:s9 a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -88(fp):s9 -80(fp):s8 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017B40(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 a4 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017B40_entry:
// DataOut: a0 a1 a2 a3 a4 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017B40:
	branch fn0000000000017924(gp) == 0x0000000000000000 l0000000000017BB0
// DataOut: gp s0 s1 s10 s2 s3 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017BB0:
	word64 a0_90 = fn00000000000182B4(a0)
	word64 a5_92 = Mem0[gp + -1944:word64]
	word64 sp_94
	word64 s0_95
	word64 s1_96
	word64 s2_97
	word64 s3_98
	word64 s4_99
	word64 ra_100
	word64 s5_101
	word64 s6_102
	word64 s7_103
	word64 a0_104
	word64 a1_105
	word64 a2_106
	word64 a3_107
	word64 a4_108
	word64 a5_109
	word64 gp_110
	word64 fa4_111
	word64 fa5_112
	word64 t1_113
	word64 fa3_114
	word64 a0_115
	word64 a1_116
	word64 a2_117
	call a5_92 (retsize: 0; depth: 80)
		uses: a0,a0_90,a1,a1,a2,a2,a3,a4,a5_92,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra,s0_22,s1_28,s2_26,s3_24,s4_30,s5,s6,s7_93,sp_2,t1
		defs: a0_104,a0_115,a1_105,a1_116,a2_106,a2_117,a3_107,a4_108,a5_109,fa3_114,fa4_111,fa5_112,gp_110,ra_100,s0_95,s1_96,s2_97,s3_98,s4_99,s5_101,s6_102,s7_103,sp_94,t1_113
	word64 a5_118 = Mem0[gp_110 + -1952:word64]
	word64 sp_121
	word64 s0_122
	word64 s1_123
	word64 s2_124
	word64 s3_125
	word64 s4_126
	word64 ra_127
	word64 s5_128
	word64 s6_129
	word64 s7_130
	word64 a0_131
	word64 a1_132
	word64 a2_133
	word64 a3_134
	word64 a4_135
	word64 a5_136
	word64 fa4_138
	word64 fa5_139
	word64 t1_140
	word64 fa3_141
	word64 a0_142
	word64 a1_143
	word64 a2_144
	word64 gp_137
	call a5_118 (retsize: 0; depth: 80)
		uses: a0_115,a0_120,a1_116,a1_119,a2_106,a2_117,a3_107,a4_108,a5_118,fa3_114,fa4_111,fa5_112,gp_110,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_100,s0_95,s1_96,s2_97,s3_98,s4_99,s5_101,s6_102,s7_103,sp_94,t1_113
		defs: a0_131,a0_142,a1_132,a1_143,a2_133,a2_144,a3_134,a4_135,a5_136,fa3_141,fa4_138,fa5_139,gp_137,ra_127,s0_122,s1_123,s2_124,s3_125,s4_126,s5_128,s6_129,s7_130,sp_121,t1_140
	branch a0_131 == 0x0000000000000000 l0000000000017C3C
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s3:a1 s2:a2 s1:a3 s4:a4 a5:<invalid> a0:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017BDC:
	word64 a5_336 = Mem0[gp_137 + -1992:word64]
	word64 a4_337 = 1
	Mem339[a0_131 + 76:word32] = a4_337
	word64 sp_341
	word64 s0_342
	word64 s1_343
	word64 s2_344
	word64 s3_345
	word64 s4_346
	word64 ra_347
	word64 s5_348
	word64 s6_349
	word64 s7_350
	word64 a0_351
	word64 a1_352
	word64 a2_353
	word64 a3_354
	word64 a4_355
	word64 a5_356
	word64 gp_357
	word64 fa4_358
	word64 fa5_359
	word64 t1_360
	word64 fa3_361
	word64 a0_362
	word64 a1_363
	word64 a2_364
	call a5_336 (retsize: 0; depth: 80)
		uses: a0_131,a0_142,a1_143,a1_340,a2_133,a2_144,a3_134,a4_337,a5_336,fa3_141,fa4_138,fa5_139,gp_137,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_127,s0_145,s1_123,s2_124,s3_125,s4_126,s5_128,s6_129,s7_130,sp_121,t1_140,tLoc50
		defs: a0_351,a0_362,a1_352,a1_363,a2_353,a2_364,a3_354,a4_355,a5_356,fa3_361,fa4_358,fa5_359,gp_357,ra_347,s0_342,s1_343,s2_344,s3_345,s4_346,s5_348,s6_349,s7_350,sp_341,t1_360
	branch a0_351 < 0x0000000000000000 l0000000000017B84
// DataOut: gp s0 s1 s10 s2 s3 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017BFC:
	word64 a5_366 = Mem339[gp_357 + -1960:word64]
	word64 sp_369
	word64 s0_370
	word64 s1_371
	word64 s2_372
	word64 s3_373
	word64 s4_374
	word64 ra_375
	word64 s5_376
	word64 s6_377
	word64 s7_378
	word64 a0_379
	word64 a1_380
	word64 a2_381
	word64 a3_382
	word64 a4_383
	word64 a5_384
	word64 fa4_386
	word64 fa5_387
	word64 t1_388
	word64 fa3_389
	word64 a0_390
	word64 a1_391
	word64 a2_392
	word64 gp_385
	call a5_366 (retsize: 0; depth: 80)
		uses: a0_362,a0_368,a1_363,a1_367,a2_353,a2_364,a3_354,a4_355,a5_366,fa3_361,fa4_358,fa5_359,gp_357,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_347,s0_342,s1_343,s2_344,s3_345,s4_346,s5_348,s6_365,s7_350,sp_341,t1_360,tLoc50
		defs: a0_379,a0_390,a1_380,a1_391,a2_381,a2_392,a3_382,a4_383,a5_384,fa3_389,fa4_386,fa5_387,gp_385,ra_375,s0_370,s1_371,s2_372,s3_373,s4_374,s5_376,s6_377,s7_378,sp_369,t1_388
	branch a0_379 == 0x0000000000000000 l0000000000017C18
// DataOut: a0 gp s1 s10 s2 s3 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C10:
	word64 sp_474
	word64 s0_475
	word64 s1_476
	word64 s2_477
	word64 s3_478
	word64 s4_479
	word64 ra_480
	word64 s5_481
	word64 s6_482
	word64 s7_483
	word64 a0_484
	word64 a1_485
	word64 a2_486
	word64 a3_487
	word64 a4_488
	word64 a5_489
	word64 fa4_491
	word64 fa5_492
	word64 t1_493
	word64 fa3_494
	word64 a0_495
	word64 a1_496
	word64 a2_497
	call __strdup (retsize: 0; depth: 80)
		uses: a0_379,a0_390,a1_380,a1_391,a2_381,a2_392,a3_382,a4_383,a5_384,fa3_389,fa4_386,fa5_387,gp_385,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_375,s0_370,s1_371,s2_372,s3_373,s4_374,s5_376,s6_377,s7_378,sp_369,t1_388,tLoc50
		defs: a0_484,a0_495,a1_485,a1_496,a2_486,a2_497,a3_487,a4_488,a5_489,fa3_494,fa4_491,fa5_492,gp_490,ra_480,s0_475,s1_476,s2_477,s3_478,s4_479,s5_481,s6_482,s7_483,sp_474,t1_493
	Mem498[s3_478:word64] = a0_484
// DataOut: gp s1 s10 s2 s4 s6 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C18:
	word64 a5_395 = Mem339[gp_385 + -1968:word64]
	word64 sp_397
	word64 s0_398
	word64 s1_399
	word64 s2_400
	word64 s3_401
	word64 s4_402
	word64 ra_403
	word64 s5_404
	word64 s6_405
	word64 s7_406
	word64 a0_407
	word64 a1_408
	word64 a2_409
	word64 a3_410
	word64 a4_411
	word64 a5_412
	word64 fa4_414
	word64 fa5_415
	word64 t1_416
	word64 fa3_417
	word64 a0_418
	word64 a1_419
	word64 a2_420
	word64 gp_413
	call a5_395 (retsize: 0; depth: 80)
		uses: a0_390,a0_396,a1_380,a1_391,a2_381,a2_392,a3_382,a4_383,a5_395,fa3_389,fa4_386,fa5_387,gp_393,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_375,s0_370,s1_371,s2_372,s3_373,s4_374,s5_376,s6_394,s7_378,sp_369,t1_388,tLoc50
		defs: a0_407,a0_418,a1_408,a1_419,a2_409,a2_420,a3_410,a4_411,a5_412,fa3_417,fa4_414,fa5_415,gp_413,ra_403,s0_398,s1_399,s2_400,s3_401,s4_402,s5_404,s6_405,s7_406,sp_397,t1_416
	branch a0_407 == 0x0000000000000000 l0000000000017C30
// DataOut: a0 gp s1 s10 s2 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C28:
	word64 sp_449
	word64 s0_450
	word64 s1_451
	word64 s2_452
	word64 s3_453
	word64 s4_454
	word64 ra_455
	word64 s5_456
	word64 s6_457
	word64 s7_458
	word64 a0_459
	word64 a1_460
	word64 a2_461
	word64 a3_462
	word64 a4_463
	word64 a5_464
	word64 fa4_466
	word64 fa5_467
	word64 t1_468
	word64 fa3_469
	word64 a0_470
	word64 a1_471
	word64 a2_472
	call __strdup (retsize: 0; depth: 80)
		uses: a0_407,a0_418,a1_408,a1_419,a2_409,a2_420,a3_410,a4_411,a5_412,fa3_417,fa4_414,fa5_415,gp_413,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_403,s0_398,s1_399,s2_400,s3_401,s4_402,s5_404,s6_405,s7_406,sp_397,t1_416,tLoc50
		defs: a0_459,a0_470,a1_460,a1_471,a2_461,a2_472,a3_462,a4_463,a5_464,fa3_469,fa4_466,fa5_467,gp_465,ra_455,s0_450,s1_451,s2_452,s3_453,s4_454,s5_456,s6_457,s7_458,sp_449,t1_468
	Mem473[s2_452:word64] = a0_459
// DataOut: gp s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C30:
	word64 a5_423 = Mem339[gp_413 + -1976:word64]
	word64 sp_425
	word64 s0_426
	word64 s1_427
	word64 s2_428
	word64 s3_429
	word64 s4_430
	word64 ra_431
	word64 s5_432
	word64 s6_433
	word64 s7_434
	word64 a0_435
	word64 a1_436
	word64 a2_437
	word64 a3_438
	word64 a4_439
	word64 a5_440
	word64 fa4_442
	word64 fa5_443
	word64 t1_444
	word64 fa3_445
	word64 a0_446
	word64 a1_447
	word64 a2_448
	call a5_423 (retsize: 0; depth: 80)
		uses: a0_418,a0_424,a1_408,a1_419,a2_409,a2_420,a3_410,a4_411,a5_423,fa3_417,fa4_414,fa5_415,gp_421,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_403,s0_422,s1_399,s2_400,s3_401,s4_402,s5_404,s6_405,s7_406,sp_397,t1_416,tLoc50
		defs: a0_435,a0_446,a1_436,a1_447,a2_437,a2_448,a3_438,a4_439,a5_440,fa3_445,fa4_442,fa5_443,gp_441,ra_431,s0_426,s1_427,s2_428,s3_429,s4_430,s5_432,s6_433,s7_434,sp_425,t1_444
// DataOut: gp s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:1 a4:1 s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C3C:
	word64 a5_147 = Mem0[gp_137 + -1952:word64]
	word64 sp_150
	word64 s0_151
	word64 s1_152
	word64 s2_153
	word64 s3_154
	word64 s4_155
	word64 ra_156
	word64 s5_157
	word64 s6_158
	word64 s7_159
	word64 a0_160
	word64 a1_161
	word64 a2_162
	word64 a3_163
	word64 a4_164
	word64 a5_165
	word64 fa4_167
	word64 fa5_168
	word64 t1_169
	word64 fa3_170
	word64 a0_171
	word64 a1_172
	word64 a2_173
	word64 gp_166
	call a5_147 (retsize: 0; depth: 80)
		uses: a0_142,a0_149,a1_143,a1_148,a2_133,a2_144,a3_134,a4_135,a5_147,fa3_141,fa4_138,fa5_139,gp_146,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_127,s0_145,s1_123,s2_124,s3_125,s4_126,s5_128,s6_129,s7_130,sp_121,t1_140
		defs: a0_160,a0_171,a1_161,a1_172,a2_162,a2_173,a3_163,a4_164,a5_165,fa3_170,fa4_167,fa5_168,gp_166,ra_156,s0_151,s1_152,s2_153,s3_154,s4_155,s5_157,s6_158,s7_159,sp_150,t1_169
	word64 s0_174 = a0_160
	branch a0_160 == 0x0000000000000000 l0000000000017CF4
// DataOut: a0 gp s0 s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:1 s3:a1 s2:a2 s1:a3 s4:a4 a0:1 a5:<invalid> s7:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017CF4:
	word64 a5_308 = Mem0[gp_166 + -1952:word64]
	word64 sp_311
	word64 s0_312
	word64 s1_313
	word64 s2_314
	word64 s3_315
	word64 s4_316
	word64 ra_317
	word64 s5_318
	word64 s6_319
	word64 s7_320
	word64 a0_321
	word64 a1_322
	word64 a2_323
	word64 a3_324
	word64 a4_325
	word64 a5_326
	word64 fa4_328
	word64 fa5_329
	word64 t1_330
	word64 fa3_331
	word64 a0_332
	word64 a1_333
	word64 a2_334
	call a5_308 (retsize: 0; depth: 80)
		uses: a0_171,a0_310,a1_172,a1_309,a2_162,a2_173,a3_163,a4_164,a5_308,fa3_170,fa4_167,fa5_168,gp_166,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_156,s0_174,s1_152,s2_153,s3_154,s4_155,s5_157,s6_158,s7_159,sp_150,t1_169,tLoc50
		defs: a0_321,a0_332,a1_322,a1_333,a2_323,a2_334,a3_324,a4_325,a5_326,fa3_331,fa4_328,fa5_329,gp_327,ra_317,s0_312,s1_313,s2_314,s3_315,s4_316,s5_318,s6_319,s7_320,sp_311,t1_330
	s0_174 = a0_321
	branch a0_321 != 0x0000000000000000 l0000000000017C54
// DataOut: a0 gp s0 s1 s10 s4 s7 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:2 s3:a1 s2:a2 s1:a3 s4:a4 a0:2 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017D0C:
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:6 s3:a1 s2:a2 s1:a3 s4:a4 a0:6 a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C54:
	word64 a5_178 = Mem0[gp_166 + -1984:word64]
	word64 a4_179 = 1
	Mem181[s0_174 + 76:word32] = a4_179
	word64 sp_183
	word64 s0_184
	word64 s1_185
	word64 s2_186
	word64 s3_187
	word64 s4_188
	word64 ra_189
	word64 s5_190
	word64 s6_191
	word64 s7_192
	word64 a0_193
	word64 a1_194
	word64 a2_195
	word64 a3_196
	word64 a4_197
	word64 a5_198
	word64 fa4_200
	word64 fa5_201
	word64 t1_202
	word64 fa3_203
	word64 a0_204
	word64 a1_205
	word64 a2_206
	word64 gp_199
	call a5_178 (retsize: 0; depth: 80)
		uses: a0_160,a0_171,a1_172,a1_182,a2_162,a2_173,a3_163,a4_179,a5_178,fa3_170,fa4_167,fa5_168,gp_175,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_156,s0_176,s1_152,s2_153,s3_154,s4_155,s5_157,s6_158,s7_177,sp_150,t1_169
		defs: a0_193,a0_204,a1_194,a1_205,a2_195,a2_206,a3_196,a4_197,a5_198,fa3_203,fa4_200,fa5_201,gp_199,ra_189,s0_184,s1_185,s2_186,s3_187,s4_188,s5_190,s6_191,s7_192,sp_183,t1_202
	word64 s2_207 = a0_193
	branch a0_193 == 0x0000000000000000 l0000000000017C94
// DataOut: a0 a4 gp s1 s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:16 a3:<invalid> a4:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C74:
	word64 a0_250
	word64 a1_249
	word64 a0_247 = Mem181[a0_193 + 32:word64]
	a1_249 = a1_205
	a0_250 = a0_204
	branch a0_247 == 0x0000000000000000 l0000000000017C84
// DataOut: a0 a4 gp s1 s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C7C:
	word64 sp_283
	word64 s0_284
	word64 s1_285
	word64 s3_287
	word64 s4_288
	word64 ra_289
	word64 s5_290
	word64 s6_291
	word64 s7_292
	word64 a0_293
	word64 a1_294
	word64 a2_295
	word64 a3_296
	word64 a4_297
	word64 a5_298
	word64 fa4_300
	word64 fa5_301
	word64 t1_302
	word64 fa3_303
	word64 a2_306
	call __strdup (retsize: 0; depth: 80)
		uses: a0_204,a0_247,a1_194,a1_205,a2_195,a2_206,a3_196,a4_197,a5_198,fa3_203,fa4_200,fa5_201,gp_199,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_189,s0_184,s1_185,s2_207,s3_187,s4_188,s5_190,s6_191,s7_192,sp_183,t1_202,tLoc50
		defs: a0_293,a0_304,a1_294,a1_305,a2_295,a2_306,a3_296,a4_297,a5_298,fa3_303,fa4_300,fa5_301,gp_299,ra_289,s0_284,s1_285,s2_286,s3_287,s4_288,s5_290,s6_291,s7_292,sp_283,t1_302
	Mem307[s1_285:word64] = a0_293
// DataOut: a4 gp s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017C84:
	branch (word64) ((real32) Mem181[s2_207 + 52:real32] == (real32) 0x0000000000000000) == 0x0000000000000000 l0000000000017CC8
// DataOut: a4 a5 gp s10 s2 s4 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017CC8:
	word64 a0_281 = DPB(a0_250, __asprintf_chk(a0_250, a1_249, 0x0000000000012B80, tLoc50), 0)
// DataOut: gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 fa4:<invalid> fa5:(real32) 0x0000000000000000 a3:<invalid> s6:1 a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017C94:
	word64 t1_221 = Mem181[gp_199 + -1976:word64]
	word64 sp_223
	word64 s0_224
	word64 s1_225
	word64 s2_226
	word64 s3_227
	word64 s4_228
	word64 ra_229
	word64 s5_230
	word64 s6_231
	word64 s7_232
	word64 a0_233
	word64 a1_234
	word64 a2_235
	word64 a3_236
	word64 a4_237
	word64 a5_238
	word64 gp_239
	word64 fa4_240
	word64 fa5_241
	word64 t1_242
	word64 fa3_243
	word64 a0_244
	word64 a1_245
	word64 a2_246
	call t1_221 (retsize: 0;)
		uses: a0_204,a0_211,a1_194,a1_205,a2_195,a2_206,a3_196,a4_197,a5_198,fa3_203,fa4_200,fa5_201,gp_208,qwLoc08_14,qwLoc10_4,qwLoc18_6,qwLoc20_8,qwLoc28_10,qwLoc30_12,qwLoc38_16,qwLoc40_18,qwLoc48_20,ra_212,s0_213,s1_214,s2_215,s3_216,s4_217,s5_218,s6_219,s7_220,sp_222,t1_221
		defs: a0_233,a0_244,a1_234,a1_245,a2_235,a2_246,a3_236,a4_237,a5_238,fa3_243,fa4_240,fa5_241,gp_239,ra_229,s0_224,s1_225,s2_226,s3_227,s4_228,s5_230,s6_231,s7_232,sp_223,t1_242
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s3:a1 s2:<invalid> s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:1 a3:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> fa3:<invalid> s6:1 a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017B84:
	return
// DataOut: gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s3:a1 s2:a2 s1:a3 s4:a4 a0:<invalid> a5:<invalid> s7:<invalid> a1:<invalid> a4:<invalid> s6:1 a3:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017B40_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s3:s3 s2:s2 s1:s1 s4:s4 ra:ra s5:s5 s6:s6 s7:s7 a0:<invalid> a5:<invalid> a1:<invalid> a4:<invalid> t1:<invalid> a3:<invalid> fa4:<invalid> fa5:<invalid> a2:<invalid> a6:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000017D10(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, word64 a4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 a4 gp
// LiveOut:
// Trashed: a0 a1 a2 a3 a4 a5 a6 fa3 fa4 fa5 t1
// Preserved: ra s0 s1 s2 s3 s4 s5 s6 s7 sp
fn0000000000017D10_entry:
// DataOut: a0 a1 a2 a3 a4 gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017D10:
	word64 a0_32 = fn0000000000017924(gp)
	branch a0_32 == 0x0000000000000000 l0000000000017D80
// DataOut: gp s0 s10 s2 s3 s4 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0)

l0000000000017D80:
	word64 a5_93 = Mem0[gp + -1944:word64]
	word64 sp_94
	word64 s0_95
	word64 s2_96
	word64 s3_97
	word64 s4_98
	word64 s5_99
	word64 ra_100
	word64 s1_101
	word64 s6_102
	word64 s7_103
	word64 a0_104
	word64 a1_105
	word64 a2_106
	word64 a3_107
	word64 a4_108
	word64 a5_109
	word64 gp_110
	word64 a6_111
	word64 fa4_112
	word64 fa5_113
	word64 t1_114
	word64 fa3_115
	word64 a0_116
	word64 a1_117
	word64 a2_118
	call a5_93 (retsize: 0; depth: 80)
		uses: a0,a0_32,a1,a1,a2,a2,a3,a4,a5_93,a6,fa3,fa4,fa5,gp,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra,s0_22,s1,s2_28,s3_26,s4_24,s5_30,s6,s7,sp_2,t1
		defs: a0_104,a0_116,a1_105,a1_117,a2_106,a2_118,a3_107,a4_108,a5_109,a6_111,fa3_115,fa4_112,fa5_113,gp_110,ra_100,s0_95,s1_101,s2_96,s3_97,s4_98,s5_99,s6_102,s7_103,sp_94,t1_114
	word64 a5_119 = Mem0[gp_110 + -1952:word64]
	word64 sp_122
	word64 s0_123
	word64 s2_124
	word64 s3_125
	word64 s4_126
	word64 s5_127
	word64 ra_128
	word64 s1_129
	word64 s6_130
	word64 s7_131
	word64 a0_132
	word64 a1_133
	word64 a2_134
	word64 a3_135
	word64 a4_136
	word64 a5_137
	word64 a6_139
	word64 fa4_140
	word64 fa5_141
	word64 t1_142
	word64 fa3_143
	word64 a0_144
	word64 a1_145
	word64 a2_146
	word64 gp_138
	call a5_119 (retsize: 0; depth: 80)
		uses: a0_116,a0_121,a1_117,a1_120,a2_106,a2_118,a3_107,a4_108,a5_119,a6_111,fa3_115,fa4_112,fa5_113,gp_110,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_100,s0_95,s1_101,s2_96,s3_97,s4_98,s5_99,s6_102,s7_103,sp_94,t1_114
		defs: a0_132,a0_144,a1_133,a1_145,a2_134,a2_146,a3_135,a4_136,a5_137,a6_139,fa3_143,fa4_140,fa5_141,gp_138,ra_128,s0_123,s1_129,s2_124,s3_125,s4_126,s5_127,s6_130,s7_131,sp_122,t1_142
	branch a0_132 == 0x0000000000000000 l0000000000017E18
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a0:<invalid> a1:<invalid> a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DA0:
	word64 a3_354 = Mem0[gp_138 + -2000:word64]
	word64 a6_357 = 1
	Mem358[a0_132 + 76:word32] = a6_357
	word64 sp_361
	word64 s0_362
	word64 s2_363
	word64 s3_364
	word64 s4_365
	word64 s5_366
	word64 ra_367
	word64 s1_368
	word64 s6_369
	word64 s7_370
	word64 a0_371
	word64 a1_372
	word64 a2_373
	word64 a3_374
	word64 a4_375
	word64 a5_376
	word64 gp_377
	word64 a6_378
	word64 fa4_379
	word64 fa5_380
	word64 t1_381
	word64 fa3_382
	word64 a0_383
	word64 a1_384
	word64 a2_385
	call a3_354 (retsize: 0; depth: 80)
		uses: a0_132,a0_144,a1_145,a1_359,a2_146,a2_360,a3_354,a4_355,a5_356,a6_357,fa3_143,fa4_140,fa5_141,gp_138,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_128,s0_123,s1_147,s2_124,s3_125,s4_126,s5_127,s6_130,s7_131,sp_122,t1_142,tLoc50
		defs: a0_371,a0_383,a1_372,a1_384,a2_373,a2_385,a3_374,a4_375,a5_376,a6_378,fa3_382,fa4_379,fa5_380,gp_377,ra_367,s0_362,s1_368,s2_363,s3_364,s4_365,s5_366,s6_369,s7_370,sp_361,t1_381
	branch a0_371 < 0x0000000000000000 l0000000000017D54
// DataOut: gp s0 s1 s10 s2 s3 s4 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:12 s1:12 a3:<invalid> a4:<invalid> a2:<invalid> a6:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DD8:
	word64 a5_387 = Mem358[gp_377 + -1960:word64]
	word64 sp_390
	word64 s0_391
	word64 s2_392
	word64 s3_393
	word64 s4_394
	word64 s5_395
	word64 ra_396
	word64 s1_397
	word64 s6_398
	word64 s7_399
	word64 a0_400
	word64 a1_401
	word64 a2_402
	word64 a3_403
	word64 a4_404
	word64 a5_405
	word64 a6_407
	word64 fa4_408
	word64 fa5_409
	word64 t1_410
	word64 fa3_411
	word64 a0_412
	word64 a1_413
	word64 a2_414
	word64 gp_406
	call a5_387 (retsize: 0; depth: 80)
		uses: a0_383,a0_389,a1_384,a1_388,a2_373,a2_385,a3_374,a4_375,a5_387,a6_378,fa3_382,fa4_379,fa5_380,gp_377,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_367,s0_362,s1_368,s2_363,s3_364,s4_365,s5_366,s6_369,s7_386,sp_361,t1_381,tLoc50
		defs: a0_400,a0_412,a1_401,a1_413,a2_402,a2_414,a3_403,a4_404,a5_405,a6_407,fa3_411,fa4_408,fa5_409,gp_406,ra_396,s0_391,s1_397,s2_392,s3_393,s4_394,s5_395,s6_398,s7_399,sp_390,t1_410
	branch a0_400 == 0x0000000000000000 l0000000000017DF4
// DataOut: a0 gp s0 s10 s2 s3 s4 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DEC:
	word64 sp_499
	word64 s0_500
	word64 s2_501
	word64 s3_502
	word64 s4_503
	word64 s5_504
	word64 ra_505
	word64 s1_506
	word64 s6_507
	word64 s7_508
	word64 a0_509
	word64 a1_510
	word64 a2_511
	word64 a3_512
	word64 a4_513
	word64 a5_514
	word64 a6_516
	word64 fa4_517
	word64 fa5_518
	word64 t1_519
	word64 fa3_520
	word64 a0_521
	word64 a1_522
	word64 a2_523
	call __strdup (retsize: 0; depth: 80)
		uses: a0_400,a0_412,a1_401,a1_413,a2_402,a2_414,a3_403,a4_404,a5_405,a6_407,fa3_411,fa4_408,fa5_409,gp_406,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_396,s0_391,s1_397,s2_392,s3_393,s4_394,s5_395,s6_398,s7_399,sp_390,t1_410,tLoc50
		defs: a0_509,a0_521,a1_510,a1_522,a2_511,a2_523,a3_512,a4_513,a5_514,a6_516,fa3_520,fa4_517,fa5_518,gp_515,ra_505,s0_500,s1_506,s2_501,s3_502,s4_503,s5_504,s6_507,s7_508,sp_499,t1_519
	Mem524[s4_503:word64] = a0_509
// DataOut: gp s0 s10 s2 s3 s5 s7 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017DF4:
	word64 a5_417 = Mem358[gp_406 + -1968:word64]
	word64 sp_419
	word64 s0_420
	word64 s2_421
	word64 s3_422
	word64 s4_423
	word64 s5_424
	word64 ra_425
	word64 s1_426
	word64 s6_427
	word64 s7_428
	word64 a0_429
	word64 a1_430
	word64 a2_431
	word64 a3_432
	word64 a4_433
	word64 a5_434
	word64 a6_436
	word64 fa4_437
	word64 fa5_438
	word64 t1_439
	word64 fa3_440
	word64 a0_441
	word64 a1_442
	word64 a2_443
	word64 gp_435
	call a5_417 (retsize: 0; depth: 80)
		uses: a0_412,a0_418,a1_401,a1_413,a2_402,a2_414,a3_403,a4_404,a5_417,a6_407,fa3_411,fa4_408,fa5_409,gp_415,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_396,s0_391,s1_397,s2_392,s3_393,s4_394,s5_395,s6_398,s7_416,sp_390,t1_410,tLoc50
		defs: a0_429,a0_441,a1_430,a1_442,a2_431,a2_443,a3_432,a4_433,a5_434,a6_436,fa3_440,fa4_437,fa5_438,gp_435,ra_425,s0_420,s1_426,s2_421,s3_422,s4_423,s5_424,s6_427,s7_428,sp_419,t1_439
	branch a0_429 == 0x0000000000000000 l0000000000017E0C
// DataOut: a0 gp s0 s10 s2 s3 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E04:
	word64 sp_473
	word64 s0_474
	word64 s2_475
	word64 s3_476
	word64 s4_477
	word64 s5_478
	word64 ra_479
	word64 s1_480
	word64 s6_481
	word64 s7_482
	word64 a0_483
	word64 a1_484
	word64 a2_485
	word64 a3_486
	word64 a4_487
	word64 a5_488
	word64 a6_490
	word64 fa4_491
	word64 fa5_492
	word64 t1_493
	word64 fa3_494
	word64 a0_495
	word64 a1_496
	word64 a2_497
	call __strdup (retsize: 0; depth: 80)
		uses: a0_429,a0_441,a1_430,a1_442,a2_431,a2_443,a3_432,a4_433,a5_434,a6_436,fa3_440,fa4_437,fa5_438,gp_435,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_425,s0_420,s1_426,s2_421,s3_422,s4_423,s5_424,s6_427,s7_428,sp_419,t1_439,tLoc50
		defs: a0_483,a0_495,a1_484,a1_496,a2_485,a2_497,a3_486,a4_487,a5_488,a6_490,fa3_494,fa4_491,fa5_492,gp_489,ra_479,s0_474,s1_480,s2_475,s3_476,s4_477,s5_478,s6_481,s7_482,sp_473,t1_493
	Mem498[s3_476:word64] = a0_483
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E0C:
	word64 a5_446 = Mem358[gp_435 + -1976:word64]
	word64 sp_448
	word64 s0_449
	word64 s2_450
	word64 s3_451
	word64 s4_452
	word64 s5_453
	word64 ra_454
	word64 s1_455
	word64 s6_456
	word64 s7_457
	word64 a0_458
	word64 a1_459
	word64 a2_460
	word64 a3_461
	word64 a4_462
	word64 a5_463
	word64 a6_465
	word64 fa4_466
	word64 fa5_467
	word64 t1_468
	word64 fa3_469
	word64 a0_470
	word64 a1_471
	word64 a2_472
	call a5_446 (retsize: 0; depth: 80)
		uses: a0_441,a0_447,a1_430,a1_442,a2_431,a2_443,a3_432,a4_433,a5_446,a6_436,fa3_440,fa4_437,fa5_438,gp_444,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_425,s0_420,s1_445,s2_421,s3_422,s4_423,s5_424,s6_427,s7_428,sp_419,t1_439,tLoc50
		defs: a0_458,a0_470,a1_459,a1_471,a2_460,a2_472,a3_461,a4_462,a5_463,a6_465,fa3_469,fa4_466,fa5_467,gp_464,ra_454,s0_449,s1_455,s2_450,s3_451,s4_452,s5_453,s6_456,s7_457,sp_448,t1_468
// DataOut: gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:12 a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E18:
	word64 a5_149 = Mem0[gp_138 + -1952:word64]
	word64 sp_152
	word64 s0_153
	word64 s2_154
	word64 s3_155
	word64 s4_156
	word64 s5_157
	word64 ra_158
	word64 s1_159
	word64 s6_160
	word64 s7_161
	word64 a0_162
	word64 a1_163
	word64 a2_164
	word64 a3_165
	word64 a4_166
	word64 a5_167
	word64 a6_169
	word64 fa4_170
	word64 fa5_171
	word64 t1_172
	word64 fa3_173
	word64 a0_174
	word64 a1_175
	word64 a2_176
	word64 gp_168
	call a5_149 (retsize: 0; depth: 80)
		uses: a0_144,a0_151,a1_145,a1_150,a2_134,a2_146,a3_135,a4_136,a5_149,a6_139,fa3_143,fa4_140,fa5_141,gp_148,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_128,s0_123,s1_147,s2_124,s3_125,s4_126,s5_127,s6_130,s7_131,sp_122,t1_142
		defs: a0_162,a0_174,a1_163,a1_175,a2_164,a2_176,a3_165,a4_166,a5_167,a6_169,fa3_173,fa4_170,fa5_171,gp_168,ra_158,s0_153,s1_159,s2_154,s3_155,s4_156,s5_157,s6_160,s7_161,sp_152,t1_172
	word64 s1_177 = a0_162
	branch a0_162 == 0x0000000000000000 l0000000000017EE8
// DataOut: a0 gp s0 s1 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:12 s1:12 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017EE8:
	word64 a5_321 = Mem0[gp_168 + -1952:word64]
	word64 sp_324
	word64 s0_325
	word64 s2_326
	word64 s3_327
	word64 s4_328
	word64 s5_329
	word64 ra_330
	word64 s1_331
	word64 s6_332
	word64 s7_333
	word64 a0_334
	word64 a1_335
	word64 a2_336
	word64 a3_337
	word64 a4_338
	word64 a5_339
	word64 a6_341
	word64 fa4_342
	word64 fa5_343
	word64 t1_344
	word64 fa3_345
	word64 a0_346
	word64 a1_347
	word64 a2_348
	call a5_321 (retsize: 0; depth: 80)
		uses: a0_174,a0_323,a1_175,a1_322,a2_164,a2_176,a3_165,a4_166,a5_321,a6_169,fa3_173,fa4_170,fa5_171,gp_168,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_158,s0_153,s1_177,s2_154,s3_155,s4_156,s5_157,s6_160,s7_161,sp_152,t1_172,tLoc50
		defs: a0_334,a0_346,a1_335,a1_347,a2_336,a2_348,a3_337,a4_338,a5_339,a6_341,fa3_345,fa4_342,fa5_343,gp_340,ra_330,s0_325,s1_331,s2_326,s3_327,s4_328,s5_329,s6_332,s7_333,sp_324,t1_344
	s1_177 = a0_334
	branch a0_334 != 0x0000000000000000 l0000000000017E30
// DataOut: a0 gp s0 s1 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:30 s1:30 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017F00:
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:31 s1:31 a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E30:
	word64 a3_185 = Mem0[gp_168 + -2008:word64]
	word64 a6_188 = 1
	Mem189[s1_177 + 76:word32] = a6_188
	word64 sp_192
	word64 s0_193
	word64 s2_194
	word64 s3_195
	word64 s4_196
	word64 s5_197
	word64 ra_198
	word64 s1_199
	word64 s6_200
	word64 s7_201
	word64 a0_202
	word64 a1_203
	word64 a2_204
	word64 a3_205
	word64 a4_206
	word64 a5_207
	word64 a6_209
	word64 fa4_210
	word64 fa5_211
	word64 t1_212
	word64 fa3_213
	word64 a0_214
	word64 a1_215
	word64 a2_216
	word64 gp_208
	call a3_185 (retsize: 0; depth: 80)
		uses: a0_162,a0_174,a1_175,a1_190,a2_176,a2_191,a3_185,a4_186,a5_187,a6_188,fa3_173,fa4_170,fa5_171,gp_178,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_158,s0_179,s1_180,s2_154,s3_155,s4_156,s5_157,s6_160,s7_161,sp_152,t1_172
		defs: a0_202,a0_214,a1_203,a1_215,a2_204,a2_216,a3_205,a4_206,a5_207,a6_209,fa3_213,fa4_210,fa5_211,gp_208,ra_198,s0_193,s1_199,s2_194,s3_195,s4_196,s5_197,s6_200,s7_201,sp_192,t1_212
	word64 s0_217 = a0_202
	branch a0_202 == 0x0000000000000000 l0000000000017E88
// DataOut: a0 a4 gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:16 a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E68:
	word64 a0_261
	word64 a1_260
	word64 a0_258 = Mem189[a0_202 + 32:word64]
	a1_260 = a1_215
	a0_261 = a0_214
	branch a0_258 == 0x0000000000000000 l0000000000017E78
// DataOut: a0 a4 gp s0 s10 s2 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E70:
	word64 sp_295
	word64 s2_297
	word64 s3_298
	word64 s4_299
	word64 s5_300
	word64 ra_301
	word64 s1_302
	word64 s6_303
	word64 s7_304
	word64 a0_305
	word64 a1_306
	word64 a2_307
	word64 a3_308
	word64 a4_309
	word64 a5_310
	word64 a6_312
	word64 fa4_313
	word64 fa5_314
	word64 t1_315
	word64 fa3_316
	word64 a2_319
	call __strdup (retsize: 0; depth: 80)
		uses: a0_214,a0_258,a1_203,a1_215,a2_204,a2_216,a3_205,a4_206,a5_207,a6_209,fa3_213,fa4_210,fa5_211,gp_208,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_198,s0_217,s1_199,s2_194,s3_195,s4_196,s5_197,s6_200,s7_201,sp_192,t1_212,tLoc50
		defs: a0_305,a0_317,a1_306,a1_318,a2_307,a2_319,a3_308,a4_309,a5_310,a6_312,fa3_316,fa4_313,fa5_314,gp_311,ra_301,s0_296,s1_302,s2_297,s3_298,s4_299,s5_300,s6_303,s7_304,sp_295,t1_315
	Mem320[s2_297:word64] = a0_305
// DataOut: a4 gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017E78:
	branch (word64) ((real32) Mem189[s0_217 + 52:real32] == (real32) 0x0000000000000000) == 0x0000000000000000 l0000000000017EBC
// DataOut: a4 a5 gp s0 s10 s5 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0)

l0000000000017EBC:
	word64 a0_293 = DPB(a0_261, __asprintf_chk(a0_261, a1_260, 0x0000000000012B80, tLoc50), 0)
// DataOut: gp s10 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 fa4:<invalid> fa5:(real32) 0x0000000000000000 s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017E88:
	word64 t1_231 = Mem189[gp_208 + -1976:word64]
	word64 sp_233
	word64 s0_234
	word64 s2_235
	word64 s3_236
	word64 s4_237
	word64 s5_238
	word64 ra_239
	word64 s1_240
	word64 s6_241
	word64 s7_242
	word64 a0_243
	word64 a1_244
	word64 a2_245
	word64 a3_246
	word64 a4_247
	word64 a5_248
	word64 gp_249
	word64 a6_250
	word64 fa4_251
	word64 fa5_252
	word64 t1_253
	word64 fa3_254
	word64 a0_255
	word64 a1_256
	word64 a2_257
	call t1_231 (retsize: 0;)
		uses: a0_214,a0_221,a1_203,a1_215,a2_204,a2_216,a3_205,a4_206,a5_207,a6_209,fa3_213,fa4_210,fa5_211,gp_218,qwLoc08_14,qwLoc10_4,qwLoc18_16,qwLoc20_6,qwLoc28_8,qwLoc30_10,qwLoc38_12,qwLoc40_18,qwLoc48_20,ra_222,s0_223,s1_224,s2_225,s3_226,s4_227,s5_228,s6_229,s7_230,sp_232,t1_231
		defs: a0_243,a0_255,a1_244,a1_256,a2_245,a2_257,a3_246,a4_247,a5_248,a6_250,fa3_254,fa4_251,fa5_252,gp_249,ra_239,s0_234,s1_240,s2_235,s3_236,s4_237,s5_238,s6_241,s7_242,sp_233,t1_253
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:<invalid> s0:<invalid> s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:1 fa4:<invalid> fa5:<invalid> fa3:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017D54:
	return
// DataOut: gp s10
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 s0:a0 s4:a1 s3:a2 s2:a3 s5:a4 a5:<invalid> a1:<invalid> a0:<invalid> s1:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> s7:12 -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017D10_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s4:s4 s3:s3 s2:s2 s5:s5 ra:ra s1:s1 s6:s6 s7:s7 a5:<invalid> a1:<invalid> a0:<invalid> a4:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> t1:<invalid> fa4:<invalid> fa5:<invalid> fa3:<invalid> -72(fp):s7 -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000017F04(word64 gp, word64 a0, word64 a1, word64 a2, word64 a3, ptr64 & a0Out, ptr64 & s5Out, ptr64 & s6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 a2 a3 gp
// LiveOut: a0 s5 s6 sp
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 ra s0 s1 s2 s3 s4 s5 s6 sp t1 t3
// Preserved:
fn0000000000017F04_entry:
// DataOut: a0 a1 a2 a3 gp s10 s8
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0058(64)

l0000000000017F04:
	fn00000000000182B4(a0)
	word64 sp_2 = fp + -80
	branch a1 == 32 l0000000000018048
// DataOut: a0 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018048:
	word64 a0_175 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012B88, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F60:
	word64 a1_85 = 24
	branch a1 == a1_85 l0000000000018070
// DataOut: a1 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018070:
	word64 a0_165 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BA8, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F68:
	word64 a0_86 = 16
	branch a1 == a0_86 l00000000000180D8
// DataOut: a0 a1 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a3:<invalid> a4:<invalid> a0:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l00000000000180D8:
	word64 a0_156 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BC0, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F70:
	word64 a5_87 = 8
	branch a1 == a5_87 l00000000000180F8
// DataOut: a0 a1 a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:<invalid> s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l00000000000180F8:
	word64 a0_148 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BD8, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F78:
	branch a1_85 <u a1 l0000000000017FBC
// DataOut: a0 a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000017FBC:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	word64 a0_141 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012BF0, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F7C:
	branch a0_86 <u a1 l0000000000018094
// DataOut: a5 gp s0 s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018094:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	word64 a0_125 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012C10, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017F80:
	branch a5_87 <u a1 l0000000000018008
// DataOut: gp s10 s4 s5 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0050(0) Local -0058(64)

l0000000000018008:
	fn00000000000182B4(a2)
	fn00000000000182B4(a3)
	word64 a0_108 = DPB(fp + -80, __asprintf_chk(fp + -80, a1, 0x0000000000012C30, tLoc50), 0)
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + -80 a5:8 s0:a1 s5:a2 s4:a3 a1:24 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a0:16 a3:<invalid> a4:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000017FF8:
	sp_2 = fp + 0xFFFFFFFFFFFFFFA8
	branch fp == -79 l0000000000017F84
// DataOut: gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFA8 a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0058(64)

l0000000000018000:
	word64 a0_84
	*a0Out = qwLoc58
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFFFFFFFFFFFFA8 a5:-1 s0:<invalid> s5:a2 s4:a3 a1:1 t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F84:
	word64 a0_71
	*a0Out = 0
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F88:
	branch Mem0[sp_2 + 8:word64] != Mem0[gp + -1936:word64] l0000000000018114
// DataOut: a0 gp s10 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018114:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000017F94:
	word64 s5_55
	*s5Out = Mem0[sp_2 + 24:word64]
	word64 s6_56
	*s6Out = Mem0[sp_2 + 16:word64]
	return sp_2 + 80
// DataOut: a0 gp s10 s5 s6 s8 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:a2 s4:a3 a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn0000000000017F04_exit:
// DataOut: a0 s5 s6 sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> a5:<invalid> s0:<invalid> s5:<invalid> s4:<invalid> a1:<invalid> t1:<invalid> t3:32 s6:<invalid> s1:<invalid> s2:<invalid> a2:<invalid> a3:<invalid> a6:<invalid> a4:<invalid> a0:<invalid> ra:<invalid> s3:<invalid> a7:<invalid> -80(fp):0x0000000000000000 -72(fp):<invalid> -64(fp):s6 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



word64 fn0000000000018118(word64 gp, word64 a0, word64 a1)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0 a1 gp
// LiveOut: a0
// Trashed: a0 a1 a2 a3 a4 a5 a6 a7 t1 t3 t4 t5 t6
// Preserved: ra s0 sp
fn0000000000018118_entry:
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l0000000000018118:
	word64 a0_151
	word64 a5_7 = Mem0[gp + -1936:word64]
	word64 t4_11 = a1 & 3
	branch (a1 & 3) != 0x0000000000000000 l00000000000182A8
// DataOut: a0 a1 gp s10 s2 s3 s6 s8 s9 t4
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64) Local -0018(64)

l00000000000182A8:
	a0_151 = 0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0018(64)

l0000000000018134:
	word64 a4_36 = 4
	word64 t5_37 = (int64) (int32) (a1 >>u 0x00000003)
	branch (a1 & 7) == a4_36 l0000000000018264
// DataOut: a0 a1 a4 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018264:
	branch 9 <u (word64) Mem0[a0 + (((int64) ((word32) ((int64) ((int32) ((int64) ((word32) a1 + a4_36) >>u 0x00000003))) + -1) << 0x00000000) >>u 0x00000000):byte] >>u 0x00000004 l0000000000018294
// DataOut: a0 a5 gp s10 s2 s3 s6 s8 s9 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:a1 & 7 t4:a1 & 3 a4:4 t5:<invalid> -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018290:
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a3:9 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018294:
	t4_11 = 2
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:a1 & 3 a4:<invalid> t5:<invalid> a3:9 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018144:
	branch t5_37 == 0x0000000000000000 l00000000000181FC
// DataOut: a0 gp s10 s2 s3 s6 s8 s9 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a3:9 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018148:
	word64 a1_129 = (int64) ((word32) t5_37 + -1)
	word64 a4_130 = t4_11
	word64 t1_91 = 9
	word64 a7_92 = 46
	word64 t3_93 = -1
// DataOut: a0 a1 a4 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a3:9 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018190:
	word64 a5_101 = (word64) Mem0[a0 + ((a1_129 << 0x00000000) >>u 0x00000000):byte]
	word64 a3_102 = (int64) ((word32) a4_130 + 1)
	word64 a6_104 = (a5_101 & 15) + 87
	branch t1_91 <u (a5_101 & 15) l00000000000181B4
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181B0:
	a6_104 = (a5_101 & 15) + 48
// DataOut: a0 a1 a3 a4 a5 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181B4:
	Mem112[fp + -16 + ((a4_130 << 0x00000000) >>u 0x00000000) + 3832:byte] = a6_104
	Mem115[fp + -16 + ((a3_102 << 0x00000000) >>u 0x00000000) + 3832:byte] = a7_92
	word64 a2_116 = (int64) ((word32) a4_130 + 2)
	word64 a3_117 = (int64) ((word32) a4_130 + 3)
	word64 a6_118 = (a5_101 >>u 0x00000004) + 48
	branch t1_91 >=u a5_101 >>u 0x00000004 l0000000000018160
// DataOut: a0 a1 a2 a3 a4 a5 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181EC:
	a6_118 = (a5_101 >>u 0x00000004) + 87
// DataOut: a0 a1 a2 a3 a4 a6 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l0000000000018160:
	Mem126[fp + -16 + ((a2_116 << 0x00000000) >>u 0x00000000) + 3832:byte] = a6_118
	Mem128[fp + -16 + ((a3_117 << 0x00000000) >>u 0x00000000) + 3832:byte] = a7_92
	a1_129 = (int64) ((word32) a1_129 + -1)
	a4_130 = (int64) ((word32) a4_130 + 4)
	branch a1_129 == t3_93 l00000000000181F4
// DataOut: a0 a1 a4 a7 gp s10 s2 s3 s6 s8 s9 t1 t3 t4 t5
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181F4:
	t4_11 = (int64) ((word32) t4_11 + (int64) ((int32) (t5_37 << 0x00000002)))
// DataOut: gp s10 s2 s3 s6 s8 s9 t4
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:fp + -16 t4:<invalid> a4:<invalid> t5:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a3:<invalid> a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: fp(64) Local -0018(64)

l00000000000181FC:
	word64 t4_52 = fp + -280 + ((t4_11 << 0x00000000) >>u 0x00000000)
	Mem55[t4_52 + 4:word16] = 29281
	Mem58[t4_52:word16] = 28777
	Mem61[t4_52 + 6:word16] = 24944
	Mem64[t4_52 + 2:word16] = 11830
	word64 a5_62 = 46
	Mem65[t4_52 + 8:word16] = a5_62
	word64 sp_72
	word64 s0_73
	word64 a5_74
	word64 ra_76
	word64 t4_77
	word64 a1_78
	word64 a4_79
	word64 t5_80
	word64 t1_81
	word64 a7_82
	word64 t3_83
	word64 a3_85
	word64 a2_86
	word64 a6_87
	word64 t6_88
	call __strdup (retsize: 0; depth: 288)
		uses: a0_63,a1,a2,a3_43,a4_60,a5_62,a6,a7,bLoc0117_42,bLoc0118_41,gp,qwLoc08_9,qwLoc10_4,qwLoc18_12,ra,s0,sp_2,t1,t3,t4_52,t5_37,t6
		defs: a0_84,a1_78,a2_86,a3_85,a4_79,a5_74,a6_87,a7_82,gp_75,ra_76,s0_73,sp_72,t1_81,t3_83,t4_77,t5_80,t6_88
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a4:<invalid> t5:<invalid> a3:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra
// LocalsOut: Local -0018(64)

l0000000000018248:
	branch a5_7 != Mem0[gp + -1936:word64] l00000000000182B0
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> a3:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l00000000000182B0:
	__stack_chk_fail()
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> a3:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

l0000000000018254:
	return a0_151
// DataOut: a0 gp s10 s2 s3 s6 s8 s9
// DataOut (flags): 
// SymbolicIn: sp:fp + -288 a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> t5:<invalid> a3:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra

fn0000000000018118_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> t4:<invalid> a0:<invalid> a4:<invalid> ra:ra s0:s0 t5:<invalid> a3:<invalid> a1:<invalid> t1:9 a7:46 t3:-1 a2:<invalid> a6:<invalid> t6:fp + -16 -280(fp):<invalid> -279(fp):46 -24(fp):<invalid> -16(fp):s0 -8(fp):ra



word64 fn00000000000182B4(word64 a0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  a0
// LiveOut: a0
// Trashed: a0 a3 a4 a5
// Preserved: sp
fn00000000000182B4_entry:
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

l00000000000182B4:
	return (int64) (int32) (a0 >>u 0x00000018) | (int64) ((int32) (a0 << 0x00000018)) | (int64) ((int32) ((a0 & 0x0000000000FF0000) >> 0x00000008)) | (int64) ((int32) ((a0 & 65280) << 0x00000008))
// DataOut: a0 gp s0 s1 s10 s2 s3 s4 s5 s6 s8
// DataOut (flags): 
// SymbolicIn: sp:fp

fn00000000000182B4_exit:
// DataOut: a0
// DataOut (flags): 
// SymbolicIn: sp:fp a5:<invalid> a3:<invalid> a4:<invalid> a0:<invalid>



void fn00000000000182E8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: a5
// Preserved: a0 a1 a2 ra s0 s1 s2 s3 s4 s5 sp
fn00000000000182E8_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(64)

l00000000000182E8:
	word64 s0_43 = 0x0000000000019E18
	branch 0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 == 0x0000000000000000 l0000000000018354
// DataOut: s0 s2
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018324:
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:0000000000019E18 s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018334:
	word64 a5_49 = Mem0[s0_43:word64]
	word64 sp_54
	word64 s0_55
	word64 s2_56
	word64 ra_57
	word64 s1_58
	word64 s3_59
	word64 s4_60
	word64 s5_61
	word64 a0_62
	word64 a1_63
	word64 a2_64
	word64 a5_65
	call a5_49 (retsize: 0; depth: 64)
		uses: a0_52,a1_51,a2_50,a5_49,qwLoc08_13,qwLoc10_4,qwLoc18_15,qwLoc20_6,qwLoc28_17,qwLoc30_19,qwLoc38_21,ra,s0_43,s1_53,s2_22,s3_45,s4_46,s5_47,sp_2
		defs: a0_62,a1_63,a2_64,a5_65,ra_57,s0_55,s1_58,s2_56,s3_59,s4_60,s5_61,sp_54
	s0_43 = s0_55 + 8
	branch s2_56 != s1_58 l0000000000018334
// DataOut: s0 s1 s2
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

l0000000000018354:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + -64 s0:<invalid> s2:0x0000000000019E20 - 0x0000000000019E18 >> 0x00000003 s5:a0 s4:a1 s3:a2 s1:<invalid> a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra

fn00000000000182E8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp s0:s0 s2:s2 ra:ra s1:s1 s3:s3 s4:s4 s5:s5 a5:<invalid> a2:a2 a1:a1 a0:a0 -56(fp):s5 -48(fp):s4 -40(fp):s3 -32(fp):s2 -24(fp):s1 -16(fp):s0 -8(fp):ra



void fn0000000000018378()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0000000000018378_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0000000000018378:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0000000000018378_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



