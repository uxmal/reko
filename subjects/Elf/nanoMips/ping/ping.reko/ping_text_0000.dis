void acknowledge(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
acknowledge_entry:
l004000F0:
	word32 r7_5 = Mem0[0x004544E4<p32>:word32]
	word32 r5_7 = r7_5 - r4
	branch !__bit(r5_7, 0xF<32>) l00400136
l004000FE:
	branch (r5_7 & 0xFFFF<32>) < Mem0[0x00430078<p32>:word32] l00400110
l00400108:
	Mem11[0x00430078<p32>:word32] = (r5_7 & 0xFFFF<32>) + 1<32>
l00400110:
	word32 r8_14 = CONVERT(Mem13[0x918<32>:uint16], uint16, word32)
	branch CONVERT(SLICE(r4 - r8_14, word16, 0), word16, int32) > 0<32> l00400132
l00400124:
	branch (r7_5 & 0xFFFF<32>) - r8_14 <= 0x7FFF<32> l00400136
l00400132:
	Mem25[0x918<32>:byte] = SLICE(r4, byte, 0)
l00400136:
	return
acknowledge_exit:


word32 set_socket_option.isra.0.part.1(ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse: 
// LiveOut: r3 r4 r6 r7
// Trashed: r17 r25 r3 r4 r5 r6 r7
// Preserved: sp
set_socket_option.isra.0.part.1_entry:
l00400138:
	word32 r4_9
	__errno_location(out r4_9)
	word32 r4_34
	word32 r3_12 = strerror(Mem5[r4_9:word32], out r4_34)
	word32 r7_22
	word32 r6_21 = fprintf(out r7_22)
	exit()
l00400156_thunk_exit:
	exit()
	r4Out = 2<32>
	r6Out = r6_21
	r7Out = r7_22
	return r3_12
set_socket_option.isra.0.part.1_exit:


word32 exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_socket_option.isra.0.part.1
//      main
//      fn00400B66
//      fn00401E7E
//      finish
//      fn004030A0
//      ping6_usage
//      ping6_run
//      __libc_start_main
// MayUse: 
// LiveOut: r17 sp
// Trashed: r17 r25 sp
// Preserved:
exit_entry:
	word32 r4
	word32 r0
	word32 r5
l0040015A:
	__funcs_on_exit()
	__libc_exit_fini()
	__stdio_exit_needed()
	_Exit()
l0040016C_thunk_main:
	main(r0, r4, r5)
	return r4
exit_exit:


void main(word32 r0, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7E
//      __libc_start_main
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r21 ra sp
main_entry:
	ptr32 fp
	word32 ra
	word32 r21
	struct <anonymous> tLoc40
	word32 dwLoc3C
	word32 dwLoc5C
	word32 r2
	word32 r3
	word32 r11
	word32 r12
	word32 r22
	word32 r23
	word32 r28
l00400170:
	word32 r7_414
	word32 r7_807
	word32 r8_808
	word32 r9_809
	word32 r10_810
	word32 r6_806
	memset(&tLoc40, 0<32>, 0x20<32>, out r6_806, out r7_807, out r8_808, out r9_809, out r10_810)
	Mem45[&tLoc40:word32] = 2<32>
	word32 r8_294 = limit_capabilities(r0)
	word32 r17_54 = Mem45[r5:word32]
	word32 sp_18 = fp - 96<i32>
	word32 r16_116 = r4
	word32 r18_121 = r5
	word32 r7_813
	word32 r6_812
	word32 r5_811
	word32 r7_62 = CONVERT(Mem45[r17_54 + strlen(r17_54, out r5_811, out r6_812, out r7_813) - 1<32>:byte], byte, word32)
	branch r7_62 != 0x34<32> l004001D0
l004001D0:
	branch r7_62 != 0x36<32> l004001B0
l004001D4:
	r7_414 = 0xA<32>
l004001AE:
	dwLoc3C = 2<32>
l004001B0:
	word32 r5_75
	word32 r4_73 = __posix_getopt(r0, r16_116, r18_121, 0x00410C0C<p32>, r8_294, out r5_75)
	branch r4_73 == 0xFFFFFFFF<32> l0040071A
l0040071A:
	word32 r7_92 = Mem91[0x00430254<p32>:word32]
	r16_116 = r16_116 - r7_92
	r18_121 = r18_121 + (r7_92 << 2<8>)
	branch r16_116 != 0<32> l0040072C
l004001C0:
	branch r4_73 >=u 0xFFFFFFC8<32> l00400728
l00400728:
	word32 r17_818
	word32 r3_814
	word32 r7_815
	word32 r11_816
	word32 r12_817
	usage(out r3_814, out r7_815, out r11_816, out r12_817, out r17_818)
l0040072C:
	word32 r20_125 = Mem91[r18_121 + (r16_116 + 0x3FFFFFFF<32>) * 4<32>:word32]
	word32 r17_824
	word32 r3_820
	word32 r4_821
	word32 r11_822
	word32 r12_823
	word32 r7_144
	word32 r8_145
	word32 r6_143
	modify_capability(r0, 1<32>, out r3_820, out r4_821, out r6_143, out r7_144, out r8_145, out r11_822, out r12_823, out r17_824)
	word32 r18_149 = dwLoc3C
	branch r8_145 == 0xA<32> l00400754
l00400744:
	word32 r3_819
	create_socket(fp - 0x58<32>, r6_143, CONVERT(r8_145 == 2<32>, bool, word32), out r3_819, out r6_143, out r7_144, out r8_145)
l00400754:
	branch r7_144 == 2<32> l0040076E
l0040075A:
	word32 r8_831
	word32 r7_830
	word32 r3_828
	word32 r6_829
	create_socket(fp - 0x4C<32>, r6_143, CONVERT(r8_145 <u 0<32>, bool, word32), out r3_828, out r6_829, out r7_830, out r8_831)
	r18_149 = 0xFFFFFFFF<32>
l0040076E:
	word32 r7_214
	word32 r7_215
	word32 r12_195
	word32 r7_207
	word32 r8_825
	word32 r11_826
	word32 r17_827
	word32 r6_206
	word32 r4_204
	word32 r3_203
	word32 r2_200 = modify_capability(r0, 0<32>, out r3_203, out r4_204, out r6_206, out r7_207, out r8_825, out r11_826, out r12_195, out r17_827)
	word32 r17_212 = dwLoc3C
	branch r7_207 != 0<32> l00400784
l00400778:
	r7_214 = 0xFFFFFFFF<32>
	branch r6_206 != 0xFFFFFFFF<32> l004007AA
l00400780:
	r7_215 = 0xA<32>
l00400782:
	r17_212 = 0xFFFFFFFF<32>
	dwLoc3C = r7_215
l00400784:
	r18_121 = r18_149 (alias)
	branch Mem219[0x00454530<p32>:word32] == 0<32> l004007B4
l0040078C:
	r17_212 = 0xFFFFFFFF<32>
	branch r4_204 == 0xFFFFFFFF<32> l004007B4
l00400794:
	word32 r5_832
	word32 r7_833
	r2_200 = setsockopt(out r3_203, out r4_204, out r5_832, out r7_833)
	branch r4_204 != 0xFFFFFFFF<32> l004007B4
l004007B4:
	branch Mem219[0x00454504<p32>:word32] == 0<32> l004007D6
l004007BC:
	r17_212 = 0xFFFFFFFF<32>
	branch r4_204 == 0xFFFFFFFF<32> l004007D6
l004007C2:
	word32 r4_253
	word32 r7_837
	word32 r5_836
	r2_200 = setsockopt(out r3_203, out r4_253, out r5_836, out r7_837)
	branch r4_253 == 0xFFFFFFFF<32> l004007A6
l004007D6:
	word32 r4_834
	word32 r12_835
	word32 r11_282
	getaddrinfo(r0, r2_200, r3_203, r20_125, 0<32>, fp - 0x40<32>, r12_195, r20_125, out r4_834, out r8_294, out r11_282, out r12_835)
	word32 r4_298 = dwLoc5C
	branch dwLoc5C == 0<32> l0040081E
l0040081E:
	branch r17_212 == 0<32> l00400812
l00400820:
	word32 r6_302 = Mem219[r17_212 + 4<32>:word32]
	branch r6_302 == 2<32> l004007FE
l004007FE:
	ping4_run(r0, r2, r3, r16_116, r18_149, r17_212, fp - 0x58<32>, r11, r12)
l00400826:
	branch r6_302 == 0xA<32> l00400806
l00400806:
	r4_298 = ping6_run(r0, r2, r3, r16_116, r18_149, r17_212, fp - 0x4C<32>, r12, r20_125, r21, r22, r23, r28, ra, out r8_294, out r11_282)
	branch r4_298 != 0<32> l0040081C
l0040081C:
	r17_212 = Mem219[r17_212 + 0x1C<32>:word32]
l00400812:
	word32 r3_839
	word32 r11_840
	freeaddrinfo(r0, r4_298, r11_282, out r3_839, out r11_840)
	return
l0040082A:
l004002B0:
	word32 r7_848
	fprintf(out r7_848)
l004007E6:
	gai_strerror(dwLoc5C)
	word32 r7_838
	fprintf(out r7_838)
l004001EA:
	exit()
	sp_18 = <invalid>
	r7_414 = 2<32>
l004001F2:
	Mem417[sp_18 + 0x24<32>:word32] = r7_414
l004007A6:
	r3_203 = set_socket_option.isra.0.part.1(out r4_204, out r6_206, out r7_214)
l004007AA:
	r17_212 = 0xFFFFFFFF<32>
	branch r7_214 != r6_206 l00400784
l004007B0:
	r7_215 = 2<32>
l004001C8:
	word32 r7_434 = Mem91[0x00412060<p32> + (r4_73 + 0xFFFFFFCC<32>) * 4<32>:word32]
	call r7_434 (retsize: 0;)
		uses: r4:r4_73 + 0xFFFFFFCC<32>,r5:r5_75,r7:r7_434,Stack +FFFFFFA4:dwLoc5C,Stack +FFFFFFC0:tLoc40,Stack +FFFFFFC4:dwLoc3C_603
	return
main_exit:


void fn00400832(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
fn00400832_entry:
l00400832:
l00400832_thunk_atoi:
	atoi(r4)
	return
fn00400832_exit:


void _start(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_start_exit:
_start_entry:
	ptr32 fp
l00400840:
	_start_c(r0, fp)


void _start_c(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _start
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_start_c_exit:
_start_c_entry:
l00400860:
	__libc_start_main(r0, Mem5[r4:word32], r4 + 4<32>)


void deregister_tm_clones()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __do_global_dtors_aux
// MayUse: 
// LiveOut:
// Trashed: r25 r4 r7
// Preserved: sp
deregister_tm_clones_entry:
l00400880:
	branch 0x004303B3<p32> - 0x004303B0<p32> <u 7<32> l0040089A
l00400890:
	branch null == 0<32> l0040089A
l0040089A:
	return
l00400898:
	call null (retsize: 0;)
	return
deregister_tm_clones_exit:


void register_tm_clones(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      frame_dummy
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: hi lo r25 r4 r5 r6 r7
// Preserved: sp
register_tm_clones_entry:
l0040089C:
	branch r5 == 0<32> l004008BC
l004008B2:
	branch null == 0<32> l004008BC
l004008BC:
	return
l004008BA:
	call null (retsize: 0;)
		uses: r5:r5
	return
register_tm_clones_exit:


void __do_global_dtors_aux()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: r16 ra sp
__do_global_dtors_aux_entry:
l004008BE:
	branch CONVERT(Mem7[0x7C0<32>:byte], byte, word32) != 0<32> l004008E4
l004008CC:
	deregister_tm_clones()
	branch null == 0<32> l004008DE
l004008D8:
	fn00000000(0x00413590<p32>)
l004008DE:
	Mem23[0x7C0<32>:byte] = 1<8>
l004008E4:
	return
__do_global_dtors_aux_exit:


void frame_dummy(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: hi lo r25 r4 r5 r6 r7
// Preserved: ra sp
frame_dummy_entry:
l004008E6:
	branch null == 0<32> l004008FA
l004008F0:
	fn00000000(0x00413590<p32>, 0x004303C4<p32>)
l004008FA:
	branch Mem5[0x0042FFFC<p32>:word32] != 0<32> l0040090A
l0040090A:
	branch null == 0<32> l00400902
l00400912:
	fn00000000()
l00400902:
l00400906_thunk_register_tm_clones:
	register_tm_clones(r5)
	return
frame_dummy_exit:


word32 in_cksum(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_send_probe
//      ping4_parse_reply
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
in_cksum_entry:
l00400920:
l0040092C:
	branch r5 >= 2<32> l00400922
l00400922:
	r4 = r4 + 2<32>
	r5 = r5 + 0xFFFFFFFE<32>
	r6 = r6 + CONVERT(Mem0[r4 - 2<32>:uint16], uint16, word32)
l00400930:
	branch r5 != 1<32> l00400938
l00400934:
	r6 = r6 + CONVERT(Mem0[r4:byte], byte, word32)
l00400938:
	word32 r6_17 = (r6 >> 0x10<32>) + (r6 & 0xFFFF<32>)
	return ~(r6_17 + (r6_17 >> 0x10<32>)) & 0xFFFF<32>
in_cksum_exit:


word32 usage(ptr32 & r3Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      ping4_run
// MayUse: 
// LiveOut: r11 r12 r17 r2 r3 r7 sp
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
usage_entry:
l0040094E:
	word32 r11_12
	word32 r12_13
	word32 r8_25 = fn00400B5A(0x00410358<p32>, Mem5[0x00412EF0<p32>:word32], out r11_12, out r12_13)
	word32 r17_53
	word32 r6_32 = ping6_usage(1<32>, out r17_53)
	word32 r17_35 = fn00400B66()
l00400964_thunk_create_socket:
	word32 r3_40
	word32 r7_44
	word32 r6_54
	word32 r8_55
	word32 r2_38 = create_socket(2<32>, r6_32, r8_25, out r3_40, out r6_54, out r7_44, out r8_55)
	r3Out = r3_40
	r7Out = r7_44
	r11Out = r11_12
	r12Out = r12_13
	r17Out = r17_35
	return r2_38
usage_exit:


word32 create_socket(word32 r4, word32 r6, word32 r8, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      usage
// MayUse:  r4:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r2 r3 r6 r7 r8
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
create_socket_entry:
l00400966:
	word32 r16_110 = r6
l0040096E:
	word32 r4_215
	fn00400B56(out r4_215)
	word32 r8_45
	word32 r4_47
	word32 r6_216
	word32 r9_217
	word32 r3_185
	socket(r16_110, out r3_185, out r4_47, out r6_216, out r8_45, out r9_217)
	branch r4_47 != 0xFFFFFFFF<32> l004009B0
l00400980:
	word32 r4_52
	r3_185 = fn00400B56(out r4_52)
	branch Mem49[r4_52:word32] == 0x21<32> l004009B0
l00400988:
	branch r16_110 != 1<32> l004009B0
l004009B0:
	word32 r6_195 = Mem49[r4:word32]
	word32 r7_198 = 0xFFFFFFFF<32>
	branch r6_195 != 0xFFFFFFFF<32> l004009EA
l004009EA:
	Mem60[r4 + 1<32>:word32] = r16_110
l004009B8:
	branch r8 == 0<32> l004009D6
l004009BA:
	word32 r4_65
	fn00400B56(out r4_65)
	word32 r4_220
	r3_185 = strerror(Mem49[r4_65:word32], out r4_220)
	r6_195 = fn00400B5E(out r7_198)
	branch r8 == 0<32> l004009EC
l004009EC:
	r3Out = r3_185
	r6Out = r6_195
	r7Out = r7_198
	r8Out = <invalid>
	return <invalid>
l004009D2:
	fn00400B66()
l004009D6:
	Mem98 = Mem49 (alias)
	word32 r4_97
	word32 r3_96 = fn00400B56(out r4_97)
	branch Mem98[r4_97:word32] != 0x21<32> l004009BA
l004009DE:
	word32 r7_100 = Mem98[0x004544EC<p32>:word32]
	branch !__bit(r7_100, 8<32>) l004009BA
l004009E8:
	r3Out = r3_96
	r6Out = r6_195
	r7Out = r7_100
	r8Out = <invalid>
	return <invalid>
create_socket_exit:
l0040098C:
	r16_110 = 3<32>
	branch __bit(Mem49[0x004544EC<p32>:word32], 8<32>) l0040096E
l00400998:
	word32 r4_113
	fn00400B56(out r4_113)
	word32 r4_218
	strerror(Mem49[r4_113:word32], out r4_218)
	word32 r7_219
	fn00400B5E(out r7_219)


void pr_echo_reply(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
pr_echo_reply_entry:
l004009EE:
	ntohs(CONVERT(Mem5[r4 + 6<32>:uint16], uint16, word32))
l00400A00_thunk_printf:
	word32 r4_35
	word32 r5_36
	word32 r6_37
	word32 r7_38
	word32 r11_39
	word32 r14_40
	word32 r22_41
	word32 r23_42
	word32 r30_43
	printf(0x004104BC<p32>, out r4_35, out r5_36, out r6_37, out r7_38, out r11_39, out r14_40, out r22_41, out r23_42, out r30_43)
	return
pr_echo_reply_exit:


void write_stdout(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401BA0
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
write_stdout_entry:
l00400A04:
	word32 r16_13 = 0<32>
l00400A0A:
	word32 r4_28 = write()
	r16_13 = r16_13 + r4_28
	branch r16_13 <u r5 l00400A0A
l00400A1A:
	branch r4_28 < 0<32> l00400A0A
l00400A1E:
	return
write_stdout_exit:


void ping4_send_probe(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r11 r12 r13 r14 r15 r16 r17 r18 r24 ra sp
ping4_send_probe_entry:
	ptr32 fp
l00400A20:
	Mem18[r5:byte] = 8<8>
	Mem19[r5 + 1<32>:byte] = 0<8>
	word32 r4_20 = Mem19[0x004544E4<p32>:word32]
	Mem21[r5 + 2<32>:word16] = 0<16>
	word32 r4_25 = fn00400B62(r4_20 + 1<32> & 0xFFFF<32>)
	Mem27[r5 + 4<32>:word16] = Mem21[0x004544C4<p32>:word16]
	Mem30[r5 + 6<32>:word16] = SLICE(r4_25, word16, 0)
	branch Mem40[0x00454508<p32>:word32] == 0<32> l00400A8C
l00400A6E:
	branch __bit(Mem40[0x004544EC<p32>:word32], 0xC<32>) l00400AEA
l00400AEA:
	fn00400B4E(r5 + 8<32>, 0<32>, 8<32>)
l00400A7A:
	word32 r17_60
	word32 r6_236
	word32 r4_235
	gettimeofday(fp - 0x18<32>, out r4_235, out r6_236, out r17_60)
	word32 r13_246
	word32 r12_245
	word32 r11_244
	word32 r10_243
	word32 r9_242
	word32 r8_241
	word32 r7_240
	word32 r6_239
	word32 r5_238
	word32 r3_237
	memcpy(r17_60, fp - 0x18<32>, 8<32>, out r3_237, out r5_238, out r6_239, out r7_240, out r8_241, out r9_242, out r10_243, out r11_244, out r12_245, out r13_246)
l00400A8C:
	word32 r17_87 = Mem40[0x00430074<p32>:word32]
	word32 r4_94 = in_cksum(r5, r17_87 + 8<32>, 0<32>)
	word32 r7_98 = Mem40[0x00454508<p32>:word32]
	Mem99[r5 + 2<32>:word16] = SLICE(r4_94, word16, 0)
	word32 r17_108 = r17_87 + 8<32>
	branch r7_98 == 0<32> l00400AD2
l00400AA4:
	branch !__bit(Mem99[0x004544EC<p32>:word32], 0xC<32>) l00400AD2
l00400AAE:
	word32 r4_249
	word32 r6_250
	gettimeofday(fp - 0x18<32>, out r4_249, out r6_250, out r17_108)
	word32 r3_251
	word32 r11_252
	word32 r12_253
	fn00400B52(r5 + 8<32>, fp - 0x18<32>, 8<32>, out r3_251, out r11_252, out r12_253)
	Mem144[r5 + 2<32>:word16] = SLICE(in_cksum(fp - 0x18<32>, 8<32>, ~CONVERT(Mem99[r5 + 2<32>:uint16], uint16, word32) & 0xFFFF<32>), word16, 0)
l00400AD2:
	word32 r10_248
	word32 r7_247
	branch (r17_108 ^ sendto(out r7_247, out r10_248)) != 0<32> l00400AE8
l00400AE4_1:
l00400AE8:
	return
ping4_send_probe_exit:


void ping4_install_filter()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
ping4_install_filter_entry:
l00400AF2:
	branch Mem9[0x0045451C<p32>:word32] != 0<32> l00400B48
l00400AFE:
	uint16 wLoc14_76 = Mem9[0x004544C4<p32>:uint16]
	Mem17[0x0045451C<p32>:word32] = 1<32>
	fn00400B62(CONVERT(wLoc14_76, uint16, word32))
	Mem22[0x0043001A<p32>:byte] = 0<8>
	Mem24[0x0043001B<p32>:byte] = 1<8>
	Mem29[0x00430018<p32>:byte] = 0x15<8>
	branch fn00400B4A() == 0<32> l00400B48
l00400B48:
	return
l00400B3C:
l00400B44_thunk_perror:
	word32 r17_143
	word32 r12_142
	word32 r11_141
	word32 r8_140
	word32 r7_139
	word32 r6_138
	word32 r5_137
	word32 r3_136
	perror(0x004104E4<p32>, out r3_136, out r5_137, out r6_138, out r7_139, out r8_140, out r11_141, out r12_142, out r17_143)
	return
ping4_install_filter_exit:


word32 fn00400B4A()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_install_filter
//      ping4_run
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B4A_entry:
l00400B4A:
l00400B4A_thunk_setsockopt:
	word32 r4_8
	word32 r3_14
	word32 r5_15
	word32 r7_16
	setsockopt(out r3_14, out r4_8, out r5_15, out r7_16)
	return r4_8
fn00400B4A_exit:


void fn00400B4E(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_send_probe
//      ping4_run
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B4E_entry:
l00400B4E:
l00400B4E_thunk_memset:
	word32 r6_14
	word32 r7_15
	word32 r8_16
	word32 r9_17
	word32 r10_18
	memset(r4, r5, r6, out r6_14, out r7_15, out r8_16, out r9_17, out r10_18)
	return
fn00400B4E_exit:


word32 fn00400B52(word32 r4, word32 r5, word32 r6, ptr32 & r3Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_send_probe
//      ping4_run
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r3
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B52_entry:
l00400B52:
l00400B52_thunk_memcpy:
	word32 r11_15
	word32 r12_16
	word32 r3_21
	word32 r5_25
	word32 r6_26
	word32 r7_27
	word32 r8_28
	word32 r9_29
	word32 r10_30
	word32 r13_31
	word32 r2_19 = memcpy(r4, r5, r6, out r3_21, out r5_25, out r6_26, out r7_27, out r8_28, out r9_29, out r10_30, out r11_15, out r12_16, out r13_31)
	r3Out = r3_21
	r11Out = r11_15
	r12Out = r12_16
	return r2_19
fn00400B52_exit:


word32 fn00400B56(ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      create_socket
//      ping4_run
// MayUse: 
// LiveOut: r3 r4
// Trashed: r25 r3 r4
// Preserved: sp
fn00400B56_entry:
l00400B56:
l00400B56_thunk___errno_location:
	word32 r4_6
	word32 r3_5 = __errno_location(out r4_6)
	r4Out = r4_6
	return r3_5
fn00400B56_exit:


word32 fn00400B5A(word32 r4, word32 r5, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      usage
//      ping4_run
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11 r12 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00400B5A_entry:
l00400B5A:
l00400B5A_thunk_fputs_unlocked:
	word32 r11_9
	word32 r12_10
	word32 r8_22
	word32 r3_26
	word32 r4_27
	word32 r5_28
	word32 r6_29
	fputs_unlocked(r4, r5, out r3_26, out r4_27, out r5_28, out r6_29, out r8_22, out r11_9, out r12_10)
	r11Out = r11_9
	r12Out = r12_10
	return r8_22
fn00400B5A_exit:


word32 fn00400B5E(ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      create_socket
//      ping4_run
// MayUse: 
// LiveOut: r6 r7
// Trashed: r25 r6 r7
// Preserved: sp
fn00400B5E_entry:
l00400B5E:
l00400B5E_thunk_fprintf:
	word32 r7_6
	word32 r6_5 = fprintf(out r7_6)
	r7Out = r7_6
	return r6_5
fn00400B5E_exit:


word32 fn00400B62(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_send_probe
//      ping4_install_filter
//      ping4_run
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
fn00400B62_entry:
l00400B62:
l00400B62_thunk_htons:
	return htons(r4)
fn00400B62_exit:


word32 fn00400B66()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      usage
//      create_socket
//      ping4_run
// MayUse: 
// LiveOut: r17
// Trashed: r17 r25
// Preserved: sp
fn00400B66_entry:
l00400B66:
l00400B66_thunk_exit:
	return exit()
fn00400B66_exit:


void ping4_run(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r0:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
ping4_run_exit:
ping4_run_entry:
	ptr32 fp
l00400B6A:
	word32 sp_1614 = fp - 384<i32>
	word32 r17_1600 = r4
	word32 r21_1609 = r5
	branch r4 < 2<32> l00400C24
l00400B76:
	word32 r7_29 = Mem19[0x004544EC<p32>:word32]
	branch __bit(r7_29, 5<32>) l00400B82
l00400B80:
	r2 = usage(out r3, out r7_29, out r11, out r12, out r17_1600)
	sp_1614 = <invalid>
l00400B82:
	r21_1609 = r5 (alias)
	Mem54 = Mem19 (alias)
	branch __bit(r7_29, 9<32>) l00400B96
l00400B96:
	branch r17_1600 >= 0xB<32> l00400B80
l00400B9A:
	Mem53[0x004544EC<p32>:word32] = r7_29 | 0x400<32>
l00400B86:
	branch Mem54[0x0045453C<p32>:word32] != 3<32> l00400B80
l00400B90:
	branch r17_1600 < 6<32> l00400C24
l00400C24:
	word32 r4_1522
	word32 r5_1519
	word32 r4_1520
	word32 r18_126 = r6
	branch r17_1600 <= 0<32> l00400C6A
l00400C6A:
	r18_126 = 0x0043004C<p32>
	branch Mem59[0x00430050<p32>:word32] != 0<32> l00400E36
l00400C74:
	word32 r3_1754
	word32 r12_1755
	fn00400B52(sp_1614 + 0x28<32>, 0x00431488<p32>, 0x10<32>, out r3_1754, out r11, out r12_1755)
	word32 r4_92
	word32 r6_1757
	word32 r8_1758
	word32 r9_1759
	word32 r3_1756
	socket(1<32>, out r3_1756, out r4_92, out r6_1757, out r8_1758, out r9_1759)
	branch r4_92 >= 0<32> l00400C9A
l00400C8E:
	r4_1522 = 0x00410520<p32>
l00400C28:
	word32 r20_96 = Mem59[r21_1609:word32]
	Mem100[0x888<32>:byte] = 0<8>
	Mem102[sp_1614 + 0x44<32>:word32] = 0<32>
	Mem103[sp_1614 + 0x48<32>:word32] = 0<32>
	Mem104[sp_1614 + 0x4C<32>:word32] = 0<32>
	Mem105[0x888<32>:byte] = 2<8>
	word32 r4_119
	word32 r9_1753
	word32 r6_1751
	word32 r8_1752
	r2 = __inet_aton(r2, r3, r20_96, 0x0043148C<p32>, r12, out r3, out r4_119, out r6_1751, out r8_1752, out r9_1753, out r11, out r12)
	branch r4_119 != 1<32> l00400BA6
l00400BA6:
	Mem125[sp_1614 + 0x38<32>:word32] = 0<32>
	branch r17_1600 != 1<32> l00400BAE
l00400BAC:
	branch r6 != 0<32> l00400BD2
l00400BAE:
	word32 r4_155
	word32 r12_1813
	word32 r8_1812
	getaddrinfo(r0, r2, r3, r20_96, 0<32>, 0x004121FC<p32>, r12, r20_96, out r4_155, out r8_1812, out r11, out r12_1813)
	branch r4_155 == 0<32> l00400BD0
l00400BD0:
l00400BD2:
	word32 r20_165 = sp_1614 + 0x60<32>
	r2 = fn00400B52(0x00431488<p32>, Mem125[r6 + 0x14<32>:word32], 0x10<32>, out r3, out r11, out r12)
	fn00400B4E(r20_165, 0<32>, 0xFF<32>)
	word32 r5_191 = Mem125[r6 + 0x18<32>:word32]
	branch r5_191 == 0<32> l00400BF4
l00400BEC:
	strncpy(r20_165, r5_191, 0xFE<32>)
l00400BF4:
	r17_1600 = Mem125[sp_1614 + 0x38<32>:word32]
	Mem205[0x004544C0<p32>:word32] = r20_165
	branch r20_165 == 0<32> l00400C02
l00400BFE:
	r2 = freeaddrinfo(r0, r20_165, r11, out r3, out r11)
l00400C02:
	branch r17_1600 == 1<32> l00400C20
l00400BBC:
	gai_strerror(r4_155)
l00400BC6:
	word32 r7_1827
	fn00400B5E(out r7_1827)
l00400C96:
	fn00400B66()
l00400C9A:
	word32 r19_241 = Mem239[0x00454528<p32>:word32]
	branch r19_241 == 0<32> l00400D38
l00400CA4:
	fn00400B4E(sp_1614 + 0x38<32>, 0<32>, 0x20<32>)
	strncpy(sp_1614 + 0x38<32>, r19_241, 0xF<32>)
	word32 r11_1765
	word32 r7_1763
	word32 r12_1766
	word32 r17_1767
	word32 r8_1764
	word32 r3_1760
	word32 r4_1761
	word32 r6_1762
	modify_capability(r0, 1<32>, out r3_1760, out r4_1761, out r6_1762, out r7_1763, out r8_1764, out r11_1765, out r12_1766, out r17_1767)
	word32 r7_1770
	word32 r6_1769
	word32 r5_1768
	strlen(Mem239[0x00454528<p32>:word32], out r5_1768, out r6_1769, out r7_1770)
	word32 r4_302
	word32 r5_1772
	word32 r7_1773
	word32 r3_1771
	setsockopt(out r3_1771, out r4_302, out r5_1772, out r7_1773)
	word32 r4_323
	word32 r3_1774
	word32 r6_1775
	word32 r7_1776
	word32 r8_1777
	word32 r17_1779
	word32 r12_1778
	modify_capability(r0, 0<32>, out r3_1774, out r4_323, out r6_1775, out r7_1776, out r8_1777, out r11, out r12_1778, out r17_1779)
	branch r4_302 != 0xFFFFFFFF<32> l00400D38
l00400CE2:
	branch __ins(ntohl(r4_323), 0<32>, 0<32>, 1<32>) != 0<32> l00400D32
l00400D32:
	r4_1522 = 0x00410558<p32>
l00400CF4:
	word32 r4_342
	word32 r7_345
	ioctl(out r4_342, out r7_345)
	branch r4_342 >= 0<32> l00400D16
l00400D16:
	Mem351[sp_1614 + 0x1C<32>:word32] = 0<32>
	Mem352[sp_1614 + 0x24<32>:word32] = r7_345
	Mem356[sp_1614 + 0x20<32>:word32] = 0<32>
	branch r4_302 != fn00400B4A() l00400D38
l00400D38:
	branch Mem367[0x00454530<p32>:word32] == 0<32> l00400D5A
l00400D40:
	branch fn00400B4A() >= 0<32> l00400D5A
l00400D52:
	word32 r17_1788
	word32 r12_1787
	word32 r8_1786
	word32 r5_1783
	word32 r6_1784
	word32 r7_1785
	word32 r3_1782
	perror(0x00410570<p32>, out r3_1782, out r5_1783, out r6_1784, out r7_1785, out r8_1786, out r11, out r12_1787, out r17_1788)
l00400D5A:
	word32 r4_408 = fn00400B62(0x401<32>)
	word32 r7_410 = Mem367[0x00454538<p32>:word32]
	Mem413[sp_1614 + 0x2A<32>:byte] = SLICE(r4_408, byte, 0)
	branch r7_410 == 0<32> l00400D76
l00400D6C:
	Mem416[sp_1614 + 0x2C<32>:word32] = Mem413[0x898<32>:word32]
l00400D76:
	word32 r4_427 = connect(out r5_1519)
	branch r4_427 != 0xFFFFFFFF<32> l00400DD6
l00400D86:
	word32 r4_437
	fn00400B56(out r4_437)
	branch Mem438[r4_437:word32] != 0xD<32> l00400DD0
l00400D8E:
	Mem441[sp_1614 + 0xC<32>:word32] = Mem438[0x00412EF0<p32>:word32]
	r4_1520 = 0x00410594<p32>
	branch Mem441[0x0045452C<p32>:word32] == 0<32> l00400E0A
l00400DA4:
	word32 r12_1804
	fn00400B5A(0x004105BC<p32>, r5_1519, out r11, out r12_1804)
	word32 r4_473
	word32 r3_1805
	word32 r5_1806
	word32 r7_1807
	setsockopt(out r3_1805, out r4_473, out r5_1806, out r7_1807)
	branch r4_473 >= 0<32> l00400DC6
l00400DC6:
	word32 r5_1808
	branch r4_427 != connect(out r5_1808) l00400DD6
l00400DD6:
	Mem496[sp_1614 + 0x1C<32>:word32] = 0x10<32>
	branch getsockname() != 0xFFFFFFFF<32> l00400DEE
l00400DEE:
	word32 r7_510 = Mem496[0x00454528<p32>:word32]
	Mem517[r18_126 + 2<32>:word16] = 0<16>
	branch r7_510 == 0<32> l00400E32
l00400DF8:
	word32 r11_530 = getifaddrs(r0, r11)
	branch sp_1614 == 0x38<32> l00400E0E
l00400E0E:
	word32 r22_540 = Mem517[0x00454528<p32>:word32]
	word32 r19_547 = r21_1609
l00400E18:
	branch r19_547 != 0<32> l00400E96
l00400E96:
	word32 r20_550 = Mem517[r19_547 + 3<32>:word32]
	branch r20_550 == 0<32> l00400EC0
l00400E9C:
	branch CONVERT(Mem517[r20_550:uint16], uint16, word32) != 2<32> l00400EC0
l00400EA4:
	word32 r6_1818
	branch strncmp(Mem517[r19_547 + 4<32>:word32], r22_540, 3<32>, out r6_1818) != 0<32> l00400EC0
l00400EAE:
	word32 r7_1819
	word32 r8_1820
	word32 r9_1821
	branch memcmp(r20_550 + 4<32>, 0x00430050<p32>, 4<32>, out r7_1819, out r8_1820, out r9_1821) == 0<32> l00400E1A
l00400EC0:
	r19_547 = Mem517[r19_547:word32]
l00400E1A:
	r11 = freeifaddrs(r0, r21_1609, r11_530)
	branch r19_547 != 0<32> l00400E32
l00400E20:
	word32 r7_1817
	fn00400B5E(out r7_1817)
l00400E32:
	word32 r8_1816
	word32 r4_1814
	word32 r6_1815
	close(out r4_1814, out r6_1815, out r8_1816)
l00400E36:
	word32 r17_1272 = 0x00431488<p32>
	branch Mem620[0x0043148C<p32>:word32] != 0<32> l00400E42
l00400E3E:
	Mem634[sp_1614 + 0x44<32>:word32] = Mem620[r18_126 + 4<32>:word32]
l00400E42:
	word32 r19_636 = Mem635[0x00454528<p32>:word32]
	branch r19_636 == 0<32> l00400E72
l00400E4A:
	fn00400B4E(sp_1614 + 0x38<32>, 0<32>, 0x20<32>)
	strncpy(sp_1614 + 0x38<32>, r19_636, 0xF<32>)
	word32 r4_677
	word32 r7_1781
	ioctl(out r4_677, out r7_1781)
	branch r4_677 < 0<32> l00400D02
l00400E6A:
	Mem684[0x004544AC<p32>:word32] = 0x18<32>
l00400E72:
	branch Mem685[0x0045452C<p32>:word32] == 0<32> l00400EC4
l00400EC4:
	branch __ins(ntohl(Mem685[0x0043148C<p32>:word32]), 0<32>, 0<32>, 1<32>) == 0<32> l00400E7A
l00400E7A:
	branch Mem685[0x00454514<p32>:word32] != 0<32> l00400EFC
l00400EFC:
	branch Mem685[0x0043008C<p32>:word32] > 0x3E7<32> l00400F16
l00400F16:
	word32 r7_698 = Mem685[0x00430048<p32>:word32]
	branch r7_698 < 0<32> l00400E82
l00400F20:
	branch r7_698 == 2<32> l00400E82
l00400F24:
	r5_1519 = Mem685[0x00412EF0<p32>:word32]
	r4_1520 = 0x004106A0<p32>
l00400F0A:
	r5_1519 = Mem685[0x00412EF0<p32>:word32]
	r4_1520 = 0x00410670<p32>
l00400E82:
	branch Mem685[0x00430048<p32>:word32] >= 0<32> l00400EE0
l00400E8C:
	Mem706[0x00430048<p32>:word32] = 2<32>
l00400ED6:
	branch Mem707[0x00430048<p32>:word32] < 0<32> l00400F30
l00400EE0:
	branch fn00400B4A() != 0xFFFFFFFF<32> l00400F30
l00400F30:
	branch __bit(Mem731[0x004544EC<p32>:word32], 0xF<32>) l00400F50
l00400F3A:
	branch bind() != 0xFFFFFFFF<32> l00400F50
l00400F50:
	branch Mem731[r7 + 4<32>:word32] != 3<32> l00400F78
l00400F56:
	Mem760[sp_1614 + 0x38<32>:word32] = 0xFFFFE7C6<32>
	word32 r5_1797
	branch fn00401280(out r5_1797) != 0xFFFFFFFF<32> l00400F78
l00400F72:
	fn00401284(0x004106EC<p32>, out r17_1272)
l00400F78:
	Mem801[sp_1614 + 0x1C<32>:word32] = 1<32>
	word32 r5_1010
	branch fn00401280(out r5_1010) == 0<32> l00400F9A
l00400F8C:
	word32 r11_1802
	word32 r12_1803
	word32 r8_1801
	word32 r6_1800
	word32 r4_1799
	word32 r3_1798
	fputs_unlocked(0x00410710<p32>, Mem801[0x00412EF0<p32>:word32], out r3_1798, out r4_1799, out r5_1010, out r6_1800, out r8_1801, out r11_1802, out r12_1803)
l00400F9A:
	branch Mem801[r7 + 4<32>:word32] != 1<32> l00400FCC
l00400FA0:
	word32 r5_1809
	branch fn00401280(out r5_1809) == 0<32> l00400FB6
l00400FB0:
	fn00401284(0x00410744<p32>, out r17_1272)
l00400FB6:
	branch fn00401280(out r5_1010) == 0<32> l00400FCC
l00400FC6:
	r5_1010 = fn00401284(0x00410764<p32>, out r17_1272)
l00400FCC:
	branch __bit(Mem801[0x004544EC<p32>:word32], 5<32>) l00401012
l00400FD6:
	word32 r6_1810
	fn00401366(sp_1614 + 0x38<32>, 0<32>, 0x28<32>, out r6_1810)
	Mem928[sp_1614 + 0x38<32>:byte] = 1<8>
	Mem930[sp_1614 + 0x39<32>:byte] = 7<8>
	Mem932[sp_1614 + 0x3A<32>:byte] = 0x27<8>
	Mem937[sp_1614 + 0x3B<32>:byte] = 4<8>
	Mem941[0x00454534<p32>:word32] = 0x28<32>
	branch fn00401280(out r5_1010) >= 0<32> l00401012
l00401012:
	branch __bit(Mem952[0x004544EC<p32>:word32], 9<32>) l004010A8
l0040101C:
	word32 r6_1811
	fn00401366(sp_1614 + 0x38<32>, 0<32>, 0x28<32>, out r6_1811)
	Mem968[sp_1614 + 0x38<32>:byte] = 0x44<8>
	word32 r6_967 = 0x24<32>
	word32 r7_969 = Mem968[0x0045453C<p32>:word32]
	branch r7_969 != 0<32> l00401038
l00401034_1:
	r6_967 = 0x28<32>
l00401038:
	Mem973[sp_1614 + 0x3B<32>:byte] = SLICE(r7_969, byte, 0)
	Mem975[sp_1614 + 0x39<32>:byte] = SLICE(r6_967, byte, 0)
	Mem977[sp_1614 + 0x3A<32>:byte] = 5<8>
	branch r7_969 == 3<32> l0040107A
l0040107A:
	word32 r5_978 = Mem977[0x00454538<p32>:word32]
	Mem982[sp_1614 + 0x39<32>:byte] = (SLICE(r5_978, byte, 0) << 3<8>) + 4<8>
	word32 r6_979 = sp_1614 + 0x38<32>
	word32 r7_983 = 0<32>
l0040108C:
	r6_979 = r6_979 + 8<32>
	branch r7_983 >= r5_978 l0040104A
l00401092:
	Mem992[r6_979 - 4<32>:word32] = Mem989[0x00431498<p32> + r7_983 * 4<32>:word32]
	r7_983 = r7_983 + 1<32>
l0040104A:
	branch fn00401280(out r5_1010) >= 0<32> l004010A0
l0040105C:
	Mem1019[sp_1614 + 0x3B<32>:byte] = 2<8>
	branch fn00401280(out r5_1010) >= 0<32> l004010A0
l004010A0:
	Mem1033[0x00454534<p32>:word32] = 0x28<32>
l004010A8:
	word32 r19_1035 = Mem1034[0x004544EC<p32>:word32]
	branch __bit(r19_1035, 0xA<32>) l00401114
l004010B2:
	word32 r20_1038 = sp_1614 + 0x38<32>
	word32 r6_1822
	fn00401366(r20_1038, 0<32>, 0x28<32>, out r6_1822)
	Mem1052[sp_1614 + 0x38<32>:byte] = 1<8>
	word32 r7_1053 = 0x89<32>
	branch (r19_1035 & 0x80<32>) != 0<32> l004010D2
l004010CE_1:
	r7_1053 = 0x83<32>
l004010D2:
	word32 r8_1056 = Mem1052[0x00454538<p32>:word32]
	Mem1063[sp_1614 + 0x3A<32>:byte] = (SLICE(r8_1056, byte, 0) << 2<8>) + 3<8>
	Mem1065[sp_1614 + 0x3B<32>:byte] = 4<8>
	Mem1067[sp_1614 + 0x39<32>:byte] = SLICE(r7_1053, byte, 0)
	word32 r6_1061 = 0<32>
	word32 r7_1066 = 0x00431498<p32>
l004010F4:
	branch r6_1061 < r8_1056 l00401162
l00401162:
	r6_1061 = r6_1061 + 1<32>
	Mem1076[r20_1038 + r6_1061 * 4<32>:word32] = Mem1071[r7_1066:word32]
	r7_1066 = r7_1066 + 4<32>
l004010F8:
	branch fn00401280(out r5_1010) < 0<32> l0040100C
l0040110C:
	Mem1098[0x00454534<p32>:word32] = 0x28<32>
l00401114:
	word32 r5_1114 = r5_1010 *s (Mem1099[0x00454534<p32>:word32] + 0x104<32>) + (Mem1099[0x00430074<p32>:word32] + 8<32>)
	Mem1117[sp_1614 + 0x1C<32>:word32] = r5_1114
	r11 = sock_setbufs(r5_1114)
	branch Mem1117[0x0045452C<p32>:word32] == 0<32> l0040116E
l00401144:
	word32 r5_1823
	branch fn00401280(out r5_1823) >= 0<32> l0040116E
l0040116E:
	branch __bit(Mem1117[0x004544EC<p32>:word32], 0x10<32>) l00401194
l00401178:
	Mem1163[sp_1614 + 0x28<32>:word32] = 0<32>
	word32 r5_1824
	branch fn00401280(out r5_1824) != 0xFFFFFFFF<32> l00401194
l00401194:
	branch __bit(Mem1175[0x004544EC<p32>:word32], 0x11<32>) l004011DA
l0040119E:
	Mem1181[sp_1614 + 0x28<32>:word32] = Mem1175[0x00454510<p32>:word32]
	word32 r5_1825
	branch fn00401280(out r5_1825) != 0xFFFFFFFF<32> l004011C2
l004011C2:
	word32 r5_1826
	branch fn00401280(out r5_1826) != 0xFFFFFFFF<32> l004011DA
l004011DA:
	word32 r6_1216 = Mem1212[0x00430074<p32>:word32]
	branch 0xFFE3<32> - Mem1212[0x00454534<p32>:word32] >= r6_1216 l004011F8
l004011F8:
	branch r6_1216 <u 8<32> l00401204
l004011FC:
	Mem1218[0x00454508<p32>:word32] = 1<32>
l00401204:
	word32 r4_1258
	word32 r9_1831
	word32 r10_1832
	word32 r11_1833
	word32 r3_1828
	word32 r6_1829
	word32 r8_1830
	malloc(r0, r6_1216 + 0x88<32>, r11, out r3_1828, out r4_1258, out r6_1829, out r8_1830, out r9_1831, out r10_1832, out r11_1833)
	branch r4_1258 != 0<32> l0040121E
l0040121E:
	word32 r21_1290 = Mem1288[0x004544C0<p32>:word32]
	fn00401590(Mem1288[r17_1272 + 4<32>:word32])
	word32 r23_1834
	word32 r30_1835
	fn00401594(0x0041088C<p32>, out r23_1834, out r30_1835)
	branch Mem1288[0x00454528<p32>:word32] != 0<32> l00401242
l00401238:
	branch __bit(Mem1288[0x004544EC<p32>:word32], 0xF<32>) l0040125C
l00401242:
	fn00401590(Mem1288[r18_126 + 4<32>:word32])
	branch Mem1288[0x00454528<p32>:word32] != 0<32> l00401256
l00401252_1:
l00401256:
	word32 r30_1839
	word32 r23_1838
	fn00401594(0x0041089C<p32>, out r23_1838, out r30_1839)
l0040125C:
	word32 r23_1836
	word32 r30_1837
	fn00401594(0x004108AC<p32>, out r23_1836, out r30_1837)
	main_loop(r0, setup(r0, r7), 0x0043005C<p32>, r7, r6_1216 + 0x88<32>, r21_1290)
l00401210:
	r5_1519 = Mem1288[0x00412EF0<p32>:word32]
	r4_1520 = 0x00410874<p32>
l004011F0:
l004011D2:
	r4_1522 = 0x00410818<p32>
l004011BA:
	r4_1522 = 0x004107F0<p32>
l0040118C:
	r4_1522 = 0x004107C8<p32>
l0040115A:
	r4_1522 = 0x004107A8<p32>
l00401074:
	r4_1522 = 0x00410798<p32>
l0040100C:
	r4_1522 = 0x00410784<p32>
l00400F4A:
	r4_1522 = 0x004106E4<p32>
l00400EF6:
	r4_1522 = 0x004106CC<p32>
l00400E00:
	r5_1519 = Mem517[0x00412EF0<p32>:word32]
	r4_1520 = 0x0041060C<p32>
l00400E0A:
	word32 r12_1796
	fn00400B5A(r4_1520, r5_1519, out r11, out r12_1796)
l00400DE8:
	r4_1522 = 0x00410600<p32>
l00400DD0:
	r4_1522 = 0x004105F8<p32>
l00400DC0:
	r4_1522 = 0x004105E0<p32>
l00400D2C:
	r4_1522 = 0x00410540<p32>
l00400C92:
	word32 r17_1795
	word32 r8_1793
	word32 r12_1794
	word32 r5_1790
	word32 r6_1791
	word32 r7_1792
	word32 r3_1789
	perror(r4_1522, out r3_1789, out r5_1790, out r6_1791, out r7_1792, out r8_1793, out r11, out r12_1794, out r17_1795)
l00400D02:
	word32 r7_1780
	fn00400B5E(out r7_1780)
l00400C4E:
	Mem1583[0x004544C0<p32>:word32] = r20_96
	branch r17_1600 != 1<32> l00400C06
l00400C06:
	word32 r7_1586 = Mem1584[0x00454538<p32>:word32]
	word32 r5_1592 = Mem1584[0x0043148C<p32>:word32]
	Mem1594[0x00454538<p32>:word32] = r7_1586 + 1<32>
	Mem1596[0x00431498<p32> + r7_1586 * 4<32>:word32] = r5_1592
l00400C58:
	Mem1599[0x004544EC<p32>:word32] = Mem1583[0x004544EC<p32>:word32] | 4<32>
l00400C20:
	r17_1600 = r17_1600 + 0xFFFFFFFF<32>
	r21_1609 = r21_1609 + 4<32>
l00400B94:


word32 fn00401280(ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
// MayUse: 
// LiveOut: r4 r5
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401280_entry:
l00401280:
l00401280_thunk_setsockopt:
	word32 r4_8
	word32 r5_9
	word32 r3_15
	word32 r7_16
	setsockopt(out r3_15, out r4_8, out r5_9, out r7_16)
	r5Out = r5_9
	return r4_8
fn00401280_exit:


word32 fn00401284(word32 r4, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
// MayUse:  r4:[0..31]
// LiveOut: r17 r5
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401284_entry:
l00401284:
l00401284_thunk_perror:
	word32 r5_18
	word32 r17_23
	word32 r3_25
	word32 r6_26
	word32 r7_27
	word32 r8_28
	word32 r11_29
	word32 r12_30
	perror(r4, out r3_25, out r5_18, out r6_26, out r7_27, out r8_28, out r11_29, out r12_30, out r17_23)
	r17Out = r17_23
	return r5_18
fn00401284_exit:


word32 pr_addr(word32 r0, word32 r4, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra, ptr32 & r22Out, ptr32 & r23Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_options
//      ping4_receive_error_msg
//      ping4_parse_reply
//      ping6_receive_error_msg
//      ping6_parse_reply
//      ping6_run
// MayUse:  r0:[0..31] r18:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] ra:[0..31]
// LiveOut: r17 r22 r23
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
pr_addr_entry:
	ptr32 fp
	struct <anonymous> tLoc010C
l00401288:
	word32 r6_283
	fn00401366(fp - 0x20C<32>, 0<32>, 0xFB<32>, out r6_283)
	word32 r6_32
	word32 r5_31 = fn00401366(&tLoc010C, 0<32>, 0xFB<32>, out r6_32)
	word32 r7_37 = Mem28[0x00454520<p32>:word32]
	branch r6_32 != r7_37 l004012C2
l004012B4:
	r5_31 = 0x004313E0<p32>
	word32 r8_285
	word32 r9_286
	branch memcmp(&tLoc010C, 0x004313E0<p32>, r6_32, out r7_37, out r8_285, out r9_286) == 0<32> l0040135E
l004012C2:
	Mem52[0x00454520<p32>:word32] = r7_37
	word32 r7_284
	word32 r5_64 = fn00401608(0x004313E0<p32>, r5_31, r7_37, out r7_284)
	word32 r4_91 = CONVERT(_setjmp(0x00454340<p32>, 0xFB<32>, r4, r18, r19, r20, r21, r22, r23, r28, r30, ra) <u 1<32>, bool, word32)
	Mem93[0x004314C0<p32>:word32] = r4_91
	word32 r5_110
	word32 r4_100 = getnameinfo(r4_91, r5_64, fp - 0x110<32>, 0xFF<32>, 1<32>, r21, out r5_110)
	branch Mem93[0x004544B8<p32>:word32] == 0<32> l00401322
l00401322:
	branch !__bit(Mem93[0x004544EC<p32>:word32], 2<32>) l00401306
l0040132C:
	word32 r5_289
	getnameinfo(r4_100, r5_110, fp - 0x210<32>, 0xFF<32>, 0<32>, r21, out r5_289)
l00401306:
	branch false l00401342
l00401342:
	word32 r30_287
	snprintf(0x004303E0<p32>, 0x1000<32>, 0x00410C68<p32>, out r22, out r23, out r30_287)
l0040130C:
	word32 r30_288
	snprintf(0x004303E0<p32>, 0x1000<32>, 0x00410C70<p32>, out r22, out r23, out r30_288)
l00401358:
	Mem198[0x004314C0<p32>:word32] = r0
l0040135E:
	r22Out = r22
	r23Out = r23
	return r4
pr_addr_exit:


word32 fn00401366(word32 r4, word32 r5, word32 r6, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      pr_addr
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r5 r6
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
fn00401366_entry:
l00401366:
l00401366_thunk_memset:
	word32 r6_12
	word32 r7_15
	word32 r8_16
	word32 r9_17
	word32 r10_18
	word32 r5_11 = memset(r4, r5, r6, out r6_12, out r7_15, out r8_16, out r9_17, out r10_18)
	r6Out = r6_12
	return r5_11
fn00401366_exit:


void pr_options(word32 r0, word32 r4, word32 r5, word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_iph
//      ping4_parse_reply
// MayUse:  r0:[0..31] r28:[0..31] r4:[0..31] r5:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
pr_options_entry:
	ptr32 fp
	word32 dwLoc44
l0040136A:
	word32 r16_26 = r4
	word32 r20_28 = r5 + 0xFFFFFFEC<32>
l00401372:
	branch r20_28 > 0<32> l00401378
l00401378:
	word32 r5_32 = CONVERT(Mem31[r16_26:byte], byte, word32)
	branch r5_32 == 0<32> l00401376
l0040137C:
	branch r5_32 != 1<32> l0040138C
l0040138C:
	word32 r19_33 = CONVERT(Mem31[r16_26 + 1<32>:byte], byte, word32)
	branch r19_33 < 2<32> l00401376
l00401392:
	branch r20_28 < r19_33 l00401376
l00401396:
	word32 r4_268
	branch r5_32 == 4<32> l004014BC
l004014BC:
	word32 r7_34 = CONVERT(Mem31[r16_26 + 2<32>:byte], byte, word32)
	branch CONVERT(r7_34 < r19_33, bool, word32) != 0<32> l004014C6
l004014C2_1:
	r7_34 = r19_33
l004014C6:
	word32 r18_101 = r7_34 + 0xFFFFFFFB<32>
	branch r18_101 <= 0<32> l004013FA
l004014CE:
	word32 r21_43 = CONVERT(Mem31[r16_26 + 3<32>:byte], byte, word32)
	word32 r30_207
	word32 r23_105
	fn00401594(0x00410CB0<p32>, out r23_105, out r30_207)
	word32 r22_104 = 0<32>
l00401524:
	word32 r17_116 = r30_207
	branch (r21_43 & 0xF<32>) == 0<32> l00401546
l0040152C:
	word32 r7_87
	fn00401608(fp - 0x44<32>, r30_207, 4<32>, out r7_87)
	r17_116 = dwLoc44
	branch r7_87 != 0<32> l004014E2
l004014E2:
	word32 r23_1281
	word32 r22_1280
	r17_116 = pr_addr(r0, fp - 0x40<32>, r18_101, r19_33, r20_28, r21_43, r22_104, r23_105, r28, r30_207, ra, out r22_1280, out r23_1281)
	word32 r30_1282
	r22_104 = fn00401594(0x00410C94<p32>, out r23_105, out r30_1282)
l0040153A:
	word32 r30_1283
	r22_104 = fn00401594(0x00410C88<p32>, out r23_105, out r30_1283)
l00401540:
	r18_101 = r18_101 + 0xFFFFFFFC<32>
	branch r18_101 <= 0<32> l00401580
l00401546:
	word32 r17_187 = CONVERT(Mem175[r17_116 + 3<32>:byte], byte, word32) + (CONVERT(Mem175[r17_116 + 2<32>:byte], byte, word32) + (CONVERT(Mem175[r17_116 + 1<32>:byte], byte, word32) + (CONVERT(Mem175[r17_116:byte], byte, word32) << 8<32>) << 8<32>) << 8<32>)
	branch r17_187 >= 0<32> l0040150C
l0040150C:
	word32 r4_191
	branch r22_104 != 0<32> l00401576
l00401576:
	r4_191 = 0x00410CF8<p32>
l00401510:
	r4_191 = 0x00410CE8<p32>
l00401516:
	fn00401594(r4_191, out r23_105, out r30_207)
	r22_104 = r17_187
l00401562:
	word32 r4_220
	word32 r17_216 = __ext(r17_187, 0<32>, 0x1F<32>)
	branch r23_105 != 0<32> l00401502
l00401502:
	r4_220 = 0x00410CD4<p32>
l0040156A:
	r4_220 = 0x00410CB8<p32>
l00401570:
	word32 r23_1284
	r22_104 = fn00401594(r4_220, out r23_1284, out r30_207)
	r23_105 = r17_216
l0040151A:
	fn00401766(0xA<32>)
	r18_101 = r18_101 + 0xFFFFFFFC<32>
	branch r18_101 <= 0<32> l00401580
l00401580:
	r4_268 = 0x00410D00<p32>
	branch r21_43 >>u 4<32> == 0<32> l004013FA
l0040139A:
	branch r5_32 >=u 5<32> l004013A8
l004013A8:
	branch r5_32 == 0x83<32> l004013B6
l004013B2:
	branch r5_32 != 0x89<32> l004013A2
l004013B6:
	branch (r5_32 ^ 0x89<32>) == 0<32> l004013C6
l004013C2_1:
l004013C6:
	word32 r4_1264
	word32 r7_1267
	word32 r6_1266
	word32 r14_1269
	word32 r11_1268
	word32 r5_1265
	word32 r22_287
	word32 r23_288
	word32 r30_292
	printf(0x00410C7C<p32>, out r4_1264, out r5_1265, out r6_1266, out r7_1267, out r11_1268, out r14_1269, out r22_287, out r23_288, out r30_292)
	word32 r21_303 = CONVERT(Mem31[r16_26 + 1<32>:byte], byte, word32)
	branch r21_303 < 5<32> l004013FA
l004013D2:
	word32 r18_304 = r16_26 + 3<32>
	word32 r17_305 = r18_304
l004013D8:
	word32 r7_324
	fn00401608(fp - 0x44<32>, r17_305, 4<32>, out r7_324)
	branch r7_324 != 0<32> l00401402
l00401402:
	word32 r23_1277
	word32 r22_1276
	pr_addr(r0, fp - 0x40<32>, r18_304, r19_33, r20_28, r21_303, r22_287, r23_288, r28, r30_292, ra, out r22_1276, out r23_1277)
	r22_287 = fn00401594(0x00410C94<p32>, out r23_288, out r30_292)
l004013E6:
	r22_287 = fn00401594(0x00410C88<p32>, out r23_288, out r30_292)
l004013EC:
	r17_305 = fn00401766(0xA<32>)
	branch r18_304 + (r21_303 - r17_305) >= 5<32> l004013D8
l0040139E:
	branch r5_32 == 7<32> l00401422
l00401422:
	word32 r7_425 = CONVERT(Mem31[r16_26 + 2<32>:byte], byte, word32)
	branch CONVERT(r7_425 < r19_33, bool, word32) != 0<32> l0040142C
l00401428_1:
	r7_425 = r19_33
l0040142C:
	word32 r17_430 = r7_425 + 0xFFFFFFFC<32>
	branch r17_430 <= 0<32> l004013FA
l00401436:
	word32 r18_435 = r16_26 + 2<32>
	branch Mem31[0x00454524<p32>:word32] != r17_430 l00401462
l00401444:
	word32 r8_1272
	word32 r7_1271
	word32 r9_1273
	branch memcmp(r18_435, 0x00431460<p32>, r17_430, out r7_1271, out r8_1272, out r9_1273) != 0<32> l00401462
l00401450:
	branch !__bit(Mem31[0x004544EC<p32>:word32], 0<32>) l00401462
l00401462:
	Mem450[0x00454524<p32>:word32] = r17_430
	word32 r7_1270
	fn00401608(0x00431460<p32>, r18_435, r17_430, out r7_1270)
	word32 r18_468 = r16_26 + 3<32>
	word32 r23_477
	word32 r30_481
	word32 r22_476 = fn00401594(0x00410CA8<p32>, out r23_477, out r30_481)
	r17_489 = r17_430
l0040147A:
	word32 r17_489
	word32 r7_508
	fn00401608(fp - 0x44<32>, r18_468 + (r17_430 - r17_489), 4<32>, out r7_508)
	branch r7_508 != 0<32> l0040149C
l0040149C:
	word32 r23_1279
	word32 r22_1278
	pr_addr(r0, fp - 0x40<32>, r18_468, r19_33, r20_28, r17_430, r22_476, r23_477, r28, r30_481, ra, out r22_1278, out r23_1279)
	r22_476 = fn00401594(0x00410C94<p32>, out r23_477, out r30_481)
l0040148A:
	r22_476 = fn00401594(0x00410C88<p32>, out r23_477, out r30_481)
l00401490:
	r17_489 = fn00401766(0xA<32>)
	branch r17_489 > 0<32> l0040147A
l0040149A:
l0040145A:
	word32 r30_1275
	word32 r23_1274
	fn00401594(0x00410C98<p32>, out r23_1274, out r30_1275)
l004013A2:
	r4_268 = 0x00410D18<p32>
l0040158C:
	word32 r30_1263
	word32 r23_1262
	fn00401594(r4_268, out r23_1262, out r30_1263)
l004013FA:
	r20_28 = r20_28 - r19_33
	r16_26 = r16_26 + r19_33
l00401380:
	word32 r23_1260
	word32 r30_1261
	fn00401594(0x00410C74<p32>, out r23_1260, out r30_1261)
	r20_28 = r20_28 + 0xFFFFFFFF<32>
	r16_26 = r16_26 + 1<32>
l00401376:
	return
pr_options_exit:


void fn00401590(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      pr_iph
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401590_entry:
l00401590:
l00401590_thunk_inet_ntoa:
	inet_ntoa(r4)
	return
fn00401590_exit:


word32 fn00401594(word32 r4, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      pr_options
//      pr_iph
//      pr_icmph
//      ping4_receive_error_msg
// MayUse:  r4:[0..31]
// LiveOut: r22 r23 r30
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401594_entry:
l00401594:
l00401594_thunk_printf:
	word32 r22_12
	word32 r23_13
	word32 r30_17
	word32 r4_26
	word32 r5_27
	word32 r6_28
	word32 r7_29
	word32 r11_30
	word32 r14_31
	printf(r4, out r4_26, out r5_27, out r6_28, out r7_29, out r11_30, out r14_31, out r22_12, out r23_13, out r30_17)
	r23Out = r23_13
	r30Out = r30_17
	return r22_12
fn00401594_exit:


void pr_iph(word32 r0, word32 r4, word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r28:[0..31] r4:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
pr_iph_entry:
l00401598:
	fn00401762(0x00410D2C<p32>)
	__ext(Mem11[r4:word32], 4<32>, 4<32>)
	word32 r23_234
	word32 r30_235
	fn00401594(0x00410D70<p32>, out r23_234, out r30_235)
	__ext(CONVERT(Mem11[r4 + 6<32>:uint16], uint16, word32), 0<32>, 0xD<32>)
	word32 r23_236
	word32 r30_237
	fn00401594(0x00410D8C<p32>, out r23_236, out r30_237)
	word32 r23_238
	word32 r30_239
	fn00401594(0x00410D98<p32>, out r23_238, out r30_239)
	fn00401590(Mem11[r4 + 0xC<32>:word32])
	word32 r4_240
	word32 r5_241
	word32 r6_242
	word32 r7_243
	word32 r11_244
	word32 r14_245
	word32 r22_246
	word32 r23_247
	word32 r30_248
	printf(0x00410DAC<p32>, out r4_240, out r5_241, out r6_242, out r7_243, out r11_244, out r14_245, out r22_246, out r23_247, out r30_248)
	fn00401590(Mem11[r4 + 0x10<32>:word32])
	word32 r4_249
	word32 r5_250
	word32 r6_251
	word32 r7_252
	word32 r11_253
	word32 r14_254
	word32 r22_255
	word32 r23_256
	word32 r30_257
	printf(0x00410DAC<p32>, out r4_249, out r5_250, out r6_251, out r7_252, out r11_253, out r14_254, out r22_255, out r23_256, out r30_257)
	word32 r17_193 = fn00401766(0xA<32>)
l00401606_thunk_pr_options:
	pr_options(r0, r4 + 0x14<32>, r17_193, r28, ra)
	return
pr_iph_exit:


word32 fn00401608(word32 r4, word32 r5, word32 r6, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_addr
//      pr_options
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r5 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn00401608_entry:
l00401608:
l00401608_thunk_memcpy:
	word32 r7_11
	word32 r5_14
	word32 r3_23
	word32 r6_24
	word32 r8_25
	word32 r9_26
	word32 r10_27
	word32 r11_28
	word32 r12_29
	word32 r13_30
	memcpy(r4, r5, r6, out r3_23, out r5_14, out r6_24, out r7_11, out r8_25, out r9_26, out r10_27, out r11_28, out r12_29, out r13_30)
	r7Out = r7_11
	return r5_14
fn00401608_exit:


void pr_icmph(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r16 r17 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
pr_icmph_entry:
l0040160C:
	branch r4 >=u 0x13<32> l00401758
l00401758:
	word32 r23_88
	word32 r30_89
	fn00401594(0x00411164<p32>, out r23_88, out r30_89)
	return
l00401614:
	word32 r7_42 = Mem9[0x00412170<p32> + r4 * 4<32>:word32]
	call r7_42 (retsize: 0;)
		uses: r4:r4,r6:r6,r7:r7_42
	return
pr_icmph_exit:


void fn00401762(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_iph
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401762_entry:
l00401762:
l00401762_thunk_puts:
	puts(r4)
	return
fn00401762_exit:


word32 fn00401766(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_options
//      pr_iph
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r17
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401766_entry:
l00401766:
l00401766_thunk_putchar:
	word32 r17_5
	putchar(r4, out r17_5)
	return r17_5
fn00401766_exit:


void ping4_receive_error_msg(word32 r0, word32 r20, word32 r21, word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r20:[0..31] r21:[0..31] r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r11 r12 r13 r14 r15 r16 r17 r18 r19 r22 r23 r24 r30 ra sp
ping4_receive_error_msg_entry:
	ptr32 fp
	word24 nLoc0227
	word24 nLoc022B
	word32 dwLoc0248
	byte bLoc0254
	uint16 wLoc0250
	uint16 wLoc024E
l0040176A:
	word32 r16_135
	word32 r4_19
	__errno_location(out r4_19)
	word32 r19_23 = Mem13[r4_19:word32]
	word32 r5_48
	word32 r6_734
	word32 r4_47 = recvmsg(out r5_48, out r6_734)
	word32 dwLoc0228_408 = SEQ(nLoc0227, 0<8>)
	word32 dwLoc022C_410 = SEQ(nLoc022B, SLICE(fp, byte, 0) - 0x20<8>)
	branch r4_47 < 0<32> l0040187A
l004017C2:
	word32 r6_351 = dwLoc0228_408
	word32 r7_358 = 0<32>
	branch dwLoc0228_408 <u 0xC<32> l004017D0
l004017CC:
	r7_358 = dwLoc022C_410
l004017D0:
	word32 r18_348 = 0<32>
	word32 r5_62 = r5_48 + dwLoc0228_408
l004017D6:
	branch r7_754 == 0<32> l00401800
l00401800:
	branch r18_348 != 0<32> l00401806
l00401806:
	word32 r5_67 = CONVERT(Mem42[r18_348 + 4<32>:byte], byte, word32)
	branch r5_67 != 1<32> l00401870
l00401870:
	branch r5_67 != 2<32> l0040187A
l00401874:
	branch r4_47 >= 8<32> l0040187E
l0040187E:
	branch Mem42[0x0043148C<p32>:word32] != r6_351 l00401878
l0040188A:
	branch CONVERT(bLoc0254, byte, word32) != 8<32> l00401878
l00401892:
	branch is_ours(dwLoc0248, CONVERT(wLoc0250, uint16, word32)) == 0<32> l00401878
l0040189C:
	acknowledge(fn00401B9C(CONVERT(wLoc024E, uint16, word32)))
	branch Mem42[dwLoc0248 + 4<32>:word32] != 3<32> l004018D6
l004018AC:
	branch Mem42[dwLoc0248 + 8<32>:word32] != 0<32> l004018D6
l004018B0:
	word32 r4_102
	word32 r5_738
	word32 r7_739
	word32 r3_737
	setsockopt(out r3_737, out r4_102, out r5_738, out r7_739)
	branch r4_102 != 0xFFFFFFFF<32> l004018D6
l004018CE:
	word32 r3_740
	word32 r11_745
	word32 r12_746
	word32 r17_747
	word32 r6_742
	word32 r5_741
	word32 r8_744
	word32 r7_743
	perror(0x004111C4<p32>, out r3_740, out r5_741, out r6_742, out r7_743, out r8_744, out r11_745, out r12_746, out r17_747)
l004018D6:
	word32 r16_131 = Mem129[0x004544EC<p32>:word32]
	Mem134[0x004544D0<p32>:word32] = Mem129[0x004544D0<p32>:word32] + 1<32>
	branch (r16_131 & 0x10<32>) != 0<32> l00401930
l004018F0:
	r16_135 = r16_131 & 1<32>
	branch (r16_131 & 1<32>) == 0<32> l004018FE
l004018FE:
	word32 r22_148
	word32 r23_149
	word32 r30_152
	word32 r11_749
	print_timestamp(out r11_749, out r22_148, out r23_149, out r30_152)
	word32 r23_751
	word32 r22_750
	pr_addr(r0, r18_348 + 0x10<32>, r18_348, r19_23, r20, r21, r22_148, r23_149, r28, r30_152, ra, out r22_750, out r23_751)
	fn00401B9C(CONVERT(wLoc024E, uint16, word32))
	word32 r23_752
	word32 r30_753
	fn00401594(0x004111EC<p32>, out r23_752, out r30_753)
	pr_icmph(CONVERT(Mem134[r18_348 + 5<32>:byte], byte, word32), Mem134[r18_348 + 8<32>:word32])
	fn00401B98(Mem134[0x00412EF4<p32>:word32])
l00401930:
	r16_135 = 1<32>
l004018F4:
	fn00401BA0(2<32>)
l00401878:
l0040187A:
l0040180E:
	word32 r7_275 = Mem42[0x004544EC<p32>:word32]
	r16_135 = r7_275 & 0x10<32>
	branch (r7_275 & 0x10<32>) != 0<32> l00401936
l00401936:
l00401938:
	r16_135 = 0<32>
l0040181C:
	branch __bit(r7_275, 0<32>) l00401848
l00401848:
	word32 r4_279 = Mem42[r18_348:word32]
	branch r4_279 == 0x1A<32> l00401868
l00401868:
l00401856:
	word32 r4_736
	strerror(r4_279, out r4_736)
l00401860:
	word32 r7_748
	fprintf(out r7_748)
l00401820:
	fn00401BA0(r5_67)
l00401826:
	Mem313[0x004544D0<p32>:word32] = Mem309[0x004544D0<p32>:word32] + 1<32>
l00401836:
	word32 r4_735
	__errno_location(out r4_735)
	branch r16_135 != 0<32> l00401842
l0040183E:
l00401842:
	return
ping4_receive_error_msg_exit:
l00401802:
	abort(r0)
l004017D8:
	branch Mem42[r7_754 + 4<32>:word32] != 0<32> l004017E4
l004017DC:
	branch Mem42[r7_754 + 8<32>:word32] != 0xB<32> l004017E4
l004017E2:
	r18_348 = r7_754 + 0xC<32>
l004017E4:
	r6_351 = Mem42[r7_754:word32]
	branch r6_351 <u 0xC<32> l004017FC
l004017EA:
	r6_351 = __ins(r6_351 + 3<32>, 0<32>, 0<32>, 1<32>)
	r7_358 = r7_754 + r6_351
	r7_754 = r7_358
	branch r6_351 + 0xC<32> <u r5_62 - r7_754 l004017D6
l004017FC:
	r7_358 = 0<32>


word32 fn0040193C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
fn0040193C_entry:
l0040193C:
l0040193C_thunk_ntohl:
	return ntohl(r4)
fn0040193C_exit:


void ping4_parse_reply(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r19, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 ra sp
ping4_parse_reply_entry:
	ptr32 fp
l00401940:
	word32 r23_314
	word32 r22_313
	word32 r21_157
	word32 r7_39
	word32 r16_33 = Mem21[Mem21[r5 + 8<32>:word32]:word32]
	branch Mem21[r4 + 4<32>:word32] != 3<32> l004019E8
l004019E8:
	word32 r19_35 = Mem21[r5 + 0x14<32>:word32]
	branch r19_35 <u 0xC<32> l00401A36
l00401A36:
	r21_157 = r16_33
	r22_313 = 0<32>
	r23_314 = 0<32>
	r7_39 = 0<32>
l004019EE:
	word32 r5_40 = Mem21[r5 + 0x10<32>:word32]
	r21_157 = r16_33
	r22_313 = 0<32>
	r23_314 = 0<32>
	r7_39 = r5_40
l004019F8:
	branch r7_1028 == 0<32> l00401998
l004019FA:
	word32 r4_48 = Mem21[r7_1028:word32]
	branch Mem21[r7_1028 + 4<32>:word32] != 0<32> l00401A0E
l00401A00:
	word32 r6_49 = Mem21[r7_1028 + 8<32>:word32]
	branch r6_49 != 2<32> l00401A2A
l00401A2A:
	branch r6_49 != 7<32> l00401A0E
l00401A2E:
	r21_157 = r7_1028 + 0xC<32>
	r22_313 = r4_48
l00401A06:
	branch r4_48 <u 4<32> l00401A26
l00401A0A:
	r23_314 = CONVERT(Mem21[r7_1028 + 0xC<32>:byte], byte, word32)
l00401A0E:
	branch r4_48 <u 0xC<32> l00401A26
l00401A12:
	word32 r4_60 = __ins(r4_48 + 3<32>, 0<32>, 0<32>, 1<32>)
	r7_39 = r7_1028 + r4_60
	r7_1028 = r7_39
	branch r4_60 + 0xC<32> <u (r5_40 + r19_35) - r7_1028 l004019F8
l00401A26:
	r7_39 = 0<32>
l00401952:
	word32 r5_66 = Mem21[r16_33:word32]
	r7_39 = (r5_66 & 0xF<32>) << 2<32>
	branch r7_39 + 7<32> >= r6 l00401964
l00401960:
	branch (r5_66 & 0xF<32>) >= 5<32> l0040198C
l0040198C:
	r23_314 = CONVERT(Mem21[r16_33 + 8<32>:byte], byte, word32)
	r21_157 = r16_33 + 0x14<32>
	r22_313 = r7_39 + 0xFFFFFFEC<32>
l00401998:
	word32 r20_78 = r6 - r7_39
	word32 r16_83 = r16_33 + r7_39
	word32 r4_88 = in_cksum(r16_83, r20_78, 0<32>)
	word32 r7_93 = CONVERT(Mem21[r16_83:byte], byte, word32)
	branch r7_93 != 0<32> l00401A40
l00401A40:
	word32 r7_97 = r7_93 + 0xFFFFFFFD<32> & 0xFF<32>
	branch r7_97 >=u 0xA<32> l00401A5A
l00401A4A:
	word32 r7_99 = 1<32> << r7_97
	branch (r7_99 & 0x307<32>) != 0<32> l00401A76
l00401A76:
	branch r20_78 <u 0x24<32> l0040196E
l00401A7A:
	word32 r17_103 = (Mem21[r16_83 + 8<32>:word32] & 0xF<32>) + 4<32>
	branch r20_78 < r17_103 << 2<32> l0040196E
l00401A86:
	word32 r17_106 = r16_83 + ((r17_103 << 2<32>) + 0xFFFFFFF8<32>)
	branch CONVERT(Mem21[r17_106:byte], byte, word32) != 8<32> l0040196E
l00401A90:
	branch Mem21[0x0043148C<p32>:word32] != Mem21[r16_83 + 0x18<32>:word32] l0040196E
l00401A9C:
	branch is_ours(r4, CONVERT(Mem21[r17_106 + 4<32>:uint16], uint16, word32)) == 0<32> l0040196E
l00401AA6:
	branch (CONVERT(Mem21[r16_83:byte], byte, word32) + 0xFFFFFFFC<32> & 0xFF<32>) <u 2<32> l00401ABA
l00401ABA:
	branch (Mem21[0x004544EC<p32>:word32] & 0x11<32>) != 0<32> l0040196E
l00401AC8:
	word32 r22_137
	word32 r23_138
	word32 r30_141
	word32 r11_1021
	print_timestamp(out r11_1021, out r22_137, out r23_138, out r30_141)
	word32 r23_1023
	word32 r22_1022
	fn00401B9C(CONVERT(Mem21[pr_addr(r0, r7, r7, r4_88, r20_78, r21_157, r22_137, r23_138, r28, r30_141, ra, out r22_1022, out r23_1023) + 6<32>:uint16], uint16, word32))
	word32 r23_1024
	word32 r30_1025
	fn00401B94(0x00411230<p32>, out r23_1024, out r30_1025)
	branch r4_88 == 0<32> l00401AE8
l00401AE2:
	word32 r23_1026
	word32 r30_1027
	fn00401B94(0x00411248<p32>, out r23_1026, out r30_1027)
l00401AE8:
	pr_icmph(CONVERT(Mem21[r16_83:byte], byte, word32), fn0040193C(Mem21[r16_83 + 4<32>:word32]))
l00401AB0:
	acknowledge(fn00401B9C(CONVERT(Mem21[r17_106 + 6<32>:uint16], uint16, word32)))
l00401A56:
	branch !__bit(r7_99, 5<32>) l0040196E
l00401A5A:
	word32 r7_281 = Mem21[0x004544EC<p32>:word32]
	branch (r7_281 & 0x111<32>) != 1<32> l00401B04
l00401B04:
	branch __bit(r7_281, 8<32>) l004019E4
l00401B08:
	branch Mem21[0x00454514<p32>:word32] != 0<32> l004019E4
l00401B12:
	branch __bit(r7_281, 0x13<32>) l00401B28
l00401B16:
	word32 r4_1018
	word32 r6_1019
	word32 r17_1020
	gettimeofday(fp - 0x38<32>, out r4_1018, out r6_1019, out r17_1020)
	r22_313 = fn00401B94(0x00411260<p32>, out r23_314, out r30)
l00401B28:
	word32 r23_1015
	word32 r22_1014
	pr_addr(r0, r7, r7, r4_88, r20_78, r21_157, r22_313, r23_314, r28, r30, ra, out r22_1014, out r23_1015)
	word32 r23_1016
	word32 r30_1017
	fn00401B94(0x0041126C<p32>, out r23_1016, out r30_1017)
	branch r4_88 == 0<32> l00401B40
l00401B40:
	pr_icmph(CONVERT(Mem21[r16_83:byte], byte, word32), fn0040193C(Mem21[r16_83 + 4<32>:word32]))
l00401B38:
	fn00401762(0x00411248<p32>)
l00401A68:
	branch r4_88 != 0<32> l00401AFA
l00401AFA:
	fn00401BA0(3<32>)
l00401A6C:
	fn00401BA0(2<32>)
l004019AC:
	branch is_ours(r4, CONVERT(Mem21[r16_83 + 4<32>:uint16], uint16, word32)) == 0<32> l0040196E
l004019B4:
	word32 r4_487 = fn00401B9C(CONVERT(Mem21[r16_83 + 6<32>:uint16], uint16, word32))
	word32 r22_501
	word32 r23_502
	branch gather_statistics(r16_83, 8<32>, r20_78, r4_487, r23_502, 0<32>, pr_addr(r0, r7, r7, r4_487, r20_78, r21_157, r22_313, r23_314, r28, r30, ra, out r22_501, out r23_502), 0x004009EE<p32>) == 0<32> l00401B52
l00401B52:
	branch __bit(Mem516[0x004544EC<p32>:word32], 0xD<32>) l00401B72
l00401B5C:
	fn00401766(7<32>)
	branch __bit(Mem516[0x004544EC<p32>:word32], 0<32>) l00401B7C
l00401B6A:
	fn00401B98(Mem516[0x00412EF4<p32>:word32])
l00401B72:
	branch !__bit(Mem516[0x004544EC<p32>:word32], 0<32>) l004019E4
l00401B7C:
	pr_options(r0, r21_157, r22_501 + 0x14<32>, r28, ra)
	word32 r17_1013
	putchar(0xA<32>, out r17_1013)
	fn00401B98(Mem516[0x00412EF4<p32>:word32])
l004019DC:
	fn00401B98(Mem516[0x00412EF4<p32>:word32])
l004019E4:
l00401964:
	branch !__bit(Mem21[0x004544EC<p32>:word32], 8<32>) l00401974
l00401974:
	word32 r22_1010
	word32 r23_1011
	pr_addr(r0, r7, r7, r19, r6, r21, r22, r23, r28, r30, ra, out r22_1010, out r23_1011)
	word32 r7_1012
	fprintf(out r7_1012)
l0040196E:
l00401970:
	return
ping4_parse_reply_exit:


word32 fn00401B94(word32 r4, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r22 r23 r30
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401B94_entry:
l00401B94:
l00401B94_thunk_printf:
	word32 r22_12
	word32 r23_13
	word32 r30_17
	word32 r4_26
	word32 r5_27
	word32 r6_28
	word32 r7_29
	word32 r11_30
	word32 r14_31
	printf(r4, out r4_26, out r5_27, out r6_28, out r7_29, out r11_30, out r14_31, out r22_12, out r23_13, out r30_17)
	r23Out = r23_13
	r30Out = r30_17
	return r22_12
fn00401B94_exit:


void fn00401B98(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r16 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401B98_entry:
l00401B98:
l00401B98_thunk_fflush_unlocked:
	word32 r16_16
	word32 r17_17
	fflush_unlocked(r4, out r16_16, out r17_17)
	return
fn00401B98_exit:


word32 fn00401B9C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
fn00401B9C_entry:
l00401B9C:
l00401B9C_thunk_ntohs:
	return ntohs(r4)
fn00401B9C_exit:


void fn00401BA0(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401BA0_entry:
l00401BA0:
l00401BA0_thunk_write_stdout:
	write_stdout(r5)
	return
fn00401BA0_exit:


word32 in_flight(ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pinger
//      main_loop
// MayUse: 
// LiveOut: r4 r7
// Trashed: r25 r4 r6 r7
// Preserved: sp
in_flight_entry:
l00401BB0:
	word32 r7_11 = Mem0[0x004544E4<p32>:word32]
	word32 r6_8 = r7_11 - CONVERT(Mem0[0x919<32>:uint16], uint16, word32)
	word32 r4_13 = r6_8 & 0xFFFF<32>
	branch __bit(r6_8, 0xF<32>) l00401BD6
l00401BC6:
	r7_11 = r7_11 - Mem0[0x004544DC<p32>:word32]
	r4_13 = r7_11 - Mem0[0x004544D0<p32>:word32]
l00401BD6:
	r7Out = r7_11
	return r4_13
in_flight_exit:


void advance_ntransmitted()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pinger
// MayUse: 
// LiveOut:
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
advance_ntransmitted_entry:
l00401BD8:
	word32 r6_5 = Mem0[0x004544E4<p32>:word32]
	word32 r4_8 = CONVERT(Mem0[0x919<32>:uint16], uint16, word32)
	Mem9[0x004544E4<p32>:word32] = r6_5 + 1<32>
	branch (r6_5 + 1<32> & 0xFFFF<32>) - r4_8 <= 0x7FFF<32> l00401C02
l00401BFC:
	Mem14[0x919<32>:byte] = SLICE(r6_5, byte, 0) + 2<8>
l00401C02:
	return
advance_ntransmitted_exit:


void sigstatus()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r7
// Preserved: sp
sigstatus_entry:
l00401C04:
	Mem5[0x00454500<p32>:word32] = 1<32>
	return
sigstatus_exit:


void update_interval()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pinger
//      gather_statistics
// MayUse: 
// LiveOut:
// Trashed: hi lo r25 r5 r6 r7
// Preserved: sp
update_interval_entry:
l00401C0E:
	branch Mem0[0x004544F4<p32>:word32] == 0<32> l00401C52
l00401C52:
l00401C16:
l00401C1C:
	word32 r6_14 = Mem0[0x004544F8<p32>:word32]
	word32 r7_21 = Mem0[0x00454514<p32>:word32]
	Mem22[0x0043008C<p32>:word32] = r6_14
	branch r7_21 == 0<32> l00401C50
l00401C3E:
	branch r6_14 > 0xC7<32> l00401C50
l00401C46:
	Mem25[0x0043008C<p32>:word32] = 0xC8<32>
l00401C50:
	return
update_interval_exit:


void write_stdout(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pinger
//      gather_statistics
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
write_stdout_entry:
l00401C60:
	word32 r16_13 = 0<32>
l00401C66:
	word32 r4_28 = write()
	r16_13 = r16_13 + r4_28
	branch r16_13 <u r5 l00401C66
l00401C76:
	branch r4_28 < 0<32> l00401C66
l00401C7A:
	return
write_stdout_exit:


void set_signal(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040271C
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
set_signal_entry:
	struct <anonymous> tLoc9C
l00401C7C:
	word32 r6_53
	word32 r7_54
	word32 r8_55
	word32 r9_56
	word32 r10_57
	memset(&tLoc9C, 0<32>, 0x8C<32>, out r6_53, out r7_54, out r8_55, out r9_56, out r10_57)
	Mem27[&tLoc9C:word32] = r5
	__sigaction(r4, &tLoc9C, 0<32>)
	return
set_signal_exit:


void sigexit(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r28 r3 r30 r4 r5 r6 r7 r8 r9 ra
// Preserved: sp
sigexit_entry:
l00401C98:
	Mem8[0x004544B8<p32>:word32] = 1<32>
	branch Mem8[0x004314C0<p32>:word32] != 0<32> l00401CAC
l00401CAC:
	_longjmp(0<32>)
l00401CB2_thunk_limit_capabilities:
	limit_capabilities(r0)
	return
l00401CAA:
	return
sigexit_exit:


word32 limit_capabilities(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      sigexit
// MayUse:  r0:[0..31]
// LiveOut: r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
limit_capabilities_entry:
l00401CB6:
	Mem15[0x00454514<p32>:word32] = fn00401E82()
	Mem24[0x004544B4<p32>:word32] = geteuid()
	word32 r4_32
	word32 r8_36
	word32 r3_126
	word32 r6_127
	word32 r7_128
	word32 r17_129
	seteuid(r0, out r3_126, out r4_32, out r6_127, out r7_128, out r8_36, out r17_129)
	branch r4_32 != 0<32> l00401CD8
l00401CD8:
	word32 r3_130
	word32 r6_131
	word32 r7_132
	word32 r8_133
	word32 r11_134
	word32 r12_135
	word32 r17_136
	fn00401E7A(0x00411278<p32>, out r3_130, out r6_131, out r7_132, out r8_133, out r11_134, out r12_135, out r17_136)
	word32 r5_137
	word32 r6_138
	word32 r7_139
	word32 r4_59 = fn00401E7E(out r5_137, out r6_138, out r7_139)
l00401CE0_thunk_modify_capability:
	word32 r8_92
	word32 r3_140
	word32 r4_141
	word32 r6_142
	word32 r7_143
	word32 r11_144
	word32 r12_145
	word32 r17_146
	modify_capability(r0, r4_59, out r3_140, out r4_141, out r6_142, out r7_143, out r8_92, out r11_144, out r12_145, out r17_146)
	return r8_92
l00401CD6:
	return r8_36
limit_capabilities_exit:


word32 modify_capability(word32 r0, word32 r4, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      ping4_run
//      limit_capabilities
//      setup
//      ping6_run
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r11 r12 r17 r2 r3 r4 r6 r7 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
modify_capability_entry:
	word32 r11
	word32 r12
l00401CE2:
	branch r4 != 0<32> l00401CF0
l00401CEC:
	fn00401E82()
l00401CF0:
	word32 r17_23
	word32 r3_26
	word32 r4_27
	word32 r6_29
	word32 r7_30
	word32 r8_31
	word32 r2_24 = seteuid(r0, out r3_26, out r4_27, out r6_29, out r7_30, out r8_31, out r17_23)
	branch r4_27 != 0<32> l00401CF8
l00401CF8:
	r2_24 = fn00401E7A(0x00411288<p32>, out r3_26, out r6_29, out r7_30, out r8_31, out r11, out r12, out r17_23)
	r4_27 = 0xFFFFFFFF<32>
l00401CF6:
	r3Out = r3_26
	r4Out = r4_27
	r6Out = r6_29
	r7Out = r7_30
	r8Out = r8_31
	r11Out = r11
	r12Out = r12
	r17Out = r17_23
	return r2_24
modify_capability_exit:


word32 drop_capabilities(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_run
// MayUse:  r0:[0..31]
// LiveOut: r3
// Trashed: hi lo r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: r11 r12 r13 r14 r15 r24 ra
drop_capabilities_entry:
	word32 r4
	word32 r6
	word32 r21
l00401D02:
	fn00401E82()
	word32 r4_21
	word32 r3_20 = setuid(r0, out r4_21)
	branch r4_21 != 0<32> l00401D0E
l00401D0E:
	word32 r3_112
	word32 r6_113
	word32 r7_114
	word32 r8_115
	word32 r11_116
	word32 r12_117
	word32 r17_118
	fn00401E7A(0x00411278<p32>, out r3_112, out r6_113, out r7_114, out r8_115, out r11_116, out r12_117, out r17_118)
	word32 r5_119
	word32 r6_120
	word32 r7_121
	fn00401E7E(out r5_119, out r6_120, out r7_121)
l00401D16_thunk_fill:
	return fill(r0, r4, r6, r21)
l00401D0C:
	return r3_20
drop_capabilities_exit:


word32 fill(word32 r0, word32 r4, word32 r6, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      drop_capabilities
// MayUse:  r0:[0..31] r21:[0..31] r4:[0..31] r6:[0..31]
// LiveOut: r3
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r21 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
fill_entry:
	ptr32 fp
l00401D18:
	word32 r16_23 = r4
l00401D20:
	word32 r4_26 = CONVERT(Mem15[r16_23:byte], byte, word32)
	branch r4_26 != 0<32> l00401D92
l00401D92:
	branch isxdigit(r4_26) != 0<32> l00401DA8
l00401D98:
	fn00402126(0x00411290<p32>, Mem15[0x00412EF0<p32>:word32])
	word32 r5_404
	word32 r6_405
	word32 r7_406
	fn00401E7E(out r5_404, out r6_405, out r7_406)
l00401DA8:
	r16_23 = r16_23 + 1<32>
l00401D24:
	word32 r18_119
	word32 r19_120
	word32 r4_130
	word32 r3_128 = __isoc99_sscanf(r0, r4, 0x004112C4<p32>, r6, r4, r21, out r4_130, out r18_119, out r19_120)
	word32 r6_136 = 0<32>
	branch r4_130 > 0<32> l00401DC0
l00401DC0:
	branch r19_120 + 0xFFFFFFF8<32> - r4_130 >=u r6_136 l00401DAC
l00401DAC:
	word32 r7_143 = 0<32>
l00401DAE:
	Mem153[r18_119 + (r7_143 + r6_136) + 8<32>:byte] = Mem148[fp - 0x60<32> + r7_143 * 4<32>:byte]
	r7_143 = r7_143 + 1<32>
	branch r7_143 != r4_130 l00401DAE
l00401DBE:
	r6_136 = r6_136 + r4_130
l00401DCA:
l00401D72:
	branch !__bit(Mem156[0x004544EC<p32>:word32], 4<32>) l00401D90
l00401D7C:
	word32 r30_398
	word32 r11_395
	word32 r22_396
	word32 r23_397
	fn0040212A(0x004112F8<p32>, out r11_395, out r22_396, out r23_397, out r30_398)
	word32 r17_162 = r18_119
l00401D84:
	branch r17_162 - r18_119 < r4_130 l00401DCC
l00401DCC:
	word32 r23_401
	word32 r30_402
	word32 r11_399
	word32 r22_400
	fn0040212A(0x00411304<p32>, out r11_399, out r22_400, out r23_401, out r30_402)
	r17_162 = r17_162 + 1<32>
l00401D8A:
	word32 r17_403
	r3_128 = putchar(0xA<32>, out r17_403)
l00401D90:
	return r3_128
fill_exit:


word32 __schedule_exit(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: hi lo r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__schedule_exit_entry:
l00401DDA:
	word32 r16_11 = r4
	branch Mem7[0x00454548<p32>:word32] != 0<32> l00401E4A
l00401DE6:
	word32 r6_13
	word32 r7_15
	branch Mem7[0x004544DC<p32>:word32] == 0<32> l00401E4E
l00401E4E:
	r6_13 = 0x3E8<32>
	r7_15 = Mem7[0x00430084<p32>:word32] *s 0x3E8<32>
l00401DEE:
	word32 r7_17 = Mem7[0x0043008C<p32>:word32]
	word32 r6_19 = Mem7[0x0045450C<p32>:word32]
	Mem21[0x00454548<p32>:word32] = r6_19 << 1<32>
	r7_15 = r7_17 *s 0x3E8<32>
	r6_13 = r6_19 << 1<32>
	branch r6_19 << 1<32> >=u r7_17 *s 0x3E8<32> l00401E12
l00401E0C:
	Mem23[0x00454548<p32>:word32] = r7_15
l00401E12:
	branch r4 < 0<32> l00401E28
l00401E24:
	branch r4 >=u r6_13 l00401E2A
l00401E28:
	r16_11 = r6_13
l00401E2A:
	setitimer()
l00401E4A:
	return r16_11
__schedule_exit_exit:


word32 print_timestamp(ptr32 & r11Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
//      pinger
//      gather_statistics
//      if_name2index
//      fn004033EA
// MayUse: 
// LiveOut: r11 r22 r23 r30 r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
print_timestamp_entry:
	ptr32 fp
	word32 r11
	word32 r22
	word32 r23
	word32 r30
	word32 r4
l00401E5C:
	branch __bit(Mem5[0x004544EC<p32>:word32], 0x13<32>) l00401E78
l00401E68:
	word32 r4_98
	word32 r6_99
	word32 r17_100
	fn004021B0(fp - 0x18<32>, out r4_98, out r6_99, out r17_100)
	r4 = fn0040212A(0x0041130C<p32>, out r11, out r22, out r23, out r30)
l00401E78:
	r11Out = r11
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r4
print_timestamp_exit:


word32 fn00401E7A(word32 r4, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      limit_capabilities
//      modify_capability
//      drop_capabilities
//      pinger
// MayUse:  r4:[0..31]
// LiveOut: r11 r12 r17 r2 r3 r6 r7 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401E7A_entry:
l00401E7A:
l00401E7A_thunk_perror:
	word32 r11_8
	word32 r12_9
	word32 r3_16
	word32 r6_19
	word32 r7_20
	word32 r8_21
	word32 r17_23
	word32 r5_31
	word32 r2_13 = perror(r4, out r3_16, out r5_31, out r6_19, out r7_20, out r8_21, out r11_8, out r12_9, out r17_23)
	r3Out = r3_16
	r6Out = r6_19
	r7Out = r7_20
	r8Out = r8_21
	r11Out = r11_8
	r12Out = r12_9
	r17Out = r17_23
	return r2_13
fn00401E7A_exit:


word32 fn00401E7E(ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      limit_capabilities
//      drop_capabilities
//      fill
//      setup
// MayUse: 
// LiveOut: r4 r5 r6 r7
// Trashed: r17 r25
// Preserved: sp
fn00401E7E_entry:
l00401E7E:
l00401E7E_thunk_exit:
	exit()
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	return <invalid>
fn00401E7E_exit:


word32 fn00401E82()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      limit_capabilities
//      modify_capability
//      drop_capabilities
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00401E82_entry:
l00401E82:
l00401E82_thunk_getuid:
	return getuid()
fn00401E82_exit:


word32 pinger(word32 r0, word32 r4, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r12 r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
pinger_entry:
	ptr32 fp
	word32 dwLoc28
	word32 dwLoc24
	word32 r12
l00401E86:
	word32 r16_17 = r4
	word32 r4_20 = 0x3E8<32>
	branch Mem13[0x004544B8<p32>:word32] != 0<32> l004020FC
l00401E98:
	word32 r7_21 = Mem13[0x004544D8<p32>:word32]
	branch r7_21 == 0<32> l00401EB4
l00401EA0:
	branch Mem13[0x004544E4<p32>:word32] < r7_21 l00401EB4
l00401EAA:
	branch Mem13[0x004314C8<p32>:word32] == 0<32> l004020FC
l00401EB4:
	word32 r17_106
	branch Mem13[0x891<32>:word32] != 0<32> l00401F8C
l00401F8C:
	word32 r4_37
	word32 r17_880
	word32 r6_879
	fn004021B0(fp - 0x28<32>, out r4_37, out r6_879, out r17_880)
	word32 r8_43 = Mem13[0x891<32>:word32]
	word32 r7_46 = 0x00454490<p32>
	word32 r9_51 = Mem13[0x00430088<p32>:word32]
	word32 r5_55 = Mem13[0x0043008C<p32>:word32]
	word32 r8_57 = r8_43 + (r4_37 - r8_43) *s 0x3E8<32>
	branch r5_55 != 0<32> l00401FD4
l00401FC0:
	branch r8_57 >= 0xA<32> l00401FD4
l00401FC4:
	branch in_flight(out r7_46) < r9_51 l00401FD4
l00401FD4:
	word32 r9_64 = r9_51 *s r5_55
	word32 r4_68 = Mem13[0x00454544<p32>:word32] + r8_57
	branch CONVERT(r4_68 < r9_64, bool, word32) != 0<32> l00401FE6
l00401FE2_1:
	r4_68 = r9_64
l00401FE6:
	branch r4_68 >= r5_55 l00401FEE
l00401FEE:
	Mem78[0x00454544<p32>:word32] = r4_68 - r5_55
	Mem83[0x891<32>:byte] = SLICE(r7_46, byte, 0)
	Mem87[0x00454491<p32>:word32] = r7_46
	r17_106 = dwLoc24
l00401FEA:
	r12Out = r12
	return r5_55 - r4_68
l00401FCC:
	r12Out = r12
	return 0xA<32> - r8_57
l00401EC4:
	word32 r4_881
	word32 r6_882
	fn004021B0(0x00454490<p32>, out r4_881, out r6_882, out r17_106)
	Mem120[0x00454544<p32>:word32] = (Mem13[0x00430088<p32>:word32] + 0xFFFFFFFF<32>) *s Mem13[0x0043008C<p32>:word32]
l00401EE0:
	branch __bit(Mem121[0x004544EC<p32>:word32], 0x14<32>) l00401F2A
l00401EEA:
	word32 r6_123 = Mem121[0x004544E4<p32>:word32]
	branch r6_123 <= 0<32> l00401F2A
l00401EF4:
	branch (1<32> << r6_123 & Mem121[0x00452340<p32> + __ext(r6_123, 5<32>, 0xB<32>) * 4<32>:word32]) != 0<32> l00401F2A
l00401F08:
	word32 r30_886
	word32 r23_885
	word32 r11_883
	word32 r22_884
	print_timestamp(out r11_883, out r22_884, out r23_885, out r30_886)
	word32 r30_895
	word32 r23_894
	word32 r5_888
	word32 r22_893
	word32 r6_889
	word32 r7_890
	word32 r11_891
	word32 r14_892
	word32 r4_887
	printf(0x0041131C<p32>, out r4_887, out r5_888, out r6_889, out r7_890, out r11_891, out r14_892, out r22_893, out r23_894, out r30_895)
	fflush_unlocked(Mem121[0x00412EF4<p32>:word32], out r16_17, out r17_106)
l00401F2A:
	word32 r4_200
	word32 r5_201
	word32 r8_203
	word32 r9_204
	word32 r10_205
	word32 r2_207
	word32 r3_208
	word32 r11_209
	word32 r13_211
	word32 r14_212
	word32 r15_213
	word32 r24_214
	call Mem189[r16_17:word32] (retsize: 0;)
		uses: r10:r10_205,r11:r11_209,r12:r12_210,r13:r13_211,r14:r14_212,r15:r15_213,r2:r2_207,r24:r24_214,r3:r3_208,r4:r17_193,r5:0x00432F40<p32>,r6:0x1F400<32>,r8:r8_203,r9:r9_204,Stack +0008:dwLoc28,Stack +000C:dwLoc24
		defs: r10:r10_205,r11:r11_209,r12:r12_210,r13:r13_211,r14:r14_212,r15:r15_213,r2:r2_207,r24:r24_214,r3:r3_208,r4:r4_200,r5:r5_201,r8:r8_203,r9:r9_204
	branch r4_200 == 0<32> l00402002
l00402002:
	Mem216[0x00454540<p32>:word32] = r0
	advance_ntransmitted()
	branch (Mem216[0x004544EC<p32>:word32] & 0x11<32>) != 1<32> l00402044
l0040201A:
	word32 r5_224 = Mem216[0x00430070<p32>:word32]
	branch Mem216[0x00430088<p32>:word32] >= r5_224 l00402034
l0040202A:
	branch Mem216[0x00430078<p32>:word32] < r5_224 l0040203C
l00402034:
	word32 r7_896
	branch in_flight(out r7_896) >= r5_224 l00402044
l0040203C:
	write_stdout(1<32>)
l00402044:
	word32 r4_249 = Mem216[0x0043008C<p32>:word32] - Mem216[0x00454544<p32>:word32]
	r12Out = r12
	return r4_249
l00401F40:
	branch r4_200 > 0<32> l00402054
l00402054:
	abort(r0)
l00401F44:
	word32 r18_335
	branch Mem189[fn004021AC():word32] == 0x29<32> l00402058
l00401F4C:
	branch Mem189[fn004021AC():word32] == 0xC<32> l00402058
l00402058:
	word32 r7_268 = Mem189[0x004544F4<p32>:word32]
	Mem271[0x00454544<p32>:word32] = r0
	word32 r6_269 = 0x61A7F<32>
	branch r7_268 <= 0x61A7F<32> l004020FE
l004020FE:
l0040206E:
	r6_269 = 0xC350<32>
l00402072:
	Mem280[0x004544F8<p32>:word32] = Mem271[0x004544F8<p32>:word32] + r6_269
	branch __bit(Mem280[0x004544EC<p32>:word32], 0xE<32>) l0040208E
l0040208A:
	update_interval()
l0040208E:
	word32 r7_289 = Mem280[0x0043008C<p32>:word32]
	r4_20 = 0xA<32>
	branch r7_289 < 0x16<32> l004020AA
l0040209A:
	r4_20 = r7_289 >> 1<32>
	branch CONVERT(r7_289 >> 1<32> < 0x1F5<32>, bool, word32) != 0<32> l004020AA
l004020A6_1:
	r4_20 = 0x1F4<32>
l004020AA:
	word32 r7_296 = Mem280[0x00454540<p32>:word32]
	word32 r6_298 = Mem280[0x00430084<p32>:word32]
	Mem299[0x00454540<p32>:word32] = r7_296 + 1<32>
	branch (r7_296 + 1<32>) *s r4_20 < r6_298 l004020FC
l00401F54:
	branch Mem189[fn004021AC():word32] == 0xB<32> l00402106
l00402106:
	Mem310[0x00454544<p32>:word32] = Mem189[0x00454544<p32>:word32] + Mem189[0x0043008C<p32>:word32]
	r12Out = r12
	return 0xA<32>
l00401F5C:
	word32 r4_320
	word32 r6_322
	word32 r8_323
	word32 r9_324
	word32 r10_325
	word32 r2_327
	word32 r3_328
	word32 r11_329
	word32 r13_331
	word32 r14_332
	word32 r15_333
	word32 r24_334
	call Mem189[r16_17 + 4<32>:word32] (retsize: 0;)
		uses: r10:r10_325,r11:r11_329,r12:r12_330,r13:r13_331,r14:r14_332,r15:r15_333,r2:r2_327,r24:r24_334,r3:r3_328,r4:r17_193,r5:r5_201,r6:r6_322,r8:r8_323,r9:r9_324,Stack +0008:dwLoc28,Stack +000C:dwLoc24
		defs: r10:r10_325,r11:r11_329,r12:r12_330,r13:r13_331,r14:r14_332,r15:r15_333,r2:r2_327,r24:r24_334,r3:r3_328,r4:r4_320,r6:r6_322,r8:r8_323,r9:r9_324
	r18_335 = r4_320
	branch r4_320 > 0<32> l004020C4
l004020C4:
	r18_335 = 0<32>
l00401F68:
	branch r4_320 != 0<32> l00401F84
l00401F6A:
	branch Mem189[0x00430080<p32>:word32] == 0<32> l00401F84
l00401F72:
	branch Mem189[fn004021AC():word32] != 0x16<32> l00401F84
l00401F7A:
	Mem342[0x00430080<p32>:word32] = r0
	fn004021AC()
l00401F84:
	branch Mem350[fn004021AC():word32] == 0<32> l00401F2A
l00401F8A:
l004020C6:
	advance_ntransmitted()
	branch r18_335 != 0<32> l004020E4
l004020CC:
	word32 r7_361 = Mem359[0x004544EC<p32>:word32]
	branch !__bit(r7_361, 4<32>) l004020E4
l004020D6:
	branch __bit(r7_361, 0<32>) l0040211E
l0040211E:
	word32 r17_902
	word32 r7_899
	word32 r11_901
	word32 r8_900
	word32 r6_898
	word32 r3_897
	fn00401E7A(0x00411340<p32>, out r3_897, out r6_898, out r7_899, out r8_900, out r11_901, out r12, out r17_902)
l004020DA:
	write_stdout(1<32>)
l004020E4:
	word32 r7_395 = Mem359[0x0043008C<p32>:word32]
	Mem405[0x00454544<p32>:word32] = r0
	word32 r6_396 = 0xA<32>
	branch CONVERT(r7_395 < 0xA<32>, bool, word32) != 0<32> l004020FA
l004020F6_1:
	r6_396 = r7_395
l004020FA:
	r4_20 = r6_396
l004020FC:
	r12Out = r12
	return r4_20
pinger_exit:


word32 fn00402126(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fill
//      sock_setbufs
//      setup
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402126_entry:
l00402126:
l00402126_thunk_fputs_unlocked:
	word32 r11_9
	word32 r3_24
	word32 r4_25
	word32 r5_26
	word32 r6_27
	word32 r8_28
	word32 r12_29
	fputs_unlocked(r4, r5, out r3_24, out r4_25, out r5_26, out r6_27, out r8_28, out r11_9, out r12_29)
	return r11_9
fn00402126_exit:


word32 fn0040212A(word32 r4, ptr32 & r11Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fill
//      if_name2index
// MayUse:  r4:[0..31]
// LiveOut: r11 r22 r23 r30 r4
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040212A_entry:
l0040212A:
l0040212A_thunk_printf:
	word32 r11_6
	word32 r22_12
	word32 r23_13
	word32 r30_17
	word32 r4_18
	word32 r5_28
	word32 r6_29
	word32 r7_30
	word32 r14_31
	printf(r4, out r4_18, out r5_28, out r6_29, out r7_30, out r11_6, out r14_31, out r22_12, out r23_13, out r30_17)
	r11Out = r11_6
	r22Out = r22_12
	r23Out = r23_13
	r30Out = r30_17
	return r4_18
fn0040212A_exit:


word32 sock_setbufs(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r5:[0..31]
// LiveOut: r11
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
sock_setbufs_entry:
	word32 r11
l0040212E:
	branch Mem12[0x004544FC<p32>:word32] != 0<32> l00402144
l0040213E:
	Mem18[0x004544FC<p32>:word32] = r5
l00402144:
	fn004023EE()
	word32 r16_38 = r5 *s Mem20[0x00430088<p32>:word32]
	branch r16_38 <= 0xFFFF<32> l004021A6
l004021A6:
l00402168:
l0040216A:
	fn004023EE()
	word32 r7_74
	branch getsockopt(out r7_74) != 0<32> l004021A4
l00402192:
	branch r7_74 >= r16_38 l004021A4
l00402198:
	r11 = fn00402126(0x00411350<p32>, Mem45[0x00412EF0<p32>:word32])
l004021A4:
	return r11
sock_setbufs_exit:


word32 fn004021AC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pinger
// MayUse: 
// LiveOut: r4
// Trashed: r25 r3 r4
// Preserved: sp
fn004021AC_entry:
l004021AC:
l004021AC_thunk___errno_location:
	word32 r4_6
	__errno_location(out r4_6)
	return r4_6
fn004021AC_exit:


word32 fn004021B0(word32 r4, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pinger
//      setup
//      gather_statistics
//      if_name2index
// MayUse:  r4:[0..31]
// LiveOut: r17 r3 r4 r6
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004021B0_entry:
l004021B0:
l004021B0_thunk_gettimeofday:
	word32 r4_6
	word32 r17_9
	word32 r6_13
	word32 r3_11 = gettimeofday(r4, out r4_6, out r6_13, out r17_9)
	r4Out = r4_6
	r6Out = r6_13
	r17Out = r17_9
	return r3_11
fn004021B0_exit:


word32 setup(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r3
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 ra sp
setup_entry:
	uint16 wLoc9E
l004021B4:
	word32 r7_11 = Mem9[0x004544EC<p32>:word32]
	branch (r7_11 & 3<32>) != 1<32> l004021CA
l004021C4:
	Mem16[0x0043008C<p32>:word32] = r0
l004021CA:
	word32 r5_18 = Mem17[0x00454514<p32>:word32]
	word32 r6_19 = Mem17[0x0043008C<p32>:word32]
	branch r5_18 == 0<32> l004021F4
l004021D8:
	r5_18 = 0xC7<32>
	branch r6_19 > 0xC7<32> l004021F4
l004021E0:
	fn004023F2()
l004021F0:
	fn00401E7E(out r5_18, out r6_19, out r7_11)
l004021F4:
	uint16 wLoc9E_484 = wLoc9E
	Mem39 = Mem17 (alias)
	branch r6_19 < r5_18 l00402216
l00402216:
	branch __bit(r7_11, 6<32>) l0040222E
l0040221E:
	fn004023EE()
l0040222E:
	branch __bit(Mem50[0x004544EC<p32>:word32], 7<32>) l0040224A
l00402238:
	fn004023EE()
l0040224A:
	branch !__bit(Mem50[0x004544EC<p32>:word32], 0xC<32>) l00402276
l00402254:
	branch fn004023EE() == 0<32> l00402276
l0040226A:
	fn00402126(0x004113F4<p32>, Mem94[0x00412EF0<p32>:word32])
l00402276:
	branch __bit(Mem129[0x004544EC<p32>:word32], 0x12<32>) l004022B6
l00402280:
	word32 r4_588
	word32 r12_593
	word32 r17_594
	word32 r11_592
	word32 r6_589
	word32 r7_590
	word32 r3_587
	word32 r8_591
	modify_capability(r0, 1<32>, out r3_587, out r4_588, out r6_589, out r7_590, out r8_591, out r11_592, out r12_593, out r17_594)
	fn004023EE()
	word32 r17_182
	word32 r8_599
	word32 r11_600
	word32 r6_597
	word32 r7_598
	word32 r4_596
	word32 r3_595
	word32 r12_601
	modify_capability(r0, 0<32>, out r3_595, out r4_596, out r6_597, out r7_598, out r8_599, out r11_600, out r12_601, out r17_182)
	branch r17_182 != 0xFFFFFFFF<32> l004022B6
l004022A4:
	fn004023F2()
l004022B6:
	word32 r6_202 = Mem129[0x0043008C<p32>:word32]
	branch r6_202 > 0x3E7<32> l004022E0
l004022CA:
	branch CONVERT(r6_202 < 0xA<32>, bool, word32) != 0<32> l004022D4
l004022D0_1:
l004022D4:
l004022E0:
	fn004023EE()
	branch CONVERT(Mem221[0x0043008C<p32>:word32] < 0xA<32>, bool, word32) != 0<32> l00402304
l00402300_1:
l00402304:
	branch fn004023EE() == 0<32> l00402340
l00402330:
	Mem270[0x004544EC<p32>:word32] = Mem256[0x004544EC<p32>:word32] | 0x800<32>
l00402340:
	word32 r7_272 = Mem271[0x004544EC<p32>:word32]
	word32 r7_273 = r7_272 & 8<32>
	word32 r5_274 = Mem271[0x00430074<p32>:word32]
	branch (r7_272 & 8<32>) == 0<32> l004023E8
l004023E8:
	branch r7_273 < r5_274 l004023DA
l004023DA:
	Mem279[r7_273 + 0x00432F40<p32> + 8<32>:byte] = SLICE(r7_273, byte, 0)
	r7_273 = r7_273 + 1<32>
l004023EC:
l00402352:
	branch Mem284[r4 + 4<32>:word32] != 3<32> l00402368
l00402358:
	word32 r4_289
	getpid(out r4_289)
	Mem298[0x004544C4<p32>:word32] = htons(r4_289 & 0xFFFF<32>)
l00402368:
	fn0040271C(2<32>, 0x00401C98<p32>)
	fn0040271C(0xE<32>, 0x00401C98<p32>)
	fn0040271C(3<32>, 0x00401C04<p32>)
	sigemptyset()
	sigprocmask(2<32>, 0<32>)
	word32 r4_602
	word32 r6_603
	word32 r17_604
	word32 r3_379 = fn004021B0(0x00454498<p32>, out r4_602, out r6_603, out r17_604)
	branch Mem386[0x004314C8<p32>:word32] == 0<32> l004023B2
l004023A0:
	wLoc9E_484 = 0<u16> (alias)
	r3_379 = setitimer()
l004023B2:
	branch isatty() == 0<32> l004023D8
l004023BA:
	word32 r4_420
	word32 r7_605
	r3_379 = ioctl(out r4_420, out r7_605)
	branch r4_420 == 0xFFFFFFFF<32> l004023D8
l004023CC:
	word32 r7_428 = CONVERT(wLoc9E_484, uint16, word32)
	branch r7_428 == 0<32> l004023D8
l004023D2:
	Mem429[0x00430070<p32>:word32] = r7_428
l004023D8:
	return r3_379
setup_exit:
l00402208:
	fn00402126(0x004113CC<p32>, Mem39[0x00412EF0<p32>:word32])


word32 fn004023EE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sock_setbufs
//      setup
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004023EE_entry:
l004023EE:
l004023EE_thunk_setsockopt:
	word32 r4_8
	word32 r3_14
	word32 r5_15
	word32 r7_16
	setsockopt(out r3_14, out r4_8, out r5_15, out r7_16)
	return r4_8
fn004023EE_exit:


void fn004023F2()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup
//      gather_statistics
// MayUse: 
// LiveOut:
// Trashed: r25 r6 r7
// Preserved: sp
fn004023F2_entry:
l004023F2:
l004023F2_thunk_fprintf:
	word32 r7_7
	fprintf(out r7_7)
	return
fn004023F2_exit:


word32 gather_statistics(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_parse_reply
//      ping6_parse_reply
// MayUse:  r10:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31]
// LiveOut: r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
gather_statistics_entry:
	ptr32 fp
	word32 dwLoc34
	word32 dwLoc38
l004023F6:
	Mem43[0x004544DC<p32>:word32] = Mem23[0x004544DC<p32>:word32] + 1<32>
	word32 r17_38 = r10
	word32 r20_42 = r4 + r5
	branch r9 != 0<32> l0040245C
l0040241A:
	word32 r7_44 = Mem43[0x004544E4<p32>:word32]
	word32 r5_45 = r7_44 - r7
	branch !__bit(r5_45, 0xF<32>) l0040245C
l00402428:
	branch (r5_45 & 0xFFFF<32>) < Mem43[0x00430078<p32>:word32] l0040243A
l00402432:
	Mem49[0x00430078<p32>:word32] = (r5_45 & 0xFFFF<32>) + 1<32>
l0040243A:
	word32 r4_52 = CONVERT(Mem51[0x91A<32>:uint16], uint16, word32)
	branch CONVERT(SLICE(r7 - r4_52, word16, 0), word16, int32) > 0<32> l00402458
l0040244C:
	branch (r7_44 & 0xFFFF<32>) - r4_52 <= 0x7FFF<32> l0040245C
l00402458:
	Mem63[0x91A<32>:byte] = SLICE(r7, byte, 0)
l0040245C:
	branch Mem64[0x00454508<p32>:word32] == 0<32> l004025DC
l00402468:
	branch r6 <u 0x10<32> l004025DC
l004025DC:
	branch r9 == 0<32> l0040257A
l0040246C:
	word32 r11_1325
	word32 r12_1326
	word32 r13_1327
	word32 r5_1320
	word32 r7_1321
	word32 r8_1322
	word32 r9_1323
	word32 r10_1324
	word32 r3_1319
	word32 r6_103
	memcpy(fp - 0x38<32>, r20_42, 8<32>, out r3_1319, out r5_1320, out r6_103, out r7_1321, out r8_1322, out r9_1323, out r10_1324, out r11_1325, out r12_1326, out r13_1327)
l004024C2:
	word32 r7_104 = Mem99[r17_38 + 4<32>:word32] - r6_103
	branch r7_104 >= 0<32> l00402478
l004024CE:
	Mem109[dwLoc34:word32] = Mem105[dwLoc34:word32] + 0xFFFFFFFF<32>
	Mem110[dwLoc34 + 4<i32>:word32] = r7_104 + 0xF4240<32>
	r7_104 = r7_104 + 0xF4240<32>
l00402478:
	word32 r8_117 = Mem112[dwLoc34:word32] - r7_104
	Mem119[dwLoc38:word32] = r8_117
	word32 r22_122 = r8_117 *s 0xF4240<32> + Mem119[dwLoc38 + 4<32>:word32]
	branch r22_122 >= 0<32> l004024E0
l00402494:
	fn004023F2()
	branch !__bit(Mem119[0x004544EC<p32>:word32], 0xC<32>) l004024DE
l004024DE:
	r22_122 = 0<32>
l004024E0:
	branch r9 != 0<32> l004025DE
l004025DE:
	Mem139[0x004544CC<p32>:word32] = Mem134[0x004544CC<p32>:word32] + 1<32>
	Mem142[0x004544DC<p32>:word32] = Mem139[0x004544DC<p32>:word32] + 0xFFFFFFFF<32>
l004024E4:
	word32 r7_146 = Mem119[0x882<32>:word32]
	word32 r17_148 = r7_146 + r22_122
	word32 r7_151 = CONVERT(r17_148 <u r7_146, bool, word32) + (Mem119[0x886<32>:word32] + (r22_122 >> 0x1F<32>))
	Mem152[0x882<32>:byte] = SLICE(r17_148, byte, 0)
	Mem153[0x886<32>:byte] = SLICE(r7_151, byte, 0)
	word32 r7_157 = Mem153[0x88A<32>:word32]
	word32 r6_159 = r7_157 + r22_122 *s r22_122
	word32 r7_162 = CONVERT(r6_159 <u r7_157, bool, word32) + (Mem153[0x88E<32>:word32] + SLICE(r22_122 *s64 r22_122, word32, 32))
	Mem163[0x88A<32>:byte] = SLICE(r6_159, byte, 0)
	Mem164[0x88E<32>:byte] = SLICE(r7_162, byte, 0)
	branch r22_122 >= Mem164[0x0043007C<p32>:word32] l0040253E
l00402538:
	Mem166[0x0043007C<p32>:word32] = r22_122
l0040253E:
	branch Mem167[0x0045450C<p32>:word32] >= r22_122 l0040254E
l00402548:
	Mem170[0x0045450C<p32>:word32] = r22_122
l0040254E:
	word32 r6_172 = Mem171[0x004544F4<p32>:word32]
	word32 r7_174 = r22_122 << 3<32>
	branch r6_172 == 0<32> l00402566
l0040255A:
	r7_174 = r22_122 - r7_174 + r6_172
l00402566:
	Mem181[0x004544F4<p32>:word32] = r7_174
	branch __bit(Mem181[0x004544EC<p32>:word32], 0xE<32>) l0040257A
l00402576:
	update_interval()
l0040257A:
	word32 r7_200 = 0x00452340<p32> + ((r7 >>u 5<32>) << 2<8>)
	word32 r16_202 = 1<32> << r7
	word32 r6_204 = Mem203[r7_200:word32]
	branch (r6_204 & r16_202) == 0<32> l004025FE
l004025FE:
	Mem207[r7_200:word32] = r16_202 | r6_204
l004025FA:
l00402592:
	Mem211[0x004544E0<p32>:word32] = Mem203[0x004544E0<p32>:word32] + 1<32>
	Mem214[0x004544DC<p32>:word32] = Mem211[0x004544DC<p32>:word32] + 0xFFFFFFFF<32>
l004025AE:
	Mem219[0x004314C4<p32>:word32] = Mem215[0x00430080<p32>:word32]
	word32 r16_218 = 1<32>
	word32 r7_220 = Mem219[0x004544EC<p32>:word32]
	branch !__bit(r7_220, 4<32>) l004025D8
l004025C6:
	r16_218 = r7_220 & 1<32>
	branch (r7_220 & 1<32>) == 0<32> l0040260C
l0040260C:
	word32 r11_1330
	word32 r22_1331
	word32 r23_1332
	word32 r30_1333
	print_timestamp(out r11_1330, out r22_1331, out r23_1332, out r30_1333)
	word32 r23_266
	word32 r7_274
	word32 r30_1339
	word32 r14_1338
	word32 r4_1334
	word32 r5_1335
	word32 r11_1337
	word32 r6_1336
	word32 r22_265
	printf(0x004114A0<p32>, out r4_1334, out r5_1335, out r6_1336, out r7_274, out r11_1337, out r14_1338, out r22_265, out r23_266, out r30_1339)
	branch r7_274 == 0<32> l00402622
l0040261E:
	call r7_274 (retsize: 0;)
		uses: r4:r23_266
		defs: r22:r22_296
l00402622:
	branch r8 < 0<32> l0040262E
l00402626:
	word32 r30_1347
	word32 r6_1342
	word32 r11_1344
	word32 r7_1343
	word32 r14_1345
	word32 r23_1346
	word32 r5_1341
	word32 r4_1340
	printf(0x004114B4<p32>, out r4_1340, out r5_1341, out r6_1342, out r7_1343, out r11_1344, out r14_1345, out r22_265, out r23_1346, out r30_1347)
l0040262E:
	branch Mem219[0x00430074<p32>:word32] + 7<32> < r6 l00402646
l00402646:
	branch Mem219[0x00454508<p32>:word32] == 0<32> l00402668
l0040264E:
	branch r22_265 <= 0x1869F<32> l004026CA
l004026CA:
	word32 r4_358
	branch r22_265 <= 0x270F<32> l004026EE
l004026EE:
	branch r22_265 <= 0x3E7<32> l00402710
l00402710:
	r4_358 = 0x00411504<p32>
l004026F6:
	r4_358 = 0x004114F0<p32>
l004026D2:
	r4_358 = 0x004114DC<p32>
l004026EA:
	word32 r14_1361
	word32 r11_1360
	word32 r22_1362
	fn004029C6(r4_358, out r11_1360, out r14_1361, out r22_1362)
l00402658:
	word32 r4_1348
	word32 r6_1350
	word32 r7_1351
	word32 r14_1353
	word32 r30_1356
	word32 r22_1354
	word32 r23_1355
	word32 r11_1352
	word32 r5_1349
	printf(0x004114CC<p32>, out r4_1348, out r5_1349, out r6_1350, out r7_1351, out r11_1352, out r14_1353, out r22_1354, out r23_1355, out r30_1356)
l00402668:
	branch dwArg00 == 0<32> l00402670
l0040266A:
	word32 r11_1357
	word32 r14_1358
	word32 r22_1359
	fn004029C6(0x00411518<p32>, out r11_1357, out r14_1358, out r22_1359)
l00402670:
	branch r9 == 0<32> l00402678
l00402672:
	word32 r14_1364
	word32 r11_1363
	word32 r22_1365
	fn004029C6(0x00411520<p32>, out r11_1363, out r14_1364, out r22_1365)
l00402678:
	word32 r4_480 = Mem219[0x00430074<p32>:word32]
	word32 r5_481 = 8<32>
l00402680:
	branch r5_481 >= r4_480 l004025D8
l00402684:
	branch CONVERT(Mem219[r5_481 + 0x00432F40<p32> + 8<32>:byte], byte, word32) == CONVERT(Mem219[r20_42 + r5_481:byte], byte, word32) l00402718
l00402718:
	r5_481 = r5_481 + 1<32>
l00402698:
	word32 r22_1368
	word32 r11_1366
	word32 r14_1367
	fn004029C6(0x00411534<p32>, out r11_1366, out r14_1367, out r22_1368)
	word32 r17_492 = 8<32>
l004026A0:
	branch r17_492 >= Mem219[0x00430074<p32>:word32] l004025D8
l004026AA:
	branch r17_492 % 0x20<32> != 8<32> l004026BC
l004026B4:
	word32 r23_1379
	word32 r22_1378
	word32 r30_1380
	word32 r5_1373
	word32 r7_1375
	word32 r6_1374
	word32 r4_1372
	word32 r14_1377
	word32 r11_1376
	printf(0x00411568<p32>, out r4_1372, out r5_1373, out r6_1374, out r7_1375, out r11_1376, out r14_1377, out r22_1378, out r23_1379, out r30_1380)
l004026BC:
	word32 r14_1370
	word32 r22_1371
	word32 r11_1369
	fn004029C6(0x00411570<p32>, out r11_1369, out r14_1370, out r22_1371)
	r17_492 = r17_492 + 1<32>
l0040263A:
	puts(0x004114BC<p32>)
	r16_218 = 1<32>
l004025CA:
	word32 r5_584
	branch r9 != 0<32> l00402604
l00402604:
	r5_584 = 2<32>
l004025CC:
	r5_584 = 3<32>
l004025D2:
	write_stdout(r5_584)
	r16_218 = 0<32>
l004025D8:
	return r16_218
gather_statistics_exit:
l004024AC:
	word32 r6_1329
	word32 r4_1328
	fn004021B0(dwLoc38, out r4_1328, out r6_1329, out r17_38)
	Mem652[0x004544EC<p32>:word32] = Mem119[0x004544EC<p32>:word32] | 0x1000<32>
	r6_103 = 0x1000<32>


void fn0040271C(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040271C_entry:
l0040271C:
l0040271C_thunk_set_signal:
	set_signal(r4, r5)
	return
fn0040271C_exit:


void finish(word32 r19, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
// MayUse:  r19:[0..31] r21:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
finish_exit:
finish_entry:
	ptr32 fp
l00402720:
	word32 sp_24 = fp - 80<i32>
	word32 r20_245 = Mem23[0x00454491<p32>:word32] - Mem23[0x0045449C<p32>:word32]
	branch r20_245 >= 0<32> l00402746
l0040273E:
	r20_245 = r20_245 + 0xF4240<32>
l00402746:
	fn00402A96(0xA<32>)
	word32 r17_711
	word32 r16_51
	fflush_unlocked(Mem23[0x00412EF4<p32>:word32], out r16_51, out r17_711)
	word32 r22_714
	word32 r14_713
	word32 r11_712
	fn004029C6(0x00411578<p32>, out r11_712, out r14_713, out r22_714)
	word32 r14_716
	word32 r22_717
	word32 r11_715
	fn004029C6(0x00411594<p32>, out r11_715, out r14_716, out r22_717)
	word32 r22_113
	word32 r11_107
	word32 r14_110
	word32 r3_117 = fn004029C6(0x004115B0<p32>, out r11_107, out r14_110, out r22_113)
	branch Mem23[0x004544E0<p32>:word32] == 0<32> l00402790
l0040278A:
	r3_117 = fn004029C6(0x004115C0<p32>, out r11_107, out r14_110, out r22_113)
l00402790:
	branch Mem23[0x004544CC<p32>:word32] == 0<32> l0040279E
l00402798:
	r3_117 = fn004029C6(0x004115D4<p32>, out r11_107, out r14_110, out r22_113)
l0040279E:
	branch Mem23[0x004544D0<p32>:word32] == 0<32> l004027AC
l004027A6:
	r3_117 = fn004029C6(0x004115E8<p32>, out r11_107, out r14_110, out r22_113)
l004027AC:
	word32 r6_191 = Mem23[0x004544E4<p32>:word32]
	branch r6_191 == 0<32> l004027E6
l004027B4:
	word32 r4_194 = r6_191 - Mem23[0x004544DC<p32>:word32]
	word32 r5_719
	word32 r11_720
	word32 r4_718
	fn00402A9A(r3_117, r4_194 *s 0x64<32>, SLICE(r4_194 *s64 0x64<32>, word32, 32), r6_191, r6_191 >> 0x1F<32>, out r4_718, out r5_719, out r11_720)
	word32 r11_721
	word32 r14_722
	word32 r22_723
	fn004029C6(0x004115F8<p32>, out r11_721, out r14_722, out r22_723)
	fn004029C6(0x0041160C<p32>, out r11_107, out r14_110, out r22_113)
l004027E6:
	word32 r3_324
	word32 r18_342
	word32 r3_274 = fn00402A96(0xA<32>)
	word32 r17_282 = Mem23[0x004544DC<p32>:word32]
	branch r17_282 == 0<32> l00402908
l004027F8:
	branch Mem23[0x00454508<p32>:word32] == 0<32> l00402908
l00402802:
	word32 r17_286 = r17_282 + Mem23[0x004544E0<p32>:word32]
	word32 r4_301
	word32 r5_302
	word32 r11_724
	word32 r3_300 = fn00402A9A(r3_274, Mem23[0x882<32>:word32], Mem23[0x886<32>:word32], r17_286, r17_286 >> 0x1F<32>, out r4_301, out r5_302, out r11_724)
	Mem309[0x882<32>:byte] = SLICE(r4_301, byte, 0)
	Mem310[0x886<32>:byte] = SLICE(r5_302, byte, 0)
	word32 r4_325
	word32 r5_326
	r3_324 = fn00402A9A(r3_300, Mem310[0x88A<32>:word32], Mem310[0x88E<32>:word32], r17_286, r17_286 >> 0x1F<32>, out r4_325, out r5_326, out r11_107)
	Mem334[0x88A<32>:byte] = SLICE(r4_325, byte, 0)
	Mem335[0x88E<32>:byte] = SLICE(r5_326, byte, 0)
	r21 = r4_325 - r4_301 *s r4_301
	r19 = r4_301
	r22_113 = r5_302
	word32 r17_340 = r5_326 - (SLICE(r4_301 *u64 r4_301, word32, 32) + (r5_302 *s r4_301 << 1<8>)) - CONVERT(r4_325 <u r21, bool, word32)
	branch r17_340 > 0<32> l00402868
l00402860:
	branch r17_340 != 0<32> l004029C2
l00402864:
	branch r21 == 0<32> l004029C2
l00402868:
	r18_342 = r21
	word32 r23_344 = r17_340
	word32 r4_345 = 0xFFFFFFFF<32>
	word32 r7_346 = 0x7FFFFFFF<32>
l004028A4:
	branch r23_344 < r7_346 l00402876
l004028A8:
	branch r7_346 != r23_344 l004028B0
l004028AC:
	branch r18_342 <u r4_345 l00402876
l00402876:
	word32 r6_378 = r4_372 + r18_342
	word32 r5_381 = CONVERT(r6_378 <u r4_372, bool, word32) + (r5_373 + r23_344)
	word32 r6_384 = (r5_381 >>u 0x1F<32>) + r6_378
	word32 r5_387 = CONVERT(r6_384 <u r5_381 >>u 0x1F<32>, bool, word32) + r5_381
	word32 r4_372
	word32 r5_373
	r3_324 = fn00402A9A(r3_324, r21, r17_340, r18_342, r23_344, out r4_372, out r5_373, out r11_107)
	r4_345 = r18_342
	r7_346 = r23_344
	r23_344 = r5_387 >> 1<32>
	r18_342 = r5_387 << 0x1F<32> | r6_384 >>u 1<32>
l004028B0:
	Mem407[sp_24 + 24<i32>:word32] = Mem393[0x0045450C<p32>:word32] % 0x3E8<32>
	Mem408[sp_24 + 28<i32>:word32] = r11_107
	__moddi3(r19, r22_113, 0x3E8<32>, 0<32>, r14_110)
	r21 = Mem408[0x0043007C<p32>:word32]
	word32 r5_732
	word32 r11_733
	word32 r4_731
	fn00402A9A(r3_324, r19, r22_113, 0x3E8<32>, 0<32>, out r4_731, out r5_732, out r11_733)
	Mem444[sp_24:word32] = r18_342 % 0x3E8<32>
	r3_274 = fn004029C6(0x0041161C<p32>, out r11_107, out r14_110, out r22_113)
l00402908:
	branch Mem473[0x00430078<p32>:word32] < 2<32> l0040291E
l00402912:
	word32 r30_730
	word32 r23_729
	word32 r6_727
	word32 r7_728
	word32 r4_725
	word32 r5_726
	r3_274 = printf(0x00411660<p32>, out r4_725, out r5_726, out r6_727, out r7_728, out r11_107, out r14_110, out r22_113, out r23_729, out r30_730)
l0040291E:
	branch Mem473[0x004544DC<p32>:word32] == 0<32> l0040299E
l00402926:
	branch Mem473[0x0043008C<p32>:word32] == 0<32> l0040293C
l0040292E:
	branch (Mem473[0x004544EC<p32>:word32] & 0x4001<32>) == 0<32> l0040299E
l0040293C:
	word32 r6_505 = Mem473[0x004544E4<p32>:word32]
	branch r6_505 < 2<32> l0040299E
l00402946:
	word32 r5_513 = r16_51 *s 0xF4240<32>
	word32 r4_521 = r5_513 + r20_245
	r16_51 = SLICE(r16_51 *s64 0xF4240<32>, word32, 32) + (r20_245 >> 0x1F<32>)
	word32 r5_735
	word32 r11_736
	word32 r4_734
	fn00402A9A(r3_274, r4_521, CONVERT(r4_521 <u r5_513, bool, word32) + r16_51, r6_505 + 0xFFFFFFFF<32>, r6_505 + 0xFFFFFFFF<32> >> 0x1F<32>, out r4_734, out r5_735, out r11_736)
	word32 r5_738
	word32 r6_739
	word32 r7_740
	word32 r23_741
	word32 r30_742
	word32 r4_737
	printf(0x0041166C<p32>, out r4_737, out r5_738, out r6_739, out r7_740, out r11_107, out r14_110, out r22_113, out r23_741, out r30_742)
l0040299E:
	r3_324 = fn00402A96(0xA<32>)
	branch Mem473[0x004544DC<p32>:word32] == 0<32> l004029BE
l004029AC:
	branch Mem473[0x004314C8<p32>:word32] == 0<32> l004029BE
l004029B4:
l004029BE:
	exit()
	sp_24 = <invalid>
l004029C2:
	r18_342 = r21


word32 fn004029C6(word32 r4, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      gather_statistics
//      finish
// MayUse:  r4:[0..31]
// LiveOut: r11 r14 r22 r3
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004029C6_entry:
l004029C6:
l004029C6_thunk_printf:
	word32 r11_6
	word32 r14_9
	word32 r22_12
	word32 r4_27
	word32 r5_28
	word32 r6_29
	word32 r7_30
	word32 r23_31
	word32 r30_32
	word32 r3_16 = printf(r4, out r4_27, out r5_28, out r6_29, out r7_30, out r11_6, out r14_9, out r22_12, out r23_31, out r30_32)
	r11Out = r11_6
	r14Out = r14_9
	r22Out = r22_12
	return r3_16
fn004029C6_exit:


word32 status(word32 r0, word32 r3)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
// MayUse:  r0:[0..31] r3:[0..31]
// LiveOut: r17
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r10 r11 r12 r13 r16 ra sp
status_entry:
l004029CA:
	word32 r16_11 = Mem9[0x004544E4<p32>:word32]
	Mem14[0x00454500<p32>:word32] = r0
	word32 r17_15 = Mem14[0x004544DC<p32>:word32]
	branch r16_11 == 0<32> l004029F6
l004029E2:
	word32 r8_16 = r16_11 - r17_15
	word32 r4_148
	word32 r5_149
	word32 r11_150
	r3 = fn00402A9A(r3, r8_16 *s 0x64<32>, SLICE(r8_16 *s64 0x64<32>, word32, 32), r16_11, r16_11 >> 0x1F<32>, out r4_148, out r5_149, out r11_150)
l004029F6:
	word32 r7_147
	fprintf(out r7_147)
	word32 r5_105 = 0x0041168C<p32>
	word32 r6_53 = Mem43[0x004544DC<p32>:word32]
	branch r6_53 == 0<32> l00402A8A
l00402A14:
	branch Mem43[0x00454508<p32>:word32] == 0<32> l00402A8A
l00402A1C:
	word32 r6_57 = r6_53 + Mem43[0x004544E0<p32>:word32]
	word32 r4_151
	word32 r5_152
	word32 r11_153
	fn00402A9A(r3, Mem43[0x882<32>:word32], Mem43[0x886<32>:word32], r6_57, r6_57 >> 0x1F<32>, out r4_151, out r5_152, out r11_153)
	word32 r7_154
	fprintf(out r7_154)
	r5_105 = 0x004116A8<p32>
l00402A8A:
l00402A92_thunk_fputc:
	word32 r17_115
	word32 r3_155
	fputc(0xA<32>, r5_105, out r3_155, out r17_115)
	return r17_115
status_exit:


word32 fn00402A96(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      finish
// MayUse:  r4:[0..31]
// LiveOut: r3
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402A96_entry:
l00402A96:
l00402A96_thunk_putchar:
	word32 r17_15
	return putchar(r4, out r17_15)
fn00402A96_exit:


word32 fn00402A9A(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      finish
//      status
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11 r3 r4 r5
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402A9A_entry:
l00402A9A:
l00402A9A_thunk___divdi3:
	word32 r11_10
	word32 r4_14
	word32 r5_15
	word32 r3_22 = __divdi3(r3, r4, r5, r6, r7, out r4_14, out r5_15, out r11_10)
	r4Out = r4_14
	r5Out = r5_15
	r11Out = r11_10
	return r3_22
fn00402A9A_exit:


void main_loop(word32 r0, word32 r3, word32 r4, word32 r5, word32 r19, word32 r21)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r0:[0..31] r19:[0..31] r21:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
main_loop_exit:
main_loop_entry:
	ptr32 fp
	byte bLoc10BD
l00402A9E:
	word32 r17_147 = r4
l00402AAC:
	branch Mem28[0x004544B8<p32>:word32] != 0<32> l00402C92
l00402AB6:
	word32 r6_30 = Mem28[0x004544D8<p32>:word32]
	branch r6_30 == 0<32> l00402AD0
l00402ABE:
	branch Mem28[0x004544DC<p32>:word32] + Mem28[0x004544D0<p32>:word32] >= r6_30 l00402C92
l00402AD0:
	branch Mem28[0x004314C8<p32>:word32] == 0<32> l00402AE2
l00402AD8:
	branch Mem28[0x004544D0<p32>:word32] != 0<32> l00402C92
l00402C92:
	finish(r19, r21)
l00402AE2:
	branch Mem28[0x00454500<p32>:word32] == 0<32> l00402AEC
l00402AEA:
	r17_147 = status(r0, r3)
l00402AEC:
	word32 r12_73
	word32 r4_67 = pinger(r0, r17_147, out r12_73)
	word32 r7_88 = Mem28[0x004544D8<p32>:word32]
	word32 r20_103 = r4_67
	branch r7_88 == 0<32> l00402B14
l00402AFC:
	branch Mem28[0x004544E4<p32>:word32] < r7_88 l00402B14
l00402B06:
	branch Mem28[0x004314C8<p32>:word32] != 0<32> l00402B14
l00402B0E:
	r20_103 = __schedule_exit(r4_67)
l00402B14:
	branch r20_103 <= 0<32> l00402AEC
l00402B18:
	branch (Mem28[0x004544EC<p32>:word32] & 0x4800<32>) != 0<32> l00402BA4
l00402B26:
	word32 r6_109 = Mem28[0x0043008C<p32>:word32]
	word32 r5_110 = 0xA<32>
	branch CONVERT(r6_109 < 0xA<32>, bool, word32) != 0<32> l00402B36
l00402B32_1:
	r5_110 = r6_109
l00402B36:
	branch r20_103 < r5_110 l00402BA4
l00402BA4:
	word32 r4_160
	word32 r7_673
	word32 r4_116 = in_flight(out r7_673)
	r21 = 0x3E8<32>
	r19 = r4_116
	word32 r7_674
	word32 r17_675
	branch 0x3E8<32> % fn00402CEE(2<32>, r12_73, out r7_674, out r17_675) != 0<32> l00402BDC
l00402BDC:
	word32 r7_154
	fn00402CEE(2<32>, r12_73, out r7_154, out r17_147)
	r4_160 = 0<32>
	branch r20_103 >= r7_154 l00402BC8
l00402BF0:
	word32 r7_676
	r4_160 = CONVERT(fn00402CEE(2<32>, r12_73, out r7_676, out r17_147) *s r20_103 < 0x3E9<32>, bool, word32)
l00402BB8:
	word32 r7_193
	fn00402CEE(2<32>, r12_73, out r7_193, out r17_147)
	r4_160 = CONVERT(r7_193 < r20_103, bool, word32) ^ 1<32>
l00402BC8:
	branch r4_160 == 0<32> l00402C96
l00402BCC:
	r20_103 = 0xA<32>
	branch r4_116 != 0<32> l00402C96
l00402C96:
	branch (Mem28[0x004544EC<p32>:word32] & 0x4800<32>) != 0<32> l00402CAE
l00402CA4:
	branch Mem28[0x0043008C<p32>:word32] == 0<32> l00402B3A
l00402CAE:
	word32 r4_243
	word32 r7_665
	r3 = poll(r20_103, out r4_243, out r7_665)
	uint16 wLoc10BE_641 = SEQ(bLoc10BD, 0<8>)
	branch r4_243 <= 0<32> l00402AAC
l00402CCA:
	branch (CONVERT(wLoc10BE_641, uint16, word32) & 9<32>) == 0<32> l00402AAC
l00402CD4:
l00402BD4:
	sched_yield()
l00402B3A:
l00402B3C:
	word32 r6_383
	word32 r5_381
	word32 r3_489
	word32 r3_435
	word32 r3_386
	word32 r5_291
	word32 r6_292
	word32 r4_290 = recvmsg(out r5_291, out r6_292)
	r19 = r4_290
	branch r4_290 >= 0<32> l00402C06
l00402C06:
	r17_147 = 0x1000<32>
	word32 r8_298 = 0<32>
	branch r4_290 <u 0xC<32> l00402C4E
l00402C0E:
	word32 r7_301 = r20_103
l00402C12:
	branch r7_680 == 0<32> l00402C4E
l00402C4E:
	branch __bit(Mem285[0x004544EC<p32>:word32], 0xC<32>) l00402C7E
l00402C7E:
	branch r8_298 != 0<32> l00402C64
l00402C82:
	word32 r4_318
	word32 r7_679
	ioctl(out r4_318, out r7_679)
	branch r4_318 != 0<32> l00402C58
l00402C90:
l00402C58:
	word32 r4_677
	word32 r6_678
	gettimeofday(fp + 0xFFFFEF3C<32>, out r4_677, out r6_678, out r17_147)
l00402C60:
l00402C64:
	r20_103 = Mem285[r17_147 + 2<32>:word32]
	word32 r4_380
	call r20_103 (retsize: 0;)
		uses: r3:r3_386,r4:r5,r5:fp + 0xFFFFEF44<32>,r6:r4_290,r7:fp + 0xFFFFEF60<32>,Stack +0013:bLoc10BD_652
		defs: r3:r3_386,r4:r4_380,r5:r5_381,r6:r6_383
	r3 = r3_386
	r3 = r3_386
	branch r4_380 != 0<32> l00402B96
l00402C14:
	r21 = Mem285[r7_680 + 1<32>:word32]
	word32 r6_398 = Mem285[r7_680:word32]
	branch r21 != 0xFFFF<32> l00402C46
l00402C20:
	branch Mem285[r7_680 + 8<32>:word32] != 0x1D<32> l00402C46
l00402C26:
	branch r6_398 <u 0x14<32> l00402C46
l00402C46:
	branch r6_398 >=u 0xC<32> l00402C2E
l00402C2A:
	r8_298 = r7_680 + 0xC<32>
l00402C2E:
	word32 r6_411 = __ins(r6_398 + 3<32>, 0<32>, 0<32>, 1<32>)
	r21 = r6_411 + 0xC<32>
	r7_301 = r7_680 + r6_411
	r7_680 = r7_301
	branch r6_411 + 0xC<32> <u (r20_103 + r4_290) - r7_680 l00402C12
l00402C44:
l00402C4A:
	r7_301 = 0<32>
l00402B76:
	word32 r4_420
	r3 = fn00402CEA(out r4_420)
	branch Mem285[r4_420:word32] == 0xB<32> l00402AAC
l00402B7E:
	word32 r4_424
	r3 = fn00402CEA(out r4_424)
	branch Mem285[r4_424:word32] == 4<32> l00402AAC
l00402B86:
	word32 r7_427 = Mem285[r17_147 + 4<32>:word32]
	word32 r4_429
	call r7_427 (retsize: 0;)
		uses: r3:r3_435,r4:r5,r5:r5_291,r6:r6_292,r7:r7_427,Stack +0013:bLoc10BD_652
		defs: r3:r3_435,r4:r4_429,r5:r5_430,r6:r6_432
	r3 = r3_435
	branch r4_429 != 0<32> l00402C74
l00402B90:
	word32 r4_447
	r3 = fn00402CEA(out r4_447)
	branch Mem285[r4_447:word32] != 0<32> l00402BFC
l00402BFC:
	word32 r7_669
	word32 r5_667
	word32 r6_668
	word32 r11_671
	word32 r8_670
	word32 r12_672
	perror(0x004116E8<p32>, out r3, out r5_667, out r6_668, out r7_669, out r8_670, out r11_671, out r12_672, out r17_147)
l00402B96:
	branch Mem285[r5 + 4<32>:word32] != 3<32> l00402C74
l00402B9C:
	word32 r7_473 = Mem285[r17_147 + 0xC<32>:word32]
	call r7_473 (retsize: 0;)
		uses: r3:r3_489,r4:r5,r5:r5_480,r6:r6_481,r7:r7_473,Stack +0013:bLoc10BD_652
		defs: r3:r3_489
	r3 = r3_489
l00402C74:
	word32 r7_666
	branch in_flight(out r7_666) != 0<32> l00402BD8
l00402BD8:
l00402C7C:


word32 is_ours(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      ping4_parse_reply
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r7
// Preserved: sp
is_ours_entry:
l00402CD6:
	word32 r4_11 = 1<32>
	branch Mem0[r4 + 4<32>:word32] == 1<32> l00402CE8
l00402CDC:
	r4_11 = CONVERT((Mem0[0x004544C4<p32>:word32] ^ r5) <u 1<32>, bool, word32)
l00402CE8:
	return r4_11
is_ours_exit:


word32 fn00402CEA(ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
// MayUse: 
// LiveOut: r3 r4
// Trashed: r25 r3 r4
// Preserved: sp
fn00402CEA_entry:
l00402CEA:
l00402CEA_thunk___errno_location:
	word32 r4_6
	word32 r3_5 = __errno_location(out r4_6)
	r4Out = r4_6
	return r3_5
fn00402CEA_exit:


word32 fn00402CEE(word32 r4, word32 r12, ptr32 & r7Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
// MayUse:  r12:[0..31] r4:[0..31]
// LiveOut: r17 r4 r7
// Trashed: hi lo r10 r11 r13 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00402CEE_entry:
l00402CEE:
l00402CEE_thunk_sysconf:
	word32 r7_9
	word32 r17_16
	word32 r4_8 = sysconf(r4, r12, out r7_9, out r17_16)
	r7Out = r7_9
	r17Out = r17_16
	return r4_8
fn00402CEE_exit:


void niquery_option_help_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      niquery_option_handler
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
niquery_option_help_handler_entry:
l00402D00:
	word32 r5_51
	word32 r6_52
	fn00403098(0x004116F8<p32>, Mem5[0x00412EF0<p32>:word32], out r5_51, out r6_52)
	fn004030A0()
l00402D10_thunk_niquery_option_subject_name_handler:
	niquery_option_subject_name_handler()
	return
niquery_option_help_handler_exit:


void niquery_option_subject_name_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      niquery_option_help_handler
// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
niquery_option_subject_name_handler_entry:
l00402D12:
	word32 r5_49
	word32 r6_50
	fn00403098(0x004117DC<p32>, Mem5[0x00412EF0<p32>:word32], out r5_49, out r6_50)
	fn004030A0()
l00402D22_thunk_niquery_set_qtype:
	niquery_set_qtype(3<32>)
	return
niquery_option_subject_name_handler_exit:


word32 niquery_set_qtype(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      niquery_option_subject_name_handler
//      niquery_option_ipv4_flag_handler
//      niquery_option_ipv4_handler
//      niquery_option_ipv6_flag_handler
//      niquery_option_ipv6_handler
//      niquery_option_name_handler
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_set_qtype_entry:
l00402D24:
	word32 r7_7 = Mem5[0x00430214<p32>:word32]
	branch r7_7 < 0<32> l00402D3E
l00402D30:
	branch r4 == r7_7 l00402D3E
l00402D3E:
	Mem10[0x00430214<p32>:word32] = r4
	return 0<32>
l00402D32:
	puts(0x0041180C<p32>)
	return 0xFFFFFFFF<32>
niquery_set_qtype_exit:


void niquery_option_ipv4_flag_handler(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
niquery_option_ipv4_flag_handler_entry:
l00402D48:
	branch niquery_set_qtype(4<32>) < 0<32> l00402D72
l00402D56:
	Mem38[0x004314D8<p32>:word32] = Mem7[0x004314D8<p32>:word32] | Mem7[(0x004300D0<p32> + r4 *s 0x14<32>) + 0xC<32>:word32]
l00402D72:
	return
niquery_option_ipv4_flag_handler_exit:


void niquery_option_ipv4_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_option_ipv4_handler_entry:
l00402D76:
	niquery_set_qtype(4<32>)
	return
niquery_option_ipv4_handler_exit:


void niquery_option_ipv6_flag_handler(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
niquery_option_ipv6_flag_handler_entry:
l00402D82:
	branch niquery_set_qtype(3<32>) < 0<32> l00402DAC
l00402D90:
	Mem38[0x004314D8<p32>:word32] = Mem7[0x004314D8<p32>:word32] | Mem7[(0x004300D0<p32> + r4 *s 0x14<32>) + 0xC<32>:word32]
l00402DAC:
	return
niquery_option_ipv6_flag_handler_exit:


void niquery_option_ipv6_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_option_ipv6_handler_entry:
l00402DB0:
	niquery_set_qtype(3<32>)
	return
niquery_option_ipv6_handler_exit:


void niquery_option_name_handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
niquery_option_name_handler_entry:
l00402DBC:
	niquery_set_qtype(2<32>)
	return
niquery_option_name_handler_exit:


void pr_icmph(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r16 r17 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
pr_icmph_entry:
l00402DC8:
	word32 r4_17
	branch r4 == 0x80<32> l00402EB4
l00402EB4:
	r4_17 = 0x00411974<p32>
l00402DD4:
	word32 r4_159
	branch r4 >u 0x80<32> l00402E12
l00402E12:
	branch r4 == 0x82<32> l00402EC0
l00402EC0:
	r4_17 = 0x00411990<p32>
l00402E1A:
	branch r4 <u 0x82<32> l00402EBA
l00402EBA:
	r4_17 = 0x00411984<p32>
l00402E1E:
	branch r4 == 0x83<32> l00402EC6
l00402EC6:
	r4_17 = 0x0041199C<p32>
l00402E26:
	branch r4 != 0x84<32> l00402DE4
l00402E2E:
	r4_17 = 0x004119A8<p32>
l00402DD8:
	branch r4 == 2<32> l00402E72
l00402E72:
	word32 r4_302
	word32 r5_303
	word32 r6_304
	word32 r7_305
	word32 r11_306
	word32 r14_307
	word32 r22_308
	word32 r23_309
	word32 r30_310
	printf(0x004118B8<p32>, out r4_302, out r5_303, out r6_304, out r7_305, out r11_306, out r14_307, out r22_308, out r23_309, out r30_310)
	branch r5 == 0<32> l00402E4C
l00402E7C:
	r4_159 = 0x004118D0<p32>
l00402DDC:
	branch r4 >=u 3<32> l00402DEC
l00402DEC:
	branch r4 == 3<32> l00402E84
l00402E84:
	word32 r5_315
	word32 r6_316
	fn0040309C(0x004118DC<p32>, out r5_315, out r6_316)
	branch r5 != 0<32> l00402E92
l00402E92:
	r4_17 = 0x004118F8<p32>
	branch r5 == 1<32> l00402E4A
l00402E9A:
	r4_159 = 0x00411910<p32>
l00402E8C:
	r4_17 = 0x004118EC<p32>
l00402E4A:
	word32 r5_313
	word32 r6_314
	fn0040309C(r4_17, out r5_313, out r6_314)
l00402DF0:
	branch r4 != 4<32> l00402DE4
l00402DF4:
	word32 r5_317
	word32 r6_318
	fn0040309C(0x00411918<p32>, out r5_317, out r6_318)
	word32 r4_112 = 0x0041192C<p32>
	branch r5 == 0<32> l00402E08
l00402E00:
	branch r5 != 1<32> l00402EA2
l00402EA2:
	r4_112 = 0x00411950<p32>
	branch r5 == 2<32> l00402E08
l00402EAA:
	word32 r4_321
	word32 r5_322
	word32 r6_323
	word32 r7_324
	word32 r11_325
	word32 r14_326
	word32 r22_327
	word32 r23_328
	word32 r30_329
	printf(0x00411960<p32>, out r4_321, out r5_322, out r6_323, out r7_324, out r11_325, out r14_326, out r22_327, out r23_328, out r30_329)
l00402E04:
	r4_112 = 0x00411940<p32>
l00402E08:
	word32 r5_319
	word32 r6_320
	fn0040309C(r4_112, out r5_319, out r6_320)
l00402E0A:
	r4_159 = 0x0041196C<p32>
l00402DE0:
	branch r4 == 1<32> l00402E34
l00402E34:
	word32 r5_175
	word32 r6_176
	word32 r4_174 = fn0040309C(0x0041181C<p32>, out r5_175, out r6_176)
	branch r5 >=u 5<32> l00402E68
l00402E68:
	r4_159 = 0x004118A8<p32>
l00402E3E:
	word32 r7_183 = Mem9[0x004122D0<p32> + r5 * 4<32>:word32]
	call r7_183 (retsize: 0;)
		uses: r4:r4_174,r5:r5_175,r6:r6_176,r7:r7_183
	return
l00402DE4:
	r4_159 = 0x004119B8<p32>
l00402E6E:
	word32 r5_311
	word32 r6_312
	fn0040309C(r4_159, out r5_311, out r6_312)
l00402E4C:
	return
pr_icmph_exit:


void pr_echo_reply(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
pr_echo_reply_entry:
l00402ECC:
	fn004030A4(CONVERT(Mem5[r4 + 6<32>:uint16], uint16, word32))
l00402EDC_thunk_printf:
	word32 r4_35
	word32 r5_36
	word32 r6_37
	word32 r7_38
	word32 r11_39
	word32 r14_40
	word32 r22_41
	word32 r23_42
	word32 r30_43
	printf(0x004104BC<p32>, out r4_35, out r5_36, out r6_37, out r7_38, out r11_39, out r14_40, out r22_41, out r23_42, out r30_43)
	return
pr_echo_reply_exit:


void write_stdout(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
write_stdout_entry:
l00402EE0:
	word32 r16_13 = 0<32>
l00402EE6:
	word32 r4_28 = write()
	r16_13 = r16_13 + r4_28
	branch r16_13 <u r5 l00402EE6
l00402EF6:
	branch r4_28 < 0<32> l00402EE6
l00402EFA:
	return
write_stdout_exit:


void ping6_receive_error_msg(word32 r0, word32 r20, word32 r21, word32 r28, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r20:[0..31] r21:[0..31] r28:[0..31] ra:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r11 r12 r13 r14 r15 r16 r17 r18 r19 r22 r23 r24 r30 ra sp
ping6_receive_error_msg_entry:
	ptr32 fp
	struct <anonymous> tLoc0234
	byte bLoc0260
	uint16 wLoc025C
	uint16 wLoc025A
l00402EFC:
	word32 r17_210
	word32 r4_19
	fn004032A0(out r4_19)
	word32 r19_23 = Mem13[r4_19:word32]
	word32 r5_48
	word32 r6_637
	word32 r4_47 = recvmsg(out r5_48, out r6_637)
	branch r4_47 < 0<32> l00402FF6
l00402F40:
	word32 r7_314 = 0<32>
	branch false l00402F4E
l00402F4A:
	r7_314 = fp - 0x220<32>
l00402F4E:
	word32 r18_304 = 0<32>
l00402F54:
	branch r7_647 == 0<32> l00402F80
l00402F80:
	branch r18_304 != 0<32> l00402F86
l00402F86:
	word32 r5_67 = CONVERT(Mem42[r18_304 + 4<32>:byte], byte, word32)
	branch r5_67 != 1<32> l00402FEC
l00402FEC:
	branch r5_67 != 3<32> l00402FF6
l00402FF0:
	branch r4_47 >= 8<32> l00402FFA
l00402FFA:
	word32 r9_641
	word32 r7_639
	word32 r8_640
	branch memcmp(&tLoc0234, 0x00432500<p32>, 0x10<32>, out r7_639, out r8_640, out r9_641) != 0<32> l00402FF4
l0040300A:
	branch CONVERT(bLoc0260, byte, word32) != 0x80<32> l00402FF4
l00403016:
	branch is_ours(fp - 0x220<32>, CONVERT(wLoc025C, uint16, word32)) == 0<32> l00402FF4
l00403020:
	Mem90[0x004544D0<p32>:word32] = Mem42[0x004544D0<p32>:word32] + 1<32>
	r17_210 = 1<32>
	word32 r7_91 = Mem90[0x004544EC<p32>:word32]
	branch !__bit(r7_91, 4<32>) l00402FB6
l0040303A:
	r17_210 = r7_91 & 1<32>
	branch (r7_91 & 1<32>) == 0<32> l00403048
l00403048:
	word32 r23_104
	word32 r30_108
	word32 r22_643
	word32 r23_644
	pr_addr(r0, r18_304 + 0x10<32>, r18_304, r19_23, r20, r21, fn004033EA(out r23_104, out r30_108), r23_104, r28, r30_108, ra, out r22_643, out r23_644)
	fn004030A4(CONVERT(wLoc025A, uint16, word32))
	word32 r5_645
	word32 r6_646
	fn0040309C(0x004111EC<p32>, out r5_645, out r6_646)
	pr_icmph(CONVERT(Mem90[r18_304 + 5<32>:byte], byte, word32), CONVERT(Mem90[r18_304 + 6<32>:byte], byte, word32))
	fn004033EE(0xA<32>)
	fn004033F2(Mem90[0x00412EF4<p32>:word32], out r17_210)
l0040303E:
	write_stdout(2<32>)
l00402FF4:
l00402FF6:
l00402F8E:
	word32 r7_234 = Mem42[0x004544EC<p32>:word32]
	r17_210 = r7_234 & 0x10<32>
	branch (r7_234 & 0x10<32>) != 0<32> l00403080
l00403080:
l00403082:
	r17_210 = 0<32>
l00402F9C:
	branch __bit(r7_234, 0<32>) l00402FC6
l00402FC6:
	word32 r4_238 = Mem42[r18_304:word32]
	word32 r7_239 = Mem42[0x00412EF0<p32>:word32]
	branch r4_238 == 0x1A<32> l00402FE4
l00402FE4:
l00402FD4:
	word32 r4_642
	strerror(r4_238, out r4_642)
l00402FDE:
	fn004032FE()
	r17_210 = r7_239
l00402FA0:
	write_stdout(r5_67)
l00402FA6:
	Mem272[0x004544D0<p32>:word32] = Mem268[0x004544D0<p32>:word32] + 1<32>
l00402FB6:
	word32 r4_638
	fn004032A0(out r4_638)
	branch r17_210 != 0<32> l00402FC0
l00402FBC:
l00402FC0:
	return
ping6_receive_error_msg_exit:
l00402F82:
	abort(r0)
l00402F56:
	branch Mem42[r7_647 + 4<32>:word32] != 0x29<32> l00402F64
l00402F5C:
	branch Mem42[r7_647 + 8<32>:word32] != 0x19<32> l00402F64
l00402F62:
	r18_304 = r7_647 + 0xC<32>
l00402F64:
	word32 r6_307 = Mem42[r7_647:word32]
	branch r6_307 <u 0xC<32> l00402F7C
l00402F6A:
	word32 r6_312 = __ins(r6_307 + 3<32>, 0<32>, 0<32>, 1<32>)
	r7_314 = r7_647 + r6_312
	r7_647 = r7_314
	branch r6_312 + 0xC<32> <u (r5_48 + 0x200<32>) - r7_647 l00402F54
l00402F7C:
	r7_314 = 0<32>


word32 niquery_nonce.isra.0(ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_parse_reply
//      build_niquery
// MayUse: 
// LiveOut: r4 r5 r6
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
niquery_nonce.isra.0_entry:
l00403086:
	word32 r5_22
	word32 r6_51
	fn00403098(0x004117DC<p32>, Mem5[0x00412EF0<p32>:word32], out r5_22, out r6_51)
	fn004030A0()
l00403096_thunk_fn00403098:
	word32 r5_43
	word32 r6_44
	word32 r4_42 = fn00403098(3<32>, r5_22, out r5_43, out r6_44)
	r5Out = r5_43
	r6Out = r6_44
	return r4_42
niquery_nonce.isra.0_exit:


word32 fn00403098(word32 r4, word32 r5, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      niquery_option_help_handler
//      niquery_option_subject_name_handler
//      niquery_nonce.isra.0
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4 r5 r6
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00403098_entry:
l00403098:
l00403098_thunk_fputs_unlocked:
	word32 r4_18
	word32 r5_19
	word32 r6_20
	word32 r3_26
	word32 r8_27
	word32 r11_28
	word32 r12_29
	fputs_unlocked(r4, r5, out r3_26, out r4_18, out r5_19, out r6_20, out r8_27, out r11_28, out r12_29)
	r5Out = r5_19
	r6Out = r6_20
	return r4_18
fn00403098_exit:


word32 fn0040309C(word32 r4, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_icmph
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r4 r5 r6
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040309C_entry:
l0040309C:
l0040309C_thunk_printf:
	word32 r4_18
	word32 r5_19
	word32 r6_20
	word32 r7_26
	word32 r11_27
	word32 r14_28
	word32 r22_29
	word32 r23_30
	word32 r30_31
	printf(r4, out r4_18, out r5_19, out r6_20, out r7_26, out r11_27, out r14_28, out r22_29, out r23_30, out r30_31)
	r5Out = r5_19
	r6Out = r6_20
	return r4_18
fn0040309C_exit:


void fn004030A0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      niquery_option_help_handler
//      niquery_option_subject_name_handler
//      niquery_nonce.isra.0
//      if_name2index
// MayUse: 
// LiveOut:
// Trashed: r17 r25
// Preserved: sp
fn004030A0_entry:
l004030A0:
l004030A0_thunk_exit:
	exit()
	return
fn004030A0_exit:


word32 fn004030A4(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_echo_reply
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
fn004030A4_entry:
l004030A4:
l004030A4_thunk_ntohs:
	return ntohs(r4)
fn004030A4_exit:


void ping6_parse_reply(word32 r0, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r18, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r18:[0..31] r28:[0..31] r30:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] ra:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
ping6_parse_reply_entry:
	ptr32 fp
l004030A8:
	word32 r23_33 = Mem23[r5 + 0x14<32>:word32]
	word32 r16_36 = Mem23[Mem23[r5 + 8<32>:word32]:word32]
	branch r23_33 >=u 0xC<32> l0040310A
l0040310A:
	r30 = Mem38[r5 + 0x10<32>:word32]
	word32 r17_40 = r30
l00403110:
	branch r17_1117 == 0<32> l004030C0
l00403112:
	r18 = Mem38[r17_1117:word32]
	branch Mem38[r17_1117 + 4<32>:word32] != 0x29<32> l00403146
l0040311A:
	word32 r7_45 = Mem38[r17_1117 + 8<32>:word32]
	branch r7_45 == 8<32> l00403124
l00403120:
	branch r7_45 != 0x34<32> l00403146
l00403124:
	branch r18 <u 0x10<32> l00403146
l00403146:
	branch r18 >=u 0xC<32> l00403130
l00403128:
	fn004034E2(fp - 0x34<32>, r17_1117 + 0xC<32>, 4<32>)
l00403130:
	r18 = __ins(r18 + 3<32>, 0<32>, 0<32>, 1<32>)
	r17_40 = r17_1117 + r18
	r17_1117 = r17_40
	branch r18 + 0xC<32> <u (r30 + r23_33) - r17_1117 l00403110
l00403144:
l0040314A:
	r17_40 = 0<32>
l004030C0:
	branch r6 < 8<32> l0040314E
l0040314E:
	branch !__bit(Mem38[0x004544EC<p32>:word32], 8<32>) l0040315E
l0040315E:
	fn004032FE()
l004030C4:
	word32 r7_107 = CONVERT(Mem38[r16_36:byte], byte, word32)
	branch r7_107 != 0x81<32> l0040316E
l0040316E:
	branch r7_107 != 0x8C<32> l00403176
l00403174:
	word32 r5_1104
	word32 r6_1105
	niquery_nonce.isra.0(out r5_1104, out r6_1105)
l00403176:
	branch r6 < 0x38<32> l00403158
l0040317A:
	word32 r8_1107
	word32 r9_1108
	word32 r7_1106
	branch memcmp(r16_36 + 0x20<32>, 0x00432500<p32>, 0x10<32>, out r7_1106, out r8_1107, out r9_1108) != 0<32> l00403158
l0040318A:
	word32 r7_141 = CONVERT(Mem38[r16_36 + 0xE<32>:byte], byte, word32)
	word32 r18_142 = r16_36 + 0x30<32>
	branch r7_141 != 0x2C<32> l0040319E
l00403196:
	r7_141 = CONVERT(Mem38[r16_36 + 0x30<32>:byte], byte, word32)
	r18_142 = r16_36 + 0x38<32>
l0040319E:
	branch r7_141 != 0x3A<32> l0040327A
l0040327A:
	branch __bit(Mem38[0x004544EC<p32>:word32], 8<32>) l00403158
l00403284:
	branch Mem38[0x00454514<p32>:word32] != 0<32> l00403158
l0040328E:
	word32 r23_160
	word32 r30_164
	word32 r22_1109
	word32 r23_1110
	pr_addr(r0, r7, r18_142, r7, r4, r6, fn004033EA(out r23_160, out r30_164), r23_160, r28, r30_164, ra, out r22_1109, out r23_1110)
	word32 r6_1112
	word32 r5_1111
	fn0040309C(0x0041126C<p32>, out r5_1111, out r6_1112)
l004031A2:
	branch CONVERT(Mem38[r18_142:byte], byte, word32) != 0x80<32> l00403158
l004031AC:
	branch is_ours(r4, CONVERT(Mem38[r18_142 + 4<32>:uint16], uint16, word32)) == 0<32> l00403158
l004031B4:
	word32 r4_269 = fn004030A4(CONVERT(Mem38[r18_142 + 6<32>:uint16], uint16, word32))
	word32 r7_270 = Mem38[0x004544E4<p32>:word32]
	word32 r5_271 = r7_270 - r4_269
	branch !__bit(r5_271, 0xF<32>) l004031FA
l004031C6:
	branch (r5_271 & 0xFFFF<32>) < Mem38[0x00430078<p32>:word32] l004031D8
l004031D0:
	Mem275[0x00430078<p32>:word32] = (r5_271 & 0xFFFF<32>) + 1<32>
l004031D8:
	word32 r17_278 = CONVERT(Mem277[0x91B<32>:uint16], uint16, word32)
	branch CONVERT(SLICE(r4_269 - r17_278, word16, 0), word16, int32) > 0<32> l004031F6
l004031EA:
	branch (r7_270 & 0xFFFF<32>) - r17_278 <= 0x7FFF<32> l004031FA
l004031F6:
	Mem289[0x91B<32>:byte] = SLICE(r4_269, byte, 0)
l004031FA:
	branch Mem293[r4 + 2<32>:word32] == 0<32> l00403202
l00403202:
	Mem297[0x004544D0<p32>:word32] = Mem293[0x004544D0<p32>:word32] + 1<32>
	branch __bit(Mem297[0x004544EC<p32>:word32], 0<32>) l00403224
l00403224:
	word32 r23_310
	word32 r30_314
	word32 r23_1114
	word32 r22_1113
	pr_addr(r0, r7, r18_142, r7, r4, r6, fn004033EA(out r23_310, out r30_314), r23_310, r28, r30_314, ra, out r22_1113, out r23_1114)
	fn004030A4(CONVERT(Mem297[r18_142 + 6<32>:uint16], uint16, word32))
	word32 r5_1115
	word32 r6_1116
	fn0040309C(0x00411230<p32>, out r5_1115, out r6_1116)
l0040323A:
	word32 r17_396 = CONVERT(Mem394[r16_36:byte], byte, word32)
	word32 r18_397 = CONVERT(Mem394[r16_36 + 1<32>:byte], byte, word32)
	ntohl(Mem394[r16_36 + 4<32>:word32])
	pr_icmph(r17_396, r18_397)
l0040321A:
	write_stdout(2<32>)
l004030CE:
	branch is_ours(r4, CONVERT(Mem38[r16_36 + 4<32>:uint16], uint16, word32)) == 0<32> l00403158
l00403158:
l004030D8:
	fn004030A4(CONVERT(Mem38[r16_36 + 6<32>:uint16], uint16, word32))
	word32 r22_472
	word32 r23_1101
	branch gather_statistics(r16_36, 8<32>, r6, pr_addr(r0, r7, r18, r7, r4, r6, r8, r23_33, r28, r30, ra, out r22_472, out r23_1101), r18, 0<32>, r22_472, 0x00402ECC<p32>) == 0<32> l0040324A
l0040324A:
	branch __bit(Mem512[0x004544EC<p32>:word32], 0xD<32>) l0040326A
l00403254:
	fn004033EE(7<32>)
	branch __bit(Mem512[0x004544EC<p32>:word32], 0<32>) l00403274
l00403262:
	word32 r17_1103
	fn004033F2(Mem512[0x00412EF4<p32>:word32], out r17_1103)
l0040326A:
	branch !__bit(Mem512[0x004544EC<p32>:word32], 0<32>) l004031FE
l00403274:
	fn004033EE(0xA<32>)
l00403100:
	word32 r17_1102
	fn004033F2(Mem551[0x00412EF4<p32>:word32], out r17_1102)
l004031FE:
l0040315A:
	return
ping6_parse_reply_exit:


word32 fn004032A0(ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_receive_error_msg
//      hextoui
// MayUse: 
// LiveOut: r3 r4
// Trashed: r25 r3 r4
// Preserved: sp
fn004032A0_entry:
l004032A0:
l004032A0_thunk___errno_location:
	word32 r4_6
	word32 r3_5 = __errno_location(out r4_6)
	r4Out = r4_6
	return r3_5
fn004032A0_exit:


void ping6_install_filter()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
ping6_install_filter_entry:
l004032A4:
	branch Mem9[0x0045454C<p32>:word32] != 0<32> l004032FC
l004032B0:
	uint16 wLoc14_76 = Mem9[0x004544C4<p32>:uint16]
	Mem17[0x0045454C<p32>:word32] = 1<32>
	fn0040359C(CONVERT(wLoc14_76, uint16, word32))
	Mem22[0x004300A2<p32>:byte] = 0<8>
	Mem24[0x004300A3<p32>:byte] = 1<8>
	Mem29[0x004300A0<p32>:byte] = 0x15<8>
	word32 r4_36
	word32 r7_138
	word32 r5_137
	word32 r3_136
	setsockopt(out r3_136, out r4_36, out r5_137, out r7_138)
	branch r4_36 == 0<32> l004032FC
l004032FC:
	return
l004032F0:
l004032F8_thunk_perror:
	word32 r8_143
	word32 r7_142
	word32 r6_141
	word32 r5_140
	word32 r3_139
	word32 r11_144
	word32 r12_145
	word32 r17_146
	perror(0x004104E4<p32>, out r3_139, out r5_140, out r6_141, out r7_142, out r8_143, out r11_144, out r12_145, out r17_146)
	return
ping6_install_filter_exit:


word32 fn004032FE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
//      niquery_option_subject_addr_handler
//      if_name2index
//      ping6_usage
// MayUse: 
// LiveOut: r6
// Trashed: r25 r6 r7
// Preserved: sp
fn004032FE_entry:
l004032FE:
l004032FE_thunk_fprintf:
	word32 r7_7
	return fprintf(out r7_7)
fn004032FE_exit:


void niquery_option_subject_addr_handler(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 r18, word32 r20)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r12:[0..31] r18:[0..31] r2:[0..31] r20:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
niquery_option_subject_addr_handler_entry:
	struct <anonymous> tLoc40
	word32 dwLoc44
l00403302:
	word32 r9_314
	word32 r7_312
	word32 r6_311
	word32 r8_313
	word32 r10_315
	memset(&tLoc40, 0<32>, 0x20<32>, out r6_311, out r7_312, out r8_313, out r9_314, out r10_315)
	Mem35[&tLoc40:word32] = 2<32>
	word32 r6_36 = Mem35[0x00430210<p32>:word32]
	Mem38[&tLoc40 + 8<i32>:word32] = 1<32>
	word32 r7_40 = Mem38[0x004300D0<p32> + r4 *s 0x14<32> + 0xC<32>:word32]
	branch r6_36 < 0<32> l00403338
l0040332E:
	branch Mem38[0x004314D4<p32>:word32] != 0<32> l004033BA
l004033BA:
	branch r6_36 == r7_40 l00403338
l004033BE:
	puts(0x004119F4<p32>)
l00403338:
	word32 r16_214
	Mem62[0x00430210<p32>:word32] = r7_40
	branch r7_40 == 0<32> l00403348
l00403348:
	Mem65[0x004314D0<p32>:word32] = 0x10<32>
	Mem68[&tLoc40 + 4<i32>:word32] = 0xA<32>
	r16_214 = 8<32>
l00403340:
	branch r7_40 == 2<32> l0040337A
l0040337A:
	Mem70[&tLoc40 + 4<i32>:word32] = r7_40
	Mem71[0x004314D0<p32>:word32] = 4<32>
	r16_214 = 4<32>
l00403344:
	r16_214 = 0xFFFFFFFF<32>
l00403356:
	word32 r8_317
	word32 r4_316
	word32 r12_318
	word32 r11_120
	getaddrinfo(r0, r2, r3, r5, 0<32>, &tLoc40, r12, r20, out r4_316, out r8_317, out r11_120, out r12_318)
	word32 r4_113 = dwLoc44
	branch dwLoc44 == 0<32> l004033A6
l004033A6:
	branch r18 == 0<32> l0040339E
l004033A8:
	word32 r20_117 = Mem112[0x004314D0<p32>:word32]
	word32 r3_321
	word32 r6_322
	word32 r8_323
	word32 r9_324
	word32 r10_325
	malloc(r0, r20_117, r11_120, out r3_321, out r4_113, out r6_322, out r8_323, out r9_324, out r10_325, out r11_120)
	branch r4_113 != 0<32> l00403386
l00403386:
	word32 r3_326
	word32 r6_327
	word32 r7_328
	word32 r8_329
	word32 r9_330
	word32 r10_331
	free(r0, Mem112[0x004314D4<p32>:word32], fn004034E2(r4_113, Mem112[r18 + 0x14<32>:word32] + r16_214, r20_117), out r3_326, out r4_113, out r6_327, out r7_328, out r8_329, out r9_330, out r10_331, out r11_120)
	Mem164[0x004314D4<p32>:word32] = r4_113
l0040339E:
	word32 r3_319
	word32 r11_320
	freeaddrinfo(r0, r4_113, r11_120, out r3_319, out r11_320)
l004033B6:
	r18 = Mem112[r18 + 0x1C<32>:word32]
l00403366:
	gai_strerror(dwLoc44)
	fn004032FE()
l004033C6:
l004033C8:
	return
niquery_option_subject_addr_handler_exit:


word32 if_name2index(word32 r4, ptr32 & r11Out, ptr32 & r16Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r11 r16 r22 r23 r30 r4 sp
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
if_name2index_entry:
	word32 r16
	word32 r11
	word32 r22
	word32 r23
	word32 r30
l004033CC:
	word32 r4_15
	word32 r6_99
	word32 r8_100
	word32 r9_101
	if_nametoindex(r4, out r4_15, out r6_99, out r8_100, out r9_101)
	branch r4_15 == 0<32> l004033D8
l004033D8:
	fn004032FE()
	fn004030A0()
l004033EA_thunk_print_timestamp:
	word32 r11_35
	word32 r22_42
	word32 r23_43
	word32 r30_46
	word32 r4_47 = print_timestamp(out r11_35, out r22_42, out r23_43, out r30_46)
	r11Out = r11_35
	r16Out = r4
	r22Out = r22_42
	r23Out = r23_43
	r30Out = r30_46
	return r4_47
l004033D6:
	r11Out = r11
	r16Out = r16
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r4_15
if_name2index_exit:


word32 fn004033EA(ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse: 
// LiveOut: r22 r23 r30
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004033EA_entry:
l004033EA:
l004033EA_thunk_print_timestamp:
	word32 r22_16
	word32 r23_17
	word32 r30_20
	word32 r11_28
	print_timestamp(out r11_28, out r22_16, out r23_17, out r30_20)
	r23Out = r23_17
	r30Out = r30_20
	return r22_16
fn004033EA_exit:


void fn004033EE(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004033EE_entry:
l004033EE:
l004033EE_thunk_putchar:
	word32 r17_15
	putchar(r4, out r17_15)
	return
fn004033EE_exit:


word32 fn004033F2(word32 r4, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_receive_error_msg
//      ping6_parse_reply
// MayUse:  r4:[0..31]
// LiveOut: r16 r17
// Trashed: r16 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004033F2_entry:
l004033F2:
l004033F2_thunk_fflush_unlocked:
	word32 r16_5
	word32 r17_6
	fflush_unlocked(r4, out r16_5, out r17_6)
	r17Out = r17_6
	return r16_5
fn004033F2_exit:


void niquery_option_handler(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
niquery_option_handler_entry:
l004033F6:
	word32 r19_20 = 0<32>
	word32 r16_21 = 0x004300D0<p32>
l00403416:
	word32 r4_24 = Mem15[r16_21:word32]
	branch r4_24 == 0<32> l0040343C
l0040341A:
	word32 r18_25 = Mem15[r16_21 + 4<32>:word32]
	word32 r6_239
	branch strncmp(r4_24, r4, r18_25, out r6_239) != 0<32> l00403412
l00403424:
	word32 r7_40
	word32 r7_38 = CONVERT(Mem15[r4 + r18_25:byte], byte, word32)
	branch Mem15[r16_21 + 8<32>:word32] != 0<32> l00403404
l00403404:
	branch r7_38 != 0x3D<32> l00403412
l00403408:
	r7_40 = Mem15[r16_21 + 0x10<32>:word32]
l0040342C:
	branch r7_38 != 0<32> l00403412
l0040342E:
	r7_40 = Mem15[r16_21 + 0x10<32>:word32]
l00403432:
	word32 r11_119
	word32 r4_57
	word32 r5_58
	word32 r6_59
	word32 r8_62
	word32 r9_63
	word32 r10_64
	word32 r3_126
	word32 r2_124
	word32 r24_125
	word32 r14_122
	word32 r15_123
	word32 r13_121
	word32 r12_120
	call r7_40 (retsize: 0;)
		uses: r10:r10_64,r11:r11_119,r12:r12_120,r13:r13_121,r14:r14_122,r15:r15_123,r2:r2_124,r24:r24_125,r3:r3_126,r4:r19_45,r5:r5_58,r6:r6_59,r8:r8_62,r9:r9_63
		defs: r10:r10_64,r11:r11_119,r12:r12_120,r13:r13_121,r14:r14_122,r15:r15_123,r2:r2_124,r24:r24_125,r3:r3_126,r4:r4_57,r5:r5_58,r6:r6_59,r8:r8_62,r9:r9_63
	branch r4_57 < 0<32> l00403412
l00403412:
	r19_20 = r19_20 + 1<32>
	r16_21 = r16_21 + 0x14<32>
l0040343C:
	branch Mem15[r16_21:word32] != 0<32> l00403446
l00403440:
	niquery_option_help_handler()
l00403446:
	return
niquery_option_handler_exit:


void hextoui(word32 r2, word32 r4, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
hextoui_entry:
	ptr32 fp
l0040344A:
	word32 r7_32
	word32 r12_84
	word32 r11_83
	word32 r9_82
	word32 r8_81
	word32 r6_80
	word32 r4_79
	word32 r3_78
	word32 r4_77
	__strtoul_internal(r2, fn004032A0(out r4_77), r4, fp - 0x14<32>, 0x10<32>, r12, out r3_78, out r4_79, out r6_80, out r7_32, out r8_81, out r9_82, out r11_83, out r12_84)
	branch CONVERT(Mem15[r7_32:byte], byte, word32) == 0<32> l00403470
l00403462:
	word32 r4_40
	fn004032A0(out r4_40)
	branch Mem15[r4_40:word32] != 0<32> l00403470
l0040346A:
	word32 r4_85
	fn004032A0(out r4_85)
l00403470:
	return
hextoui_exit:


word32 build_echo(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_send_probe
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
build_echo_entry:
l00403474:
	Mem11[r4 + 1<32>:byte] = 0<8>
	Mem12[r4:byte] = 0x80<8>
	Mem14[r4 + 2<32>:word16] = 0<16>
	word32 r4_19 = fn0040359C(Mem14[0x004544E4<p32>:word32] + 1<32> & 0xFFFF<32>)
	Mem21[r4 + 4<32>:word16] = Mem14[0x004544C4<p32>:word16]
	word32 r7_22 = Mem21[0x00454508<p32>:word32]
	Mem23[r4 + 6<32>:word16] = SLICE(r4_19, word16, 0)
	branch r7_22 == 0<32> l004034A8
l004034A0:
	word32 r4_69
	word32 r6_70
	word32 r17_71
	gettimeofday(r4 + 8<32>, out r4_69, out r6_70, out r17_71)
l004034A8:
	return Mem23[0x00430074<p32>:word32] + 8<32>
build_echo_exit:


word32 build_niquery(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_send_probe
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut: r16
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
build_niquery_entry:
l004034B2:
	Mem12[r4:byte] = 0x8B<8>
	Mem13[r4 + 2<32>:word16] = 0<16>
	word32 r4_14 = Mem13[0x004544E4<p32>:word32]
	Mem17[0x00430074<p32>:word32] = r0
	word32 r4_20 = fn0040359C(r4_14 + 1<32> & 0xFFFF<32>)
	Mem21[r4 + 8<32>:byte] = SLICE(r4_20, byte, 0)
	Mem24[r4 + 9<32>:byte] = SLICE(r4_20 >>u 8<32>, byte, 0)
	word32 r5_39
	word32 r6_40
	word32 r4_38 = niquery_nonce.isra.0(out r5_39, out r6_40)
l004034DE_thunk_fn004034E2:
	fn004034E2(r4_38, r5_39, r6_40)
	return r4
build_niquery_exit:


word32 fn004034E2(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_parse_reply
//      niquery_option_subject_addr_handler
//      build_niquery
//      ping6_run
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn004034E2_entry:
l004034E2:
l004034E2_thunk_memcpy:
	word32 r11_15
	word32 r3_22
	word32 r5_23
	word32 r6_24
	word32 r7_25
	word32 r8_26
	word32 r9_27
	word32 r10_28
	word32 r12_29
	word32 r13_30
	memcpy(r4, r5, r6, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r10_28, out r11_15, out r12_29, out r13_30)
	return r11_15
fn004034E2_exit:


void ping6_send_probe(word32 r0, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
ping6_send_probe_entry:
l004034E6:
	word32 r4_113
	word32 r16_119
	branch Mem32[0x00430214<p32>:word32] >= 0<32> l0040354C
l0040354C:
	r16_119 = build_niquery(r0, r5)
l0040351C:
	r16_119 = build_echo(r5)
	branch Mem32[0x00454554<p32>:word32] != 0<32> l0040354E
l0040354E:
	r4_113 = sendmsg()
l00403528:
	word32 r10_215
	word32 r7_214
	r4_113 = sendto(out r7_214, out r10_215)
l0040353E:
	Mem124[0x004314C4<p32>:word32] = r0
	branch (r16_119 ^ r4_113) != 0<32> l0040354A
l00403546_1:
l0040354A:
	return
ping6_send_probe_exit:


word32 ping6_usage(word32 r4, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      usage
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r17 r6
// Trashed: r17 r25 r4 r5 r6 r7
// Preserved: sp
ping6_usage_entry:
l0040357C:
	branch r4 != 0<32> l0040358A
l00403586_1:
l0040358A:
	word32 r6_15 = fn004032FE()
	word32 r17_18 = exit()
l0040359C_thunk_htons:
	htons(2<32>)
	r17Out = r17_18
	return r6_15
ping6_usage_exit:


word32 fn0040359C(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_install_filter
//      build_echo
//      build_niquery
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
fn0040359C_entry:
l0040359C:
l0040359C_thunk_htons:
	return htons(r4)
fn0040359C_exit:


word32 ping6_run(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 ra, ptr32 & r8Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] ra:[0..31]
// LiveOut: r11 r4 r8
// Trashed:
// Preserved: sp
// Terminates process
ping6_run_exit:
ping6_run_entry:
	ptr32 fp
l004035A0:
	word32 sp_1607 = fp - 112<i32>
	word32 r30_1651 = fp + 0xFFFFF000<32>
	word32 r19_128 = r6
	word32 r16_1728 = r7
	word32 r17_32 = r4
	word32 r18_129 = r5
	branch Mem23[0x00430214<p32>:word32] < 0<32> l004035E0
l004035B8:
	word32 r6_1800
	word32 r4_1799
	r3 = gettimeofday(0x00454470<p32>, out r4_1799, out r6_1800, out r17_32)
	word32 r4_1801
	r2 = getpid(out r4_1801)
	branch Mem58[0x00430210<p32>:word32] < 0<32> l00403C7E
l004035D6:
	branch Mem58[0x004314D4<p32>:word32] == 0<32> l00403C7E
l00403C7E:
	Mem1523[0x004314D4<p32>:word32] = 0x00432500<p32>
	Mem1525[0x004314D0<p32>:word32] = 0x10<32>
	Mem1528[0x00430210<p32>:word32] = r0
l004035E0:
	branch r17_32 < 2<32> l004035F6
l004035E4:
	word32 r11_1806
	word32 r6_1804
	word32 r8_1805
	word32 r5_1803
	word32 r4_1802
	r2 = fputs_unlocked(0x00411B64<p32>, Mem62[0x00412EF0<p32>:word32], out r3, out r4_1802, out r5_1803, out r6_1804, out r8_1805, out r11_1806, out r12)
l004035F2:
	ping6_usage(0<32>, out r17_32)
l004035F6:
	word32 r17_101
	branch r17_32 != 1<32> l0040362C
l004035FA:
	r17_101 = Mem94[r18_129:word32]
l004035FC:
	branch r19_128 != 0<32> l00403648
l004035FE:
	word32 r4_126
	word32 r11_1817
	word32 r8_1816
	r2 = getaddrinfo(r0, r2, r3, r17_101, 0<32>, 0x004122E4<p32>, r12, r20, out r4_126, out r8_1816, out r11_1817, out r12)
	r19_128 = Mem127[r30_1651 + 0xFA4<32>:word32]
	branch r4_126 == 0<32> l00403648
l00403648:
	word32 r13_1815
	word32 r10_1813
	word32 r8_1811
	word32 r6_1809
	word32 r12_1814
	word32 r9_1812
	word32 r7_1810
	word32 r3_1807
	word32 r5_1808
	word32 r11_143
	memcpy(0x004324F8<p32>, Mem127[r19_128 + 0x14<32>:word32], 0x1C<32>, out r3_1807, out r5_1808, out r6_1809, out r7_1810, out r8_1811, out r9_1812, out r10_1813, out r11_143, out r12_1814, out r13_1815)
	Mem153[0x004324FA<p32>:word16] = SLICE(fn0040359C(0x3A<32>), word16, 0)
	r18_129 = 0x004324F8<p32>
	word32 r4_155 = Mem153[r30_1651 + 0xFA4<32>:word32]
	branch r4_155 == 0<32> l00403664
l00403660:
	word32 r3_1825
	freeaddrinfo(r0, r4_155, r11_143, out r3_1825, out r11_143)
l00403664:
	word32 r6_1823
	word32 r8_1824
	word32 r5_1822
	word32 r6_1820
	word32 r7_1821
	word32 r5_1819
	branch memchr(r17_101, 0x3A<32>, strlen(r17_101, out r5_1819, out r6_1820, out r7_1821), out r5_1822, out r6_1823, out r8_1824) == 0<32> l00403682
l00403672:
	Mem189[0x004544EC<p32>:word32] = Mem153[0x004544EC<p32>:word32] | 4<32>
l00403682:
	word32 r5_1537
	word32 r4_1538
	r19_128 = 0x004324DC<p32>
	r20 = 0x004324DC<p32>
	branch Mem191[0x004324E4<p32>:word32] != 0<32> l004036CC
l0040368C:
	branch Mem191[0x004324E8<p32>:word32] != 0<32> l004036CC
l00403690:
	branch Mem191[0x004324EC<p32>:word32] != 0<32> l004036CC
l00403694:
	branch Mem191[0x004324F0<p32>:word32] != 0<32> l004036CC
l00403698:
	r11_143 = fn004034E2(0x004324E4<p32>, 0x00432500<p32>, 0x10<32>)
	word32 r7_217 = Mem191[0x00432510<p32>:word32]
	word32 r6_218 = Mem191[0x00454550<p32>:word32]
	Mem223[sp_1607 + 0x58<32>:word32] = r7_217
	branch r7_217 == 0<32> l004036C4
l004036C4:
	branch r6_218 != 0<32> l004036CC
l004036B0:
	branch r6_218 == 0<32> l004036C6
l004036C6:
	Mem225[0x00454550<p32>:word32] = r7_217
l004036B2:
	branch r6_218 == r7_217 l004036CC
l004036CC:
	word32 r4_1529
	word32 r6_228 = Mem227[0x00430224<p32>:word32]
	Mem232[0x004544C0<p32>:word32] = r17_101
	word32 r17_233 = 0x0043021C<p32>
	branch r6_228 != 0<32> l004038E0
l004036DE:
	branch Mem232[0x00430228<p32>:word32] != 0<32> l004038E0
l004036E4:
	branch Mem232[0x0043022C<p32>:word32] != 0<32> l004038E0
l004036EA:
	branch Mem232[0x00430230<p32>:word32] != 0<32> l004038E0
l004038E0:
	word32 r4_238 = Mem232[0x004544B0<p32>:word32]
	branch r4_238 == 0<32> l0040382A
l004038EA:
	word32 r7_240 = CONVERT(Mem232[0x00430224<p32>:byte], byte, word32)
	branch r7_240 != 0xFE<32> l0040390C
l0040390C:
	branch r7_240 != 0xFF<32> l0040382A
l00403914:
	branch (CONVERT(Mem232[0x00430225<p32>:byte], byte, word32) & 0xF<32>) != 2<32> l0040382A
l0040391E:
l004038F4:
	branch (CONVERT(Mem232[0x00430225<p32>:byte], byte, word32) & 0xC0<32>) != 0x80<32> l0040382A
l00403904:
	sp_1607 = <invalid>
	Mem273[sp_1607 + 0x58<32>:word32] = if_name2index(r4_238, out r11_143, out r16_1728, out r22, out r23, out r30_1651)
l004036F0:
	word32 r4_285
	word32 r9_1829
	word32 r8_1828
	word32 r6_1827
	word32 r3_1826
	socket(1<32>, out r3_1826, out r4_285, out r6_1827, out r8_1828, out r9_1829)
	r19_128 = r4_285
	r4_1529 = 0x00410520<p32>
	branch r4_285 < 0<32> l00403790
l00403702:
	word32 r4_288 = Mem232[0x004544B0<p32>:word32]
	branch r4_288 == 0<32> l0040379C
l0040370C:
	word32 r11_1837
	word32 r4_306 = if_name2index(r4_288, out r11_1837, out r16_1728, out r22, out r23, out r30_1651)
	word32 r7_315 = CONVERT(Mem232[0x004324E4<p32>:byte], byte, word32)
	Mem317[r30_1651 + 0xFB0<32>:byte] = 0<8>
	Mem318[r30_1651 + 0xFB4<32>:byte] = 0<8>
	Mem319[r30_1651 + 0xFB8<32>:byte] = 0<8>
	Mem320[r30_1651 + 0xFBC<32>:byte] = 0<8>
	Mem321[r30_1651 + 0xFC0<32>:byte] = SLICE(r4_306, byte, 0)
	sp_1607 = <invalid>
	branch r7_315 != 0xFE<32> l00403740
l00403740:
	branch r7_315 != 0xFF<32> l00403750
l00403746:
	branch (CONVERT(Mem321[0x004324E5<p32>:byte], byte, word32) & 0xF<32>) == 2<32> l0040373A
l0040372C:
	branch (CONVERT(Mem321[0x004324E5<p32>:byte], byte, word32) & 0xC0<32>) != 0x80<32> l00403750
l0040373A:
	Mem330[0x004324F4<p32>:byte] = SLICE(r4_306, byte, 0)
l00403750:
	word32 r17_1845
	word32 r6_1840
	word32 r7_1841
	word32 r8_1842
	word32 r11_1843
	word32 r12_1844
	word32 r4_1839
	word32 r3_1838
	modify_capability(r0, 1<32>, out r3_1838, out r4_1839, out r6_1840, out r7_1841, out r8_1842, out r11_1843, out r12_1844, out r17_1845)
	word32 r4_370
	word32 r7_1848
	word32 r5_1847
	word32 r3_1846
	setsockopt(out r3_1846, out r4_370, out r5_1847, out r7_1848)
	r21 = r4_370
	branch r4_370 != 0xFFFFFFFF<32> l00403796
l0040376E:
	r22 = Mem378[0x004544B0<p32>:word32]
	word32 r7_1870
	word32 r5_1868
	word32 r6_1869
	strlen(r22, out r5_1868, out r6_1869, out r7_1870)
	word32 r4_395
	word32 r3_1871
	word32 r5_1872
	word32 r7_1873
	setsockopt(out r3_1871, out r4_395, out r5_1872, out r7_1873)
	branch r4_395 != r4_370 l00403796
l00403796:
	word32 r8_1866
	word32 r12_1867
	word32 r7_1865
	word32 r6_1864
	word32 r4_1863
	word32 r3_1862
	modify_capability(r0, 0<32>, out r3_1862, out r4_1863, out r6_1864, out r7_1865, out r8_1866, out r11_143, out r12_1867, out r17_233)
l0040379C:
	Mem429[0x004324DE<p32>:byte] = SLICE(fn0040359C(0x401<32>), byte, 0)
	r20 = 0xFFFFFFFF<32>
	word32 r5_1836
	branch connect(out r5_1836) != 0xFFFFFFFF<32> l004037BE
l004037BE:
	Mem454[r30_1651 + 0xFAC<32>:byte] = 0x1C<8>
	branch getsockname() != 0xFFFFFFFF<32> l004037DA
l004037DA:
	Mem467[r17_233 + 2<32>:word16] = 0<16>
	word32 r8_1851
	word32 r4_1849
	word32 r6_1850
	close(out r4_1849, out r6_1850, out r8_1851)
	branch Mem467[0x004544B0<p32>:word32] == 0<32> l0040382A
l004037E8:
	word32 r11_488 = getifaddrs(r0, r11_143)
	branch r30_1651 == 0xFB0<32> l004037F8
l004037F8:
	r23 = Mem467[r17_233 + 0x10<32>:word32]
	r20 = Mem467[0x004544B0<p32>:word32]
	word32 r8_1722 = Mem467[r17_233 + 0x14<32>:word32]
	r21 = Mem467[r17_233 + 8<i32>:word32]
	r22 = Mem467[r17_233 + 12<i32>:word32]
	word32 r19_502 = Mem467[r30_1651 + 0xFB0<32>:word32]
l0040380E:
	branch r19_502 != 0<32> l0040389E
l0040389E:
	word32 r17_505 = Mem504[r19_502 + 0xC<32>:word32]
	branch r17_505 == 0<32> l004038DC
l004038A2:
	branch CONVERT(Mem504[r17_505:uint16], uint16, word32) != 0xA<32> l004038DC
l004038A8:
	word32 r4_507 = Mem504[r19_502 + 4<32>:word32]
	Mem511[r30_1651 + 0xF9C<32>:byte] = SLICE(r8_1722, byte, 0)
	word32 r6_1875
	word32 r4_515 = strncmp(r4_507, r20, 3<32>, out r6_1875)
	r8_1722 = Mem511[r30_1651 + 0xF9C<32>:word32]
	branch r4_515 != 0<32> l004038DC
l004038BA:
	branch (Mem511[r17_505 + 8<32>:word32] - r21 | Mem511[r17_505 + 0xC<32>:word32] - r22 | Mem511[r17_505 + 0x10<32>:word32] - r23 | Mem511[r17_505 + 0x14<32>:word32] - r8_1722) == 0<32> l00403822
l004038DC:
	r19_502 = Mem538[r19_502:word32]
l00403812:
	word32 r7_1874
	fprintf(out r7_1874)
l00403822:
	r11_143 = freeifaddrs(r0, Mem547[r30_1651 + 0xFB0<32>:word32], r11_488)
l0040382A:
	r19_128 = Mem566[0x004544B0<p32>:word32]
	branch r19_128 == 0<32> l00403864
l00403832:
	word32 r7_568 = Mem566[0x00454554<p32>:word32]
	Mem574[0x00454554<p32>:word32] = r7_568 + 0x20<32>
	Mem587[sp_1607 + 0x40<32>:word32] = 0x20<32>
	Mem589[sp_1607 + 0x44<32>:word32] = 0x29<32>
	Mem591[sp_1607 + 0x48<32>:word32] = 0x32<32>
	word32 r10_1856
	word32 r9_1855
	word32 r8_1854
	word32 r6_1852
	word32 r7_1853
	memset(r7_568 + 0x004314DC<p32> + 0xC<32>, 0<32>, 0x14<32>, out r6_1852, out r7_1853, out r8_1854, out r9_1855, out r10_1856)
	sp_1607 = <invalid>
	Mem625[sp_1607 + 0x5C<32>:word32] = if_name2index(r19_128, out r11_143, out r16_1728, out r22, out r23, out r30_1651)
l00403864:
	branch fn0040359C(0xFF00<32>) != (CONVERT(Mem639[0x00432500<p32>:uint16], uint16, word32) & fn0040359C(0xFF00<32>)) l0040394C
l0040387A:
	branch Mem639[0x00454514<p32>:word32] == 0<32> l0040393A
l00403884:
	branch Mem639[0x0043008C<p32>:word32] > 0x3E7<32> l00403920
l00403920:
	word32 r7_651 = Mem639[0x00430218<p32>:word32]
	branch r7_651 < 0<32> l0040393A
l0040392A:
	branch r7_651 == 2<32> l0040393A
l0040393A:
	branch Mem639[0x00430218<p32>:word32] >= 0<32> l0040394C
l00403944:
	Mem655[0x00430218<p32>:word32] = 2<32>
l0040394C:
	branch Mem656[0x00430218<p32>:word32] < 0<32> l00403970
l00403956:
	word32 r7_1877
	word32 r5_1876
	branch fn00403C9A(out r5_1876, out r7_1877) != 0xFFFFFFFF<32> l00403970
l00403970:
	branch __bit(Mem656[0x004544EC<p32>:word32], 0xF<32>) l00403990
l0040397A:
	branch bind() != 0xFFFFFFFF<32> l00403990
l00403990:
	word32 r17_710 = Mem656[0x00430074<p32>:word32]
	branch r17_710 <u 8<32> l004039AC
l0040399A:
	branch Mem656[0x00430214<p32>:word32] >= 0<32> l004039AC
l004039A4:
	Mem713[0x00454508<p32>:word32] = 1<32>
l004039AC:
	word32 r3_1878
	word32 r4_739
	word32 r11_1883
	word32 r10_1882
	word32 r9_1881
	word32 r8_1880
	word32 r6_1879
	malloc(r0, r17_710 + 0x1038<32>, r11_143, out r3_1878, out r4_739, out r6_1879, out r8_1880, out r9_1881, out r10_1882, out r11_1883)
	r19_128 = r4_739
	branch r4_739 != 0<32> l004039C4
l004039C4:
	Mem757[sp_1607 + 8<32>:word32] = 1<32>
	Mem767[r30_1651 + 0xFA8<32>:byte] = 1<8>
	word32 r7_1884
	word32 r5_776
	branch fn00403C9A(out r5_776, out r7_1884) == 0<32> l004039EE
l004039DE:
	word32 r11_1889
	word32 r12_1890
	word32 r3_1885
	word32 r8_1888
	word32 r4_1886
	word32 r6_1887
	fputs_unlocked(0x00410710<p32>, Mem767[0x00412EF0<p32>:word32], out r3_1885, out r4_1886, out r5_776, out r6_1887, out r8_1888, out r11_1889, out r12_1890)
	Mem801[sp_1607 + 8<32>:word32] = 0<32>
l004039EE:
	word32 r5_811 = r5_776 *s 0x118<32> + (Mem802[0x00430074<p32>:word32] + 8<32>)
	Mem813[r30_1651 + 0xFA8<32>:byte] = SLICE(r5_811, byte, 0)
	sock_setbufs(r5_811)
	branch Mem813[r16_1728 + 4<32>:word32] != 3<32> l00403A96
l00403A18:
	Mem837[r30_1651 + 0xFAC<32>:byte] = 2<8>
	word32 r5_1891
	word32 r7_1892
	branch fn00403C9A(out r5_1891, out r7_1892) >= 0<32> l00403A42
l00403A34:
	word32 r5_1900
	word32 r11_1903
	word32 r12_1904
	word32 r6_1901
	word32 r8_1902
	word32 r3_1898
	word32 r4_1899
	fputs_unlocked(0x00411C70<p32>, Mem837[0x00412EF0<p32>:word32], out r3_1898, out r4_1899, out r5_1900, out r6_1901, out r8_1902, out r11_1903, out r12_1904)
l00403A42:
	word32 r10_1897
	word32 r9_1896
	word32 r8_1895
	word32 r6_1893
	word32 r7_1894
	memset(r30_1651 + 0xFB0<32>, 0xFF<32>, 0x20<32>, out r6_1893, out r7_1894, out r8_1895, out r9_1896, out r10_1897)
	branch Mem837[r16_1728 + 8<32>:word32] != 0<32> l00403A60
l00403A54:
	Mem888[r30_1651 + 0xFB0<32>:byte] = SLICE(__ins(Mem837[r30_1651 + 0xFB0<32>:word32], 0<32>, 1<32>, 1<32>), byte, 0)
l00403A60:
	word32 r7_893
	word32 r7_892 = Mem889[r30_1651 + 0xFC0<32>:word32]
	branch Mem889[0x00430214<p32>:word32] < 0<32> l00403A90
l00403A90:
	r7_893 = __ins(r7_892, 0<32>, 1<32>, 1<32>)
l00403A6E:
	r7_893 = __ins(r7_892, 0<32>, 0xC<32>, 1<32>)
l00403A72:
	Mem902[r30_1651 + 0xFC0<32>:byte] = SLICE(r7_893, byte, 0)
	word32 r5_1937
	word32 r7_1938
	branch fn00403C9A(out r5_1937, out r7_1938) >= 0<32> l00403A96
l00403A96:
	branch __bit(Mem916[0x004544EC<p32>:word32], 0x10<32>) l00403ABE
l00403AA0:
	Mem925[r30_1651 + 0xFAC<32>:byte] = 0<8>
	word32 r7_1906
	word32 r5_1905
	branch fn00403C9A(out r5_1905, out r7_1906) != 0xFFFFFFFF<32> l00403ABE
l00403ABE:
	branch __bit(Mem937[0x004544EC<p32>:word32], 0x11<32>) l00403B00
l00403AC8:
	r20 = 0xFFFFFFFF<32>
	word32 r7_1910
	word32 r5_1909
	branch fn00403C9A(out r5_1909, out r7_1910) != 0xFFFFFFFF<32> l00403AE6
l00403AE6:
	word32 r7_1912
	word32 r5_1911
	branch fn00403C9A(out r5_1911, out r7_1912) != 0xFFFFFFFF<32> l00403B00
l00403B00:
	Mem977[r30_1651 + 0xFAC<32>:byte] = 1<8>
	word32 r7_1908
	word32 r5_1907
	word32 r4_986 = fn00403C9A(out r5_1907, out r7_1908)
	r20 = r4_986
	branch r4_986 != 0xFFFFFFFF<32> l00403B36
l00403B1C:
	word32 r5_1913
	word32 r7_1914
	branch fn00403C9A(out r5_1913, out r7_1914) != r4_986 l00403B36
l00403B36:
	branch __bit(Mem977[0x004544EC<p32>:word32], 0xA<32>) l00403B5A
l00403B40:
	word32 r5_1915
	word32 r7_1916
	branch fn00403C9A(out r5_1915, out r7_1916) != 0xFFFFFFFF<32> l00403B5A
l00403B5A:
	branch __bit(Mem977[0x004544EC<p32>:word32], 9<32>) l00403BF2
l00403B64:
	word32 sp_1045 = sp_1607 - __ins(Mem977[0x00454554<p32>:word32] + 0x2F<32>, 0<32>, 0<32>, 1<32>)
	word32 r10_1923
	word32 r9_1922
	word32 r8_1921
	word32 r6_1919
	word32 r7_1920
	memset(sp_1045, 0<32>, 0x20<32>, out r6_1919, out r7_1920, out r8_1921, out r9_1922, out r10_1923)
	Mem1062[sp_1045 + 0x10<32>:word32] = htonl(__ext(Mem977[0x004544BC<p32>:word32], 0<32>, 0x14<32>))
	Mem1064[sp_1045 + 0x15<32>:byte] = 1<8>
	Mem1065[sp_1045 + 0x16<32>:byte] = 1<8>
	Mem1066[sp_1045 + 0x14<32>:byte] = 0<8>
	word32 r13_1933
	word32 r3_1924
	word32 r5_1925
	word32 r6_1926
	word32 r7_1927
	word32 r8_1928
	word32 r12_1932
	word32 r9_1929
	word32 r10_1930
	word32 r11_1931
	memcpy(sp_1045, 0x00432500<p32>, 0x10<32>, out r3_1924, out r5_1925, out r6_1926, out r7_1927, out r8_1928, out r9_1929, out r10_1930, out r11_1931, out r12_1932, out r13_1933)
	r20 = sp_1607
	r21 = 0xFFFFFFFF<32>
	word32 r7_1095
	word32 r5_1934
	branch fn00403C9A(out r5_1934, out r7_1095) != 0xFFFFFFFF<32> l00403BCA
l00403BCA:
	Mem1102[0x004544BC<p32>:word32] = r7_1095
	Mem1103[sp_1045 + 4<32>:word32] = r7_1095
	word32 r5_1935
	word32 r7_1936
	branch fn00403C9A(out r5_1935, out r7_1936) != 0xFFFFFFFF<32> l00403BF0
l00403BF0:
l00403BF2:
	word32 r22_1917
	word32 r23_1918
	pr_addr(r0, 0x004324F8<p32>, Mem1121[0x004544C0<p32>:word32], r4_739, r20, r21, r22, r23, r28, r30_1651, ra, out r22_1917, out r23_1918)
	word32 r23_1330
	word32 r30_1334
	word32 r22_1329 = fn00403C9E(0x00411D78<p32>, out r23_1330, out r30_1334)
	word32 r4_1341 = Mem1121[0x004544BC<p32>:word32]
	branch r4_1341 == 0<32> l00403C1E
l00403C12:
	ntohl(r4_1341)
	r22_1329 = fn00403C9E(0x00411D88<p32>, out r23_1330, out r30_1334)
l00403C1E:
	word32 r18_1367 = Mem1121[0x004544EC<p32>:word32]
	branch Mem1121[0x004544B0<p32>:word32] != 0<32> l00403C30
l00403C2C:
	branch __bit(r18_1367, 0xF<32>) l00403C60
l00403C30:
	Mem1372[0x004544EC<p32>:word32] = r18_1367 | 4<32>
	word32 r22_1939
	word32 r23_1940
	pr_addr(r0, 0x0043021C<p32>, r18_1367, r4_739, r20, r21, r22_1329, r23_1330, r28, r30_1334, ra, out r22_1939, out r23_1940)
	branch Mem1372[0x004544B0<p32>:word32] != 0<32> l00403C54
l00403C50_1:
l00403C54:
	word32 r23_1943
	word32 r30_1944
	fn00403C9E(0x0041089C<p32>, out r23_1943, out r30_1944)
	Mem1438[0x004544EC<p32>:word32] = r18_1367
l00403C60:
	word32 r30_1942
	word32 r23_1941
	fn00403C9E(0x00411D98<p32>, out r23_1941, out r30_1942)
	setup(r0, r16_1728)
	main_loop(r0, drop_capabilities(r0), 0x00430238<p32>, r16_1728, r4_739, r21)
l00403BE8:
	r4_1529 = 0x00411D64<p32>
l00403BC2:
	r4_1529 = 0x00411D50<p32>
l00403B54:
	r4_1529 = 0x00411D38<p32>
l00403B30:
	r4_1529 = 0x00411D20<p32>
l00403AFA:
	r4_1529 = 0x00411D04<p32>
l00403AE0:
	r4_1529 = 0x00411CE4<p32>
l00403AB8:
	r4_1529 = 0x00411CC0<p32>
l00403A8A:
	r4_1529 = 0x00411CA4<p32>
l004039B8:
	r5_1537 = Mem749[0x00412EF0<p32>:word32]
	r4_1538 = 0x00410874<p32>
l0040398A:
	r4_1529 = 0x00411C58<p32>
l0040396A:
	r4_1529 = 0x00411C40<p32>
l0040392E:
	r5_1537 = Mem639[0x00412EF0<p32>:word32]
	r4_1538 = 0x00411C14<p32>
l00403892:
	r5_1537 = Mem639[0x00412EF0<p32>:word32]
	r4_1538 = 0x00411BE4<p32>
l004037F2:
	r4_1529 = 0x00411BD8<p32>
l004037D4:
	r4_1529 = 0x00410600<p32>
l004037B8:
	r4_1529 = 0x004105F8<p32>
l0040378C:
	r4_1529 = 0x00411BBC<p32>
l00403790:
	word32 r17_1835
	word32 r11_1834
	word32 r7_1832
	word32 r8_1833
	word32 r6_1831
	word32 r5_1830
	r2 = perror(r4_1529, out r3, out r5_1830, out r6_1831, out r7_1832, out r8_1833, out r11_1834, out r12, out r17_1835)
l004036B4:
	r5_1537 = Mem223[0x00412EF0<p32>:word32]
	r4_1538 = 0x00411B98<p32>
l004036BE:
	word32 r11_1861
	word32 r6_1859
	word32 r8_1860
	word32 r5_1858
	word32 r4_1857
	r2 = fputs_unlocked(r4_1538, r5_1537, out r3, out r4_1857, out r5_1858, out r6_1859, out r8_1860, out r11_1861, out r12)
l00403612:
	r3 = gai_strerror(r4_126)
	word32 r7_1818
	fprintf(out r7_1818)
l00403626:
	exit()
	sp_1607 = <invalid>
l0040362C:
	branch Mem1608[0x00430214<p32>:word32] >= 0<32> l00403640
l00403636:
	branch Mem1608[0x00430210<p32>:word32] != 1<32> l004035F2
l00403640:
	r17_101 = Mem1608[0x004544D4<p32>:word32]


word32 fn00403C9A(ptr32 & r5Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_run
// MayUse: 
// LiveOut: r4 r5 r7
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00403C9A_entry:
l00403C9A:
l00403C9A_thunk_setsockopt:
	word32 r4_8
	word32 r5_9
	word32 r7_11
	word32 r3_16
	setsockopt(out r3_16, out r4_8, out r5_9, out r7_11)
	r5Out = r5_9
	r7Out = r7_11
	return r4_8
fn00403C9A_exit:


word32 fn00403C9E(word32 r4, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r22 r23 r30
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00403C9E_entry:
l00403C9E:
l00403C9E_thunk_printf:
	word32 r22_12
	word32 r23_13
	word32 r30_17
	word32 r4_26
	word32 r5_27
	word32 r6_28
	word32 r7_29
	word32 r11_30
	word32 r14_31
	printf(r4, out r4_26, out r5_27, out r6_28, out r7_29, out r11_30, out r14_31, out r22_12, out r23_13, out r30_17)
	r23Out = r23_13
	r30Out = r30_17
	return r22_12
fn00403C9E_exit:


word32 __divdi3(word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402A9A
// MayUse:  r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11 r3 r4 r5
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__divdi3_entry:
l00403CB0:
	word32 r8_18 = r6
	word32 r12_23 = r7
	word32 r2_14 = 0<32>
	branch r5 >= 0<32> l00403CCE
l00403CBA:
	r4 = -r4
	r2_14 = 0xFFFFFFFF<32>
	r5 = -r5 - CONVERT(r4 >u 0<32>, bool, word32)
l00403CCE:
	branch r7 >= 0<32> l00403CE6
l00403CD2:
	r8_18 = -r6
	r2_14 = ~r2_14
	r12_23 = -r7 - CONVERT(r8_18 >u 0<32>, bool, word32)
l00403CE6:
	word32 r7_101
	word32 r9_113 = r8_18
	word32 r11_102 = r12_23
	word32 r10_116 = r4
	word32 r7_165 = r5
	branch r12_23 != 0<32> l00403E44
l00403E44:
	branch r5 <u r12_23 l00403F24
l00403F24:
	r11_102 = 0<32>
	r7_101 = 0<32>
l00403E48:
	word32 r13_38 = __clz(r12_23)
	branch r13_38 != 0<32> l00403E60
l00403E60:
	word32 r9_41 = 0x20<32> - r13_38
	word32 r12_44 = r8_18 >>u r9_41 | r12_23 << r13_38
	word32 r5_45 = r5 << r13_38
	word32 r10_47 = __ext(r12_44, 0<32>, 0x10<32>)
	word32 r3_48 = r4 >>u r9_41 | r5_45
	word32 r6_53 = r10_47 *s r5_45
	word32 r8_56 = r8_18 << r13_38
	word32 r11_57 = (r5 >>u r9_41) % (r12_44 >>u 0x10<32>) << 0x10<32> | r3_48 >>u 0x10<32>
	word32 r9_58 = r5_45
	branch r11_57 >=u r6_53 l00403EC4
l00403EAE:
	r11_57 = r11_57 + r12_44
	r9_58 = r5_45 + 0xFFFFFFFF<32>
	branch r11_57 <u r12_44 l00403EC4
l00403EB8:
	branch r11_57 >=u r6_53 l00403EC4
l00403EBC:
	r9_58 = r5_45 + 0xFFFFFFFE<32>
	r11_57 = r11_57 + r12_44
l00403EC4:
	r3 = __ext(r3_48, 0<32>, 0x10<32>)
	word32 r10_69 = r10_47 *s r6_53
	word32 r5_75 = (r11_57 - r6_53) % (r12_44 >>u 0x10<32>) << 0x10<32> | r3
	word32 r7_76 = r6_53
	branch r5_75 >=u r10_69 l00403EFA
l00403EE4:
	r5_75 = r5_75 + r12_44
	r7_76 = r6_53 + 0xFFFFFFFF<32>
	branch r5_75 <u r12_44 l00403EFA
l00403EEE:
	branch r5_75 >=u r10_69 l00403EFA
l00403EF2:
	r7_76 = r6_53 + 0xFFFFFFFE<32>
	r5_75 = r5_75 + r12_44
l00403EFA:
	r7_101 = r9_58 << 0x10<32> | r7_76
	word32 r10_87 = r5_75 - r10_69
	word32 r6_92 = r7_101 *s r8_56
	word32 r8_93 = SLICE(r7_101 *u64 r8_56, word32, 32)
	branch r10_87 <u r8_93 l00403F20
l00403F12:
	r11_102 = 0<32>
	branch r10_87 != r8_93 l00403D7C
l00403F18:
	branch r4 << r13_38 >=u r6_92 l00403D7C
l00403F20:
	r7_101 = r7_101 + 0xFFFFFFFF<32>
l00403E50:
	branch r12_23 <u r5 l00403F2A
l00403F2A:
	r11_102 = 0<32>
	r7_101 = 1<32>
l00403E54:
	r7_101 = CONVERT(r4 <u r8_18, bool, word32) ^ 1<32>
l00403E5C:
	r11_102 = 0<32>
l00403CF0:
	branch r5 >=u r8_18 l00403D94
l00403D94:
	branch r8_18 != 0<32> l00403D9E
l00403D98:
l00403D9E:
	word32 r7_111 = __clz(r8_18)
	branch r7_111 != 0<32> l00403DAE
l00403DAE:
	r9_113 = r8_18 << r7_111
	word32 r8_114 = 0x20<32> - r7_111
	word32 r7_121 = __ext(r9_113, 0<32>, 0x10<32>)
	word32 r8_122 = r4 >>u r8_114 | r5 << r7_111
	r10_116 = r4 << r7_111
	word32 r4_130 = r7_121 *s r3
	word32 r6_134 = (r5 >>u r8_114) % (r9_113 >>u 0x10<32>) << 0x10<32> | r8_122 >>u 0x10<32>
	word32 r11_135 = r3
	branch r6_134 >=u r4_130 l00403E06
l00403DF4:
	r6_134 = r6_134 + r9_113
	r11_135 = r3 + 0xFFFFFFFF<32>
	branch r6_134 <u r9_113 l00403E06
l00403DFC:
	branch r6_134 >=u r4_130 l00403E06
l00403E00:
	r11_135 = r3 + 0xFFFFFFFE<32>
	r6_134 = r6_134 + r9_113
l00403E06:
	word32 r7_147 = r7_121 *s r3
	word32 r5_153 = (r6_134 - r4_130) % (r9_113 >>u 0x10<32>) << 0x10<32> | __ext(r8_122, 0<32>, 0x10<32>)
	word32 r6_154 = r3
	branch r5_153 >=u r7_147 l00403E38
l00403E26:
	r5_153 = r5_153 + r9_113
	r6_154 = r3 + 0xFFFFFFFF<32>
	branch r5_153 <u r9_113 l00403E38
l00403E2E:
	branch r5_153 >=u r7_147 l00403E38
l00403E32:
	r6_154 = r3 + 0xFFFFFFFE<32>
	r5_153 = r5_153 + r9_113
l00403E38:
	r7_165 = r5_153 - r7_147
	r11_102 = r11_135 << 0x10<32> | r6_154
l00403DA4:
	r7_165 = r5 - r8_18
	r11_102 = 1<32>
l00403CF4:
	word32 r6_170 = __clz(r8_18)
	branch r6_170 == 0<32> l00403D10
l00403CFA:
	r9_113 = r8_18 << r6_170
	r7_165 = r5 << r6_170 | r4 >>u -r6_170
	r10_116 = r4 << r6_170
l00403D10:
	word32 r8_179 = __ext(r9_113, 0<32>, 0x10<32>)
	word32 r4_180 = r9_113 >>u 0x10<32>
	word32 r5_186 = r8_179 *s r3
	word32 r6_194 = r7_165 % r4_180 << 0x10<32> | r10_116 >>u 0x10<32>
	word32 r7_195 = r3
	branch r6_194 >=u r5_186 l00403D46
l00403D34:
	r6_194 = r6_194 + r9_113
	r7_195 = r3 + 0xFFFFFFFF<32>
	branch r6_194 <u r9_113 l00403D46
l00403D3C:
	branch r6_194 >=u r5_186 l00403D46
l00403D40:
	r7_195 = r3 + 0xFFFFFFFE<32>
	r6_194 = r6_194 + r9_113
l00403D46:
	word32 r8_207 = r8_179 *s r3
	word32 r10_213 = (r6_194 - r5_186) % r4_180 << 0x10<32> | __ext(r10_116, 0<32>, 0x10<32>)
	word32 r4_214 = r3
	branch r10_213 >=u r8_207 l00403D76
l00403D66:
	word32 r10_216 = r10_213 + r9_113
	r4_214 = r3 + 0xFFFFFFFF<32>
	branch r10_216 <u r9_113 l00403D76
l00403D6E:
	branch r10_216 >=u r8_207 l00403D76
l00403D72:
	r4_214 = r3 + 0xFFFFFFFE<32>
l00403D76:
	r7_101 = r7_195 << 0x10<32> | r4_214
l00403D7C:
	word32 r4_226 = r7_101
	word32 r5_231 = r11_102
	branch r2_14 == 0<32> l00403D92
l00403D84:
	r4_226 = -r7_101
	r5_231 = -r11_102 - CONVERT(r4_226 >u 0<32>, bool, word32)
l00403D92:
	r4Out = r4_226
	r5Out = r5_231
	r11Out = r11_102
	return r3
__divdi3_exit:


void __moddi3(word32 r4, word32 r5, word32 r6, word32 r7, word32 r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      finish
// MayUse:  r14:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: r10 r11 r2 r25 r4 r5 r7 r8 r9
// Preserved: hi lo r12 r13 r3 r6 sp
__moddi3_entry:
l00403F30:
	word32 r2_18 = r6
	word32 r10_21 = r7
	word32 r11_14 = 0<32>
	branch r5 >= 0<32> l00403F4E
l00403F3A:
	r4 = -r4
	r11_14 = 0xFFFFFFFF<32>
	r5 = -r5 - CONVERT(r4 >u 0<32>, bool, word32)
l00403F4E:
	branch r7 >= 0<32> l00403F62
l00403F52:
	r2_18 = -r6
	r10_21 = -r7 - CONVERT(r2_18 >u 0<32>, bool, word32)
l00403F62:
	word32 r9_147 = r2_18
	word32 r7_219 = r5
	word32 r8_161 = r4
	branch r10_21 != 0<32> l004040BA
l004040BA:
	branch r5 <u r10_21 l00403FEA
l004040BE:
	word32 r3_33 = __clz(r10_21)
	branch r3_33 != 0<32> l004040E0
l004040E0:
	word32 r9_36 = 0x20<32> - r3_33
	word32 r12_40 = r2_18 >>u r9_36 | r10_21 << r3_33
	word32 r7_45 = __ext(r12_40, 0<32>, 0x10<32>)
	word32 r5_44 = r5 << r3_33 | r4 >>u r9_36
	word32 r8_37 = r2_18 << r3_33
	word32 r6_52 = r7_45 *s r14
	word32 r4_55 = r4 << r3_33
	word32 r2_56 = (r5 >>u r9_36) % (r12_40 >>u 0x10<32>) << 0x10<32> | r5_44 >>u 0x10<32>
	word32 r10_57 = r14
	branch r2_56 >=u r6_52 l00404146
l00404130:
	r2_56 = r2_56 + r12_40
	r10_57 = r14 + 0xFFFFFFFF<32>
	branch r2_56 <u r12_40 l00404146
l0040413A:
	branch r2_56 >=u r6_52 l00404146
l0040413E:
	r10_57 = r14 + 0xFFFFFFFE<32>
	r2_56 = r2_56 + r12_40
l00404146:
	word32 r2_71 = r7_45 *s r14
	word32 r7_75 = (r2_56 - r6_52) % (r12_40 >>u 0x10<32>) << 0x10<32> | r5_44 & 0xFFFF<32>
	word32 r5_76 = r14
	branch r7_75 >=u r2_71 l0040417C
l00404166:
	r7_75 = r7_75 + r12_40
	r5_76 = r14 + 0xFFFFFFFF<32>
	branch r7_75 <u r12_40 l0040417C
l00404170:
	branch r7_75 >=u r2_71 l0040417C
l00404174:
	r5_76 = r14 + 0xFFFFFFFE<32>
	r7_75 = r7_75 + r12_40
l0040417C:
	word32 r6_89 = r10_57 << 0x10<32> | r5_76
	word32 r7_87 = r7_75 - r2_71
	word32 r10_92 = r6_89 *s r8_37
	word32 r6_93 = SLICE(r6_89 *u64 r8_37, word32, 32)
	branch r7_87 <u r6_93 l0040419C
l00404196:
	branch r6_93 != r7_87 l004041AC
l00404198:
	branch r4_55 >=u r10_92 l004041AC
l0040419C:
l004041AC:
l004040C6:
	branch r10_21 <u r5 l004040CE
l004040CA:
	branch r4 <u r2_18 l004040DC
l004040CE:
l004040DC:
l00403F6A:
	word32 r10_192
	word32 r4_191
	word32 r7_213
	word32 r5_206
	branch r5 >=u r2_18 l00404000
l00404000:
	branch r2_18 != 0<32> l0040400A
l00404004:
l0040400A:
	word32 r5_187
	word32 r2_145 = __clz(r2_18)
	branch r2_145 != 0<32> l00404046
l00404046:
	r9_147 = r2_18 << r2_145
	word32 r6_148 = 0x20<32> - r2_145
	word32 r5_159 = __ext(r9_147, 0<32>, 0x10<32>)
	word32 r7_158 = r4 >>u r6_148 | r5 << r2_145
	word32 r10_160 = r10_21 *s r5_159
	r8_161 = r4 << r2_145
	word32 r6_165 = (r5 >>u r6_148) % (r9_147 >>u 0x10<32>) << 0x10<32> | r7_158 >>u 0x10<32>
	branch r6_165 >=u r10_160 l00404090
l00404084:
	r6_165 = r6_165 + r9_147
	branch r6_165 <u r9_147 l00404090
l0040408A:
	branch r6_165 >=u r10_160 l00404090
l0040408E:
	r6_165 = r6_165 + r9_147
l00404090:
	word32 r6_177 = (r6_165 - r10_160) % (r9_147 >>u 0x10<32>)
	word32 r4_175 = (r7_158 >>u 0x10<32>) *s r5_159
	r6 = r6_177 << 0x10<32>
	word32 r5_181 = r7_158 & 0xFFFF<32> | r6_177 << 0x10<32>
	branch r5_181 >=u r4_175 l004040B6
l004040AA:
	r5_181 = r5_181 + r9_147
	branch r5_181 <u r9_147 l004040B6
l004040B0:
	branch r5_181 >=u r4_175 l004040B6
l004040B4:
	r5_181 = r5_181 + r9_147
l004040B6:
	r5_187 = r5_181 - r4_175
l00404012:
	r5_187 = r5 - r2_18
l00404016:
	r4_191 = __ext(r9_147, 0<32>, 0x10<32>)
	r10_192 = r9_147 >>u 0x10<32>
	r5_206 = r8_161 >>u 0x10<32>
	word32 r6_200 = r6 *s r4_191
	word32 r7_208 = r5_187 % r10_192 << 0x10<32> | r5_206
	branch r7_208 >=u r6_200 l00404042
l00404036:
	r7_208 = r7_208 + r9_147
	branch r7_208 <u r9_147 l00404042
l0040403C:
	branch r7_208 >=u r6_200 l00404042
l00404040:
	r7_208 = r7_208 + r9_147
l00404042:
	r7_213 = r7_208 - r6_200
l00403F6E:
	word32 r2_214 = __clz(r2_18)
	branch r2_214 == 0<32> l00403F8C
l00403F76:
	r5 = r4 >>u -r2_214
	r9_147 = r2_18 << r2_214
	r7_219 = r5 << r2_214 | r5
	r8_161 = r4 << r2_214
l00403F8C:
	r4_191 = __ext(r9_147, 0<32>, 0x10<32>)
	r10_192 = r9_147 >>u 0x10<32>
	r5_206 = r5 *s r4_191
	word32 r7_233 = r7_219 % r10_192 << 0x10<32> | r8_161 >>u 0x10<32>
	branch r7_233 >=u r5_206 l00403FB8
l00403FAC:
	r7_233 = r7_233 + r9_147
	branch r7_233 <u r9_147 l00403FB8
l00403FB2:
	branch r7_233 >=u r5_206 l00403FB8
l00403FB6:
	r7_233 = r7_233 + r9_147
l00403FB8:
	r7_213 = r7_233 - r5_206
l00403FBA:
	word32 r4_247 = r4_191 *s r5_206
	word32 r8_257 = r7_213 % r10_192 << 0x10<32> | __ext(r8_161, 0<32>, 0x10<32>)
	branch r8_257 >=u r4_247 l00403FE0
l00403FD4:
	word32 r8_261 = r8_257 + r9_147
	branch r8_261 <u r9_147 l00403FE0
l00403FDA:
	branch r8_261 >=u r4_247 l00403FE0
l00403FDE:
l00403FE0:
l00403FEA:
	branch r11_14 == 0<32> l00403FFE
l00403FEE:
l00403FFE:
	return
__moddi3_exit:


word32 __gtdf2(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4 r6 r7
// Trashed: r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__gtdf2_entry:
l004041D0:
	word32 r10_5 = __ext(r5, 4<32>, 0xB<32>)
	word32 r8_7 = __ext(r5, 0<32>, 0x14<32>)
	word32 r9_9 = __ext(r7, 0<32>, 0x14<32>)
	word32 r11_10 = __ext(r7, 4<32>, 0xB<32>)
	word32 r5_13 = r5 >>u 0x1F<32>
	word32 r7_144 = r7 >>u 0x1F<32>
	branch r10_5 != 0x7FF<32> l004041FC
l004041F4:
	branch (r8_7 | r4) != 0<32> l00404254
l004041FC:
	branch r11_10 != 0x7FF<32> l00404208
l00404200:
	branch (r9_9 | r6) != 0<32> l00404254
l00404254:
	r5_13 = 0xFFFFFFFE<32>
l00404208:
	word32 r2_24 = 0<32>
	branch r10_5 != 0<32> l00404216
l0040420E:
	r2_24 = CONVERT((r8_7 | r4) <u 1<32>, bool, word32)
l00404216:
	branch r11_10 != 0<32> l00404220
l0040421A:
	r6 = r9_9 | r6
	branch r6 == 0<32> l0040425A
l0040425A:
	branch r2_24 != 0<32> l00404250
l0040425E:
l00404220:
	branch r2_24 == 0<32> l00404260
l00404260:
	branch r5 >>u 0x1F<32> != r7 >>u 0x1F<32> l00404266
l00404262:
	branch r11_10 >= r10_5 l0040422E
l0040422E:
	branch r10_5 >= r11_10 l0040423A
l0040423A:
	branch r9_9 <u r8_7 l00404266
l0040423E:
	branch r8_7 != r9_9 l0040424C
l0040424C:
	branch r8_7 <u r9_9 l00404232
l00404242:
	branch r6 <u r4 l00404266
l00404246:
	branch r4 <u r6 l00404232
l0040424A:
l00404250:
	r5_13 = 0<32>
l00404232:
	r7_144 = 0xFFFFFFFF<32>
	branch r5 >>u 0x1F<32> != 0<32> l00404238
l00404234_1:
	r5_13 = 0xFFFFFFFF<32>
l00404238:
l00404266:
	r7_144 = 0xFFFFFFFF<32>
	r6 = 1<32>
	branch r5 >>u 0x1F<32> != 0<32> l0040426E
l0040426A_1:
	r7_144 = 1<32>
l0040426E:
	r5_13 = r7_144
l00404224:
	r5_13 = 0xFFFFFFFF<32>
	branch r7 >>u 0x1F<32> == 0<32> l0040422A
l00404226_1:
	r5_13 = r7 >>u 0x1F<32>
l0040422A:
	r6Out = r6
	r7Out = r7_144
	return r5_13
__gtdf2_exit:


void __ltdf2(word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__ltdf2_entry:
l00404280:
	word32 r11_5 = __ext(r5, 4<32>, 0xB<32>)
	word32 r9_7 = __ext(r5, 0<32>, 0x14<32>)
	word32 r10_9 = __ext(r7, 0<32>, 0x14<32>)
	word32 r2_10 = __ext(r7, 4<32>, 0xB<32>)
	branch r11_5 != 0x7FF<32> l004042B0
l004042A4:
	branch (r9_7 | r4) != 0<32> l004042E4
l004042B0:
	branch r2_10 != 0x7FF<32> l004042C0
l004042B4:
	branch (r10_9 | r6) != 0<32> l004042E4
l004042C0:
	word32 r3_25 = 0<32>
	branch r11_5 != 0<32> l004042CE
l004042C6:
	r3_25 = CONVERT((r9_7 | r4) <u 1<32>, bool, word32)
l004042CE:
	branch r2_10 != 0<32> l004042D8
l004042D2:
	branch (r10_9 | r6) == 0<32> l00404312
l00404312:
	branch r3_25 != 0<32> l004042E4
l00404318:
l004042D8:
	branch r3_25 == 0<32> l0040431A
l0040431A:
	branch r5 >>u 0x1F<32> != r7 >>u 0x1F<32> l00404320
l0040431C:
	branch r2_10 >= r11_5 l004042E8
l004042E8:
	branch r11_5 >= r2_10 l004042F6
l004042F6:
	branch r10_9 <u r9_7 l00404320
l004042FA:
	branch r9_7 != r10_9 l0040430A
l0040430A:
	branch r9_7 <u r10_9 l004042EC
l00404310:
l004042FE:
	branch r6 <u r4 l00404320
l00404302:
	branch r4 <u r6 l004042EC
l00404308:
l004042EC:
	branch r5 >>u 0x1F<32> == 0<32> l004042F4
l004042F0_1:
l004042F4:
l00404320:
	branch r5 >>u 0x1F<32> == 0<32> l0040432A
l00404326_1:
l0040432A:
l004042DC:
	branch r7 >>u 0x1F<32> == 0<32> l004042E4
l004042E0_1:
l004042E4:
	return
__ltdf2_exit:


word32 __muldf3(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
//      __floatscan
//      fn0040CFCC
//      fmod
//      frexp
// MayUse:  r4:[0..63] r5:[0..31] r6:[0..63] r7:[0..31]
// LiveOut: r10 r11 r12 r14 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__muldf3_entry:
l00404330:
	word32 r8_11
	word32 r13_109
	word32 r10_102 = __ext(r5, 4<32>, 0xB<32>)
	word32 r11_12 = __ext(r5, 0<32>, 0x14<32>)
	branch r10_102 == 0<32> l004043BE
l004043BE:
	r8_11 = r11_12 | r4
	branch r8_11 == 0<32> l00404420
l00404420:
	r11_12 = 0<32>
	r10_102 = 0<32>
	r13_109 = 1<32>
l004043C6:
	word32 r9_15 = __clz(r11_12)
	branch r11_12 != 0<32> l004043D6
l004043CE:
	r9_15 = __clz(r4) + 0x20<32>
l004043D6:
	word32 r6_19 = r9_15 + 0xFFFFFFF5<32>
	branch r6_19 >= 0x1D<32> l00404404
l00404404:
	r8_11 = 0<32>
	r11_12 = r4 << r9_15 + 0xFFFFFFD8<32>
l004043DE:
	word32 r8_25 = r9_15 + 0xFFFFFFF8<32>
	r8_11 = r4 << r8_25
	r11_12 = r4 >>u 0x1D<32> - r6_19 | r11_12 << r8_25
l004043FA:
	r10_102 = 0xFFFFFC0D<32> - r9_15
l00404342:
	branch r10_102 == 0x7FF<32> l00404410
l00404410:
	r8_11 = r11_12 | r4
	branch r8_11 == 0<32> l0040442A
l0040442A:
	r11_12 = 0<32>
	r13_109 = 2<32>
l00404418:
	r8_11 = r4
	r13_109 = 3<32>
l0040434A:
	r11_12 = r4 >>u 0x1D<32> | 0x8000000<32> | r11_12 << 3<32>
	r8_11 = r4 << 3<32>
	r10_102 = r10_102 + 0xFFFFFC01<32>
l00404366:
	r13_109 = 0<32>
l00404368:
	word32 r9_142
	word32 r3_114
	word32 r6_100 = __ext(r7, 4<32>, 0xB<32>)
	word32 r4_138 = __ext(r7, 0<32>, 0x14<32>)
	branch r6_100 == 0<32> l00404432
l00404432:
	r9_142 = r4_138 | r6
	branch r9_142 == 0<32> l00404492
l00404492:
	r4_138 = 0<32>
	r6_100 = 0<32>
	r3_114 = 1<32>
l0040443A:
	word32 r2_65 = __clz(r4_138)
	branch r4_138 != 0<32> l00404448
l00404440:
	r2_65 = __clz(r6) + 0x20<32>
l00404448:
	word32 r6_69 = r2_65 + 0xFFFFFFF5<32>
	branch r6_69 >= 0x1D<32> l00404476
l00404476:
	r9_142 = 0<32>
	r4_138 = r6 << r2_65 + 0xFFFFFFD8<32>
l00404450:
	word32 r9_75 = r2_65 + 0xFFFFFFF8<32>
	r9_142 = r6 << r9_75
	r4_138 = r6 >>u 0x1D<32> - r6_69 | r4_138 << r9_75
l0040446C:
	r6_100 = 0xFFFFFC0D<32> - r2_65
l00404378:
	branch r6_100 == 0x7FF<32> l00404482
l00404482:
	r9_142 = r4_138 | r6
	branch r9_142 == 0<32> l0040449C
l0040449C:
	r4_138 = 0<32>
	r3_114 = 2<32>
l0040448A:
	r9_142 = r6
	r3_114 = 3<32>
l00404380:
	r4_138 = r6 >>u 0x1D<32> | 0x8000000<32> | r4_138 << 3<32>
	r6_100 = r6_100 + 0xFFFFFC01<32>
	r9_142 = r6 << 3<32>
l0040439A:
	r3_114 = 0<32>
l0040439C:
	word32 r6_107 = r6_100 + r10_102
	word32 r10_115 = r13_109 << 2<32> | r3_114
	word32 r2_128 = r5 >>u 0x1F<32> ^ r7 >>u 0x1F<32>
	word32 r12_130 = r6_107 + 1<32>
	branch r10_115 >=u 0xFFFFFFF0<32> l004044A4
l004044A4:
	word32 r3_141 = r8_11 *s r4_138
	word32 r10_158 = r3_141 + SLICE(r8_11 *u64 r9_142, word32, 32)
	word32 r8_155 = SLICE(r8_11 *u64 r4_138, word32, 32)
	word32 r5_156 = r9_142 *s r11_12
	word32 r3_160 = CONVERT(r10_158 <u r3_141, bool, word32)
	word32 r15_161 = r8_155 + r4_138 *s r11_12
	word32 r10_162 = r10_158 + r5_156
	word32 r9_157 = SLICE(r9_142 *u64 r11_12, word32, 32)
	word32 r25_163 = r3_160 + r15_161
	word32 r5_164 = CONVERT(r10_162 <u r5_156, bool, word32)
	word32 r24_165 = r9_157 + r25_163
	word32 r3_168 = CONVERT(r25_163 <u r3_160, bool, word32)
	word32 r14_166 = r5_164 + r24_165
	word32 r11_181 = (CONVERT(r15_161 <u r8_155, bool, word32) | r3_168) + SLICE(r4_138 *u64 r11_12, word32, 32) + (CONVERT(r24_165 <u r9_157, bool, word32) | CONVERT(r14_166 <u r5_164, bool, word32)) << 9<32> | r14_166 >>u 0x17<32>
	word32 r8_184 = CONVERT((r10_162 << 9<32> | r8_11 *s r9_142) >u 0<32>, bool, word32) | r10_162 >>u 0x17<32> | r14_166 << 9<32>
	branch __bit(r11_181, 0x18<32>) l004045E8
l004045E8:
	r12_130 = r6_107
l0040452A:
	r8_184 = r8_184 >>u 1<32> | r8_184 & 1<32> | r11_181 << 0x1F<32>
	r11_181 = r11_181 >>u 1<32>
l00404542:
	word32 r7_196
	word32 r8_197
	word32 r5_193 = r12_130 + 0x3FF<32>
	branch r5_193 <= 0<32> l004045EC
l004045EC:
	word32 r7_195 = 1<32> - r5_193
	branch r7_195 >= 0x39<32> l004045DA
l004045DA:
	r7_196 = 0<32>
	r8_197 = 0<32>
l004045F4:
	word32 r8_212
	word32 r7_209
	branch r7_195 >= 0x20<32> l00404646
l00404646:
	word32 r5_200 = 0<32>
	word32 r6_202 = r11_181 >>u 0xFFFFFFE1<32> - r5_193
	branch r7_195 == 0x20<32> l0040465E
l00404656:
	r5_200 = r11_181 << -r7_195
l0040465E:
	r7_209 = 0<32>
	r8_212 = r6_202 | CONVERT((r5_200 | r8_184) >u 0<32>, bool, word32)
l004045F8:
	word32 r5_215 = 0x20<32> - r7_195
	r7_209 = r11_181 >>u r7_195
	r8_212 = r11_181 << r5_215 | r8_184 >>u r7_195 | CONVERT(r8_184 << r5_215 >u 0<32>, bool, word32)
l00404616:
	branch (r8_212 & 7<32>) == 0<32> l00404630
l0040461C:
	branch (r8_212 & 0xF<32>) == 4<32> l00404630
l00404624:
	word32 r6_225 = r8_212 + 4<32>
	r7_209 = r7_209 + CONVERT(r6_225 <u r8_212, bool, word32)
	r8_212 = r6_225
l00404630:
	branch !__bit(r7_209, 0x17<32>) l00404680
l00404680:
	r7_196 = 0<32>
	r8_197 = 0<32>
	r5_193 = 1<32>
l00404634:
	r8_197 = r7_209 << 0x1D<32> | r8_212 >>u 3<32>
	r7_196 = r7_209 >>u 3<32>
l00404642:
	r5_193 = 0<32>
l0040454A:
	branch (r8_184 & 7<32>) == 0<32> l00404564
l00404550:
	branch (r8_184 & 0xF<32>) == 4<32> l00404564
l00404558:
	word32 r7_242 = r8_184 + 4<32>
	r11_181 = r11_181 + CONVERT(r7_242 <u r8_184, bool, word32)
	r8_184 = r7_242
l00404564:
	branch __bit(r11_181, 0x18<32>) l00404570
l00404568:
	r11_181 = __ins(r11_181, 0<32>, 8<32>, 1<32>)
	r5_193 = r12_130 + 0x400<32>
l00404570:
	branch r5_193 > 0x7FE<32> l0040467C
l0040467C:
	r7_196 = 0<32>
	r8_197 = 0<32>
l004045C6:
	r5_193 = 0x7FF<32>
l00404578:
	r8_197 = r11_181 << 0x1D<32> | r8_184 >>u 3<32>
	r7_196 = r11_181 >>u 3<32>
l00404588:
	word32 r6_280 = __ins(__ins(__ins(0<32>, r7_196, 0<32>, 1<32>), r5_193, 4<32>, 1<32>), r2_128, 0xF<32>, 1<32>)
	r3Out = r3_168
	r4Out = r8_197
	r5Out = r6_280
	r6Out = r6_280
	r7Out = r6_280
	r8Out = r8_197
	r9Out = r8_197
	r10Out = r10_162
	r11Out = r11_181
	r12Out = r12_130
	r14Out = r14_166
	return r2_128
l004043B4:
	word32 r7_294 = Mem0[0x00412304<p32> + (r10_115 + 0xFFFFFFFF<32>) * 4<32>:word32]
	word32 r10_303
	word32 r5_304
	word32 r11_305
	word32 r6_306
	word32 r12_307
	word32 r8_308
	word32 r4_309
	word32 r7_311
	word32 r14_312
	word32 r9_313
	word32 r3_314
	word32 r2_315
	call r7_294 (retsize: 0;)
		uses: r4:r4_138,r5:r5 >>u 0x1F<32>,r6:r6_107,r7:r7_294
		defs: r10:r10_303,r11:r11_305,r12:r12_307,r14:r14_312,r2:r2_315,r3:r3_314,r4:r4_309,r5:r5_304,r6:r6_306,r7:r7_311,r8:r8_308,r9:r9_313
	r3Out = r3_314
	r4Out = r4_309
	r5Out = r5_304
	r6Out = r6_306
	r7Out = r7_311
	r8Out = r8_308
	r9Out = r9_313
	r10Out = r10_303
	r11Out = r11_305
	r12Out = r12_307
	r14Out = r14_312
	return r2_315
__muldf3_exit:


void __unorddf2(word32 r4, word32 r5, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: r10 r25 r4 r5 r7 r8 r9
// Preserved: sp
__unorddf2_entry:
l00404690:
	word32 r9_5 = __ext(r5, 0<32>, 0x14<32>)
	word32 r5_7 = __ext(r5, 4<32>, 0xB<32>)
	__ext(r7, 0<32>, 0x14<32>)
	word32 r7_10 = __ext(r7, 4<32>, 0xB<32>)
	branch r5_7 != 0x7FF<32> l004046B0
l004046A8:
	branch (r9_5 | r4) != 0<32> l004046BE
l004046B0:
	branch r7_10 != 0x7FF<32> l004046BE
l004046B6:
l004046BE:
	return
__unorddf2_exit:


word32 __fixdfsi(word32 r4, word32 r5, ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4 r5 r6
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__fixdfsi_entry:
l004046C0:
	word32 r6_5 = __ext(r5, 4<32>, 0xB<32>)
	word32 r8_9 = __ext(r5, 0<32>, 0x14<32>)
	word32 r4_10 = 0<32>
	branch r6_5 <= 0x3FE<32> l00404714
l004046D8:
	branch r6_5 <= 0x41D<32> l004046EA
l004046EA:
	word32 r8_16 = 0x433<32> - r6_5
	branch r8_16 >= 0x20<32> l00404716
l00404716:
	r4_10 = (r8_9 | 0x1000000<32>) >>u 0x413<32> - r6_5
l004046FE:
	r4_10 = (r8_9 | 0x1000000<32>) << r6_5 + 0xFFFFFBED<32> | r4 >>u r8_16
l0040470E:
	branch r5 >>u 0x1F<32> == 0<32> l00404714
l00404710:
	r4_10 = -r4_10
l00404714:
	r5Out = r5 >>u 0x1F<32>
	r6Out = <invalid>
	return r4_10
l004046E0:
	word32 r5_27 = (r5 >>u 0x1F<32>) + 0x7FFFFFFF<32>
	r5Out = r5_27
	r6Out = <invalid>
	return r5_27
__fixdfsi_exit:


word32 sysconf(word32 r4, word32 r12, ptr32 & r7Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402CEE
// MayUse:  r12:[0..31] r4:[0..63]
// LiveOut: r17 r4 r7
// Trashed: hi lo r10 r11 r13 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
sysconf_entry:
	struct <anonymous> tLoc0148
	word32 dwLoc0114
	word32 dwLoc0138
	word32 dwLoc012C
	word32 r17
	word24 nLoc0113_178 = SLICE(dwLoc0114, word24, 8)
l00404730:
	word32 r7_109
	word32 r4_108
	branch r4 >u 0xF8<32> l00404748
l0040473E:
	r4_108 = CONVERT(Mem7[0x00412368<p32> + r4 * 2<32>:int16], int16, int32)
	branch r4_108 != 0<32> l00404756
l00404756:
	r7_109 = 0xFFFFFFFF<32>
	branch r4_108 >= 0xFFFFFFFF<32> l00404752
l0040475C:
	branch r4_108 >= 0xFFFFFF00<32> l00404782
l00404782:
	r7_109 = r4_108 + 0xFFFFFFFF<32> & 0xFF<32>
	branch r7_109 >=u 0xA<32> l00404752
l0040478C:
	r7_109 = Mem7[0x00412340<p32> + r7_109 * 4<32>:word32]
	switch (r7_109) { l0040483C l00404794 l00404798 l004047A0 l00404830 l004047A8 l004047A8 l004047EC l004047EC l00404838 }
l00404838:
	r4_108 = 0<32>
l004047EC:
	word32 r3_25
	word32 r6_28
	word32 r2_23 = sysinfo(out r3_25, out r6_28)
	branch r6_28 != 0<32> l00404800
l004047FA:
	dwLoc0114 = SEQ(nLoc0113_178, 1<8>) (alias)
l00404800:
	r17 = dwLoc0138
	branch r4 == 0x15<32> l0040480C
l00404806:
	r17 = dwLoc012C
l0040480C:
	word32 r5_71
	word32 r11_319
	word32 r13_320
	word32 r9_318
	word32 r8_317
	word32 r7_316
	word32 r6_315
	word32 r3_314
	__udivdi3(r2_23, r3_25, dwLoc0114 *s r4, r4 *s 0<32> + SLICE(r4 *u64 dwLoc0114, word32, 32), Mem38[0x00454454<p32>:word32], 0<32>, r12, out r3_314, out r4_108, out r5_71, out r6_315, out r7_316, out r8_317, out r9_318, out r11_319, out r13_320)
	r7_109 = 0x7FFFFFFF<32>
	branch r5_71 == 0<32> l0040477C
l004047A8:
	word32 r10_307
	word32 r9_306
	word32 r8_305
	word32 r7_304
	word32 r6_303
	memset(&tLoc0148, 0<32>, 0x80<32>, out r6_303, out r7_304, out r8_305, out r9_306, out r10_307)
	Mem95[&tLoc0148:byte] = 1<8>
	word32 r9_313
	word32 r7_311
	word32 r8_312
	word32 r6_310
	word32 r5_309
	word32 r4_308
	__syscall(out r4_308, out r5_309, out r6_310, out r7_311, out r8_312, out r9_313)
	r4_108 = 0<32>
	r7_109 = 0<32>
l004047DA:
	word32 r6_113 = CONVERT(Mem112[&tLoc0148 + r7_109:byte], byte, word32)
	branch r6_113 != 0<32> l004047CE
l004047CE:
	Mem118[r7_109 + &tLoc0148:byte] = SLICE(r6_113, byte, 0) & SLICE(r6_113, byte, 0) + 0xFF<8>
	r4_108 = r4_108 + 1<32>
l004047E0:
	r7_109 = r7_109 + 1<32>
	branch r7_109 != 0x80<32> l004047DA
l004047EA:
l004047A0:
	r7_109 = 0x00454430<p32>
	r4_108 = Mem7[0x00454454<p32>:word32]
l00404794:
	r4_108 = 0x200000<32>
l00404798:
l0040483C:
	r4_108 = 0x31069<32>
l00404764:
	__ext(r4_108, 0<32>, 0xE<32>)
	word32 r6_132
	r4_108 = getrlimit64(&tLoc0148, out r6_132)
	r7_109 = 0x7FFFFFFF<32>
	r17 = Mem7[&tLoc0148:word32]
	branch r6_132 != 0<32> l00404830
l0040477C:
	r7_109 = 0x7FFFFFFF<32>
	branch r4_108 <=u 0x7FFFFFFF<32> l00404752
l00404780:
l00404830:
	r4_108 = 0x7FFFFFFF<32>
l00404748:
	word32 r4_302
	__errno_location(out r4_302)
	r7_109 = 0x16<32>
	r4_108 = 0xFFFFFFFF<32>
l00404752:
	r7Out = r7_109
	r17Out = r17
	return r4_108
sysconf_exit:


word32 isxdigit(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fill
//      isxdigit_l
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r6 r7
// Preserved: sp
isxdigit_entry:
l00404850:
	word32 r7_10 = 1<32>
	branch r4 <u 0xFFFFFFC6<32> l00404866
l0040485A:
	r7_10 = CONVERT((r4 | 0x20<32>) <u 0xFFFFFF99<32>, bool, word32)
l00404866:
	return r7_10
isxdigit_exit:


void isxdigit_l(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: sp
isxdigit_l_entry:
l0040486A:
l0040486A_thunk_isxdigit:
	isxdigit(r4)
	return
isxdigit_l_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l00404870:
	return
dummy_exit:


void __init_ssp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __init_libc
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__init_ssp_entry:
l00404872:
	return
__init_ssp_exit:


void __init_libc(word32 r0, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __libc_start_main
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 ra sp
__init_libc_entry:
	ptr32 fp
	struct <anonymous> tLocA8
	word32 dwLoc28
	word32 dwLoc7C
	word32 dwLoc78
	word32 dwLoc74
	word32 dwLoc70
	word32 dwLoc4C
l00404874:
	word32 r7_344
	word32 r9_346
	word32 r8_345
	word32 r6_343
	word32 r10_347
	memset(&tLocA8, 0<32>, 0x98<32>, out r6_343, out r7_344, out r8_345, out r9_346, out r10_347)
	Mem25[0x00432DD0<p32>:word32] = r4
	word32 r16_102 = r5
	word32 r4_26 = 0<32>
l0040488C:
	r4_26 = r4_359 + 1<32>
	r4_359 = r4_26
	branch Mem25[r4 + r4_359 * 4<32>:word32] != 0<32> l0040488C
l00404892:
	word32 r4_146 = r4 + (r4_26 << 2<8>)
l004048A0:
	word32 r7_38 = Mem37[r4_146:word32]
	branch r7_38 == 0<32> l004048B6
l004048B6:
	Mem41[0x004544A0<p32>:word32] = r7_38
	Mem43[0x004544A8<p32>:word32] = dwLoc28
	branch r5 != 0<32> l00404940
l004048CE:
	__init_tls(r0, &tLocA8)
	__init_ssp()
	branch dwLoc7C != dwLoc78 l004048EE
l004048E2:
	branch dwLoc74 != dwLoc70 l004048EE
l004048E8:
	branch dwLoc4C == 0<32> l00404966
l004048EE:
	word32 r6_350
	word32 r5_349
	word32 r4_348
	word32 r9_353
	word32 r8_352
	word32 r7_351
	__syscall(out r4_348, out r5_349, out r6_350, out r7_351, out r8_352, out r9_353)
	r16_102 = 0<32>
l00404918:
	branch __bit(CONVERT(Mem91[fp - 0xC0<32> + r16_102 + 6<32>:uint16], uint16, word32), 5<32>) l0040495C
l00404922:
	word32 r4_112
	word32 r5_354
	word32 r9_358
	word32 r6_355
	word32 r8_357
	word32 r7_356
	__syscall(out r4_112, out r5_354, out r6_355, out r7_356, out r8_357, out r9_358)
	branch r4_112 >= 0<32> l0040495C
l0040495C:
	r16_102 = r16_102 + 8<32>
	branch r16_102 != 0x18<32> l00404918
l00404962:
l00404966:
	return
__init_libc_exit:
l00404938:
	Mem132[r0:byte] = 0<8>
	__trap_code(0<32>)
l00404940:
	Mem134[0x00432520<p32>:word32] = r16_102
l00404946:
	Mem136[0x00432524<p32>:word32] = r16_102
l00404952:
	r16_102 = r16_102 + 1<32>
	word32 r7_140 = CONVERT(Mem136[r16_102 - 1<32>:byte], byte, word32)
	branch r7_140 != 0<32> l0040494E
l0040494E:
	branch r7_140 == 0x2F<32> l00404946
l0040495A:
l004048A4:
	branch r7_38 >=u 0x26<32> l0040489E
l004048A8:
	Mem144[fp - 0x10<32> + (r7_38 << 2<8>) - 0x98<32>:word32] = Mem37[r4_146 + 4<32>:word32]
l0040489E:
	r4_146 = r4_146 + 8<32>


void __libc_start_init()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __libc_start_main
// MayUse: 
// LiveOut:
// Trashed: r25 r7
// Preserved: r16 ra sp
__libc_start_init_entry:
l00404968:
	_init()
	word32 r16_13 = 0x0042FFF4<p32>
l0040497C:
	branch r16_13 <u 0x0042FFF8<p32> l00404976
l00404976:
	call Mem7[r16_13:word32] (retsize: 0;)
	r16_13 = r16_13 + 4<32>
l00404986:
	return
__libc_start_init_exit:


void __libc_start_main(word32 r0, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _start_c
// MayUse:  r0:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
__libc_start_main_exit:
__libc_start_main_entry:
l00404988:
	__init_libc(r0, r6 + (r5 + 1<32> << 2<8>), Mem13[r6:word32])
	__libc_start_init()
	main(r0, r5, r6)
	exit()
	__reserved_instruction(0<32>)


word32 __errno_location(ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_socket_option.isra.0.part.1
//      fn00400B56
//      ping4_receive_error_msg
//      fn00401E7A
//      fn004021AC
//      fn00402CEA
//      fn00402CEE
//      fn004032A0
//      malloc
//      realloc
//      mmap64
//      mremap
//      mbtowc
//      if_indextoname
//      inet_ntop
//      inet_pton
//      name_from_hosts
//      __lookup_serv
//      __res_msend_rc
//      __get_resolv_conf
//      socket
//      __sigaction
//      sigprocmask
//      printf_core
//      vsnprintf
//      seteuid
//      __floatscan
//      __intscan
//      __syscall_ret
//      calloc
//      __expand_heap
//      handler
//      readdir64
//      mbrtowc
//      mbsrtowcs
//      wcrtomb
//      sem_init
//      sem_post
//      sem_wait
//      sem_trywait
// MayUse: 
// LiveOut: r3 r4
// Trashed: r25 r3 r4
// Preserved: sp
__errno_location_entry:
l004049B0:
	word32 r3_4 = __read_user_local()
	r4Out = r3_4 + 0xFFFFFF78<32>
	return r3_4
__errno_location_exit:


word32 strerror_l(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strerror
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
strerror_l_entry:
l004049C0:
	word32 r7_10 = 0<32>
l004049C2:
	word32 r6_8 = CONVERT(Mem0[0x00412C68<p32> + r7_10:byte], byte, word32)
	branch r6_8 != 0<32> l004049D8
l004049D8:
	branch r4 == r6_8 l004049CC
l004049DC:
	r7_10 = r7_10 + 1<32>
l004049CC:
	word32 r4_11 = 0x0041255C<p32>
l004049D0:
	branch r7_10 != 0<32> l004049E0
l004049E0:
	r4_11 = r4_38 + 1<32>
	r4_38 = r4_11
	branch CONVERT(Mem0[r4_38:byte], byte, word32) != 0<32> l004049E0
l004049E6:
	r7_10 = r7_10 + 0xFFFFFFFF<32>
l004049D2:
l004049D4_thunk___lctrans:
	__lctrans()
	return r4_11
strerror_l_exit:


word32 strerror(word32 r4, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_socket_option.isra.0.part.1
//      create_socket
//      ping4_receive_error_msg
//      fn00401E7A
//      ping6_receive_error_msg
// MayUse:  r4:[0..31]
// LiveOut: r3 r4
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: sp
strerror_entry:
l004049EA:
	word32 r3_4 = __read_user_local()
l004049F2_thunk_strerror_l:
	r4Out = strerror_l(r4)
	return r3_4
strerror_exit:


void abort(word32 r0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      pinger
//      ping6_receive_error_msg
// MayUse:  r0:[0..31]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
abort_exit:
abort_entry:
l00404A00:
	raise()
	__block_all_sigs()
	Mem26[r0:byte] = 0<8>
	__trap_code(0<32>)
	__reserved_instruction(0<32>)


void __funcs_on_exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7E
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__funcs_on_exit_entry:
l00404A20:
	return
__funcs_on_exit_exit:


void __libc_exit_fini()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7E
// MayUse: 
// LiveOut:
// Trashed: r25 r7
// Preserved: r16 ra sp
__libc_exit_fini_entry:
l00404A22:
	word32 r16_11 = 0x0042FFFC<p32>
l00404A32:
	branch 0x0042FFF8<p32> <u r16_11 l00404A2C
l00404A2C:
	r16_11 = r16_11 + 0xFFFFFFFC<32>
	call Mem7[r16_11:word32] (retsize: 0;)
l00404A3C:
l00404A40_thunk__fini:
	_fini()
	return
__libc_exit_fini_exit:


word32 __syscall(ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E82
//      fn00402CEE
//      __init_libc
//      sysinfo
//      alloc_fwd
//      alloc_rev
//      free
//      malloc
//      getrlimit64
//      ioctl
//      madvise
//      mmap64
//      mremap
//      bind
//      getsockname
//      getsockopt
//      if_indextoname
//      if_nametoindex
//      __rtnetlink_enumerate
//      cleanup
//      setsockopt
//      socket
//      sched_yield
//      __block_all_sigs
//      __block_app_sigs
//      __restore_sigs
//      raise
//      setitimer
//      __libc_sigaction
//      __fopen_rb_ca
//      __stdio_close
//      __stdio_read
//      __stdio_seek
//      __unlock
//      __syscall_cp
//      __wait
//      pthread_sigmask
//      __clock_gettime
//      geteuid
//      getpid
//      isatty
//      fn0040B048
//      __init_tp
//      __init_tls
//      _Exit
//      __expand_heap
//      __unlockfile
//      __stdio_write
//      __stdout_write
//      __set_thread_area
//      handler
//      __synccall
//      fn0040E00C
//      readdir64
//      open64
//      sem_post
//      lseek64
// MayUse: 
// LiveOut: r2 r4 r5 r6 r7 r8 r9
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__syscall_entry:
	word32 r4
	word32 r5
	word32 r6
	word32 r7
	word32 r8
	word32 r9
	word32 r10
l00404A50:
	__syscall(0<32>)
	r4Out = r5
	r5Out = r6
	r6Out = r7
	r7Out = r8
	r8Out = r9
	r9Out = r10
	return r4
__syscall_exit:


word32 sysinfo(ptr32 & r3Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402CEE
// MayUse: 
// LiveOut: r2 r3 r6
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sysinfo_entry:
l00404A70:
	word32 r4_12
	word32 r6_14
	word32 r5_27
	word32 r7_28
	word32 r8_29
	word32 r9_30
	word32 r2_10 = __syscall(out r4_12, out r5_27, out r6_14, out r7_28, out r8_29, out r9_30)
l00404A80_thunk___syscall_ret:
	word32 r4_31
	word32 r7_32
	r3Out = __syscall_ret(r4_12, out r4_31, out r7_32)
	r6Out = r6_14
	return r2_10
sysinfo_exit:


void __lctrans_impl()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lctrans
//      __lctrans_cur
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__lctrans_impl_entry:
l00404A90:
	return
__lctrans_impl_exit:


void __lctrans()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strerror
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__lctrans_entry:
l00404A92:
l00404A92_thunk___lctrans_impl:
	__lctrans_impl()
	return
__lctrans_exit:


word32 __lctrans_cur()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __getopt_msg
//      gai_strerror
// MayUse: 
// LiveOut: r3
// Trashed: r25 r3 r5 r7
// Preserved: sp
__lctrans_cur_entry:
l00404A96:
	word32 r3_4 = __read_user_local()
l00404AA0_thunk___lctrans_impl:
	__lctrans_impl()
	return r3_4
__lctrans_cur_exit:


void __simple_malloc(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r2 r22 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__simple_malloc_entry:
	struct <anonymous> tLoc14
l00404AB0:
	word32 r17_113
	word32 r7_106
	word32 r16_13
	branch r4 == 0<32> l00404B26
l00404B26:
	__lock(0x00432538<p32>)
	r16_13 = 0<32>
	r17_113 = 1<32>
	r7_106 = Mem9[0x00432534<p32>:word32]
l00404AB4:
	word32 r16_25
	r17_113 = r4
	branch r4 <u 2<32> l00404B72
l00404B72:
	r16_25 = 0<32>
	r17_113 = 1<32>
l00404ABA:
	word32 r16_27 = 1<32>
l00404AC2:
	r16_27 = r16_27 << 1<32>
	branch r16_27 <u r4 l00404ABE
l00404ABE:
	branch r16_27 >=u 0x10<32> l00404B3A
l00404B3A:
	__lock(0x00432538<p32>)
	r7_106 = Mem9[0x00432534<p32>:word32]
	r16_13 = r16_27 + 0xFFFFFFFF<32> & -r7_106
	branch r4 >u 0x8000000F<32> l00404AE0
l00404B5A:
l00404AC8:
	r16_25 = r16_27 + 0xFFFFFFFF<32>
l00404ACA:
	__lock(0x00432538<p32>)
	r7_106 = Mem9[0x00432534<p32>:word32]
	r16_13 = r16_25 & -r7_106
l00404ADE:
	r17_113 = r17_113 + r16_13
l00404AE0:
	branch Mem9[0x00432530<p32>:word32] - r7_106 >=u r17_113 l00404B10
l00404AEC:
	Mem77[&tLoc14:word32] = r17_113
	word32 r4_80
	word32 r6_81
	word32 r11_212
	word32 r10_211
	word32 r3_207
	word32 r7_208
	word32 r8_209
	word32 r9_210
	__expand_heap(&tLoc14, out r3_207, out r4_80, out r6_81, out r7_208, out r8_209, out r9_210, out r10_211, out r11_212)
	branch r4_80 == 0<32> l00404B64
l00404B64:
	__unlock(0x00432538<p32>)
	return
l00404AF6:
	branch r4_80 == Mem77[0x00432530<p32>:word32] l00404B5C
l00404B5C:
	r7_106 = Mem77[0x00432534<p32>:word32]
l00404B00:
	r7_106 = r4_80
l00404B06:
	r17_113 = Mem77[&tLoc14:word32]
	Mem117[0x00432530<p32>:word32] = r4_80 + r6_81
l00404B10:
	Mem126[0x00432534<p32>:word32] = r7_106 + r17_113
	__unlock(0x00432538<p32>)
	return
__simple_malloc_exit:


word32 alloc_fwd(word32 r4, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free
//      realloc
// MayUse:  r4:[0..31]
// LiveOut: r19 r2 r22 r4 r8 r9
// Trashed: r19 r2 r22 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r20 r21 ra sp
alloc_fwd_entry:
	word32 r19
	word32 r22
	word32 r2
	word32 r8
	word32 r9
l00404B80:
	word32 dwLoc20_330 = r22
l00404B84:
	word32 r18_174 = Mem24[r4 + 4<32>:word32]
l00404B86:
	branch !__bit(r18_174, 0<32>) l00404C4A
l00404B8A:
	word32 r17_122
	word32 r22_33
	word32 r20_35
	word32 r16_32
	word32 r7_28 = r18_174 >>u 4<32>
	branch r7_28 >=u 0xFFFFFFDE<32> l00404C24
l00404C24:
	branch r7_28 >u 0xFFFFFE00<32> l00404C5C
l00404C5C:
	branch r7_28 >u 0xFFFFE3FF<32> l00404C7E
l00404C7E:
	r16_32 = 0x3F8<32>
	r22_33 = 0x3F<32>
	r17_122 = 0x3F<32>
	r20_35 = 0x3F0<32>
l00404C64:
	word32 r7_40 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32)
	r20_35 = r7_40 + 0x10<32> << 4<32>
	r17_122 = r7_40 + 0x10<32>
	r22_33 = r7_40 + 0x10<32>
	r16_32 = r20_35 + 8<32>
l00404C2C:
	r17_122 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32)
	r20_35 = r17_122 << 4<32>
	r22_33 = r17_122
	r16_32 = (r17_122 << 4<32>) + 8<32>
l00404B92:
	r20_35 = r7_28 + 0xFFFFFFFF<32> << 4<32>
	r17_122 = r7_28 + 0xFFFFFFFF<32>
	r22_33 = r7_28 + 0xFFFFFFFF<32>
	r16_32 = r20_35 + 8<32>
l00404B9E:
	word32 r7_109
	word32 r16_61 = r16_32 + 0x00432550<p32>
	branch Mem39[0x0045443C<p32>:word32] != 0<32> l00404C12
l00404C12:
	__sync(0<32>)
l00404C16:
	word32 r6_64 = __load_linked_32(Mem39[r16_61:word32])
	branch __store_conditional_32(Mem39[r16_61:word32], 1<32>) == 0<32> l00404C16
l00404C22:
l00404C02:
	__sync(0<32>)
	branch r6_64 == 0<32> l00404C4E
l00404C4E:
	r7_109 = Mem39[r4 + 4<32>:word32]
	branch Mem39[0x00432550<p32> + r20_35 + 0x10<32>:word32] != 0<32> l00404BCA
l00404C5A:
l00404C08:
	word32 r4_615
	word32 r5_616
	r2 = __wait(r16_61, r16_61 + 4<32>, 1<32>, 1<32>, out r4_615, out r5_616, out r8, out r9)
l00404BAC:
	branch Mem39[0x00432550<p32> + r20_35 + 0x10<32>:word32] != 0<32> l00404C8E
l00404BB6:
	r7_109 = r18_174
l00404BB8:
	word32 r20_100 = r20_35 + 0x00432550<p32>
	word32 r6_102 = (r22_33 << 4<32>) + 8<32> + 0x00432550<p32>
	Mem103[r20_100 + 0x10<32>:byte] = SLICE(r6_102, byte, 0)
	Mem104[r20_100 + 0x14<32>:byte] = SLICE(r6_102, byte, 0)
l00404BCA:
	branch r18_174 == r7_109 l00404C8E
l00404C8E:
	word32 r7_119 = Mem116[r4 + 12<i32>:word32]
	branch Mem116[r4 + 8<i32>:word32] == r7_119 l00404CEC
l00404CEC:
	word32 r7_128 = 1<32> >>u -r17_122
	word32 r5_129 = CONVERT(r17_122 < 0x20<32>, bool, word32)
	word32 r6_130 = 1<32> << r17_122
	branch r17_122 != 0<32> l00404D02
l00404CFE_1:
	r7_128 = 0<32>
l00404D02:
	branch r5_129 != 0<32> l00404D06
l00404D02_1:
	r7_128 = r6_130
l00404D06:
	branch r5_129 != 0<32> l00404D0A
l00404D06_1:
	r6_130 = 0<32>
l00404D0A:
	word32 r7_140 = ~r7_128
	word32 r4_143 = ~r6_130
	branch r6_130 == 0<32> l00404D34
l00404D14:
	__sync(0<32>)
l00404D1C:
	branch __store_conditional_32(Mem116[0x554<32>:word32], __load_linked_32(Mem116[0x554<32>:word32]) & r4_143) == 0<32> l00404D1C
l00404D30:
	__sync(0<32>)
l00404D34:
	branch r7_140 == 0xFFFFFFFF<32> l00404D4C
l00404D38:
	__sync(0<32>)
l00404D3C:
	branch __store_conditional_32(Mem116[0x00432554<p32>:word32], __load_linked_32(Mem116[0x00432554<p32>:word32]) & r7_140) == 0<32> l00404D3C
l00404D48:
	__sync(0<32>)
l00404D4C:
	r18_174 = Mem116[r4 + 4<32>:word32]
	r7_119 = Mem116[r4 + 12<i32>:word32]
l00404C96:
	word32 r5_197 = __ins(r18_174, 0<32>, 0<32>, 1<32>)
	Mem206[r4 + r5_197:word32] = Mem196[r4 + r5_197:word32] | 1<32>
	branch Mem206[r16_61:word32] == 0<32> l00404CC6
l00404CB8:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_330 = 0<32>
	branch Mem219[r16_61 + 4<32>:word32] != 0<32> l00404CCA
l00404CCA:
	word32 r6_609
	word32 r5_608
	word32 r7_610
	word32 r4_227
	r2 = __syscall(out r4_227, out r5_608, out r6_609, out r7_610, out r8, out r9)
	branch r4_227 != 0xFFFFFFDA<32> l00404CC6
l00404CDE:
	word32 r7_614
	word32 r4_611
	word32 r6_613
	word32 r5_612
	word32 r8_244
	word32 r9_245
	word32 r2_238 = __syscall(out r4_611, out r5_612, out r6_613, out r7_614, out r8_244, out r9_245)
	r4Out = 1<32>
	r8Out = r8_244
	r9Out = r9_245
	r19Out = r7_119
	r22Out = 0<32>
	return r2_238
l00404CC6:
	r4Out = 1<32>
	r8Out = r8
	r9Out = r9
	r19Out = r7_119
	r22Out = dwLoc20_330
	return r2
l00404BCE:
	branch Mem117[r16_61:word32] == 0<32> l00404C44
l00404C44:
	r18_174 = r7_109
	branch __bit(r7_109, 0<32>) l00404B8A
l00404C4A:
	r4Out = 0<32>
	r8Out = r8
	r9Out = r9
	r19Out = r19
	r22Out = dwLoc20_330
	return r2
alloc_fwd_exit:
l00404BD2:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_330 = 0<32>
	branch Mem284[r16_61 + 4<32>:word32] == 0<32> l00404B84
l00404BE0:
	word32 r7_603
	word32 r5_601
	word32 r6_602
	word32 r4_292
	r2 = __syscall(out r4_292, out r5_601, out r6_602, out r7_603, out r8, out r9)
	branch r4_292 != 0xFFFFFFDA<32> l00404B84
l00404BF4:
	word32 r6_606
	word32 r7_607
	word32 r5_605
	word32 r4_604
	r2 = __syscall(out r4_604, out r5_605, out r6_606, out r7_607, out r8, out r9)
	r18_174 = Mem284[r4 + 4<32>:word32]


word32 alloc_rev(word32 r4, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r22Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free
//      malloc
// MayUse:  r4:[0..31]
// LiveOut: r2 r22 r4 r5 r8 r9
// Trashed: r2 r20 r22 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r21 ra sp
alloc_rev_entry:
	word32 r22
	word32 r2
	word32 r5
	word32 r8
	word32 r9
l00404D54:
	word32 dwLoc20_332 = r22
l00404D58:
	word32 r18_25 = Mem24[r4:word32]
l00404D5A:
	branch !__bit(r18_25, 0<32>) l00404E1E
l00404D5E:
	word32 r17_125
	word32 r22_33
	word32 r20_35
	word32 r16_32
	word32 r7_28 = r18_25 >>u 4<32>
	branch r7_28 >=u 0xFFFFFFDE<32> l00404DF8
l00404DF8:
	branch r7_28 >u 0xFFFFFE00<32> l00404E30
l00404E30:
	branch r7_28 >u 0xFFFFE3FF<32> l00404E52
l00404E52:
	r16_32 = 0x3F8<32>
	r22_33 = 0x3F<32>
	r17_125 = 0x3F<32>
	r20_35 = 0x3F0<32>
l00404E38:
	word32 r7_40 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32)
	r20_35 = r7_40 + 0x10<32> << 4<32>
	r17_125 = r7_40 + 0x10<32>
	r22_33 = r7_40 + 0x10<32>
	r16_32 = r20_35 + 8<32>
l00404E00:
	r17_125 = CONVERT(Mem39[(r7_28 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32)
	r20_35 = r17_125 << 4<32>
	r22_33 = r17_125
	r16_32 = (r17_125 << 4<32>) + 8<32>
l00404D66:
	r20_35 = r7_28 + 0xFFFFFFFF<32> << 4<32>
	r17_125 = r7_28 + 0xFFFFFFFF<32>
	r22_33 = r7_28 + 0xFFFFFFFF<32>
	r16_32 = r20_35 + 8<32>
l00404D72:
	word32 r7_109
	word32 r16_61 = r16_32 + 0x00432550<p32>
	branch Mem39[0x0045443C<p32>:word32] != 0<32> l00404DE6
l00404DE6:
	__sync(0<32>)
l00404DEA:
	word32 r6_64 = __load_linked_32(Mem39[r16_61:word32])
	branch __store_conditional_32(Mem39[r16_61:word32], 1<32>) == 0<32> l00404DEA
l00404DF6:
l00404DD6:
	__sync(0<32>)
	branch r6_64 == 0<32> l00404E22
l00404E22:
	r7_109 = Mem39[r4:word32]
	branch Mem39[0x00432550<p32> + r20_35 + 0x10<32>:word32] != 0<32> l00404D9E
l00404E2E:
l00404DDC:
	word32 r4_613
	r2 = __wait(r16_61, r16_61 + 4<32>, 1<32>, 1<32>, out r4_613, out r5, out r8, out r9)
l00404D80:
	branch Mem39[0x00432550<p32> + r20_35 + 0x10<32>:word32] != 0<32> l00404E62
l00404D8A:
	r7_109 = r18_25
l00404D8C:
	word32 r20_100 = r20_35 + 0x00432550<p32>
	word32 r6_102 = (r22_33 << 4<32>) + 8<32> + 0x00432550<p32>
	Mem103[r20_100 + 0x10<32>:byte] = SLICE(r6_102, byte, 0)
	Mem104[r20_100 + 0x14<32>:byte] = SLICE(r6_102, byte, 0)
l00404D9E:
	branch r18_25 == r7_109 l00404E62
l00404E62:
	word32 r19_118 = r4 - __ins(r18_25, 0<32>, 0<32>, 1<32>)
	branch Mem119[r19_118 + 8<i32>:word32] == Mem119[r19_118 + 12<i32>:word32] l00404EC8
l00404EC8:
	word32 r7_131 = 1<32> >>u -r17_125
	word32 r5_132 = CONVERT(r17_125 < 0x20<32>, bool, word32)
	word32 r6_133 = 1<32> << r17_125
	branch r17_125 != 0<32> l00404EDE
l00404EDA_1:
	r7_131 = 0<32>
l00404EDE:
	branch r5_132 != 0<32> l00404EE2
l00404EDE_1:
	r7_131 = r6_133
l00404EE2:
	branch r5_132 != 0<32> l00404EE6
l00404EE2_1:
	r6_133 = 0<32>
l00404EE6:
	word32 r7_143 = ~r7_131
	word32 r4_146 = ~r6_133
	branch r6_133 == 0<32> l00404F10
l00404EF0:
	__sync(0<32>)
l00404EF8:
	branch __store_conditional_32(Mem119[0x554<32>:word32], __load_linked_32(Mem119[0x554<32>:word32]) & r4_146) == 0<32> l00404EF8
l00404F0C:
	__sync(0<32>)
l00404F10:
	branch r7_143 == 0xFFFFFFFF<32> l00404F28
l00404F14:
	__sync(0<32>)
l00404F18:
	branch __store_conditional_32(Mem119[0x00432554<p32>:word32], __load_linked_32(Mem119[0x00432554<p32>:word32]) & r7_143) == 0<32> l00404F18
l00404F24:
	__sync(0<32>)
l00404F28:
l00404E70:
	word32 r4_201 = __ins(Mem119[r19_118 + 4<32>:word32], 0<32>, 0<32>, 1<32>)
	word32 r5_203 = Mem198[r19_118 + r4_201:word32]
	Mem208[r19_118 + r4_201:word32] = r5_203 | 1<32>
	word32 r5_206 = r5_203 | 1<32>
	branch Mem208[r16_61:word32] == 0<32> l00404EA2
l00404E94:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_332 = 0<32>
	branch Mem221[r16_61 + 4<32>:word32] != 0<32> l00404EA6
l00404EA6:
	word32 r6_608
	word32 r7_609
	word32 r4_229
	r2 = __syscall(out r4_229, out r5_206, out r6_608, out r7_609, out r8, out r9)
	branch r4_229 != 0xFFFFFFDA<32> l00404EA2
l00404EBA:
	word32 r6_611
	word32 r4_610
	word32 r7_612
	word32 r5_243
	word32 r8_246
	word32 r9_247
	word32 r2_240 = __syscall(out r4_610, out r5_243, out r6_611, out r7_612, out r8_246, out r9_247)
	r4Out = 1<32>
	r5Out = r5_243
	r8Out = r8_246
	r9Out = r9_247
	r22Out = 0<32>
	return r2_240
l00404EA2:
	r4Out = 1<32>
	r5Out = r5_206
	r8Out = r8
	r9Out = r9
	r22Out = dwLoc20_332
	return r2
l00404DA2:
	branch Mem120[r16_61:word32] == 0<32> l00404E18
l00404E18:
	r18_25 = r7_109
	branch __bit(r7_109, 0<32>) l00404D5E
l00404E1E:
	r4Out = 0<32>
	r5Out = r5
	r8Out = r8
	r9Out = r9
	r22Out = dwLoc20_332
	return r2
alloc_rev_exit:
l00404DA6:
	__sync(0<32>)
	__sync(0<32>)
	dwLoc20_332 = 0<32>
	branch Mem286[r16_61 + 4<32>:word32] == 0<32> l00404D58
l00404DB4:
	word32 r6_603
	word32 r7_604
	word32 r4_294
	r2 = __syscall(out r4_294, out r5, out r6_603, out r7_604, out r8, out r9)
	branch r4_294 != 0xFFFFFFDA<32> l00404D58
l00404DC8:
	word32 r4_605
	word32 r7_607
	word32 r6_606
	r2 = __syscall(out r4_605, out r5, out r6_606, out r7_607, out r8, out r9)
	r18_25 = Mem286[r4:word32]


word32 free(word32 r0, word32 r4, word32 r11, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      niquery_option_subject_addr_handler
//      malloc
//      realloc
//      freeaddrinfo
//      netlink_msg_to_ifaddr
//      freeifaddrs
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r10 r11 r2 r3 r4 r6 r7 r8 r9
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
free_entry:
	word32 r10
	word32 r2
	word32 r3
	word32 r6
	word32 r7
	word32 r8
	word32 r9
l00404F2E:
	branch r4 == 0<32> l00405290
l00405290:
	r3Out = r3
	r4Out = r4
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	return r2
l00404F32:
	word32 r7_26 = Mem24[r4 - 4<32>:word32]
	word32 r17_124 = r4 + 0xFFFFFFF8<32>
	word32 r22_29 = __ins(r7_26, 0<32>, 0<32>, 1<32>)
	branch !__bit(r7_26, 0<32>) l00404F5C
l00404F46:
	r7_26 = Mem24[r4 - 8<32>:word32]
	branch __bit(r7_26, 0<32>) l00404F6E
l00404F54:
	Mem34[r0:byte] = 0<8>
	__trap_code(0<32>)
l00404F5C:
	word32 r18_39 = r4 + 0xFFFFFFF8<32> + r22_29
	branch Mem37[r4 + 0xFFFFFFF8<32> + r22_29:word32] == r7_26 l00404F76
l00404F76:
	word32 r19_41 = r22_29
	word32 dwLoc38_675 = 0<32>
l00404F82:
	branch __bit(Mem47[r17_124:word32] & Mem47[r18_39 + 4<32>:word32], 0<32>) l0040500C
l00404F8C:
	word32 dwLoc34_678
	word32 r8_108
	word32 r20_114
	word32 r16_53 = r19_41 >>u 4<32>
	word32 r16_181 = r16_53 + 0xFFFFFFFF<32>
	branch r16_53 <u 0xFFFFFFDE<32> l00404FB0
l00404F9C:
	branch r16_53 >u 0xFFFFFE00<32> l004050C6
l004050C6:
	branch r16_53 >u 0xFFFFE3FF<32> l00405140
l00405140:
	r8_108 = 0x3F8<32>
	r16_181 = 0x3F<32>
	r20_114 = 0x3F0<32>
	dwLoc34_678 = 0x3F<32>
l004050CE:
	word32 r16_69 = CONVERT(Mem58[(r16_53 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32)
	r20_114 = r16_69 + 0x10<32> << 4<32>
	r16_181 = r16_69 + 0x10<32>
	dwLoc34_678 = r16_69 + 0x10<32>
	r8_108 = r20_114 + 8<32>
l00404FA4:
	r16_181 = CONVERT(Mem58[(r16_53 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32)
l00404FB0:
	r20_114 = r16_181 << 4<32>
	dwLoc34_678 = r16_181
	r8_108 = r20_114 + 8<32>
l00404FBA:
	word32 r23_92 = 0x00432550<p32> + r8_108
	branch Mem86[0x00454433<p32>:word32] != 0<32> l004050B4
l004050B4:
	__sync(0<32>)
l004050B8:
	word32 r6_95 = __load_linked_32(Mem86[r23_92:word32])
	branch __store_conditional_32(Mem86[r23_92:word32], 1<32>) == 0<32> l004050B8
l004050C4:
l004050A0:
	__sync(0<32>)
	branch r6_95 == 0<32> l00404FC4
l004050A8:
	word32 r4_1238
	word32 r9_1240
	word32 r5_1239
	r2 = __wait(r23_92, r23_92 + 4<32>, 1<32>, 1<32>, out r4_1238, out r5_1239, out r8_108, out r9_1240)
l00404FC4:
	branch Mem86[0x00432550<p32> + r20_114 + 0x10<32>:word32] == 0<32> l004050E8
l004050E8:
	r17_124 = dwLoc34_678
l00404FCE:
	branch Mem134[0x00454433<p32>:word32] != 0<32> l00405086
l00405086:
	__sync(0<32>)
l0040508A:
	word32 r6_139 = __load_linked_32(Mem134[0x00432958<p32>:word32])
	branch __store_conditional_32(Mem134[0x00432958<p32>:word32], 1<32>) == 0<32> l0040508A
l0040509E:
l0040506E:
	__sync(0<32>)
	branch r6_139 == 0<32> l00404FD4
l00405076:
	word32 r9_1230
	word32 r5_1229
	word32 r4_1228
	r2 = __wait(0x00432958<p32>, 0x0043295C<p32>, 1<32>, 1<32>, out r4_1228, out r5_1229, out r8_108, out r9_1230)
l00404FD4:
	branch !__bit(Mem134[r17_124:word32] & Mem134[r18_39 + 4<32>:word32], 0<32>) l00405150
l00405150:
	word32 r7_186 = -r16_181
	word32 r11_189 = Mem134[0x959<32>:word32]
	word32 r4_1144 = 0x405<32>
	word32 r22_188 = CONVERT(r16_181 < 0x20<32>, bool, word32)
	word32 r6_190 = Mem134[0x955<32>:word32] >>u r16_181
	word32 r5_191 = r11_189 << r7_186
	word32 r10_192 = r11_189 >>u r16_181
	branch r16_181 != 0<32> l00405174
l00405170_1:
	r5_191 = 0<32>
l00405174:
	word32 r6_196 = r6_190 | r5_191
	branch r22_188 != 0<32> l0040517A
l00405176_1:
	r6_196 = r10_192
l0040517A:
	branch __bit(r6_196, 0<32>) l00405218
l00405218:
	word32 r7_204 = 1<32> >>u r7_186
	word32 r5_207 = 1<32> << r16_181
	branch r16_181 != 0<32> l00405226
l00405222_1:
	r7_204 = 0<32>
l00405226:
	branch r22_188 != 0<32> l0040522A
l00405226_1:
	r7_204 = r5_207
l0040522A:
	branch r22_188 != 0<32> l0040522E
l0040522A_1:
	r5_207 = 0<32>
l0040522E:
	branch r5_207 == 0<32> l0040524E
l00405232:
	__sync(0<32>)
l00405236:
	branch __store_conditional_32(Mem134[0x555<32>:word32], __load_linked_32(Mem134[0x555<32>:word32]) | r5_207) == 0<32> l00405236
l0040524A:
	__sync(0<32>)
l0040524E:
	branch r7_204 == 0<32> l0040517E
l00405252:
	__sync(0<32>)
l00405256:
	branch __store_conditional_32(Mem134[0x00432554<p32>:word32], __load_linked_32(Mem134[0x00432554<p32>:word32]) | r7_204) == 0<32> l00405256
l00405262:
	__sync(0<32>)
l0040517E:
	word32 r7_280 = Mem269[0x00432958<p32>:word32]
	branch r7_280 == 0<32> l0040519C
l00405188:
	__sync(0<32>)
	Mem281[0x00432958<p32>:byte] = 0<8>
	__sync(0<32>)
	r7_280 = Mem281[0x0043295C<p32>:word32]
	branch r7_280 != 0<32> l00405268
l00405268:
	word32 r9_1234
	word32 r7_1233
	word32 r5_1231
	word32 r6_1232
	r2 = __syscall(out r4_1144, out r5_1231, out r6_1232, out r7_1233, out r8_108, out r9_1234)
	r7_280 = 0xFFFFFFDA<32>
	branch r4_1144 != 0xFFFFFFDA<32> l0040519C
l00405280:
	word32 r6_1242
	word32 r9_1243
	word32 r5_1241
	r2 = __syscall(out r4_1144, out r5_1241, out r6_1242, out r7_280, out r8_108, out r9_1243)
l0040519C:
	word32 r6_1161 = Mem309[0x00432550<p32> + r20_114 + 0x14<32>:word32]
	word32 r9_1189 = 0x00432550<p32> + (r7_280 + 1<32> << 4<32>)
	Mem335[r9_1189 + 1<32>:word32] = dwLoc34_678
	branch Mem335[dwLoc34_678 + 0xC<32>:word32] != 0<32> l004051F8
l004051F8:
	r2 = madvise(out r3, out r4_1144, out r6_1161, out r8_108, out r9_1189)
l004051C0:
	word32 r7_1165 = Mem337[r23_92:word32]
	branch r7_1165 == 0<32> l004051D2
l004051C4:
	__sync(0<32>)
	Mem409[r23_92:word32] = r11_189
	__sync(0<32>)
	r7_1165 = Mem409[r23_92 + 1<32>:word32]
	branch r7_1165 != 0<32> l004051D4
l004051D4:
	word32 r7_1236
	word32 r5_1235
	r2 = __syscall(out r4_1144, out r5_1235, out r6_1161, out r7_1236, out r8_108, out r9_1189)
	r7_1165 = 0xFFFFFFDA<32>
	branch r4_1144 != 0xFFFFFFDA<32> l004051D2
l004051E8:
l004051F4_thunk___syscall:
	word32 r4_442
	word32 r6_444
	word32 r7_445
	word32 r8_446
	word32 r9_447
	word32 r5_1237
	word32 r2_440 = __syscall(out r4_442, out r5_1237, out r6_444, out r7_445, out r8_446, out r9_447)
	r3Out = r3
	r4Out = r4_442
	r6Out = r6_444
	r7Out = r7_445
	r8Out = r8_446
	r9Out = r9_447
	r10Out = r10_192
	r11Out = r11_189
	return r2_440
l004051D2:
	r3Out = r3
	r4Out = r4_1144
	r6Out = r6_1161
	r7Out = r7_1165
	r8Out = r8_108
	r9Out = r9_1189
	r10Out = r10_192
	r11Out = r11_189
	return r2
l00404FDE:
	branch Mem134[0x00432958<p32>:word32] == 0<32> l00404FF8
l00404FE4:
	__sync(0<32>)
	Mem462[0x00432958<p32>:byte] = 0<8>
	__sync(0<32>)
	branch Mem462[0x0043295C<p32>:word32] != 0<32> l00405118
l00405118:
	word32 r5_1206
	word32 r6_1207
	word32 r4_470
	word32 r9_1210
	word32 r8_1209
	word32 r7_1208
	__syscall(out r4_470, out r5_1206, out r6_1207, out r7_1208, out r8_1209, out r9_1210)
	branch r4_470 != 0xFFFFFFDA<32> l00404FF8
l00405130:
	word32 r8_1226
	word32 r7_1225
	word32 r5_1223
	word32 r6_1224
	word32 r9_1227
	word32 r4_1222
	__syscall(out r4_1222, out r5_1223, out r6_1224, out r7_1225, out r8_1226, out r9_1227)
l00404FF8:
	branch Mem490[r23_92:word32] == 0<32> l0040500C
l00404FFC:
	__sync(0<32>)
	Mem503[r23_92:word32] = r11
	__sync(0<32>)
	branch Mem503[r23_92 + 1<32>:word32] != 0<32> l004050F8
l004050F8:
	word32 r9_1215
	word32 r4_511
	word32 r8_1214
	word32 r7_1213
	word32 r6_1212
	word32 r5_1211
	__syscall(out r4_511, out r5_1211, out r6_1212, out r7_1213, out r8_1214, out r9_1215)
	branch r4_511 != 0xFFFFFFDA<32> l0040500C
l0040510C:
	word32 r6_1218
	word32 r4_1216
	word32 r7_1219
	word32 r5_1217
	word32 r9_1221
	word32 r8_1220
	__syscall(out r4_1216, out r5_1217, out r6_1218, out r7_1219, out r8_1220, out r9_1221)
l0040500C:
	word32 r5_1201
	word32 r8_1202
	word32 r9_1203
	word32 r4_534
	word32 r22_540
	alloc_rev(r17_124, out r4_534, out r5_1201, out r8_1202, out r9_1203, out r22_540)
	branch r4_534 == 0<32> l0040503E
l00405012:
	r17_124 = r17_124 - __ins(Mem543[r17_124:word32], 0<32>, 0<32>, 1<32>)
	word32 r7_549 = __ins(Mem543[r17_124 + 4<32>:word32], 0<32>, 0<32>, 1<32>)
	word32 r5_545 = 0x280000<32>
	word32 r6_550 = r7_549 + r22_540
	branch r6_550 <=u 0x280000<32> l0040503E
l0040502E:
	r17_124 = dwLoc38_675
	branch CONVERT(r7_549 <u (r6_550 ^ r7_549), bool, word32) == 0<32> l0040503C
l00405038_1:
	r5_545 = 1<32>
l0040503C:
	dwLoc38_675 = r5_545
l0040503E:
	word32 r9_1205
	word32 r8_1204
	word32 r22_576
	word32 r4_570
	r2 = alloc_fwd(r18_39, out r4_570, out r8_1204, out r9_1205, out r19_41, out r22_576)
	branch r4_570 == 0<32> l00404F82
l00405046:
	word32 r7_582 = __ins(Mem579[r18_39 + 4<32>:word32], 0<32>, 0<32>, 1<32>)
	word32 r6_583 = r7_582 + r22_576
	r19_41 = r19_41 + r7_582
	branch r6_583 <=u 0x280000<32> l0040506A
l0040505A:
	r17_124 = dwLoc38_675
	branch CONVERT(r7_582 <u (r6_583 ^ r7_582), bool, word32) == 0<32> l00405068
l00405064_1:
	r4_570 = 1<32>
l00405068:
	dwLoc38_675 = r4_570
l0040506A:
	r18_39 = r18_39 + r7_582
l00404F66:
	Mem600[r0:byte] = 0<8>
	__trap_code(0<32>)
l00404F6E:
l00404F72_thunk_munmap:
	word32 r3_616
	word32 r4_617
	word32 r6_619
	word32 r7_620
	word32 r8_621
	word32 r9_622
	word32 r2_614 = munmap(out r3_616, out r4_617, out r6_619, out r7_620, out r8_621, out r9_622)
	r3Out = r3_616
	r4Out = r4_617
	r6Out = r6_619
	r7Out = r7_620
	r8Out = r8_621
	r9Out = r9_622
	r10Out = r10
	r11Out = r11
	return r2_614
free_exit:


word32 malloc(word32 r0, word32 r4, word32 r11, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
//      realloc
//      __strdup
//      calloc
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r10 r11 r2 r3 r4 r6 r8 r9
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
malloc_entry:
	struct <anonymous> tLoc34
	word32 r10
	word32 r2
	word32 r3
	word32 r8
	word32 r9
l00405292:
	word32 dwLoc44_1280
	word32 r2_1329
	word32 r6_100
	word32 r8_102
	word32 r20_143
	word32 r21_142
	word32 dwLoc48_845
	word32 r9_103
	word32 r6_27 = Mem23[0x00454454<p32>:word32]
	branch 0x7FFFFFEF<32> - r6_27 >=u r4 + 0xFFFFFFFF<32> l00405472
l00405472:
	word32 r4_33 = __ins(r4 + 0x17<32>, 0<32>, 0<32>, 1<32>)
	dwLoc48_845 = r4_33
	branch r4_33 <=u 0x1C0000<32> l004054BA
l004054BA:
	word32 r4_37
	word32 r7_39
	word32 r30_36 = (r4_33 >>u 4<32>) + 0xFFFFFFFF<32>
	branch r30_36 <u 0x21<32> l00405790
l00405790:
	r4_37 = r30_36
	r7_39 = r30_36
	dwLoc44_1280 = r30_36
l004054C4:
	word32 r7_41 = (r4_33 >>u 4<32>) + 0xFFFFFFFE<32>
	branch r7_41 >u 0x1FF<32> l004056A6
l004056A6:
	r7_39 = CONVERT(Mem34[(r7_41 >>u 7<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32) + 0x11<32>
l004054CE:
	r7_39 = CONVERT(Mem34[(r7_41 >>u 3<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32) + 1<32>
l004054E0:
	r4_37 = r7_39
	dwLoc44_1280 = r7_39
l004054E4:
	word32 r6_64 = 1<32> << r4_37
	word32 r7_65 = 1<32> >>u -r7_39
	word32 r5_66 = CONVERT(r4_37 < 0x20<32>, bool, word32)
	branch r4_37 != 0<32> l004054F8
l004054F4_1:
	r7_65 = 0<32>
l004054F8:
	branch r5_66 != 0<32> l004054FC
l004054F8_1:
	r7_65 = r6_64
l004054FC:
	branch r5_66 != 0<32> l00405500
l004054FC_1:
	r6_64 = 0<32>
l00405500:
	word32 r6_75 = -r6_64
	r21_142 = r6_75
	r20_143 = -r7_65 - CONVERT(r6_75 >u 0<32>, bool, word32)
l00405484:
	word32 r16_87 = r6_27 + 7<32> + r4_33 & -r6_27
	r11 = 0<32>
	word32 r4_98
	r2_1329 = mmap64(r16_87, 0x802<32>, 0<32>, 0<32>, out r3, out r4_98, out r6_100, out r8_102, out r9_103, out r10)
	branch r4_98 == 0xFFFFFFFF<32> l004056D2
l004054AA:
	r3Out = r3
	r4Out = r4_98 + 0x10<32>
	r6Out = r16_87 + 0xFFFFFFF8<32>
	r8Out = r8_102
	r9Out = r9_103
	r10Out = r10
	r11Out = 0<32>
	return r2_1329
l004052AC:
	branch r4 != 0<32> l004056DC
l004056DC:
	word32 r4_1501
	r3Out = __errno_location(out r4_1501)
	r4Out = 0<32>
	r6Out = r6_27
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	return r2
l004052B0:
	r21_142 = 0xFFFFFFFF<32>
	r20_143 = 0xFFFFFFFF<32>
	dwLoc48_845 = 0x10<32>
	dwLoc44_1280 = 0<32>
l004052BE:
l004052C2:
	word32 r6_1446
	word32 r16_791
	word32 r9_1490
	word32 r7_417
	word32 r5_221
	word32 r7_325
	word32 r4_149 = Mem148[0x955<32>:word32]
	word32 r7_152 = r4_149 & r21_142
	word32 r6_154 = Mem148[0x959<32>:word32] & r20_143
	branch (r7_152 | r6_154) == 0<32> l00405370
l004052DA:
	word32 r19_164
	branch r7_152 != 0<32> l00405450
l00405450:
	r19_164 = CONVERT(Mem163[((r7_152 & -r7_152) *s 0x76BE629<32> >>u 0x1B<32>) + 0x00412CC0<p32>:byte], byte, word32)
l004052DE:
	r19_164 = CONVERT(Mem163[((-r6_154 & r6_154) *s 0x76BE629<32> >>u 0x1B<32>) + 0x00412CC0<p32>:byte], byte, word32) + 0x20<32>
l004052FC:
	word32 r17_175 = r19_164 << 4<32>
	word32 r30_182 = 0x00432550<p32> + (r17_175 + 8<32>)
	branch Mem163[0x00454433<p32>:word32] != 0<32> l0040543E
l0040543E:
	__sync(0<32>)
l00405442:
	word32 r6_185 = __load_linked_32(Mem163[r30_182:word32])
	branch __store_conditional_32(Mem163[r30_182:word32], 1<32>) == 0<32> l00405442
l0040544E:
l00405428:
	__sync(0<32>)
	branch r6_185 == 0<32> l0040530E
l00405430:
	word32 r5_1533
	word32 r9_1534
	r2 = __wait(r30_182, r30_182 + 4<32>, 1<32>, 1<32>, out r4_149, out r5_1533, out r8, out r9_1534)
l0040530E:
	word32 r7_210 = 0x00432550<p32> + (r17_175 + 8<32>)
	r9_1490 = Mem163[0x00432550<p32> + r17_175 + 0x10<32>:word32]
	branch r9_1490 == 0<32> l0040546C
l0040546C:
l0040531A:
	branch r7_210 != r9_1490 l00405514
l00405514:
	word32 r17_220 = Mem163[r9_1490 + 2<32>:word32]
	r5_221 = Mem163[r9_1490 + 3<32>:word32]
	branch r19_164 < 0x28<32> l00405610
l0040551C:
	word32 r6_230
	word32 r18_236
	r17_220 = dwLoc44_1280
	branch r7_210 + 2<32> >= r19_164 l004055FA
l004055FA:
	branch r19_164 != 0x3F<32> l00405610
l004055FE:
	r6_230 = __ins(Mem163[r9_1490 + 1<32>:word32], 0<32>, 0<32>, 1<32>)
	r17_220 = dwLoc48_845
	r18_236 = r6_230 - r4_149
	branch r18_236 >u 0x1C0000<32> l0040552E
l00405524:
	r6_230 = __ins(Mem163[r9_1490 + 1<32>:word32], 0<32>, 0<32>, 1<32>)
	r18_236 = r6_230 - (r7_210 + 2<32>)
l0040552E:
	r17_220 = dwLoc48_845
	word32 r7_242 = r18_236 >>u 4<32>
	branch r7_242 <u 0xFFFFFFDE<32> l00405610
l00405536:
	word32 r7_246
	branch r7_242 >u 0xFFFFFE00<32> l004056BA
l004056BA:
	branch r7_242 >u 0xFFFFE3FF<32> l004056D8
l004056D8:
	r7_246 = 0x3F<32>
l004056C2:
	r7_246 = CONVERT(Mem163[(r7_242 + 0xFFFFFFFF<32> >>u 7<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32) + 0x10<32>
l0040553E:
	r7_246 = CONVERT(Mem163[(r7_242 + 0xFFFFFFFF<32> >>u 3<32>) + 0x00412CE0<p32> - 4<32>:byte], byte, word32)
l0040554A:
	branch r7_246 != r19_164 l00405610
l00405610:
	branch r17_220 == r5_221 l0040572E
l0040572E:
	word32 r7_269 = 1<32> >>u -r19_164
	word32 r5_270 = CONVERT(r19_164 < 0x20<32>, bool, word32)
	word32 r6_271 = 1<32> << r19_164
	branch r19_164 != 0<32> l00405744
l00405740_1:
	r7_269 = 0<32>
l00405744:
	branch r5_270 != 0<32> l00405748
l00405744_1:
	r7_269 = r6_271
l00405748:
	branch r5_270 != 0<32> l0040574C
l00405748_1:
	r6_271 = 0<32>
l0040574C:
	word32 r7_281 = ~r7_269
	word32 r5_284 = ~r6_271
	branch r6_271 == 0<32> l00405772
l00405756:
	__sync(0<32>)
l0040575A:
	branch __store_conditional_32(Mem163[0x555<32>:word32], __load_linked_32(Mem163[0x555<32>:word32]) & r5_284) == 0<32> l0040575A
l0040576E:
	__sync(0<32>)
l00405772:
	branch r7_281 == 0xFFFFFFFF<32> l0040578A
l00405776:
	__sync(0<32>)
l0040577A:
	branch __store_conditional_32(Mem163[0x00432554<p32>:word32], __load_linked_32(Mem163[0x00432554<p32>:word32]) & r7_281) == 0<32> l0040577A
l00405786:
	__sync(0<32>)
l0040578A:
	r5_221 = Mem163[r9_1490 + 3<32>:word32]
l00405614:
	word32 r7_323 = Mem163[r9_1490 + 1<32>:word32]
	word32 r4_326 = __ins(r7_323, 0<32>, 0<32>, 1<32>)
	word32 r6_327 = Mem163[r9_1490 + r4_326:word32]
	Mem345[r9_1490 + 1<32>:word32] = r7_323 | 1<32>
	Mem346[r9_1490 + r4_326:word32] = r6_327 | 1<32>
	r7_325 = r7_323 | 1<32>
l0040554E:
	r7_325 = 0x00432550<p32> | 1<32>
	r5_221 = Mem354[r9_1490 + 0x00432550<p32> + 8<32>:word32]
	Mem357[r9_1490 + 0x00432550<p32>:word32] = r7_325
	Mem362[r9_1490 + r6_230:word32] = r18_236
	Mem363[r9_1490 + 1<32>:word32] = r7_325
l0040556E:
	branch Mem377[r30_182:word32] == 0<32> l00405412
l00405576:
	word32 r7_412
	__sync(0<32>)
	Mem379[r30_182:byte] = 0<8>
	__sync(0<32>)
	branch Mem379[r30_182 + 4<32>:word32] != 0<32> l0040564A
l0040564A:
	word32 r4_390
	word32 r6_1528
	word32 r7_1529
	r2 = __syscall(out r4_390, out r5_221, out r6_1528, out r7_1529, out r8, out r9_1490)
	branch r4_390 != 0xFFFFFFDA<32> l0040558A
l00405664:
	word32 r6_1531
	word32 r7_1532
	word32 r4_1530
	r2 = __syscall(out r4_1530, out r5_221, out r6_1531, out r7_1532, out r8, out r9_1490)
	r7_412 = Mem402[r9_1490 + 1<32>:word32]
l0040558A:
	r7_412 = Mem414[r9_1490 + 1<32>:word32]
l0040558C:
	r7_417 = __ins(r7_412, 0<32>, 0<32>, 1<32>)
	r6_1446 = r7_417 + 0xFFFFFFF0<32>
	branch r5_221 >=u r7_417 + 0xFFFFFFF0<32> l00405420
l0040559A:
l0040531E:
	branch Mem428[0x00432550<p32> + (r17_175 + 8<32>):word32] == 0<32> l004052C2
l00405324:
	__sync(0<32>)
	Mem430[0x00432550<p32> + (r17_175 + 8<32>):word32] = 0<32>
	__sync(0<32>)
	branch Mem430[r30_182 + 4<32>:word32] == 0<32> l004052C2
l00405336:
	word32 r6_1503
	word32 r5_1502
	word32 r4_439
	word32 r7_1504
	word32 r9_1505
	r2 = __syscall(out r4_439, out r5_1502, out r6_1503, out r7_1504, out r8, out r9_1505)
	branch r4_439 != 0xFFFFFFDA<32> l004052C2
l0040534C:
	word32 r7_1509
	word32 r9_1510
	word32 r6_1508
	word32 r5_1507
	word32 r4_1506
	r2 = __syscall(out r4_1506, out r5_1507, out r6_1508, out r7_1509, out r8, out r9_1510)
	r4_149 = Mem430[0x955<32>:word32]
	r7_152 = r4_149 & r21_142
	r6_154 = Mem430[0x959<32>:word32] & r20_143
	branch (r7_152 | r6_154) != 0<32> l004052DA
l00405370:
	word32 r7_504 = Mem489[0x00454433<p32>:word32]
	Mem507[&tLoc34:word32] = r6_154 + 0x10<32>
	branch r7_504 != 0<32> l004055B4
l004055B4:
	__sync(0<32>)
l004055B8:
	word32 r6_511 = __load_linked_32(Mem507[0x545<32>:word32])
	branch __store_conditional_32(Mem507[0x545<32>:word32], 1<32>) == 0<32> l004055B8
l004055CC:
l0040559C:
	__sync(0<32>)
	branch r6_511 == 0<32> l00405380
l004055A4:
	word32 r5_1522
	word32 r8_1523
	word32 r4_1521
	word32 r9_1524
	__wait(0x00432544<p32>, 0x00432548<p32>, 1<32>, 1<32>, out r4_1521, out r5_1522, out r8_1523, out r9_1524)
l00405380:
	word32 r4_533
	word32 r7_535
	r2_1329 = __expand_heap(&tLoc34, out r3, out r4_533, out r6_100, out r7_535, out r8_102, out r9_103, out r10, out r11)
	branch r4_533 == 0<32> l004056EA
l004056EA:
	branch Mem507[0x949<32>:word32] == 0<32> l004056D2
l004056F0:
	__sync(0<32>)
	Mem547[0x949<32>:byte] = 0<8>
	__sync(0<32>)
	branch Mem547[0x00432548<p32>:word32] == 0<32> l004056D2
l00405704:
	word32 r4_556
	word32 r7_1517
	word32 r5_1516
	r2_1329 = __syscall(out r4_556, out r5_1516, out r6_100, out r7_1517, out r8_102, out r9_103)
	branch r4_556 != 0xFFFFFFDA<32> l004056D2
l0040571C:
	word32 r6_571
	word32 r8_573
	word32 r9_574
	word32 r5_1519
	word32 r7_1520
	word32 r4_1518
	word32 r2_567 = __syscall(out r4_1518, out r5_1519, out r6_571, out r7_1520, out r8_573, out r9_574)
	r3Out = r3
	r4Out = r4_533
	r6Out = r6_571
	r8Out = r8_573
	r9Out = r9_574
	r10Out = r10
	r11Out = r11
	return r2_567
l0040538C:
	word32 r18_587 = Mem507[0x00432540<p32>:word32]
	word32 r17_588 = Mem507[&tLoc34:word32]
	branch r18_587 == r4_533 l004053A2
l00405396:
	Mem593[&tLoc34:word32] = r7_535 + 0xFFFFFFF0<32>
	r7_535 = r7_535 + 0xFFFFFFF0<32>
	r18_587 = r4_533 + 0x10<32>
l004053A2:
	word32 r5_596 = Mem595[r17_588 + 0x544<32>:word32]
	r6_100 = r18_587 + r7_535
	word32 r7_601 = r7_535 | 1<32>
	Mem602[r6_100 - 8<32>:word32] = r7_601
	Mem603[0x00432540<p32>:word32] = r6_100
	Mem604[r6_100 - 4<32>:word32] = 1<32>
	Mem606[r18_587 - 4<32>:word32] = r7_601
	r9_103 = r18_587 + 0xFFFFFFF8<32>
	branch r5_596 == 0<32> l004053DC
l004053C6:
	__sync(0<32>)
	Mem607[r17_588 + 0x544<32>:byte] = 0<8>
	__sync(0<32>)
	branch Mem607[0x00432548<p32>:word32] != 0<32> l00405678
l00405678:
	word32 r7_1512
	word32 r4_618
	word32 r5_1511
	r2_1329 = __syscall(out r4_618, out r5_1511, out r6_100, out r7_1512, out r8_102, out r9_103)
	branch r4_618 != 0xFFFFFFDA<32> l004053DC
l00405694:
	word32 r7_1527
	word32 r4_1525
	word32 r5_1526
	r2_1329 = __syscall(out r4_1525, out r5_1526, out r6_100, out r7_1527, out r8_102, out r9_103)
l004053DC:
	branch r9_103 == 0<32> l004056D2
l004056D2:
	r3Out = r3
	r4Out = 0<32>
	r6Out = r6_100
	r8Out = r8_102
	r9Out = r9_103
	r10Out = r10
	r11Out = r11
	return r2_1329
l004053E0:
	word32 r4_660
	word32 r22_1513
	r2 = alloc_rev(r9_103, out r4_660, out r5_221, out r8, out r9_1490, out r22_1513)
	branch r4_660 == 0<32> l00405636
l00405636:
	r7_417 = __ins(Mem657[r9_103 - 4<32>:word32], 0<32>, 0<32>, 1<32>)
	r6_1446 = r7_417 + 0xFFFFFFF0<32>
	branch r5_221 >=u r7_417 + 0xFFFFFFF0<32> l00405420
l00405648:
l004053EC:
	r5_221 = Mem657[r9_103 - 4<32>:word32]
	word32 r6_677 = r9_1490 - __ins(Mem657[r9_103 - 8<32>:word32], 0<32>, 0<32>, 1<32>)
	word32 r7_679 = Mem657[r6_677 + 4<32>:word32]
	word32 r4_680 = __ins(r5_221, 0<32>, 0<32>, 1<32>)
	r7_325 = __ins(r7_679, 0<32>, 0<32>, 1<32>) + r5_221
	Mem684[r9_1490 + r4_680:word32] = r7_325
	r9_1490 = r6_677
l00405412:
	r7_417 = __ins(r7_325, 0<32>, 0<32>, 1<32>)
	r6_1446 = r7_417 + 0xFFFFFFF0<32>
	branch r5_221 <u r7_417 + 0xFFFFFFF0<32> l004055CE
l004055CE:
	word32 r5_703 = r5_221 | 1<32>
	Mem706[r9_1490 + r5_221:word32] = r5_703
	Mem709[r9_1490 + r7_417:word32] = r7_417 - r5_221 | 1<32>
	Mem710[r9_1490 + 1<32>:word32] = r5_703
	word32 r4_1514
	word32 r7_1515
	r2 = free(r0, r9_1490 + r5_221 + 8<32>, r11, out r3, out r4_1514, out r6_1446, out r7_1515, out r8, out r9_1490, out r10, out r11)
	r16_791 = r9_1490 + 8<32>
l00405420:
	r16_791 = r9_1490 + 8<32>
l00405424:
	r3Out = r3
	r4Out = r16_791
	r6Out = r6_1446
	r8Out = r8
	r9Out = r9_1490
	r10Out = r10
	r11Out = r11
	return r2
malloc_exit:


word32 __malloc0(word32 r0, word32 r4, word32 r11, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      calloc
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11 r2 r4 r6 r8
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__malloc0_entry:
l0040579A:
	word32 r11_14
	word32 r4_18
	word32 r8_22
	word32 r10_91
	word32 r9_90
	word32 r3_89
	word32 r6_20
	malloc(r0, r4, r11, out r3_89, out r4_18, out r6_20, out r8_22, out r9_90, out r10_91, out r11_14)
	branch r4_18 == 0<32> l004057CE
l004057A4:
	branch __bit(Mem7[r4_18 - 4<32>:word32], 0<32>) l004057CE
l004057AC:
	branch r4 + 3<32> >>u 2<32> == 0<32> l004057CE
l004057B4:
	word32 r5_27 = r4_18 + __align(r4 + 3<32>, 4<i32>)
	word32 r7_28 = r4_18
l004057BA:
	r6_20 = Mem30[r7_28:word32]
	branch r6_20 == 0<32> l004057C8
l004057C8:
	r7_28 = r7_28 + 4<32>
	branch r7_28 != r5_27 l004057BA
l004057CE:
	r4Out = <invalid>
	r6Out = r6_20
	r8Out = <invalid>
	r11Out = <invalid>
	return <invalid>
l004057BE:
	r7_28 = r7_28 + 4<32>
	branch r7_28 != r5_27 l004057BA
l004057C6:
	r4Out = <invalid>
	r6Out = r6_20
	r8Out = <invalid>
	r11Out = <invalid>
	return <invalid>
__malloc0_exit:


word32 realloc(word32 r0, word32 r4, word32 r5, word32 r11, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r6 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 r18 r19 r20 r21 r22 r23 ra sp
realloc_entry:
	word32 r10
	word32 r12
	word32 r2
	word32 r3
	word32 r8
	word32 r9
l004057D0:
	branch r4 == 0<32> l00405918
l00405918:
l0040591A_thunk_malloc:
	word32 r10_9
	word32 r11_10
	word32 r3_13
	word32 r4_14
	word32 r6_16
	word32 r8_18
	word32 r9_19
	word32 r2_11 = malloc(r0, r5, r11, out r3_13, out r4_14, out r6_16, out r8_18, out r9_19, out r10_9, out r11_10)
	r3Out = r3_13
	r4Out = r4_14
	r6Out = r6_16
	r8Out = r8_18
	r9Out = r9_19
	r10Out = r10_9
	r11Out = r11_10
	r12Out = r12
	return r2_11
l004057D4:
	word32 r9_102
	word32 r8_101
	word32 r6_155
	word32 r3_203
	word32 r2_201
	word32 r10_199
	word32 r11_200
	word32 r18_103
	word32 r5_317
	word32 r19_156
	word32 r4_41 = Mem37[0x00454454<p32>:word32]
	r5_317 = r5
	branch 0x7FFFFFEF<32> - r4_41 <u r5 + 0xFFFFFFFF<32> l00405822
l004057F0:
	r5_317 = __ins(r5 + 0x17<32>, 0<32>, 0<32>, 1<32>)
	r19_156 = r5_317
l004057FA:
	word32 r7_50 = Mem49[r4 - 4<32>:word32]
	r9_102 = r9 (alias)
	r8_101 = r8 (alias)
	r6_155 = r5 + 0xFFFFFFFF<32> (alias)
	r3_203 = r3 (alias)
	r2_201 = r2 (alias)
	r10_199 = r10 (alias)
	word32 r4_197 = r4_41
	r11_200 = r11 (alias)
	word32 r17_53 = __ins(r7_50, 0<32>, 0<32>, 1<32>)
	branch !__bit(r7_50, 0<32>) l00405868
l00405868:
	word32 r18_55 = r4 + 0xFFFFFFF8<32> + r17_53
	branch Mem49[r4 + 0xFFFFFFF8<32> + r17_53:word32] == r7_50 l0040587A
l00405872:
	Mem57[r0:byte] = 0<8>
	__trap_code(0<32>)
l0040587A:
	word32 r7_150
	branch r17_53 <u r19_156 l004058C4
l004058C4:
	word32 r4_64
	word32 r22_609
	r2_201 = alloc_fwd(r18_55, out r4_64, out r8_101, out r9_102, out r19_156, out r22_609)
	branch r4_64 == 0<32> l0040591E
l0040591E:
	Mem75[r4 - 4<32>:word32] = r17_53 | 1<32>
	Mem77[r4 + 0xFFFFFFF8<32> + r17_53:word32] = r17_53 | 1<32>
l004058CA:
	word32 r6_80 = __ins(Mem78[r18_55 + 4<32>:word32], 0<32>, 0<32>, 1<32>)
	word32 r5_81 = r17_53 + r6_80
	Mem83[r4 - 4<32>:word32] = r5_81 | 1<32>
	Mem84[r18_55 + r6_80:word32] = r5_81 | 1<32>
	r7_150 = r5_81 | 1<32>
	branch r5_81 >=u r19_156 l0040588A
l004058E2:
	word32 r4_97
	r2_201 = malloc(r0, r19_156 + 0xFFFFFFF8<32>, r11, out r3_203, out r4_97, out r6_155, out r8_101, out r9_102, out r10_199, out r11_200)
	r18_103 = r4_97
	branch r4_97 == 0<32> l00405830
l004058F0:
	word32 r8_616
	word32 r7_615
	word32 r11_116
	word32 r12_117
	word32 r3_612
	word32 r5_613
	word32 r6_614
	word32 r13_619
	word32 r9_617
	word32 r10_618
	memcpy(r4_97, r4, r17_53 + 0xFFFFFFF8<32>, out r3_612, out r5_613, out r6_614, out r7_615, out r8_616, out r9_617, out r10_618, out r11_116, out r12_117, out r13_619)
	word32 r10_125
	word32 r11_126
	word32 r3_128
	word32 r6_131
	word32 r8_133
	word32 r9_134
	word32 r4_620
	word32 r7_621
	word32 r2_127 = free(r0, r4, r11_116, out r3_128, out r4_620, out r6_131, out r7_621, out r8_133, out r9_134, out r10_125, out r11_126)
	r3Out = r3_128
	r4Out = r4_97
	r6Out = r6_131
	r8Out = r8_133
	r9Out = r9_134
	r10Out = r10_125
	r11Out = r11_126
	r12Out = r12_117
	return r2_127
l0040587E:
	Mem151[r4 - 4<32>:word32] = r17_53 | 1<32>
	Mem152[r4 + 0xFFFFFFF8<32> + r17_53:word32] = r17_53 | 1<32>
	r7_150 = r17_53 | 1<32>
l0040588A:
	word32 r7_154 = __ins(r7_150, 0<32>, 0<32>, 1<32>)
	r6_155 = r7_154 + 0xFFFFFFF0<32>
	branch r19_156 <u r7_154 + 0xFFFFFFF0<32> l0040589C
l0040589C:
	word32 r5_158 = r19_156 | 1<32>
	Mem162[r4 + 0xFFFFFFF8<32> + r19_156:word32] = r5_158
	Mem168[r4 + 0xFFFFFFF8<32> + r7_154:word32] = r7_154 - r19_156 | 1<32>
	Mem169[r4 - 4<32>:word32] = r5_158
	word32 r7_611
	word32 r10_173
	word32 r11_174
	word32 r3_176
	word32 r6_179
	word32 r8_181
	word32 r9_182
	word32 r4_610
	word32 r2_175 = free(r0, r4 + 0xFFFFFFF8<32> + r19_156 + 8<32>, r11, out r3_176, out r4_610, out r6_179, out r7_611, out r8_181, out r9_182, out r10_173, out r11_174)
	r3Out = r3_176
	r4Out = r4
	r6Out = r6_179
	r8Out = r8_181
	r9Out = r9_182
	r10Out = r10_173
	r11Out = r11_174
	r12Out = r12
	return r2_175
l0040580C:
	word32 r22_194 = Mem49[r4 - 8<32>:word32]
	word32 r17_195 = r17_53 + r22_194
	word32 r20_196 = r22_194 + r19_156
	branch __bit(r22_194, 0<32>) l00405834
l00405834:
	branch r20_196 <u r4_41 l00405900
l00405900:
	word32 r4_204
	r2_201 = malloc(r0, r19_156, r11, out r3_203, out r4_204, out r6_155, out r8_101, out r9_102, out r10_199, out r11_200)
	branch r4_204 == 0<32> l0040592C
l0040592C:
	r4_197 = Mem49[0x00454454<p32>:word32]
l00405908:
	word32 r11_223
	word32 r12_224
	word32 r10_605
	word32 r13_606
	word32 r9_604
	word32 r8_603
	word32 r7_602
	word32 r3_599
	word32 r5_600
	word32 r6_601
	memcpy(r4_204, r4, r19_156 + 0xFFFFFFF8<32>, out r3_599, out r5_600, out r6_601, out r7_602, out r8_603, out r9_604, out r10_605, out r11_223, out r12_224, out r13_606)
	word32 r10_232
	word32 r11_233
	word32 r3_235
	word32 r6_238
	word32 r8_240
	word32 r9_241
	word32 r4_607
	word32 r7_608
	word32 r2_234 = free(r0, r4, r11_223, out r3_235, out r4_607, out r6_238, out r7_608, out r8_240, out r9_241, out r10_232, out r11_233)
	r3Out = r3_235
	r4Out = r4_204
	r6Out = r6_238
	r8Out = r8_240
	r9Out = r9_241
	r10Out = r10_232
	r11Out = r11_233
	r12Out = r12_224
	return r2_234
l00405838:
	word32 r20_258 = -r4_197 & r4_197 + (r20_196 + 0xFFFFFFFF<32>)
	branch r17_195 == r20_258 l00405896
l00405896:
l00405848:
	word32 r4_272
	r2_201 = mremap(r20_258, 1<32>, out r3_203, out r4_272, out r6_155, out r8_101, out r9_102)
	branch r4_272 == 0xFFFFFFFF<32> l00405932
l00405932:
	r18_103 = 0<32>
	branch r20_258 >=u r17_195 l00405830
l00405938:
l00405898:
	r3Out = r3_203
	r4Out = r4
	r6Out = r6_155
	r8Out = r8_101
	r9Out = r9_102
	r10Out = r10_199
	r11Out = r11_200
	r12Out = r12
	return r2_201
l0040585A:
	word32 r4_300 = r4_272 + r22_194
	Mem303[r4_300 + 1<32>:word32] = r20_258 - r22_194
	r3Out = r3_203
	r4Out = r4_300 + 8<32>
	r6Out = r6_155
	r8Out = r8_101
	r9Out = r9_102
	r10Out = r10_199
	r11Out = r11_200
	r12Out = r12
	return r2_201
l0040581A:
	Mem315[r0:byte] = 0<8>
	__trap_code(0<32>)
l00405822:
	r9_102 = r9 (alias)
	r8_101 = r8 (alias)
	r6_155 = r5 + 0xFFFFFFFF<32> (alias)
	r2_201 = r2 (alias)
	r10_199 = r10 (alias)
	r11_200 = r11 (alias)
	r19_156 = 0x10<32>
	branch r5_317 == 0<32> l004057FA
l00405826:
	word32 r4_622
	r3_203 = __errno_location(out r4_622)
	r18_103 = 0<32>
l00405830:
	r3Out = r3_203
	r4Out = r18_103
	r6Out = r6_155
	r8Out = r8_101
	r9Out = r9_102
	r10Out = r10_199
	r11Out = r11_200
	r12Out = r12
	return r2_201
realloc_exit:


word32 __getopt_msg(word32 r4, word32 r5, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __posix_getopt
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r5
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__getopt_msg_entry:
l00405940:
	word32 r16_19 = Mem15[0x00412EF0<p32>:word32]
	__lctrans_cur()
	flockfile(r16_19)
	word32 r4_53
	word32 r3_162
	word32 r5_163
	word32 r6_164
	word32 r8_165
	word32 r11_166
	word32 r12_167
	fputs_unlocked(r4, r16_19, out r3_162, out r4_53, out r5_163, out r6_164, out r8_165, out r11_166, out r12_167)
	branch r4_53 < 0<32> l00405980
l00405960:
	word32 r4_79
	word32 r5_168
	word32 r6_169
	word32 r7_170
	word32 r3_171
	word32 r5_172
	word32 r6_173
	word32 r8_174
	word32 r11_175
	word32 r12_176
	fwrite_unlocked(r5, strlen(r5, out r5_168, out r6_169, out r7_170), 1<32>, r16_19, out r3_171, out r4_79, out r5_172, out r6_173, out r8_174, out r11_175, out r12_176)
	branch r4_79 == 0<32> l00405980
l00405970:
	word32 r4_101
	word32 r3_177
	word32 r5_178
	word32 r6_179
	word32 r8_180
	word32 r11_181
	word32 r12_182
	fwrite_unlocked(r6, 1<32>, r7, r16_19, out r3_177, out r4_101, out r5_178, out r6_179, out r8_180, out r11_181, out r12_182)
	branch r7 != r4_101 l00405980
l0040597A:
	_IO_putc(0xA<32>, r16_19)
l00405980:
l00405986_thunk_funlockfile:
	return funlockfile(r16_19)
__getopt_msg_exit:


word32 __posix_getopt(word32 r0, word32 r4, word32 r5, word32 r6, word32 r8, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r4 r5
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__posix_getopt_entry:
	ptr32 fp
l0040598A:
	word32 r17_103 = r6
	branch Mem15[0x00430254<p32>:word32] == 0<32> l004059A0
l00405998:
	branch Mem15[0x00432960<p32>:word32] == 0<32> l004059B4
l004059A0:
	Mem28[0x00432960<p32>:word32] = r0
	Mem29[0x004544A4<p32>:word32] = r0
	Mem30[0x00430254<p32>:word32] = 1<32>
l004059B4:
	word32 r7_32 = Mem31[0x00430254<p32>:word32]
	word32 r4_133 = 0xFFFFFFFF<32>
	branch r7_32 >= r4 l00405B00
l004059C0:
	r5 = Mem31[r5 + r7_32 * 4<32>:word32]
	branch r5 == 0<32> l00405B00
l004059C6:
	branch CONVERT(Mem31[r5:byte], byte, word32) == 0x2D<32> l004059E4
l004059E4:
	word32 r6_40 = CONVERT(Mem31[r5 + 1<32>:byte], byte, word32)
	r4_133 = 0xFFFFFFFF<32>
	branch r6_40 == 0<32> l00405B00
l004059EC:
	branch r6_40 != 0x2D<32> l004059FE
l004059F0:
	branch CONVERT(Mem31[r5 + 2<32>:byte], byte, word32) != 0<32> l004059FE
l004059FE:
	branch Mem31[0x004544A4<p32>:word32] != 0<32> l00405A0E
l00405A06:
	Mem46[0x004544A4<p32>:word32] = 1<32>
l00405A0E:
	word32 r7_609
	word32 r6_608
	word32 r8_117
	word32 r4_64 = mbtowc(fp - 0x28<32>, r5 + Mem47[0x004544A4<p32>:word32], 4<32>, r8, out r6_608, out r7_609, out r8_117)
	word32 r7_70 = r4_64
	branch r4_64 >= 0<32> l00405A2C
l00405A24:
	r7_70 = 1<32>
l00405A2C:
	word32 r5_75 = Mem74[0x00430254<p32>:word32]
	word32 r6_80 = Mem74[0x004544A4<p32>:word32]
	word32 r4_79 = Mem74[r5 + r5_75 * 4<32>:word32]
	word32 r6_83 = r7_70 + r6_80
	Mem84[0x004544A4<p32>:word32] = r6_83
	word32 r20_81 = r4_79 + r6_80
	branch CONVERT(Mem84[r4_79 + r6_83:byte], byte, word32) != 0<32> l00405A5A
l00405A4C:
	Mem91[0x004544A4<p32>:word32] = r0
	Mem92[0x00430254<p32>:word32] = r5_75 + 1<32>
l00405A5A:
	branch (CONVERT(Mem99[r6:byte], byte, word32) + 0xFFFFFFD5<32> & 0xFD<32>) != 0<32> l00405A68
l00405A66:
	r17_103 = r6 + 1<32>
l00405A68:
	word32 r16_104 = 0<32>
l00405A74:
	r5 = r17_103 + r16_104
	word32 r7_120
	word32 r6_123
	word32 r4_119 = mbtowc(fp - 0x24<32>, r5, 4<32>, r8_117, out r6_123, out r7_120, out r8_117)
	r17_103 = 0<32>
	branch r4_119 <= 0<32> l00405A6E
l00405A6E:
	r16_104 = r16_104 + 1<32>
	branch r4_119 == 0<32> l00405A8E
l00405A8A:
	r16_104 = r16_104 + r4_119
l00405A72:
	branch r5 == r6_123 l00405A8E
l00405A8E:
	word32 r5_164
	r4_133 = r6_123
	branch r5 == r6_123 l00405ABA
l00405ABA:
	word32 r6_141 = CONVERT(Mem116[r16_104:byte], byte, word32)
	branch r6_141 != 0x3A<32> l00405B00
l00405AC2:
	word32 r16_142 = r16_104 + 1<32>
	r5 = CONVERT(Mem116[r16_142:byte], byte, word32)
	branch r5 != 0x3A<32> l00405B02
l00405B02:
	r5 = Mem116[0x00430254<p32>:word32]
	branch r5 < r4 l00405AD2
l00405B0C:
	Mem154[0x004544F0<p32>:word32] = r6_123
	r4_133 = r6_141
	r5 = CONVERT(Mem154[0<32>:byte], byte, word32)
	branch r5 == 0x3A<32> l00405B00
l00405B1A:
	branch Mem154[0x00430250<p32>:word32] == 0<32> l00405AA0
l00405B24:
	r5_164 = 0x00411ED4<p32>
l00405ACC:
	Mem170[0x004544E8<p32>:word32] = r0
l00405AD2:
	word32 r6_174 = Mem172[0x004544A4<p32>:word32]
	branch CONVERT(Mem172[r16_142:byte], byte, word32) != 0x3A<32> l00405AE0
l00405ADE:
	branch r6_174 == 0<32> l00405B00
l00405AE0:
	word32 r7_176 = Mem172[0x00430254<p32>:word32]
	word32 r7_185 = Mem172[r5 + r7_176 * 4<32>:word32]
	Mem186[0x00430254<p32>:word32] = r7_176 + 1<32>
	Mem191[0x004544A4<p32>:word32] = r0
	Mem192[0x004544E8<p32>:word32] = r7_185 + r6_174
	r5 = r7_176 + 1<32>
l00405A94:
	Mem193[0x004544F0<p32>:word32] = r6_123
	branch CONVERT(Mem193[0<32>:byte], byte, word32) != 0x3A<32> l00405AA4
l00405AA4:
	branch Mem193[0x00430250<p32>:word32] == 0<32> l00405AA0
l00405AAC:
	r5_164 = 0x00411EBC<p32>
l00405AB2:
	r5 = __getopt_msg(Mem199[r5:word32], r5_164, r20_81, r7_120)
l00405AA0:
	r5Out = r5
	return 0x3F<32>
l004059F4:
	Mem238[0x00430254<p32>:word32] = r7_32 + 1<32>
	r5Out = r5
	return 0xFFFFFFFF<32>
l004059CC:
	branch CONVERT(Mem31[r6:byte], byte, word32) != 0x2D<32> l00405B00
l00405B00:
	r5Out = r5
	return r4_133
l004059D2:
	Mem259[0x004544E8<p32>:word32] = r5
	Mem260[0x00430254<p32>:word32] = r7_32 + 1<32>
	r5Out = r5
	return 1<32>
__posix_getopt_exit:


word32 getrlimit64(word32 r5, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402CEE
// MayUse:  r5:[0..31]
// LiveOut: r4 r6
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
getrlimit64_entry:
l00405B30:
	word32 r4_19
	word32 r9_99
	word32 r7_97
	word32 r8_98
	word32 r5_96
	word32 r6_21
	__syscall(out r4_19, out r5_96, out r6_21, out r7_97, out r8_98, out r9_99)
	word32 r4_27
	word32 r7_100
	__syscall_ret(r4_19, out r4_27, out r7_100)
	branch r4_27 != 0<32> l00405B76
l00405B46:
	branch Mem7[r5 + 4<32>:word32] != 0<32> l00405B56
l00405B4A:
	branch Mem7[r5:word32] <=u 0x7FFFFFFE<32> l00405B5E
l00405B56:
	Mem35[r5:word32] = 0xFFFFFFFF<32>
	Mem36[r5 + 4<i32>:word32] = 0xFFFFFFFF<32>
l00405B5E:
	branch Mem38[r5 + 0xC<32>:word32] != 0<32> l00405B6E
l00405B62:
	r6_21 = 0x7FFFFFFE<32>
	branch Mem38[r5 + 8<32>:word32] <=u 0x7FFFFFFE<32> l00405B76
l00405B6E:
	Mem45[r5 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem46[r5 + 12<i32>:word32] = 0xFFFFFFFF<32>
	r6_21 = 0xFFFFFFFF<32>
l00405B76:
	r6Out = r6_21
	return r4_27
getrlimit64_exit:


word32 ioctl(ptr32 & r4Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      setup
//      main_loop
//      if_indextoname
//      if_nametoindex
// MayUse: 
// LiveOut: r3 r4 r7
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
ioctl_entry:
l00405B80:
	word32 r4_36
	word32 r5_63
	word32 r6_64
	word32 r7_65
	word32 r8_66
	word32 r9_67
	__syscall(out r4_36, out r5_63, out r6_64, out r7_65, out r8_66, out r9_67)
	word32 r4_44
	word32 r7_45
	word32 r3_43 = __syscall_ret(r4_36, out r4_44, out r7_45)
	r4Out = r4_44
	r7Out = r7_45
	return r3_43
ioctl_exit:


word32 madvise(ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free
// MayUse: 
// LiveOut: r2 r3 r4 r6 r8 r9
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
madvise_entry:
l00405BC0:
	word32 r4_16
	word32 r6_18
	word32 r8_20
	word32 r9_21
	word32 r5_34
	word32 r7_35
	word32 r2_14 = __syscall(out r4_16, out r5_34, out r6_18, out r7_35, out r8_20, out r9_21)
l00405BD4_thunk___syscall_ret:
	word32 r4_26
	word32 r7_36
	r3Out = __syscall_ret(r4_16, out r4_26, out r7_36)
	r4Out = r4_26
	r6Out = r6_18
	r8Out = r8_20
	r9Out = r9_21
	return r2_14
madvise_exit:


void __vm_wait()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free
//      mmap64
//      mremap
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__vm_wait_entry:
l00405BE0:
	return
__vm_wait_exit:


word32 mmap64(word32 r5, word32 r7, word32 r10, word32 r11, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      malloc
//      __expand_heap
// MayUse:  r10:[0..31] r11:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r10 r2 r3 r4 r6 r8 r9
// Trashed: r10 r2 r22 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
mmap64_entry:
	word32 r6
	word32 r8
	word32 r2
	word32 r9
l00405BE2:
	word32 r3_140
	word32 r10_31 = r10 & 0xFFF<32> | __ins(r11, 0<32>, 0<32>, 1<32>)
	branch r10_31 == 0<32> l00405C0C
l00405C0C:
	branch r5 <=u 0x7FFFFFFE<32> l00405C1E
l00405C1E:
	branch __bit(r7, 4<32>) l00405C26
l00405C22:
	__vm_wait()
l00405C26:
	word32 r10_45 = r11 << 0x14<32> | r10 >>u 0xC<32>
	word32 r4_59
	word32 r6_61
	word32 r8_63
	word32 r9_64
	word32 r5_162
	word32 r7_163
	word32 r2_57 = __syscall(out r4_59, out r5_162, out r6_61, out r7_163, out r8_63, out r9_64)
l00405C44_thunk___syscall_ret:
	word32 r4_78
	word32 r7_164
	r3Out = __syscall_ret(r4_59, out r4_78, out r7_164)
	r4Out = r4_78
	r6Out = r6_61
	r8Out = r8_63
	r9Out = r9_64
	r10Out = r10_45
	return r2_57
l00405C16:
	word32 r4_161
	r3_140 = __errno_location(out r4_161)
l00405C00:
	word32 r4_160
	r3_140 = __errno_location(out r4_160)
l00405C06:
	r3Out = r3_140
	r4Out = 0xFFFFFFFF<32>
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r10Out = r10_31
	return r2
mmap64_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l00405C50:
	return
dummy_exit:


word32 mremap(word32 r6, word32 r7, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      realloc
// MayUse:  r6:[0..31] r7:[0..31]
// LiveOut: r2 r3 r4 r6 r8 r9
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
mremap_entry:
	word32 r8
	word32 r9
	word32 r2
l00405C52:
	word32 r3_110
	word32 r4_111
	branch r6 <=u 0x7FFFFFFE<32> l00405C82
l00405C82:
	branch __bit(r7, 1<32>) l00405CA2
l00405C88:
	__vm_wait()
l00405CA2:
	word32 r4_55
	word32 r5_123
	word32 r7_124
	r2 = __syscall(out r4_55, out r5_123, out r6, out r7_124, out r8, out r9)
	word32 r7_125
	r3_110 = __syscall_ret(r4_55, out r4_111, out r7_125)
l00405C6E:
	word32 r4_122
	r3_110 = __errno_location(out r4_122)
	r4_111 = 0xFFFFFFFF<32>
l00405C78:
	r3Out = r3_110
	r4Out = r4_111
	r6Out = r6
	r8Out = r8
	r9Out = r9
	return r2
mremap_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l00405CC0:
	return
dummy_exit:


word32 munmap(ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      free
// MayUse: 
// LiveOut: r2 r3 r4 r6 r7 r8 r9
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
munmap_entry:
l00405CC2:
	__vm_wait()
	word32 r4_21
	word32 r6_23
	word32 r8_25
	word32 r9_26
	word32 r5_44
	word32 r7_45
	word32 r2_19 = __syscall(out r4_21, out r5_44, out r6_23, out r7_45, out r8_25, out r9_26)
l00405CD8_thunk___syscall_ret:
	word32 r4_33
	word32 r7_34
	r3Out = __syscall_ret(r4_21, out r4_33, out r7_34)
	r4Out = r4_33
	r6Out = r6_23
	r7Out = r7_34
	r8Out = r8_25
	r9Out = r9_26
	return r2_19
munmap_exit:


word32 mbtowc(word32 r4, word32 r5, word32 r6, word32 r8, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __posix_getopt
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r4 r6 r7 r8
// Trashed: r25 r3 r4 r6 r7 r8 r9
// Preserved: ra sp
mbtowc_entry:
l00405CE0:
	word32 r7_57 = 0<32>
	branch r5 == 0<32> l00405CFE
l00405CE6:
	branch r6 == 0<32> l00405D9E
l00405CEA:
	branch r4 != 0<32> l00405CEE
l00405CEC:
l00405CEE:
	word32 r7_18 = CONVERT(SLICE(r8, byte, 0), byte, int32)
	branch r8 < 0<32> l00405D02
l00405D02:
	r8 = Mem5[Mem5[__read_user_local() - 0x38<32>:word32]:word32]
	branch r8 != 0<32> l00405D1E
l00405D1E:
	branch r7_18 >=u 0xFFFFFF0B<32> l00405D9E
l00405D26:
	r8 = 0x00413370<p32>
	word32 r7_24 = Mem5[0x00413370<p32> + (r7_18 + 0xFFFFFF3E<32>) * 4<32>:word32]
	branch r6 >=u 4<32> l00405D42
l00405D32:
	r6 = r7_24 << r6 * 6<32> + 0xFFFFFFFA<32>
	branch r6 < 0<32> l00405D9E
l00405D42:
	r8 = CONVERT(Mem5[r5 + 1<32>:byte], byte, word32)
	r6 = (r8 >>u 3<32>) + 0xFFFFFFF0<32>
	branch __ins((r7_24 >> 0x1A<32>) + (r8 >>u 3<32>) | r6, 0<32>, 0<32>, 1<32>) != 0<32> l00405D9E
l00405D60:
	r6 = r8 + 0xFFFFFF80<32> | r7_24 << 6<32>
	branch r6 < 0<32> l00405D72
l00405D72:
	word32 r7_43 = CONVERT(Mem5[r5 + 2<32>:byte], byte, word32)
	branch r7_43 >=u 0xFFFFFF80<32> l00405D9E
l00405D7C:
	r6 = r6 << 6<32>
	branch (r7_43 + 0xFFFFFF80<32> | r6 << 6<32>) < 0<32> l00405D8A
l00405D8A:
	word32 r6_47 = CONVERT(Mem5[r5 + 3<32>:byte], byte, word32)
	r6 = r6_47 + 0xFFFFFF80<32>
	branch r6_47 >=u 0xFFFFFF80<32> l00405D9E
l00405D9E:
	word32 r4_108
	__errno_location(out r4_108)
	r7_57 = 0xFFFFFFFF<32>
l00405D94:
	r7_57 = 4<32>
l00405D84:
	r7_57 = 3<32>
l00405D6C:
	r7_57 = 2<32>
l00405D10:
	r6 = 0xDFFF<32>
	r7_57 = 1<32>
l00405CF8:
	r7_57 = CONVERT(r7_18 >u 0<32>, bool, word32)
l00405CFE:
	r6Out = r6
	r7Out = r7_57
	r8Out = r8
	return r7_57
mbtowc_exit:


word32 bind()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
//      __res_msend_rc
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
bind_entry:
l00405DB0:
	word32 r4_19
	word32 r5_32
	word32 r6_33
	word32 r7_34
	word32 r8_35
	word32 r9_36
	__syscall(out r4_19, out r5_32, out r6_33, out r7_34, out r8_35, out r9_36)
l00405DC8_thunk___syscall_ret:
	word32 r4_29
	word32 r7_37
	__syscall_ret(r4_19, out r4_29, out r7_37)
	return r4_29
bind_exit:


word32 connect(ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
//      __lookup_name
// MayUse: 
// LiveOut: r4 r5
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
connect_entry:
l00405DD0:
	word32 r4_19
	word32 r5_20
	word32 r6_33
	word32 r8_34
	__syscall_cp(out r4_19, out r5_20, out r6_33, out r8_34)
l00405DE8_thunk___syscall_ret:
	word32 r4_29
	word32 r7_35
	__syscall_ret(r4_19, out r4_29, out r7_35)
	r5Out = r5_20
	return r4_29
connect_exit:


word32 freeaddrinfo(word32 r0, word32 r4, word32 r11, ptr32 & r3Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11 r2 r3
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
freeaddrinfo_entry:
l00405DF0:
l00405DF0_thunk_free:
	word32 r11_9
	word32 r3_11
	word32 r4_20
	word32 r6_21
	word32 r7_22
	word32 r8_23
	word32 r9_24
	word32 r10_25
	word32 r2_10 = free(r0, r4, r11, out r3_11, out r4_20, out r6_21, out r7_22, out r8_23, out r9_24, out r10_25, out r11_9)
	r3Out = r3_11
	r11Out = r11_9
	return r2_10
freeaddrinfo_exit:


word32 gai_strerror(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r3
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: sp
gai_strerror_entry:
l00405E00:
	word32 r7_10 = r4 + 1<32>
	word32 r4_11 = 0x00412D1C<p32>
l00405E08:
	word32 r6_9 = CONVERT(Mem0[r4_11:byte], byte, word32)
	branch r7_10 != 0<32> l00405E14
l00405E14:
	branch r6_9 == 0<32> l00405E0E
l00405E16:
	r4_11 = r4_31 + 1<32>
	r4_31 = r4_11
	branch CONVERT(Mem0[r4_31:byte], byte, word32) != 0<32> l00405E16
l00405E1C:
	r7_10 = r7_10 + 1<32>
l00405E0C:
	branch r6_9 != 0<32> l00405E10
l00405E0E:
l00405E10:
l00405E10_thunk___lctrans_cur:
	return __lctrans_cur()
gai_strerror_exit:


word32 getaddrinfo(word32 r0, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, word32 r20, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      ping4_run
//      niquery_option_subject_addr_handler
//      ping6_run
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r20:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r4 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
getaddrinfo_entry:
	struct <anonymous> tLoc0678
	struct <anonymous> tLoc0670
	struct <anonymous> tLoc0570
	word32 r11
	word32 r8
l00405E20:
	word32 r30_113
	branch r4 != 0<32> l00405E30
l00405E2A:
	r30_113 = 0xFFFFFFFE<32>
	branch r5 == 0<32> l00405E58
l00405E30:
	word32 r17_36
	word32 r7_33
	word32 r19_34
	word32 r16_35
	branch r6 == 0<32> l00405E5E
l00405E5E:
	r7_33 = 0<32>
	r19_34 = 0<32>
	r16_35 = 0<32>
	r17_36 = 0<32>
l00405E32:
	r16_35 = Mem28[r6:word32]
	r17_36 = Mem28[r6 + 4<i32>:word32]
	r7_33 = Mem28[r6 + 8<32>:word32]
	r19_34 = Mem28[r6 + 0xC<32>:word32]
	r30_113 = 0xFFFFFFFF<32>
	branch r16_35 != (r16_35 & 0x43F<32>) l00405E58
l00405E44:
	r30_113 = 0xFFFFFFFA<32>
	branch r17_36 >=u 0xB<32> l00405E58
l00405E4C:
	branch (1<32> << r17_36 & 0x405<32>) != 0<32> l00405E66
l00405E66:
	word32 r4_68
	word32 r3_79
	r2 = __lookup_serv(r2, r3, &tLoc0678, r5, r19_34, r7_33, r16_35, r12, out r3_79, out r4_68, out r8, out r11, out r12)
	r30_113 = r4_68
	branch r4_68 < 0<32> l00405E58
l00405E76:
	word32 r4_111
	r2 = __lookup_name(r2, r3_79, &tLoc0570, &tLoc0670, r4, r17_36, r16_35, r12, out r4_111, out r8, out r11, out r12)
	branch r4_111 < 0<32> l00405FAA
l00405FAA:
	r30_113 = r4_111
l00405E8A:
	word32 r16_114 = r4_68 *s r4_111
	word32 r5_597
	word32 r6_598
	word32 r7_599
	word32 r4_117 = strlen(&tLoc0670, out r5_597, out r6_598, out r7_599)
	word32 r4_135
	word32 r6_600
	r2 = calloc(r0, 1<32>, r16_114 *s 0x3C<32> + 1<32> + r4_117, 0x3C<32>, r11, out r4_135, out r6_600, out r8, out r11)
	word32 r18_143 = r4_135
	branch r4_135 == 0<32> l00405FAE
l00405FAE:
	r30_113 = 0xFFFFFFF6<32>
l00405EAC:
	word32 r22_145 = 0<32>
	branch r4_117 == 0<32> l00405EBE
l00405EB0:
	r22_145 = r4_135 + r16_114 *s 0x3C<32>
	word32 r5_602
	word32 r3_601
	word32 r7_604
	word32 r6_603
	word32 r9_605
	word32 r10_606
	word32 r13_607
	r2 = memcpy(r22_145, &tLoc0670, r4_117 + 1<32>, out r3_601, out r5_602, out r6_603, out r7_604, out r8, out r9_605, out r10_606, out r11, out r12, out r13_607)
l00405EBE:
	word32 r23_170 = 0<32>
l00405ECE:
	branch r23_170 == r4_111 l00405F9C
l00405F9C:
	Mem182[r18_143 + r16_114 *s 0x3C<32> - 0x20<32>:word32] = 0<32>
	Mem184[&tLoc0670:word32] = r18_143
	r30_113 = 0<32>
l00405ED2:
	word32 r7_185 = &tLoc0678
	word32 r21_187 = &tLoc0678
	word32 dwLoc06A4_366 = 0<32>
l00405F48:
	branch r7_185 != r4_68 l00405EDC
l00405EDC:
	word32 r10_194 = Mem190[dwLoc06A4_366 - 8<32>:word32]
	word32 r7_196 = 0x10<32>
	word32 r3_198 = CONVERT(Mem190[r21_187 + 3<32>:byte], byte, word32)
	word32 r2_200 = CONVERT(Mem190[r21_187 + 2<32>:byte], byte, word32)
	branch (r10_194 ^ 2<32>) == 0<32> l00405EF4
l00405EF0_1:
	r7_196 = 0x1C<32>
l00405EF4:
	word32 r6_246
	word32 r4_250
	word32 r10_222
	word32 r9_610
	word32 r7_609
	word32 r6_608
	memset(r20, 0<32>, 0x20<32>, out r6_608, out r7_609, out r8, out r9_610, out r10_222)
	Mem232[r20 + 0x10<32>:byte] = SLICE(r7_196, byte, 0)
	Mem233[r20 + 1<32>:word32] = r10_222
	Mem234[r20 + 8<32>:byte] = SLICE(r3_198, byte, 0)
	Mem235[r20 + 0xC<32>:byte] = SLICE(r2_200, byte, 0)
	Mem236[r20 + 0x14<32>:byte] = SLICE(r20, byte, 0) + 0x20<8>
	Mem239[r20 + 0x18<32>:byte] = SLICE(r22_145, byte, 0)
	Mem240[r20 + 0x1C<32>:byte] = SLICE(r20, byte, 0) + 0x3C<8>
	r11 = r7_196
	r18_143 = r10_194
	word32 r7_229 = r20 + 0x3C<32>
	r2 = r2_200
	branch r10_222 == 2<32> l00405F5C
l00405F5C:
	Mem241[r20 + 0x20<32>:byte] = SLICE(r10_222, byte, 0)
	Mem247[r20 + 0x22<32>:byte] = SLICE(htons(CONVERT(Mem241[r21_187:uint16], uint16, word32)), byte, 0)
	r6_246 = 4<32>
	r4_250 = r20 + 0x24<32>
l00405F3A:
	branch r10_222 == 0xA<32> l00405F7A
l00405F7A:
	Mem251[r20 + 0x20<32>:byte] = SLICE(r10_222, byte, 0)
	Mem256[r20 + 0x22<32>:byte] = SLICE(htons(CONVERT(Mem251[r21_187:uint16], uint16, word32)), byte, 0)
	Mem259[r20 + 0x38<32>:byte] = Mem256[dwLoc06A4_366 + 4<32>:byte]
	r4_250 = r20 + 0x28<32>
	r6_246 = 0x10<32>
l00405F74:
	word32 r3_611
	word32 r6_613
	word32 r5_612
	word32 r13_616
	word32 r9_614
	word32 r10_615
	r2 = memcpy(r4_250, dwLoc06A4_366, r6_246, out r3_611, out r5_612, out r6_613, out r7_229, out r8, out r9_614, out r10_615, out r11, out r12, out r13_616)
l00405F3E:
	r7_185 = r7_229 + 1<32>
	r21_187 = r21_187 + 4<32>
	dwLoc06A4_366 = r7_185
l00405F4E:
	r23_170 = r23_170 + 1<32>
l00405E58:
	r4Out = r30_113
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
getaddrinfo_exit:


word32 copy_addr(word32 r5, word32 r6, word32 r7, word32 r9, ptr32 & r16Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netlink_msg_to_ifaddr
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..7]
// LiveOut: r11 r16 r17 sp
// Trashed: r10 r11 r12 r13 r14 r15 r16 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
copy_addr_entry:
	word32 r16
	word32 r17
	word32 r4
	word32 r11
l00405FC0:
	branch r5 == 2<32> l00405FD0
l00405FD0:
l00405FD2_thunk_fn00405FD4:
	word32 r11_19 = fn00405FD4()
	r16Out = r6
	r17Out = r4
	return r11_19
l00405FCA:
	branch r5 == 0xA<32> l00405FE2
l00405FE2:
	word32 r10_35 = CONVERT(Mem9[r7:byte], byte, word32)
	branch r10_35 != 0xFE<32> l00406002
l00406002:
	r11 = 0xFF<32>
	branch r10_35 != 0xFF<32> l00406008_thunk_fn00405FD4
l00406008_thunk_fn00405FD4:
	word32 r11_41 = fn00405FD4()
	r16Out = r6
	r17Out = r4
	return r11_41
l0040600C:
	branch (CONVERT(Mem9[r7 + 1<32>:byte], byte, word32) & 0xF<32>) != 2<32> l00406014_thunk_fn00405FD4
l00406014_thunk_fn00405FD4:
	word32 r11_59 = fn00405FD4()
	r16Out = r6
	r17Out = r4
	return r11_59
l00405FF0:
	branch (CONVERT(Mem9[r7 + 1<32>:byte], byte, word32) & 0xC0<32>) == 0x80<32> l00406018
l00406018:
	Mem80[r6 + 0x18<32>:byte] = SLICE(r9, byte, 0)
l00406018_thunk_fn0040601C:
	fn0040601C()
	r16Out = r6
	r17Out = r4
	return r11
l00405FFA_thunk_fn00405FFE:
	fn00405FFE()
	r16Out = r6
	r17Out = r4
	return r11
l00405FCE:
	r16Out = r16
	r17Out = r17
	return r11
copy_addr_exit:


word32 fn00405FD4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      copy_addr
//      fn00405FFE
// MayUse: 
// LiveOut: r11
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00405FD4_entry:
l00405FD4_thunk_fn00405FFE:
	return fn00405FFE()
fn00405FD4_exit:


word32 fn00405FFE()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      copy_addr
//      fn00405FD4
//      fn0040601C
// MayUse: 
// LiveOut: r11
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
fn00405FFE_entry:
l00405FFE:
l00406000_thunk_fn00405FD4:
	fn00405FD4()
	return <invalid>
fn00405FFE_exit:


void fn0040601C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      copy_addr
//      __netlink_enumerate
// MayUse: 
// LiveOut:
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
fn0040601C_entry:
l0040601C:
l0040601C_thunk_fn00405FFE:
	fn00405FFE()
	return
fn0040601C_exit:


void netlink_msg_to_ifaddr(word32 r0, word32 r4, word32 r5, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
netlink_msg_to_ifaddr_entry:
	ptr32 fp
l0040601E:
	word32 r7_32
	word32 r5_44
	word32 sp_129 = fp - 48<i32>
	word32 r17_207 = r5
	branch CONVERT(Mem19[r5 + 4<32>:uint16], uint16, word32) != 0x10<32> l004060AC
l004060AC:
	word32 r6_26 = Mem19[r5 + 0x14<32>:word32]
	word32 r18_29 = Mem19[r4 + ((r6_26 & 0x3F<32>) << 2<8>) + 8<32>:word32]
l004060B8:
	branch r18_29 == 0<32> l004060A8
l004060BA:
	r7_32 = Mem19[r18_29 + 0x8C<32>:word32]
	branch r6_26 == r7_32 l00406036
l004060C2:
	r18_29 = Mem19[r18_29 + 0x1C<32>:word32]
l00406028:
	r7_32 = r5 + 0x20<32>
	word32 r6_37 = r5 + Mem19[r5:word32]
l00406030:
	branch r6_37 - r7_32 >=u 4<32> l0040603A
l0040603A:
	word32 r5_43 = CONVERT(Mem19[r7_32:uint16], uint16, word32)
	branch CONVERT(Mem19[r7_32 + 2<32>:uint16], uint16, word32) == 7<32> l0040604C
l0040604C:
	r5_44 = r5_43 + 0xFFFFFFFC<32>
l00406042:
	r7_32 = r7_32 + __ins(r5_43 + 3<32>, 0<32>, 0<32>, 1<32>)
l00406036:
	r5_44 = 0<32>
l0040604E:
	word32 r4_69
	word32 r6_880
	word32 r8_881
	word32 r11_163
	calloc(r0, 1<32>, r5_44 + 0xA4<32>, r7_32, r11, out r4_69, out r6_880, out r8_881, out r11_163)
	word32 r16_105 = r4_69
	branch r4_69 == 0<32> l004060AA
l0040605E:
	branch CONVERT(Mem19[r5 + 4<32>:uint16], uint16, word32) != 0x10<32> l00406168
l00406168:
	word32 r18_102 = r5 + 0x18<32>
l00406172:
	branch r17_207 + Mem99[r17_207:word32] - r18_102 >=u 4<32> l004061E4
l004061E4:
	word32 r9_149
	word32 r7_143
	word32 r5_147
	word32 r6_145
	word32 r7_104 = CONVERT(Mem99[r18_102 + 2<32>:uint16], uint16, word32)
	branch r7_104 == 2<32> l00406240
l00406240:
	word32 r20_107 = r16_105 + 0x20<32>
	branch Mem99[r16_105 + 0xC<32>:word32] == 0<32> l0040625E
l00406248:
	word32 r7_108 = r16_105 + 0x68<32>
	fn0040628E(r7_108, r20_107, 0x24<32>)
	Mem130[sp_129 + 0x14<32>:word32] = r7_108
	word32 r6_905
	word32 r9_908
	word32 r10_909
	word32 r7_906
	word32 r8_907
	memset(r20_107, 0<32>, 0x24<32>, out r6_905, out r7_906, out r8_907, out r9_908, out r10_909)
l0040625E:
	r7_143 = r18_102 + 4<32>
	r6_145 = r20_107
	r5_147 = CONVERT(Mem141[r17_207 + 0x10<32>:byte], byte, word32)
	r9_149 = Mem141[r17_207 + 0x14<32>:word32]
l004061EA:
	word32 r8_150 = CONVERT(Mem99[r18_102:uint16], uint16, word32)
	branch r7_104 >=u 3<32> l00406202
l00406202:
	branch r7_104 == 3<32> l00406272
l00406272:
	branch r8_150 >=u 0xFFFFFFEB<32> l004061F6
l0040627A:
	word32 r20_152 = r16_105 + 0x90<32>
	word32 r10_916
	word32 r12_917
	word32 r13_918
	word32 r8_914
	word32 r9_915
	word32 r3_910
	word32 r7_913
	word32 r5_911
	word32 r6_912
	memcpy(r20_152, r18_102 + 4<32>, r8_150 + 0xFFFFFFFC<32>, out r3_910, out r5_911, out r6_912, out r7_913, out r8_914, out r9_915, out r10_916, out r11_163, out r12_917, out r13_918)
	Mem170[r16_105 + 1<32>:word32] = r20_152
l00406206:
	branch r7_104 != 4<32> l004061F6
l0040620A:
	r7_143 = r18_102 + 4<32>
	r6_145 = r16_105 + 0x68<32>
	r5_147 = CONVERT(Mem99[r17_207 + 0x10<32>:byte], byte, word32)
	r9_149 = Mem99[r17_207 + 0x14<32>:word32]
l004061F2:
	branch r7_104 == 1<32> l0040621C
l0040621C:
	r7_143 = r18_102 + 4<32>
	r5_147 = CONVERT(Mem99[r17_207 + 0x10<32>:byte], byte, word32)
	r9_149 = Mem99[r17_207 + 0x14<32>:word32]
	branch Mem99[r16_105 + 0xC<32>:word32] == 0<32> l00406234
l00406234:
	r6_145 = r16_105 + 0x20<32>
l00406238:
l0040622C:
	r6_145 = r16_105 + 0x68<32>
l00406230:
l0040623A:
	r11_163 = copy_addr(r5_147, r6_145, r7_143, r9_149, out r16_105, out r17_207)
	sp_129 = <invalid>
l004061F6:
	r18_102 = r18_102 + __ins(CONVERT(Mem223[r18_102:uint16], uint16, word32) + 3<32>, 0<32>, 0<32>, 1<32>)
l0040617C:
	branch Mem99[r16_105 + 0xC<32>:word32] == 0<32> l00406094
l00406182:
	word32 r7_232 = CONVERT(Mem99[r17_207 + 0x11<32>:byte], byte, word32)
	word32 r21_234 = CONVERT(Mem99[r17_207 + 0x10<32>:byte], byte, word32)
	Mem238[sp_129:word32] = 0<32>
	Mem239[sp_129 + 4<32>:word32] = 0<32>
	Mem240[sp_129 + 8<32>:word32] = 0<32>
	Mem241[sp_129 + 0xC<32>:word32] = 0<32>
	word32 r22_236 = r16_105 + 0x44<32>
	word32 r17_237 = r7_232
	branch r7_232 <=u 0x80<32> l004061A8
l004061A4:
	r17_237 = 0xFFFFFF80<32>
l004061A8:
	word32 r17_244 = r17_237 & 0xFF<32>
	word32 r10_894
	word32 r6_890
	word32 r9_893
	word32 r7_891
	word32 r8_892
	memset(sp_129, 0xFF<32>, r17_244 >> 3<32>, out r6_890, out r7_891, out r8_892, out r9_893, out r10_894)
	branch r17_244 >> 3<32> == 0x10<32> l004061D4
l004061BE:
	Mem264[sp_129 + 0x10<32> + (r17_244 >> 3<32>) - 0x10<32>:int8] = -1<i8> << 8<i8> - (SLICE(r17_244, int8, 0) & 7<i8>)
l004061D4:
	word32 r17_895
	r11_163 = copy_addr(r21_234, r22_236, sp_129, 0<32>, out r16_105, out r17_895)
l00406064:
	Mem299[r4_69 + 0x8C<32>:byte] = Mem19[r5 + 0x14<32>:byte]
	word32 r18_298 = r5 + 0x20<32>
l00406072:
	branch r5 + Mem303[r5:word32] - r18_298 >=u 4<32> l004060C6
l004060C6:
	word32 r7_308 = CONVERT(Mem303[r18_298 + 2<32>:uint16], uint16, word32)
	word32 r6_309 = CONVERT(Mem303[r18_298:uint16], uint16, word32)
	branch r7_308 == 2<32> l00406138
l00406138:
	branch r6_309 >=u 0xFFFFFFE3<32> l004060D6
l0040613E:
	word32 r5_311 = Mem303[r5 + 0x14<32>:word32]
	word32 r7_313 = CONVERT(Mem303[r5 + 0x12<32>:uint16], uint16, word32)
	Mem316[r4_69 + 0x68<32>:byte] = 0x11<8>
	Mem318[r4_69 + 0x6C<32>:byte] = SLICE(r5_311, byte, 0)
	Mem320[r4_69 + 0x70<32>:byte] = SLICE(r7_313, byte, 0)
	Mem321[r4_69 + 0x73<32>:byte] = SLICE(r6_309, byte, 0) + 0xFC<8>
	r11_163 = fn0040628E(r4_69 + 0x74<32>, r18_298 + 4<32>, r6_309 + 0xFFFFFFFC<32>)
	Mem337[r4_69 + 0x14<32>:byte] = SLICE(r4_69, byte, 0) + 0x68<8>
l004060CE:
	branch r7_308 >=u 3<32> l004060E2
l004060E2:
	branch r7_308 == 3<32> l004060F8
l004060F8:
	branch r6_309 >=u 0xFFFFFFEB<32> l004060D6
l004060FE:
	word32 r8_900
	word32 r9_901
	word32 r12_903
	word32 r13_904
	word32 r10_902
	word32 r3_896
	word32 r5_897
	word32 r7_899
	word32 r6_898
	memcpy(r4_69 + 0x90<32>, r18_298 + 4<32>, r6_309 + 0xFFFFFFFC<32>, out r3_896, out r5_897, out r6_898, out r7_899, out r8_900, out r9_901, out r10_902, out r11_163, out r12_903, out r13_904)
	Mem357[r4_69 + 1<32>:word32] = r4_69 + 0x90<32>
l004060E6:
	branch r7_308 != 7<32> l004060D6
l004060EA:
	r11_163 = fn0040628E(r4_69 + 0xA4<32>, r18_298 + 4<32>, r6_309 + 0xFFFFFFFC<32>)
l004060D2:
	branch r7_308 == 1<32> l0040610C
l0040610C:
	branch r6_309 >=u 0xFFFFFFE3<32> l004060D6
l00406112:
	word32 r7_381 = CONVERT(Mem303[r5 + 0x12<32>:uint16], uint16, word32)
	Mem383[r4_69 + 0x20<32>:byte] = 0x11<8>
	Mem387[r4_69 + 0x28<32>:byte] = SLICE(r7_381, byte, 0)
	Mem388[r4_69 + 0x2B<32>:byte] = SLICE(r6_309, byte, 0) + 0xFC<8>
	r11_163 = fn0040628E(r4_69 + 0x2C<32>, r18_298 + 4<32>, r6_309 + 0xFFFFFFFC<32>)
	Mem404[r4_69 + 3<32>:word32] = r4_69 + 0x20<32>
l004060D6:
	r18_298 = r18_298 + __ins(CONVERT(Mem406[r18_298:uint16], uint16, word32) + 3<32>, 0<32>, 0<32>, 1<32>)
l0040607C:
	branch Mem303[r4_69 + 4<32>:word32] == 0<32> l00406288
l00406082:
	Mem423[r4 + ((Mem303[r4_69 + 0x8C<32>:word32] & 0x3F<32>) << 2<8>) + 2<32>:word32] = r4_69
l00406094:
	branch Mem425[r16_105 + 4<32>:word32] == 0<32> l00406288
l00406288:
	word32 r4_883
	word32 r6_884
	word32 r7_885
	word32 r10_888
	word32 r11_889
	word32 r8_886
	word32 r9_887
	word32 r3_882
	free(r0, r16_105, r11_163, out r3_882, out r4_883, out r6_884, out r7_885, out r8_886, out r9_887, out r10_888, out r11_889)
l0040609A:
	branch Mem425[r4:word32] != 0<32> l004060A0
l0040609E:
	Mem470[r4:word32] = r16_105
l004060A0:
	word32 r7_473 = Mem472[r4 + 4<32>:word32]
	branch r7_473 == 0<32> l004060A6
l004060A4:
	Mem475[r7_473:word32] = r16_105
l004060A6:
	Mem478[r4 + 1<32>:word32] = r16_105
l004060A8:
l004060AA:
	return
netlink_msg_to_ifaddr_exit:


word32 fn0040628E(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      netlink_msg_to_ifaddr
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn0040628E_entry:
l0040628E:
l0040628E_thunk_memcpy:
	word32 r11_15
	word32 r3_22
	word32 r5_23
	word32 r6_24
	word32 r7_25
	word32 r8_26
	word32 r9_27
	word32 r10_28
	word32 r12_29
	word32 r13_30
	memcpy(r4, r5, r6, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r10_28, out r11_15, out r12_29, out r13_30)
	return r11_15
fn0040628E_exit:


word32 freeifaddrs(word32 r0, word32 r4, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
//      getifaddrs
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut: r11
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
freeifaddrs_entry:
l00406292:
l0040629E:
	branch r4 != 0<32> l00406296
l00406296:
	word32 r16_11 = Mem7[r4:word32]
	word32 r3_54
	word32 r4_55
	word32 r6_56
	word32 r7_57
	word32 r8_58
	word32 r9_59
	word32 r10_60
	free(r0, r4, r11, out r3_54, out r4_55, out r6_56, out r7_57, out r8_58, out r9_59, out r10_60, out r11)
	r4 = r16_11
l004062A0:
	return r11
freeifaddrs_exit:


word32 getifaddrs(word32 r0, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
// MayUse:  r0:[0..31] r11:[0..31]
// LiveOut: r11
// Trashed: r10 r11 r2 r25 r3 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
getifaddrs_entry:
	struct <anonymous> tLoc0118
l004062A2:
	word32 r6_80
	word32 r7_81
	word32 r8_82
	word32 r9_83
	word32 r10_84
	memset(&tLoc0118, 0<32>, 0x108<32>, out r6_80, out r7_81, out r8_82, out r9_83, out r10_84)
	word32 r4_31 = __rtnetlink_enumerate(&tLoc0118)
	branch r4_31 != 0<32> l004062CE
l004062CE:
	r11 = freeifaddrs(r0, r4_31, r11)
l004062C4:
l004062C8:
	return r11
getifaddrs_exit:


void dns_parse_callback(word32 r4, word32 r5, word32 r6, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r2 r25 r3 r4 r5 r7 r8 r9
// Preserved: r16 ra sp
dns_parse_callback_entry:
l004062E0:
	branch r5 != 0xC<32> l004062FE
l004062EA:
	word32 r4_25
	word32 r8_61
	word32 r11_62
	word32 r12_63
	dn_expand(r8, r8 + 0x200<32>, r6, r4, 0x100<32>, out r4_25, out r8_61, out r11_62, out r12_63)
	branch r4_25 > 0<32> l004062FE
l004062FC:
	Mem29[r4:byte] = 0<8>
l004062FE:
	return
dns_parse_callback_exit:


word32 getnameinfo(word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r21, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_addr
// MayUse:  r10:[0..31] r21:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4 r5
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
getnameinfo_entry:
	ptr32 fp
	struct <anonymous> tLoc082C
	struct <anonymous> tLoc07C8
	struct <anonymous> tLoc0738
	struct <anonymous> tLoc0638
	struct <anonymous> tLoc0438
	word32 dwLoc0830
	word32 dwLoc0844
l00406302:
	word32 r4_1604
	word32 r7_129
	word32 r18_135
	word32 r17_166
	word32 r20_26 = CONVERT(Mem23[r4:uint16], uint16, word32)
	word32 r23_136 = r6
	word32 r30_139 = r7
	word32 r19_164 = r10
	branch r20_26 == 2<32> l00406324
l00406324:
	r17_166 = r4 + 4<32>
	r4_1604 = 0xFFFFFFFA<32>
	branch r5 <u 0x10<32> l004065A0
l0040632E:
	r18_135 = 0<32>
	r5 = sprintf(fp - 0x818<32>, 0x00411EF4<p32>, out r7_129, out r23_136, out r30_139)
l0040631A:
	branch r20_26 == 0xA<32> l004064E4
l004064E4:
	r17_166 = r4 + 8<32>
	r4_1604 = 0xFFFFFFFA<32>
	branch r5 <u 0x1C<32> l004065A0
l004064EE:
	word32 r9_1725
	word32 r7_1723
	word32 r8_1724
	branch memcmp(r4 + 8<32>, 0x00412E0C<p32>, 0xC<32>, out r7_1723, out r8_1724, out r9_1725) == 0<32> l00406536
l00406536:
	r5 = sprintf(fp - 0x818<32>, 0x00411EF4<p32>, out r7_129, out r23_136, out r30_139)
l004064FA:
	word32 r7_102 = fp - 0x818<32>
	word32 r6_103 = 0xF<32>
l004064FE:
	word32 r5_107 = CONVERT(Mem106[r4 + 8<32> + r6_103:byte], byte, word32)
	word32 r5_113 = CONVERT(Mem106[0x00412E1C<p32> + (r5_107 >>u 4<32>):byte], byte, word32)
	Mem115[r7_102:byte] = Mem106[0x00412E1C<p32> + (r5_107 & 0xF<32>):byte]
	Mem117[r7_102 + 2<32>:byte] = SLICE(r5_113, byte, 0)
	Mem119[r7_102 + 1<32>:byte] = 0x2E<8>
	r7_102 = r7_102 + 4<32>
	Mem121[r7_102 - 1<32>:int8] = 46<i8>
	r6_103 = r6_103 + 0xFFFFFFFF<32>
	branch r6_103 != 0xFFFFFFFF<32> l004064FE
l00406528:
	word32 r6_1726
	word32 r8_1727
	r5 = strcpy(fp - 0x7D8<32>, 0x00411F10<p32>, out r6_1726, out r7_129, out r8_1727)
l00406532:
	r18_135 = Mem134[r4 + 0x18<32>:word32]
l0040634A:
	branch r23_136 == 0<32> l004065BE
l0040634E:
	branch r30_139 == 0<32> l004065BE
l00406352:
	Mem148[&tLoc0738:byte] = 0<8>
	branch (r10 & 1<32>) != 0<32> l0040644E
l0040635E:
	word32 r4_158
	word32 r8_1650
	word32 r9_1651
	__fopen_rb_ca(&tLoc07C8, out r4_158, out r5, out r8_1650, out r9_1651, out r19_164)
	r21 = r4_158
	branch r4_158 == 0<32> l0040644E
l00406376:
	word32 dwLoc0860_923 = r17_166
	branch r20_26 != 2<32> l00406392
l0040637C:
	word32 r3_1655
	word32 r5_1656
	word32 r8_1659
	word32 r9_1660
	word32 r10_1661
	word32 r11_1662
	word32 r6_1657
	word32 r7_1658
	word32 r12_1663
	word32 r13_1664
	memcpy(fp - 0x838<32>, r17_166, 4<32>, out r3_1655, out r5_1656, out r6_1657, out r7_1658, out r8_1659, out r9_1660, out r10_1661, out r11_1662, out r12_1663, out r13_1664)
	fn004066AA(fp - 0x844<32>, 0x00412E0C<p32>, 0xC<32>)
	dwLoc0860_923 = fp - 0x844<32>
l00406392:
	word32 r8_1652
	word32 r12_224
	word32 r3_230
	word32 r4_231
	word32 r11_1654
	word32 r9_1653
	word32 r2_217 = fgets_unlocked(&tLoc0638, 0x200<32>, r21, out r3_230, out r4_231, out r5, out r8_1652, out r9_1653, out r11_1654, out r12_224, out r21)
	branch r4_231 == 0<32> l0040644A
l004063A4:
	word32 r4_236 = strchr(&tLoc0638, 0x23<32>)
	branch r4_236 == 0<32> l004063B6
l004063B0:
	Mem243[r4_236 + 1<32>:byte] = 0<8>
	Mem244[r4_236:byte] = 0xA<8>
l004063B6:
	word32 r6_246 = &tLoc0638
l004063BA:
	word32 r5_249 = CONVERT(Mem898[r6_246:byte], byte, word32)
	word32 r22_250 = r6_246 + 1<32>
	branch (r5_249 & 0xDF<32>) == 0<32> l004063CE
l004063C6:
	branch r5_249 >=u 0xFFFFFFF2<32> l00406552
l00406552:
	r6_246 = r22_250
l004063CE:
	Mem255[r6_246:byte] = 0<8>
	word32 r6_284
	word32 r12_1676
	word32 r8_1673
	word32 r9_1674
	word32 r11_1675
	word32 r4_282
	__lookup_ipliteral(r2_217, r3_230, fp - 0x834<32>, &tLoc0638, 0<32>, r12_224, out r4_282, out r6_284, out r8_1673, out r9_1674, out r11_1675, out r12_1676)
	branch r4_282 <= 0<32> l00406392
l004063E0:
	branch r6_284 != 2<32> l004063FA
l004063E6:
	fn004066AA(fp - 0x820<32>, &tLoc082C, 4<32>)
	fn004066AA(&tLoc082C, 0x00412E0C<p32>, 0xC<32>)
	r4_282 = &tLoc082C
	dwLoc0830 = 0<32>
l004063FA:
	r17_166 = dwLoc0860_923
	word32 r8_1678
	word32 r9_1679
	word32 r7_1677
	branch memcmp(r4_282, &tLoc082C, 0x10<32>, out r7_1677, out r8_1678, out r9_1679) != 0<32> l00406392
l00406406:
	r17_166 = dwLoc0830
	branch r18_135 != 0x10<32> l00406392
l0040640C:
	word32 r6_346
	word32 r6_345 = CONVERT(Mem327[r22_250:byte], byte, word32)
	branch r6_345 == 0<32> l00406556
l00406556:
	r6_346 = r22_250
l00406414:
	branch r6_345 == 0x20<32> l004066A2
l00406418:
	branch r6_345 <u 0xFFFFFFF2<32> l004066A2
l004066A2:
	r22_250 = r22_250 + 1<32>
l00406420:
	r6_346 = r22_250
l00406422:
	word32 r5_353 = CONVERT(Mem327[r6_346:byte], byte, word32)
	branch (r5_353 & 0xDF<32>) == 0<32> l00406432
l0040642A:
	branch r5_353 >=u 0xFFFFFFF2<32> l004066A6
l004066A6:
	r6_346 = r6_346 + 1<32>
l00406432:
	Mem358[r6_346:byte] = 0<8>
	word32 r6_362 = r6_346 - r22_250
	branch r6_362 > 0xFF<32> l00406392
l00406440:
	word32 r3_1680
	word32 r6_1681
	word32 r8_1683
	word32 r13_1688
	word32 r9_1684
	word32 r11_1686
	word32 r12_1687
	word32 r7_1682
	word32 r10_1685
	memcpy(&tLoc0738, r22_250, r6_362 + 1<32>, out r3_1680, out r5, out r6_1681, out r7_1682, out r8_1683, out r9_1684, out r10_1685, out r11_1686, out r12_1687, out r13_1688)
l0040644A:
	__fclose_ca(r21)
l0040644E:
	word32 r7_403 = CONVERT(Mem400[&tLoc0738:byte], byte, word32)
	branch r7_403 != 0<32> l0040649E
l00406454:
	r17_166 = r10 & 1<32>
	branch r7_403 != 0<32> l0040649E
l00406458:
	word32 r12_417
	word32 r8_1666
	word32 r4_1665
	word32 r11_1667
	res_mkquery(0<32>, fp - 0x818<32>, 1<32>, 0xC<32>, &tLoc0638, 0x60<32>, out r4_1665, out r8_1666, out r11_1667, out r12_417)
	word32 r11_442
	word32 r4_451 = res_send(r12_417, r21, out r11_442, out r17_166)
	Mem458[&tLoc0738:byte] = 0<8>
	r5 = r4_451
	branch r4_451 <= 0<32> l0040649E
l0040648E:
	word32 r7_1669
	word32 r8_1670
	word32 r11_1671
	word32 r12_1672
	word32 r6_1668
	__dns_parse(&tLoc0438, r4_451, &tLoc0738, r11_442, out r5, out r6_1668, out r7_1669, out r8_1670, out r11_1671, out r12_1672)
l0040649E:
	branch CONVERT(Mem480[&tLoc0738:byte], byte, word32) != 0<32> l00406590
l004064A6:
	r4_1604 = 0xFFFFFFFE<32>
	branch !__bit(r19_164, 3<32>) l004065A0
l004064AE:
	r23_136 = inet_ntop(r20_26, r17_166, &tLoc0738, 0x100<32>, out r30_139)
	branch r18_135 == 0<32> l00406590
l004064C0:
	word32 r4_565
	branch __bit(r19_164, 8<32>) l0040655A
l0040655A:
	word32 r7_549 = CONVERT(Mem480[r17_166:byte], byte, word32)
	branch r7_549 != 0xFE<32> l004065A4
l004065A4:
	branch r7_549 != 0xFF<32> l004064C4
l004065AC:
	branch (CONVERT(Mem480[r17_166 + 1<32>:byte], byte, word32) & 0xF<32>) != 2<32> l004064C4
l004065B4:
l00406564:
	branch (CONVERT(Mem480[r17_166 + 1<32>:byte], byte, word32) & 0xC0<32>) != 0x80<32> l004064C4
l00406572:
	r4_565 = if_indextoname(&tLoc0438 + 1<i32>)
	branch r4_565 == 0<32> l004064C4
l004064C4:
	r4_565 = fp - 0x829<32>
l004064CC:
	r4_565 = r4_565 + 0xFFFFFFFF<32>
	Mem580[r4_565:byte] = SLICE(r18_135 % 0xA<32>, byte, 0) + 0x30<8>
	branch r18_135 != 0<32> l004064CC
l004064E2:
l0040657E:
	Mem587[r4_565 - 1<32>:int8] = 37<i8>
	strcat(&tLoc0738)
l00406590:
	word32 r7_1690
	word32 r6_1689
	branch strlen(&tLoc0738, out r5, out r6_1689, out r7_1690) <u r30_139 l004065B6
l004065B6:
	word32 r6_1721
	word32 r8_1722
	r5 = strcpy(r23_136, &tLoc0738, out r6_1721, out r7_129, out r8_1722)
l004065BE:
	r4_1604 = 0<32>
	branch r7_129 == 0<32> l004065A0
l004065C4:
	branch r7_129 == 0<32> l004065A0
l004065C8:
	word32 r4_680 = ntohs(CONVERT(Mem650[r4 + 2<32>:uint16], uint16, word32))
	Mem681[&tLoc0738:byte] = 0<8>
	branch !__bit(r19_164, 1<32>) l004065F4
l004065D8:
	word32 r4_697
	word32 r19_703
	word32 r5_1691
	word32 r8_1692
	word32 r9_1693
	__fopen_rb_ca(&tLoc0638, out r4_697, out r5_1691, out r8_1692, out r9_1693, out r19_703)
	branch r4_697 != 0<32> l00406636
l00406636:
	word32 r12_721
	word32 r3_727
	word32 r4_728
	word32 r21_1698
	word32 r5_1694
	word32 r8_1695
	word32 r9_1696
	word32 r11_1697
	word32 r2_714 = fgets_unlocked(&tLoc07C8, 0x80<32>, r4_697, out r3_727, out r4_728, out r5_1694, out r8_1695, out r9_1696, out r11_1697, out r12_721, out r21_1698)
	branch r4_728 == 0<32> l0040669C
l00406644:
	word32 r4_733 = strchr(&tLoc07C8, 0x23<32>)
	branch r4_733 == 0<32> l00406652
l0040664C:
	Mem740[r4_733 + 1<32>:byte] = 0<8>
	Mem741[r4_733:byte] = 0xA<8>
l00406652:
	word32 r6_743 = &tLoc07C8
l00406654:
	word32 r7_746 = CONVERT(Mem903[r6_743:byte], byte, word32)
	branch r7_746 == 0<32> l00406636
l00406658:
	word32 r16_747 = r6_743 + 1<32>
	branch r7_746 == 0x20<32> l00406668
l00406660:
	branch r7_746 >=u 0xFFFFFFF2<32> l00406632
l00406632:
	r6_743 = r16_747
l00406668:
	Mem751[r6_743:byte] = 0<8>
	word32 r4_777
	word32 r11_1708
	word32 r3_1703
	word32 r6_1704
	word32 r9_1707
	word32 r7_1705
	word32 r8_1706
	word32 r12_1709
	__strtoul_internal(r2_714, r3_727, r16_747, fp - 0x844<32>, 0xA<32>, r12_721, out r3_1703, out r4_777, out r6_1704, out r7_1705, out r8_1706, out r9_1707, out r11_1708, out r12_1709)
	branch r4_777 != r4_680 l00406636
l00406676:
	branch r16_747 == r4_777 l00406636
l0040667C:
	word32 r5_789 = 0x00411F40<p32>
	branch (r19_703 & 0x10<32>) == 0<32> l00406688
l00406684:
	r5_789 = 0x00411F38<p32>
l00406688:
	word32 r6_1710
	branch strncmp(r4_777, r5_789, 4<32>, out r6_1710) != 0<32> l00406636
l0040668E:
	word32 r6_808 = r16_747 - dwLoc0844
	branch r6_808 >= 0x21<32> l00406636
l00406694:
	word32 r5_1712
	word32 r6_1713
	word32 r3_1711
	word32 r7_1714
	word32 r8_1715
	word32 r9_1716
	word32 r10_1717
	word32 r11_1718
	word32 r12_1719
	word32 r13_1720
	memcpy(&tLoc0738, dwLoc0844, r6_808, out r3_1711, out r5_1712, out r6_1713, out r7_1714, out r8_1715, out r9_1716, out r10_1717, out r11_1718, out r12_1719, out r13_1720)
l0040669C:
	__fclose_ca(r4_697)
l004065F4:
	word32 r16_843 = &tLoc0738
	branch CONVERT(Mem838[&tLoc0738:byte], byte, word32) != 0<32> l0040661E
l004065FE:
	r16_843 = fp - 0x829<32>
l00406608:
	r16_843 = r16_843 + 0xFFFFFFFF<32>
	Mem856[r16_843:byte] = SLICE(r4_680 % 0xA<32>, byte, 0) + 0x30<8>
	branch r4_680 != 0<32> l00406608
l0040661E:
	word32 r7_866
	word32 r6_1699
	word32 r4_863 = strlen(r16_843, out r5, out r6_1699, out r7_866)
	branch r4_863 >=u r7_866 l0040659C
l00406628:
	word32 r6_1700
	word32 r7_1701
	word32 r8_1702
	r5 = strcpy(r4_863, r16_843, out r6_1700, out r7_1701, out r8_1702)
	r4_1604 = 0<32>
l0040659C:
	r4_1604 = 0xFFFFFFF4<32>
l0040631E:
	r4_1604 = 0xFFFFFFFA<32>
l004065A0:
	r5Out = r5
	return r4_1604
getnameinfo_exit:


void fn004066AA(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn004066AA_entry:
l004066AA:
l004066AA_thunk_memcpy:
	word32 r3_22
	word32 r5_23
	word32 r6_24
	word32 r7_25
	word32 r8_26
	word32 r9_27
	word32 r10_28
	word32 r11_29
	word32 r12_30
	word32 r13_31
	memcpy(r4, r5, r6, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r10_28, out r11_29, out r12_30, out r13_31)
	return
fn004066AA_exit:


word32 getsockname()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
//      __lookup_name
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
getsockname_entry:
l004066B0:
	word32 r4_19
	word32 r5_32
	word32 r6_33
	word32 r7_34
	word32 r8_35
	word32 r9_36
	__syscall(out r4_19, out r5_32, out r6_33, out r7_34, out r8_35, out r9_36)
l004066C8_thunk___syscall_ret:
	word32 r4_29
	word32 r7_37
	__syscall_ret(r4_19, out r4_29, out r7_37)
	return r4_29
getsockname_exit:


word32 getsockopt(ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sock_setbufs
// MayUse: 
// LiveOut: r4 r7
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
getsockopt_entry:
l004066D0:
	word32 r4_21
	word32 r5_35
	word32 r6_36
	word32 r7_37
	word32 r8_38
	word32 r9_39
	__syscall(out r4_21, out r5_35, out r6_36, out r7_37, out r8_38, out r9_39)
l004066EA_thunk___syscall_ret:
	word32 r4_31
	word32 r7_32
	__syscall_ret(r4_21, out r4_31, out r7_32)
	r7Out = r7_32
	return r4_31
getsockopt_exit:


word32 htonl(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
htonl_entry:
l004066F0:
	return __rotx(r4, 8<32>, 0x18<32>, 0<32>)
htonl_exit:


word32 htons(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00400B62
//      setup
//      ping6_usage
//      fn0040359C
//      getaddrinfo
//      __res_msend_rc
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
htons_entry:
l00406700:
	return __rotx(r4, 0x18<32>, 8<32>, 0<32>) & 0xFFFF<32>
htons_exit:


word32 if_indextoname(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
// MayUse:  r5:[0..31]
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
if_indextoname_entry:
	ptr32 fp
l00406710:
	word32 r4_29
	word32 r3_120
	word32 r6_121
	word32 r8_122
	word32 r9_123
	socket(0x80001<32>, out r3_120, out r4_29, out r6_121, out r8_122, out r9_123)
	branch r4_29 < 0<32> l00406752
l00406728:
	word32 r4_37
	word32 r7_124
	ioctl(out r4_37, out r7_124)
	word32 r4_125
	word32 r5_126
	word32 r6_127
	word32 r7_128
	word32 r8_129
	word32 r9_130
	__syscall(out r4_125, out r5_126, out r6_127, out r7_128, out r8_129, out r9_130)
	branch r4_37 >= 0<32> l00406756
l00406756:
	strncpy(r5, fp - 48<i32>, 0x10<32>)
	return r5
l00406740:
	word32 r4_71
	__errno_location(out r4_71)
	branch Mem33[r4_71:word32] != 0x13<32> l00406752
l0040674A:
	word32 r4_131
	__errno_location(out r4_131)
l00406752:
	return 0<32>
if_indextoname_exit:


word32 if_nametoindex(word32 r4, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      if_name2index
//      __lookup_ipliteral
// MayUse:  r4:[0..31]
// LiveOut: r2 r4 r6 r8 r9
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
if_nametoindex_entry:
	ptr32 fp
l00406760:
	word32 r4_25
	word32 r3_106
	word32 r6_21
	word32 r8_23
	word32 r9_24
	word32 r2_17 = socket(0x80001<32>, out r3_106, out r4_25, out r6_21, out r8_23, out r9_24)
	branch r4_25 >= 0<32> l0040677C
l0040677C:
	strncpy(fp - 48<i32>, r4, 0x10<32>)
	word32 r4_43
	word32 r7_107
	ioctl(out r4_43, out r7_107)
	word32 r4_54
	word32 r5_108
	word32 r7_109
	r2_17 = __syscall(out r4_54, out r5_108, out r6_21, out r7_109, out r8_23, out r9_24)
	branch r4_43 < 0<32> l00406778
l0040679A:
	r4Out = r4_54
	r6Out = r6_21
	r8Out = r8_23
	r9Out = r9_24
	return r2_17
l00406778:
	r4Out = 0<32>
	r6Out = r6_21
	r8Out = r8_23
	r9Out = r9_24
	return r2_17
if_nametoindex_exit:


word32 __inet_aton(word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      __lookup_ipliteral
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11 r12 r2 r3 r4 r6 r8 r9
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__inet_aton_entry:
	ptr32 fp
	word32 dwLoc24
l004067A0:
	word32 r16_13 = 0<32>
	word32 r17_16 = r4
l004067AE:
	word32 r11_33
	word32 r4_39
	word32 r8_43
	word32 r9_44
	word32 r7_270
	word32 r6_244
	r2 = __strtoul_internal(r2, r3, r17_16, fp - 0x24<32>, 0<32>, r12, out r3, out r4_39, out r6_244, out r7_270, out r8_43, out r9_44, out r11_33, out r12)
	Mem47[fp - 0x20<32> + r16_13 * 4<32>:word32] = r4_39
	branch dwLoc24 != fp - 0x20<32> l004067C4
l004067C4:
	r6_244 = 0<32>
	branch true l004067CC
l004067C8:
	branch true l004067C0
l004067CC:
	branch CONVERT(Mem47[dwLoc24:byte], byte, word32) >=u 0xFFFFFFC6<32> l004067C0
l004067D6:
	branch true l004067E4
l004067E4:
	branch r16_13 == 1<32> l004067FC
l004067E8:
	branch r16_13 == 2<32> l00406808
l004067EC:
	branch r16_13 != 0<32> l00406812
l004067EE:
	__ext(fp - 0x20<32>, 0<32>, 0x18<32>)
l004067FC:
l00406808:
l00406812:
	word32 r7_79 = 0<32>
l00406814:
	r6_244 = Mem84[fp - 0x20<32> + r7_79 * 4<32>:word32]
	branch r6_244 >u 0xFF<32> l004067C0
l00406820:
	Mem87[r7_79 + r5:byte] = SLICE(r6_244, byte, 0)
	r7_79 = r7_79 + 1<32>
	branch r7_79 != 4<32> l00406814
l0040682A:
	r3Out = <invalid>
	r4Out = 1<32>
	r6Out = r6_244
	r8Out = <invalid>
	r9Out = <invalid>
	r11Out = <invalid>
	r12Out = <invalid>
	return <invalid>
l004067D8:
	r16_13 = r16_13 + 1<32>
	r17_16 = fp - 0x1F<32>
	branch r16_13 != 4<32> l004067AE
l004067E2:
l004067C0:
	r3Out = <invalid>
	r4Out = 0<32>
	r6Out = r6_244
	r8Out = <invalid>
	r9Out = <invalid>
	r11Out = <invalid>
	r12Out = <invalid>
	return <invalid>
__inet_aton_exit:


void inet_ntoa(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401590
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
inet_ntoa_entry:
l00406830:
	__ext(r4, 0<32>, 8<32>)
	__ext(r4, 8<32>, 8<32>)
	word32 r22_38
	word32 r23_39
	word32 r30_40
	snprintf(0x00432970<p32>, 0x10<32>, 0x00411F48<p32>, out r22_38, out r23_39, out r30_40)
	return
inet_ntoa_exit:


word32 inet_ntop(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r23 r30
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
inet_ntop_entry:
	ptr32 fp
	struct <anonymous> tLoc84
	word32 r23
	word32 r30
l00406860:
	branch r4 == 2<32> l0040687A
l0040687A:
	word32 r22_476
	branch snprintf(r6, r7, 0x00411F48<p32>, out r22_476, out r23, out r30) <u r7 l004069BC
l0040686A:
	branch r4 == 0xA<32> l0040689E
l0040689E:
	word32 r9_479
	word32 r7_477
	word32 r8_478
	branch memcmp(r5, 0x00412E30<p32>, 0xC<32>, out r7_477, out r8_478, out r9_479) == 0<32> l00406932
l00406932:
	word32 r22_482
	snprintf(&tLoc84, 0x64<32>, 0x00411F6C<p32>, out r22_482, out r23, out r30)
l004068EE:
	word32 r22_483
	snprintf(&tLoc84, 0x64<32>, 0x00411F54<p32>, out r22_483, out r23, out r30)
l00406928:
	word32 r19_154 = 0<32>
	word32 r21_155 = 2<32>
	word32 r16_156 = 0<32>
l00406964:
	word32 r7_160 = CONVERT(Mem257[&tLoc84 + r16_156:byte], byte, word32)
	branch r7_160 == 0<32> l00406984
l00406984:
	branch r21_155 < 3<32> l004069AE
l00406988:
	word32 r7_166 = fp - 0x20<32> + r19_154
	Mem168[r7_166 - 0x64<32>:int8] = 58<i8>
	Mem170[r7_166 - 0x63<32>:int8] = 58<i8>
	word32 r11_489
	word32 r12_490
	word32 r8_487
	word32 r9_488
	memmove(&tLoc84 + (r19_154 + 2<32>), &tLoc84 + (r21_155 + r19_154), r16_156 - r19_154 - r21_155 + 1<32>, out r8_487, out r9_488, out r11_489, out r12_490)
l004069AE:
	word32 r6_485
	word32 r7_486
	word32 r5_484
	branch strlen(&tLoc84, out r5_484, out r6_485, out r7_486) >=u r7 l00406896
l00406896:
	word32 r4_481
	__errno_location(out r4_481)
l004069B6:
	word32 r8_493
	word32 r6_491
	word32 r7_492
	strcpy(r6, &tLoc84, out r6_491, out r7_492, out r8_493)
l0040696A:
	branch r16_156 == 0<32> l00406970
l0040696C:
	branch r7_160 != 0x3A<32> l00406962
l00406970:
	word32 r4_220 = strspn(&tLoc84 + r16_156, 0x00411F8C<p32>)
	branch r21_155 >= r4_220 l00406962
l0040697E:
	r19_154 = r16_156
	r21_155 = r4_220
l00406962:
	r16_156 = r16_156 + 1<32>
l0040686E:
	word32 r4_480
	__errno_location(out r4_480)
l00406874:
l004069BC:
	r30Out = r30
	return r23
inet_ntop_exit:


word32 inet_pton(word32 r4, word32 r5, word32 r6, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      inet_pton
//      __lookup_ipliteral
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r4 r6 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
inet_pton_entry:
	ptr32 fp
	word32 r11
	word32 r12
	word32 r2
	word32 r8
	word32 r9
l004069C0:
	word32 r16_160 = r5
	branch r4 != 2<32> l00406A24
l00406A24:
	branch r4 == 0xA<32> l00406A34
l00406A34:
	branch CONVERT(Mem15[r5:byte], byte, word32) != 0x3A<32> l00406A42
l00406A3A:
	branch CONVERT(Mem15[r5 + 1<32>:byte], byte, word32) != 0x3A<32> l004069EA
l00406A40:
	r16_160 = r5 + 1<32>
l00406A42:
	word32 r4_207 = 0xFFFFFFFF<32>
	word32 r17_209 = 0<32>
l00406A46:
	word32 r18_147
	word32 r7_210
	branch CONVERT(Mem28[r16_160:byte], byte, word32) != 0x3A<32> l00406A74
l00406A4C:
	branch r4_207 != 0xFFFFFFFF<32> l00406A74
l00406A74:
	word32 r5_32 = 0<32>
	word32 r7_33 = 0<32>
l00406A78:
	word32 r18_37 = CONVERT(Mem28[r16_160 + r7_33:byte], byte, word32)
	word32 r6_38 = r18_37 + 0xFFFFFFD0<32>
	branch r18_37 <u 0xFFFFFFC6<32> l00406A94
l00406A84:
	r6 = r18_37 | 0x20<32>
	branch (r18_37 | 0x20<32>) >=u 0xFFFFFF99<32> l00406AA0
l00406AA0:
	branch r7_33 == 0<32> l004069EA
l00406A90:
	r6_38 = (r18_37 | 0x20<32>) + 0xFFFFFFA9<32>
l00406A94:
	r7_33 = r7_33 + 1<32>
	r5_32 = (r5_32 << 4<32>) + r6_38
	branch r7_33 != 4<32> l00406A78
l00406A9E:
l00406AA4:
	Mem63[fp - 0x20<32> + ((r17_209 & 7<32>) << 1<8>) - 0x10<32>:int16] = SLICE(r5_32, int16, 0)
	r6 = CONVERT(Mem63[r16_160 + r7_33:byte], byte, word32)
	branch r6 != 0<32> l00406AC4
l00406AC4:
	branch r17_209 == 7<32> l004069EA
l00406AC8:
	branch r6 == 0x3A<32> l00406B36
l00406B36:
	r7_210 = r16_160 + (r7_33 + 1<32>)
l00406ACC:
	branch r6 != 0x2E<32> l004069EA
l00406AD0:
	branch r17_209 >= 6<32> l00406B08
l00406B08:
	r18_147 = 1<32>
	branch r4_207 != 0xFFFFFFFF<32> l00406ADA
l00406AD6:
	branch r4_207 == 0xFFFFFFFF<32> l004069EA
l00406ADA:
	r17_209 = r17_209 + 1<32>
	r18_147 = 1<32>
l00406AB6:
	branch r4_207 != 0xFFFFFFFF<32> l00406B40
l00406ABC:
	branch r17_209 != 7<32> l004069EA
l00406AC0:
	r18_147 = 0<32>
l00406A52:
	r6 = CONVERT(Mem28[r16_160 + 1<32>:byte], byte, word32)
	Mem85[fp - 0x20<32> + ((r17_209 & 7<32>) << 1<8>) - 0x10<32>:int16] = 0<i16>
	r7_210 = r16_160 + 1<32>
	branch r6 == 0<32> l00406B3C
l00406B3C:
	r4_207 = r17_209
	r16_160 = r7_210
l00406B40:
	r18_147 = 0<32>
l00406ADE:
	word32 r20_99 = fp - 48<i32> + (r4_207 << 1<8>)
	r2 = memmove(fp - 48<i32> + ((r4_207 + 7<32>) - r17_209 << 1<8>), r20_99, r17_209 + 1<32> - r4_207 << 1<32>, out r8, out r9, out r11, out r12)
	word32 r7_121 = 0<32>
l00406AF8:
	branch r7_121 >= 7<32> - r17_209 l00406B0E
l00406B0E:
	word32 r6_133 = r6
	word32 r7_134 = 0<32>
l00406B10:
	word32 r5_138 = CONVERT(Mem137[fp - 48<i32> + r7_134 * 2<32>:word16], word16, word32)
	Mem142[r6_133:byte] = SLICE(r5_138 >>u 8<32>, byte, 0)
	r6_133 = r6_133 + 2<32>
	Mem144[r6_133 - 1<32>:int8] = SLICE(r5_138, int8, 0)
	r7_134 = r7_134 + 1<32>
	branch r7_134 != 8<32> l00406B10
l00406B24:
	branch r18_147 == 0<32> l00406B44
l00406B44:
	r4Out = 1<32>
	r6Out = r6_133
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l00406B28:
	word32 r6_182
	word32 r4_183
	word32 r11_187
	word32 r12_188
	word32 r8_195
	word32 r9_196
	word32 r2_192 = inet_pton(2<32>, r16_160, r6 + 0xC<32>, out r4_183, out r6_182, out r8_195, out r9_196, out r11_187, out r12_188)
	r4Out = CONVERT(r4_183 > 0<32>, bool, word32)
	r6Out = r6_182
	r8Out = r8_195
	r9Out = r9_196
	r11Out = r11_187
	r12Out = r12_188
	return r2_192
l00406B00:
	Mem205[r20_99 + r7_121 * 2<32>:word16] = 0<16>
	r7_121 = r7_121 + 1<32>
l00406A68:
	branch r17_209 == 7<32> l004069EA
l00406A6C:
	r4_207 = r17_209
l00406A6E:
	r17_209 = r17_209 + 1<32>
	r16_160 = r7_210
l00406A28:
	word32 r4_664
	__errno_location(out r4_664)
	r4Out = 0xFFFFFFFF<32>
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l004069C8:
	word32 r7_225 = 0<32>
l00406A20:
	word32 r5_226 = 0<32>
	r6 = 0<32>
l004069DC:
	word32 r17_231 = CONVERT(Mem320[r16_160 + r6:byte], byte, word32)
	branch r17_231 <u 0xFFFFFFC6<32> l004069CC
l004069CC:
	r6 = r6 + 1<32>
	r5_226 = r5_226 *s 0xA<32> + r17_231 + 0xFFFFFFD0<32>
	branch r6 == 3<32> l004069F4
l004069E8:
	branch r6 != 0<32> l004069EE
l004069EE:
	branch r6 == 1<32> l004069FA
l004069F2:
	r6 = r4
l004069F4:
	branch CONVERT(Mem320[r16_160:byte], byte, word32) == 0x30<32> l004069EA
l004069FA:
	branch r5_226 > 0xFF<32> l004069EA
l00406A02:
	Mem256[r7_225 + r6:byte] = SLICE(r5_226, byte, 0)
	word32 r5_260 = CONVERT(Mem256[r16_160 + r6:byte], byte, word32)
	branch r5_260 != 0<32> l00406A12
l00406A12:
	branch r5_260 != 0x2E<32> l004069EA
l00406A16:
	r6 = r6 + 1<32>
	r7_225 = r7_225 + 1<32>
	r16_160 = r16_160 + r6
	branch r7_225 == 4<32> l004069EA
l00406A0C:
	r4Out = CONVERT(r7_225 == 3<32>, bool, word32)
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l004069EA:
	r4Out = 0<32>
	r6Out = r6
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
inet_pton_exit:


word32 __lookup_ipliteral(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_name
//      __get_resolv_conf
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r4 r6 r8 r9
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__lookup_ipliteral_entry:
	ptr32 fp
	struct <anonymous> tLoc70
	byte bLoc6F
l00406B50:
	word32 r7_199
	word32 r18_20 = r5
	word32 r4_37
	word32 r3_376
	word32 r12_106
	word32 r11_105
	word32 r6_119
	word32 r8_117
	word32 r9_118
	word32 r2_110 = __inet_aton(r2, r3, r5, fp - 0x78<32>, r12, out r3_376, out r4_37, out r6_119, out r8_117, out r9_118, out r11_105, out r12_106)
	branch r4_37 <= 0<32> l00406B7E
l00406B7E:
	word32 r4_47 = strchr(r5, 0x25<32>)
	branch r4_47 == 0<32> l00406B9E
l00406B88:
	word32 r19_54 = r4_47 - r5
	branch r19_54 >= 0<32> l00406B9E
l00406B8E:
	word32 r3_378
	word32 r8_380
	word32 r6_379
	word32 r9_381
	word32 r11_382
	word32 r12_383
	fn00406C24(fp - 0x60<32>, r5, r19_54, out r3_378, out r6_379, out r8_380, out r9_381, out r11_382, out r12_383)
	Mem76[fp - 0x20<32> + r19_54 - 0x40<32>:int8] = 0<i8>
	r18_20 = fp - 0x60<32>
l00406B9E:
	word32 r4_83
	r2_110 = inet_pton(0xA<32>, r18_20, &tLoc70, out r4_83, out r6_119, out r8_117, out r9_118, out r11_105, out r12_106)
	r7_199 = 0<32>
	branch r4_83 <= 0<32> l00406B7A
l00406BAC:
	branch r6 == 2<32> l00406B64
l00406BB0:
	word32 r3_113
	word32 r6_384
	r2_110 = fn00406C24(r4 + 8<32>, &tLoc70, 0x10<32>, out r3_113, out r6_384, out r8_117, out r9_118, out r11_105, out r12_106)
	r6_119 = 0xA<32>
	branch r4_47 == 0<32> l00406C20
l00406C20:
l00406BC0:
	word32 r5_127
	word32 r7_123 = CONVERT(Mem120[r4_47 + 1<32>:byte], byte, word32)
	word32 r7_125 = r7_123 + 0xFFFFFFD0<32>
	branch r7_123 >=u 0xFFFFFFC6<32> l00406C02
l00406C02:
	r5_127 = 0<32>
l00406BCE:
	r2_110 = __strtoull_internal(r2_110, r3_113, r4_47 + 1<32>, fp - 0x74<32>, 0xA<32>, r12_106, out r5_127, out r6_119, out r7_125, out r8_117, out r9_118, out r11_105, out r12_106)
l00406BD4:
	branch CONVERT(Mem147[r7_125:byte], byte, word32) == 0<32> l00406C1C
l00406C1C:
	branch r5_127 == 0<32> l00406BFE
l00406C1E:
l00406BDA:
	word32 r7_152 = CONVERT(Mem147[&tLoc70:byte], byte, word32)
	branch r7_152 != 0xFE<32> l00406C08
l00406C08:
	r6_119 = 0xFF<32>
	branch r7_152 != 0xFF<32> l00406B64
l00406C10:
	branch (CONVERT(bLoc6F, byte, word32) & 0xF<32>) == 2<32> l00406BF6
l00406C1A:
l00406BE6:
	r6_119 = 0x80<32>
	branch (CONVERT(bLoc6F, byte, word32) & 0xC0<32>) != 0x80<32> l00406B64
l00406BF6:
	word32 r4_167
	r2_110 = if_nametoindex(r4_47 + 1<32>, out r4_167, out r6_119, out r8_117, out r9_118)
	branch r4_167 == 0<32> l00406B64
l00406BFE:
l00406B60:
	branch r6 != 0xA<32> l00406B6A
l00406B6A:
	word32 r3_377
	r2_110 = fn00406C24(r4 + 8<32>, fp - 0x78<32>, 4<32>, out r3_377, out r6_119, out r8_117, out r9_118, out r11_105, out r12_106)
l00406B78:
	r7_199 = 1<32>
l00406B64:
	r7_199 = 0xFFFFFFFE<32>
l00406B7A:
	r4Out = r7_199
	r6Out = r6_119
	r8Out = r8_117
	r9Out = r9_118
	r11Out = r11_105
	r12Out = r12_106
	return r2_110
__lookup_ipliteral_exit:


word32 fn00406C24(word32 r4, word32 r5, word32 r6, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_ipliteral
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r3 r6 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn00406C24_entry:
l00406C24:
l00406C24_thunk_memcpy:
	word32 r6_10
	word32 r8_12
	word32 r9_13
	word32 r11_15
	word32 r12_16
	word32 r3_21
	word32 r5_28
	word32 r7_29
	word32 r10_30
	word32 r13_31
	word32 r2_19 = memcpy(r4, r5, r6, out r3_21, out r5_28, out r6_10, out r7_29, out r8_12, out r9_13, out r10_30, out r11_15, out r12_16, out r13_31)
	r3Out = r3_21
	r6Out = r6_10
	r8Out = r8_12
	r9Out = r9_13
	r11Out = r11_15
	r12Out = r12_16
	return r2_19
fn00406C24_exit:


word32 __isspace(word32 r4, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00406F46
//      __lookup_name
// MayUse:  r4:[0..31]
// LiveOut: r4 r7
// Trashed: r25 r4 r7
// Preserved: sp
__isspace_entry:
l00406C30:
	word32 r7_4 = 1<32>
	branch r4 == 0x20<32> l00406C3E
l00406C36:
	r7_4 = CONVERT(r4 <u 0xFFFFFFF2<32>, bool, word32)
l00406C3E:
	r7Out = r7_4
	return r7_4
__isspace_exit:


word32 scopeof(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
scopeof_entry:
l00406C42:
	word32 r6_6 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r6_6 != 0xFF<32> l00406C52
l00406C52:
	branch r6_6 != 0xFE<32> l00406C68
l00406C58:
	branch (CONVERT(Mem0[r4 + 1<32>:byte], byte, word32) & 0xC0<32>) == 0x80<32> l00406CA8
l00406C64_thunk_fn00406CA8:
	fn00406CA8()
	return 2<32>
l00406C68:
	branch Mem0[r4:word32] != 0<32> l00406C90
l00406C6C:
	branch Mem0[r4 + 4<32>:word32] != 0<32> l00406C90
l00406C70:
	branch Mem0[r4 + 8<32>:word32] != 0<32> l00406C90
l00406C74:
	branch CONVERT(Mem0[r4 + 0xC<32>:byte], byte, word32) != 0<32> l00406C90
l00406C7A:
	branch CONVERT(Mem0[r4 + 0xD<32>:byte], byte, word32) != 0<32> l00406C90
l00406C80:
	branch CONVERT(Mem0[r4 + 0xE<32>:byte], byte, word32) != 0<32> l00406C90
l00406C86:
	branch CONVERT(Mem0[r4 + 0xF<32>:byte], byte, word32) == 1<32> l00406CA8
l00406C8C_thunk_fn00406CA8:
	fn00406CA8()
	return 2<32>
l00406C90:
	branch r6_6 != 0xFE<32> l00406CA8
l00406C96_thunk_fn00406CA8:
	fn00406CA8()
	return 0xE<32>
l00406C98:
	branch (CONVERT(Mem0[r4 + 1<32>:byte], byte, word32) & 0xC0<32> ^ 0xC0<32>) != 0<32> l00406CA8
l00406CA4_thunk_fn00406CA8:
	fn00406CA8()
	return 0xE<32>
l00406CA4_1:
l00406CA4_thunk_fn00406CA8:
	fn00406CA8()
	return 5<32>
l00406C4C:
	return CONVERT(Mem0[r4 + 1<32>:byte], byte, word32) & 0xF<32>
scopeof_exit:


void fn00406CA8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scopeof
//      sift
//      trinkle
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
fn00406CA8_entry:
l00406CA8:
	return
fn00406CA8_exit:


void addrcmp()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r4 r7
// Preserved: sp
addrcmp_entry:
l00406CAA:
	return
addrcmp_exit:


word32 name_from_dns(word32 r4, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
// MayUse:  r4:[0..7] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11 r12 r2 r4 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
name_from_dns_entry:
	ptr32 fp
	struct <anonymous> tLoc065C
	byte bLoc041D
l00406CB2:
	word32 r8_136
	word32 r11_123
	word32 r12_124
	word32 r2_128
	word32 r7_139
	word32 r16_103
	Mem34[&tLoc065C:byte] = SLICE(r4, byte, 0)
	branch r7 == 0xA<32> l00406D5A
l00406D5A:
	r16_103 = 0<32>
l00406CE8:
	word32 r4_61
	r2_128 = res_mkquery(0<32>, r6, 1<32>, 1<32>, fp - 0x650<32>, 0x118<32>, out r4_61, out r8_136, out r11_123, out r12_124)
	branch r4_61 == 0xFFFFFFFF<32> l00406D8C
l00406D0A:
	r16_103 = 1<32>
	branch r7 != 2<32> l00406D5C
l00406D5C:
	word32 r4_95
	r2_128 = res_mkquery(0<32>, r6, 1<32>, 0x1C<32>, r16_103 *s 0x118<32> + (fp - 0x650<32>), 0x118<32>, out r4_95, out r8_136, out r11_123, out r12_124)
	Mem104[fp + 0xFFFFEFE0<32> + (r16_103 << 2<8>) + 0x9B4<32>:byte] = SLICE(r4_95, byte, 0)
	r16_103 = r16_103 + 1<32>
	branch r4_95 != 0xFFFFFFFF<32> l00406D10
l00406D10:
	word32 r4_132
	word32 r6_134
	r2_128 = __res_msend_rc(r16_103, fp - 0x674<32>, fp - 0x664<32>, 0x200<32>, r8, r7, out r4_132, out r6_134, out r8_136, out r11_123, out r12_124)
	word32 r17_138 = 0<32>
	r7_139 = 0xFFFFFFF5<32>
	branch r4_132 < 0<32> l00406D90
l00406D2E:
	branch r17_138 != r16_103 l00406D96
l00406D96:
	r17_138 = r17_138 + 1<32>
	word32 r5_340
	r2_128 = __dns_parse(fp - 0x420<32> + (r17_138 << 9<32>), Mem187[fp - 0x664<32> + r17_138 * 4<32>:word32], &tLoc065C, r11_123, out r5_340, out r6_134, out r7_139, out r8_136, out r11_123, out r12_124)
l00406D32:
	branch r7_139 != 0<32> l00406D90
l00406D36:
	r7_139 = 0xFFFFFFFD<32>
	branch r6_134 < 4<32> l00406D90
l00406D40:
	word32 r6_174 = CONVERT(bLoc041D, byte, word32)
	branch (r6_174 & 0xF<32>) == 2<32> l00406D90
l00406D4A:
	branch (r6_174 & 0xF<32>) == 0<32> l00406D8C
l00406D8C:
	r7_139 = 0xFFFFFFFE<32>
l00406D4C:
	r7_139 = 0xFFFFFFFC<32>
	branch (r6_174 & 0xF<32> ^ 3<32>) != 0<32> l00406D58
l00406D54_1:
	r7_139 = 0<32>
l00406D58:
l00406D90:
	r4Out = r7_139
	r8Out = r8_136
	r11Out = r11_123
	r12Out = r12_124
	return r2_128
name_from_dns_exit:


word32 policyof(word32 r4, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
// MayUse:  r4:[0..31]
// LiveOut: r4 r7
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
policyof_entry:
l00406DAC:
	word32 r16_17 = 0x00412E50<p32>
	word32 r17_20 = 0<32>
l00406DBE:
	word32 r18_24 = CONVERT(Mem15[r16_17 + 0x10<32>:byte], byte, word32)
	word32 r8_80
	word32 r9_81
	word32 r7_79
	branch memcmp(r4, r16_17, r18_24, out r7_79, out r8_80, out r9_81) != 0<32> l00406DBA
l00406DCA:
	word32 r7_42 = CONVERT(Mem15[r4 + r18_24:byte], byte, word32) & CONVERT(Mem15[r16_17 + 0x11<32>:byte], byte, word32)
	branch r7_42 != CONVERT(Mem15[(r17_20 *s 0x14<32> + 0x00412E50<p32>) + r18_24:byte], byte, word32) l00406DBA
l00406DBA:
	r17_20 = r17_20 + 1<32>
	r16_17 = r16_17 + 0x14<32>
l00406DE4:
	r7Out = r7_42
	return r16_17
policyof_exit:


word32 is_valid_hostname(word32 r4, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      name_from_hosts
//      dns_parse_callback
// MayUse:  r4:[0..31]
// LiveOut: r18 r4 r5 r6 r7 r8
// Trashed: r18 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
is_valid_hostname_entry:
	word32 r18
l00406DE8:
	word32 r16_11 = r4
	word32 r7_19 = 0xFD<32>
	word32 r5_14
	word32 r6_15
	word32 r8_17
	branch strnlen(r4, 0xFF<32>, out r5_14, out r6_15, out r8_17) <=u 0xFFFFFF02<32> l00406E02
l00406E02:
	r7_19 = 0xFFFFFFFF<32>
	branch mbstowcs(0<32>, r4, 0<32>, out r5_14, out r6_15, out r8_17, out r18) != 0xFFFFFFFF<32> l00406E12
l00406E12:
	word32 r4_39 = CONVERT(SLICE(r7_19, byte, 0), byte, int32)
	branch r7_19 < 0<32> l00406E10
l00406E1C:
	r7_19 = r4_39 + 0xFFFFFFD3<32> & 0xFF<32>
	branch r7_19 <u 2<32> l00406E10
l00406E26:
	word32 r6_44
	branch isalnum(r4_39, out r6_44, out r7_19) != 0<32> l00406E10
l00406E10:
	r16_11 = r16_11 + 1<32>
l00406E2C:
	word32 r4_49 = CONVERT(CONVERT(Mem7[r16_11:byte], byte, word32) <u 1<32>, bool, word32)
	r5Out = r5_14
	r6Out = r6_44
	r7Out = r7_19
	r8Out = r8_17
	r18Out = r18
	return r4_49
l00406E0E:
l00406DFE:
	r5Out = r5_14
	r6Out = r6_15
	r7Out = r7_19
	r8Out = r8_17
	r18Out = r18
	return 0<32>
is_valid_hostname_exit:


word32 name_from_hosts(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11 r12 r2 r4 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: hi lo r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
name_from_hosts_entry:
	ptr32 fp
	struct <anonymous> tLoc06C8
	struct <anonymous> tLoc0638
	word32 r11
	word32 r12
l00406E34:
	word32 r16_201
	word32 r6_573
	word32 r7_574
	word32 r5_572
	strlen(r6, out r5_572, out r6_573, out r7_574)
	word32 r4_48
	word32 r5_575
	word32 r19_577
	word32 r9_576
	word32 r8_52
	word32 r2_45 = __fopen_rb_ca(&tLoc06C8, out r4_48, out r5_575, out r8_52, out r9_576, out r19_577)
	branch r4_48 == 0<32> l00406E7A
l00406E7A:
	word32 r4_58
	__errno_location(out r4_58)
	r16_201 = 0xFFFFFFF5<32>
	word32 r7_60 = Mem40[r4_58:word32]
	branch r7_60 >=u 0x15<32> l00406EA0
l00406E88:
	word32 r7_65 = 0xFFFFFFF5<32>
	branch (1<32> << r7_60 & 0x102004<32>) == 0<32> l00406E9E
l00406E9A_1:
	r7_65 = 0<32>
l00406E9E:
	r16_201 = r7_65
l00406E5A:
	r16_201 = 0<32>
	word32 r18_224 = 0<32>
l00406E5E:
	word32 r3_91
	word32 r4_92
	word32 r5_578
	word32 r9_579
	word32 r21_580
	r2_45 = fgets_unlocked(&tLoc0638, 0x200<32>, r4_48, out r3_91, out r4_92, out r5_578, out r8_52, out r9_579, out r11, out r12, out r21_580)
	branch r4_92 == 0<32> l00406E70
l00406E6C:
	branch r18_224 < 0x30<32> l00406EA6
l00406EA6:
	word32 r4_98 = strchr(&tLoc0638, 0x23<32>)
	branch r4_98 == 0<32> l00406EB6
l00406EB0:
	Mem105[r4_98 + 1<32>:byte] = 0<8>
	Mem106[r4_98:byte] = 0xA<8>
l00406EB6:
	word32 r4_108 = fp - 0x637<32>
l00406EC0:
	word32 r4_114
	word32 r2_121 = strstr(r4_108, r6, out r4_114)
	branch r4_114 == 0<32> l00406E5E
l00406EC8:
	word32 r7_127
	branch fn00406F46(CONVERT(Mem321[r4_114 - 1<32>:byte], byte, word32), out r7_127) == 0<32> l00406EBC
l00406ED0:
	word32 r7_581
	branch fn00406F46(CONVERT(Mem321[r4_114 + r7_127:byte], byte, word32), out r7_581) == 0<32> l00406EBC
l00406EBC:
	r4_108 = r4_114 + 1<32>
l00406EDA:
	word32 r6_136 = &tLoc0638
l00406EDC:
	word32 r4_139 = CONVERT(Mem321[r6_136:byte], byte, word32)
	word32 r17_140 = r6_136 + 1<32>
	branch r4_139 == 0<32> l00406EE8
l00406EE4:
	word32 r7_587
	branch fn00406F46(r4_139, out r7_587) == 0<32> l00406F30
l00406F30:
	r6_136 = r17_140
l00406EE8:
	Mem147[r6_136:byte] = 0<8>
	word32 r11_585
	word32 r12_586
	word32 r6_582
	word32 r8_583
	word32 r9_584
	word32 r4_195
	__lookup_ipliteral(r2_121, r3_91, r18_224 *s 0x1C<32> + r4, &tLoc0638, r7, r12, out r4_195, out r6_582, out r8_583, out r9_584, out r11_585, out r12_586)
	branch r4_195 == 0<32> l00406E5E
l00406EFC:
	branch r4_195 != 1<32> l00406F40
l00406F40:
	r16_201 = 0xFFFFFFFE<32>
l00406F00:
l00406F02:
	word32 r21_206
	word32 r4_205 = CONVERT(Mem147[r17_140:byte], byte, word32)
	branch r4_205 == 0<32> l00406F3C
l00406F3C:
	r21_206 = r17_140
l00406F06:
	word32 r7_588
	branch fn00406F46(r4_205, out r7_588) != 0<32> l00406F34
l00406F34:
	r17_140 = r17_140 + 1<32>
l00406F0A:
	r21_206 = r17_140
l00406F0C:
	word32 r4_214 = CONVERT(Mem147[r21_206:byte], byte, word32)
	branch r4_214 == 0<32> l00406F16
l00406F12:
	word32 r7_593
	branch fn00406F46(r4_214, out r7_593) == 0<32> l00406F38
l00406F38:
	r21_206 = r21_206 + 1<32>
l00406F16:
	Mem220[r21_206:byte] = 0<8>
	word32 r7_591
	word32 r8_592
	word32 r6_590
	word32 r5_589
	branch is_valid_hostname(r17_140, out r5_589, out r6_590, out r7_591, out r8_592, out r18_224) == 0<32> l00406E5E
l00406F22:
	word32 r10_600
	word32 r9_599
	word32 r3_594
	word32 r5_595
	word32 r7_597
	word32 r8_598
	word32 r6_596
	word32 r11_601
	word32 r12_602
	word32 r13_603
	memcpy(r5, r17_140, r21_206 - r17_140 + 1<32>, out r3_594, out r5_595, out r6_596, out r7_597, out r8_598, out r9_599, out r10_600, out r11_601, out r12_602, out r13_603)
l00406E70:
	branch r18_224 == 0<32> l00406E74
l00406E70_1:
	r16_201 = r18_224
l00406E74:
	__fclose_ca(r4_48)
l00406EA0:
	r4Out = r16_201
	r8Out = r8_52
	r11Out = r11
	r12Out = r12
	return r2_45
name_from_hosts_exit:


word32 fn00406F46(word32 r4, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      name_from_hosts
// MayUse:  r4:[0..31]
// LiveOut: r4 r7
// Trashed: r25 r4 r7
// Preserved: sp
fn00406F46_entry:
l00406F46:
l00406F46_thunk___isspace:
	word32 r7_7
	word32 r4_6 = __isspace(r4, out r7_7)
	r7Out = r7_7
	return r4_6
fn00406F46_exit:


word32 fn00406F48(word32 r4, word32 r5, word32 r6, word32 r8, word32 r11, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __dns_parse
// MayUse:  r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r11 r12 r18 r2 r4 r5 r6 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r18 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00406F48_entry:
l00406F48:
l00406F48_thunk_dns_parse_callback:
	word32 r11_11
	word32 r12_12
	word32 r4_18
	word32 r5_19
	word32 r7_20
	word32 r8_21
	word32 r18_23
	word32 r6_24
	word32 r2_15 = dns_parse_callback(r4, r5, r6, r5, r8, r11, out r4_18, out r5_19, out r6_24, out r7_20, out r8_21, out r11_11, out r12_12, out r18_23)
	r4Out = r4_18
	r5Out = r5_19
	r6Out = r6_24
	r7Out = r7_20
	r8Out = r8_21
	r11Out = r11_11
	r12Out = r12_12
	r18Out = r18_23
	return r2_15
fn00406F48_exit:


word32 dns_parse_callback(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r11, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00406F48
// MayUse:  r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11 r12 r18 r2 r4 r5 r6 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r18 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
dns_parse_callback_entry:
	ptr32 fp
	word32 r12
	word32 r18
	word32 r2
l00406F4A:
	word32 r4_148
	word32 r5_149 = r6
	branch r5 == 5<32> l00406FAA
l00406FAA:
	r7 = fp - 272<i32>
	r5_149 = r8 + 0x200<32>
	word32 r4_27
	r2 = dn_expand(r8, r8 + 0x200<32>, r6, fp - 272<i32>, 0x100<32>, out r4_27, out r8, out r11, out r12)
	branch r4_27 <= 0<32> l00406F84
l00406FBC:
	branch is_valid_hostname(fp - 272<i32>, out r5_149, out r6, out r7, out r8, out r18) == 0<32> l00406F84
l00406FC4:
	r5_149 = strcpy(Mem7[r4 + 4<32>:word32], fp - 272<i32>, out r6, out r7, out r8)
l00406F56:
	word32 r4_59
	branch r5 == 0x1C<32> l00406F8A
l00406F8A:
	r4_148 = 0xFFFFFFFF<32>
	branch r7 != 0x10<32> l00406F86
l00406F90:
	word32 r9_56 = r5 *s Mem7[r4 + 8<32>:word32] + Mem7[r4:word32]
	Mem58[r9_56:word32] = 0xA<32>
	Mem61[r9_56 + 1<32>:word32] = r11
	r4_59 = r9_56 + 8<32>
l00406F5A:
	branch r5 != 1<32> l00406F84
l00406F5E:
	r4_148 = 0xFFFFFFFF<32>
	branch r7 != 4<32> l00406F86
l00406F64:
	word32 r4_70 = Mem7[r4:word32] + Mem7[r4 + 8<32>:word32] *s 0x1C<32>
	Mem72[r4_70:word32] = 2<32>
	r4_59 = r4_70 + 8<32>
l00406F80:
	word32 r3_167
	word32 r9_168
	word32 r10_169
	word32 r13_170
	r2 = memcpy(r4_59, r6, r7, out r3_167, out r5_149, out r6, out r7, out r8, out r9_168, out r10_169, out r11, out r12, out r13_170)
l00406F84:
	r4_148 = 0<32>
l00406F86:
	r4Out = r4_148
	r5Out = r5_149
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	r18Out = r18
	return r2
dns_parse_callback_exit:


word32 __lookup_name(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r12, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getaddrinfo
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11 r12 r2 r4 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__lookup_name_entry:
	ptr32 fp
	struct <anonymous> tLoc0194
	struct <anonymous> tLoc0130
	struct <anonymous> tLoc0128
	word32 dwLoc019C
	word32 r11
l00406FCE:
	word32 r17_104
	word32 r8_102
	Mem35[r5:byte] = 0<8>
	word32 r19_32 = r7
	word32 r18_105 = r8
	r8_102 = r8
	branch r6 == 0<32> l00407006
l00406FE0:
	word32 r5_1650
	word32 r6_1651
	word32 r4_39 = strnlen(r6, 0xFF<32>, out r5_1650, out r6_1651, out r8_102)
	branch r4_39 <=u 0xFFFFFF02<32> l00406FFE
l00406FFE:
	word32 r7_1652
	r2 = fn0040738E(r5, r6, r4_39 + 1<32>, out r3, out r7_1652, out r8_102, out r11, out r12)
l00407006:
	branch __bit(r8, 3<32>) l00407010
l0040700A:
	branch r7 == 0xA<32> l00407034
l00407034:
	r19_32 = 0<32>
l0040700E:
	r18_105 = r8 + 0xFFFFFFF8<32>
l00407010:
	word32 r20_282
	branch r6 != 0<32> l004070D2
l004070D2:
	word32 r4_98
	word32 r6_1653
	word32 r9_1654
	r2 = __lookup_ipliteral(r2, r3, r4, r6, r19_32, r12, out r4_98, out r6_1653, out r8_102, out r9_1654, out r11, out r12)
	r17_104 = r4_98
	branch r4_98 != 0<32> l004071AC
l004070DE:
	branch !__bit(r18_105, 2<32>) l00406FF4
l004070E2:
	word32 r4_116
	r2 = name_from_hosts(r4, r5, r6, r19_32, out r4_116, out r8_102, out r11, out r12)
	r17_104 = r4_116
	branch r4_116 != 0<32> l004071AC
l004070F0:
	r17_104 = 0xFFFFFFFF<32>
	word32 r4_147
	word32 r9_1695
	r2 = __get_resolv_conf(&tLoc0194, &tLoc0130, r12, out r4_147, out r8_102, out r9_1695, out r11, out r12)
	branch r4_147 < 0<32> l00406FF8
l00407102:
	word32 r7_153 = 0<32>
	word32 r23_154 = 0<32>
l00407106:
	word32 r6_158 = CONVERT(Mem35[r6 + r23_154:byte], byte, word32)
	branch r6_158 != 0<32> l0040714C
l0040714C:
	branch r6_158 != 0x2E<32> l00407152
l00407150:
	r7_153 = r7_153 + 1<32>
l00407152:
	r23_154 = r23_154 + 1<32>
l0040710C:
	branch r7_153 >=u r6_158 l0040711E
l00407112:
	branch CONVERT(Mem35[r6 + r23_154 - 1<32>:byte], byte, word32) != 0x2E<32> l00407122
l0040711E:
	Mem169[&tLoc0130:byte] = 0<8>
l00407122:
	r17_104 = 0xFFFFFFFE<32>
	branch r23_154 >u 0xFF<32> l00406FF8
l0040712E:
	word32 r12_1704
	word32 r13_1705
	word32 r7_1699
	word32 r10_1702
	word32 r8_1700
	word32 r11_1703
	word32 r9_1701
	word32 r6_1698
	word32 r3_1696
	word32 r5_1697
	memcpy(r5, r6, r23_154, out r3_1696, out r5_1697, out r6_1698, out r7_1699, out r8_1700, out r9_1701, out r10_1702, out r11_1703, out r12_1704, out r13_1705)
	word32 r30_182 = r5 + r23_154
	Mem200[r30_182:byte] = 0x2E<8>
	word32 r20_203 = &tLoc0130
l00407142:
	branch CONVERT(Mem205[r20_203:byte], byte, word32) == 0<32> l004071B4
l00407148:
	word32 r5_207 = r20_203
l00407158:
	word32 r7_1706
	branch __isspace(CONVERT(Mem205[r5_207:byte], byte, word32), out r7_1706) != 0<32> l00407156
l00407156:
	r5_207 = r5_207 + 1<32>
l00407160:
	r20_203 = r5_207
l00407166:
	word32 r4_218 = CONVERT(Mem205[r20_203:byte], byte, word32)
	branch r4_218 == 0<32> l00407172
l0040716C:
	word32 r7_1707
	branch __isspace(r4_218, out r7_1707) == 0<32> l00407164
l00407164:
	r20_203 = r20_203 + 1<32>
l00407172:
	branch r5_207 == r20_203 l004071B4
l004071B4:
	Mem237[r30_182:byte] = 0<8>
	word32 r4_275
	r2 = name_from_dns(r4, r6, r19_32, &tLoc0194, out r4_275, out r8_102, out r11, out r12)
	r17_104 = r4_275
	r20_282 = r4_275
	branch r4_275 > 0<32> l00407054
l004071CC:
	branch r4_275 != 0<32> l00406FF8
l004071D0:
l00407176:
	word32 r17_284 = r20_203 - r5_207
	branch r17_284 >=u 0xFF<32> - r23_154 l00407142
l00407186:
	word32 r7_290 = r23_154 + 1<32>
	word32 r8_1709
	word32 r12_1711
	word32 r11_1710
	word32 r3_1708
	word32 r7_306
	fn0040738E(r5 + r7_290, r5_207, r17_284, out r3_1708, out r7_306, out r8_1709, out r11_1710, out r12_1711)
	Mem313[r7_290 + r5 + r7_306:byte] = 0<8>
	word32 r4_330
	r2 = name_from_dns(r4, r5, r19_32, &tLoc0194, out r4_330, out r8_102, out r11, out r12)
	r17_104 = r4_330
	branch r4_330 == 0<32> l00407142
l004071AC:
	r20_282 = r17_104
	branch r17_104 > 0<32> l00407054
l004071B2:
l00407014:
	word32 r7_339 = r18_105 & 1<32>
	branch r7_339 == 0<32> l00407088
l00407088:
	branch r19_32 == 0xA<32> l004070B0
l0040708C:
	Mem344[r4 + 8<32>:byte] = 0x7F<8>
	Mem351[r4 + 0xB<32>:byte] = 1<8>
	dwLoc019C = 0<32>
	branch r19_32 == 2<32> l0040702E
l004070AE:
	r7_339 = 1<32>
l004070B0:
	Mem361[&tLoc0194 + 36<i32>:word32] = 0xA<32>
	Mem363[&tLoc0194 + 56<i32>:word32] = 0<32>
	Mem364[&tLoc0194 + 40<i32>:word32] = 0<32>
	Mem365[&tLoc0194 + 44<i32>:word32] = 0<32>
	Mem366[&tLoc0194 + 48<i32>:word32] = 0<32>
	Mem367[&tLoc0194 + 52<i32>:word32] = 0<32>
	Mem368[&tLoc0194 + 60<i32>:word32] = 0<32>
	Mem369[r4 + r7_339 *s 0x1C<32> + 0x17<32>:byte] = 1<8>
	r20_282 = r7_339 + 1<32>
l00407018:
	branch r19_32 == 0xA<32> l00407038
l00407038:
	r7_339 = 0<32>
l0040701C:
	dwLoc019C = 0<32>
	branch r19_32 != 2<32> l0040703A
l0040703A:
	Mem387[&tLoc0194 + 36<i32>:word32] = 0xA<32>
	Mem388[&tLoc0194 + 40<i32>:word32] = 0<32>
	Mem389[&tLoc0194 + 44<i32>:word32] = 0<32>
	Mem390[&tLoc0194 + 48<i32>:word32] = 0<32>
	Mem391[&tLoc0194 + 52<i32>:word32] = 0<32>
	Mem392[&tLoc0194 + 56<i32>:word32] = 0<32>
	Mem393[&tLoc0194 + 60<i32>:word32] = 0<32>
	r20_282 = r7_339 + 1<32>
l0040702E:
	dwLoc019C = 0<32>
	r20_282 = 1<32>
l00407054:
	r17_104 = r20_282
	branch __bit(r18_105, 3<32>) l0040706A
l0040705A:
	word32 r18_411 = r18_105 & 0x10<32>
	branch r18_411 == 0<32> l0040720C
l0040720C:
	word32 r21_412 = 0<32>
l004071D8:
	word32 r17_415 = r21_412 *s 0x1C<32>
	branch Mem841[r4 + r21_412 *s 0x1C<32>:word32] != 0xA<32> l004071D2
l004071D2:
	r21_412 = r21_412 + 1<32>
	branch r21_412 >= r20_282 l00407062
l004071E4:
	branch r21_412 >= r20_282 l00407062
l004071E8:
	word32 r17_421 = r4 + r17_415
l004071EA:
	branch Mem841[r17_421:word32] != 0xA<32> l00407200
l004071F0:
	r18_411 = r18_411 + 1<32>
	word32 r13_1694
	word32 r3_1688
	word32 r6_1690
	word32 r9_1692
	word32 r7_1691
	word32 r5_1689
	word32 r10_1693
	r2 = memcpy(r4 + r18_411 *s 0x1C<32>, r17_421, 0x1C<32>, out r3_1688, out r5_1689, out r6_1690, out r7_1691, out r8_102, out r9_1692, out r10_1693, out r11, out r12, out r13_1694)
l00407200:
	r21_412 = r21_412 + 1<32>
	r17_421 = r17_421 + 0x1C<32>
	branch r21_412 != r20_282 l004071EA
l00407208:
	r20_282 = r18_411
l00407062:
	word32 r18_462 = r4 + 0x14<32>
	r17_104 = 0<32>
l00407066:
	branch r20_282 != r17_104 l00407210
l00407210:
	branch Mem467[r18_462 - 0x14<32>:word32] != 2<32> l00407232
l00407218:
	word32 r21_469 = r18_462 + 0xFFFFFFF4<32>
	word32 r12_1669
	word32 r11_1668
	word32 r7_1666
	word32 r8_1667
	word32 r3_1665
	fn0040738E(r18_462, r21_469, 4<32>, out r3_1665, out r7_1666, out r8_1667, out r11_1668, out r12_1669)
	word32 r13_1676
	word32 r10_1675
	word32 r3_1670
	word32 r7_1673
	word32 r9_1674
	word32 r6_1672
	word32 r5_1671
	r2 = memcpy(r21_469, 0x00412E40<p32>, 0xC<32>, out r3_1670, out r5_1671, out r6_1672, out r7_1673, out r8_102, out r9_1674, out r10_1675, out r11, out r12, out r13_1676)
	Mem507[r18_462 - 0x14<32>:word32] = 0xA<32>
l00407232:
	r17_104 = r17_104 + 1<32>
	r18_462 = r18_462 + 0x1C<32>
l0040706A:
	branch r17_104 < 2<32> l00406FF8
l0040706E:
	branch r19_32 == 2<32> l00406FF8
l00407072:
	word32 r7_525 = 0<32>
l00407074:
	branch Mem840[r4 + r7_525 *s 0x1C<32>:word32] != 2<32> l00407238
l00407238:
	branch r17_104 == r7_525 l00406FF8
l0040723C:
	word32 r7_1655
	__pthread_setcancelstate(1<32>, fp - 0x19C<32>, out r7_1655)
	word32 r19_540 = r4 + 8<32>
	word32 r20_541 = 0<32>
l00407248:
	word32 r6_574
	word32 r4_576
	Mem545[&tLoc0130:byte] = 0xA<8>
	Mem550[&tLoc0128:byte] = 0<8>
	word32 r7_552 = Mem551[r19_540 - 8<32>:word32]
	Mem553[&tLoc0128 + 4<i32>:byte] = 0<8>
	Mem554[&tLoc0128 + 8<i32>:byte] = 0<8>
	Mem555[&tLoc0128 + 12<i32>:byte] = 0<8>
	branch r7_552 != 0xA<32> l00407370
l00407370:
	word32 r12_1660
	word32 r8_1658
	word32 r3_1656
	word32 r7_1657
	word32 r11_1659
	fn0040738E(&tLoc0128, 0x00412E40<p32>, 0xC<32>, out r3_1656, out r7_1657, out r8_1658, out r11_1659, out r12_1660)
	r6_574 = 4<32>
	r4_576 = &tLoc0128 + 12<i32>
l00407278:
	r6_574 = 0x10<32>
	r4_576 = &tLoc0128
l0040727E:
	word32 r18_634
	word32 r12_1682
	word32 r8_1680
	word32 r3_1678
	word32 r11_1681
	word32 r7_1679
	fn0040738E(r4_576, r19_540, r6_574, out r3_1678, out r7_1679, out r8_1680, out r11_1681, out r12_1682)
	word32 r7_1683
	word32 r4_601 = policyof(&tLoc0128, out r7_1683)
	word32 r4_610 = scopeof(&tLoc0128)
	word32 r7_617 = CONVERT(Mem555[r4_601 + 0x13<32>:byte], byte, word32)
	word32 r21_621 = CONVERT(Mem555[r4_601 + 0x12<32>:byte], byte, word32)
	word32 r9_1687
	word32 r6_1685
	word32 r3_1684
	word32 r4_632
	word32 r8_1686
	socket(0x80001<32>, out r3_1684, out r4_632, out r6_1685, out r8_1686, out r9_1687)
	branch r4_632 < 0<32> l00407388
l00407388:
	r18_634 = 0<32>
l004072AE:
	word32 r5_1661
	word32 r4_642 = connect(out r5_1661)
	r18_634 = r4_642
	branch r4_642 != 0<32> l00407382
l00407382:
	r18_634 = 0<32>
l004072BC:
	branch getsockname() != 0<32> l0040732A
l004072D0:
	branch (r4_610 ^ scopeof(&tLoc0194 + 8<i32>)) != 0<32> l004072E2
l004072DE_1:
l004072E2:
	r17_104 = r7_617
	word32 r7_683
	branch CONVERT(Mem655[policyof(&tLoc0194 + 8<i32>, out r7_683) + 0x13<32>:byte], byte, word32) != r7_683 l004072F8
l004072F0:
l004072F8:
	word32 r4_692 = 0<32>
l004072FA:
	word32 r6_694 = r4_692 >>u 3<32>
	branch ((CONVERT(Mem655[fp + 0xFFFFEFD0<32> + r6_694 + 0xEA4<32>:byte], byte, word32) ^ CONVERT(Mem655[((fp - 0x30<32>) + r6_694) - 0xF8<32>:byte], byte, word32)) & 0xFF<32> & 0x80<32> >> (r4_692 & 7<32>)) != 0<32> l00407328
l00407322:
	r4_692 = r4_692 + 1<32>
	branch r4_692 != 0x80<32> l004072FA
l00407328:
	r18_634 = r4_692
l0040732A:
	word32 r8_1664
	word32 r6_1663
	word32 r4_1662
	close(out r4_1662, out r6_1663, out r8_1664)
l0040732E:
	Mem770[&tLoc0194 + 52<i32>:word32] = r18_634 << 8<32> | ((0xF<32> - r4_610 << 0x10<32> | 0x30<32> - r20_541) | r21_621 << 0x14<32>)
	r20_541 = r20_541 + 1<32>
	r19_540 = r19_540 + 0x1C<32>
	branch r17_104 != r20_541 l00407248
l0040735A:
	word32 r4_810
	r2 = qsort(r4, r17_104, 0x1C<32>, out r4_810, out r8_102, out r11, out r12)
	word32 r7_1677
	__pthread_setcancelstate(r4_810, 0<32>, out r7_1677)
	r17_104 = dwLoc019C
l00407080:
	r7_525 = r7_525 + 1<32>
	branch r7_525 != r17_104 l00407074
l00407086:
l00406FF4:
	r17_104 = 0xFFFFFFFE<32>
l00406FF8:
	r4Out = r17_104
	r8Out = r8_102
	r11Out = r11
	r12Out = r12
	return r2
__lookup_name_exit:


word32 fn0040738E(word32 r4, word32 r5, word32 r6, ptr32 & r3Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r3 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
fn0040738E_entry:
l0040738E:
l0040738E_thunk_memcpy:
	word32 r7_11
	word32 r8_12
	word32 r11_15
	word32 r12_16
	word32 r3_21
	word32 r5_27
	word32 r6_28
	word32 r9_29
	word32 r10_30
	word32 r13_31
	word32 r2_19 = memcpy(r4, r5, r6, out r3_21, out r5_27, out r6_28, out r7_11, out r8_12, out r9_29, out r10_30, out r11_15, out r12_16, out r13_31)
	r3Out = r3_21
	r7Out = r7_11
	r8Out = r8_12
	r11Out = r11_15
	r12Out = r12_16
	return r2_19
fn0040738E_exit:


word32 __lookup_serv(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getaddrinfo
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11 r12 r2 r3 r4 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 ra sp
__lookup_serv_entry:
	ptr32 fp
	struct <anonymous> tLoc0548
	struct <anonymous> tLoc04C8
	word32 r11
l004073A0:
	word32 r16_141
	word32 r19_24 = r6
	branch r7 == 1<32> l0040740E
l0040740E:
	branch r6 == 0<32> l00407414
l00407410:
	branch r6 != 0x11<32> l00407408
l00407414:
	r19_24 = 0x11<32>
l004073B4:
	branch r7 == 2<32> l00407402
l00407402:
	branch r6 == 0<32> l0040742A
l00407404:
	branch r6 == 6<32> l0040742A
l0040742A:
	r19_24 = 6<32>
l004073B8:
	branch r7 != 0<32> l00407418
l00407418:
	branch r5 != 0<32> l00407408
l0040741C:
	Mem37[r4:word16] = 0<16>
	Mem38[r4 + 2<32>:byte] = SLICE(r6, byte, 0)
	Mem39[r4 + 3<32>:byte] = SLICE(r7, byte, 0)
	r16_141 = 1<32>
l004073BA:
	word32 r4_297
	branch r5 == 0<32> l0040742E
l0040742E:
	r4_297 = 0<32>
l004073BE:
	branch CONVERT(Mem32[r5:byte], byte, word32) == 0<32> l00407408
l004073C4:
	word32 r9_696
	word32 r6_695
	r2 = __strtoul_internal(r2, r3, r5, fp - 0x54C<32>, 0xA<32>, r12, out r3, out r4_297, out r6_695, out r7, out r8, out r9_696, out r11, out r12)
l004073CC:
	branch CONVERT(Mem32[r7:byte], byte, word32) != 0<32> l00407436
l00407436:
	r16_141 = r8 & 0x400<32>
	branch (r8 & 0x400<32>) != 0<32> l00407408
l0040743C:
	word32 r5_697
	word32 r7_699
	word32 r6_698
	word32 r4_97 = strlen(r5, out r5_697, out r6_698, out r7_699)
	word32 r4_110
	word32 r19_116
	word32 r5_700
	word32 r9_701
	r2 = __fopen_rb_ca(&tLoc04C8, out r4_110, out r5_700, out r8, out r9_701, out r19_116)
	word32 r21_117 = r4_110
	branch r4_110 != 0<32> l0040748E
l0040748E:
	word32 r17_119 = &tLoc0548
	word32 r4_140
	word32 r9_703
	word32 r5_702
	r2 = fgets_unlocked(&tLoc0548, 0x80<32>, r21_117, out r3, out r4_140, out r5_702, out r8, out r9_703, out r11, out r12, out r21_117)
	branch r4_140 == 0<32> l004074A0
l0040749C:
	branch r16_141 < 2<32> l00407478
l00407478:
	word32 r4_146 = strchr(&tLoc0548, 0x23<32>)
	branch r4_146 == 0<32> l00407486
l00407480:
	Mem153[r4_146 + 1<32>:byte] = 0<8>
	Mem154[r4_146:byte] = 0xA<8>
l00407486:
	word32 r4_156 = &tLoc0548
l00407488:
	word32 r4_162
	word32 r2_169 = strstr(r4_156, r5, out r4_162)
	branch r4_162 != 0<32> l004074AA
l004074AA:
	branch &tLoc0548 >=u r4_162 l004074BE
l004074AE:
	word32 r7_172 = CONVERT(Mem359[r4_162 - 1<32>:byte], byte, word32)
	branch r7_172 == 0x20<32> l004074BE
l004074B6:
	branch r7_172 >=u 0xFFFFFFF2<32> l004074D0
l004074BE:
	word32 r7_178 = CONVERT(Mem359[r4_162 + r4_97:byte], byte, word32)
	branch (r7_178 & 0xDF<32>) == 0<32> l004074D6
l004074C8:
	branch r7_178 <u 0xFFFFFFF2<32> l004074D6
l004074D6:
	word32 r7_183 = CONVERT(Mem359[r17_119:byte], byte, word32)
	branch (r7_183 & 0xDF<32>) == 0<32> l004074E6
l004074DE:
	branch r7_183 >=u 0xFFFFFFF2<32> l004074D4
l004074D4:
	r17_119 = r17_119 + 1<32>
l004074E6:
	word32 r4_215
	word32 r12_710
	word32 r11_709
	word32 r8_707
	word32 r9_708
	word32 r7_706
	word32 r6_705
	word32 r3_704
	__strtoul_internal(r2_169, r3, r17_119, fp - 0x54C<32>, 0xA<32>, r12, out r3_704, out r4_215, out r6_705, out r7_706, out r8_707, out r9_708, out r11_709, out r12_710)
	branch r4_215 >u 0xFFFF<32> l0040748E
l004074F8:
	branch 0x00410478<p32> == r4_215 l0040748E
l004074FE:
	word32 r6_711
	word32 r4_228 = strncmp(r4_215, 0x00411F38<p32>, 4<32>, out r6_711)
	branch r4_228 != 0<32> l00407520
l0040750A:
	branch r19_116 == 6<32> l0040748E
l0040750E:
	word32 r7_247 = r4 + (r16_141 << 2<8>)
	Mem250[r7_247 + 3<32>:byte] = 1<8>
	Mem252[r7_247:byte] = SLICE(r4_215, byte, 0)
	Mem253[r7_247 + 2<32>:byte] = 0x11<8>
	r16_141 = r16_141 + 1<32>
l00407520:
	word32 r6_712
	branch strncmp(r4_228, 0x00411F40<p32>, 4<32>, out r6_712) != 0<32> l0040748E
l00407530:
	branch r19_116 == 0x11<32> l0040748E
l00407534:
	word32 r7_271 = r4 + (r16_141 << 2<8>)
	Mem274[r7_271 + 3<32>:byte] = 2<8>
	Mem277[r7_271:byte] = SLICE(r4_215, byte, 0)
	Mem278[r7_271 + 2<32>:byte] = 6<8>
	r16_141 = r16_141 + 1<32>
l004074D0:
	r4_156 = r4_162 + 1<32>
l004074A0:
	__fclose_ca(r21_117)
	branch r16_141 != 0<32> l00407424
l004074A8:
l00407458:
	word32 r4_289
	r3 = __errno_location(out r4_289)
	r16_141 = 0xFFFFFFF5<32>
	word32 r6_291 = Mem32[r4_289:word32]
	branch r6_291 >=u 0x15<32> l00407424
l00407466:
	branch (1<32> << r6_291 & 0x102004<32>) != 0<32> l00407408
l00407476:
l004073D2:
	branch r4_297 >u 0xFFFF<32> l00407408
l00407408:
	r16_141 = 0xFFFFFFF8<32>
l004073DA:
	word32 r4_299 = r4_297 & 0xFFFF<32>
	branch r19_24 == 0x11<32> l00407432
l00407432:
	r16_141 = 0<32>
l004073E0:
	Mem309[r4 + 3<32>:byte] = 2<8>
	Mem311[r4:word16] = SLICE(r4_299, word16, 0)
	Mem312[r4 + 2<32>:byte] = 6<8>
	r16_141 = 1<32>
	branch r19_24 == 6<32> l00407424
l004073F0:
	word32 r18_315 = r4 + (r16_141 << 2<8>)
	Mem318[r18_315 + 3<32>:byte] = 1<8>
	Mem321[r18_315:word16] = SLICE(r4_299, word16, 0)
	Mem322[r18_315 + 2<32>:byte] = 0x11<8>
	r16_141 = r16_141 + 1<32>
l00407424:
	r3Out = r3
	r4Out = r16_141
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
__lookup_serv_exit:


word32 __netlink_enumerate(word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __rtnetlink_enumerate
// MayUse:  r9:[0..31]
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
__netlink_enumerate_entry:
	struct <anonymous> tLoc2020
l00407550:
	word32 r6_184
	word32 r7_185
	word32 r8_186
	word32 r9_187
	word32 r10_188
	memset(&tLoc2020, 0<32>, 0x14<32>, out r6_184, out r7_185, out r8_186, out r9_187, out r10_188)
	Mem47[&tLoc2020:word32] = 0x14<32>
	word32 r4_169 = send()
	branch r4_169 < 0<32> l004075C8
l0040758C:
	word32 r4_72 = recv()
	branch r4_72 <= 0<32> l004075C6
l0040759E:
	word32 r16_114 = &tLoc2020
l004075A0:
	branch &tLoc2020 + r4_72 - r16_114 <u 0x10<32> l0040758C
l004075AA:
	word32 r7_86 = CONVERT(Mem50[r16_114 + 4<32>:uint16], uint16, word32)
	branch r7_86 == 3<32> l004075CE
l004075CE:
	r4_169 = 0<32>
l004075B0:
	branch r7_86 == 2<32> l004075C6
l004075C6:
	r4_169 = 0xFFFFFFFF<32>
l004075B4:
	fn0040601C()
	r4_169 = r9
	branch r9 != 0<32> l004075C8
l004075C8:
	return r4_169
__netlink_enumerate_exit:
l004075BA:
	r16_114 = r16_114 + __ins(Mem50[r16_114:word32] + 3<32>, 0<32>, 0<32>, 1<32>)


word32 __rtnetlink_enumerate(word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getifaddrs
// MayUse:  r7:[0..31]
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
__rtnetlink_enumerate_entry:
l004075D2:
	word32 r4_40
	word32 r6_134
	word32 r8_135
	word32 r3_133
	word32 r9_136
	socket(0x80003<32>, out r3_133, out r4_40, out r6_134, out r8_135, out r9_136)
	word32 r16_30 = 0xFFFFFFFF<32>
	branch r4_40 < 0<32> l00407612
l004075EE:
	word32 r4_51 = __netlink_enumerate(r7)
	r16_30 = r4_51
	branch r4_51 != 0<32> l0040760C
l004075FE:
	r16_30 = __netlink_enumerate(r7)
l0040760C:
	word32 r4_137
	word32 r5_138
	word32 r6_139
	word32 r7_140
	word32 r8_141
	word32 r9_142
	__syscall(out r4_137, out r5_138, out r6_139, out r7_140, out r8_141, out r9_142)
l00407612:
	return r16_30
__rtnetlink_enumerate_exit:


word32 ntohl(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      fn0040193C
//      ping6_parse_reply
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
ntohl_entry:
l00407620:
	return __rotx(r4, 8<32>, 0x18<32>, 0<32>)
ntohl_exit:


word32 ntohs(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_echo_reply
//      fn00401B9C
//      fn004030A4
//      getnameinfo
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
ntohs_entry:
l00407630:
	return __rotx(r4, 0x18<32>, 8<32>, 0<32>) & 0xFFFF<32>
ntohs_exit:


word32 recv()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __netlink_enumerate
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
recv_entry:
l00407640:
l00407644_thunk_recvfrom:
	word32 r4_10
	word32 r7_16
	word32 r10_17
	recvfrom(out r4_10, out r7_16, out r10_17)
	return r4_10
recv_exit:


word32 recvfrom(ptr32 & r4Out, ptr32 & r7Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      recv
//      __res_msend_rc
// MayUse: 
// LiveOut: r10 r2 r4 r7
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
recvfrom_entry:
	word32 r9
l00407650:
	word32 r4_22
	word32 r5_38
	word32 r6_39
	word32 r8_40
	word32 r2_20 = __syscall_cp(out r4_22, out r5_38, out r6_39, out r8_40)
l0040766A_thunk___syscall_ret:
	word32 r4_32
	word32 r7_33
	__syscall_ret(r4_22, out r4_32, out r7_33)
	r4Out = r4_32
	r7Out = r7_33
	r10Out = r9
	return r2_20
recvfrom_exit:


word32 recvmsg(ptr32 & r5Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_receive_error_msg
//      main_loop
//      ping6_receive_error_msg
// MayUse: 
// LiveOut: r4 r5 r6
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
recvmsg_entry:
l00407670:
	word32 r4_19
	word32 r5_20
	word32 r6_21
	word32 r8_34
	__syscall_cp(out r4_19, out r5_20, out r6_21, out r8_34)
l00407688_thunk___syscall_ret:
	word32 r4_29
	word32 r7_35
	__syscall_ret(r4_19, out r4_29, out r7_35)
	r5Out = r5_20
	r6Out = r6_21
	return r4_29
recvmsg_exit:


word32 res_mkquery(word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 dwArg00, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      name_from_dns
// MayUse:  r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] Stack +0000:[0..31]
// LiveOut: r11 r12 r2 r4 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
res_mkquery_entry:
	ptr32 fp
	struct <anonymous> tLoc0150
	struct <anonymous> tLoc0148
	word32 r12
	word32 r2
l00407690:
	word32 r5_364
	word32 r6_365
	word32 r8_138
	word32 r4_39 = strnlen(r5, 0xFF<32>, out r5_364, out r6_365, out r8_138)
	word32 r17_45 = r4_39
	branch r4_39 == 0<32> l004076BE
l004076AE:
	branch (CONVERT(Mem23[r5 + (r4_39 + 0xFFFFFFFF<32>):byte], byte, word32) ^ 0x2E<32>) != 0<32> l004076BE
l004076BA_1:
	r17_45 = r4_39 + 0xFFFFFFFF<32>
l004076BE:
	word32 r16_53 = r17_45 + 0x11<32> + CONVERT(r17_45 >u 0<32>, bool, word32)
	word32 r19_165 = r16_53
	branch r17_45 <=u 0xFD<32> l004076DA
l004076DA:
	branch dwArg00 < r16_53 l004076D2
l004076DE:
	branch r4 >=u 0x10<32> l004076D2
l004076E2:
	branch r6 >u 0xFF<32> l004076D2
l004076EA:
	branch r7 >u 0xFF<32> l004076D2
l004076EE:
	word32 r9_369
	word32 r10_370
	word32 r8_368
	word32 r7_367
	word32 r6_366
	memset(&tLoc0148, 0<32>, r16_53, out r6_366, out r7_367, out r8_368, out r9_369, out r10_370)
	Mem81[&tLoc0148 + 2<i32>:byte] = (SLICE(r4, byte, 0) << 3<8>) + 1<8>
	word32 r13_377
	word32 r10_376
	word32 r6_373
	word32 r9_375
	word32 r7_374
	word32 r5_372
	word32 r3_371
	r2 = memcpy(fp - 0x13B<32>, r5, r17_45, out r3_371, out r5_372, out r6_373, out r7_374, out r8_138, out r9_375, out r10_376, out r11, out r12, out r13_377)
	word32 r6_100 = 0xD<32>
l00407714:
	word32 r7_101 = fp + 0xFFFFEFD0<32> + r6_100
	branch CONVERT(Mem102[r7_101 + 0xEE8<32>:byte], byte, word32) == 0<32> l0040774A
l0040774A:
	Mem107[r7_101 + 0xEE9<32>:byte] = SLICE(r7, byte, 0)
	Mem109[r7_101 + 0xEEB<32>:byte] = SLICE(r6, byte, 0)
	word32 r7_381
	word32 r3_378
	word32 r6_115
	word32 r8_382
	word32 r4_379
	word32 r5_380
	__clock_gettime(0<32>, &tLoc0150, out r3_378, out r4_379, out r5_380, out r6_115, out r7_381, out r8_382)
	word32 r7_126 = (r6_115 >>u 0x10<32>) + r6_115
	Mem129[&tLoc0148 + 1<i32>:byte] = SLICE(r7_126, byte, 0)
	Mem130[&tLoc0148:byte] = SLICE((r7_126 & 0xFFFF<32>) >> 8<32>, byte, 0)
	word32 r6_385
	word32 r10_388
	word32 r3_383
	word32 r5_384
	word32 r7_386
	word32 r9_387
	word32 r13_389
	r2 = memcpy(r11, &tLoc0148, r16_53, out r3_383, out r5_384, out r6_385, out r7_386, out r8_138, out r9_387, out r10_388, out r11, out r12, out r13_389)
l00407720:
	word32 r7_148 = r6_100
l00407726:
	word32 r5_152 = CONVERT(Mem102[&tLoc0148 + r7_148:byte], byte, word32)
	branch r5_152 == 0<32> l00407730
l0040772C:
	branch r5_152 != 0x2E<32> l00407724
l00407724:
	r7_148 = r7_148 + 1<32>
l00407730:
	word32 r5_157 = r7_148 - r6_100
	branch r5_157 >=u 0xFFFFFFC0<32> l004076D2
l0040773A:
	Mem163[fp + 0xFFFFEFD0<32> + r6_100 + 0xEE7<32>:byte] = SLICE(r5_157, byte, 0)
	r6_100 = r7_148 + 1<32>
l004076D2:
	r19_165 = 0xFFFFFFFF<32>
l004076D4:
	r4Out = r19_165
	r8Out = r8_138
	r11Out = r11
	r12Out = r12
	return r2
res_mkquery_exit:


word32 mtime(ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __res_msend_rc
// MayUse: 
// LiveOut: r2 r4 r6 r8
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
mtime_entry:
	struct <anonymous> tLoc18
l00407780:
	word32 r7_15
	word32 r8_16
	word32 r3_34
	word32 r4_35
	word32 r5_36
	word32 r6_37
	word32 r2_9 = __clock_gettime(0<32>, &tLoc18, out r3_34, out r4_35, out r5_36, out r6_37, out r7_15, out r8_16)
	r4Out = r7_15 *s 0x3E8<32> + 0x3E8<32>
	r6Out = 0xF4240<32>
	r8Out = r8_16
	return r2_9
mtime_exit:


void cleanup()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
cleanup_entry:
l004077A2:
l004077A6_thunk___syscall:
	word32 r4_15
	word32 r5_16
	word32 r6_17
	word32 r7_18
	word32 r8_19
	word32 r9_20
	__syscall(out r4_15, out r5_16, out r6_17, out r7_18, out r8_19, out r9_20)
	return
cleanup_exit:


word32 __res_msend_rc(word32 r4, word32 r7, word32 r8, word32 r9, word32 r10, word32 r21, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      name_from_dns
//      __res_msend
// MayUse:  r10:[0..31] r21:[0..31] r4:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11 r12 r2 r4 r6 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__res_msend_rc_entry:
	ptr32 fp
	struct <anonymous> tLocAC
	struct <anonymous> tLocA0
	struct <anonymous> tLoc84
	word32 dwLocC0
	word32 r11
	word32 r12
l004077AA:
	Mem45[&tLocA0:word32] = 0<32>
	word32 r8_1432
	word32 r10_1434
	word32 r9_1433
	word32 r6_1430
	word32 r7_1431
	memset(&tLoc84, 0<32>, 0x54<32>, out r6_1430, out r7_1431, out r8_1432, out r9_1433, out r10_1434)
	fn00407A82(1<32>, fp - 0xC0<32>)
	word32 r18_341 = r4
	word32 r23_138 = r10 + 8<32>
	word32 r16_136 = &tLoc84
	word32 r17_130 = 2<32>
	word32 r20_134 = 0<32>
	word32 r19_102 = 0x10<32>
l004077F4:
	branch r20_134 <u Mem73[r10 + 0x54<32>:word32] l00407850
l00407850:
	word32 r7_77 = Mem73[r23_138 - 8<32>:word32]
	branch r7_77 != 2<32> l00407878
l00407878:
	word32 r9_1444
	word32 r13_1446
	word32 r7_1442
	word32 r6_1441
	word32 r3_1439
	word32 r5_1440
	word32 r10_1445
	word32 r8_1443
	memcpy(r16_136 + 8<32>, r23_138, 0x10<32>, out r3_1439, out r5_1440, out r6_1441, out r7_1442, out r8_1443, out r9_1444, out r10_1445, out r11, out r12, out r13_1446)
	Mem103[r16_136 + 2<32>:word16] = SLICE(htons(0x35<32>), word16, 0)
	Mem107[r16_136:word16] = 0xA<16>
	r17_130 = 0xA<32>
	r19_102 = 0x1C<32>
l00407858:
	word32 r7_116
	word32 r3_1447
	word32 r5_1448
	word32 r8_1450
	word32 r13_1453
	word32 r9_1451
	word32 r10_1452
	word32 r6_1449
	memcpy(r16_136 + 4<32>, r23_138, 4<32>, out r3_1447, out r5_1448, out r6_1449, out r7_116, out r8_1450, out r9_1451, out r10_1452, out r11, out r12, out r13_1453)
	Mem131[r16_136 + 2<32>:word16] = SLICE(htons(0x35<32>), word16, 0)
	Mem132[r16_136:word16] = SLICE(r7_116, word16, 0)
	r17_130 = r7_77
l0040786E:
	r20_134 = r20_134 + 1<32>
	r16_136 = r16_136 + 0x1C<32>
	r23_138 = r23_138 + 0x1C<32>
l004077FC:
	Mem143[&tLocA0:byte] = SLICE(r17_130, byte, 0)
	word32 r3_1435
	word32 r9_1436
	word32 r4_154
	word32 r6_1404
	word32 r8_1411
	word32 r2_1350 = socket(0x80081<32>, out r3_1435, out r4_154, out r6_1404, out r8_1411, out r9_1436)
	word32 r16_155 = r4_154
	branch r4_154 >= 0<32> l00407836
l00407812:
	branch r17_130 != 0xA<32> l00407846
l00407816:
	__errno_location(out r4_154)
	branch Mem143[r4_154:word32] != 0x21<32> l00407846
l00407820:
	word32 r9_1438
	word32 r3_1437
	r2_1350 = socket(0x80081<32>, out r3_1437, out r4_154, out r6_1404, out r8_1411, out r9_1438)
	r16_155 = r4_154
	branch r4_154 < 0<32> l00407846
l00407834:
l00407836:
	branch bind() >= 0<32> l00407898
l00407898:
	_pthread_cleanup_push(&tLocAC, 0x004077A2<p32>, r16_155)
	word32 r4_202 = fn00407A82(&tLocAC, 0<32>)
	branch dwLocC0 == 0xA<32> l0040791A
l0040791A:
	word32 r3_1454
	word32 r7_1456
	word32 r5_1455
	setsockopt(out r3_1454, out r4_202, out r5_1455, out r7_1456)
	word32 r17_208 = fp - 0x80<32>
	r23_138 = 0<32>
l0040792E:
	branch r20_134 == r23_138 l004078AE
l00407932:
	branch CONVERT(Mem225[r17_208 - 4<32>:uint16], uint16, word32) != 2<32> l00407958
l0040793A:
	word32 r10_1469
	word32 r8_1467
	word32 r11_1470
	word32 r5_1464
	word32 r6_1465
	word32 r3_1463
	word32 r7_1466
	word32 r13_1472
	word32 r9_1468
	word32 r12_1471
	memcpy(r17_208 + 0x10<32>, r17_208, 4<32>, out r3_1463, out r5_1464, out r6_1465, out r7_1466, out r8_1467, out r9_1468, out r10_1469, out r11_1470, out r12_1471, out r13_1472)
	r4_202 = r17_208 + 4<32>
	word32 r10_1479
	word32 r8_1477
	word32 r7_1476
	word32 r6_1475
	word32 r5_1474
	word32 r3_1473
	word32 r9_1478
	word32 r13_1480
	memcpy(r4_202, 0x00412EC8<p32>, 0xC<32>, out r3_1473, out r5_1474, out r6_1475, out r7_1476, out r8_1477, out r9_1478, out r10_1479, out r11, out r12, out r13_1480)
	Mem264[r17_208 - 4<32>:int16] = 10<i16>
l00407958:
	r23_138 = r23_138 + 1<32>
	r17_208 = r17_208 + 0x1C<32>
l004078AE:
	word32 r10_1461
	word32 r9_1460
	word32 r6_1457
	word32 r8_1459
	word32 r7_1458
	memset(r4_202, 0<32>, r4 << 2<32>, out r6_1457, out r7_1458, out r8_1459, out r9_1460, out r10_1461)
	word32 r4_311
	word32 r6_1462
	word32 r8_1412
	word32 r2_1351 = mtime(out r4_311, out r6_1462, out r8_1412)
	word32 r6_1405 = &tLoc84
	word32 r30_325 = r4_311 - r23_138
	word32 r10_326 = r4_311
l004078E2:
	branch r10_326 - r4_311 >=u r6_1405 l00407A76
l004078EC:
	word32 r7_337 = r10_326 - r30_325
	branch r7_337 <u r23_138 l004078FE
l004078F4:
	r21 = 0<32>
l004078F6:
	branch r21 < r18_341 l0040795E
l0040795E:
	r7_337 = Mem343[r7_337 + r21 * 4<32>:word32]
	branch r7_337 == 0<32> l00407992
l00407992:
	r7_337 = &tLoc84
	word32 r30_348 = &tLoc84
l0040798A:
	branch r7_337 != r30_348 l0040796A
l0040796A:
	sendto(out r7_337, out r10_326)
	r30_348 = r30_348 + 0x1C<32>
	r18_341 = r10_326
l00407990:
l00407966:
	r21 = r21 + 1<32>
l004078FA:
	r30_325 = r10_326
l004078FE:
	word32 r4_402
	word32 r7_405
	poll(r23_138 - r10_326 + r30_325, out r4_402, out r7_405)
	branch r4_402 > 0<32> l004079EE
l004079EE:
	word32 r10_414 = r7_405 + (r7 << 2<8>)
l004079F4:
	word32 r4_433
	r2_1351 = recvfrom(out r4_433, out r7_405, out r10_414)
	word32 r9_439 = r4_433
	r18_341 = r10_414
	branch r4_433 < 0<32> l00407912
l00407A12:
	branch r4_433 < 4<32> l004079F4
l00407A16:
	word32 r8_441 = 0<32>
l00407A18:
	branch r20_134 == r8_441 l004079EE
l00407A20:
	word32 r6_453 = r19_102
	branch memcmp(&tLoc84 + r8_441 *s 0x1C<32>, &tLocA0, r19_102, out r7_405, out r8_1412, out r9_439) != 0<32> l00407998
l00407998:
	r8_441 = r8_1412 + 1<32>
l00407A3C:
	r7_405 = r9
l0040799E:
	branch r7_405 >= r9_439 l004079EA
l004079EA:
	branch r7_405 != r9_439 l004079BA
l004079A2:
	word32 r5_474 = Mem455[r10_414:word32]
	r6_453 = Mem455[r6_453 + r7_405 * 4<32>:word32]
	r11 = CONVERT(Mem455[r5_474:byte], byte, word32)
	branch r11 != CONVERT(Mem455[r6_453:byte], byte, word32) l0040799C
l004079B2:
	r6_453 = CONVERT(Mem455[r6_453 + 1<32>:byte], byte, word32)
	branch r6_453 != CONVERT(Mem455[r5_474 + 1<32>:byte], byte, word32) l0040799C
l0040799C:
	r7_405 = r7_405 + 1<32>
l004079BA:
	r11 = r6_453 + (r7_405 << 2<32>)
	word32 r17_485 = r8
	branch Mem455[r11:word32] != 0<32> l004079EE
l004079C6:
	word32 r5_492 = Mem455[r10_414:word32]
	word32 r6_493 = CONVERT(Mem455[r5_492 + 3<32>:byte], byte, word32)
	r6_1405 = r6_493 & 0xF<32>
	branch (r6_493 & 0xF<32>) == 2<32> l00407A40
l00407A40:
	branch r21 == 0<32> l004079EE
l00407A44:
	word32 r10_1486
	sendto(out r7_405, out r10_1486)
	r21 = r21 + 0xFFFFFFFF<32>
l004079D0:
	branch (r6_493 & 0xF<32>) == 3<32> l004079D6
l004079D4:
	branch (r6_493 & 0xF<32>) != 0<32> l004079EE
l004079D6:
	Mem538[r11:word32] = r9_439
	branch r7_405 != r8 l00407A66
l00407A66:
	r17_485 = r7
	word32 r9_1483
	word32 r5_1482
	word32 r10_1484
	word32 r13_1485
	word32 r3_1481
	r2_1351 = memcpy(Mem538[r7_405 * 5<32>:word32], r5_492, r9_439, out r3_1481, out r5_1482, out r6_1405, out r7_405, out r8_1412, out r9_1483, out r10_1484, out r11, out r12, out r13_1485)
l004079DC:
	branch r17_485 >= r9_439 l00407A72
l00407A72:
	branch r9_439 != r17_485 l004079EE
l00407A76:
	_pthread_cleanup_pop(&tLocAC, 1<32>)
	r4Out = 0<32>
	r6Out = r6_1405
	r8Out = r8_1412
	r11Out = r11
	r12Out = r12
	return r2_1351
l004079E0:
	r7_405 = Mem538[r7_405 + r8 * 4<32>:word32]
	branch r7_405 == 0<32> l004079EE
l004079E6:
	r17_485 = r8 + 1<32>
l00407912:
	word32 r4_602
	r2_1351 = mtime(out r4_602, out r6_1405, out r8_1412)
	r10_326 = r4_602
l00407842:
	r2_1350 = close(out r4_154, out r6_1404, out r8_1411)
l00407846:
	fn00407A82(r4_154, 0<32>)
	r4Out = 0xFFFFFFFF<32>
	r6Out = r6_1404
	r8Out = r8_1411
	r11Out = r11
	r12Out = r12
	return r2_1350
__res_msend_rc_exit:


word32 fn00407A82(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __res_msend_rc
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r25 r3 r4 r7
// Preserved: sp
fn00407A82_entry:
l00407A82:
l00407A82_thunk___pthread_setcancelstate:
	word32 r7_10
	return __pthread_setcancelstate(r4, r5, out r7_10)
fn00407A82_exit:


word32 __res_msend(word32 r4, word32 r12, word32 r21, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      res_send
// MayUse:  r12:[0..31] r21:[0..31] r4:[0..31]
// LiveOut: r11 r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__res_msend_entry:
	struct <anonymous> tLoc74
l00407A86:
	word32 r4_41
	word32 r8_45
	word32 r9_46
	word32 r12_114
	word32 r11_100
	__get_resolv_conf(&tLoc74, 0<32>, r12, out r4_41, out r8_45, out r9_46, out r11_100, out r12_114)
	word32 r6_47 = 0xFFFFFFFF<32>
	branch r4_41 < 0<32> l00407AB2
l00407AA0:
	word32 r4_69
	word32 r6_115
	word32 r8_116
	word32 r12_117
	__res_msend_rc(r4, &tLoc74, r8_45, r9_46, &tLoc74, r21, out r4_69, out r6_115, out r8_116, out r11_100, out r12_117)
	r6_47 = r4_69
l00407AB2:
	r11Out = r11_100
	return r6_47
__res_msend_exit:


word32 res_send(word32 r12, word32 r21, ptr32 & r11Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
// MayUse:  r12:[0..31] r21:[0..31]
// LiveOut: r11 r17 r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
res_send_entry:
	word32 r7
	word32 r17
l00407AC0:
	word32 r11_26
	word32 r4_35 = __res_msend(1<32>, r12, r21, out r11_26)
	branch r4_35 < 0<32> l00407AE0
l00407ADE:
	r17 = r7
l00407AE0:
	r11Out = r11_26
	r17Out = r17
	return r4_35
res_send_exit:


word32 __isspace(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00407D08
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r7
// Preserved: sp
__isspace_entry:
l00407AF0:
	word32 r7_4 = 1<32>
	branch r4 == 0x20<32> l00407AFE
l00407AF6:
	r7_4 = CONVERT(r4 <u 0xFFFFFFF2<32>, bool, word32)
l00407AFE:
	return r7_4
__isspace_exit:


word32 __get_resolv_conf(word32 r4, word32 r5, word32 r12, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
//      __res_msend
// MayUse:  r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r11 r12 r2 r4 r8 r9
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
__get_resolv_conf_entry:
	ptr32 fp
	struct <anonymous> tLoc02B0
	struct <anonymous> tLoc0220
	byte bLoc0219
	byte bLoc0216
	byte bLoc021A
	word32 dwLoc02B4
	word32 r11
l00407B02:
	Mem28[r4 + 0x5C<32>:byte] = 1<8>
	Mem30[r4 + 0x60<32>:byte] = 5<8>
	Mem32[r4 + 0x58<32>:byte] = 2<8>
	branch r5 == 0<32> l00407B24
l00407B20:
	Mem33[r5:byte] = 0<8>
l00407B24:
	word32 r4_432
	word32 r3_293
	word32 r4_43
	word32 r5_847
	word32 r19_848
	word32 r9_465
	word32 r8_464
	word32 r2_40 = __fopen_rb_ca(&tLoc02B0, out r4_43, out r5_847, out r8_464, out r9_465, out r19_848)
	word32 r17_198 = 0<32>
	branch r4_43 != 0<32> l00407B8C
l00407B8C:
	word32 r21_70
	word32 r4_73
	word32 r5_849
	r2_40 = fgets_unlocked(&tLoc0220, 0x100<32>, r4_43, out r3_293, out r4_73, out r5_849, out r8_464, out r9_465, out r11, out r12, out r21_70)
	branch r4_73 != 0<32> l00407B6E
l00407B6E:
	branch strchr(&tLoc0220, 0xA<32>) != 0<32> l00407BA2
l00407B78:
	branch !__bit(Mem84[r4_43:word32], 4<32>) l00407BA2
l00407BA2:
	word32 r6_852
	branch fn00407D00(&tLoc0220, 0x00411FB0<p32>, 7<32>, out r6_852) != 0<32> l00407C66
l00407BB0:
	branch fn00407D08(CONVERT(bLoc0219, byte, word32)) == 0<32> l00407C66
l00407C66:
	word32 r6_113
	branch fn00407D00(&tLoc0220, 0x00411FD8<p32>, 0xA<32>, out r6_113) != 0<32> l00407CB4
l00407C72:
	branch fn00407D08(CONVERT(bLoc0216, byte, word32)) == 0<32> l00407CB4
l00407CB4:
	branch r5 == 0<32> l00407B8C
l00407CB8:
	word32 r6_863
	branch fn00407D00(&tLoc0220, 0x00411FE4<p32>, 6<32>, out r6_863) != 0<32> l00407CEC
l00407CEC:
	word32 r6_864
	branch fn00407D00(&tLoc0220, 0x00411FEC<p32>, 6<32>, out r6_864) != 0<32> l00407B8C
l00407CFA:
l00407CC4:
	word32 r18_153 = fp - 0x219<32>
	branch fn00407D08(CONVERT(bLoc021A, byte, word32)) == 0<32> l00407B8C
l00407CD2:
	branch fn00407D08(CONVERT(Mem84[r18_153:byte], byte, word32)) != 0<32> l00407CFC
l00407CFC:
	r18_153 = r18_153 + 1<32>
l00407CD8:
	word32 r7_867
	word32 r5_865
	word32 r6_866
	word32 r4_166 = strlen(r18_153, out r5_865, out r6_866, out r7_867)
	branch r4_166 >=u r21_70 l00407B8C
l00407CE0:
	word32 r3_868
	word32 r5_869
	word32 r13_877
	word32 r12_876
	word32 r8_872
	word32 r10_874
	word32 r11_875
	word32 r9_873
	word32 r7_871
	word32 r6_870
	memcpy(r5, r18_153, r4_166 + 1<32>, out r3_868, out r5_869, out r6_870, out r7_871, out r8_872, out r9_873, out r10_874, out r11_875, out r12_876, out r13_877)
l00407C7A:
	word32 r5_195 = fp - 0x215<32>
	branch r17_198 >= 3<32> l00407B8C
l00407C82:
	branch fn00407D08(CONVERT(Mem84[r5_195:byte], byte, word32)) != 0<32> l00407CA6
l00407CA6:
	r5_195 = r5_195 + 1<32>
l00407C88:
	dwLoc02B4 = r5_195
l00407C8A:
	r17_198 = dwLoc02B4
	word32 r4_212 = CONVERT(Mem209[r6_113:byte], byte, word32)
	branch r4_212 != 0<32> l00407CAA
l00407CAA:
	branch fn00407D08(r4_212) != 0<32> l00407C90
l00407CAE:
	r6_113 = r6_113 + 1<32>
	dwLoc02B4 = r6_113
l00407C90:
	Mem220[r6_113:byte] = 0<8>
	word32 r4_260
	word32 r12_862
	word32 r8_859
	word32 r6_858
	word32 r9_860
	word32 r11_861
	__lookup_ipliteral(r2_40, r3_293, r4 + dwLoc02B4 *s 0x1C<32>, r5_195, 0<32>, r12, out r4_260, out r6_858, out r8_859, out r9_860, out r11_861, out r12_862)
	branch r4_260 <= 0<32> l00407B8C
l00407CA2:
	r17_198 = dwLoc02B4 + 1<32>
l00407BC0:
	word32 r4_273
	word32 r2_271 = fn00407D04(&tLoc0220, 0x00411FB8<p32>, out r4_273)
	branch r4_273 == 0<32> l00407BF6
l00407BCA:
	branch CONVERT(Mem84[r4_273 + 6<32>:byte], byte, word32) >=u 0xFFFFFFC6<32> l00407BF6
l00407BD6:
	word32 r8_855
	word32 r7_854
	word32 r6_853
	word32 r9_856
	word32 r11_857
	word32 r4_294
	__strtoul_internal(r2_271, r3_293, r4_273 + 6<32>, fp - 0x2B4<32>, 0xA<32>, r12, out r3_293, out r4_294, out r6_853, out r7_854, out r8_855, out r9_856, out r11_857, out r12)
	branch r4_273 + 6<32> == dwLoc02B4 l00407BF6
l00407BE8:
	branch CONVERT(r4_294 <u 0x10<32>, bool, word32) != 0<32> l00407BF2
l00407BEE_1:
	r4_294 = 0xF<32>
l00407BF2:
	Mem306[r4 + 0x5C<32>:byte] = SLICE(r4_294, byte, 0)
l00407BF6:
	word32 r4_315
	word32 r2_313 = fn00407D04(&tLoc0220, 0x00411FC0<p32>, out r4_315)
	branch r4_315 == 0<32> l00407C2A
l00407C00:
	branch CONVERT(Mem321[r4_315 + 9<32>:byte], byte, word32) >=u 0xFFFFFFC6<32> l00407C2A
l00407C0C:
	word32 r7_344
	word32 r8_879
	word32 r9_880
	word32 r11_881
	word32 r6_878
	word32 r4_341
	__strtoul_internal(r2_313, r3_293, r4_315 + 9<32>, fp - 0x2B4<32>, 0xA<32>, r12, out r3_293, out r4_341, out r6_878, out r7_344, out r8_879, out r9_880, out r11_881, out r12)
	r17_198 = dwLoc02B4
	branch r4_315 + 9<32> == r7_344 l00407C2A
l00407C1C:
	branch CONVERT(r4_341 <u 0xB<32>, bool, word32) != 0<32> l00407C26
l00407C22_1:
	r4_341 = 0xA<32>
l00407C26:
	Mem354[r4 + 0x58<32>:byte] = SLICE(r4_341, byte, 0)
l00407C2A:
	word32 r4_363
	word32 r2_361 = fn00407D04(&tLoc0220, 0x00411FCC<p32>, out r4_363)
	branch r4_363 == 0<32> l00407B8C
l00407C36:
	word32 r7_370 = CONVERT(Mem369[r4_363 + 8<32>:byte], byte, word32)
	branch r7_370 <u 0xFFFFFFC6<32> l00407C46
l00407C42:
	branch r7_370 != 0x2E<32> l00407B8C
l00407C46:
	word32 r7_397
	word32 r11_886
	word32 r12_887
	word32 r9_885
	word32 r8_884
	word32 r3_882
	word32 r6_883
	word32 r4_394
	__strtoul_internal(r2_361, r3_293, r4_363 + 8<32>, fp - 0x2B4<32>, 0xA<32>, r12, out r3_882, out r4_394, out r6_883, out r7_397, out r8_884, out r9_885, out r11_886, out r12_887)
	r17_198 = dwLoc02B4
	branch r4_363 + 8<32> == r7_397 l00407B8C
l00407C56:
	branch CONVERT(r4_394 <u 0x3D<32>, bool, word32) != 0<32> l00407C60
l00407C5C_1:
	r4_394 = 0x3C<32>
l00407C60:
	Mem409[r4 + 0x60<32>:byte] = SLICE(r4_394, byte, 0)
l00407B7E:
	word32 r4_421 = _IO_getc(r4_43, out r17_198)
	branch r4_421 == 0xA<32> l00407B8C
l00407B86:
	branch r4_421 != 0xFFFFFFFF<32> l00407B7E
l00407B9A:
	__fclose_ca(r4_43)
	branch r17_198 != 0<32> l00407B64
l00407BA0:
l00407B3C:
	word32 r4_429
	r3_293 = __errno_location(out r4_429)
	word32 r6_431 = Mem430[r4_429:word32]
	r4_432 = 0xFFFFFFFF<32>
	branch r6_431 >=u 0x15<32> l00407B6A
l00407B48:
	branch (1<32> << r6_431 & 0x102004<32>) == 0<32> l00407B6A
l00407B58:
	r17_198 = 1<32>
	word32 r4_850
	word32 r6_851
	r2_40 = __lookup_ipliteral(r2_40, r3_293, r4, 0x00411FA4<p32>, 0<32>, r12, out r4_850, out r6_851, out r8_464, out r9_465, out r11, out r12)
l00407B64:
	Mem469[r4 + 0x54<32>:byte] = SLICE(r17_198, byte, 0)
	r4_432 = 0<32>
l00407B6A:
	r4Out = r4_432
	r8Out = r8_464
	r9Out = r9_465
	r11Out = r11
	r12Out = r12
	return r2_40
__get_resolv_conf_exit:


word32 fn00407D00(word32 r4, word32 r5, word32 r6, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4 r6
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00407D00_entry:
l00407D00:
l00407D00_thunk_strncmp:
	word32 r6_12
	word32 r4_8 = strncmp(r4, r5, r6, out r6_12)
	r6Out = r6_12
	return r4_8
fn00407D00_exit:


word32 fn00407D04(word32 r4, word32 r5, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2 r4
// Trashed: r10 r11 r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00407D04_entry:
l00407D04:
l00407D04_thunk_strstr:
	word32 r4_8
	word32 r2_15 = strstr(r4, r5, out r4_8)
	r4Out = r4_8
	return r2_15
fn00407D04_exit:


word32 fn00407D08(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r7
// Preserved: sp
fn00407D08_entry:
l00407D08:
l00407D08_thunk___isspace:
	return __isspace(r4)
fn00407D08_exit:


word32 send()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __netlink_enumerate
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
send_entry:
l00407D10:
l00407D14_thunk_sendto:
	word32 r7_16
	word32 r10_17
	return sendto(out r7_16, out r10_17)
send_exit:


word32 sendmsg()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_send_probe
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sendmsg_entry:
l00407D20:
	word32 r4_19
	word32 r5_32
	word32 r6_33
	word32 r8_34
	__syscall_cp(out r4_19, out r5_32, out r6_33, out r8_34)
l00407D38_thunk___syscall_ret:
	word32 r4_29
	word32 r7_35
	__syscall_ret(r4_19, out r4_29, out r7_35)
	return r4_29
sendmsg_exit:


word32 sendto(ptr32 & r7Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_send_probe
//      ping6_send_probe
//      __res_msend_rc
//      send
// MayUse: 
// LiveOut: r10 r4 r7
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sendto_entry:
	word32 r9
l00407D40:
	word32 r4_22
	word32 r5_37
	word32 r6_38
	word32 r8_39
	__syscall_cp(out r4_22, out r5_37, out r6_38, out r8_39)
l00407D5A_thunk___syscall_ret:
	word32 r4_32
	word32 r7_33
	__syscall_ret(r4_22, out r4_32, out r7_33)
	r7Out = r7_33
	r10Out = r9
	return r4_32
sendto_exit:


word32 setsockopt(ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      fn00400B4A
//      ping4_run
//      fn00401280
//      ping4_receive_error_msg
//      fn004023EE
//      ping6_install_filter
//      ping6_run
//      fn00403C9A
//      __res_msend_rc
// MayUse: 
// LiveOut: r2 r3 r4 r5 r7
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
setsockopt_entry:
l00407D60:
	word32 r4_21
	word32 r5_22
	word32 r6_38
	word32 r7_39
	word32 r8_40
	word32 r9_41
	word32 r2_19 = __syscall(out r4_21, out r5_22, out r6_38, out r7_39, out r8_40, out r9_41)
l00407D7A_thunk___syscall_ret:
	word32 r4_31
	word32 r7_32
	r3Out = __syscall_ret(r4_21, out r4_31, out r7_32)
	r4Out = r4_31
	r5Out = r5_22
	r7Out = r7_32
	return r2_19
setsockopt_exit:


word32 socket(word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      create_socket
//      ping4_run
//      ping6_run
//      if_indextoname
//      if_nametoindex
//      __lookup_name
//      __rtnetlink_enumerate
//      __res_msend_rc
// MayUse:  r5:[0..31]
// LiveOut: r2 r3 r4 r6 r8 r9
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
socket_entry:
l00407D80:
	word32 r4_30
	word32 r5_167
	word32 r7_168
	word32 r6_151
	word32 r8_156
	word32 r9_100
	word32 r2_139 = __syscall(out r4_30, out r5_167, out r6_151, out r7_168, out r8_156, out r9_100)
	word32 r4_38
	word32 r7_169
	word32 r3_145 = __syscall_ret(r4_30, out r4_38, out r7_169)
	word32 r16_101 = r4_38
	branch r4_38 >= 0<32> l00407E00
l00407DA0:
	word32 r4_43
	r3_145 = __errno_location(out r4_43)
	branch Mem13[r4_43:word32] != 0x16<32> l00407DF6
l00407DF6:
	word32 r4_47
	r3_145 = __errno_location(out r4_47)
	branch Mem13[r4_47:word32] == 0x1D<32> l00407DAA
l00407DAA:
	branch (r5 & 0x80080<32>) == 0<32> l00407E00
l00407DB4:
	word32 r4_64
	word32 r5_170
	word32 r7_171
	r2_139 = __syscall(out r4_64, out r5_170, out r6_151, out r7_171, out r8_156, out r9_100)
	word32 r4_72
	word32 r7_172
	r3_145 = __syscall_ret(r4_64, out r4_72, out r7_172)
	r16_101 = r4_72
	branch r4_72 < 0<32> l00407E00
l00407DD4:
	branch __bit(r5, 0x13<32>) l00407DE4
l00407DD8:
	word32 r4_173
	word32 r5_174
	word32 r7_175
	r2_139 = __syscall(out r4_173, out r5_174, out r6_151, out r7_175, out r8_156, out r9_100)
l00407DE4:
	branch __bit(r5, 7<32>) l00407E00
l00407DE8:
	word32 r4_176
	word32 r5_177
	word32 r7_178
	r2_139 = __syscall(out r4_176, out r5_177, out r6_151, out r7_178, out r8_156, out r9_100)
l00407E00:
	r3Out = r3_145
	r4Out = r16_101
	r6Out = r6_151
	r8Out = r8_156
	r9Out = r9_100
	return r2_139
socket_exit:


void sched_yield()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sched_yield_entry:
l00407E10:
	word32 r4_10
	word32 r5_23
	word32 r6_24
	word32 r7_25
	word32 r8_26
	word32 r9_27
	__syscall(out r4_10, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27)
l00407E1C_thunk___syscall_ret:
	word32 r4_28
	word32 r7_29
	__syscall_ret(r4_10, out r4_28, out r7_29)
	return
sched_yield_exit:


word32 poll(word32 r6, ptr32 & r4Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main_loop
//      __res_msend_rc
// MayUse:  r6:[0..31]
// LiveOut: r3 r4 r7
// Trashed: hi lo r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
poll_entry:
l00407E20:
	branch r6 < 0<32> l00407E42
l00407E28:
l00407E42:
	word32 r4_30
	word32 r5_54
	word32 r6_55
	word32 r8_56
	__syscall_cp(out r4_30, out r5_54, out r6_55, out r8_56)
	word32 r4_38
	word32 r7_39
	word32 r3_37 = __syscall_ret(r4_30, out r4_38, out r7_39)
	r4Out = r4_38
	r7Out = r7_39
	return r3_37
poll_exit:


void _longjmp(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sigexit
// MayUse:  r5:[0..31]
// LiveOut:
// Trashed: r16 r17 r18 r19 r20 r21 r22 r23 r25 r28 r30 r4 ra sp
// Preserved:
_longjmp_entry:
l00407E60:
	branch r5 != 0<32> l00407E7A
l00407E78:
l00407E7A:
	return
_longjmp_exit:


word32 _setjmp(word32 r4, word32 r16, word32 r17, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r28, word32 r30, word32 ra)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_addr
// MayUse:  r16:[0..31] r17:[0..31] r18:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r28:[0..7] r30:[0..7] r4:[0..31] ra:[0..7]
// LiveOut: r4
// Trashed: r25 r4
// Preserved: sp
_setjmp_entry:
	ptr32 fp
l00407E80:
	Mem6[r4:byte] = SLICE(ra, byte, 0)
	Mem7[r4 + 4<32>:byte] = SLICE(fp, byte, 0)
	Mem9[r4 + 8<i32>:word32] = r16
	Mem11[r4 + 12<i32>:word32] = r17
	Mem13[r4 + 16<i32>:word32] = r18
	Mem15[r4 + 20<i32>:word32] = r19
	Mem17[r4 + 24<i32>:word32] = r20
	Mem19[r4 + 28<i32>:word32] = r21
	Mem21[r4 + 32<i32>:word32] = r22
	Mem23[r4 + 36<i32>:word32] = r23
	Mem25[r4 + 0x28<32>:byte] = SLICE(r30, byte, 0)
	Mem27[r4 + 0x2C<32>:byte] = SLICE(r28, byte, 0)
	return 0<32>
_setjmp_exit:


void __block_all_sigs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      abort
//      do_setxid
//      __synccall
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__block_all_sigs_entry:
l00407EA0:
l00407EB0_thunk___syscall:
	word32 r4_18
	word32 r5_19
	word32 r6_20
	word32 r7_21
	word32 r8_22
	word32 r9_23
	__syscall(out r4_18, out r5_19, out r6_20, out r7_21, out r8_22, out r9_23)
	return
__block_all_sigs_exit:


void __block_app_sigs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raise
//      __synccall
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__block_app_sigs_entry:
l00407EB4:
l00407EC4_thunk___syscall:
	word32 r4_18
	word32 r5_19
	word32 r6_20
	word32 r7_21
	word32 r8_22
	word32 r9_23
	__syscall(out r4_18, out r5_19, out r6_20, out r7_21, out r8_22, out r9_23)
	return
__block_app_sigs_exit:


word32 __restore_sigs()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      raise
//      __synccall
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__restore_sigs_entry:
l00407EC8:
l00407ED4_thunk___syscall:
	word32 r4_12
	word32 r5_18
	word32 r6_19
	word32 r7_20
	word32 r8_21
	word32 r9_22
	__syscall(out r4_12, out r5_18, out r6_19, out r7_20, out r8_21, out r9_22)
	return r4_12
__restore_sigs_exit:


void raise()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      abort
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
raise_entry:
l00407EE0:
	__block_app_sigs()
	word32 r4_60
	word32 r5_61
	word32 r6_62
	word32 r7_63
	word32 r8_64
	word32 r9_65
	__syscall(out r4_60, out r5_61, out r6_62, out r7_63, out r8_64, out r9_65)
	word32 r4_34
	word32 r5_66
	word32 r6_67
	word32 r7_68
	word32 r8_69
	word32 r9_70
	__syscall(out r4_34, out r5_66, out r6_67, out r7_68, out r8_69, out r9_70)
	word32 r4_71
	word32 r7_72
	__syscall_ret(r4_34, out r4_71, out r7_72)
	__restore_sigs()
	return
raise_exit:


word32 setitimer()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __schedule_exit
//      setup
// MayUse: 
// LiveOut: r3
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
setitimer_entry:
l00407F10:
	word32 r4_16
	word32 r5_29
	word32 r6_30
	word32 r7_31
	word32 r8_32
	word32 r9_33
	__syscall(out r4_16, out r5_29, out r6_30, out r7_31, out r8_32, out r9_33)
l00407F22_thunk___syscall_ret:
	word32 r4_34
	word32 r7_35
	return __syscall_ret(r4_16, out r4_34, out r7_35)
setitimer_exit:


void __get_handler_set(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
__get_handler_set_entry:
l00407F30:
l00407F36_thunk_memcpy:
	word32 r3_22
	word32 r5_23
	word32 r6_24
	word32 r7_25
	word32 r8_26
	word32 r9_27
	word32 r10_28
	word32 r11_29
	word32 r12_30
	word32 r13_31
	memcpy(r4, 0x00432980<p32>, 8<32>, out r3_22, out r5_23, out r6_24, out r7_25, out r8_26, out r9_27, out r10_28, out r11_29, out r12_30, out r13_31)
	return
__get_handler_set_exit:


void __libc_sigaction(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __sigaction
//      __synccall
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__libc_sigaction_entry:
	ptr32 fp
l00407F3A:
	branch r5 == 0<32> l00407FD2
l00407F46:
	branch Mem11[r5:word32] <u 2<32> l00407FA4
l00407F4C:
	__sync(0<32>)
	word32 r6_24 = 0x00432980<p32> + ((r4 + 0xFFFFFFFF<32> >>u 5<32>) << 2<8>)
	word32 r5_26 = 1<32> << r4 + 0xFFFFFFFF<32>
l00407F64:
	branch __store_conditional_32(Mem11[r6_24:word32], __load_linked_32(Mem11[r6_24:word32]) | r5_26) == 0<32> l00407F64
l00407F70:
	__sync(0<32>)
	branch Mem11[0x00454434<p32>:word32] != 0<32> l00407FA4
l00407F7C:
	branch Mem11[0x00432988<p32>:word32] != 0<32> l00407FA4
l00407F84:
	word32 r4_240
	word32 r5_241
	word32 r7_243
	word32 r6_242
	word32 r8_244
	word32 r9_245
	__syscall(out r4_240, out r5_241, out r6_242, out r7_243, out r8_244, out r9_245)
	Mem54[0x00432988<p32>:word32] = 1<32>
l00407FA4:
	branch (Mem63[r5 + 0x84<32>:word32] & 4<32>) == 0<32> l00407FC4
l00407FC0_1:
l00407FC4:
	word32 r3_262
	word32 r5_263
	word32 r6_264
	word32 r7_265
	word32 r8_266
	word32 r9_267
	word32 r10_268
	word32 r11_269
	word32 r12_270
	word32 r13_271
	memcpy(fp - 0x30<32>, r5 + 4<32>, 8<32>, out r3_262, out r5_263, out r6_264, out r7_265, out r8_266, out r9_267, out r10_268, out r11_269, out r12_270, out r13_271)
l00407FD2:
	branch r6 == 0<32> l00407FD8
l00407FD6:
l00407FD8:
	word32 r4_111
	word32 r5_246
	word32 r6_247
	word32 r7_248
	word32 r8_249
	word32 r9_250
	__syscall(out r4_111, out r5_246, out r6_247, out r7_248, out r8_249, out r9_250)
	word32 r4_119
	word32 r7_251
	__syscall_ret(r4_111, out r4_119, out r7_251)
	branch r4_119 != 0<32> l00408006
l00407FEC:
	branch r6 == 0<32> l00408006
l00407FF0:
	Mem133[r6 + 0x84<32>:byte] = 0<8>
	word32 r3_252
	word32 r5_253
	word32 r6_254
	word32 r7_255
	word32 r8_256
	word32 r9_257
	word32 r10_258
	word32 r11_259
	word32 r12_260
	word32 r13_261
	memcpy(r6 + 4<32>, fp - 0x1C<32>, 8<32>, out r3_252, out r5_253, out r6_254, out r7_255, out r8_256, out r9_257, out r10_258, out r11_259, out r12_260, out r13_261)
l00408006:
	return
__libc_sigaction_exit:


void __sigaction(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040271C
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__sigaction_entry:
l0040800A:
	branch r4 <u 0xFFFFFFDD<32> l00408024
l00408016:
	branch r4 >=u 0xFFFFFFC0<32> l00408024
l00408024:
	word32 r4_82
	__errno_location(out r4_82)
	return
l0040801C:
l00408020_thunk___libc_sigaction:
	__libc_sigaction(r4, r5, r6)
	return
__sigaction_exit:


void sigemptyset()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup
// MayUse: 
// LiveOut:
// Trashed: r25 r4
// Preserved: sp
sigemptyset_entry:
l00408030:
	return
sigemptyset_exit:


void sigprocmask(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
sigprocmask_entry:
l00408040:
	word32 r4_12 = pthread_sigmask(r4, r6)
	branch r4_12 != 0<32> l0040804E
l0040804E:
	word32 r4_22
	__errno_location(out r4_22)
	Mem23[r4_22:word32] = r4_12
l0040804A:
	return
sigprocmask_exit:


void __fclose_ca(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r7
// Preserved: sp
__fclose_ca_entry:
l00408060:
	call Mem0[r4 + 0xC<32>:word32] (retsize: 0;)
		uses: r4:r4
	return
__fclose_ca_exit:


word32 __fopen_rb_ca(word32 r5, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r5:[0..31]
// LiveOut: r19 r2 r4 r5 r8 r9
// Trashed: r10 r19 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__fopen_rb_ca_entry:
	word32 r19
l00408070:
	word32 r6_118
	word32 r7_119
	word32 r8_120
	word32 r9_121
	word32 r10_122
	memset(r5, 0<32>, 0x90<32>, out r6_118, out r7_119, out r8_120, out r9_121, out r10_122)
	word32 r4_39
	word32 r5_123
	word32 r6_124
	word32 r7_125
	word32 r8_111
	word32 r9_112
	word32 r2_105 = __syscall(out r4_39, out r5_123, out r6_124, out r7_125, out r8_111, out r9_112)
	word32 r4_47
	word32 r7_126
	__syscall_ret(r4_39, out r4_47, out r7_126)
	word32 dwLoc14_103 = r19
	word32 r16_18 = r5
	word32 r5_108 = r4_47
	branch r4_47 < 0<32> l004080CE
l004080CE:
	r16_18 = 0<32>
l0040809C:
	word32 r4_127
	word32 r6_128
	word32 r7_129
	r2_105 = __syscall(out r4_127, out r5_108, out r6_128, out r7_129, out r8_111, out r9_112)
	Mem76[r5 + 0x4C<32>:byte] = 0xFF<8>
	dwLoc14_103 = 0x004080E2<p32>
l004080CA:
	r4Out = r16_18
	r5Out = r5_108
	r8Out = r8_111
	r9Out = r9_112
	r19Out = dwLoc14_103
	return r2_105
__fopen_rb_ca_exit:


void __aio_close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __stdio_close
//      close
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__aio_close_entry:
l004080E0:
	return
__aio_close_exit:


void __stdio_close()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__stdio_close_entry:
l004080E2:
	__aio_close()
	word32 r4_14
	word32 r5_27
	word32 r6_28
	word32 r7_29
	word32 r8_30
	word32 r9_31
	__syscall(out r4_14, out r5_27, out r6_28, out r7_29, out r8_30, out r9_31)
l004080F6_thunk___syscall_ret:
	word32 r4_32
	word32 r7_33
	__syscall_ret(r4_14, out r4_32, out r7_33)
	return
__stdio_close_exit:


void __stdio_read(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__stdio_read_entry:
l00408100:
	word32 r7_24 = r6 - CONVERT(Mem11[r4 + 0x30<32>:word32] >u 0<32>, bool, word32)
	word32 r4_33
	word32 r6_35
	word32 r8_111
	word32 r9_112
	word32 r5_109
	word32 r7_110
	__syscall(out r4_33, out r5_109, out r6_35, out r7_110, out r8_111, out r9_112)
	word32 r4_41
	word32 r7_113
	__syscall_ret(r4_33, out r4_41, out r7_113)
	branch r4_41 > 0<32> l0040813E
l0040813E:
	branch r6_35 >=u r4_41 l0040813A
l00408144:
	word32 r7_44 = Mem29[r4 + 0x2C<32>:word32]
	branch Mem29[r4 + 0x30<32>:word32] == 0<32> l00408160
l00408152:
	Mem54[r5 + r7_24 - 1<32>:int8] = Mem52[r7_44:byte]
l0040812C:
l0040813A:
l00408160:
	return
__stdio_read_exit:


void __stdio_seek()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__stdio_seek_entry:
l00408170:
	word32 r4_20
	word32 r9_59
	word32 r8_58
	word32 r7_57
	word32 r6_56
	word32 r5_55
	__syscall(out r4_20, out r5_55, out r6_56, out r7_57, out r8_58, out r9_59)
	word32 r4_28
	word32 r7_60
	__syscall_ret(r4_20, out r4_28, out r7_60)
	branch r4_28 >= 0<32> l00408194
l0040818C:
l00408194:
	return
__stdio_seek_exit:


word32 fflush_unlocked(word32 r4, ptr32 & r16Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401B98
//      pinger
//      finish
//      fn004033F2
//      fflush_unlocked
// MayUse:  r4:[0..31]
// LiveOut: r16 r17 r4
// Trashed: r16 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
fflush_unlocked_entry:
	word32 r16
	word32 r17
l004081A0:
	word32 r17_107
	word32 dwLoc08_164 = r16
	word32 dwLoc0C_165 = r17
	branch r4 != 0<32> l004081DE
l004081DE:
	r17_107 = 0<32>
	branch Mem9[r4 + 0x4C<32>:word32] < 0<32> l004081EE
l004081E8:
	word32 r4_18
	word32 r3_239
	word32 r5_240
	word32 r8_241
	word32 r9_242
	__lockfile(r4, out r3_239, out r4_18, out r5_240, out r8_241, out r9_242)
	r17_107 = r4_18
l004081EE:
	branch Mem9[r4 + 0x1C<32>:word32] >=u Mem9[r4 + 0x14<32>:word32] l0040820C
l004081F6:
	word32 r8_40
	word32 r2_42
	word32 r3_43
	word32 r9_44
	call Mem9[r4 + 0x24<32>:word32] (retsize: 0;)
		uses: r2:r2_42,r3:r3_43,r4:r4,r5:0<32>,r6:0<32>,r8:r8_40,r9:r9_44
		defs: r2:r2_42,r3:r3_43,r8:r8_40,r9:r9_44
	branch Mem9[r4 + 0x14<32>:word32] != 0<32> l0040820C
l0040820C:
	word32 r6_48 = Mem9[r4 + 4<i32>:word32]
	word32 r7_49 = Mem9[r4 + 8<i32>:word32]
	branch r6_48 >=u r7_49 l00408224
l00408214:
	word32 r6_50 = r6_48 - r7_49
	word32 r5_61
	word32 r2_64
	word32 r3_65
	word32 r9_66
	call Mem9[r4 + 0x28<32>:word32] (retsize: 0;)
		uses: r2:r2_64,r3:r3_65,r4:r4,r5:r5_61,r6:r6_50,r7:r6_50 >> 0x1F<32>,r8:1<32>,r9:r9_66
		defs: r2:r2_64,r3:r3_65,r5:r5_61,r9:r9_66
l00408224:
	dwLoc0C_165 = 0<32>
	dwLoc08_164 = 0<32>
	branch r17_107 == 0<32> l004081DA
l00408230:
	word32 r4_251
	word32 r5_252
	word32 r6_253
	word32 r7_254
	word32 r8_255
	word32 r9_256
	__unlockfile(r4, out r4_251, out r5_252, out r6_253, out r7_254, out r8_255, out r9_256)
	r17_107 = 0<32>
l00408202:
	branch r17_107 == 0<32> l00408208
l00408204:
	word32 r4_243
	word32 r5_244
	word32 r6_245
	word32 r7_246
	word32 r8_247
	word32 r9_248
	__unlockfile(r4, out r4_243, out r5_244, out r6_245, out r7_246, out r8_247, out r9_248)
l00408208:
	r17_107 = 0xFFFFFFFF<32>
l004081A6:
	r17_107 = 0<32>
	branch Mem9[0x00430300<p32>:word32] == 0<32> l004081BA
l004081B0:
	word32 r16_237
	word32 r17_238
	r17_107 = fflush_unlocked(Mem9[0x00430300<p32>:word32], out r16_237, out r17_238)
l004081BA:
	word32 r16_117 = Mem9[__ofl_lock():word32]
l004081C4:
	branch r16_117 == 0<32> l004081D6
l004081D6:
	__ofl_unlock()
l004081DA:
	r16Out = dwLoc08_164
	r17Out = dwLoc0C_165
	return r17_107
fflush_unlocked_exit:
l004081C6:
	branch Mem9[r16_117 + 0x1C<32>:word32] >=u Mem9[r16_117 + 0x14<32>:word32] l004081C2
l004081CE:
	word32 r16_249
	word32 r17_250
	r17_107 = r17_107 | fflush_unlocked(r16_117, out r16_249, out r17_250)
l004081C2:
	r16_117 = Mem9[r16_117 + 0x38<32>:word32]


word32 fgets_unlocked(word32 r4, word32 r5, word32 r6, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r21Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r21 r3 r4 r5 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r2 r21 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r22 ra sp
fgets_unlocked_entry:
	word32 r21
	word32 r11
	word32 r12
	word32 r2
	word32 r3
	word32 r8
	word32 r9
l00408240:
	word32 r5_112
	word32 dwLoc1C_205 = r21
	word32 r19_117 = r4
	word32 r21_138 = 0<32>
	r5_112 = r5
	branch Mem19[r6 + 0x4C<32>:word32] < 0<32> l00408256
l00408250:
	word32 r4_33
	r2 = __lockfile(r6, out r3, out r4_33, out r5_112, out r8, out r9)
	r21_138 = r4_33
l00408256:
	word32 r17_134
	word32 r20_127 = r5 + 0xFFFFFFFF<32>
	word32 r17_128 = r4
	branch r5 >= 2<32> l004082BC
l004082BC:
	branch r20_127 == 0<32> l0040829C
l004082C0:
	word32 r18_61
	word32 r4_47 = Mem46[r6 + 4<32>:word32]
	word32 r5_428
	word32 r8_430
	word32 r6_429
	word32 r4_52 = memchr(r4_47, 0xA<32>, Mem46[r6 + 8<32>:word32] - r4_47, out r5_428, out r6_429, out r8_430)
	word32 r7_58 = Mem46[r6 + 4<32>:word32]
	branch r4_52 == 0<32> l00408284
l00408284:
	r18_61 = Mem46[r6 + 8<32>:word32] - r7_58
l004082D2:
	r18_61 = r4_52 - r7_58 + 1<32>
l004082D6:
	word32 r5_69 = Mem46[r6 + 4<32>:word32]
	branch CONVERT(r20_127 <u r18_61, bool, word32) == 0<32> l004082E0
l004082DC_1:
	r18_61 = r20_127
l004082E0:
	word32 r13_434
	word32 r10_433
	word32 r6_431
	word32 r7_432
	r2 = memcpy(r17_128, r5_69, r18_61, out r3, out r5_112, out r6_431, out r7_432, out r8, out r9, out r10_433, out r11, out r12, out r13_434)
	word32 r7_99 = Mem46[r6 + 4<32>:word32] + r18_61
	r17_128 = r17_128 + r18_61
	word32 r20_98 = r20_127 - r18_61
	dwLoc1C_205 = r7_99
	branch r4_52 != 0<32> l0040829C
l004082F8:
	branch r20_98 == 0<32> l0040829C
l004082FC:
	word32 r4_109
	branch r7_99 >=u Mem103[r6 + 8<32>:word32] l0040828A
l0040828A:
	word32 r7_436
	word32 r6_435
	r4_109 = __uflow(r6, out r5_112, out r6_435, out r7_436)
	branch r4_109 >= 0<32> l004082AC
l00408292:
	branch r17_128 == r4 l0040830C
l00408296:
	branch __bit(Mem103[r6:word32], 4<32>) l0040830C
l0040830C:
	r19_117 = 0<32>
l00408302:
	dwLoc1C_205 = r7_99 + 1<32>
	r4_109 = CONVERT(Mem119[r7_99:byte], byte, word32)
l004082AC:
	word32 r4_124 = r4_109 & 0xFF<32>
	Mem125[r17_128:byte] = SLICE(r4_124, byte, 0)
	r20_127 = r20_98 + 0xFFFFFFFF<32>
	r17_128 = r17_128 + 1<32>
	branch r4_124 == 0xA<32> l0040829C
l0040829C:
	branch r4 == 0<32> l004082A0
l0040829E:
	Mem132[r17_128:byte] = 0<8>
l004082A0:
	r17_134 = r19_117
	branch r21_138 == 0<32> l00408280
l004082A6:
	word32 r7_439
	word32 r4_437
	word32 r6_438
	r2 = __unlockfile(r6, out r4_437, out r5_112, out r6_438, out r7_439, out r8, out r9)
l00408260:
	word32 r7_158 = CONVERT(Mem19[r6 + 0x4A<32>:int8], int8, word32)
	Mem161[r6 + 0x4A<32>:byte] = SLICE(r7_158, byte, 0) | SLICE(r7_158, byte, 0) + 0xFF<8>
	branch r21_138 == 0<32> l00408276
l00408272:
	word32 r7_427
	word32 r6_426
	word32 r4_425
	r2 = __unlockfile(r6, out r4_425, out r5_112, out r6_426, out r7_427, out r8, out r9)
l00408276:
	r17_134 = 0<32>
	branch r5 != 0xFFFFFFFF<32> l00408280
l0040827C:
	Mem175[r4:byte] = 0<8>
	r17_134 = r4
l00408280:
	r3Out = r3
	r4Out = r17_134
	r5Out = r5_112
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	r21Out = dwLoc1C_205
	return r2
fgets_unlocked_exit:


void flockfile(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r5 r6 r7 r8
// Preserved: r16 r2 r9 ra sp
flockfile_entry:
l00408310:
l00408314:
	branch ftrylockfile(r4) == 0<32> l00408330
l00408330:
	return
flockfile_exit:
l0040831A:
	word32 r6_25 = Mem7[r4 + 0x4C<32>:word32]
	branch r6_25 == 0<32> l00408314
l00408320:
	word32 r4_45
	word32 r5_46
	word32 r8_47
	word32 r9_48
	__wait(r4 + 0x4C<32>, r4 + 0x50<32>, r6_25, 1<32>, out r4_45, out r5_46, out r8_47, out r9_48)


word32 fprintf(ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      set_socket_option.isra.0.part.1
//      main
//      fn00400B5E
//      ping4_receive_error_msg
//      ping4_parse_reply
//      fn004023F2
//      status
//      fn004032FE
//      ping6_run
// MayUse: 
// LiveOut: r6 r7
// Trashed: r25 r6 r7
// Preserved: ra sp
fprintf_entry:
	ptr32 fp
	word32 r5
l00408340:
	word32 r4_46
	word32 r5_47
	word32 r6_48
	word32 r7_49
	word32 r11_50
	word32 r14_51
	word32 r22_52
	word32 r23_53
	word32 r30_54
	vfprintf(r5, r6, out r4_46, out r5_47, out r6_48, out r7_49, out r11_50, out r14_51, out r22_52, out r23_53, out r30_54)
	r7Out = 0x40<32>
	return fp - 0x40<32>
fprintf_exit:


word32 fputc(word32 r4, word32 r5, ptr32 & r3Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7A
//      status
//      fn00402A96
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r17 r2 r3
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
fputc_entry:
	word32 r17
	word32 r2
	word32 r3
l00408380:
	word32 dwLoc0C_104 = r17
	branch Mem13[r5 + 0x4C<32>:word32] >= 0<32> l004083A2
l004083A2:
	word32 r4_26
	word32 r5_175
	word32 r9_177
	word32 r8_176
	r2 = __lockfile(r5, out r3, out r4_26, out r5_175, out r8_176, out r9_177)
	branch r4_26 == 0<32> l00408390
l004083A8:
	branch (r4 & 0xFF<32>) == CONVERT(Mem13[r5 + 0x4B<32>:int8], int8, word32) l004083DA
l004083B0:
	word32 r7_34 = Mem13[r5 + 20<i32>:word32]
	branch r7_34 >=u Mem13[r5 + 16<i32>:word32] l004083DA
l004083DA:
	__overflow(r5, r4)
l004083B8:
	Mem47[r7_34:byte] = SLICE(r4, byte, 0)
	dwLoc0C_104 = r7_34 + 1<32>
l004083C0:
	word32 r4_178
	word32 r5_179
	word32 r6_180
	word32 r7_181
	word32 r8_182
	word32 r9_183
	r2 = __unlockfile(r5, out r4_178, out r5_179, out r6_180, out r7_181, out r8_182, out r9_183)
l00408390:
	branch CONVERT(Mem13[r5 + 0x4B<32>:int8], int8, word32) != (r4 & 0xFF<32>) l004083C6
l004083C6:
	word32 r7_63 = Mem13[r5 + 20<i32>:word32]
	branch r7_63 >=u Mem13[r5 + 16<i32>:word32] l00408398
l004083CE:
	Mem68[r7_63:byte] = SLICE(r4, byte, 0)
	dwLoc0C_104 = r7_63 + 1<32>
l004083D6:
	r3Out = r3
	r17Out = dwLoc0C_104
	return r2
l00408398:
l0040839E_thunk___overflow:
	__overflow(r5, r4)
	r3Out = r3
	r17Out = r17
	return r2
fputc_exit:


word32 fputs_unlocked(word32 r4, word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00400B5A
//      ping4_run
//      fn00402126
//      fn00403098
//      ping6_run
//      __getopt_msg
//      puts
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r11 r12 r2 r3 r4 r5 r6 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
fputs_unlocked_entry:
l004083F0:
	word32 r5_64
	word32 r6_65
	word32 r7_66
	word32 r4_18 = strlen(r4, out r5_64, out r6_65, out r7_66)
	word32 r11_28
	word32 r12_29
	word32 r3_36
	word32 r4_37
	word32 r5_38
	word32 r6_39
	word32 r8_41
	word32 r2_33 = fwrite_unlocked(r4, 1<32>, r4_18, r5, out r3_36, out r4_37, out r5_38, out r6_39, out r8_41, out r11_28, out r12_29)
	r3Out = r3_36
	r4Out = -CONVERT((r4_37 ^ r4_18) >u 0<32>, bool, word32)
	r5Out = r5_38
	r6Out = r6_39
	r8Out = r8_41
	r11Out = r11_28
	r12Out = r12_29
	return r2_33
fputs_unlocked_exit:


void __do_orphaned_stdio_locks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25 r3 r6 r7
// Preserved: sp
__do_orphaned_stdio_locks_entry:
l00408410:
	word32 r7_10 = Mem0[__read_user_local() - 0xC<32>:word32]
l0040842E:
	branch r7_10 != 0<32> l0040841A
l0040841A:
	__sync(0<32>)
	Mem9[r7_10 + 0x4C<32>:byte] = 0<8>
	__sync(0<32>)
	r7_10 = Mem9[r7_10 + 0x84<32>:word32]
l00408430:
	return
__do_orphaned_stdio_locks_exit:


void __unlist_locked_file(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r6 r7
// Preserved: sp
__unlist_locked_file_entry:
l00408432:
	branch Mem0[r4 + 0x44<32>:word32] == 0<32> l0040845A
l0040843A:
	word32 r6_8 = Mem0[r4 + 0x80<32>:word32]
	word32 r7_9 = Mem0[r4 + 0x84<32>:word32]
	branch r7_9 == 0<32> l00408444
l00408440:
	Mem10[r7_9 + 0x80<32>:byte] = SLICE(r6_8, byte, 0)
l00408444:
	word32 r6_13 = Mem12[r4 + 0x80<32>:word32]
	branch r6_13 == 0<32> l0040844E
l0040844E:
	Mem16[__read_user_local() - 0xC<32>:word32] = Mem12[r4 + 0x84<32>:word32]
l0040845A:
	return
l00408448:
	Mem18[r6_13 + 0x84<32>:byte] = SLICE(r7_9, byte, 0)
	return
__unlist_locked_file_exit:


word32 ftrylockfile(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      flockfile
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r3 r4 r5 r6 r7 r8
// Preserved: sp
ftrylockfile_entry:
l0040845C:
	word32 r3_6 = __read_user_local()
	word32 r8_9 = Mem0[r3_6 - 0x94<32>:word32]
	branch r8_9 != Mem0[r4 + 0x4C<32>:word32] l00408488
l00408488:
	branch Mem0[r4 + 0x4C<32>:word32] >= 0<32> l00408494
l00408490:
	Mem11[r4 + 0x4C<32>:byte] = 0<8>
l00408494:
	branch Mem13[r4 + 0x4C<32>:word32] != 0<32> l0040847A
l0040849A:
	__sync(0<32>)
l004084A2:
	word32 r4_18 = __load_linked_32(Mem13[r4 + 0x4C<32>:word32])
	branch r4_18 != 0<32> l004084B0
l004084A8:
	branch __store_conditional_32(Mem13[r4 + 0x4C<32>:word32], r8_9) == 0<32> l004084A2
l004084B0:
	__sync(0<32>)
	branch r4_18 != 0<32> l0040847A
l004084B6:
	Mem26[r4 + 0x80<32>:byte] = 0<8>
	Mem27[r4 + 0x44<32>:byte] = 1<8>
	word32 r6_31 = Mem27[r3_6 - 0xC<32>:word32]
	Mem32[r4 + 0x84<32>:byte] = SLICE(r6_31, byte, 0)
	branch r6_31 == 0<32> l004084CE
l004084CA:
	Mem33[r6_31 + 0x80<32>:byte] = SLICE(r4, byte, 0)
l004084CE:
	Mem36[r3_6 - 0xC<32>:word32] = r4
	return r4_18
l0040846E:
	word32 r6_37 = Mem0[r4 + 0x44<32>:word32]
	branch r6_37 != 0x7FFFFFFF<32> l0040847E
l0040847E:
	Mem41[r4 + 0x44<32>:byte] = SLICE(r6_37, byte, 0) + 1<8>
	return 0<32>
l0040847A:
	return 0xFFFFFFFF<32>
ftrylockfile_exit:


word32 funlockfile(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31]
// LiveOut: r5
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
funlockfile_entry:
	word32 r5
l004084E0:
	word32 r7_10 = Mem7[r4 + 0x44<32>:word32]
	branch r7_10 == 1<32> l004084F4
l004084F4:
	__unlist_locked_file(r4)
	Mem18[r4 + 0x44<32>:byte] = 0<8>
l00408502_thunk___unlockfile:
	word32 r5_26
	word32 r4_55
	word32 r6_56
	word32 r7_57
	word32 r8_58
	word32 r9_59
	__unlockfile(r4, out r4_55, out r5_26, out r6_56, out r7_57, out r8_58, out r9_59)
	return r5_26
l004084EC:
	Mem31[r4 + 0x44<32>:byte] = SLICE(r7_10, byte, 0) + 0xFF<8>
	return r5
funlockfile_exit:


word32 __fwritex(word32 r4, word32 r5, word32 r6, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fwrite_unlocked
//      out
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r13 r17 r2 r3 r4 r5 r6 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
__fwritex_entry:
	word32 r17
	word32 r11
	word32 r12
	word32 r13
	word32 r2
	word32 r3
	word32 r8
l00408510:
	word32 r19_19 = r4
	word32 r18_21 = r5
	branch Mem13[r6 + 0x10<32>:word32] == 0<32> l00408530
l00408530:
	word32 r6_25
	word32 r7_26
	branch __towrite(r6, out r6_25, out r7_26) == 0<32> l0040851A
l00408536:
	r3Out = r3
	r4Out = 0<32>
	r5Out = r5
	r6Out = r6_25
	r7Out = r7_26
	r8Out = r8
	r11Out = r11
	r12Out = r12
	r13Out = r13
	r17Out = r17
	return r2
l0040851A:
	branch Mem13[r6 + 0x10<32>:word32] - Mem13[r6 + 0x14<32>:word32] >=u r5 l0040853A
l0040853A:
	word32 r17_41 = r5
	branch CONVERT(Mem13[r6 + 0x4B<32>:int8], int8, word32) >= 0<32> l0040854A
l0040854A:
	branch r17_41 == 0<32> l0040856A
l0040854C:
	word32 r7_43 = r17_41 + 0xFFFFFFFF<32>
	branch CONVERT(Mem13[r4 + r7_43:byte], byte, word32) != 0xA<32> l00408548
l00408548:
	r17_41 = r7_43
l00408558:
	word32 r24_147
	word32 r2_146
	word32 r15_145
	word32 r14_144
	word32 r11_142
	word32 r12_143
	word32 r9_141
	word32 r13_139
	word32 r8_140
	word32 r6_58
	word32 r7_59
	word32 r4_60
	word32 r5_61
	word32 r10_138
	word32 r3_148
	call Mem13[r6 + 0x24<32>:word32] (retsize: 0;)
		uses: r10:r10_138,r11:r11_142,r12:r12_143,r13:r13_139,r14:r14_144,r15:r15_145,r2:r2_146,r24:r24_147,r3:r3_148,r4:r6,r5:r4,r6:r17_42,r8:r8_140,r9:r9_141
		defs: r10:r10_138,r11:r11_142,r12:r12_143,r13:r13_139,r14:r14_144,r15:r15_145,r2:r2_146,r24:r24_147,r3:r3_148,r4:r4_60,r5:r5_61,r6:r6_58,r7:r7_59,r8:r8_140,r9:r9_141
	branch r4_60 >=u r17_41 l00408566
l00408566:
	r19_19 = r4 + r17_41
	r18_21 = r5 - r17_41
l00408564:
	r3Out = r3_148
	r4Out = r4_60
	r5Out = r5_61
	r6Out = r6_58
	r7Out = r7_59
	r8Out = r8_140
	r11Out = r11_142
	r12Out = r12_143
	r13Out = r13_139
	r17Out = r17
	return r2_146
l00408544:
	r17_41 = 0<32>
l0040856A:
	word32 r13_81
	word32 r6_83
	word32 r8_85
	word32 r5_87
	word32 r11_88
	word32 r12_89
	word32 r3_94
	word32 r7_207
	word32 r9_208
	word32 r10_209
	word32 r2_92 = memcpy(Mem13[r6 + 0x14<32>:word32], r19_19, r18_21, out r3_94, out r5_87, out r6_83, out r7_207, out r8_85, out r9_208, out r10_209, out r11_88, out r12_89, out r13_81)
	word32 r7_98 = Mem13[r6 + 0x14<32>:word32] + r18_21
	r3Out = r3_94
	r4Out = r18_21 + r17_41
	r5Out = r5_87
	r6Out = r6_83
	r7Out = r7_98
	r8Out = r8_85
	r11Out = r11_88
	r12Out = r12_89
	r13Out = r13_81
	r17Out = r7_98
	return r2_92
l00408524:
	word32 r6_117
	word32 r7_118
	word32 r4_119
	word32 r5_120
	word32 r10_122
	word32 r13_123
	word32 r8_124
	word32 r9_125
	word32 r11_126
	word32 r12_127
	word32 r14_128
	word32 r15_129
	word32 r2_130
	word32 r24_131
	word32 r3_132
	call Mem13[r6 + 0x24<32>:word32] (retsize: 0;)
		uses: r10:r10_122,r11:r11_126,r12:r12_127,r13:r13_123,r14:r14_128,r15:r15_129,r2:r2_130,r24:r24_131,r3:r3_132,r4:r6,r5:r4,r6:r5,r8:r8_124,r9:r9_125
		defs: r10:r10_122,r11:r11_126,r12:r12_127,r13:r13_123,r14:r14_128,r15:r15_129,r2:r2_130,r24:r24_131,r3:r3_132,r4:r4_119,r5:r5_120,r6:r6_117,r7:r7_118,r8:r8_124,r9:r9_125
	r3Out = r3_132
	r4Out = r4_119
	r5Out = r5_120
	r6Out = r6_117
	r7Out = r7_118
	r8Out = r8_124
	r11Out = r11_126
	r12Out = r12_127
	r13Out = r13_123
	r17Out = r17
	return r2_130
__fwritex_exit:


word32 fwrite_unlocked(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7A
//      __getopt_msg
//      fputs_unlocked
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11 r12 r2 r3 r4 r5 r6 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
fwrite_unlocked_entry:
l0040857C:
	word32 r16_20 = r6
	word32 r7_27 = Mem17[r7 + 0x4C<32>:word32]
	word32 r21_28 = 0<32>
	word32 r20_29 = r5 *s r6
	branch r5 != 0<32> l00408590
l0040858C_1:
	r16_20 = 0<32>
l00408590:
	branch r7_27 < 0<32> l0040859A
l00408594:
	word32 r4_37
	word32 r5_191
	word32 r9_193
	word32 r8_192
	word32 r3_190
	__lockfile(r7, out r3_190, out r4_37, out r5_191, out r8_192, out r9_193)
	r21_28 = r4_37
l0040859A:
	word32 r4_53
	word32 r11_57
	word32 r12_58
	word32 r17_62
	word32 r3_65
	word32 r7_188
	word32 r13_189
	word32 r5_172
	word32 r6_174
	word32 r8_178
	word32 r2_164 = __fwritex(r4, r20_29, r7, out r3_65, out r4_53, out r5_172, out r6_174, out r7_188, out r8_178, out r11_57, out r12_58, out r13_189, out r17_62)
	branch r21_28 == 0<32> l004085AA
l004085A6:
	word32 r4_194
	word32 r7_195
	word32 r9_196
	r2_164 = __unlockfile(r17_62, out r4_194, out r5_172, out r6_174, out r7_195, out r8_178, out r9_196)
l004085AA:
	branch r20_29 == r4_53 l004085B2
l004085AE:
l004085B2:
	r3Out = r3_65
	r4Out = r16_20
	r5Out = r5_172
	r6Out = r6_174
	r8Out = r8_178
	r11Out = r11_57
	r12Out = r12_58
	return r2_164
fwrite_unlocked_exit:


word32 _IO_getc(word32 r4, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __get_resolv_conf
// MayUse:  r4:[0..31]
// LiveOut: r17 r4
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
_IO_getc_entry:
	word32 r17
l004085C0:
	word32 r17_31
	word32 dwLoc0C_76 = r17
	branch Mem9[r4 + 0x4C<32>:word32] >= 0<32> l004085DE
l004085DE:
	word32 r4_17
	word32 r3_122
	word32 r5_123
	word32 r8_124
	word32 r9_125
	__lockfile(r4, out r3_122, out r4_17, out r5_123, out r8_124, out r9_125)
	branch r4_17 == 0<32> l004085CC
l004085E4:
	word32 r7_23 = Mem9[r4 + 4<32>:word32]
	branch r7_23 >=u Mem9[r4 + 8<32>:word32] l00408606
l00408606:
	word32 r5_129
	word32 r6_130
	word32 r7_131
	r17_31 = __uflow(r4, out r5_129, out r6_130, out r7_131)
l004085EC:
	dwLoc0C_76 = r7_23 + 1<32>
	r17_31 = CONVERT(Mem33[r7_23:byte], byte, word32)
l004085F4:
	word32 r4_132
	word32 r5_133
	word32 r6_134
	word32 r7_135
	word32 r8_136
	word32 r9_137
	__unlockfile(r4, out r4_132, out r5_133, out r6_134, out r7_135, out r8_136, out r9_137)
l004085CC:
	word32 r7_47 = Mem9[r4 + 4<32>:word32]
	branch r7_47 <u Mem9[r4 + 8<32>:word32] l004085FA
l004085FA:
	dwLoc0C_76 = r7_47 + 1<32>
	r17_31 = CONVERT(Mem51[r7_47:byte], byte, word32)
l00408602:
	r17Out = dwLoc0C_76
	return r17_31
l004085D4:
l004085DA_thunk___uflow:
	word32 r5_126
	word32 r6_127
	word32 r7_128
	word32 r4_70 = __uflow(r4, out r5_126, out r6_127, out r7_128)
	r17Out = r17
	return r4_70
_IO_getc_exit:


word32 __ofl_lock()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fflush_unlocked
//      __stdio_exit_needed
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__ofl_lock_entry:
l00408610:
	__lock(0x004329A0<p32>)
	return 0x004329A8<p32>
__ofl_lock_exit:


void __ofl_unlock()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fflush_unlocked
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__ofl_unlock_entry:
l00408620:
l00408624_thunk___unlock:
	__unlock(0x004329A0<p32>)
	return
__ofl_unlock_exit:


word32 perror(word32 r4, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_install_filter
//      ping4_run
//      fn00401284
//      ping4_receive_error_msg
//      fn00401E7A
//      main_loop
//      ping6_install_filter
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r11 r12 r17 r2 r3 r5 r6 r7 r8
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
perror_entry:
	word32 r17
l00408630:
	word32 r19_186
	word32 r16_15 = Mem13[0x00412EF0<p32>:word32]
	word32 r4_20
	__errno_location(out r4_20)
	word32 r4_24
	strerror(Mem13[r4_20:word32], out r4_24)
	branch Mem13[r16_15 + 0x4C<32>:word32] < 0<32> l00408694
l00408694:
	r19_186 = 0<32>
	branch r4 != 0<32> l00408656
l00408698:
	word32 r11_41
	word32 r12_42
	word32 r5_288
	word32 r6_289
	word32 r7_290
	word32 r3_291
	word32 r4_292
	word32 r5_293
	word32 r6_294
	word32 r8_295
	fwrite_unlocked(r4_24, strlen(r4_24, out r5_288, out r6_289, out r7_290), 1<32>, r16_15, out r3_291, out r4_292, out r5_293, out r6_294, out r8_295, out r11_41, out r12_42)
l004086AE_thunk_fputc:
	word32 r3_68
	word32 r17_75
	word32 r2_66 = fputc(0xA<32>, r16_15, out r3_68, out r17_75)
	r3Out = r3_68
	r5Out = r5_70
	r6Out = r6_71
	r7Out = r7_72
	r8Out = r8_73
	r11Out = r11_41
	r12Out = r12_42
	r17Out = r17_75
	return r2_66
l0040864E:
	word32 r4_80
	word32 r3_259
	word32 r5_260
	word32 r8_261
	word32 r9_262
	__lockfile(r16_15, out r3_259, out r4_80, out r5_260, out r8_261, out r9_262)
	r19_186 = r4_80
	branch r4 == 0<32> l00408674
l00408656:
	branch CONVERT(Mem13[r4:byte], byte, word32) == 0<32> l00408674
l0040865A:
	word32 r5_263
	word32 r6_264
	word32 r7_265
	word32 r3_266
	word32 r4_267
	word32 r5_268
	word32 r6_269
	word32 r8_270
	word32 r11_271
	word32 r12_272
	fwrite_unlocked(r4, strlen(r4, out r5_263, out r6_264, out r7_265), 1<32>, r16_15, out r3_266, out r4_267, out r5_268, out r6_269, out r8_270, out r11_271, out r12_272)
	word32 r3_273
	word32 r17_274
	fputc(0x3A<32>, r16_15, out r3_273, out r17_274)
	word32 r3_275
	word32 r17_276
	fputc(0x20<32>, r16_15, out r3_275, out r17_276)
l00408674:
	word32 r11_157
	word32 r12_158
	word32 r5_277
	word32 r6_278
	word32 r7_279
	word32 r3_280
	word32 r4_281
	word32 r5_282
	word32 r6_283
	word32 r8_284
	fwrite_unlocked(r4_24, strlen(r4_24, out r5_277, out r6_278, out r7_279), 1<32>, r16_15, out r3_280, out r4_281, out r5_282, out r6_283, out r8_284, out r11_157, out r12_158)
	word32 r3_178
	word32 r17_285
	word32 r2_176 = fputc(0xA<32>, r16_15, out r3_178, out r17_285)
	branch r19_186 == 0<32> l004086B2
l004086B2:
	r3Out = r3_178
	r5Out = r5_180
	r6Out = r6_181
	r7Out = r7_182
	r8Out = r8_183
	r11Out = r11_157
	r12Out = r12_158
	r17Out = r17
	return r2_176
l0040868A:
l00408690_thunk___unlockfile:
	word32 r7_205
	word32 r5_208
	word32 r6_209
	word32 r8_210
	word32 r4_286
	word32 r9_287
	word32 r2_206 = __unlockfile(r16_15, out r4_286, out r5_208, out r6_209, out r7_205, out r8_210, out r9_287)
	r3Out = r3_178
	r5Out = r5_208
	r6Out = r6_209
	r7Out = r7_205
	r8Out = r8_210
	r11Out = r11_157
	r12Out = r12_158
	r17Out = r17
	return r2_206
perror_exit:


word32 printf(word32 r4, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_echo_reply
//      pr_options
//      fn00401594
//      pr_iph
//      fn00401B94
//      pinger
//      fn0040212A
//      gather_statistics
//      finish
//      fn004029C6
//      pr_icmph
//      pr_echo_reply
//      fn0040309C
//      fn00403C9E
// MayUse:  r4:[0..31]
// LiveOut: r11 r14 r22 r23 r3 r30 r4 r5 r6 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
printf_entry:
	ptr32 fp
l004086C0:
	word32 r11_35
	word32 r14_38
	word32 r22_41
	word32 r23_42
	word32 r30_46
	word32 r4_47
	word32 r5_48
	word32 r6_49
	word32 r7_50
	word32 r3_45 = vfprintf(r4, fp - 0x40<32>, out r4_47, out r5_48, out r6_49, out r7_50, out r11_35, out r14_38, out r22_41, out r23_42, out r30_46)
	r4Out = r4_47
	r5Out = r5_48
	r6Out = r6_49
	r7Out = r7_50
	r11Out = r11_35
	r14Out = r14_38
	r22Out = r22_41
	r23Out = r23_42
	r30Out = r30_46
	return r3_45
printf_exit:


void _IO_putc(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __getopt_msg
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r18 r19 ra sp
_IO_putc_entry:
l00408700:
	branch Mem13[r5 + 0x4C<32>:word32] >= 0<32> l00408722
l00408722:
	word32 r4_26
	word32 r9_176
	word32 r8_175
	word32 r5_174
	word32 r3_173
	__lockfile(r5, out r3_173, out r4_26, out r5_174, out r8_175, out r9_176)
	branch r4_26 == 0<32> l00408710
l00408728:
	branch (r4 & 0xFF<32>) == CONVERT(Mem13[r5 + 0x4B<32>:int8], int8, word32) l0040875A
l00408730:
	word32 r7_34 = Mem13[r5 + 20<i32>:word32]
	branch r7_34 >=u Mem13[r5 + 16<i32>:word32] l0040875A
l0040875A:
	__overflow(r5, r4)
l00408738:
	Mem47[r7_34:byte] = SLICE(r4, byte, 0)
l00408740:
	word32 r4_177
	word32 r5_178
	word32 r6_179
	word32 r7_180
	word32 r8_181
	word32 r9_182
	__unlockfile(r5, out r4_177, out r5_178, out r6_179, out r7_180, out r8_181, out r9_182)
l00408710:
	branch CONVERT(Mem13[r5 + 0x4B<32>:int8], int8, word32) != (r4 & 0xFF<32>) l00408746
l00408746:
	word32 r7_63 = Mem13[r5 + 20<i32>:word32]
	branch r7_63 >=u Mem13[r5 + 16<i32>:word32] l00408718
l0040874E:
	Mem68[r7_63:byte] = SLICE(r4, byte, 0)
l00408756:
	return
l00408718:
l0040871E_thunk___overflow:
	__overflow(r5, r4)
	return
_IO_putc_exit:


word32 putchar(word32 r4, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401766
//      ping4_parse_reply
//      fill
//      fn00402A96
//      fn004033EE
// MayUse:  r4:[0..31]
// LiveOut: r17 r3
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
putchar_entry:
l00408770:
	word32 r5_5 = Mem0[0x00412EF4<p32>:word32]
l00408776_thunk_fputc:
	word32 r3_9
	word32 r17_16
	fputc(r4, r5_5, out r3_9, out r17_16)
	r17Out = r17_16
	return r3_9
putchar_exit:


void puts(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401762
//      gather_statistics
//      niquery_set_qtype
//      niquery_option_subject_addr_handler
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
puts_entry:
l00408780:
	word32 r16_13 = Mem11[0x00412EF4<p32>:word32]
	word32 r18_17 = 0<32>
	branch Mem11[r16_13 + 0x4C<32>:word32] < 0<32> l0040879A
l00408794:
	word32 r4_22
	word32 r5_174
	word32 r8_175
	word32 r9_176
	word32 r3_173
	__lockfile(r16_13, out r3_173, out r4_22, out r5_174, out r8_175, out r9_176)
	r18_17 = r4_22
l0040879A:
	word32 r4_45
	word32 r11_171
	word32 r12_172
	word32 r6_169
	word32 r8_170
	word32 r3_167
	word32 r5_168
	fputs_unlocked(r4, r16_13, out r3_167, out r4_45, out r5_168, out r6_169, out r8_170, out r11_171, out r12_172)
	branch r4_45 < 0<32> l004087C0
l004087A6:
	branch CONVERT(Mem11[r16_13 + 0x4B<32>:int8], int8, word32) == 0xA<32> l004087CE
l004087AE:
	word32 r7_55 = Mem11[r16_13 + 20<i32>:word32]
	branch r7_55 >=u Mem11[r16_13 + 16<i32>:word32] l004087CE
l004087CE:
	__overflow(r16_13, 0xA<32>)
l004087B6:
	Mem70[r7_55:byte] = 0xA<8>
l004087C0:
	branch r18_17 == 0<32> l004087CA
l004087C6:
	word32 r9_182
	word32 r6_179
	word32 r7_180
	word32 r8_181
	word32 r4_177
	word32 r5_178
	__unlockfile(r16_13, out r4_177, out r5_178, out r6_179, out r7_180, out r8_181, out r9_182)
l004087CA:
	return
puts_exit:


void setbuf(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: sp
setbuf_entry:
l004087E0:
	word32 r6_10 = 2<32>
	branch r5 == 0<32> l004087EA
l004087E6_1:
	r6_10 = 0<32>
l004087EA:
l004087EA_thunk_setvbuf:
	setvbuf(r4, r6_10)
	return
setbuf_exit:


void setvbuf(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setbuf
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r25 r4 r7
// Preserved: sp
setvbuf_entry:
l004087F0:
	Mem6[r4 + 0x4B<32>:byte] = 0xFF<8>
	branch r6 != 2<32> l00408808
l00408808:
	branch r6 != 1<32> l004087FC
l0040880C:
	Mem9[r4 + 0x4B<32>:byte] = 0xA<8>
l004087FA:
l004087FC:
	return
setvbuf_exit:


word32 snprintf(word32 r4, word32 r5, word32 r6, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pr_addr
//      fn00401590
//      inet_ntop
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r22 r23 r30 r4
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
snprintf_entry:
	ptr32 fp
l00408820:
	word32 r22_46
	word32 r23_47
	word32 r30_48
	word32 r5_66
	word32 r7_67
	word32 r4_40 = vsnprintf(r4, r5, r6, fp - 0x40<32>, out r5_66, out r7_67, out r22_46, out r23_47, out r30_48)
	r22Out = r22_46
	r23Out = r23_47
	r30Out = r30_48
	return r4_40
snprintf_exit:


word32 sprintf(word32 r4, word32 r5, ptr32 & r7Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r23 r30 r5 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
sprintf_entry:
	ptr32 fp
l00408860:
	word32 r23_39
	word32 r30_43
	word32 r7_47
	word32 r5_45 = vsprintf(r4, r5, fp - 0x40<32>, out r7_47, out r23_39, out r30_43)
	r7Out = r7_47
	r23Out = r23_39
	r30Out = r30_43
	return r5_45
sprintf_exit:


word32 __isoc99_sscanf(word32 r0, word32 r4, word32 r5, word32 r19, word32 r20, word32 r21, ptr32 & r4Out, ptr32 & r18Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fill
// MayUse:  r0:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r18 r19 r3 r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r18 r19 r2 r20 r21 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__isoc99_sscanf_entry:
	ptr32 fp
l004088A0:
	word32 r18_43
	word32 r19_44
	word32 r4_54
	word32 r3_52 = __isoc99_vsscanf(r0, r4, r5, fp - 0x40<32>, r19, r20, r21, out r4_54, out r18_43, out r19_44)
	r4Out = r4_54
	r18Out = r18_43
	r19Out = r19_44
	return r3_52
__isoc99_sscanf_exit:


word32 fmt_u(word32 r4, word32 r5, word32 r6, word32 r13, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
//      fn004099EA
// MayUse:  r13:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r4 r7 r8
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
fmt_u_entry:
	word32 r11
	word32 r7
	word32 r8
l004088E0:
	word32 r16_14 = r4
	word32 r18_16 = r5
	word32 r17_18 = r6
l00408906:
	branch r18_16 != 0<32> l004088E8
l004088E8:
	word32 r12_33
	word32 r3_35
	word32 r4_36
	word32 r8_137
	word32 r2_34 = __umoddi3(r16_14, r18_16, 0xA<32>, 0<32>, r13, out r3_35, out r4_36, out r8_137, out r12_33)
	r17_18 = r17_18 + 0xFFFFFFFF<32>
	Mem43[r17_18:byte] = SLICE(r4_36, byte, 0) + 0x30<8>
	word32 r4_51
	word32 r5_52
	word32 r9_140
	word32 r6_139
	word32 r3_138
	__udivdi3(r2_34, r3_35, r16_14, r18_16, 0xA<32>, 0<32>, r12_33, out r3_138, out r4_51, out r5_52, out r6_139, out r7, out r8, out r9_140, out r11, out r13)
	r16_14 = r4_51
	r18_16 = r5_52
l00408908:
l0040891E:
	branch r16_14 != 0<32> l0040890A
l0040890A:
	r17_18 = r17_18 + 0xFFFFFFFF<32>
	Mem70[r17_18:byte] = SLICE(r16_14 % 0xA<32>, byte, 0) + 0x30<8>
	r7 = r16_14
l00408920:
	r7Out = r7
	r8Out = r8
	r11Out = r11
	return r17_18
fmt_u_exit:


word32 getint(word32 r4, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      printf_core
// MayUse:  r4:[0..31]
// LiveOut: r4 r7
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
getint_entry:
l00408924:
	word32 r7_10 = 0<32>
l0040892E:
	word32 r8_7 = Mem6[r4:word32]
	word32 r6_8 = CONVERT(Mem6[r8_7:byte], byte, word32)
	branch r6_8 >=u 0xFFFFFFC6<32> l0040895E
l0040895E:
	r7Out = r7_10
	return r7_10
getint_exit:
l0040893C:
	branch r7_10 >u 0xCCCCCCC<32> l00408928
l00408946:
	branch r7_10 *s 0xFFFFFFF6<32> + 0x7FFFFFFF<32> < r6_8 + 0xFFFFFFD0<32> l00408928
l00408928:
	r7_10 = 0xFFFFFFFF<32>
l00408956:
	r7_10 = r6_8 + 0xFFFFFFD0<32> + r7_10 *s 0xA<32>
l0040892A:
	Mem25[r4:word32] = r8_7 + 1<32>


word32 out(word32 r4, word32 r5, word32 r6, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r13Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      pad
//      printf_core
//      fn00409170
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r13 r17 r5 r6 r7
// Trashed: r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
out_entry:
	word32 r13
	word32 r17
l00408962:
	word32 r6_11 = Mem0[r4:word32]
	branch !__bit(r6_11, 5<32>) l00408974
l00408974:
	r6Out = r6_11
	r7Out = r4
	r13Out = r13
	r17Out = r17
	return r6
l0040896E:
l00408970_thunk___fwritex:
	word32 r6_15
	word32 r7_16
	word32 r13_20
	word32 r17_23
	word32 r5_27
	word32 r3_64
	word32 r4_65
	word32 r8_66
	word32 r11_67
	word32 r12_68
	__fwritex(r5, r6, r4, out r3_64, out r4_65, out r5_27, out r6_15, out r7_16, out r8_66, out r11_67, out r12_68, out r13_20, out r17_23)
	r6Out = r6_15
	r7Out = r7_16
	r13Out = r13_20
	r17Out = r17_23
	return r5_27
out_exit:


word32 pop_arg(word32 r5, word32 r6, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      printf_core
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r6 r7
// Trashed: r25 r5 r6 r7
// Preserved: sp
pop_arg_entry:
	word32 r7
l00408976:
	branch r5 >=u 0x1D<32> l00408A76
l0040897A:
	branch r5 >=u 0xFFFFFFE5<32> l00408A76
l00408A76:
	r7Out = r7
	return r6
l00408982:
	word32 r5_8 = Mem0[0x00412EF8<p32> + (r5 + 0xFFFFFFF7<32>) * 4<32>:word32]
	word32 r7_12
	word32 r6_13
	call r5_8 (retsize: 0;)
		uses: r5:r5_8,r6:r6,r7:CONVERT(Mem0[r6 + 0xC<32>:int8], int8, word32)
		defs: r6:r6_13,r7:r7_12
	r7Out = r7_12
	return r6_13
pop_arg_exit:


word32 pad(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      printf_core
//      fn00409170
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r13 r5 r6 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
pad_entry:
	struct <anonymous> tLoc0110
	word32 r13
l00408B22:
	word32 r17_14 = r4
	branch (r8 & 0x120000<32>) != 0<32> l00408B6E
l00408B34:
	branch r7 >= r6 l00408B6E
l00408B38:
	word32 r16_20 = r6 - r7
	word32 r7_21 = 0x100<32>
	branch CONVERT(r16_20 <u 0x101<32>, bool, word32) == 0<32> l00408B48
l00408B44_1:
	r7_21 = r16_20
l00408B48:
	word32 r6_142
	word32 r7_143
	word32 r8_144
	word32 r9_145
	word32 r10_146
	memset(&tLoc0110, r5, r7_21, out r6_142, out r7_143, out r8_144, out r9_145, out r10_146)
	r16_40 = r16_20
l00408B5E:
	word32 r16_40
	branch r16_40 >u 0xFF<32> l00408B52
l00408B52:
	word32 r6_147
	word32 r7_148
	word32 r13_149
	out(r17_14, &tLoc0110, 0x100<32>, out r6_147, out r7_148, out r13_149, out r17_14)
	r16_40 = r16_40 + 0xFFFFFF00<32>
l00408B66:
	word32 r17_150
	r5 = out(r17_14, &tLoc0110, r16_20 & 0xFF<32>, out r6, out r7, out r13, out r17_150)
l00408B6E:
	r6Out = r6
	r7Out = r7
	r13Out = r13
	return r5
pad_exit:


word32 printf_core(word32 r4, word32 r6, word32 r7, word32 r8, word32 r21, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r16Out, ptr32 & r17Out, ptr32 & r18Out, ptr32 & r19Out, ptr32 & r20Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vfprintf
// MayUse:  r21:[0..31] r4:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11 r14 r16 r17 r18 r19 r20 r22 r23 r3 r30 r4 r5 r6 r7 sp
// Trashed: r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9 sp
// Preserved:
printf_core_entry:
l00408B72:
l00408B84_thunk_fn00408B86:
	word32 r11_39
	word32 r14_42
	word32 r17_44
	word32 r4_49
	word32 r5_50
	word32 r6_51
	word32 r7_52
	word32 r20_55
	word32 r22_56
	word32 r18_57
	word32 r19_58
	word32 r23_59
	word32 r30_60
	word32 r16_61
	word32 r3_48 = fn00408B86(r6, r4, r21, 0<32>, r6, 0<32>, r8, r7, out r4_49, out r5_50, out r6_51, out r7_52, out r11_39, out r14_42, out r16_61, out r17_44, out r18_57, out r19_58, out r20_55, out r22_56, out r23_59, out r30_60)
	r4Out = r4_49
	r5Out = r5_50
	r6Out = r6_51
	r7Out = r7_52
	r11Out = r11_39
	r14Out = r14_42
	r16Out = r16_61
	r17Out = r17_44
	r18Out = r18_57
	r19Out = r19_58
	r20Out = r20_55
	r22Out = r22_56
	r23Out = r23_59
	r30Out = r30_60
	return r3_48
printf_core_exit:


word32 fn00408B86(word32 r6, word32 r16, word32 r21, word32 r22, word32 dwArg0C, word32 dwArg1C, word32 dwArg20, word32 dwArg28, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r16Out, ptr32 & r17Out, ptr32 & r18Out, ptr32 & r19Out, ptr32 & r20Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      printf_core
//      fn00408D8E
//      fn00409170
// MayUse:  r16:[0..31] r21:[0..31] r22:[0..31] r6:[0..31] Stack +000C:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0028:[0..31]
// LiveOut: r11 r14 r16 r17 r18 r19 r20 r22 r23 r3 r30 r4 r5 r6 r7
// Trashed: r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00408B86_entry:
	ptr32 fp
	struct <anonymous> tArg4C
	word32 dwArg04
	word32 r18
	word32 r19
	word32 r20
	word32 r23
	word32 r30
l00408B86:
	branch 0x7FFFFFFF<32> - r6 < r22 l00408D8E
l00408B90_thunk_fn00408D8E:
	word32 r14_725
	word32 r7_12
	word32 r6_13
	word32 r5_14
	word32 r4_15
	word32 r11_722
	word32 r3_729 = fn00408D8E(out r4_15, out r5_14, out r6_13, out r7_12, out r11_722, out r14_725)
	r4Out = r4_15
	r5Out = r5_14
	r6Out = r6_13
	r7Out = r7_12
	r11Out = r11_722
	r14Out = r14_725
	r16Out = r16
	r17Out = dwArg04
	r18Out = r18
	r19Out = r19
	r20Out = r20
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_729
l00408B94:
	word32 r17_145
	word32 r7_18 = r6 + r22
	dwArg04 = r7_18
	word32 r7_21 = CONVERT(Mem19[r21:byte], byte, word32)
	branch r7_21 != 0<32> l00408BCC
l00408BCC:
	word32 r7_26 = CONVERT(Mem23[r22:byte], byte, word32)
	branch r7_26 == 0<32> l00408BEE
l00408BD4:
	branch r7_26 != 0x25<32> l00408BC8
l00408BC8:
	r22 = r22 + 1<32>
	Mem28[&tArg4C:word32] = r22
l00408BD8:
l00408BE0:
	r6 = CONVERT(Mem30[r7_26:byte], byte, word32)
	branch r6 != 0x25<32> l00408BEE
l00408BE8:
	r6 = CONVERT(Mem30[r7_26 + 1<32>:byte], byte, word32)
	branch r6 == 0x25<32> l00408BDA
l00408BDA:
	r7_26 = r7_26 + 2<32>
	Mem38[&tArg4C:word32] = r7_26
	r22 = r22 + 1<32>
l00408BEE:
	r20 = 0x7FFFFFFF<32>
	r22 = r22 - r21
	word32 r7_49 = 0x7FFFFFFF<32> - r7_26
	branch r7_49 < r22 l00408D8E
l00408C00_thunk_fn00408D8E:
	word32 r7_52
	word32 r6_53
	word32 r5_54
	word32 r4_55
	word32 r14_743
	word32 r11_740
	word32 r3_747 = fn00408D8E(out r4_55, out r5_54, out r6_53, out r7_52, out r11_740, out r14_743)
	r4Out = r4_55
	r5Out = r5_54
	r6Out = r6_53
	r7Out = r7_52
	r11Out = r11_740
	r14Out = r14_743
	r16Out = r16
	r17Out = r7_18
	r18Out = r18
	r19Out = r19
	r20Out = 0x7FFFFFFF<32>
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_747
l00408C04:
	word32 r7_68
	r7_68 = r7_49
	branch r16 == 0<32> l00408C0C
l00408C06:
	word32 r17_1158
	word32 r13_1157
	out(r16, r21, r22, out r6, out r7_68, out r13_1157, out r17_1158)
l00408C0C:
	branch r22 != 0<32> l00408B86
l00408C10:
	word32 r7_102
	word32 r19_86 = CONVERT(Mem50[r7_68 + 1<32>:byte], byte, word32)
	r19 = r19_86 + 0xFFFFFFD0<32>
	branch r19_86 >=u 0xFFFFFFC6<32> l00408D20
l00408C1C:
	branch CONVERT(Mem50[r7_68 + 2<32>:byte], byte, word32) != 0x24<32> l00408D20
l00408D20:
	r7_102 = r7_68 + 1<32>
	Mem93[&tArg4C:word32] = r7_102
	r19 = 0xFFFFFFFF<32>
l00408C22:
	Mem95[&tArg4C:word32] = r7_68 + 3<32>
	r7_102 = 1<32>
	dwArg1C = 1<32>
l00408C2A:
l00408C2C:
	word32 r17_101 = Mem100[&tArg4C:word32]
	word32 r4_103 = CONVERT(Mem100[r7_102:byte], byte, word32)
	branch r4_103 >=u 0xFFFFFFC0<32> l00408C46
l00408C38:
	branch !__bit(0x12889<32> >>u r4_103 + 0xFFFFFFE0<32>, 0<32>) l00408D28
l00408D28:
	r7_102 = r7_102 + 1<32>
	Mem111[&tArg4C:word32] = r7_102
l00408C46:
	word32 r7_118
	branch r4_103 != 0x2A<32> l00408D82
l00408D82:
	r4_103 = getint(&tArg4C, out r7_118)
	branch r4_103 >= 0<32> l00408C96
l00408D8A_thunk_fn00408D8E:
	word32 r7_123
	word32 r6_124
	word32 r5_125
	word32 r4_126
	word32 r11_129
	word32 r14_132
	word32 r3_136 = fn00408D8E(out r4_126, out r5_125, out r6_124, out r7_123, out r11_129, out r14_132)
	r4Out = r4_126
	r5Out = r5_125
	r6Out = r6_124
	r7Out = r7_123
	r11Out = r11_129
	r14Out = r14_132
	r16Out = r16
	r17Out = r17_101
	r18Out = r18
	r19Out = r19
	r20Out = 0x7FFFFFFF<32>
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_136
l00408C4A:
	word32 r6_140 = CONVERT(Mem100[r7_102 + 1<32>:byte], byte, word32)
	branch r6_140 >=u 0xFFFFFFC6<32> l00408D36
l00408C54:
	branch CONVERT(Mem100[r7_102 + 2<32>:byte], byte, word32) != 0x24<32> l00408D36
l00408D36:
	r17_145 = dwArg1C
	branch r7_102 == 0<32> l00408D48
l00408D48:
	branch r16 == 0<32> l00408D6E
l00408D4C:
	word32 r7_165
	word32 r5_155 = CONVERT(Mem147[r7_102 + 0xC<32>:int8], int8, word32)
	branch r5_155 <= 0<32> l00408D76
l00408D56:
	word32 r6_158 = CONVERT(SLICE(r5_155, byte, 0) + 0xFC<8>, byte, int32)
	Mem159[r7_102 + 0xC<32>:byte] = SLICE(r6_158, byte, 0)
	branch r6_158 < 0<32> l00408D76
l00408D76:
	r7_165 = Mem161[r7_102:word32]
l00408D66:
	r7_165 = Mem159[r7_102 + 4<32>:word32] - r5_155
l00408D6A:
	r7_102 = Mem171[r7_165:word32]
l00408D6E:
	r7_118 = r7_102 + 1<32>
	Mem180[&tArg4C:word32] = r7_118
l00408C5A:
	Mem184[r4_103 + (r6_140 + 0x3FFFFFD0<32>) * 4<32>:word32] = 0xA<32>
	Mem189[&tArg4C:word32] = r7_102 + 3<32>
	r7_118 = 1<32>
	dwArg1C = 1<32>
l00408C82:
	branch r7_118 >= 0<32> l00408C96
l00408C88:
	r7_118 = -8192<i32>
l00408C96:
	r30 = 0<32>
	r18 = 0xFFFFFFFF<32>
	branch CONVERT(Mem204[r7_118:byte], byte, word32) != 0x2E<32> l00408CE2
l00408CA2:
	branch CONVERT(Mem204[r7_118 + 1<32>:byte], byte, word32) != 0x2A<32> l00408DD0
l00408DD0:
	Mem213[&tArg4C:word32] = r7_118 + 1<32>
	r30 = 1<32>
	r18 = getint(&tArg4C, out r7_118)
l00408CA8:
	word32 r6_222 = CONVERT(Mem204[r7_118 + 2<32>:byte], byte, word32)
	branch r6_222 >=u 0xFFFFFFC6<32> l00408D96
l00408CB2:
	branch CONVERT(Mem204[r7_118 + 3<32>:byte], byte, word32) != 0x24<32> l00408D96
l00408D96:
	r17_145 = dwArg1C
	branch r7_118 != 0<32> l00408D3A
l00408D9A:
	r18 = 0<32>
	branch r16 == 0<32> l00408DBE
l00408D9E:
	word32 r5_237 = CONVERT(Mem204[r7_118 + 0xC<32>:int8], int8, word32)
	branch r5_237 <= 0<32> l00408DC4
l00408DA8:
	word32 r6_240 = CONVERT(SLICE(r5_237, byte, 0) + 0xFC<8>, byte, int32)
	Mem241[r7_118 + 0xC<32>:byte] = SLICE(r6_240, byte, 0)
	branch r6_240 < 0<32> l00408DC4
l00408DC4:
	r7_118 = Mem243[r7_118:word32]
l00408DB8:
	r7_118 = Mem241[r7_118 + 4<32>:word32] - r5_237
l00408DBC:
	r18 = Mem253[r7_118:word32]
l00408DBE:
	r7_118 = r7_118 + 2<32>
l00408CB8:
	Mem270[r4_103 + (r6_222 + 0x3FFFFFD0<32>) * 4<32>:word32] = 0xA<32>
	r7_118 = r7_118 + 4<32>
	r18 = Mem270[(CONVERT(Mem270[r7_118 + 2<32>:byte], byte, word32) + 0x1FFFFFD0<32> << 3<8>) + 0xA<32>:word32]
l00408CD8:
	Mem282[&tArg4C:word32] = r7_118
	r30 = ~r18 >>u 0x1F<32>
l00408CE2:
	r23 = 0<32>
l00408CE4:
	r17_145 = Mem286[&tArg4C:word32]
	branch CONVERT(Mem286[r7_118:byte], byte, word32) >=u 0xFFFFFF85<32> l00408D3A
l00408CF0:
	Mem293[&tArg4C:word32] = r7_118 + 1<32>
	r6 = CONVERT(Mem293[r7_118:byte], byte, word32)
	word32 r5_300 = CONVERT(Mem293[r23 *s 0x3A<32> + 0x00413050<p32> + r6 - 0x41<32>:byte], byte, word32)
	r7_118 = r5_300 + 0xFFFFFFFF<32>
	branch r5_300 <u 0xFFFFFFF7<32> l00408DE2
l00408DE2:
	r23 = r5_300
l00408D10:
	branch r5_300 == 0<32> l00408D3A
l00408D12:
	branch r5_300 != 0x1B<32> l00408DE6
l00408DE6:
	branch r19 < 0<32> l00408E00
l00408E00:
	branch r16 != 0<32> l00408E0A
l00408E0A:
	pop_arg(r5_300, r6, out r7_118)
l00408DEA:
	Mem332[r5_300 + 0xFFFFFFFF<32> + r19 * 4<32>:word32] = r5_300
	r19 = r5_300 + 0xFFFFFFFF<32> + (r19 << 3<8>)
	r6 = Mem332[r19:word32]
	r7_118 = Mem332[r19 + 4<i32>:word32]
l00408D16:
	branch r19 >= 0<32> l00408D3A
l00408D1A:
	branch r16 != 0<32> l00408E12
l00408E12:
	word32 r17_344 = Mem342[&tArg4C:word32]
	word32 r19_347 = CONVERT(Mem342[r7_118 - 1<32>:byte], byte, word32)
	branch r23 == 0<32> l00408E26
l00408E1C:
	branch (r19_347 & 0xF<32>) != 3<32> l00408E26
l00408E22:
	r19_347 = __ins(r19_347, 0<32>, 5<32>, 1<32>)
l00408E26:
	branch __bit(r17_344, 0xD<32>) l00408E2E
l00408E2A:
	r17_344 = __ins(r17_344, 0<32>, 0<32>, 1<32>)
l00408E2E:
	word32 r7_356 = r19_347 + 0xFFFFFFBF<32>
	branch r7_356 <u 0x38<32> l00408E3A
l00408E3A:
	word32 r7_364
	word32 r6_365
	word32 r5_366
	word32 r4_367
	word32 r11_370
	word32 r14_373
	word32 r3_377
	call Mem342[0x00412F40<p32> + r7_356 * 4<32>:word32] (retsize: 0;)
		uses: r6:0x00412F40<p32>,Stack +0004:r7_18,Stack +000C:dwArg0C,Stack +001C:dwArg1C_804,Stack +0020:dwArg20,Stack +0028:dwArg28,Stack +004C:tArg4C
		defs: r11:r11_370,r14:r14_373,r3:r3_377,r4:r4_367,r5:r5_366,r6:r6_365,r7:r7_364
	r4Out = r4_367
	r5Out = r5_366
	r6Out = r6_365
	r7Out = r7_364
	r11Out = r11_370
	r14Out = r14_373
	r16Out = r16
	r17Out = r17_344
	r18Out = r18
	r19Out = r19_347
	r20Out = 0x7FFFFFFF<32>
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_377
l00408E36:
l004099D2:
	r19 = fp + 0xB8<32> - r21
	r23 = 0x00411FF4<p32>
	branch CONVERT(r18 < r19, bool, word32) == 0<32> l004099E4
l004099E0_1:
	r18 = r19
l004099E4:
	r30 = r18
l00408FC8:
	r20 = r18 + r22
	word32 r7_442 = CONVERT(r7_356 < r20, bool, word32)
	branch r7_442 == 0<32> l00408FD8
l00408FD4_1:
	r18 = r20
l00408FD8:
	branch r7_442 < r18 l00408D8E
l00408FDA_thunk_fn00408D8E:
	word32 r7_450
	word32 r6_451
	word32 r5_452
	word32 r4_453
	word32 r11_456
	word32 r14_459
	word32 r3_463 = fn00408D8E(out r4_453, out r5_452, out r6_451, out r7_450, out r11_456, out r14_459)
	r4Out = r4_453
	r5Out = r5_452
	r6Out = r6_451
	r7Out = r7_450
	r11Out = r11_456
	r14Out = r14_459
	r16Out = r16
	r17Out = r7_49
	r18Out = r18
	r19Out = r19
	r20Out = r20
	r22Out = r22
	r23Out = 0x00411FF4<p32>
	r30Out = r18
	return r3_463
l00408FDE:
	word32 r6_1159
	word32 r7_1160
	word32 r13_1161
	pad(r16, 0x20<32>, r18, r20, r7_49, out r6_1159, out r7_1160, out r13_1161)
	word32 r17_509
	word32 r7_1163
	word32 r13_1164
	word32 r6_1162
	out(r16, 0x00411FF4<p32>, r22, out r6_1162, out r7_1163, out r13_1164, out r17_509)
	word32 r13_1167
	word32 r6_1165
	word32 r7_1166
	pad(r16, 0x30<32>, r18, r20, r17_509 ^ 0x100000<32>, out r6_1165, out r7_1166, out r13_1167)
	word32 r6_1168
	word32 r7_1169
	word32 r13_1170
	pad(r16, 0x30<32>, r18, r19, 0<32>, out r6_1168, out r7_1169, out r13_1170)
	word32 r13_1173
	word32 r17_578
	word32 r6_1171
	word32 r7_1172
	out(r16, r21, r19, out r6_1171, out r7_1172, out r13_1173, out r17_578)
	word32 r13_1175
	word32 r7_1174
	pad(r16, 0x20<32>, r18, r20, r17_578 ^ 0x2000<32>, out r6, out r7_1174, out r13_1175)
	r22 = r18
l00408D1E:
l00408BA2:
	branch r16 != 0<32> l00408E04
l00408BA2_thunk_fn00408D8E:
	word32 r7_607
	word32 r6_608
	word32 r5_609
	word32 r4_610
	word32 r11_613
	word32 r14_616
	word32 r3_620 = fn00408D8E(out r4_610, out r5_609, out r6_608, out r7_607, out r11_613, out r14_616)
	r4Out = r4_610
	r5Out = r5_609
	r6Out = r6_608
	r7Out = r7_607
	r11Out = r11_613
	r14Out = r14_616
	r16Out = r16
	r17Out = dwArg04
	r18Out = r18
	r19Out = r19
	r20Out = r20
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_620
l00408BA6:
	r17_145 = dwArg1C
	r16 = 1<32>
	branch r7_21 == 0<32> l00408E02
l00408E02:
l00408E02_thunk_fn00408D8E:
	word32 r7_627
	word32 r6_628
	word32 r5_629
	word32 r4_630
	word32 r11_633
	word32 r14_636
	word32 r3_640 = fn00408D8E(out r4_630, out r5_629, out r6_628, out r7_627, out r11_633, out r14_636)
	r4Out = r4_630
	r5Out = r5_629
	r6Out = r6_628
	r7Out = r7_627
	r11Out = r11_633
	r14Out = r14_636
	r16Out = r16
	r17Out = r17_145
	r18Out = r18
	r19Out = r19
	r20Out = r20
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_640
l00408BAE:
	word32 r5_647 = Mem19[r7_21 + r16 * 4<32>:word32]
	branch r5_647 != 0<32> l004099B4
l004099B4:
	r17_145 = dwArg0C
	r16 = r16 + 1<32>
	r6 = pop_arg(r5_647, r6, out r7_21)
	branch r16 == 0xA<32> l004099CA
l004099C6:
l00408BB6:
	r17_145 = dwArg20
	r7_21 = Mem19[r7_21 + r16 * 4<32>:word32]
	branch r7_21 != 0<32> l00408D3A
l00408D3A:
	word32 r4_1156
	__errno_location(out r4_1156)
l00408D3E_thunk_fn00408D8E:
	word32 r7_669
	word32 r6_670
	word32 r5_671
	word32 r4_672
	word32 r11_675
	word32 r14_678
	word32 r3_682 = fn00408D8E(out r4_672, out r5_671, out r6_670, out r7_669, out r11_675, out r14_678)
	r4Out = r4_672
	r5Out = r5_671
	r6Out = r6_670
	r7Out = r7_669
	r11Out = r11_675
	r14Out = r14_678
	r16Out = r16
	r17Out = r17_145
	r18Out = r18
	r19Out = r19
	r20Out = r20
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_682
l00408BBE:
	r16 = r16 + 1<32>
	branch r16 != 0xA<32> l00408BB6
l00408BC4:
l004099CA:
l004099CA_thunk_fn00408D8E:
	word32 r7_688
	word32 r6_689
	word32 r5_690
	word32 r4_691
	word32 r11_694
	word32 r14_697
	word32 r3_701 = fn00408D8E(out r4_691, out r5_690, out r6_689, out r7_688, out r11_694, out r14_697)
	r4Out = r4_691
	r5Out = r5_690
	r6Out = r6_689
	r7Out = r7_688
	r11Out = r11_694
	r14Out = r14_697
	r16Out = r16
	r17Out = r17_145
	r18Out = r18
	r19Out = r19
	r20Out = r20
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return r3_701
fn00408B86_exit:


word32 fn00408D8E(ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r14Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00408B86
//      fn00409170
// MayUse: 
// LiveOut: r11 r14 r3 r4 r5 r6 r7
// Trashed: r25 r7 sp
// Preserved:
fn00408D8E_entry:
	word32 r6
	word32 r16
	word32 r21
	word32 r22
l00408D8E_thunk_fn00408B86:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg12 = <invalid>
	word32 stackArg28 = <invalid>
	word32 stackArg32 = <invalid>
	word32 stackArg40 = <invalid>
	word32 r7_22
	word32 r4_39
	word32 r5_40
	word32 r6_41
	word32 r11_42
	word32 r14_43
	word32 r16_44
	word32 r17_45
	word32 r18_46
	word32 r19_47
	word32 r20_48
	word32 r22_49
	word32 r23_50
	word32 r30_51
	fn00408B86(r6, r16, r21, r22, stackArg12, stackArg28, stackArg32, stackArg40, out r4_39, out r5_40, out r6_41, out r7_22, out r11_42, out r14_43, out r16_44, out r17_45, out r18_46, out r19_47, out r20_48, out r22_49, out r23_50, out r30_51)
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = r7_22
	r11Out = <invalid>
	r14Out = <invalid>
	return <invalid>
fn00408D8E_exit:


void fn00409170(word32 r7, word32 r13, word32 r16, word32 r18, word32 r19, word32 r20, word32 r21, word32 r22, word32 r23, word32 r30, word32 dwArg00, word32 dwArg0C, word32 dwArg10, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg28)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r13:[0..31] r16:[0..31] r18:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r22:[0..31] r23:[0..31] r30:[0..31] r7:[0..31] Stack +0000:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0028:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00409170_entry:
	ptr32 fp
l00409170:
	word32 r21_1065
	word32 r6_1471
	word32 r7_1472
	branch r7 != 0x21<32> l00409400
l00409400:
	branch CONVERT(r18 < 0<32>, bool, word32) == 0<32> l0040940A
l00409406_1:
l0040940A:
	word32 r4_24
	word32 r7_3516
	word32 r13_3519
	word32 r6_3515
	word32 r8_3517
	word32 r9_3518
	word32 r5_3514
	word32 r11_143
	word32 r2_154 = __nedf2(r23, r30, 0<32>, 0<32>, out r4_24, out r5_3514, out r6_3515, out r7_3516, out r8_3517, out r9_3518, out r11_143, out r13_3519)
	branch r4_24 == 0<32> l00409434
l00409414:
	word32 r4_49
	word32 r5_50
	word32 r10_3525
	word32 r7_3522
	word32 r3_3520
	word32 r12_3526
	word32 r14_3527
	word32 r8_3523
	word32 r6_3521
	word32 r9_3524
	r2_154 = __muldf3(r23, r30, Mem5[0x4120270<32>:word32], Mem5[0x4120274<32>:word32], out r3_3520, out r4_49, out r5_50, out r6_3521, out r7_3522, out r8_3523, out r9_3524, out r10_3525, out r11_143, out r12_3526, out r14_3527)
	r21 = r4_49
	r20 = r5_50
l00409434:
	word32 dwArg08_2195 = fp + 0xB8<32>
	branch r2_154 < 0<32> l00409444
l0040943E:
	dwArg08_2195 = fp + 0x1D8<32>
l00409444:
l00409446:
	word32 r4_81 = __fixunsdfsi(r21, r20)
	Mem88[r30:byte] = SLICE(r4_81, byte, 0)
	word32 r5_92
	word32 r5_110
	word32 r4_128
	word32 r5_129
	word32 r12_3559
	word32 r14_3560
	word32 r11_3558
	word32 r7_3554
	word32 r7_3550
	word32 r10_3557
	word32 r6_3553
	word32 r3_3552
	word32 r13_3551
	word32 r9_3556
	word32 r8_3555
	__muldf3(__subdf3(r11_143, r20, __floatunsidf(r4_81, out r5_92), r5_92, out r5_110, out r7_3550, out r13_3551), r5_110, Mem88[0x4120278<32>:word32], Mem88[0x412027C<32>:word32], out r3_3552, out r4_128, out r5_129, out r6_3553, out r7_3554, out r8_3555, out r9_3556, out r10_3557, out r11_3558, out r12_3559, out r14_3560)
	r30 = r30 + 4<32>
	word32 r18_1068 = r21
	r21 = r4_128
	r20 = r5_129
	word32 r4_148
	word32 r5_3561
	word32 r6_3562
	word32 r8_3564
	word32 r7_3563
	word32 r9_152
	word32 r13_145
	r2_154 = __nedf2(r4_128, r5_129, 0<32>, 0<32>, out r4_148, out r5_3561, out r6_3562, out r7_3563, out r8_3564, out r9_152, out r11_143, out r13_145)
	r16 = r2_154
	branch r4_148 != 0<32> l00409446
l00409484:
	word32 r5_156 = dwArg08_2195
	word32 r7_157 = 0<32>
l00409488:
	branch r2_154 > 0<32> l00409574
l00409574:
	word32 r7_160 = 0x1D<32>
	branch CONVERT(r2_154 < 0x1E<32>, bool, word32) == 0<32> l0040957E
l0040957A_1:
	r7_160 = r2_154
l0040957E:
	word32 r21_164 = r30 + 0xFFFFFFFC<32>
	word32 r3_166 = r7_160
	r20 = 0<32>
l00409586:
	branch r21_164 >=u r23 l004095A8
l004095A8:
	word32 r5_181
	word32 r4_180 = __ashldi3(Mem170[r21_164:word32], 0<32>, r3_166, out r5_181)
	word32 r20_185 = r20 + r4_180
	word32 r8_189 = CONVERT(r20_185 <u r4_180, bool, word32) + r5_181
	word32 r8_197
	word32 r12_201
	word32 r3_203
	word32 r4_204
	word32 r2_202 = __umoddi3(r20_185, r8_189, 0x3B9ACA00<32>, 0<32>, r13_145, out r3_203, out r4_204, out r8_197, out r12_201)
	Mem210[r21_164:word32] = r4_204
	r18_1068 = r8_189
	word32 r4_217
	word32 r11_3568
	word32 r8_3567
	word32 r7_3566
	word32 r6_3565
	r2_154 = __udivdi3(r2_202, r3_203, r20_185, r8_197, 0x3B9ACA00<32>, 0<32>, r12_201, out r3_166, out r4_217, out r5_156, out r6_3565, out r7_3566, out r8_3567, out r9_152, out r11_3568, out r13_145)
	r21_164 = r21_164 + 0xFFFFFFFC<32>
	r20 = r4_217
	r16 = r2_154
l0040958A:
	branch r20 == 0<32> l00409594
l0040958E:
	Mem232[r23 - 4<32>:word32] = r20
	r23 = r23 + 0xFFFFFFFC<32>
l00409594:
	branch r23 >=u r30 l004095A0
l00409598:
	word32 r7_236 = r30 + 0xFFFFFFFC<32>
	branch Mem237[r7_236:word32] == 0<32> l004095EC
l004095EC:
	r30 = r7_236
l004095A0:
	r2_154 = r2_154 - r3_166
	r7_157 = 1<32>
l0040948C:
	branch r7_157 == 0<32> l00409490
l0040948E:
l00409490:
	word32 r20_269 = r20 + 1<32>
	word32 r7_270 = 0<32>
l004094A4:
	branch r5_156 < 0<32> l004095F0
l004095F0:
	word32 r4_274 = 9<32>
	branch r5_156 < 0xFFFFFFF7<32> l004095FE
l004095FA:
	r4_274 = -r5_156
l004095FE:
	word32 r6_279 = 1<32> << r4_274
	word32 r3_280 = 0x3B9ACA00<32> >> r4_274
	word32 r6_281 = r6_279 + 0xFFFFFFFF<32>
	word32 r7_284 = r23
	word32 r21_285 = 0<32>
l00409614:
	branch r7_284 <u r30 l0040964C
l0040964C:
	word32 r8_289 = Mem288[r7_284:word32]
	Mem294[r7_284:word32] = (r8_289 >>u r4_274) + r21_285
	r21_285 = (r8_289 & r6_279 + 0xFFFFFFFF<32>) *s r3_280
	r7_284 = r7_284 + 4<32>
l00409618:
	word32 r7_301 = Mem288[r23:word32]
	branch r7_301 != 0<32> l0040961E
l0040961C:
	r23 = r23 + 4<32>
l0040961E:
	branch r21_285 == 0<32> l00409628
l00409622:
	Mem305[r30:byte] = SLICE(r21_285, byte, 0)
	r30 = r30 + 4<32>
l00409628:
	branch (r7_301 ^ 0x66<32>) == 0<32> l00409634
l00409630_1:
	r6_281 = r23
l00409634:
	branch r20_269 >= r30 - r6_281 >> 2<32> l00409646
l00409642:
	r30 = r6_281 + (r20_269 << 2<32>)
l00409646:
	r5_156 = r5_156 + r4_274
	r7_270 = 1<32>
l004094A8:
	branch r7_270 == 0<32> l004094AC
l004094AA:
l004094AC:
	word32 r21_357 = 0<32>
	branch r23 >=u r30 l004094C8
l004094B2:
	word32 r21_371 = r7_270 - r23
	word32 r6_369 = Mem364[r23:word32]
	r7_270 = 0xA<32>
	r21_357 = (r21_371 >> 2<32>) + ((r21_371 >> 2<32>) << 3<8>)
l004094C4:
	branch r6_369 >=u r7_270 l00409664
l00409664:
	r5_156 = 0xA<32>
	r21_357 = r21_357 + 1<32>
	r7_270 = r7_270 *s 0xA<32>
l004094C8:
	word32 r6_387 = r21_357
	branch (r7_270 ^ 0x66<32>) != 0<32> l004094D6
l004094D2_1:
	r6_387 = 0<32>
l004094D6:
	word32 r7_404 = r18_1068 - r6_387
	word32 r6_405 = 0<32>
	branch r5_156 != 0x27<32> l004094E2
l004094DE:
	r6_405 = CONVERT(r18_1068 >u 0<32>, bool, word32)
l004094E2:
	word32 r7_413 = r7_404 - r6_405
	word32 r6_425 = (r30 - r6_405 >> 2<32>) + 0xFFFFFFFF<32>
	branch r7_413 >= r6_425 * 9<32> l00409706
l004094F8:
	word32 r6_440 = (r7_413 + 0x2400<32>) % 9<32>
	word32 r8_438 = 0xA<32>
	word32 r20_439 = r6_425 * 9<32> + (r20_269 + 0x3FFFFC01<32> << 2<8>)
	word32 r7_441 = r6_440 + 1<32>
l0040951A:
	branch r7_441 != 9<32> l0040966C
l0040966C:
	r6_440 = 0xA<32>
	r7_441 = r7_441 + 1<32>
	r8_438 = r8_438 *s 0xA<32>
l0040951E:
	word32 r2_449 = Mem364[r20_439:word32]
	word32 r7_450 = r2_449 % r8_438
	branch r7_450 != 0<32> l00409530
l00409528:
	r6_440 = r20_439 + 4<32>
	branch r30 == r20_439 + 4<32> l004096FC
l00409530:
	word32 r4_470
	word32 r5_472
	branch !__bit(r6_440, 0<32>) l0040954E
l00409538:
	branch r8_438 != 0x3B9ACA00<32> l00409674
l00409542:
	branch r23 >=u r20_439 l00409674
l00409546:
	branch __bit(Mem364[r20_439 - 4<32>:word32], 0<32>) l00409674
l00409674:
	r4_470 = 0<32>
	r5_472 = Mem364[0x4120244<32>:word32]
l0040954E:
	r4_470 = 1<32>
	r5_472 = Mem364[0x412024C<32>:word32]
l00409558:
	word32 r6_487
	word32 r6_480 = r8_438 >> 1<32>
	branch r7_450 <u r6_480 l00409680
l00409680:
	r6_487 = Mem364[0x4120254<32>:word32]
l00409560:
	branch r6_480 != r7_450 l0040956A
l00409562:
	branch r30 == r20_439 + 4<32> l00409748
l00409748:
	r6_487 = Mem364[0x412025C<32>:word32]
l0040956A:
	r6_487 = Mem364[0x4120264<32>:word32]
l00409688:
	r18_1068 = dwArg10
	branch r9_152 == 0<32> l004096A4
l0040968E:
	r18_1068 = dwArg18
	branch CONVERT(Mem364[r9_152:byte], byte, word32) != 0x2D<32> l004096A4
l00409698:
l004096A4:
	word32 r2_553 = r2_449 - r7_450
	Mem562[r20_439:byte] = SLICE(r2_553, byte, 0)
	r16 = r5_472
	r19 = r4_470
	word32 r12_578
	word32 r4_584
	word32 r5_585
	word32 r11_597
	word32 r4_602
	word32 r8_605
	word32 r6_3569
	word32 r7_3576
	word32 r6_3575
	word32 r5_3574
	word32 r7_3570
	word32 r8_3571
	word32 r11_3572
	word32 r9_3577
	word32 r13_3573
	word32 r2_608 = __nedf2(r12_578, __adddf3(r4_470, r5_472, 0<32>, r6_487, out r4_584, out r5_585, out r6_3569, out r7_3570, out r8_3571, out r11_3572, out r12_578, out r13_3573), r4_584, r5_585, out r4_602, out r5_3574, out r6_3575, out r7_3576, out r8_605, out r9_3577, out r11_597, out r13_145)
	branch r4_602 == 0<32> l004096FC
l004096D0:
	r16 = r2_553
	r18_1068 = r8_438
	word32 r7_611 = r8_605 + r2_608
l004096D8:
	Mem614[r20_439:word32] = r7_611
	word32 r7_616 = Mem614[r20_439:word32]
	branch r7_616 >u 0x3B9AC9FF<32> l00409752
l00409752:
	r20_439 = r20_439 + 0xFFFFFFFC<32>
	Mem619[r20_439 + 1<32>:word32] = r11_597
	branch r20_439 >=u r23 l00409760
l0040975A:
	Mem621[r23 - 4<32>:word32] = 0<32>
	r23 = r23 + 0xFFFFFFFC<32>
l00409760:
	r7_611 = Mem624[r20_439:word32] + 1<32>
l004096E6:
	word32 r21_631 = r7_616 - r23
	word32 r6_630 = Mem614[r23:word32]
	word32 r7_632 = 0xA<32>
	r21_357 = (r21_631 >> 2<32>) + ((r21_631 >> 2<32>) << 3<8>)
l004096F8:
	branch r6_630 >=u r7_632 l00409766
l00409766:
	r21_357 = r21_357 + 1<32>
	r7_632 = r7_632 *s 0xA<32>
l004096FC:
	word32 r20_643 = r20_439 + 4<32>
	r7_413 = CONVERT(r20_643 <u r30, bool, word32)
	branch r7_413 == 0<32> l00409706
l00409702_1:
	r30 = r20_643
l00409706:
	branch r23 >=u r30 l00409712
l0040970A:
	r7_413 = r30 + 0xFFFFFFFC<32>
	branch Mem656[r7_413:word32] == 0<32> l0040976E
l0040976E:
	r30 = r7_413
l00409712:
	word32 r17_664 = r7
	branch r7_413 != 0x27<32> l004097B0
l00409718:
	word32 r7_667 = 1<32>
	branch r18_1068 != 0<32> l0040971E
l0040971A_1:
	r18_1068 = 1<32>
l0040971E:
	branch r21_357 >= r18_1068 l00409772
l00409722:
	r7_667 = 0xFFFFFFFC<32>
	branch r21_357 < 0xFFFFFFFC<32> l00409772
l00409772:
	r19 = r19 + 0xFFFFFFFE<32>
	r18_1068 = r18_1068 + 0xFFFFFFFF<32>
l0040972A:
	r7_667 = r21_357 + 1<32>
	r19 = r19 + 0xFFFFFFFF<32>
	r18_1068 = r18_1068 - r7_667
l00409732:
	branch !__bit(r7, 3<32>) l004097B0
l00409736:
	branch r23 >=u r30 l00409742
l0040973A:
	word32 r6_746 = Mem656[r30 - 4<32>:word32]
	r7_667 = 0xA<32>
	branch r6_746 != 0<32> l0040977E
l0040977E:
	branch r6_746 % r7_667 == 0<32> l00409778
l00409778:
	r22 = r22 + 1<32>
	r7_667 = r7_667 *s 0xA<32>
l00409742:
	r22 = 9<32>
l00409784:
	word32 r7_781 = (r30 - r7_667 >> 2<32>) + 0xFFFFFFFF<32>
	r17_664 = dwArg08_2195
	word32 r7_782 = r7_781 * 9<32>
	branch (r19 | 0x20<32>) != 0x26<32> l00409858
l00409858:
	r7_782 = r7_781 * 9<32> + r21_357
l0040979C:
	word32 r22_792 = r7_782 - r22
	branch CONVERT(r22_792 < 0<32>, bool, word32) == 0<32> l004097A8
l004097A4_1:
	r22_792 = 0<32>
l004097A8:
	branch CONVERT(r22_792 < r18_1068, bool, word32) == 0<32> l004097B0
l004097AC_1:
	r18_1068 = r22_792
l004097B0:
	word32 r6_804 = 1<32>
	branch r18_1068 != 0<32> l004097B8
l004097B4:
	r6_804 = __ext(r17_664, 3<32>, 1<32>)
l004097B8:
	branch 0x7FFFFFFE<32> - r6_804 < r18_1068 l004097C0_thunk_fn00408D8E
l004097C0_thunk_fn00408D8E:
	word32 r14_3583
	word32 r4_3578
	word32 r5_3579
	word32 r7_3581
	word32 r6_3580
	word32 r11_3582
	fn00408D8E(out r4_3578, out r5_3579, out r6_3580, out r7_3581, out r11_3582, out r14_3583)
	return
l004097C4:
	word32 r22_819 = r18_1068 + 1<32> + r6_804
	word32 r20_824 = r19 | 0x20<32>
	word32 r7_825 = 0x7FFFFFFF<32> - r22_819
	branch r20_824 != 0x26<32> l0040985C
l0040985C:
	word32 r6_830 = r21_357 >> 0x1F<32>
	word32 r4_838 = (r6_830 ^ r21_357) - r6_830
	word32 r7_887
	word32 r8_888
	word32 r4_884 = fn004099EA(r4_838, r4_838 >> 0x1F<32>, fp + 0x78<32>, r13_145, out r7_887, out r8_888)
	r18_1068 = fp + 0x78<32>
l0040987A:
	branch r8_888 - r4_884 < 2<32> l004098AA
l004098AA:
	r4_884 = r4_884 + 0xFFFFFFFF<32>
	Mem897[r4_884:byte] = 0x30<8>
l00409882:
	Mem903[r4_884 - 2<32>:int8] = SLICE(r19, int8, 0)
	word32 r6_900 = 0x2D<32>
	branch CONVERT(r21_357 < 0<32>, bool, word32) != 0<32> l00409892
l0040988E_1:
	r6_900 = 0x2B<32>
l00409892:
	r6_804 = r4_884 + 0xFFFFFFFE<32>
	Mem911[r4_884 - 1<32>:int8] = SLICE(r6_900, int8, 0)
	word32 r8_910 = r8_888 - r6_804
	branch r7_887 < r8_910 l004098A2_thunk_fn00408D8E
l004098A2_thunk_fn00408D8E:
	word32 r4_3619
	word32 r7_3622
	word32 r5_3620
	word32 r6_3621
	word32 r14_3624
	word32 r11_3623
	fn00408D8E(out r4_3619, out r5_3620, out r6_3621, out r7_3622, out r11_3623, out r14_3624)
	return
l004098A6:
	r22_819 = r22_819 + r8_910
l004097D8:
	branch r7_825 < r21_357 l004097D8_thunk_fn00408D8E
l004097D8_thunk_fn00408D8E:
	word32 r11_3588
	word32 r7_3587
	word32 r14_3589
	word32 r4_3584
	word32 r5_3585
	word32 r6_3586
	fn00408D8E(out r4_3584, out r5_3585, out r6_3586, out r7_3587, out r11_3588, out r14_3589)
	return
l004097DC:
	branch r21_357 <= 0<32> l004097E2
l004097E0:
	r22_819 = r22_819 + r21_357
l004097E2:
	branch 0x7FFFFFFF<32> - r6_804 < r22_819 l004097EC_thunk_fn00408D8E
l004097EC_thunk_fn00408D8E:
	word32 r4_3590
	word32 r7_3593
	word32 r11_3594
	word32 r5_3591
	word32 r6_3592
	word32 r14_3595
	fn00408D8E(out r4_3590, out r5_3591, out r6_3592, out r7_3593, out r11_3594, out r14_3595)
	return
l004097F0:
	word32 r6_1229
	word32 r19_941 = r6_804 + r22_819
	word32 r6_998
	word32 r6_1007
	word32 r13_3597
	word32 r17_3600
	word32 r13_3599
	word32 r7_3596
	word32 r7_3598
	out(r16, pad(r16, 0x20<32>, r6_804, r19_941, dwArg00, out r6_998, out r7_3596, out r13_3597), r6_998, out r6_1007, out r7_3598, out r13_3599, out r17_3600)
	word32 r6_3601
	word32 r7_1041
	word32 r13_1033
	pad(r16, 0x30<32>, r6_1007, r19_941, dwArg00 ^ 0x100000<32>, out r6_3601, out r7_1041, out r13_1033)
	branch r20_824 != 0x26<32> l0040991A
l0040991A:
	branch r23 <u r30 l00409922
l0040991E:
	r30 = r23 + 4<32>
l00409922:
	r21_1065 = r23
l00409924:
	branch r21_1065 >=u r30 l0040992C
l00409928:
	branch r18_1068 >= 0<32> l00409948
l00409948:
	word32 r8_3618
	word32 r7_3617
	word32 r4_1085 = fn004099EA(Mem1071[r21_1065:word32], 0<32>, fp + 0x81<32>, r13_1033, out r7_3617, out r8_3618)
	word32 r5_1091 = r4_1085
	branch r4_1085 != fp + 0x81<32> l00409960
l00409958:
	r5_1091 = fp + 0x80<32>
l00409960:
	word32 r22_1096 = r5_1091
	branch r21_1065 != r23 l0040998A
l0040998A:
	branch fp + 0x78<32> <u r22_1096 l00409982
l00409982:
	r22_1096 = r22_1096 + 0xFFFFFFFF<32>
	Mem1105[r22_1096:byte] = 0x30<8>
l00409966:
	word32 r7_3629
	word32 r6_3628
	word32 r13_3630
	word32 r17_1122
	out(r16, r5_1091, 1<32>, out r6_3628, out r7_3629, out r13_3630, out r17_1122)
	r22_1096 = r5_1091 + 1<32>
	branch r18_1068 != 0<32> l00409976
l00409972:
	branch __bit(r17_1122, 3<32>) l00409990
l00409976:
	word32 r13_3633
	word32 r17_3634
	word32 r7_3632
	word32 r6_3631
	out(r16, 0x0041133C<p32>, 1<32>, out r6_3631, out r7_3632, out r13_3633, out r17_3634)
l00409990:
	word32 r20_1156 = fp + 0x81<32> - r22_1096
	word32 r7_1161 = r20_1156
	branch CONVERT(r20_1156 < r18_1068, bool, word32) != 0<32> l0040999E
l0040999A_1:
	r7_1161 = r18_1068
l0040999E:
	word32 r17_3651
	word32 r7_3650
	word32 r6_3649
	out(r16, r22_1096, r7_1161, out r6_3649, out r7_3650, out r13_1033, out r17_3651)
	r21_1065 = r21_1065 + 4<32>
	r18_1068 = r18_1068 - r20_1156
l0040992C:
	word32 r6_3612
	word32 r13_3613
	word32 r7_1217
	pad(r16, 0x30<32>, r18_1068 + 0x12<32>, 0x12<32>, 0<32>, out r6_3612, out r7_1217, out r13_3613)
	word32 r7_3614
	word32 r17_3616
	word32 r13_3615
	out(r16, r7_1217, fp + 0x78<32> - r7_1217, out r6_1229, out r7_3614, out r13_3615, out r17_3616)
l0040981C:
	branch CONVERT(r23 <u r7_1041, bool, word32) == 0<32> l00409826
l00409822_1:
	r7_1041 = r23
l00409826:
	r21_1065 = r7_1041
	r7_1252 = r7_1041
l0040982A:
	word32 r7_1252
	branch r7_1252 >=u r21_1065 l004098B2
l004098B2:
	word32 r7_3602
	word32 r8_3603
	word32 r4_1268 = fn004099EA(Mem1250[r21_1065:word32], 0<32>, fp + 0x81<32>, r13_1033, out r7_3602, out r8_3603)
	word32 r5_1274 = r4_1268
	branch r7_1041 != r21_1065 l004098D6
l004098D6:
	branch fp + 0x78<32> <u r5_1274 l004098D0
l004098D0:
	r5_1274 = r5_1274 + 0xFFFFFFFF<32>
	Mem1281[r5_1274:byte] = 0x30<8>
l004098C2:
	branch r4_1268 != fp + 0x81<32> l004098DC
l004098C6:
	r5_1274 = fp + 0x80<32>
l004098DC:
	word32 r17_3653
	word32 r6_3652
	out(r16, r5_1274, fp + 0x81<32> - r5_1274, out r6_3652, out r7_1252, out r13_1033, out r17_3653)
	r21_1065 = r21_1065 + 4<32>
l00409830:
	branch r18_1068 != 0<32> l00409836
l00409832:
	branch __bit(dwArg08_2195, 3<32>) l00409840
l00409836:
	word32 r7_3605
	word32 r17_3606
	word32 r6_3604
	out(r16, 0x0041133C<p32>, 1<32>, out r6_3604, out r7_3605, out r13_1033, out r17_3606)
l00409840:
	branch r21_1065 >=u r30 l00409848
l00409844:
	branch r18_1068 > 0<32> l004098E8
l004098E8:
	word32 r7_3609
	word32 r8_3610
	word32 r5_1365 = fn004099EA(Mem1344[r21_1065:word32], 0<32>, fp + 0x81<32>, r13_1033, out r7_3609, out r8_3610)
l004098F4:
	branch fp + 0x78<32> <u r5_1365 l00409912
l00409912:
	r5_1365 = r5_1365 + 0xFFFFFFFF<32>
	Mem1371[r5_1365:byte] = 0x30<8>
l004098FA:
	word32 r7_1374 = 9<32>
	branch CONVERT(r18_1068 < 0xA<32>, bool, word32) == 0<32> l00409904
l00409900_1:
	r7_1374 = r18_1068
l00409904:
	word32 r7_3626
	word32 r17_3627
	word32 r6_3625
	out(r16, r5_1365, r7_1374, out r6_3625, out r7_3626, out r13_1033, out r17_3627)
	r21_1065 = r21_1065 + 4<32>
	r18_1068 = r18_1068 + 0xFFFFFFF7<32>
l00409848:
	word32 r13_3608
	word32 r7_3607
	pad(r16, 0x30<32>, r18_1068 + 9<32>, 9<32>, 0<32>, out r6_1229, out r7_3607, out r13_3608)
l004090C2:
	word32 r13_3611
	pad(r16, 0x20<32>, r6_1229, r19_941, dwArg00 ^ 0x2000<32>, out r6_1471, out r7_1472, out r13_3611)
	branch CONVERT(r7_1472 < r19_941, bool, word32) == 0<32> l004090DE
l004090DA_1:
	r7_1472 = r19_941
l004090DE:
l00409176:
	branch (r19 & 0x20<32>) == 0<32> l00409186
l0040917E:
l00409186:
	word32 r7_1488 = 0x4120000<32>
	branch r18 >=u 0xC<32> l004091E4
l00409196:
	word32 r10_1493 = Mem1489[0x4120238<32>:word32]
	word32 r20_1494 = 0xC<32> - r18
	word32 r11_1495 = Mem1489[0x412023C<32>:word32]
l004091AA:
	r20_1494 = r20_1494 + 0xFFFFFFFF<32>
	branch r20_1494 != 0xFFFFFFFF<32> l004093C0
l004093C0:
	word32 r8_3532
	word32 r4_1518
	word32 r5_1519
	word32 r7_3531
	word32 r6_3530
	word32 r12_3536
	word32 r9_3533
	word32 r14_3537
	word32 r11_3535
	word32 r10_3534
	word32 r3_3529
	__muldf3(r10_1493, r11_1495, Mem1489[0x267<32>:word32], Mem1489[0x26B<32>:word32], out r3_3529, out r4_1518, out r5_1519, out r6_3530, out r7_3531, out r8_3532, out r9_3533, out r10_3534, out r11_3535, out r12_3536, out r14_3537)
	r10_1493 = r4_1518
	r11_1495 = r5_1519
l004091B2:
	branch CONVERT(Mem1489[0xFFFFFFFF<32>:byte], byte, word32) != 0x2D<32> l004093D4
l004093D4:
	word32 r4_1548
	word32 r5_1549
	word32 r8_3540
	word32 r11_3541
	word32 r6_3538
	word32 r7_3539
	word32 r12_3542
	word32 r13_3543
	__adddf3(r23, r30, r10_1493, r11_1495, out r4_1548, out r5_1549, out r6_3538, out r7_3539, out r8_3540, out r11_3541, out r12_3542, out r13_3543)
	word32 r5_1566
	r21 = __subdf3(r4_1548, r5_1549, r10_1493, r11_1495, out r5_1566, out r7_1488, out r13)
	r20 = r5_1566
l004091BA:
	word32 r5_1590
	word32 r4_1609
	word32 r5_1610
	word32 r12_3549
	word32 r13_3545
	word32 r6_3546
	word32 r11_3548
	word32 r7_3544
	word32 r8_3547
	__adddf3(r10_1493, r11_1495, __subdf3(r23, r30, r10_1493, r11_1495, out r5_1590, out r7_3544, out r13_3545), r5_1590, out r4_1609, out r5_1610, out r6_3546, out r7_1488, out r8_3547, out r11_3548, out r12_3549, out r13)
	r21 = r4_1609
	r20 = r5_1610
l004091E4:
	word32 r4_1623 = r7_1488 >> 0x1F<32>
	word32 r4_1625 = (r7_1488 ^ r4_1623) - r4_1623
	word32 r8_3528
	word32 r7_1642
	word32 r11_1633
	word32 r4_1639 = fmt_u(r4_1625, r4_1625 >> 0x1F<32>, fp + 0x78<32>, r13, out r7_1642, out r8_3528, out r11_1633)
	branch r4_1639 != fp + 0x78<32> l0040920A
l00409200:
	r7_1642 = 0x30<32>
	r4_1639 = fp + 0x77<32>
l0040920A:
	word32 r6_1651 = 0x2D<32>
	word32 r30_1661 = fp + 0x78<32>
	branch CONVERT(r7_1642 < 0<32>, bool, word32) != 0<32> l0040921E
l0040921A_1:
	r6_1651 = 0x2B<32>
l0040921E:
	Mem1667[r4_1639 - 2<32>:int8] = SLICE(r19, int8, 0) + 15<i8>
	Mem1669[r4_1639 - 1<32>:int8] = SLICE(r6_1651, int8, 0)
l0040922C:
	word32 r6_1758
	word32 r7_1755
	word32 r5_1680
	word32 r6_1681
	word32 r4_1679 = __fixdfsi(r21, r20, out r5_1680, out r6_1681)
	Mem1691[r30_1661:byte] = Mem1677[0x00413040<p32> + r4_1679:byte] | SLICE(r6_1681, byte, 0)
	word32 r12_3676
	word32 r14_3677
	word32 r11_3675
	word32 r10_3674
	word32 r8_3672
	word32 r3_3669
	word32 r6_3670
	word32 r7_3671
	word32 r13_3668
	word32 r9_3673
	word32 r5_1712
	word32 r7_1714
	word32 r4_1730
	word32 r5_1731
	__muldf3(__subdf3(r11_1633, r20, __floatsidf(r4_1679), r5_1680, out r5_1712, out r7_1714, out r13_3668), r5_1712, Mem1691[r7_1714 + 0x268<32>:word32], Mem1691[r7_1714 + 0x26C<32>:word32], out r3_3669, out r4_1730, out r5_1731, out r6_3670, out r7_3671, out r8_3672, out r9_3673, out r10_3674, out r11_3675, out r12_3676, out r14_3677)
	word32 r19_1689 = r30_1661 + 1<32>
	word32 r18_1698 = r21
	word32 r11_1738 = r4_1730
	r21 = r4_1730
	r20 = r5_1731
	branch r19_1689 - (fp + 0x78<32>) != 1<32> l00409292
l00409272:
	word32 r13_3661
	word32 r9_3660
	word32 r5_3658
	word32 r8_3659
	word32 r4_1753
	__nedf2(r4_1730, r5_1731, 0<32>, 0<32>, out r4_1753, out r5_3658, out r6_1758, out r7_1755, out r8_3659, out r9_3660, out r11_1738, out r13_3661)
	r18_1698 = r4_1730
	branch r4_1753 != 0<32> l00409288
l00409280:
	branch r4_1730 > 0<32> l00409288
l00409284:
	branch __bit(0x4120000<32>, 3<32>) l0040929E
l00409288:
	Mem1764[r30_1661 + 1<32>:byte] = 0x2E<8>
	r19_1689 = r30_1661 + 2<32>
l00409292:
	word32 r9_3656
	word32 r5_3654
	word32 r8_3655
	word32 r13_3657
	word32 r4_1779
	__nedf2(r11_1738, r5_1731, 0<32>, 0<32>, out r4_1779, out r5_3654, out r6_1758, out r7_1755, out r8_3655, out r9_3656, out r11_1633, out r13_3657)
	branch r4_1779 != 0<32> l004093F6
l004093F6:
	r30_1661 = r19_1689
l0040929E:
	word32 r23_1799 = fp + 0x78<32> - r7_1755
	word32 r7_1803 = 0x7FFFFFFD<32> - r23_1799 - r6_1758
	branch r7_1803 < r18_1698 l004092B2_thunk_fn00408D8E
l004092B2_thunk_fn00408D8E:
	word32 r7_3665
	word32 r5_3663
	word32 r14_3667
	word32 r4_3662
	word32 r6_3664
	word32 r11_3666
	fn00408D8E(out r4_3662, out r5_3663, out r6_3664, out r7_3665, out r11_3666, out r14_3667)
	return
l004092B6:
	word32 r20_1815
	word32 r19_1811 = r19_1689 - (fp + 0x78<32>)
	branch r18_1698 == 0<32> l004093FA
l004092BE:
	r7_1803 = r19_1811 + 0xFFFFFFFF<32>
	branch r18_1698 < r19_1811 + 0xFFFFFFFF<32> l004093FA
l004093FA:
	r20_1815 = r23_1799 + r19_1811
l004092C6:
	r20_1815 = r18_1698 + 2<32> + r23_1799
l004092CE:
	r21_1065 = r7_1803 + r20_1815
	word32 r7_3678
	word32 r7_3680
	word32 r13_3681
	word32 r17_3682
	word32 r13_3679
	word32 r6_1859
	word32 r6_1868
	out(r16, pad(r16, 0x20<32>, r6_1758, r21_1065, dwArg00, out r6_1859, out r7_3678, out r13_3679), r6_1859, out r6_1868, out r7_3680, out r13_3681, out r17_3682)
	word32 r7_3684
	word32 r13_3685
	word32 r6_3683
	pad(r16, 0x30<32>, r6_1868, r21_1065, dwArg00 ^ 0x100000<32>, out r6_3683, out r7_3684, out r13_3685)
	word32 r6_3686
	word32 r13_3688
	word32 r17_3689
	word32 r7_3687
	out(r16, fp + 0x78<32>, r19_1811, out r6_3686, out r7_3687, out r13_3688, out r17_3689)
	word32 r17_3695
	word32 r13_3694
	word32 r7_3693
	word32 r13_3692
	word32 r6_3690
	word32 r7_3691
	word32 r6_1956
	out(r16, pad(r16, 0x30<32>, r20_1815 - r23_1799 - r19_1811, 0<32>, 0<32>, out r6_3690, out r7_3691, out r13_3692), r23_1799, out r6_1956, out r7_3693, out r13_3694, out r17_3695)
	word32 r13_3696
	pad(r16, 0x20<32>, r6_1956, r21_1065, dwArg00 ^ 0x2000<32>, out r6_1471, out r7_1472, out r13_3696)
	branch CONVERT(r7_1472 < r21_1065, bool, word32) == 0<32> l00409330
l0040932C_1:
	r7_1472 = r21_1065
l00409330:
l00409332_thunk_fn00408B86:
	word32 r18_3643
	word32 r17_3642
	word32 r30_3648
	word32 r19_3644
	word32 r22_3646
	word32 r23_3647
	word32 r20_3645
	word32 r5_3636
	word32 r6_3637
	word32 r11_3639
	word32 r14_3640
	word32 r4_3635
	word32 r7_3638
	word32 r16_3641
	fn00408B86(r6_1471, r16, r21_1065, r7_1472, dwArg0C, dwArg1C, dwArg20, dwArg28, out r4_3635, out r5_3636, out r6_3637, out r7_3638, out r11_3639, out r14_3640, out r16_3641, out r17_3642, out r18_3643, out r19_3644, out r20_3645, out r22_3646, out r23_3647, out r30_3648)
	return
fn00409170_exit:


word32 fn004099EA(word32 r4, word32 r5, word32 r6, word32 r13, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
// MayUse:  r13:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4 r7 r8
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn004099EA_entry:
l004099EA:
l004099EA_thunk_fmt_u:
	word32 r7_20
	word32 r8_21
	word32 r11_25
	word32 r4_17 = fmt_u(r4, r5, r6, r13, out r7_20, out r8_21, out r11_25)
	r7Out = r7_20
	r8Out = r8_21
	return r4_17
fn004099EA_exit:


word32 vfprintf(word32 r5, word32 r6, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r11Out, ptr32 & r14Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0040212A
//      fn004032FE
//      vsnprintf
// MayUse:  r5:[0..31] r6:[0..31]
// LiveOut: r11 r14 r22 r23 r3 r30 r4 r5 r6 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
vfprintf_entry:
	ptr32 fp
	struct <anonymous> tLocE8
l004099EE:
	word32 r10_388
	word32 r9_387
	word32 r13_391
	word32 r11_389
	word32 r12_390
	word32 r3_382
	word32 r6_384
	word32 r7_385
	word32 r8_386
	word32 r5_383
	memcpy(fp - 0xF8<32>, r6, 0x10<32>, out r3_382, out r5_383, out r6_384, out r7_385, out r8_386, out r9_387, out r10_388, out r11_389, out r12_390, out r13_391)
	word32 r6_392
	word32 r7_393
	word32 r9_395
	word32 r10_396
	word32 r8_394
	memset(&tLocE8, 0<32>, 0x28<32>, out r6_392, out r7_393, out r8_394, out r9_395, out r10_396)
	word32 r7_400
	word32 r3_397
	word32 r5_398
	word32 r6_399
	word32 r11_404
	word32 r10_403
	word32 r12_405
	word32 r13_406
	word32 r8_401
	word32 r9_402
	memcpy(fp - 0x108<32>, fp - 0xF8<32>, 0x10<32>, out r3_397, out r5_398, out r6_399, out r7_400, out r8_401, out r9_402, out r10_403, out r11_404, out r12_405, out r13_406)
	word32 r16_83
	word32 r4_95
	word32 r18_407
	word32 r19_408
	word32 r20_409
	word32 r11_149
	word32 r17_173
	word32 r14_152
	word32 r22_160
	word32 r23_161
	word32 r30_165
	word32 r5_213
	word32 r6_212
	word32 r7_211
	word32 r3_164 = printf_core(0<32>, fp - 0x108<32>, fp - 0xC0<32>, &tLocE8, r5, out r4_95, out r5_213, out r6_212, out r7_211, out r11_149, out r14_152, out r16_83, out r17_173, out r18_407, out r19_408, out r20_409, out r22_160, out r23_161, out r30_165)
	word32 sp_101 = <invalid>
	branch r4_95 < 0<32> l00409AA8
l00409A28:
	branch Mem17[r16_83 + 0x4C<32>:word32] < 0<32> l00409A38
l00409A32:
	word32 r9_414
	word32 r4_411
	word32 r5_412
	word32 r8_413
	word32 r3_410
	__lockfile(r16_83, out r3_410, out r4_411, out r5_412, out r8_413, out r9_414)
l00409A38:
	word32 r7_117 = Mem17[r16_83:word32]
	branch CONVERT(Mem17[r16_83 + 0x4A<32>:int8], int8, word32) > 0<32> l00409A4C
l00409A46:
	Mem122[sp_101:word32] = __ins(r7_117, 0<32>, 5<32>, 1<32>)
l00409A4C:
	branch Mem124[r16_83 + 0x30<32>:word32] != 0<32> l00409A64
l00409A52:
	Mem130[sp_101 + 0x14<32>:word32] = sp_101 + 0xA0<32>
	Mem131[sp_101 + 0x1C<32>:word32] = sp_101 + 0xA0<32>
	Mem132[sp_101 + 0x2C<32>:word32] = sp_101 + 0xA0<32>
	Mem134[sp_101 + 0x30<32>:word32] = 0x50<32>
	Mem136[sp_101 + 0x10<32>:word32] = sp_101 + 0xF0<32>
l00409A64:
	word32 r16_154
	word32 r18_156
	word32 r19_157
	word32 r20_159
	word32 r4_166
	word32 r17_418
	word32 r7_417
	word32 r5_415
	word32 r6_416
	r3_164 = printf_core(r16_83, sp_101 + 8<32>, sp_101 + 0x50<32>, sp_101 + 0x28<32>, r5, out r4_166, out r5_415, out r6_416, out r7_417, out r11_149, out r14_152, out r16_154, out r17_418, out r18_156, out r19_157, out r20_159, out r22_160, out r23_161, out r30_165)
	word32 sp_172 = <invalid>
	r17_173 = r4_166
	branch r19_157 == 0<32> l00409A90
l00409A76:
	call Mem174[r16_154 + 0x24<32>:word32] (retsize: 0;)
		uses: r4:r16_154,r5:0<32>,r6:0<32>
		defs: r11:r11_191,r14:r14_193,r3:r3_197
	word32 r6_198 = Mem174[r16_154 + 0x14<32>:word32]
	Mem200[sp_172 + 0x10<32>:word32] = 0<32>
	branch r6_198 != 0<32> l00409A88
l00409A84_1:
	r17_173 = 0xFFFFFFFF<32>
l00409A88:
	Mem203[sp_172 + 0x14<32>:word32] = 0<32>
	Mem204[sp_172 + 0x1C<32>:word32] = 0<32>
	Mem206[sp_172 + 0x2C<32>:word32] = r19_157
	Mem207[sp_172 + 0x30<32>:word32] = 0<32>
l00409A90:
	r7_211 = Mem210[r16_154:word32]
	r6_212 = 0xFFFFFFFF<32>
	r5_213 = r7_211 & 0x20<32>
	word32 r18_216 = r18_156 | r7_211
	branch (r7_211 & 0x20<32>) == 0<32> l00409A9E
l00409A9A_1:
	r17_173 = 0xFFFFFFFF<32>
l00409A9E:
	Mem221[sp_172:word32] = r18_216
	branch r20_159 == 0<32> l00409AA8
l00409AA4:
	word32 r9_421
	word32 r8_420
	word32 r4_419
	__unlockfile(r16_154, out r4_419, out r5_213, out r6_212, out r7_211, out r8_420, out r9_421)
l00409AA8:
	r4Out = r17_173
	r5Out = r5_213
	r6Out = r6_212
	r7Out = r7_211
	r11Out = r11_149
	r14Out = r14_152
	r22Out = r22_160
	r23Out = r23_161
	r30Out = r30_165
	return r3_164
vfprintf_exit:


void sn_write(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
sn_write_entry:
l00409AB0:
	word32 r16_23 = Mem15[r4 + 0x54<32>:word32]
	word32 r5_25 = Mem15[r4 + 0x1C<32>:word32]
	word32 r6_26 = Mem15[r16_23 + 4<32>:word32]
	word32 r7_27 = Mem15[r4 + 0x14<32>:word32] - r5_25
	branch CONVERT(r6_26 <u r7_27, bool, word32) != 0<32> l00409ACA
l00409AC6_1:
	r6_26 = r7_27
l00409ACA:
	branch r6_26 == 0<32> l00409AE0
l00409ACE:
	word32 r12_229
	word32 r13_230
	word32 r10_227
	word32 r11_228
	word32 r9_226
	word32 r8_225
	word32 r6_223
	word32 r7_224
	word32 r3_221
	word32 r5_222
	memcpy(Mem15[r16_23:word32], r5_25, r6_26, out r3_221, out r5_222, out r6_223, out r7_224, out r8_225, out r9_226, out r10_227, out r11_228, out r12_229, out r13_230)
l00409AE0:
	word32 r7_60 = Mem59[r16_23 + 4<32>:word32]
	branch CONVERT(r6 <u r7_60, bool, word32) == 0<32> l00409AEA
l00409AE6_1:
	r7_60 = r6
l00409AEA:
	branch r7_60 == 0<32> l00409B02
l00409AEE:
	word32 r13_240
	word32 r11_238
	word32 r12_239
	word32 r10_237
	word32 r8_235
	word32 r9_236
	word32 r6_233
	word32 r7_234
	word32 r3_231
	word32 r5_232
	memcpy(Mem59[r16_23:word32], r5, r7_60, out r3_231, out r5_232, out r6_233, out r7_234, out r8_235, out r9_236, out r10_237, out r11_238, out r12_239, out r13_240)
l00409B02:
	Mem104[Mem99[r16_23:word32]:byte] = 0<8>
	return
sn_write_exit:


word32 vsnprintf(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r22Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      snprintf
//      vsprintf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r22 r23 r30 r4 r5 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
vsnprintf_entry:
	ptr32 fp
	struct <anonymous> tLocB0
	word32 r22
	word32 r23
	word32 r30
l00409B10:
	word32 r17_21 = fp - 0xCC<32>
	branch r5 == 0<32> l00409B22
l00409B1E_1:
	r17_21 = r4
l00409B22:
	word32 r8_192
	word32 r9_193
	word32 r10_194
	word32 r11_195
	word32 r7_191
	word32 r6_190
	word32 r3_188
	word32 r5_189
	word32 r12_196
	word32 r13_197
	memcpy(fp - 0xC0<32>, r7, 0x10<32>, out r3_188, out r5_189, out r6_190, out r7_191, out r8_192, out r9_193, out r10_194, out r11_195, out r12_196, out r13_197)
	branch r5 == 0<32> l00409B30
l00409B2C:
l00409B30:
	word32 r6_198
	word32 r7_199
	word32 r8_200
	word32 r9_201
	word32 r10_202
	word32 r5_61 = memset(&tLocB0, 0<32>, 0x90<32>, out r6_198, out r7_199, out r8_200, out r9_201, out r10_202)
	branch r5 < 0<32> l00409B64
l00409B64:
	word32 r4_203
	__errno_location(out r4_203)
	r5Out = r5_61
	r7Out = 0x4B<32>
	r22Out = r22
	r23Out = r23
	r30Out = r30
	return 0xFFFFFFFF<32>
l00409B58:
	Mem89[r17_21:byte] = 0<8>
	word32 r22_100
	word32 r23_101
	word32 r30_105
	word32 r4_106
	word32 r5_107
	word32 r7_109
	word32 r6_204
	word32 r11_205
	word32 r14_206
	vfprintf(r6, fp - 0xC0<32>, out r4_106, out r5_107, out r6_204, out r7_109, out r11_205, out r14_206, out r22_100, out r23_101, out r30_105)
	r5Out = r5_107
	r7Out = r7_109
	r22Out = r22_100
	r23Out = r23_101
	r30Out = r30_105
	return r4_106
vsnprintf_exit:


word32 vsprintf(word32 r4, word32 r5, word32 r6, ptr32 & r7Out, ptr32 & r23Out, ptr32 & r30Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sprintf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r23 r30 r5 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
vsprintf_entry:
	ptr32 fp
l00409B70:
	word32 r3_67
	word32 r5_68
	word32 r6_69
	word32 r7_70
	word32 r8_71
	word32 r9_72
	word32 r10_73
	word32 r11_74
	word32 r12_75
	word32 r13_76
	memcpy(fp - 32<i32>, r6, 0x10<32>, out r3_67, out r5_68, out r6_69, out r7_70, out r8_71, out r9_72, out r10_73, out r11_74, out r12_75, out r13_76)
	word32 r5_49
	word32 r7_51
	word32 r23_55
	word32 r30_56
	word32 r22_77
	vsnprintf(r4, 0x7FFFFFFF<32>, r5, fp - 32<i32>, out r5_49, out r7_51, out r22_77, out r23_55, out r30_56)
	r7Out = r7_51
	r23Out = r23_55
	r30Out = r30_56
	return r5_49
vsprintf_exit:


void do_read(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
do_read_entry:
l00409B90:
l00409B90_thunk___string_read:
	__string_read(r4, r5, r6)
	return
do_read_exit:


word32 __isoc99_vsscanf(word32 r0, word32 r4, word32 r5, word32 r6, word32 r19, word32 r20, word32 r21, ptr32 & r4Out, ptr32 & r18Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_sscanf
// MayUse:  r0:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r18 r19 r3 r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r18 r19 r2 r20 r21 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__isoc99_vsscanf_entry:
	struct <anonymous> tLocB0
	struct <anonymous> tLocA0
l00409B94:
	word32 r3_97
	word32 r5_98
	word32 r6_99
	word32 r7_100
	word32 r8_101
	word32 r9_102
	word32 r10_103
	word32 r11_104
	word32 r12_105
	word32 r13_106
	memcpy(&tLocB0, r6, 0x10<32>, out r3_97, out r5_98, out r6_99, out r7_100, out r8_101, out r9_102, out r10_103, out r11_104, out r12_105, out r13_106)
	word32 r6_107
	word32 r7_108
	word32 r8_109
	word32 r9_110
	word32 r10_111
	memset(&tLocA0, 0<32>, 0x90<32>, out r6_107, out r7_108, out r8_109, out r9_110, out r10_111)
	Mem45[&tLocA0 + 32<i32>:word32] = 0x00409B90<p32>
	Mem49[&tLocA0 + 44<i32>:word32] = r4
	Mem50[&tLocA0 + 84<i32>:word32] = r4
	Mem51[&tLocA0 + 76<i32>:word32] = 0xFFFFFFFF<32>
	word32 r18_65
	word32 r4_72
	word32 r19_81
	word32 r3_70 = __isoc99_vfscanf(r0, &tLocA0, r5, &tLocB0, r19, r20, r21, out r4_72, out r18_65, out r19_81)
	r4Out = r4_72
	r18Out = r18_65
	r19Out = r19_81
	return r3_70
__isoc99_vsscanf_exit:


word32 atoi(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00400832
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
atoi_entry:
l00409BD0:
	word32 r7_11 = r4
l00409BFE:
	word32 r6_8 = CONVERT(Mem0[r7_11:byte], byte, word32)
	branch r6_8 == 0x20<32> l00409BFC
l00409C04:
	branch r6_8 <u 0xFFFFFFF2<32> l00409BFC
l00409BFC:
	r7_11 = r7_11 + 1<32>
l00409C0C:
	word32 r5_12
	branch r6_8 == 0x2B<32> l00409BDC
l00409BDC:
	r5_12 = 0<32>
l00409C10:
	branch r6_8 == 0x2D<32> l00409BD4
l00409BD4:
	r5_12 = 1<32>
l00409BD6:
	r7_11 = r7_11 + 1<32>
l00409C14:
	r5_12 = 0<32>
l00409BD8:
	word32 r4_17 = 0<32>
l00409BEA:
	word32 r6_20 = CONVERT(Mem0[r7_11:byte], byte, word32)
	branch r6_20 <u 0xFFFFFFC6<32> l00409BE0
l00409BE0:
	r7_11 = r7_11 + 1<32>
	r4_17 = r4_17 *s 0xA<32> - (r6_20 + 0xFFFFFFD0<32>)
l00409BF4:
	branch r5_12 != 0<32> l00409C18
l00409C18:
	return r4_17
l00409BF6:
	return -r4_17
atoi_exit:


word32 shl(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      qsort
//      fn00409F48
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r7
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
shl_entry:
l00409C20:
	branch r5 <u 0x20<32> l00409C2E
l00409C24:
	r5 = r5 + 0xFFFFFFE0<32>
l00409C2E:
	return Mem14[r4 + 4<i32>:word32] << r5 | Mem14[r4:word32] >>u -r5
shl_exit:


word32 shr(word32 r4, word32 r5, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      trinkle
//      fn00409F4C
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r7 r8
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
shr_entry:
l00409C4C:
	branch r5 <u 0x20<32> l00409C5A
l00409C50:
	r5 = r5 + 0xFFFFFFE0<32>
l00409C5A:
	word32 r8_17 = Mem12[r4 + 4<32>:word32] << -r5
	word32 r7_20 = Mem12[r4:word32] >>u r5 | r8_17
	r8Out = r8_17
	return r7_20
shr_exit:


word32 cycle(word32 r4, word32 r5, word32 r6, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sift
//      trinkle
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r4 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
cycle_entry:
	ptr32 fp
	word32 r11
	word32 r12
	word32 r2
	word32 r7
	word32 r8
l00409C78:
	word32 r18_22 = r4
	branch r6 < 2<32> l00409C8E
l00409C84:
	word32 r22_27 = r5 + (r6 << 2<8>)
	Mem28[r22_27:byte] = SLICE(fp, byte, 0) - 0x20<8>
l00409C8C:
	branch r18_22 != 0<32> l00409C92
l00409C92:
	word32 r7_31 = 0x100<32>
	branch CONVERT(r18_22 <u 0x101<32>, bool, word32) == 0<32> l00409C9E
l00409C9A_1:
	r7_31 = r18_22
l00409C9E:
	word32 r3_200
	word32 r5_201
	word32 r6_202
	word32 r7_203
	word32 r8_204
	word32 r9_205
	word32 r10_206
	word32 r11_207
	word32 r12_208
	word32 r13_209
	memcpy(Mem36[r22_27:word32], Mem36[r5:word32], r7_31, out r3_200, out r5_201, out r6_202, out r7_203, out r8_204, out r9_205, out r10_206, out r11_207, out r12_208, out r13_209)
	word32 r17_44 = r5
	word32 r21_45 = 0<32>
l00409CAE:
	r4 = Mem64[r17_44:word32]
	word32 r3_210
	word32 r5_211
	word32 r6_212
	word32 r7_213
	word32 r9_214
	word32 r10_215
	word32 r13_216
	r2 = memcpy(r4, Mem64[r17_44 + 4<i32>:word32], r7_31, out r3_210, out r5_211, out r6_212, out r7_213, out r8, out r9_214, out r10_215, out r11, out r12, out r13_216)
	r21_45 = r21_45 + 1<32>
	r7 = Mem64[r17_44:word32] + r7_31
	r17_44 = r17_44 + 4<32>
	branch r6 != r21_45 l00409CAE
l00409CC6:
	r18_22 = r18_22 - r7_31
l00409C8E:
	r4Out = r4
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
cycle_exit:


word32 sift(word32 r4, word32 r5, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      trinkle
//      qsort
// MayUse:  r4:[0..31] r5:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11 r12 r2 r4 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
sift_entry:
	struct <anonymous> tLoc0104
l00409CCA:
	Mem32[&tLoc0104:word32] = r4
	word32 r16_100 = r4
	word32 r17_103 = r7
	word32 r18_102 = 1<32>
l00409CFA:
	branch r17_103 < 2<32> l00409CE4
l00409CFE:
	word32 r7_36 = -r5
	word32 r17_44 = Mem41[&tLoc0104:word32]
	r16_100 = r16_100 + (r7_36 - Mem41[r8 + (r17_103 + 0x3FFFFFFE<32>) * 4<32>:word32])
	fn00406CA8()
	word32 r19_39 = r16_100 + r7_36
	branch r4 >= 0<32> l00409CDA
l00409CDA:
	r17_44 = Mem41[&tLoc0104:word32]
	fn00406CA8()
	branch r4 < 0<32> l00409D1E
l00409CE4:
	word32 r11_62
	word32 r12_63
	word32 r4_70
	word32 r7_73
	word32 r8_74
	word32 r2_67 = cycle(r5, &tLoc0104, r18_102, out r4_70, out r7_73, out r8_74, out r11_62, out r12_63)
	r4Out = r4_70
	r7Out = r7_73
	r8Out = r8_74
	r11Out = r11_62
	r12Out = r12_63
	return r2_67
sift_exit:
l00409D1E:
	fn00406CA8()
	r4 = r16_100
	branch r16_100 >= 0<32> l00409CF0
l00409CF0:
	Mem96[&tLoc0104 + r18_102 * 4<32>:word32] = r16_100
	r17_103 = r17_44 + 0xFFFFFFFF<32>
l00409D26:
	Mem99[&tLoc0104 + r18_102 * 4<32>:word32] = r19_39
	r17_103 = r17_44 + 0xFFFFFFFE<32>
	r16_100 = r19_39
l00409CF8:
	r18_102 = r18_102 + 1<32>


word32 pntz(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      trinkle
//      qsort
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
pntz_entry:
l00409D32:
	word32 r5_6 = Mem0[r4:word32]
	word32 r6_15 = CONVERT(Mem0[0x00413220<p32> + ((r5_6 + 0xFFFFFFFF<32> & 1<32> - r5_6) *s 0x76BE629<32> >>u 0x1B<32>):byte], byte, word32)
	branch r6_15 != 0<32> l00409D70
l00409D54:
	word32 r6_16 = Mem0[r4 + 4<32>:word32]
	word32 r6_21 = CONVERT(Mem0[0x00413220<p32> + ((-r6_16 & r6_16) *s 0x76BE629<32> >>u 0x1B<32>):byte], byte, word32)
	word32 r4_22 = r6_21 + 0x20<32>
	branch r6_21 != 0<32> l00409D6E
l00409D6A_1:
	r4_22 = 0<32>
l00409D6E:
	r6_15 = r4_22
l00409D70:
	return r6_15
pntz_exit:


word32 trinkle(word32 r4, word32 r5, word32 r7, word32 r8, word32 r9, word32 r10, ptr32 & r4Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      qsort
// MayUse:  r10:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11 r12 r2 r4 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
trinkle_entry:
	struct <anonymous> tLoc011C
	struct <anonymous> tLoc0114
	word32 r11
	word32 r12
	word32 r2
l00409D74:
	word32 r7_100 = Mem23[r7 + 4<i32>:word32]
	Mem41[&tLoc011C:word32] = Mem23[r7:word32]
	Mem42[&tLoc011C + 4<i32>:word32] = r7_100
	Mem43[&tLoc0114:word32] = r4
	word32 r18_32 = r8
	word32 r19_37 = r9
	word32 r20_40 = 1<32>
l00409DC6:
	word32 r17_142
	branch r7_100 != 1<32> l00409D92
l00409DCC:
	r17_142 = Mem45[&tLoc011C + 4<i32>:word32]
	branch r7_100 != 0<32> l00409D92
l00409D92:
	r17_142 = Mem45[&tLoc0114:word32]
	word32 r16_58 = r17_142 - Mem45[r10 + r18_32 * 4<32>:word32]
	fn00406CA8()
	word32 r30_55 = r18_32 << 2<32>
	r4 = r16_58
	branch r16_58 <= 0<32> l00409DD0
l00409DA6:
	branch r19_37 == 0<32> l00409DE6
l00409DE6:
	branch r18_32 < 2<32> l00409DA8
l00409DEA:
	word32 r4_66 = -r5
	word32 r19_71 = r17_142 + (r4_66 - Mem45[(r10 + r30_55) - 8<32>:word32])
	fn00406CA8()
	branch r17_142 + r4_66 >= 0<32> l00409DD2
l00409E04:
	fn00406CA8()
	branch r19_71 < 0<32> l00409DA8
l00409E0C:
l00409DA8:
	Mem83[&tLoc0114 + r20_40 * 4<32>:word32] = r16_58
	word32 r4_86 = pntz(&tLoc011C)
	r19_37 = 0<32>
	r20_40 = r20_40 + 1<32>
	r4 = &tLoc011C
	r18_32 = r18_32 + r4_86
	r7_100 = shr(&tLoc011C, r4_86, out r8)
l00409DD0:
	branch r19_37 != 0<32> l00409DE2
l00409DD2:
	word32 r11_337
	word32 r12_338
	word32 r7_335
	word32 r8_336
	word32 r4_334
	cycle(r5, &tLoc0114, r20_40, out r4_334, out r7_335, out r8_336, out r11_337, out r12_338)
	r2 = sift(r17_142, r5, r18_32, r10, out r4, out r7_100, out r8, out r11, out r12)
l00409DE2:
	r4Out = r4
	r7Out = r7_100
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
trinkle_exit:


word32 qsort(word32 r4, word32 r5, word32 r6, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r4 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
qsort_entry:
	ptr32 fp
	struct <anonymous> tLocF8
	word32 r11
	word32 r12
	word32 r2
	word32 r8
l00409E0E:
	Mem32[&tLocF8:word32] = 1<32>
	Mem33[&tLocF8 + 4<i32>:word32] = 0<32>
	word32 r17_166 = r6
	word32 r5_30 = r5 *s r6
	branch r5_30 == 0<32> l00409EEC
l00409E20:
	word32 r19_172 = r5_30 - r6
	word32 r6_35 = fp - 0xF0<32>
	word32 r22_37 = r4 + r19_172
l00409E2E:
	word32 r7_174 = Mem42[r6_35:word32] + Mem42[r6_35 + 4<32>:word32] + r6
	Mem49[&tLocF8:word32] = r7_174
	r6_35 = r6_35 + 4<32>
	branch r7_174 <u r5_30 l00409E2E
l00409E3E:
	word32 r23_52 = -r6
	word32 r18_169 = r4
	word32 r16_125 = 1<32>
l00409E46:
	branch r18_169 <u r22_37 l00409E5A
l00409E5A:
	word32 r7_123
	word32 r17_60 = Mem59[&tLocF8:word32]
	branch (r7_174 & 3<32>) != 3<32> l00409E80
l00409E80:
	word32 r30_64 = r16_125 + 0xFFFFFFFF<32>
	branch Mem59[fp - 0x30<32> + (r30_64 << 2<8>) - 0xC0<32>:word32] <u r19_172 l00409EAE
l00409EAE:
	word32 r4_525
	word32 r7_526
	word32 r8_527
	word32 r12_529
	word32 r11_528
	sift(r18_169, r17_60, r16_125, fp - 0xF0<32>, out r4_525, out r7_526, out r8_527, out r11_528, out r12_529)
l00409E92:
	word32 r4_530
	word32 r7_531
	word32 r8_532
	word32 r11_533
	word32 r12_534
	trinkle(r18_169, r17_60, &tLocF8, r16_125, 0<32>, fp - 0xF0<32>, out r4_530, out r7_531, out r8_532, out r11_533, out r12_534)
l00409EA0:
	branch r16_125 != 1<32> l00409EB8
l00409EB8:
	r7_123 = fn00409F48(&tLocF8, r30_64)
	r16_125 = 1<32>
l00409EA4:
	r7_123 = shl(&tLocF8, r16_125)
	r16_125 = 0<32>
l00409E62:
	word32 r7_514
	word32 r4_513
	word32 r8_515
	word32 r12_517
	word32 r11_516
	sift(r18_169, r17_60, r16_125, fp - 0xF0<32>, out r4_513, out r7_514, out r8_515, out r11_516, out r12_517)
	r16_125 = r16_125 + 2<32>
	word32 r8_518
	r7_123 = fn00409F4C(&tLocF8, 2<32>, out r8_518)
l00409E72:
	r17_166 = Mem59[&tLocF8:word32]
	r7_174 = r7_123 | 1<32>
	Mem175[&tLocF8:word32] = r7_174
	r18_169 = r18_169 + r17_166
	r19_172 = r19_172 - r17_166
l00409E4A:
	word32 r7_187
	r2 = trinkle(r18_169, r17_166, &tLocF8, r16_125, 0<32>, fp - 0xF0<32>, out r4, out r7_187, out r8, out r11, out r12)
l00409EDE:
	word32 r19_217
	branch r16_125 != 1<32> l00409EC2
l00409EC2:
	word32 r22_203 = r18_169 + r23_52
	branch r16_125 >= 2<32> l00409EF0
l00409EF0:
	word32 r7_210 = fn00409F48(&tLocF8, 2<32>)
	word32 r17_213 = Mem212[&tLocF8:word32]
	Mem218[&tLocF8:word32] = r7_210 ^ 7<32>
	word32 r8_519
	fn00409F4C(&tLocF8, 1<32>, out r8_519)
	r19_217 = r16_125 + 0xFFFFFFFE<32>
	word32 r11_523
	word32 r4_520
	word32 r7_521
	word32 r8_522
	word32 r12_524
	trinkle(r18_169 - (r17_213 + Mem218[((fp - 0x30<32>) + (r19_217 << 2<8>)) - 0xC0<32>:word32]), r17_213, &tLocF8, r16_125 + 0xFFFFFFFF<32>, 1<32>, fp - 0xF0<32>, out r4_520, out r7_521, out r8_522, out r11_523, out r12_524)
	word32 r7_258 = fn00409F48(&tLocF8, 1<32>)
	word32 r17_260 = Mem218[&tLocF8:word32]
	Mem265[&tLocF8:word32] = r7_258 | 1<32>
	r2 = trinkle(r22_203, r17_260, &tLocF8, r19_217, 1<32>, fp - 0xF0<32>, out r4, out r7_187, out r8, out r11, out r12)
l00409EE2:
	branch r7_187 != 1<32> l00409ECA
l00409EE8:
	branch r7_187 != 0<32> l00409ECA
l00409ECA:
	word32 r4_292 = pntz(&tLocF8)
	r4 = &tLocF8
	r19_217 = r16_125 + r4_292
	r7_187 = fn00409F4C(&tLocF8, r4_292, out r8)
l00409EDA:
	r18_169 = r18_169 + r23_52
	r16_125 = r19_217
l00409EEC:
	r4Out = r4
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
qsort_exit:


word32 fn00409F48(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      qsort
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r7
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
fn00409F48_entry:
l00409F48:
l00409F48_thunk_shl:
	return shl(r4, r5)
fn00409F48_exit:


word32 fn00409F4C(word32 r4, word32 r5, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      qsort
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r7 r8
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
fn00409F4C_entry:
l00409F4C:
l00409F4C_thunk_shr:
	word32 r8_10
	word32 r7_9 = shr(r4, r5, out r8_10)
	r8Out = r8_10
	return r7_9
fn00409F4C_exit:


void strtox(word32 r0, word32 r2, word32 r4, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strtof_l
//      strtod_l
//      strtold_l
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
strtox_entry:
	struct <anonymous> tLocA0
l00409F50:
	word32 r9_142
	word32 r10_143
	word32 r7_140
	word32 r8_141
	word32 r6_139
	memset(&tLocA0, 0<32>, 0x90<32>, out r6_139, out r7_140, out r8_141, out r9_142, out r10_143)
	Mem31[&tLocA0 + 8<i32>:word32] = 0xFFFFFFFF<32>
	Mem32[&tLocA0 + 76<i32>:word32] = 0xFFFFFFFF<32>
	Mem35[&tLocA0 + 4<i32>:word32] = r4
	Mem36[&tLocA0 + 44<i32>:word32] = r4
	word32 r10_146
	word32 r11_147
	word32 r8_144
	word32 r9_145
	__shlim(&tLocA0, 0<32>, 0<32>, out r8_144, out r9_145, out r10_146, out r11_147)
	word32 r4_61
	word32 r6_63
	word32 r7_64
	word32 r12_152
	word32 r10_150
	word32 r11_151
	word32 r3_148
	word32 r5_149
	__floatscan(r0, r2, &tLocA0, r6, 1<32>, r12, out r3_148, out r4_61, out r5_149, out r6_63, out r7_64, out r10_150, out r11_151, out r12_152)
	word32 r7_71 = r7_64 - r6_63
	word32 r6_75 = r7_71 + r6_63
	word32 r16_14 = r4
	word32 r17_73 = Mem36[&tLocA0 + 124<i32>:word32]
	word32 r7_78 = CONVERT(r6_75 <u r7_71, bool, word32) + ((r7_71 >> 0x1F<32>) + r4_61)
	branch r17_73 == 0<32> l00409FA0
l00409F98:
	branch (r7_78 | r6_75) == 0<32> l00409F9E
l00409F9C:
	r16_14 = r4 + r6_75
l00409F9E:
	Mem83[r17_73:word32] = r16_14
l00409FA0:
	return
strtox_exit:


void strtof_l(word32 r0, word32 r2, word32 r4, word32 r5, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
strtof_l_entry:
l00409FA4:
	strtox(r0, r2, r4, 0<32>, r12)
	word32 r9_40
	word32 r10_41
	__truncdfsf2(r4, r5, out r9_40, out r10_41)
	return
strtof_l_exit:


void strtod_l(word32 r0, word32 r2, word32 r4, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r6 r7 r8 r9
// Preserved: sp
strtod_l_entry:
l00409FB2:
l00409FB4_thunk_strtox:
	strtox(r0, r2, r4, 1<32>, r12)
	return
strtod_l_exit:


void strtold_l(word32 r0, word32 r2, word32 r4, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r6 r7 r8 r9
// Preserved: sp
strtold_l_entry:
l00409FB8:
l00409FBA_thunk_strtox:
	strtox(r0, r2, r4, 2<32>, r12)
	return
strtold_l_exit:


word32 strtox(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __strtoull_internal
//      __strtoul_internal
//      __strtol_internal
//      __strtoimax_internal
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
strtox_entry:
	struct <anonymous> tLocA0
l00409FC0:
	Mem19[&tLocA0:word32] = 0<32>
	Mem20[&tLocA0 + 4<i32>:word32] = r4
	Mem22[&tLocA0 + 44<i32>:word32] = r4
	word32 r7_21 = 0xFFFFFFFF<32>
	branch r4 < 0<32> l00409FDA
l00409FD2:
	r7_21 = r4 + 0x7FFFFFFF<32>
l00409FDA:
	Mem27[&tLocA0 + 8<i32>:word32] = r7_21
	Mem30[&tLocA0 + 76<i32>:word32] = 0xFFFFFFFF<32>
	word32 r9_128
	word32 r8_127
	word32 r11_130
	word32 r10_129
	__shlim(&tLocA0, 0<32>, 0<32>, out r8_127, out r9_128, out r10_129, out r11_130)
	word32 r3_58
	word32 r4_59
	word32 r5_60
	word32 r11_63
	word32 r12_64
	word32 r8_67
	word32 r9_68
	word32 r10_131
	word32 r6_114
	word32 r7_115
	word32 r2_65 = __intscan(r2, r3, &tLocA0, r6, 1<32>, r8, r9, r12, out r3_58, out r4_59, out r5_60, out r6_114, out r7_115, out r8_67, out r9_68, out r10_131, out r11_63, out r12_64)
	branch r5 == 0<32> l0040A00A
l00409FFA:
	r6_114 = Mem38[&tLocA0 + 120<i32>:word32]
	r7_115 = r7_115 - r6_114 + r6_114
	Mem80[Mem38[&tLocA0 + 4<i32>:word32]:word32] = r4 + r7_115
l0040A00A:
	r3Out = r3_58
	r4Out = r4_59
	r5Out = r5_60
	r6Out = r6_114
	r7Out = r7_115
	r8Out = r8_67
	r9Out = r9_68
	r11Out = r11_63
	r12Out = r12_64
	return r2_65
strtox_exit:


word32 __strtoull_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_ipliteral
//      __strtoumax_internal
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r5 r6 r7 r8 r9
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoull_internal_entry:
l0040A00C:
l0040A014_thunk_strtox:
	word32 r11_15
	word32 r12_16
	word32 r5_22
	word32 r6_23
	word32 r7_24
	word32 r8_25
	word32 r9_26
	word32 r3_34
	word32 r4_35
	word32 r2_18 = strtox(r2, r3, r4, r5, r6, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>, r12, out r3_34, out r4_35, out r5_22, out r6_23, out r7_24, out r8_25, out r9_26, out r11_15, out r12_16)
	r5Out = r5_22
	r6Out = r6_23
	r7Out = r7_24
	r8Out = r8_25
	r9Out = r9_26
	r11Out = r11_15
	r12Out = r12_16
	return r2_18
__strtoull_internal_exit:


void __strtoll_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __strtoimax_internal
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoll_internal_entry:
l0040A018:
l0040A01E_thunk_strtox:
	word32 r3_27
	word32 r4_28
	word32 r5_29
	word32 r6_30
	word32 r7_31
	word32 r8_32
	word32 r9_33
	word32 r11_34
	word32 r12_35
	strtox(r2, r3, r4, r5, r6, 0<32>, 0<32>, r12, out r3_27, out r4_28, out r5_29, out r6_30, out r7_31, out r8_32, out r9_33, out r11_34, out r12_35)
	return
__strtoll_internal_exit:


word32 __strtoul_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      hextoui
//      getnameinfo
//      __inet_aton
//      __lookup_serv
//      __get_resolv_conf
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r3 r4 r6 r7 r8 r9
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__strtoul_internal_entry:
l0040A022:
	word32 r11_18
	word32 r12_19
	word32 r3_23
	word32 r4_24
	word32 r6_26
	word32 r7_27
	word32 r8_28
	word32 r9_29
	word32 r5_41
	word32 r2_21 = strtox(r2, r3, r4, r5, r6, 0xFFFFFFFF<32>, 0<32>, r12, out r3_23, out r4_24, out r5_41, out r6_26, out r7_27, out r8_28, out r9_29, out r11_18, out r12_19)
	r3Out = r3_23
	r4Out = r4_24
	r6Out = r6_26
	r7Out = r7_27
	r8Out = r8_28
	r9Out = r9_29
	r11Out = r11_18
	r12Out = r12_19
	return r2_21
__strtoul_internal_exit:


void __strtol_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__strtol_internal_entry:
l0040A030:
	word32 r3_33
	word32 r4_34
	word32 r5_35
	word32 r6_36
	word32 r7_37
	word32 r8_38
	word32 r9_39
	word32 r11_40
	word32 r12_41
	strtox(r2, r3, r4, r5, r6, 0<32>, 0<32>, r12, out r3_33, out r4_34, out r5_35, out r6_36, out r7_37, out r8_38, out r9_39, out r11_40, out r12_41)
	return
__strtol_internal_exit:


void __strtoimax_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoimax_internal_entry:
l0040A03E:
l0040A03E_thunk___strtoll_internal:
	__strtoll_internal(r2, r3, r4, r5, r6, r12)
	return
__strtoimax_internal_exit:


void __strtoumax_internal(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__strtoumax_internal_entry:
l0040A042:
l0040A042_thunk___strtoull_internal:
	word32 r5_25
	word32 r6_26
	word32 r7_27
	word32 r8_28
	word32 r9_29
	word32 r11_30
	word32 r12_31
	__strtoull_internal(r2, r3, r4, r5, r6, r12, out r5_25, out r6_26, out r7_27, out r8_28, out r9_29, out r11_30, out r12_31)
	return
__strtoumax_internal_exit:


word32 memchr(word32 r4, word32 r5, word32 r6, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping6_run
//      fgets_unlocked
//      strnlen
//      strstr
//      __string_read
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4 r5 r6 r8
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
memchr_entry:
	word32 r8
l0040A050:
	branch (r4 & 3<32>) == 0<32> l0040A072
l0040A056:
	branch r6 == 0<32> l0040A0F8
l0040A05A:
	branch (r5 & 0xFF<32>) != CONVERT(Mem0[r4:byte], byte, word32) l0040A06A
l0040A06A:
	r4 = r4 + 1<32>
	r6 = r6 + 0xFFFFFFFF<32>
	branch (r4 & 3<32>) != 0<32> l0040A060
l0040A060:
	branch r6 == 0<32> l0040A0F8
l0040A064:
	branch (r5 & 0xFF<32>) == CONVERT(Mem0[r4:byte], byte, word32) l0040A0FC
l0040A072:
	branch r6 == 0<32> l0040A0F8
l0040A076:
	branch (r5 & 0xFF<32>) == CONVERT(Mem0[r4:byte], byte, word32) l0040A0FC
l0040A07C:
	word32 r9_25 = ((r5 & 0xFF<32>) << 8<32>) + (r5 & 0xFF<32>)
	branch r6 <u 4<32> l0040A0E0
l0040A08C:
	word32 r7_29 = r9_25 * 0x10001<32> ^ Mem0[r4:word32]
	r8 = 0x80808080<32>
	branch (~r7_29 & r7_29 + 0xFEFEFEFF<32> & 0x80808080<32>) != 0<32> l0040A0E0
l0040A0AC:
	r8 = r4
l0040A0CE:
	r6 = r6 + 0xFFFFFFFC<32>
	r8 = r8 + 4<32>
	branch r6 >=u 4<32> l0040A0B0
l0040A0B0:
	word32 r7_43 = r9_25 * 0x10001<32> ^ Mem0[r8:word32]
	branch (~r7_43 & r7_43 + 0xFEFEFEFF<32> & 0x80808080<32>) != 0<32> l0040A0D8
l0040A0D6:
	branch r6 == 0<32> l0040A0F8
l0040A0D8:
	r4 = r8
	branch (r5 & 0xFF<32>) == CONVERT(Mem0[r8:byte], byte, word32) l0040A0FC
l0040A0E0:
	word32 r7_57 = r4 + 1<32>
	r6 = r4 + r6
l0040A0F2:
	r4 = r7_57
	branch r7_57 != r6 l0040A0E8
l0040A0E8:
	r8 = CONVERT(Mem0[r7_57:byte], byte, word32)
	r7_57 = r7_57 + 1<32>
	branch (r5 & 0xFF<32>) == r8 l0040A0FC
l0040A0F8:
	r5Out = <invalid>
	r6Out = r6
	r8Out = r8
	return 0<32>
l0040A05E:
l0040A0FC:
	r5Out = <invalid>
	r6Out = r6
	r8Out = r8
	return r4
memchr_exit:


word32 memcmp(word32 r4, word32 r5, word32 r6, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      pr_addr
//      pr_options
//      ping6_receive_error_msg
//      ping6_parse_reply
//      getnameinfo
//      inet_ntop
//      policyof
//      __res_msend_rc
//      strstr
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4 r7 r8 r9
// Trashed: r25 r4 r7 r8 r9
// Preserved: sp
memcmp_entry:
	word32 r7
	word32 r8
	word32 r9
l0040A100:
	branch r6 == 0<32> l0040A12A
l0040A102:
	r8 = CONVERT(Mem0[r4:byte], byte, word32)
	r9 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r9 != r8 l0040A124
l0040A10E:
	r7 = 1<32>
l0040A110:
	branch r6 == r7 l0040A12A
l0040A12A:
	r7Out = r7
	r8Out = r8
	r9Out = r9
	return 0<32>
l0040A112:
	r7 = r7 + 1<32>
	r8 = CONVERT(Mem0[r4 + r7:byte], byte, word32)
	r9 = CONVERT(Mem0[r5 + r7 - 1<32>:byte], byte, word32)
	branch r8 == r9 l0040A110
l0040A124:
	r7Out = r7
	r8Out = r8
	r9Out = r9
	return r8 - r9
memcmp_exit:


word32 memcpy(word32 r4, word32 r5, word32 r6, ptr32 & r3Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_send_probe
//      fn00400B52
//      fn00401608
//      gather_statistics
//      fn004034E2
//      ping6_run
//      realloc
//      getaddrinfo
//      fn0040601C
//      netlink_msg_to_ifaddr
//      fn0040628E
//      getnameinfo
//      fn004066AA
//      fn00406C24
//      name_from_hosts
//      dns_parse_callback
//      __lookup_name
//      fn0040738E
//      res_mkquery
//      __res_msend_rc
//      __get_resolv_conf
//      __get_handler_set
//      __libc_sigaction
//      fgets_unlocked
//      __fwritex
//      vfprintf
//      sn_write
//      vsnprintf
//      vsprintf
//      __isoc99_vsscanf
//      cycle
//      memmove
//      __strdup
//      __copy_tls
//      __string_read
//      arg_n
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r10 r11 r12 r13 r2 r3 r5 r6 r7 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: r16 r17 sp
memcpy_entry:
	word32 r10
	word32 r11
	word32 r12
	word32 r13
	word32 r2
	word32 r3
	word32 r8
	word32 r9
l0040A130:
	word32 r7_201 = r5 & 3<32>
	branch (r5 & 3<32>) == 0<32> l0040A4F2
l0040A4F2:
	r13 = r4
l0040A136:
	branch r6 == 0<32> l0040A1EE
l0040A13A:
	r13 = r4
l0040A142:
	r5 = r5 + 1<32>
	r13 = r13 + 1<32>
	word32 r8_15 = CONVERT(Mem14[r5 - 1<32>:byte], byte, word32)
	Mem19[r13 - 1<32>:int8] = SLICE(r8_15, int8, 0)
	r6 = r6 + 0xFFFFFFFF<32>
	branch (r5 & 3<32>) != 0<32> l0040A13E
l0040A13E:
	branch r6 == 0<32> l0040A286
l0040A286:
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r5 & 3<32>
	r8Out = r8_15
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	return r2
l0040A154:
	r8 = r13 & 3<32>
	branch r8 != 0<32> l0040A1F0
l0040A1F0:
	branch r6 <u 0x20<32> l0040A322
l0040A1F4:
	word32 r24_136
	word32 r6_175
	word32 r5_138
	word32 r13_176
	word32 r9_35 = CONVERT(Mem29[r5:byte], byte, word32)
	word32 r7_103 = Mem29[r5:word32]
	branch r8 == 2<32> l0040A288
l0040A288:
	Mem44[r13 + 1<32>:byte] = Mem29[r5 + 1<32>:byte]
	Mem47[r13:byte] = SLICE(r9_35, byte, 0)
	word32 r16_37 = r6 + 0xFFFFFFEC<32>
	r24_136 = r13 + 2<32>
	r5_138 = r5 + 2<32>
	word32 r25_45 = r24_136 + ((r16_37 >>u 4<32>) + 1<32> << 4<32>)
	r2 = r5_138
	word32 r8_48 = r24_136
l0040A2B0:
	word32 r11_51 = Mem50[r2 + 2<32>:word32]
	r7_103 = Mem50[r2 + 0xE<32>:word32]
	word32 r10_54 = Mem50[r2 + 6<32>:word32]
	word32 r9_55 = Mem50[r2 + 0xA<32>:word32]
	r3 = r7_103 >>u 0x10<32> | r11_51 << 0x10<32>
	Mem69[r8_48:byte] = SLICE(r3, byte, 0)
	r11 = r11_51 >>u 0x10<32> | r10_54 << 0x10<32>
	Mem70[r8_48 + 4<32>:byte] = SLICE(r11, byte, 0)
	Mem72[r8_48 + 2<32>:word32] = r10_54 >>u 0x10<32> | r9_55 << 0x10<32>
	Mem73[r8_48 + 3<32>:word32] = r9_55 >>u 0x10<32> | r7_103 << 0x10<32>
	r12 = r7_103 << 0x10<32>
	r2 = r2 + 0x10<32>
	r8_48 = r8_48 + 0x10<32>
	branch r8_48 != r25_45 l0040A2B0
l0040A308:
	r6_175 = r6 + 0xFFFFFFEE<32>
	r13_176 = __ins(r16_37, 0<32>, 0<32>, 1<32>)
l0040A1FE:
	branch r8 != 3<32> l0040A44A
l0040A44A:
	word32 r17_84 = CONVERT(Mem29[r5 + 2<32>:byte], byte, word32)
	Mem89[r13 + 1<32>:byte] = Mem29[r5 + 1<32>:byte]
	Mem92[r13:byte] = SLICE(r9_35, byte, 0)
	Mem93[r13 + 2<32>:byte] = SLICE(r17_84, byte, 0)
	word32 r24_81 = r6 + 0xFFFFFFEC<32>
	word32 r16_86 = r13 + 3<32>
	word32 r5_87 = r5 + 3<32>
	word32 r15_90 = r16_86 + ((r24_81 >>u 4<32>) + 1<32> << 4<32>)
	r2 = r5_87
	word32 r8_114 = r16_86
l0040A47A:
	word32 r11_97 = Mem96[r2 + 1<32>:word32]
	r7_103 = Mem96[r2 + 0xD<32>:word32]
	word32 r10_100 = Mem96[r2 + 5<32>:word32]
	word32 r9_101 = Mem96[r2 + 9<32>:word32]
	r3 = r7_103 >>u 0x18<32> | r11_97 << 8<32>
	Mem115[r8_114:byte] = SLICE(r3, byte, 0)
	r11 = r11_97 >>u 0x18<32> | r10_100 << 8<32>
	Mem116[r8_114 + 4<32>:byte] = SLICE(r11, byte, 0)
	Mem118[r8_114 + 2<32>:word32] = r10_100 >>u 0x18<32> | r9_101 << 8<32>
	Mem119[r8_114 + 3<32>:word32] = r9_101 >>u 0x18<32> | r7_103 << 8<32>
	r12 = r7_103 << 8<32>
	r2 = r2 + 0x10<32>
	r8_114 = r8_114 + 0x10<32>
	branch r8_114 != r15_90 l0040A47A
l0040A4D2:
	word32 r13_126 = __ins(r24_81, 0<32>, 0<32>, 1<32>)
	r6 = r6 + 0xFFFFFFED<32> - __align(r24_81, 16<i32>)
	r5 = r5_87 + (r13_126 + 0x10<32>)
	r13 = r16_86 + (r13_126 + 0x10<32>)
l0040A202:
	word32 r16_135 = r6 + 0xFFFFFFEC<32>
	word32 r25_143 = r13 + (__align(r16_135, 16<i32>) + 0x11<32>)
	Mem144[r13:byte] = SLICE(r9_35, byte, 0)
	r5_138 = r5 + 1<32>
	r24_136 = r13 + 1<32>
	r2 = r5_138
	word32 r8_142 = r24_136
l0040A222:
	word32 r11_147 = Mem146[r2 + 3<32>:word32]
	r7_103 = Mem146[r2 + 0xF<32>:word32]
	word32 r10_150 = Mem146[r2 + 7<32>:word32]
	word32 r9_151 = Mem146[r2 + 0xB<32>:word32]
	r3 = r7_103 >>u 8<32> | r11_147 << 0x18<32>
	Mem165[r8_142:byte] = SLICE(r3, byte, 0)
	r11 = r11_147 >>u 8<32> | r10_150 << 0x18<32>
	Mem166[r8_142 + 4<32>:byte] = SLICE(r11, byte, 0)
	Mem168[r8_142 + 2<32>:word32] = r10_150 >>u 8<32> | r9_151 << 0x18<32>
	Mem169[r8_142 + 3<32>:word32] = r9_151 >>u 8<32> | r7_103 << 0x18<32>
	r12 = r7_103 << 0x18<32>
	r2 = r2 + 0x10<32>
	r8_142 = r8_142 + 0x10<32>
	branch r8_142 != r25_143 l0040A222
l0040A27A:
	r6_175 = r6 + 0xFFFFFFEF<32>
	r13_176 = __ins(r16_135, 0<32>, 0<32>, 1<32>)
l0040A312:
	word32 r13_178 = r13_176 + 0x10<32>
	r5 = r5_138 + r13_178
	r6 = r6_175 - __align(r6 + 0xFFFFFFEC<32>, 16<i32>)
	r13 = r24_136 + r13_178
l0040A322:
	word32 r8_194 = r6 & 8<32>
	r10 = r6 & 4<32>
	word32 r17_196 = r6 & 2<32>
	word32 r16_197 = r6 & 1<32>
	branch __bit(r6, 4<32>) l0040A4F6
l0040A4F6:
	r6 = r5
	r7_201 = r13
l0040A332:
	word32 r6_205 = CONVERT(Mem202[r5 + 1<32>:byte], byte, word32)
	Mem206[r13 + 2<32>:byte] = Mem202[r5 + 2<32>:byte]
	word32 r7_208 = CONVERT(Mem206[r5:byte], byte, word32)
	Mem209[r13 + 3<32>:byte] = Mem206[r5 + 3<32>:byte]
	word32 r25_211 = CONVERT(Mem209[r5 + 6<32>:byte], byte, word32)
	Mem212[r13 + 4<32>:byte] = Mem209[r5 + 4<32>:byte]
	word32 r9_213 = CONVERT(Mem212[r5 + 5<32>:byte], byte, word32)
	word32 r24_214 = CONVERT(Mem212[r5 + 7<32>:byte], byte, word32)
	word32 r15_215 = CONVERT(Mem212[r5 + 8<32>:byte], byte, word32)
	word32 r14_216 = CONVERT(Mem212[r5 + 9<32>:byte], byte, word32)
	r12 = CONVERT(Mem212[r5 + 0xA<32>:byte], byte, word32)
	r3 = CONVERT(Mem212[r5 + 0xB<32>:byte], byte, word32)
	r2 = CONVERT(Mem212[r5 + 0xC<32>:byte], byte, word32)
	r11 = CONVERT(Mem212[r5 + 0xD<32>:byte], byte, word32)
	Mem221[r13 + 1<32>:byte] = SLICE(r6_205, byte, 0)
	Mem223[r13 + 5<32>:byte] = SLICE(r9_213, byte, 0)
	word32 r9_224 = CONVERT(Mem223[r5 + 0xE<32>:byte], byte, word32)
	word32 r5_225 = CONVERT(Mem223[r5 + 0xF<32>:byte], byte, word32)
	Mem226[r13:byte] = SLICE(r7_208, byte, 0)
	Mem228[r13 + 6<32>:byte] = SLICE(r25_211, byte, 0)
	Mem229[r13 + 7<32>:byte] = SLICE(r24_214, byte, 0)
	Mem230[r13 + 8<32>:byte] = SLICE(r15_215, byte, 0)
	Mem231[r13 + 9<32>:byte] = SLICE(r14_216, byte, 0)
	Mem232[r13 + 0xA<32>:byte] = SLICE(r12, byte, 0)
	Mem233[r13 + 0xB<32>:byte] = SLICE(r3, byte, 0)
	Mem234[r13 + 0xC<32>:byte] = SLICE(r2, byte, 0)
	Mem235[r13 + 0xD<32>:byte] = SLICE(r11, byte, 0)
	Mem236[r13 + 0xE<32>:byte] = SLICE(r9_224, byte, 0)
	Mem237[r13 + 0xF<32>:byte] = SLICE(r5_225, byte, 0)
	r6 = r5 + 0x10<32>
	r7_201 = r13 + 0x10<32>
l0040A3B4:
	branch r8_194 == 0<32> l0040A4FC
l0040A4FC:
	r9 = r6
	r8 = r7_201
l0040A3B8:
	word32 r13_246 = CONVERT(Mem243[r6 + 1<32>:byte], byte, word32)
	r12 = CONVERT(Mem243[r6 + 2<32>:byte], byte, word32)
	r3 = CONVERT(Mem243[r6 + 3<32>:byte], byte, word32)
	r2 = CONVERT(Mem243[r6 + 4<32>:byte], byte, word32)
	r11 = CONVERT(Mem243[r6 + 5<32>:byte], byte, word32)
	word32 r5_252 = CONVERT(Mem243[r6 + 6<32>:byte], byte, word32)
	r6 = CONVERT(Mem243[r6 + 7<32>:byte], byte, word32)
	Mem254[r7_201:byte] = Mem243[r6:byte]
	Mem255[r7_201 + 1<32>:byte] = SLICE(r13_246, byte, 0)
	Mem256[r7_201 + 2<32>:byte] = SLICE(r12, byte, 0)
	Mem257[r7_201 + 3<32>:byte] = SLICE(r3, byte, 0)
	Mem258[r7_201 + 4<32>:byte] = SLICE(r2, byte, 0)
	Mem259[r7_201 + 5<32>:byte] = SLICE(r11, byte, 0)
	Mem260[r7_201 + 6<32>:byte] = SLICE(r5_252, byte, 0)
	Mem261[r7_201 + 7<32>:byte] = SLICE(r6, byte, 0)
	r9 = r6 + 8<32>
	r8 = r7_201 + 8<32>
l0040A400:
	branch r10 == 0<32> l0040A500
l0040A500:
	r5 = r9
	r13 = r8
l0040A404:
	r11 = CONVERT(Mem268[r9:byte], byte, word32)
	r10 = CONVERT(Mem268[r9 + 1<32>:byte], byte, word32)
	r6 = CONVERT(Mem268[r9 + 2<32>:byte], byte, word32)
	r7_201 = CONVERT(Mem268[r9 + 3<32>:byte], byte, word32)
	Mem275[r8:byte] = SLICE(r11, byte, 0)
	Mem276[r8 + 1<32>:byte] = SLICE(r10, byte, 0)
	Mem277[r8 + 2<32>:byte] = SLICE(r6, byte, 0)
	Mem278[r8 + 3<32>:byte] = SLICE(r7_201, byte, 0)
	r13 = r8 + 4<32>
	r5 = r9 + 4<32>
l0040A42C:
	branch r17_196 == 0<32> l0040A43E
l0040A42E:
	r6 = CONVERT(Mem283[r5:byte], byte, word32)
	r7_201 = CONVERT(Mem283[r5 + 1<32>:byte], byte, word32)
	Mem288[r13:byte] = SLICE(r6, byte, 0)
	Mem289[r13 + 1<32>:byte] = SLICE(r7_201, byte, 0)
	r5 = r5 + 2<32>
	r13 = r13 + 2<32>
l0040A43E:
	branch r16_197 == 0<32> l0040A1EA
l0040A442:
	r7_201 = CONVERT(Mem296[r5:byte], byte, word32)
	Mem299[r13:byte] = SLICE(r7_201, byte, 0)
l0040A160:
	word32 r16_301
	word32 r17_300
	branch r6 <u 0x10<32> l0040A506
l0040A506:
	r17_300 = r6 & 8<32>
	r16_301 = r6 & 4<32>
	r7_201 = r6 & 2<32>
	r6 = r6 & 1<32>
l0040A164:
	r12 = r6 + 0xFFFFFFF0<32>
	r8 = r5
	word32 r7_307 = r13
	r3 = r13 + (__ins(r12, 0<32>, 0<32>, 1<32>) + 0x10<32>)
l0040A17A:
	r2 = Mem312[r8:word32]
	r11 = Mem312[r8 + 1<32>:word32]
	r10 = Mem312[r8 + 2<32>:word32]
	r9 = Mem312[r8 + 3<32>:word32]
	Mem319[r7_307:byte] = SLICE(r2, byte, 0)
	Mem320[r7_307 + 4<32>:byte] = SLICE(r11, byte, 0)
	Mem321[r7_307 + 2<32>:word32] = r10
	Mem322[r7_307 + 3<32>:word32] = r9
	r8 = r8 + 0x10<32>
	r7_307 = r7_307 + 0x10<32>
	branch r7_307 != r3 l0040A17A
l0040A19A:
	word32 r7_329 = __ins(r12, 0<32>, 0<32>, 1<32>)
	r17_300 = r6 & 8<32>
	r16_301 = r6 & 4<32>
	r5 = r5 + (r7_329 + 0x10<32>)
	r13 = r13 + (r7_329 + 0x10<32>)
	r7_201 = r6 & 2<32>
	r6 = r6 & 1<32>
l0040A1B0:
	branch r17_300 == 0<32> l0040A1C4
l0040A1B2:
	r8 = Mem340[r5:word32]
	word32 r17_342 = Mem340[r5 + 4<32>:word32]
	Mem345[r13:byte] = SLICE(r8, byte, 0)
	Mem346[r13 + 4<32>:byte] = SLICE(r17_342, byte, 0)
	r5 = r5 + 8<32>
	r13 = r13 + 8<32>
l0040A1C4:
	branch r16_301 == 0<32> l0040A1D0
l0040A1C6:
	Mem355[r13:byte] = Mem351[r5:byte]
	r5 = r5 + 4<32>
	r13 = r13 + 4<32>
l0040A1D0:
	branch r7_201 == 0<32> l0040A1E2
l0040A1D2:
	r7_201 = CONVERT(Mem361[r5 + 1<32>:byte], byte, word32)
	Mem366[r13:byte] = Mem361[r5:byte]
	Mem367[r13 + 1<32>:byte] = SLICE(r7_201, byte, 0)
	r5 = r5 + 2<32>
	r13 = r13 + 2<32>
l0040A1E2:
	branch r6 == 0<32> l0040A1EA
l0040A1E4:
	r7_201 = CONVERT(Mem374[r5:byte], byte, word32)
	Mem377[r13:byte] = SLICE(r7_201, byte, 0)
l0040A1EA:
l0040A1EE:
	r3Out = r3
	r5Out = r5
	r6Out = r6
	r7Out = r7_201
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	r13Out = r13
	return r2
memcpy_exit:


word32 memmove(word32 r4, word32 r5, word32 r6, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      inet_ntop
//      inet_pton
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r11 r12 r2 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r5 r6 r7 r8 r9
// Preserved: sp
memmove_entry:
	word32 r11
	word32 r12
	word32 r2
	word32 r8
	word32 r9
l0040A510:
	branch r4 == r5 l0040A688
l0040A514:
	branch r4 >=u r5 + r6 l0040A616
l0040A51A:
	word32 r7_8 = r4 + r6
	branch r5 >=u r7_8 l0040A616
l0040A616:
l0040A616_thunk_memcpy:
	word32 r8_17
	word32 r9_18
	word32 r11_20
	word32 r12_21
	word32 r3_333
	word32 r13_338
	word32 r10_337
	word32 r5_334
	word32 r7_336
	word32 r6_335
	word32 r2_24 = memcpy(r4, r5, r6, out r3_333, out r5_334, out r6_335, out r7_336, out r8_17, out r9_18, out r10_337, out r11_20, out r12_21, out r13_338)
	r8Out = r8_17
	r9Out = r9_18
	r11Out = r11_20
	r12Out = r12_21
	return r2_24
l0040A520:
	word32 r8_27 = r5 ^ r4
	r8 = r8_27 & 3<32>
	branch r4 >=u r5 l0040A61A
l0040A61A:
	branch (r8_27 & 3<32>) != 0<32> l0040A658
l0040A61E:
	word32 r7_30
	branch (r7_8 & 3<32>) == 0<32> l0040A680
l0040A680:
	r7_30 = r6
l0040A622:
	r7_30 = r6 + 0xFFFFFFFF<32>
	branch r6 != 0<32> l0040A630
l0040A630:
	r8 = CONVERT(Mem34[r5 + r7_30:byte], byte, word32)
	Mem40[r7_30 + r4:byte] = SLICE(r8, byte, 0)
	r9 = 0xFFFFFFFF<32>
	branch (r4 + r7_30 & 3<32>) != 0<32> l0040A62A
l0040A62A:
	r7_30 = r7_30 + 0xFFFFFFFF<32>
	branch r7_30 == 0xFFFFFFFF<32> l0040A688
l0040A642:
	r6 = r7_30
	branch r7_30 <u 4<32> l0040A658
l0040A648:
	r6 = r6 + 0xFFFFFFFC<32>
	r8 = Mem47[r5 + r6:word32]
	Mem50[r4 + r6:word32] = r8
	branch r6 >=u 4<32> l0040A648
l0040A656:
	r6 = r7_30 & 3<32>
l0040A658:
	branch r6 == 0<32> l0040A688
l0040A65A:
	r6 = r6 + 0xFFFFFFFF<32>
	Mem59[r6 + r4:byte] = Mem56[r5 + r6:byte]
l0040A628:
l0040A52C:
	word32 r7_103
	branch (r8_27 & 3<32>) != 0<32> l0040A666
l0040A666:
	r7_103 = r4
l0040A530:
	branch (r4 & 3<32>) == 0<32> l0040A67C
l0040A67C:
	r7_103 = r4
	r8 = r6
l0040A536:
	r8 = r6 + 0xFFFFFFFF<32>
	r7_103 = r4
	branch r6 != 0<32> l0040A546
l0040A546:
	r5 = r5 + 1<32>
	r7_103 = r7_103 + 1<32>
	r9 = CONVERT(Mem70[r5 - 1<32>:byte], byte, word32)
	Mem74[r7_103 - 1<32>:int8] = SLICE(r9, int8, 0)
	branch (r7_103 & 3<32>) != 0<32> l0040A540
l0040A540:
	r8 = r8 + 0xFFFFFFFF<32>
	branch r8 == 0xFFFFFFFF<32> l0040A688
l0040A55A:
	branch r8 <u 4<32> l0040A684
l0040A684:
	r6 = r8
l0040A55E:
	word32 r11_79 = r8 + 0xFFFFFFFC<32>
	word32 r6_80 = 0<32>
	word32 r10_82 = __ins(r11_79, 0<32>, 0<32>, 1<32>)
l0040A56C:
	r9 = Mem86[r5 + r6_80:word32]
	Mem89[r7_103 + r6_80:word32] = r9
	r6_80 = r6_80 + 4<32>
	branch r6_80 != r10_82 + 4<32> l0040A56C
l0040A57A:
	r11 = __ins(r11_79, 0<32>, 0<32>, 1<32>)
	r6 = r8 & 3<32>
	r8 = r11 + 4<32>
	r7_103 = r7_103 + (r11 + 4<32>)
	r5 = r5 + (r11 + 4<32>)
l0040A58A:
	branch r6 == 0<32> l0040A688
l0040A58E:
	branch ((CONVERT(r6 <u 0xA<32>, bool, word32) ^ 1<32>) & (CONVERT(r7_103 <u r5 + 4<32>, bool, word32) ^ 1<32> | CONVERT(r5 <u r7_103 + 4<32>, bool, word32) ^ 1<32>)) == 0<32> l0040A66A
l0040A5BA:
	branch ((r5 | r7_103) & 3<32>) != 0<32> l0040A66A
l0040A66A:
	word32 r8_116 = 0<32>
l0040A66C:
	word32 r9_120 = CONVERT(Mem119[r5 + r8_116:byte], byte, word32)
	Mem122[r8_116 + r7_103:byte] = SLICE(r9_120, byte, 0)
	r8_116 = r8_116 + 1<32>
	branch r6 != r8_116 l0040A66C
l0040A67A:
	r8Out = r8_116
	r9Out = r9_120
	r11Out = r11
	r12Out = r12
	return r2
l0040A5C6:
	word32 r9_126 = 0<32>
	word32 r8_128 = (r6 + 0xFFFFFFFC<32> >>u 2<32>) + 1<32>
l0040A5D6:
	Mem135[r7_103 + r9_126 * 4<32>:word32] = Mem132[r5 + r9_126 * 4<32>:word32]
	r9_126 = r9_126 + 1<32>
	branch r9_126 <u r8_128 l0040A5D6
l0040A5E4:
	r8 = r6 - (r8_128 << 2<32>)
	r9 = r7_103 + (r8_128 << 2<32>)
	r11 = r5 + (r8_128 << 2<32>)
	branch r6 == r8_128 << 2<32> l0040A688
l0040A5F4:
	Mem144[(r8_128 << 2<32>) + r7_103:byte] = Mem135[r5 + (r8_128 << 2<32>):byte]
	branch r8 == 1<32> l0040A688
l0040A600:
	Mem146[r9 + 1<32>:byte] = Mem144[r11 + 1<32>:byte]
	branch r8 == 2<32> l0040A688
l0040A60C:
	Mem148[r9 + 2<32>:byte] = Mem146[r11 + 2<32>:byte]
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
l0040A53E:
l0040A688:
	r8Out = r8
	r9Out = r9
	r11Out = r11
	r12Out = r12
	return r2
memmove_exit:


word32 memset(word32 r4, word32 r5, word32 r6, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      fn00400B4E
//      fn00401366
//      fn0040271C
//      fn00402CEE
//      niquery_option_subject_addr_handler
//      ping6_run
//      __init_libc
//      getaddrinfo
//      netlink_msg_to_ifaddr
//      getifaddrs
//      __netlink_enumerate
//      res_mkquery
//      __res_msend_rc
//      __fopen_rb_ca
//      pad
//      vfprintf
//      vsnprintf
//      __isoc99_vsscanf
//      strtold_l
//      __isoc99_vfscanf
//      stpncpy
//      fn0040E008
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r10 r5 r6 r7 r8 r9
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
memset_entry:
	word32 r10
	word32 r7
	word32 r8
	word32 r9
l0040A690:
	branch r6 == 0<32> l0040A74C
l0040A694:
	r8 = r4 + r6
	Mem9[r8 - 1<32>:int8] = SLICE(r5, int8, 0)
	Mem10[r4:byte] = SLICE(r5, byte, 0)
	r7 = r5 & 0xFF<32>
	branch r6 <u 3<32> l0040A74C
l0040A6A4:
	Mem11[r8 - 2<32>:int8] = SLICE(r5, int8, 0)
	Mem12[r4 + 1<32>:byte] = SLICE(r5, byte, 0)
	Mem13[r8 - 3<32>:int8] = SLICE(r5, int8, 0)
	Mem14[r4 + 2<32>:byte] = SLICE(r5, byte, 0)
	branch r6 <u 7<32> l0040A74C
l0040A6B4:
	Mem15[r8 - 4<32>:int8] = SLICE(r5, int8, 0)
	Mem16[r4 + 3<32>:byte] = SLICE(r5, byte, 0)
	branch r6 <u 9<32> l0040A74C
l0040A6BE:
	word32 r9_17 = -r4
	word32 r6_23 = __ins(r6 - (r9_17 & 3<32>), 0<32>, 0<32>, 1<32>)
	r5 = ((r5 & 0xFF<32>) << 8<32>) + (r5 & 0xFF<32>)
	Mem29[r4 + (r9_17 & 3<32>):word32] = r5 * 0x10001<32>
	r7 = r4 + (r9_17 & 3<32>)
	r10 = r7 + r6_23
	Mem30[r10 - 4<32>:word32] = r5 * 0x10001<32>
	r9 = r9_17 & 3<32>
	r8 = r6_23
	r6 = r5 * 0x10001<32>
	branch r6_23 <u 9<32> l0040A74C
l0040A6F0:
	Mem33[r10 - 0xC<32>:word32] = r5 * 0x10001<32>
	Mem34[r10 - 8<32>:word32] = r5 * 0x10001<32>
	branch r6_23 <u 0x19<32> l0040A74C
l0040A700:
	r5 = (r7 & 4<32>) + 0x18<32>
	Mem43[r10 - 0x1C<32>:word32] = r5 * 0x10001<32>
	Mem44[r10 - 0x18<32>:word32] = r5 * 0x10001<32>
	Mem45[r10 - 0x14<32>:word32] = r5 * 0x10001<32>
	Mem46[r10 - 0x10<32>:word32] = r5 * 0x10001<32>
	r8 = r6_23 - r5
	r7 = r7 + r5
	branch r8 <u 0x20<32> l0040A74C
l0040A726:
	r5 = r7 + (__ins(r8 + 0xFFFFFFE0<32>, 0<32>, 0<32>, 1<32>) + 0x20<32>)
l0040A734:
	r7 = r7 + 0x20<32>
	branch r7 != r5 l0040A734
l0040A74C:
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r9Out = r9
	r10Out = r10
	return r5
memset_exit:


void strcat(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r17 r25 r5 r6 r7 r8 r9
// Preserved: r16 r4 ra sp
strcat_entry:
l0040A750:
	word32 r5_15
	word32 r6_34
	word32 r7_35
	word32 r6_36
	word32 r7_37
	word32 r8_38
	strcpy(r4 + strlen(r4, out r5_15, out r6_34, out r7_35), r5_15, out r6_36, out r7_37, out r8_38)
	return
strcat_exit:


word32 strchr(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      __lookup_ipliteral
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
//      strstr
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
strchr_entry:
l0040A770:
	word32 r4_16 = strchrnul(r4, r5)
	branch (CONVERT(Mem7[r4_16:byte], byte, word32) ^ r5 & 0xFF<32>) == 0<32> l0040A782
l0040A77E_1:
	r4_16 = 0<32>
l0040A782:
	return r4_16
strchr_exit:


word32 strchrnul(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strchr
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
strchrnul_entry:
l0040A790:
	word32 r16_12 = r4
	branch (r5 & 0xFF<32>) != 0<32> l0040A7A6
l0040A7A6:
	branch (r16_12 & 3<32>) != 0<32> l0040A79A
l0040A79A:
	word32 r7_16 = CONVERT(Mem7[r16_12:byte], byte, word32)
	branch r7_16 == 0<32> l0040A820
l0040A7A0:
	branch (r5 & 0xFF<32>) == r7_16 l0040A820
l0040A7A4:
	r16_12 = r16_12 + 1<32>
l0040A7AA:
	word32 r7_20 = Mem7[r16_12:word32]
	word32 r10_21 = ((r5 & 0xFF<32>) << 8<32>) + (r5 & 0xFF<32>)
	word32 r7_27 = r10_21 * 0x10001<32> ^ r7_20
	branch ((~r7_27 & r7_27 + 0xFEFEFEFF<32> | r7_20 + 0xFEFEFEFF<32> & ~r7_20) & 0x80808080<32>) != 0<32> l0040A814
l0040A7E0:
	word32 r4_35 = r16_12
l0040A7E2:
	r4_35 = r4_35 + 4<32>
	word32 r8_40 = Mem7[r4_35:word32]
	word32 r9_42 = r10_21 * 0x10001<32> ^ r8_40
	branch ((r8_40 + 0xFEFEFEFF<32> & ~r8_40 | r9_42 + 0xFEFEFEFF<32> & ~r9_42) & 0x80808080<32>) == 0<32> l0040A7E2
l0040A812:
	r16_12 = r4_35
l0040A814:
	word32 r7_55 = CONVERT(Mem7[r16_12:byte], byte, word32)
	branch r7_55 == 0<32> l0040A820
l0040A818:
	branch (r5 & 0xFF<32>) == r7_55 l0040A820
l0040A81A:
	r16_12 = r16_12 + 1<32>
	r7_55 = CONVERT(Mem7[r16_12:byte], byte, word32)
	branch r7_55 != 0<32> l0040A818
l0040A820:
	return r16_12
l0040A798:
l0040A824:
	word32 r7_136
	word32 r6_135
	word32 r5_134
	return r4 + strlen(r4, out r5_134, out r6_135, out r7_136)
strchrnul_exit:


word32 strcmp(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __vdsosym
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r6 r7 r8
// Preserved: sp
strcmp_entry:
l0040A830:
	word32 r7_6 = CONVERT(Mem0[r4:byte], byte, word32)
	word32 r6_8 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r7_6 != r6_8 l0040A858
l0040A858:
	return r7_6 - r6_8
l0040A838:
	branch r6_8 == 0<32> l0040A854
l0040A83A:
	word32 r7_10 = 1<32>
l0040A840:
	word32 r6_14 = CONVERT(Mem0[r4 + r7_10:byte], byte, word32)
	word32 r8_16 = CONVERT(Mem0[r5 + r7_10:byte], byte, word32)
	r7_10 = r7_10 + 1<32>
	branch r6_14 == r8_16 l0040A83E
l0040A83E:
	branch r6_14 == 0<32> l0040A854
l0040A854:
	return 0<32>
l0040A84E:
	return r6_14 - r8_16
strcmp_exit:


word32 strcpy(word32 r4, word32 r5, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      inet_ntop
//      dns_parse_callback
//      strcat
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r5 r6 r7 r8
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: r16 r4 ra sp
strcpy_entry:
l0040A860:
	word32 r7_15
	word32 r6_17
	word32 r8_18
	word32 r5_14 = stpcpy(r4, r5, out r6_17, out r7_15, out r8_18)
	r6Out = r6_17
	r7Out = r7_15
	r8Out = r8_18
	return r5_14
strcpy_exit:


void __strdup(word32 r0, word32 r4, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__strdup_entry:
l0040A870:
	word32 r5_86
	word32 r6_87
	word32 r7_88
	word32 r4_14 = strlen(r4, out r5_86, out r6_87, out r7_88)
	word32 r4_27
	word32 r3_89
	word32 r6_90
	word32 r8_91
	word32 r9_92
	word32 r10_93
	word32 r11_94
	malloc(r0, r4_14 + 1<32>, r11, out r3_89, out r4_27, out r6_90, out r8_91, out r9_92, out r10_93, out r11_94)
	branch r4_27 == 0<32> l0040A88C
l0040A88C:
	return
l0040A882:
l0040A888_thunk_memcpy:
	word32 r3_95
	word32 r5_96
	word32 r6_97
	word32 r7_98
	word32 r8_99
	word32 r9_100
	word32 r10_101
	word32 r11_102
	word32 r12_103
	word32 r13_104
	memcpy(r4_27, r4, r4_14 + 1<32>, out r3_95, out r5_96, out r6_97, out r7_98, out r8_99, out r9_100, out r10_101, out r11_102, out r12_103, out r13_104)
	return
__strdup_exit:


word32 strlen(word32 r4, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      main
//      ping4_run
//      fn00401E7A
//      ping6_run
//      __getopt_msg
//      getaddrinfo
//      getnameinfo
//      inet_ntop
//      name_from_hosts
//      __lookup_serv
//      __get_resolv_conf
//      fputs_unlocked
//      strcat
//      strchrnul
//      __strdup
//      mbsrtowcs
// MayUse:  r4:[0..31]
// LiveOut: r4 r5 r6 r7
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
strlen_entry:
	word32 r5
l0040A890:
	word32 r7_10 = r4
	branch (r4 & 3<32>) == 0<32> l0040A8D8
l0040A8D8:
	r7_10 = r4
l0040A896:
	word32 r6_9 = CONVERT(Mem0[r4:byte], byte, word32)
	branch r6_9 != 0<32> l0040A8A0
l0040A8A0:
	r7_10 = r7_10 + 1<32>
	branch (r7_10 & 3<32>) != 0<32> l0040A89C
l0040A89C:
	word32 r6_14 = CONVERT(Mem0[r7_10:byte], byte, word32)
	branch r6_14 == 0<32> l0040A8D4
l0040A8D4:
	r5Out = r5
	r6Out = r6_14
	r7Out = r7_10
	return r7_10 - r4
l0040A8A6:
l0040A8AA:
	word32 r5_19 = Mem0[r7_10:word32]
	word32 r5_24 = 0x80808080<32>
	branch (r5_19 + 0xFEFEFEFF<32> & ~r5_19 & 0x80808080<32>) == 0<32> l0040A8A8
l0040A8A8:
	r7_10 = r7_10 + 4<32>
l0040A8C4:
	word32 r6_27 = r7_10
	word32 r7_28 = CONVERT(Mem0[r7_10:byte], byte, word32)
	branch r7_28 == 0<32> l0040A8D0
l0040A8CA:
	r6_27 = r6_27 + 1<32>
	r5_24 = CONVERT(Mem0[r6_27:byte], byte, word32)
	branch r5_24 != 0<32> l0040A8CA
l0040A8D0:
	r5Out = r5_24
	r6Out = r6_27
	r7Out = r7_28
	return r6_27 - r4
l0040A89A:
l0040A8DC:
	r5Out = r5
	r6Out = r6_9
	r7Out = r4
	return 0<32>
strlen_exit:


word32 strncmp(word32 r4, word32 r5, word32 r6, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      niquery_option_handler
//      ping6_run
//      getnameinfo
//      __lookup_serv
//      fn00407D00
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4 r6
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
strncmp_entry:
l0040A8E0:
	branch r6 == 0<32> l0040A91E
l0040A91E:
	r6Out = r6
	return 0<32>
l0040A8E2:
	word32 r8_11
	word32 r7_8 = CONVERT(Mem0[r4:byte], byte, word32)
	word32 r9_10 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r7_8 == 0<32> l0040A926
l0040A926:
	r8_11 = 0<32>
l0040A8EA:
	branch r9_10 == 0<32> l0040A922
l0040A8EE:
	r6 = r6 + 0xFFFFFFFF<32>
	branch r6 == 0xFFFFFFFF<32> l0040A922
l0040A8F2:
	branch r9_10 != r7_8 l0040A922
l0040A922:
	r8_11 = r7_8
l0040A8F6:
	word32 r7_15 = 1<32>
l0040A908:
	r8_11 = CONVERT(Mem0[r4 + r7_15:byte], byte, word32)
	word32 r10_21 = r5 + 1<32>
	r9_10 = CONVERT(Mem0[r5 + 1<32>:byte], byte, word32)
	branch r8_11 != 0<32> l0040A8FA
l0040A8FA:
	r5 = r10_21
	branch r9_10 == 0<32> l0040A918
l0040A900:
	branch r6 + 0xFFFFFFFF<32> == r7_15 l0040A918
l0040A902:
	r7_15 = r7_15 + 1<32>
	branch r8_11 != r9_10 l0040A918
l0040A918:
	r6Out = r6
	return r8_11 - r9_10
strncmp_exit:


void strncpy(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      if_indextoname
//      if_nametoindex
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: r16 r4 ra sp
strncpy_entry:
l0040A930:
	stpncpy(r4, r5, r6)
	return
strncpy_exit:


word32 strnlen(word32 r4, word32 r5, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      is_valid_hostname
//      __lookup_name
//      res_mkquery
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4 r5 r6 r8
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
strnlen_entry:
l0040A940:
	word32 r5_19
	word32 r6_21
	word32 r8_22
	word32 r4_18 = memchr(r4, 0<32>, r5, out r5_19, out r6_21, out r8_22)
	branch r4_18 == 0<32> l0040A950
l0040A950:
	r5Out = <invalid>
	r6Out = <invalid>
	r8Out = <invalid>
	return r5
l0040A94C:
	r5Out = <invalid>
	r6Out = <invalid>
	r8Out = <invalid>
	return r4_18 - r4
strnlen_exit:


word32 strspn(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      inet_ntop
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 sp
strspn_entry:
	ptr32 fp
l0040A960:
	word32 r7_8 = CONVERT(Mem5[r5:byte], byte, word32)
	branch r7_8 == 0<32> l0040AA18
l0040A97A:
	word32 r4_120
	word32 r6_18 = r4
	word32 r9_21 = CONVERT(Mem16[r4:byte], byte, word32)
	branch CONVERT(Mem16[r5 + 1<32>:byte], byte, word32) == 0<32> l0040AA0A
l0040AA0A:
	branch r9_21 != r7_8 l0040AA18
l0040AA0E:
	r6_18 = r6_18 + 1<32>
	branch CONVERT(Mem16[r6_18:byte], byte, word32) == r9_21 l0040AA0E
l0040AA16:
l0040A988:
	Mem32[fp - 0x10<32> + ((r7_8 >>u 5<32>) << 2<8>) - 0x20<32>:word32] = 1<32> << r7_8
l0040A9B2:
	r5 = r5 + 1<32>
	word32 r8_37 = CONVERT(Mem36[r5:byte], byte, word32)
	word32 r7_39 = 1<32> << r8_37
	branch r8_37 != 0<32> l0040A99E
l0040A99E:
	word32 r4_42 = fp - 0x10<32> + ((r8_37 >>u 5<32>) << 2<8>)
	word32 r7_44 = r7_39 | Mem36[r4_42 - 0x20<32>:word32]
	Mem45[r4_42 - 0x20<32>:word32] = r7_44
	branch r7_44 == 0<32> l0040A9C6
l0040A9C6:
	branch r9_21 == 0<32> l0040AA18
l0040AA18:
	return 0<32>
l0040A9CA:
	r4_120 = 1<32> << r9_21 & Mem52[((fp - 0x10<32>) + ((r9_21 >>u 5<32>) << 2<8>)) - 0x20<32>:word32]
	branch r4_120 != 0<32> l0040A9F4
l0040A9F4:
	r6_18 = r6_18 + 1<32>
	word32 r5_66 = CONVERT(Mem52[r6_18:byte], byte, word32)
	word32 r7_68 = 1<32> << r5_66
	branch r5_66 != 0<32> l0040A9E6
l0040A9E6:
	branch (r7_68 & Mem52[((fp - 0x10<32>) + ((r5_66 >>u 5<32>) << 2<8>)) - 0x20<32>:word32]) == 0<32> l0040AA02
l0040AA02:
	r4_120 = r6_18 - r4
l0040A9E4:
l0040AA06:
	return r4_120
strspn_exit:


word32 twoway_strstr(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strstr
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
twoway_strstr_entry:
	ptr32 fp
l0040AA20:
	word32 r17_102
	word32 r16_205
	word32 r23_105
	word32 r20_173
	word32 r30_139
	word32 r6_26 = CONVERT(Mem23[r5:byte], byte, word32)
	word32 r22_207 = r4
	branch r6_26 == 0<32> l0040AC1C
l0040AC1C:
	r20_173 = 0<32>
	r30_139 = 0<32>
	r23_105 = 0xFFFFFFFF<32>
	r17_102 = 1<32>
l0040AA3C:
	r20_173 = 0<32>
	branch CONVERT(Mem37[r4:byte], byte, word32) != 0<32> l0040AA4E
l0040AA4E:
	r20_173 = r20_173 + 1<32>
	word32 r5_48 = fp + 0xFFFFEFD0<32> + ((r6_26 >>u 5<32>) << 2<8>)
	r6_26 = CONVERT(Mem53[r5 + r20_173:byte], byte, word32)
	word32 r7_59 = 1<32> << r6_26 | Mem53[r5_48 + 0xBE0<32>:word32]
	Mem60[fp + 0xFFFFEFD0<32> + (r6_26 << 2<8>) + 0xC00<32>:byte] = SLICE(r20_173, byte, 0)
	Mem61[r5_48 + 0xBE0<32>:byte] = SLICE(r7_59, byte, 0)
	branch r6_26 != 0<32> l0040AA46
l0040AA46:
	branch CONVERT(Mem61[r4 + r20_173:byte], byte, word32) == 0<32> l0040AB86
l0040AA7C:
	word32 r21_152 = 1<32>
	word32 r6_65 = 1<32>
	word32 r16_66 = 0<32>
	word32 r18_67 = 0xFFFFFFFF<32>
l0040AA86:
	word32 r7_70 = r16_66 + r6_65
	word32 r5_73 = r5 + r18_67
	branch r7_70 >=u r20_173 l0040AAAE
l0040AA8E:
	word32 r5_78 = CONVERT(Mem61[r5_73 + r6_65:byte], byte, word32)
	word32 r4_81 = CONVERT(Mem61[r5 + r7_70:byte], byte, word32)
	branch r4_81 == r5_78 l0040AB9A
l0040AB9A:
	branch r6_65 == r21_152 l0040AAA2
l0040AB9E:
	r6_65 = r6_65 + 1<32>
l0040AA9A:
	branch r4_81 >=u r5_78 l0040AB8E
l0040AB8E:
	r18_67 = r16_66
	r21_152 = 1<32>
	r16_66 = r16_66 + 1<32>
	r6_65 = 1<32>
l0040AA9E:
	r21_152 = r7_70 - r18_67
l0040AAA2:
	r16_66 = r7_70
	r6_65 = 1<32>
	r7_70 = r7_70 + 1<32>
	r5_73 = r5 + r18_67
	branch r7_70 <u r20_173 l0040AA8E
l0040AAAE:
	word32 r8_101 = r18_67 + 1<32>
	r17_102 = 1<32>
	word32 r6_103 = 1<32>
	word32 r16_104 = 0<32>
	r23_105 = 0xFFFFFFFF<32>
l0040AABC:
	word32 r7_108 = r16_104 + r6_103
	word32 r5_111 = r5 + r23_105
	branch r7_108 >=u r20_173 l0040AAE8
l0040AAC6:
	word32 r4_116 = CONVERT(Mem61[r5_111 + r6_103:byte], byte, word32)
	word32 r5_119 = CONVERT(Mem61[r5 + r7_108:byte], byte, word32)
	branch r4_116 == r5_119 l0040ABAC
l0040ABAC:
	branch r17_102 == r6_103 l0040AADA
l0040ABB0:
	r6_103 = r6_103 + 1<32>
l0040AAD2:
	branch r4_116 >=u r5_119 l0040ABA2
l0040ABA2:
	r23_105 = r16_104
	r17_102 = 1<32>
	r16_104 = r16_104 + 1<32>
	r6_103 = 1<32>
l0040AAD6:
	r17_102 = r7_108 - r23_105
l0040AADA:
	r16_104 = r7_108
	r6_103 = 1<32>
	r7_108 = r7_108 + 1<32>
	r5_111 = r5 + r23_105
	branch r7_108 <u r20_173 l0040AAC6
l0040AAE8:
	r30_139 = r23_105 + 1<32>
	branch r8_101 <u r30_139 l0040AAF6
l0040AAF0:
	r30_139 = r8_101
	r23_105 = r18_67
	r17_102 = r21_152
l0040AAF6:
	word32 dwLoc0454_410
	word32 r8_707
	word32 r9_708
	word32 r7_706
	branch memcmp(r5, r5 + r17_102, r30_139, out r7_706, out r8_707, out r9_708) == 0<32> l0040AC14
l0040AC14:
	dwLoc0454_410 = r20_173 - r17_102
l0040AB02:
	word32 r7_189 = r20_173 + 0xFFFFFFFF<32> - r23_105
	dwLoc0454_410 = 0<32>
	branch CONVERT(r7_189 <u r23_105, bool, word32) == 0<32> l0040AB14
l0040AB10_1:
	r7_189 = r23_105
l0040AB14:
	r17_102 = r7_189 + 1<32>
l0040AB18:
	r16_205 = r4
	word32 r21_206 = 0<32>
l0040AB1C:
	branch r22_207 - r16_205 <u r20_173 l0040AB6E
l0040AB24:
	Mem216 = Mem333 (alias)
	word32 r4_213 = r16_205 + r20_173
	word32 r6_217 = CONVERT(Mem216[r4_213 - 1<32>:byte], byte, word32)
	branch (1<32> << r6_217 & Mem216[((fp + 0xFFFFEFD0<32>) + ((r6_217 >>u 5<32>) << 2<8>)) + 0xBE0<32>:word32]) == 0<32> l0040ABB4
l0040ABB4:
	r16_205 = r4_213
	r21_206 = 0<32>
l0040AB44:
	word32 r6_226 = fp + 0xFFFFEFD0<32> + (r6_217 << 2<8>)
	word32 r7_228 = r20_173 - Mem216[r6_226 + 0xC00<32>:word32]
	branch r7_228 == 0<32> l0040ABBA
l0040ABBA:
	word32 r6_232 = r30_139
	branch CONVERT(r21_206 <u r30_139, bool, word32) != 0<32> l0040ABC4
l0040ABC0_1:
	r6_232 = r21_206
l0040ABC4:
	word32 r7_235 = r6_232
	word32 r6_239 = CONVERT(Mem216[r5 + r6_232:byte], byte, word32)
	branch r6_239 != 0<32> l0040ABD6
l0040ABD6:
	branch CONVERT(Mem216[r16_205 + r7_235:byte], byte, word32) == r6_239 l0040ABCE
l0040ABCE:
	r7_235 = r7_235 + 1<32>
	r6_239 = CONVERT(Mem216[r5 + r7_235:byte], byte, word32)
	branch r6_239 == 0<32> l0040ABE8
l0040ABDE:
	r21_206 = 0<32>
	r16_205 = r16_205 + (r7_235 - r23_105)
l0040ABCC:
l0040ABE8:
	branch r21_206 >=u r30_139 l0040AB88
l0040ABEC:
	word32 r7_265 = r23_105
	branch CONVERT(Mem216[r16_205 + r23_105:byte], byte, word32) != CONVERT(Mem216[r5 + r23_105:byte], byte, word32) l0040AC0A
l0040ABF8:
	branch r21_206 >=u r7_265 l0040AB88
l0040ABFC:
	r7_265 = r7_265 + 0xFFFFFFFF<32>
	branch CONVERT(Mem216[r5 + r7_265:byte], byte, word32) == CONVERT(Mem216[r16_205 + r7_265:byte], byte, word32) l0040ABF8
l0040AC0A:
	r16_205 = r16_205 + r17_102
l0040AB52:
	r17_102 = dwLoc0454_410
	branch r6_226 == 0<32> l0040AB62
l0040AB56:
	branch r21_206 == 0<32> l0040AB62
l0040AB5A:
	branch r7_228 >=u dwLoc0454_410 l0040AB62
l0040AB5E:
	r7_228 = r20_173 - dwLoc0454_410
l0040AB62:
	r16_205 = r16_205 + r7_228
	r21_206 = 0<32>
	branch r22_207 - r16_205 >=u r20_173 l0040AB24
l0040AB6E:
	word32 r18_302 = r20_173 | 0x3F<32>
	word32 r8_711
	word32 r6_710
	word32 r5_709
	word32 r4_308 = memchr(r22_207, 0<32>, r18_302, out r5_709, out r6_710, out r8_711)
	branch r4_308 == 0<32> l0040AC10
l0040AC10:
	r22_207 = r22_207 + r18_302
l0040AB7C:
	branch r4_308 - r16_205 <u r20_173 l0040AB86
l0040AB82:
	r22_207 = r4_308
l0040AA44:
l0040AB86:
	r16_205 = 0<32>
l0040AB88:
	return r16_205
twoway_strstr_exit:


word32 strstr(word32 r4, word32 r5, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      name_from_hosts
//      __lookup_serv
//      fn00407D04
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2 r4
// Trashed: r10 r11 r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
strstr_entry:
	word32 r2
l0040AC28:
	word32 r6_6 = CONVERT(Mem0[r5:byte], byte, word32)
	branch r6_6 != 0<32> l0040AC2E
l0040AC2E:
	word32 r4_17 = strchr(r4, r6_6)
	branch r4_17 == 0<32> l0040ACB2
l0040AC3A:
	word32 r5_24 = CONVERT(Mem10[r5 + 1<32>:byte], byte, word32)
	branch r5_24 == 0<32> l0040ACB6
l0040ACB6:
	r4Out = r4_17
	return r2
l0040AC3E:
	word32 r8_28 = CONVERT(Mem10[r4_17 + 1<32>:byte], byte, word32)
	branch r8_28 == 0<32> l0040ACB2
l0040AC46:
	word32 r9_29 = CONVERT(Mem10[r5 + 2<32>:byte], byte, word32)
	branch r9_29 == 0<32> l0040ACB8
l0040ACB8:
	word32 r4_31 = r4_17 + 1<32> + 0xFFFFFFFF<32>
	word32 r5_35 = r5_24 | CONVERT(Mem10[r5:byte], byte, word32) << 8<32>
	word32 r7_36 = CONVERT(Mem10[r4_17:byte], byte, word32) << 8<32> | r8_28
l0040ACC8:
	branch r5_35 == r7_36 l0040AD22
l0040AD22:
	r4Out = r4_31 + 0<32>
	return r2
l0040ACCC:
	r4_31 = r4_31 + 1<32>
	word32 r6_48 = CONVERT(Mem10[r4_31:byte], byte, word32)
	r7_36 = (r7_36 << 8<32> | r6_48) & 0xFFFF<32>
	branch r6_48 != 0<32> l0040ACC8
l0040ACD8:
	r4Out = 0<32>
	return r2
l0040AC4E:
	word32 r10_55 = CONVERT(Mem10[r4_17 + 2<32>:byte], byte, word32)
	branch r10_55 == 0<32> l0040ACB2
l0040AC56:
	word32 r11_56 = CONVERT(Mem10[r5 + 3<32>:byte], byte, word32)
	branch r11_56 == 0<32> l0040AC76
l0040AC76:
	word32 r9_67 = r5_24 << 0x10<32> | CONVERT(Mem10[r5:byte], byte, word32) << 0x18<32> | r9_29 << 8<32>
	word32 r6_68 = CONVERT(Mem10[r4_17:byte], byte, word32) << 0x18<32> | r8_28 << 0x10<32> | r10_55 << 8<32>
	word32 r4_69 = r4_17 + 2<32> + 0xFFFFFFFE<32>
l0040ACA4:
	branch r9_67 == r6_68 l0040AD2A
l0040AD2A:
	r4Out = r4_69 + 0<32>
	return r2
l0040ACA8:
	r4_69 = r4_69 + 1<32>
	word32 r7_80 = CONVERT(Mem10[r4_69:byte], byte, word32)
	r6_68 = (r6_68 | r7_80) << 8<32>
	branch r7_80 != 0<32> l0040ACA4
l0040AC5E:
	r2 = CONVERT(Mem10[r4_17 + 3<32>:byte], byte, word32)
	branch r2 == 0<32> l0040ACB2
l0040ACB2:
	r4Out = 0<32>
	return r2
l0040AC66:
	branch CONVERT(Mem10[r5 + 4<32>:byte], byte, word32) == 0<32> l0040ACDC
l0040ACDC:
	word32 r5_103 = r5_24 << 0x10<32> | CONVERT(Mem10[r5:byte], byte, word32) << 0x18<32> | r11_56 | r9_29 << 8<32>
	word32 r6_104 = CONVERT(Mem10[r4_17:byte], byte, word32) << 0x18<32> | r8_28 << 0x10<32> | r2 | r10_55 << 8<32>
	word32 r4_105 = r4_17 + 3<32> + 0xFFFFFFFD<32>
l0040AD12:
	branch r5_103 == r6_104 l0040AD26
l0040AD26:
	r4Out = r4_105 + 0<32>
	return r2
l0040AD14:
	r4_105 = r4_105 + 1<32>
	word32 r7_117 = CONVERT(Mem10[r4_105:byte], byte, word32)
	r6_104 = r6_104 << 8<32> | r7_117
	branch r7_117 != 0<32> l0040AD12
l0040AD1E:
	r4Out = 0<32>
	return r2
l0040AC6C:
l0040AC72_thunk_twoway_strstr:
	r4Out = twoway_strstr(r4_17, r5)
	return r2
l0040AC2C:
	r4Out = r4
	return r2
strstr_exit:


void __lock(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __simple_malloc
//      __ofl_lock
//      __synccall
//      rewinddir
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__lock_entry:
l0040AD30:
	branch Mem7[0x0045443C<p32>:word32] != 0<32> l0040AD46
l0040AD46:
	__sync(0<32>)
l0040AD4A:
	word32 r5_15 = __load_linked_32(Mem7[r4:word32])
	branch __store_conditional_32(Mem7[r4:word32], 1<32>) == 0<32> l0040AD4A
l0040AD58:
	__sync(0<32>)
	branch r5_15 != 0<32> l0040AD3E
l0040AD3E:
	word32 r9_75
	word32 r8_74
	word32 r5_73
	word32 r4_72
	__wait(r4, r4 + 4<32>, 1<32>, 1<32>, out r4_72, out r5_73, out r8_74, out r9_75)
l0040AD5E:
	return
l0040AD3C:
	return
__lock_exit:


void __unlock(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __simple_malloc
//      __ofl_unlock
//      __synccall
//      rewinddir
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__unlock_entry:
l0040AD60:
	branch Mem7[r4:word32] == 0<32> l0040AD98
l0040AD68:
	__sync(0<32>)
	__sync(0<32>)
	branch Mem12[r4 + 4<32>:word32] == 0<32> l0040AD98
l0040AD76:
	word32 r4_20
	word32 r5_76
	word32 r6_77
	word32 r7_78
	word32 r8_79
	word32 r9_80
	__syscall(out r4_20, out r5_76, out r6_77, out r7_78, out r8_79, out r9_80)
	branch r4_20 != 0xFFFFFFDA<32> l0040AD98
l0040AD98:
	return
l0040AD8A:
l0040AD94_thunk___syscall:
	word32 r4_81
	word32 r5_82
	word32 r6_83
	word32 r7_84
	word32 r8_85
	word32 r9_86
	__syscall(out r4_81, out r5_82, out r6_83, out r7_84, out r8_85, out r9_86)
	return
__unlock_exit:


word32 __syscall_cp_c(ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __syscall_cp
// MayUse: 
// LiveOut: r2 r4 r5 r6 r8
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__syscall_cp_c_entry:
l0040ADA0:
l0040ADA0_thunk___syscall:
	word32 r4_6
	word32 r5_7
	word32 r6_8
	word32 r8_10
	word32 r7_16
	word32 r9_17
	word32 r2_4 = __syscall(out r4_6, out r5_7, out r6_8, out r7_16, out r8_10, out r9_17)
	r4Out = r4_6
	r5Out = r5_7
	r6Out = r6_8
	r8Out = r8_10
	return r2_4
__syscall_cp_c_exit:


word32 __syscall_cp(ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      connect
//      recvfrom
//      recvmsg
//      sendmsg
//      sendto
//      poll
//      close
//      write
//      open64
//      __timedwait_cp
// MayUse: 
// LiveOut: r2 r4 r5 r6 r8
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__syscall_cp_entry:
l0040ADA4:
l0040ADA4_thunk___syscall_cp_c:
	word32 r4_6
	word32 r5_7
	word32 r6_8
	word32 r8_10
	word32 r2_4 = __syscall_cp_c(out r4_6, out r5_7, out r6_8, out r8_10)
	r4Out = r4_6
	r5Out = r5_7
	r6Out = r6_8
	r8Out = r8_10
	return r2_4
__syscall_cp_exit:


word32 __wait(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      alloc_fwd
//      alloc_rev
//      free
//      malloc
//      flockfile
//      __lock
//      __lockfile
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r2 r4 r5 r8 r9
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
__wait_entry:
	word32 r2
	word32 r8
	word32 r9
l0040ADB0:
	branch r7 != 0<32> l0040ADBC
l0040ADB8_1:
l0040ADBC:
	word32 r7_20 = 0x65<32>
l0040ADCC:
	r7_20 = r7_20 + 0xFFFFFFFF<32>
	branch r7_20 == 0<32> l0040ADEC
l0040ADEC:
	branch r5 != 0<32> l0040ADD6
l0040ADD0:
	branch r5 == 0<32> l0040ADC2
l0040ADD2:
	branch Mem13[r5:word32] == 0<32> l0040ADC2
l0040ADC2:
	branch Mem13[r4:word32] != r6 l0040AE08
l0040ADC8:
	__sync(0<32>)
l0040ADD6:
	__sync(0<32>)
l0040ADDA:
	branch __store_conditional_32(Mem13[r5:word32], __load_linked_32(Mem13[r5:word32]) + 1<32>) == 0<32> l0040ADDA
l0040ADE6:
	__sync(0<32>)
l0040ADEE:
	branch r6 == Mem13[r4:word32] l0040AE0A
l0040AE0A:
	word32 r7_218
	word32 r6_217
	r2 = __syscall(out r4, out r5, out r6_217, out r7_218, out r8, out r9)
	branch r4 != 0xFFFFFFDA<32> l0040ADEE
l0040AE1C:
	word32 r7_220
	word32 r6_219
	r2 = __syscall(out r4, out r5, out r6_219, out r7_220, out r8, out r9)
l0040ADF2:
	branch r5 == 0<32> l0040AE08
l0040ADF4:
	__sync(0<32>)
l0040ADF8:
	branch __store_conditional_32(Mem13[r5:word32], __load_linked_32(Mem13[r5:word32]) + 0xFFFFFFFF<32>) == 0<32> l0040ADF8
l0040AE04:
	__sync(0<32>)
l0040AE08:
	r4Out = r4
	r5Out = r5
	r8Out = r8
	r9Out = r9
	return r2
__wait_exit:


void __do_cleanup_push()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _pthread_cleanup_push
//      _pthread_cleanup_pop
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__do_cleanup_push_entry:
l0040AE30:
	return
__do_cleanup_push_exit:


void _pthread_cleanup_push(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __res_msend_rc
//      sem_wait
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r25
// Preserved: sp
_pthread_cleanup_push_entry:
l0040AE32:
	Mem6[r4:word32] = r5
	Mem8[r4 + 4<i32>:word32] = r6
l0040AE36_thunk___do_cleanup_push:
	__do_cleanup_push()
	return
_pthread_cleanup_push_exit:


void _pthread_cleanup_pop(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __res_msend_rc
//      sem_wait
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r25 r4 r5 r7
// Preserved: r16 r17 ra sp
_pthread_cleanup_pop_entry:
l0040AE3A:
	__do_cleanup_push()
	branch r5 == 0<32> l0040AE4E
l0040AE4E:
	return
l0040AE44:
	word32 r7_28
	call Mem9[r4:word32] (retsize: 0;)
		uses: r4:Mem9[r4 + 4<32>:word32],r5:r5,r7:r7_28
		defs: r7:r7_28
	return
_pthread_cleanup_pop_exit:


word32 __pthread_setcancelstate(word32 r4, word32 r5, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __lookup_name
//      fn00407A82
//      __synccall
//      __timedwait
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4 r7
// Trashed: r25 r3 r4 r7
// Preserved: sp
__pthread_setcancelstate_entry:
l0040AE50:
	word32 r7_11 = 0x16<32>
	branch r4 >=u 3<32> l0040AE68
l0040AE56:
	word32 r3_6 = __read_user_local()
	branch r5 == 0<32> l0040AE62
l0040AE5C:
l0040AE62:
	Mem14[r3_6 - 0x80<32>:word32] = r4
	r7_11 = 0<32>
l0040AE68:
	r7Out = r7_11
	return r7_11
__pthread_setcancelstate_exit:


word32 pthread_sigmask(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sigprocmask
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
pthread_sigmask_entry:
l0040AE70:
	word32 r4_13 = 0x16<32>
	branch r4 >=u 3<32> l0040AEA6
l0040AE7C:
	word32 r4_22
	word32 r5_72
	word32 r6_73
	word32 r7_74
	word32 r8_75
	word32 r9_76
	__syscall(out r4_22, out r5_72, out r6_73, out r7_74, out r8_75, out r9_76)
	branch r4_22 == 0<32> l0040AE92
l0040AE92:
	r4_13 = 0<32>
	branch r6 == 0<32> l0040AEA6
l0040AE96:
	__ext(Mem7[r6:word32], 0<32>, 0x1F<32>)
	__ins(Mem31[r6 + 4<32>:word32], 0<32>, 0<32>, 1<32>)
l0040AEA6:
	return r4_13
l0040AE8C:
	return -r4_22
pthread_sigmask_exit:


void cgt_init(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r11 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
cgt_init_entry:
l0040AEB0:
	word32 r4_19 = __vdsosym(0x00412044<p32>, 0x0041202C<p32>)
	__sync(0<32>)
l0040AECA:
	branch 0x0040AEB0<p32> != __load_linked_32(Mem9[0x004303A0<p32>:word32]) l0040AEE0
l0040AED4:
	branch __store_conditional_32(Mem9[0x004303A0<p32>:word32], r4_19) == 0<32> l0040AECA
l0040AEE0:
	__sync(0<32>)
	branch r4_19 != 0<32> l0040AEEC
l0040AEEC:
	call r4_19 (retsize: 0;)
		uses: r4:r4,r5:r5
	return
l0040AEE6:
	return
cgt_init_exit:


word32 __clock_gettime(word32 r4, word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      res_mkquery
//      mtime
//      gettimeofday
//      __synccall
//      __timedwait_cp
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r2 r3 r4 r5 r6 r7 r8
// Trashed: r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__clock_gettime_entry:
	word32 r3
l0040AEF4:
	word32 r8_110
	word32 r7_108
	word32 r6_106
	word32 r6_105
	word32 r5_102
	word32 r2_27
	word32 r4_17
	word32 r7_11 = Mem9[0x004303A0<p32>:word32]
	branch r7_11 == 0<32> l0040AF12
l0040AF00:
	call r7_11 (retsize: 0;)
		uses: r3:r3_78,r4:r4,r5:r5
		defs: r2:r2_75,r3:r3_78,r4:r4_17,r5:r5_18,r6:r6_19,r7:r7_16,r8:r8_76
	branch r4_17 == 0<32> l0040AF3C
l0040AF04:
	r6_105 = 0xFFFFFFEA<32>
	branch r4_17 != 0xFFFFFFEA<32> l0040AF12
l0040AF12:
	word32 r7_123
	word32 r9_124
	r2_27 = __syscall(out r4_17, out r5_102, out r6_105, out r7_123, out r8_110, out r9_124)
	branch r4_17 != 0xFFFFFFDA<32> l0040AF0A
l0040AF22:
	r4_17 = 0xFFFFFFEA<32>
	branch r4 != 0<32> l0040AF0A
l0040AF28:
	word32 r4_125
	word32 r6_126
	word32 r7_127
	word32 r9_128
	r2_27 = __syscall(out r4_125, out r5_102, out r6_126, out r7_127, out r8_110, out r9_128)
	r6_106 = 0x3E8<32>
	r7_108 = Mem9[r5 + 4<32>:word32] *s 0x3E8<32>
l0040AF3C:
	r3Out = r3
	r4Out = 0<32>
	r5Out = r5_102
	r6Out = r6_106
	r7Out = r7_108
	r8Out = r8_110
	return r2_27
l0040AF0A:
l0040AF0E_thunk___syscall_ret:
	word32 r4_70
	word32 r7_71
	r3Out = __syscall_ret(r4_17, out r4_70, out r7_71)
	r4Out = r4_70
	r5Out = r5_102
	r6Out = r6_105
	r7Out = r7_71
	r8Out = r8_110
	return r2_27
__clock_gettime_exit:


word32 gettimeofday(word32 r4, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_send_probe
//      ping4_parse_reply
//      fn004021B0
//      main_loop
//      build_echo
//      ping6_run
// MayUse:  r4:[0..31]
// LiveOut: r17 r3 r4 r6
// Trashed: hi lo r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
gettimeofday_entry:
	struct <anonymous> tLoc18
	word32 r17
	word32 r3
	word32 r6
l0040AF40:
	branch r4 == 0<32> l0040AF5E
l0040AF46:
	word32 r4_67
	word32 r5_68
	word32 r6_69
	word32 r7_70
	word32 r8_71
	__clock_gettime(0<32>, &tLoc18, out r3, out r4_67, out r5_68, out r6_69, out r7_70, out r8_71)
	r6 = 0x3E8<32>
	r17 = Mem7[&tLoc18 + 4<i32>:word32]
l0040AF5E:
	r4Out = 0<32>
	r6Out = r6
	r17Out = r17
	return r3
gettimeofday_exit:


void dummy()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
dummy_entry:
l0040AF70:
	return
dummy_exit:


word32 close(ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      ping4_run
//      ping6_run
//      __lookup_name
//      __res_msend_rc
//      __synccall
// MayUse: 
// LiveOut: r2 r4 r6 r8
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
close_entry:
l0040AF72:
	__aio_close()
	word32 r6_20
	word32 r8_22
	word32 r5_46
	word32 r4_18
	word32 r2_16 = __syscall_cp(out r4_18, out r5_46, out r6_20, out r8_22)
	branch (r4_18 ^ 0xFFFFFFFC<32>) != 0<32> l0040AF94
l0040AF90_1:
	r4_18 = 0<32>
l0040AF94:
l0040AF94_thunk___syscall_ret:
	word32 r4_32
	word32 r7_47
	__syscall_ret(r4_18, out r4_32, out r7_47)
	r4Out = r4_32
	r6Out = r6_20
	r8Out = r8_22
	return r2_16
close_exit:


word32 geteuid()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      limit_capabilities
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
geteuid_entry:
l0040AFA0:
l0040AFA4_thunk___syscall:
	word32 r4_7
	word32 r5_13
	word32 r6_14
	word32 r7_15
	word32 r8_16
	word32 r9_17
	__syscall(out r4_7, out r5_13, out r6_14, out r7_15, out r8_16, out r9_17)
	return r4_7
geteuid_exit:


word32 getpid(ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup
//      ping6_run
// MayUse: 
// LiveOut: r2 r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
getpid_entry:
l0040AFB0:
l0040AFB4_thunk___syscall:
	word32 r4_7
	word32 r5_14
	word32 r6_15
	word32 r7_16
	word32 r8_17
	word32 r9_18
	word32 r2_5 = __syscall(out r4_7, out r5_14, out r6_15, out r7_16, out r8_17, out r9_18)
	r4Out = r4_7
	return r2_5
getpid_exit:


word32 getuid()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E82
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
getuid_entry:
l0040AFC0:
l0040AFC4_thunk___syscall:
	word32 r4_7
	word32 r5_13
	word32 r6_14
	word32 r7_15
	word32 r8_16
	word32 r9_17
	__syscall(out r4_7, out r5_13, out r6_14, out r7_15, out r8_16, out r9_17)
	return r4_7
getuid_exit:


word32 isatty()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      setup
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
isatty_entry:
l0040AFD0:
	word32 r4_14
	word32 r5_24
	word32 r6_25
	word32 r7_26
	word32 r8_27
	word32 r9_28
	__syscall(out r4_14, out r5_24, out r6_25, out r7_26, out r8_27, out r9_28)
	return CONVERT(r4_14 <u 1<32>, bool, word32)
isatty_exit:


word32 seteuid(word32 r0, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      limit_capabilities
//      modify_capability
// MayUse:  r0:[0..31]
// LiveOut: r17 r2 r3 r4 r6 r7 r8
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
seteuid_entry:
l0040AFF0:
l0040AFF8_thunk___setxid:
	word32 r17_11
	word32 r3_14
	word32 r4_15
	word32 r6_17
	word32 r7_18
	word32 r8_19
	word32 r2_12 = __setxid(r0, out r3_14, out r4_15, out r6_17, out r7_18, out r8_19, out r17_11)
	r3Out = r3_14
	r4Out = r4_15
	r6Out = r6_17
	r7Out = r7_18
	r8Out = r8_19
	r17Out = r17_11
	return r2_12
seteuid_exit:


word32 setuid(word32 r0, ptr32 & r4Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      drop_capabilities
// MayUse:  r0:[0..31]
// LiveOut: r3 r4
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
setuid_entry:
l0040B000:
l0040B008_thunk___setxid:
	word32 r3_14
	word32 r4_15
	word32 r6_22
	word32 r7_23
	word32 r8_24
	word32 r17_25
	__setxid(r0, out r3_14, out r4_15, out r6_22, out r7_23, out r8_24, out r17_25)
	r4Out = r4_15
	return r3_14
setuid_exit:


void do_setxid(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
do_setxid_entry:
l0040B010:
	branch Mem9[r4 + 0x10<32>:word32] > 0<32> l0040B046
l0040B01A:
	branch fn0040B048() == 0<32> l0040B044
l0040B02A:
	branch Mem9[r4 + 0x10<32>:word32] != 0<32> l0040B044
l0040B02E:
	__block_all_sigs()
	fn0040B048()
	fn0040B048()
l0040B044:
l0040B046:
	return
do_setxid_exit:


word32 fn0040B048()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      do_setxid
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040B048_entry:
l0040B048:
l0040B048_thunk___syscall:
	word32 r4_6
	word32 r5_12
	word32 r6_13
	word32 r7_14
	word32 r8_15
	word32 r9_16
	__syscall(out r4_6, out r5_12, out r6_13, out r7_14, out r8_15, out r9_16)
	return r4_6
fn0040B048_exit:


word32 __setxid(word32 r0, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r17Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      seteuid
//      setuid
// MayUse:  r0:[0..31]
// LiveOut: r17 r2 r3 r4 r6 r7 r8
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__setxid_entry:
	ptr32 fp
l0040B04C:
	word32 r3_25
	word32 r4_26 = __synccall(r0, 0x0040B010<p32>, fp - 0x24<32>)
	branch r4_26 == 0<32> l0040B076
l0040B068:
	branch r4_26 <= 0<32> l0040B074
l0040B06C:
	word32 r4_86
	r3_25 = __errno_location(out r4_86)
l0040B074:
	r4_26 = 0xFFFFFFFF<32>
l0040B076:
	r3Out = r3_25
	r4Out = r4_26
	r6Out = r6_28
	r7Out = r7_29
	r8Out = r8_30
	r17Out = 0xFFFFFFFF<32>
	return r2_23
__setxid_exit:


word32 write()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401BA0
//      write_stdout
//      write_stdout
// MayUse: 
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
write_entry:
l0040B080:
	word32 r4_19
	word32 r5_32
	word32 r6_33
	word32 r8_34
	__syscall_cp(out r4_19, out r5_32, out r6_33, out r8_34)
l0040B096_thunk___syscall_ret:
	word32 r4_29
	word32 r7_35
	__syscall_ret(r4_19, out r4_29, out r7_35)
	return r4_29
write_exit:


word32 isalnum(word32 r4, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      is_valid_hostname
//      isalnum_l
// MayUse:  r4:[0..31]
// LiveOut: r4 r6 r7
// Trashed: r25 r4 r6 r7
// Preserved: sp
isalnum_entry:
l0040B0A0:
	word32 r6_10 = 1<32>
	word32 r7_7 = (r4 | 0x20<32>) + 0xFFFFFF9F<32>
	branch r7_7 <u 0x1A<32> l0040B0B6
l0040B0AE:
	r6_10 = CONVERT(r4 <u 0xFFFFFFC6<32>, bool, word32)
l0040B0B6:
	r6Out = r6_10
	r7Out = r7_7
	return r6_10
isalnum_exit:


void isalnum_l(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r4 r6 r7
// Preserved: sp
isalnum_l_entry:
l0040B0BA:
l0040B0BA_thunk_isalnum:
	word32 r6_9
	word32 r7_10
	isalnum(r4, out r6_9, out r7_10)
	return
isalnum_l_exit:


word32 __init_tp(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __init_tls
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__init_tp_entry:
l0040B0C0:
	Mem12[r4:word32] = r4
	word32 r4_15 = __set_thread_area()
	word32 r7_21 = 0xFFFFFFFF<32>
	branch r4_15 < 0<32> l0040B0FC
l0040B0D4:
	branch r4_15 != 0<32> l0040B0E0
l0040B0D6:
	Mem24[0x83B<32>:byte] = 1<8>
l0040B0E0:
	word32 r4_63
	word32 r5_64
	word32 r6_65
	word32 r7_66
	word32 r8_67
	word32 r9_68
	__syscall(out r4_63, out r5_64, out r6_65, out r7_66, out r8_67, out r9_68)
	Mem37[r4 + 0x78<32>:byte] = SLICE(0x00454458<p32>, byte, 0)
	Mem39[r4 + 0x64<32>:byte] = SLICE(r4, byte, 0) + 0x64<8>
	r7_21 = 0<32>
l0040B0FC:
	return r7_21
__init_tp_exit:


word32 __copy_tls(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __init_tls
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
__copy_tls_entry:
l0040B100:
	word32 r16_28 = r4 + (Mem15[0x00454448<p32>:word32] + (~Mem15[0x00454450<p32>:word32] << 2<8>))
	word32 r19_30 = Mem15[0x00454444<p32>:word32]
	word32 r17_31 = r4 + (Mem15[0x0045444C<p32>:word32] + 0xFFFFFFFF<32> & 0xFFFFFF50<32> - r4)
	word32 r20_32 = r16_28 + 4<32>
l0040B142:
	branch r19_30 != 0<32> l0040B12C
l0040B12C:
	word32 r6_36 = Mem34[r19_30 + 8<32>:word32]
	word32 r4_39 = r17_31 + (Mem34[r19_30 + 0x14<32>:word32] + 0xB0<32>)
	Mem41[r20_32:word32] = r4_39
	word32 r3_114
	word32 r5_115
	word32 r6_116
	word32 r7_117
	word32 r8_118
	word32 r9_119
	word32 r10_120
	word32 r11_121
	word32 r12_122
	word32 r13_123
	memcpy(r4_39, Mem41[r19_30 + 4<32>:word32], r6_36, out r3_114, out r5_115, out r6_116, out r7_117, out r8_118, out r9_119, out r10_120, out r11_121, out r12_122, out r13_123)
	r20_32 = r20_32 + 4<32>
	r19_30 = Mem41[r19_30:word32]
l0040B144:
	Mem66[r17_31 + 1<32>:word32] = r16_28
	Mem67[r17_31 + 0xAC<32>:byte] = SLICE(r16_28, byte, 0)
	return r17_31
__copy_tls_exit:


void __init_tls(word32 r0, word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __init_libc
// MayUse:  r0:[0..31] r4:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
__init_tls_entry:
l0040B152:
	word32 r6_10 = 0<32>
	word32 r9_11 = Mem5[r4 + 0x14<32>:word32]
	word32 r7_110 = Mem5[r4 + 3<32>:word32]
l0040B17C:
	branch r9_11 == 0<32> l0040B198
l0040B198:
	branch r6_10 == 0<32> l0040B1BA
l0040B1A2:
	word32 r6_26 = Mem24[r6_10 + 0x1C<32>:word32]
	Mem27[0x00432DEC<p32>:word32] = Mem24[r6_10 + 0x14<32>:word32]
	Mem28[0x00432DF0<p32>:word32] = r6_26
l0040B1BA:
	word32 r5_34 = Mem33[0x00432DEC<p32>:word32]
	word32 r8_36 = Mem33[0x00432DF0<p32>:word32]
	word32 r5_41 = (-(Mem33[0x00432DE4<p32>:word32] + r5_34) & r8_36 + 0xFFFFFFFF<32>) + r5_34
	branch r8_36 >=u 4<32> l0040B1DC
l0040B1D8:
l0040B1DC:
	word32 r7_48 = Mem47[0x00432DF0<p32>:word32]
	word32 r6_52 = __ins(r7_48 + 0xBB<32> + r5_41, 0<32>, 0<32>, 1<32>)
	Mem55[0x00454448<p32>:word32] = r6_52
	Mem56[0x0045444C<p32>:word32] = r7_48
	word32 r4_58 = 0x00432DF8<p32>
	branch r6_52 <=u 0xF4<32> l0040B20E
l0040B1F8:
	word32 r6_174
	word32 r5_173
	word32 r7_175
	word32 r9_177
	word32 r8_176
	__syscall(out r4_58, out r5_173, out r6_174, out r7_175, out r8_176, out r9_177)
l0040B20E:
	branch __init_tp(__copy_tls(r4_58)) >= 0<32> l0040B222
l0040B21A:
	Mem102[r0:byte] = 0<8>
	__trap_code(0<32>)
l0040B222:
	return
__init_tls_exit:
l0040B180:
	word32 r8_111 = Mem5[r7_110:word32]
	branch r8_111 != 6<32> l0040B160
l0040B160:
	branch r8_111 != 2<32> l0040B18E
l0040B18E:
	branch (r8_111 ^ 7<32>) != 0<32> l0040B196
l0040B192_1:
	r6_10 = r7_110
l0040B196:
l0040B164:
	branch null == 0<32> l0040B174
l0040B16E:
l0040B186:
l0040B174:
	r9_11 = r9_11 + 0xFFFFFFFF<32>
	r7_110 = r7_110 + Mem5[r4 + 0x10<32>:word32]


void _Exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7E
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
_Exit_exit:
_Exit_entry:
l0040B230:
l0040B238:
	word32 r4_26
	word32 r5_27
	word32 r6_28
	word32 r7_29
	word32 r8_30
	word32 r9_31
	__syscall(out r4_26, out r5_27, out r6_28, out r7_29, out r8_30, out r9_31)


word32 scanexp(word32 r4, word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r12 r2 r3 r4 r5 r6 r7 r8
// Trashed: r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 ra sp
scanexp_entry:
	word32 r12
	word32 r2
	word32 r3
	word32 r8
l0040B250:
	word32 r6_159
	word32 r17_106
	word32 r7_18 = Mem15[r4 + 4<32>:word32]
	word32 r9_110 = Mem15[r4 + 0x68<32>:word32]
	branch r7_18 >=u r9_110 l0040B3BC
l0040B3BC:
	word32 r9_556
	word32 r4_554
	word32 r7_555
	word32 r11_558
	word32 r10_557
	r2 = __shgetc(r4, out r3, out r4_554, out r5, out r6_159, out r7_555, out r8, out r9_556, out r10_557, out r11_558, out r12)
	r9_110 = Mem22[r4 + 0x68<32>:word32]
	r17_106 = r5
l0040B25E:
	r6_159 = r7_18 + 1<32>
	r17_106 = CONVERT(Mem38[r7_18:byte], byte, word32)
l0040B266:
	word32 r7_157
	word32 r18_290
	word32 r20_136
	word32 r16_100
	word32 r7_78
	branch r17_106 == 0x2B<32> l0040B39E
l0040B26A:
	branch r17_106 == 0x2D<32> l0040B39E
l0040B39E:
	word32 r4_55
	word32 r7_45 = Mem44[r4 + 4<32>:word32]
	branch r7_45 >=u r9_110 l0040B3E4
l0040B3E4:
	word32 r7_577
	word32 r9_578
	word32 r10_579
	word32 r11_580
	r2 = __shgetc(r4, out r3, out r4_55, out r5, out r6_159, out r7_577, out r8, out r9_578, out r10_579, out r11_580, out r12)
	r9_110 = Mem52[r4 + 0x68<32>:word32]
	r17_106 = r5
l0040B3A4:
	r6_159 = r7_45 + 1<32>
	r4_55 = CONVERT(Mem69[r7_45:byte], byte, word32)
l0040B3AC:
	r7_157 = r4_55 + 0xFFFFFFD0<32>
	branch r7_157 >=u 0xA<32> l0040B330
l0040B330:
	branch r5 != 0<32> l0040B3D8
l0040B3D8:
	branch r9_110 == 0<32> l0040B3F2
l0040B3DC:
	r7_78 = Mem76[r4 + 4<32>:word32] + 0xFFFFFFFF<32>
l0040B3B4:
	r18_290 = CONVERT(r17_106 == 0x2D<32>, bool, word32)
	r17_106 = r4_55
l0040B26E:
	r7_157 = r17_106 + 0xFFFFFFD0<32>
	branch r7_157 >=u 0xA<32> l0040B334
l0040B334:
	branch r9_110 == 0<32> l0040B3F2
l0040B3F2:
	r16_100 = 0<32>
	r20_136 = 0<32>
l0040B338:
	r7_78 = Mem90[r4 + 4<32>:word32]
l0040B33A:
	r7_157 = r7_78 + 0xFFFFFFFF<32>
	r16_100 = 0<32>
	r20_136 = 0<32>
l0040B276:
	r18_290 = 0<32>
l0040B278:
	r16_100 = 0<32>
l0040B292:
	word32 r10_115
	word32 r16_107 = r17_106 + r16_100 * 0xA<32>
	word32 r7_105 = Mem104[r4 + 4<32>:word32]
	r16_100 = r16_107 + 0xFFFFFFD0<32>
	branch r7_105 <u r9_110 l0040B27C
l0040B27C:
	r17_106 = CONVERT(Mem112[r7_105:byte], byte, word32)
	r10_115 = r17_106 + 0xFFFFFFD0<32>
	branch r17_106 >=u 0xFFFFFFC6<32> l0040B2C0
l0040B2A8:
	word32 r4_118
	word32 r8_562
	word32 r6_560
	word32 r9_563
	word32 r11_565
	word32 r5_559
	word32 r7_561
	word32 r10_564
	r2 = __shgetc(r4, out r3, out r4_118, out r5_559, out r6_560, out r7_561, out r8_562, out r9_563, out r10_564, out r11_565, out r12)
	r9_110 = Mem104[r4 + 0x68<32>:word32]
	r17_106 = r4_118
	r10_115 = r4_118 + 0xFFFFFFD0<32>
	branch r4_118 <u 0xFFFFFFC6<32> l0040B28E
l0040B28E:
	branch r16_107 > 0xF3333305<32> l0040B2C0
l0040B2C0:
	r20_136 = r16_107 + 0xFFFFFFD0<32> >> 0x1F<32>
l0040B2C4:
	word32 r6_138 = r16_100 << 2<32>
	word32 r8_142 = r6_138 + r16_100
	word32 r6_151 = (r8_142 << 1<32>) + r17_106
	r8 = r8_142 >>u 0x1F<32>
	r7_157 = CONVERT(r6_151 <u r8_142 << 1<32>, bool, word32) + ((CONVERT(r8_142 <u r6_138, bool, word32) + ((r20_136 << 2<32> | r16_100 >>u 0x1E<32>) + r20_136) << 1<32> | r8_142 >>u 0x1F<32>) + (r17_106 >> 0x1F<32>))
	r6_159 = CONVERT(r6_151 + 0xFFFFFFD0<32> <u r6_151, bool, word32)
	branch r10_115 >=u 0xA<32> l0040B37E
l0040B30C:
	branch r20_136 > 0x147AE14<32> l0040B356
l0040B310:
	branch r20_136 == 0x147AE14<32> l0040B3CC
l0040B3CC:
	branch r16_100 <=u 0x7AE147AD<32> l0040B314
l0040B3D6:
l0040B356:
	branch r10_115 >=u 0xA<32> l0040B37E
l0040B37E:
	branch r9_110 == 0<32> l0040B388
l0040B382:
	r7_157 = Mem169[r4 + 4<32>:word32] + 0xFFFFFFFF<32>
l0040B388:
	branch r18_290 == 0<32> l0040B344
l0040B344:
	r3Out = r3
	r4Out = r16_100
	r5Out = r20_136
	r6Out = r6_159
	r7Out = r7_157
	r8Out = r8
	r12Out = r12
	return r2
l0040B38A:
	r3Out = r3
	word32 r16_205 = -r16_100
	r4Out = r16_205
	word32 r7_206 = -r20_136
	r5Out = r7_206 - CONVERT(r16_205 >u 0<32>, bool, word32)
	r6Out = r6_159
	r7Out = r7_206
	r8Out = r8
	r12Out = r12
	return r2
scanexp_exit:
l0040B35A:
	r7_157 = Mem171[r4 + 4<32>:word32]
	branch r7_157 >=u r9_110 l0040B348
l0040B348:
	word32 r4_221
	word32 r5_573
	word32 r9_574
	word32 r10_575
	word32 r11_576
	r2 = __shgetc(r4, out r3, out r4_221, out r5_573, out r6_159, out r7_157, out r8, out r9_574, out r10_575, out r11_576, out r12)
	r9_110 = Mem171[r4 + 0x68<32>:word32]
	r10_115 = r4_221 + 0xFFFFFFD0<32>
l0040B360:
	r6_159 = r7_157 + 1<32>
	r10_115 = CONVERT(Mem236[r7_157:byte], byte, word32) + 0xFFFFFFD0<32>
l0040B314:
	word32 r5_241 = Mem170[r4 + 4<32>:word32]
	r16_100 = r6_151 + 0xFFFFFFD0<32>
	r20_136 = r6_159 + (r7_157 + 0xFFFFFFFF<32>)
	branch r5_241 >=u r9_110 l0040B36E
l0040B36E:
	word32 r4_251
	word32 r5_566
	word32 r6_567
	word32 r7_568
	word32 r8_569
	word32 r9_570
	word32 r10_571
	word32 r11_572
	r2 = __shgetc(r4, out r3, out r4_251, out r5_566, out r6_567, out r7_568, out r8_569, out r9_570, out r10_571, out r11_572, out r12)
	r9_110 = Mem170[r4 + 0x68<32>:word32]
	r17_106 = r4_251
	r10_115 = r4_251 + 0xFFFFFFD0<32>
l0040B322:
	r17_106 = CONVERT(Mem267[r5_241:byte], byte, word32)
	r10_115 = r17_106 + 0xFFFFFFD0<32>


word32 decfloat(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r0 r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
decfloat_entry:
	ptr32 fp
l0040B3FA:
	word32 dwLoc0260_2128
	word32 r6_109
	word32 dwLoc025C_2124 = r7
	branch r5 == 0x30<32> l0040B410
l0040B410:
	r6_109 = Mem37[r4 + 0x68<32>:word32]
l0040B414:
	word32 r7_41 = Mem40[r4 + 4<32>:word32]
	branch r7_41 >=u r6_109 l0040B62E
l0040B62E:
	word32 r4_45
	word32 r7_3875
	word32 r9_3877
	word32 r10_3878
	word32 r11_3879
	word32 r5_3874
	word32 r8_3876
	word32 r3_3873
	r2 = __shgetc(r4, out r3_3873, out r4_45, out r5_3874, out r6_109, out r7_3875, out r8_3876, out r9_3877, out r10_3878, out r11_3879, out r12)
	r5 = r4_45
	branch r4_45 == 0x30<32> l0040B410
l0040B638:
	dwLoc0260_2128 = 1<32>
l0040B41A:
	dwLoc025C_2124 = r7_41 + 1<32>
	r5 = CONVERT(Mem61[r7_41:byte], byte, word32)
	branch r5 == 0x30<32> l0040B414
l0040B426:
	dwLoc0260_2128 = 1<32>
l0040B40C:
l0040BAE8:
	dwLoc0260_2128 = 0<32>
	r6_109 = r6
l0040B42A:
	word32 r18_104
	word32 r23_106
	word32 r21_128
	branch r5 == 0x2E<32> l0040B836
l0040B836:
	word32 r7_69 = Mem68[r4 + 4<32>:word32]
	branch r7_69 >=u Mem68[r4 + 0x68<32>:word32] l0040BC40
l0040BC40:
	word32 r4_73
	word32 r7_3868
	word32 r8_3869
	word32 r9_3870
	word32 r5_3867
	word32 r3_3866
	word32 r10_3871
	word32 r11_3872
	r2 = __shgetc(r4, out r3_3866, out r4_73, out r5_3867, out r6_109, out r7_3868, out r8_3869, out r9_3870, out r10_3871, out r11_3872, out r12)
	r5 = r4_73
l0040B840:
	r6_109 = r7_69 + 1<32>
	dwLoc025C_2124 = r7_69 + 1<32>
	r5 = CONVERT(Mem87[r7_69:byte], byte, word32)
l0040B848:
	branch r5 != 0x30<32> l0040BCEC
l0040BCEC:
	r21_128 = 1<32>
	r23_106 = 0<32>
	r18_104 = 0<32>
l0040B84C:
	r6_109 = Mem94[r4 + 0x68<32>:word32]
	r23_106 = 0<32>
	r18_104 = 0<32>
l0040B854:
	word32 r5_99 = r23_106 + 0xFFFFFFFF<32>
	word32 r7_102 = Mem101[r4 + 4<32>:word32]
	r23_106 = r5_99
	r18_104 = CONVERT(r5_99 <u r23_106, bool, word32) + (r18_104 + 0xFFFFFFFF<32>)
	branch r7_102 >=u r6_109 l0040B880
l0040B880:
	word32 r4_112
	word32 r8_3862
	word32 r7_3861
	word32 r5_3860
	word32 r3_3859
	word32 r11_3865
	word32 r10_3864
	word32 r9_3863
	r2 = __shgetc(r4, out r3_3859, out r4_112, out r5_3860, out r6_109, out r7_3861, out r8_3862, out r9_3863, out r10_3864, out r11_3865, out r12)
	r5 = r4_112
	branch r4_112 != 0x30<32> l0040B874
l0040B88A:
	r6_109 = Mem101[r4 + 0x68<32>:word32]
l0040B86C:
	Mem125[r4 + 1<32>:word32] = r7_102 + 1<32>
	r5 = CONVERT(Mem125[r7_102:byte], byte, word32)
	branch r5 == 0x30<32> l0040B854
l0040B874:
	r21_128 = 1<32>
	dwLoc0260_2128 = 1<32>
l0040B42E:
	r21_128 = 0<32>
	r23_106 = 0<32>
	r18_104 = 0<32>
l0040B434:
	word32 r19_136 = 0<32>
	word32 r22_137 = 0<32>
	word32 r17_138 = 0<32>
	word32 r30_1140 = 0<32>
	word32 r20_140 = 0<32>
l0040B440:
	word32 r7_1818
	word32 r7_144 = r5 + 0xFFFFFFD0<32>
	branch r7_144 <u 0xA<32> l0040B472
l0040B448:
	branch r5 != 0x2E<32> l0040B4CC
l0040B4CC:
	branch r21_128 != 0<32> l0040B4D0
l0040B4CC_1:
	r23_106 = r22_137
l0040B4D0:
	branch r21_128 != 0<32> l0040B4D4
l0040B4D0_1:
	r18_104 = r17_138
l0040B44C:
	branch r21_128 != 0<32> l0040B822
l0040B822:
	r5 = 0x2E<32>
l0040B4D4:
	word32 r11_1698
	word32 r10_1697
	word32 r3_1706
	word32 r6_1709
	word32 r5_1708
	word32 r7_1710
	word32 r4_1707
	word32 r7_175
	word32 r2_1544 = r2
	word32 r12_1542 = r12
	word32 r16_1504 = r4
	word32 r17_163 = dwLoc0260_2128
	branch r7_144 == 0<32> l0040B646
l0040B646:
	branch r5 < 0<32> l0040B652
l0040B64A:
	branch Mem159[r4 + 0x68<32>:word32] != 0<32> l0040B4EC
l0040B4DA:
	r7_175 = r5 | 0x20<32>
	branch r7_175 == 0x25<32> l0040BAEE
l0040BAEE:
	word32 r4_184
	word32 r8_3858
	word32 r5_185
	r2_1544 = scanexp(r4, r5, out r3_1706, out r4_184, out r5_185, out r6_109, out r7_175, out r8_3858, out r12_1542)
	branch r4_184 == 0<32> l0040BCCE
l0040BCCE:
	r7_175 = 0<32>
	branch r5_185 != 0<32> l0040BAF8
l0040BCD6:
	branch true l0040B65A
l0040BCDC:
	r7_175 = Mem159[r4 + 0x68<32>:word32]
	branch r7_175 == 0<32> l0040BD58
l0040BD58:
	r5_185 = 0<32>
l0040BCE2:
	word32 r7_194 = Mem159[r4 + 4<32>:word32]
	r5_185 = 0<32>
	r7_175 = r7_194 + 0xFFFFFFFF<32>
	dwLoc025C_2124 = r7_194 + 0xFFFFFFFF<32>
l0040BAF8:
	word32 r4_204 = r4_184 + r23_106
	r5 = r18_104 + r5_185
	r17_163 = r9
	r23_106 = r4_204
	r18_104 = CONVERT(r4_204 <u r23_106, bool, word32) + r5
l0040B4E2:
	branch r5 < 0<32> l0040B4F8
l0040B4E6:
	r7_175 = Mem159[r4 + 0x68<32>:word32]
	branch r7_175 == 0<32> l0040B4F8
l0040B4EC:
	word32 r7_218 = Mem159[r4 + 4<32>:word32]
	r7_175 = r7_218 + 0xFFFFFFFF<32>
	dwLoc025C_2124 = r7_218 + 0xFFFFFFFF<32>
	r17_163 = dwLoc0260_2128
	branch r7_218 == 0xFFFFFFFF<32> l0040B652
l0040B652:
	word32 r4_3855
	r3_1706 = __errno_location(out r4_3855)
l0040B65A:
	word32 r8_3856
	word32 r9_3857
	__shlim(r4, 0<32>, 0<32>, out r8_3856, out r9_3857, out r10_1697, out r11_1698)
	r6_1709 = 0<32>
	r7_1710 = 0<32>
	r4_1707 = 0<32>
	r5_1708 = 0<32>
l0040B4F8:
	branch r4 == 0<32> l0040B826
l0040B826:
	word32 r10_260
	word32 r11_261
	word32 r12_262
	word32 r3_269
	word32 r4_270
	word32 r5_271
	word32 r6_272
	word32 r7_273
	word32 r8_3852
	word32 r9_3853
	word32 r14_3854
	word32 r2_266 = __muldf3(__floatsidf(0<32>), r5, 0<32>, 0<32>, out r3_269, out r4_270, out r5_271, out r6_272, out r7_273, out r8_3852, out r9_3853, out r10_260, out r11_261, out r12_262, out r14_3854)
	r3Out = r3_269
	r4Out = r4_270
	r5Out = r5_271
	r6Out = r6_272
	r7Out = r7_273
	r10Out = r10_260
	r11Out = r11_261
	r12Out = r12_262
	return r2_266
l0040B4FE:
	word32 r19_1661
	word32 r18_1659
	word32 r5_1684
	word32 r4_1683
	branch r22_137 == r23_106 l0040BBA4
l0040BBA4:
	branch r18_104 != r17_163 l0040B502
l0040BBA8:
	branch r18_104 > 0<32> l0040B502
l0040BBAC:
	branch r18_104 != 0<32> l0040BBB6
l0040BBAE:
	branch r23_106 <u 0xA<32> l0040BBB6
l0040BBB6:
	branch r7_175 >= 0x1F<32> l0040BBC4
l0040BBBC:
	branch r4 >>u r7_175 != 0<32> l0040B502
l0040BBC4:
	r18_1659 = __floatsidf(0<32>)
	r19_1661 = r5
	r4_1683 = __floatunsidf(r4, out r5_1684)
l0040BBB2:
l0040B502:
	word32 r7_345 = -((r6_109 >>u 0x1F<32>) + r6_109 >> 1<32>)
	branch r7_345 >> 0x1F<32> < r18_104 l0040BBF6
l0040B51A:
	branch r18_104 == r7_345 >> 0x1F<32> l0040BBF2
l0040BBF2:
	branch r7_345 >=u r23_106 l0040B51E
l0040BBF6:
	word32 r4_353
	__errno_location(out r4_353)
	word32 r4_379
	word32 r5_380
	word32 r12_3847
	word32 r14_3848
	word32 r6_3841
	word32 r7_3842
	word32 r8_3843
	word32 r3_3840
	word32 r10_3845
	word32 r9_3844
	word32 r11_3846
	__muldf3(__floatsidf(r4_353), r5, Mem356[0x4120220<32>:word32], Mem356[0x4120224<32>:word32], out r3_3840, out r4_379, out r5_380, out r6_3841, out r7_3842, out r8_3843, out r9_3844, out r10_3845, out r11_3846, out r12_3847, out r14_3848)
	word32 r10_387
	word32 r11_388
	word32 r12_389
	word32 r3_396
	word32 r4_397
	word32 r5_398
	word32 r6_399
	word32 r7_400
	word32 r8_3849
	word32 r14_3851
	word32 r9_3850
	word32 r2_393 = __muldf3(r4_379, r5_380, Mem356[0x4120220<32>:word32], Mem356[0x4120224<32>:word32], out r3_396, out r4_397, out r5_398, out r6_399, out r7_400, out r8_3849, out r9_3850, out r10_387, out r11_388, out r12_389, out r14_3851)
	r3Out = r3_396
	r4Out = r4_397
	r5Out = r5_398
	r6Out = r6_399
	r7Out = r7_400
	r10Out = r10_387
	r11Out = r11_388
	r12Out = r12_389
	return r2_393
l0040B51E:
	word32 r7_419 = r7_345 + 0xFFFFFF96<32> >> 0x1F<32>
	branch r18_104 < r7_419 l0040BB0C
l0040B52C:
	branch r18_104 == r7_419 l0040BB08
l0040BB08:
	branch r23_106 >=u r7_345 + 0xFFFFFF96<32> l0040B530
l0040BB0C:
	word32 r4_424
	__errno_location(out r4_424)
	word32 r4_450
	word32 r5_451
	word32 r3_3828
	word32 r9_3832
	word32 r10_3833
	word32 r6_3829
	word32 r11_3834
	word32 r8_3831
	word32 r7_3830
	word32 r12_3835
	word32 r14_3836
	__muldf3(__floatsidf(r4_424), r5, Mem427[0x4120280<32>:word32], Mem427[0x4120284<32>:word32], out r3_3828, out r4_450, out r5_451, out r6_3829, out r7_3830, out r8_3831, out r9_3832, out r10_3833, out r11_3834, out r12_3835, out r14_3836)
	word32 r14_3839
	word32 r8_3837
	word32 r9_3838
	r2_1544 = __muldf3(r4_450, r5_451, Mem427[0x4120280<32>:word32], Mem427[0x4120284<32>:word32], out r3_1706, out r4_1707, out r5_1708, out r6_1709, out r7_1710, out r8_3837, out r9_3838, out r10_1697, out r11_1698, out r12_1542, out r14_3839)
l0040B530:
	branch r20_140 == 0<32> l0040B59E
l0040B534:
	branch r20_140 >= 9<32> l0040B59C
l0040B538:
	word32 r5_496 = r30_1140 << 2<32>
	word32 r7_501 = Mem244[fp + 0xFFFFEFD0<32> + r5_496 + 0xE00<32>:word32]
	word32 r6_503 = r7_501 * 0xA<32>
	branch r20_140 == 8<32> l0040B592
l0040B550:
	word32 r7_504 = r7_501 * 0xA<32> + r7_501 * 0x28<32>
	r6_503 = r7_504 << 1<32>
	branch r20_140 == 7<32> l0040B592
l0040B55A:
	word32 r7_506 = (r7_504 << 1<32>) + (r7_504 << 3<8>)
	r6_503 = r7_506 << 1<32>
	branch r20_140 == 6<32> l0040B592
l0040B564:
	word32 r7_508 = (r7_506 << 1<32>) + (r7_506 << 3<8>)
	r6_503 = r7_508 << 1<32>
	branch r20_140 == 5<32> l0040B592
l0040B56E:
	word32 r7_510 = (r7_508 << 1<32>) + (r7_508 << 3<8>)
	r6_503 = r7_510 << 1<32>
	branch r20_140 == 4<32> l0040B592
l0040B578:
	word32 r7_512 = (r7_510 << 1<32>) + (r7_510 << 3<8>)
	r6_503 = r7_512 << 1<32>
	branch r20_140 == 3<32> l0040B592
l0040B582:
	word32 r7_514 = (r7_512 << 1<32>) + (r7_512 << 3<8>)
	r6_503 = r7_514 << 1<32>
	branch r20_140 != 1<32> l0040B592
l0040B58C:
	r6_503 = (r7_514 << 1<32>) + (r7_514 << 3<8>) << 1<32>
l0040B592:
	r5 = fp + 0xFFFFEFD0<32> + r5_496
	Mem523[r5 + 0xE00<32>:byte] = SLICE(r6_503, byte, 0)
l0040B59C:
	r30_1140 = r30_1140 + 1<32>
l0040B59E:
	word32 r20_1617 = r23_106
	word32 r4_544 = __floatsidf(0<32>)
	branch r19_136 >= 9<32> l0040B668
l0040B5AE:
	branch r23_106 < r19_136 l0040B668
l0040B5B2:
	branch r23_106 >= 0x12<32> l0040B668
l0040B5B6:
	branch r23_106 != 9<32> l0040B5C0
l0040B5C0:
	branch r23_106 >= 9<32> l0040B5C8
l0040B5C8:
	word32 r7_569 = r23_106 + 0xFFFFFFF7<32>
	word32 r7_573 = r7_569 * 3<32> + (r7_569 << 2<32>)
	branch r7_573 >= 0x1F<32> l0040B5E0
l0040B5D8:
	branch r4 >>u r7_573 != 0<32> l0040B668
l0040B668:
	word32 r7_582 = r30_1140 + 0xFFFFFFFF<32>
	branch Mem553[fp - 0x230<32> + r7_582 * 4<32>:word32] == 0<32> l0040B666
l0040B666:
	r30_1140 = r7_582
l0040B672:
	word32 r7_1507 = r23_106 >> 0x1F<32>
	word32 r17_1501 = r23_106 - ((SLICE(r23_106 *s64 0x38E38E39<32>, word32, 32) >> 1<32>) - r7_1507) * 9<32>
	branch r17_1501 == 0<32> l0040B70E
l0040B692:
	branch r23_106 < 0<32> l0040BCC6
l0040BCC6:
	r17_1501 = r17_1501 + 9<32>
l0040B696:
	word32 r18_604
	r7_1507 = 8<32> - r17_1501
	r16_1504 = Mem553[0x00413240<p32> + r7_1507 * 4<32>:word32]
	branch r30_1140 == 0<32> l0040BD52
l0040BD52:
	r18_604 = 0<32>
l0040B6A4:
	word32 r5_606 = 0<32>
	r18_604 = 0<32>
	r7_1507 = 0<32>
	branch r16_1504 != r0 l0040B6B8
l0040B6B4_1:
	__trap_code(7<32>)
l0040B6B8:
l0040B6C0:
	word32 r4_633 = Mem632[fp - 0x230<32> + r7_1507 * 4<32>:word32]
	branch r16_1504 != r0 l0040B6CC
l0040B6C8_1:
	__trap_code(7<32>)
l0040B6CC:
	word32 r6_641 = fp - 0x230<32> + r5_606
	word32 r5_644 = r4_633 % r16_1504
	branch r16_1504 != r0 l0040B6D6
l0040B6D2_1:
	__trap_code(7<32>)
l0040B6D6:
	Mem657[fp - 0x230<32> + r7_1507 * 4<32>:word32] = r6_641
	r5_606 = r5_644 *s r19_136
	branch r7_1507 != r18_604 l0040B6BA
l0040B6E2:
	branch r6_641 != 0<32> l0040B6BA
l0040B6BA:
	r7_1507 = r7_1507 + 1<32>
	branch r30_1140 == r7_1507 l0040B6F4
l0040B6E4:
	r7_1507 = r7_1507 + 1<32>
	r20_1617 = r20_1617 + 0xFFFFFFF7<32>
	r18_604 = r18_604 + 1<32> & 0x7F<32>
	branch r30_1140 != r7_1507 l0040B6C0
l0040B6F4:
	branch r5_606 == 0<32> l0040B704
l0040B6F6:
	r7_1507 = fp + 0xFFFFEFD0<32> + (r30_1140 << 2<8>)
	Mem682[r7_1507 + 0xE00<32>:byte] = SLICE(r5_606, byte, 0)
	r30_1140 = r30_1140 + 1<32>
l0040B704:
	r17_1501 = r18_604
	r20_1617 = r20_1617 - r17_1501 + 9<32>
l0040B70E:
	word32 dwLoc0260_2305 = 0<32>
l0040B710:
	word32 dwLoc0260_2309
	branch r20_1617 < 0x12<32> l0040B72E
l0040B714:
	branch r20_1617 != 0x12<32> l0040B890
l0040B718:
	r7_1507 = Mem711[fp + 0xFFFFEFD0<32> + (r17_1501 << 2<8>) + 0xE00<32>:word32]
	branch r7_1507 >u 0x89705E<32> l0040B890
l0040B890:
	word32 r6_1977 = r17_1501 & 0x7F<32>
	word32 r18_715 = r17_1501 + 1<32>
l0040B898:
	branch r30_1140 == r6_1977 l0040B97C
l0040B89C:
	word32 r7_724 = Mem723[fp + 0xFFFFEFD0<32> + (r6_1977 << 2<8>) + 0xE00<32>:word32]
	branch r7_724 <=u 0x89705E<32> l0040B97C
l0040B8B2:
	branch r7_724 != 0x89705F<32> l0040B8DA
l0040B8BC:
	word32 r7_727 = r18_715 & 0x7F<32>
	branch r30_1140 == r7_727 l0040B97C
l0040B8C4:
	branch Mem723[fp + 0xFFFFEFD0<32> + (r7_727 << 2<8>) + 0xE00<32>:word32] <=u 0xF2F09FF<32> l0040B97C
l0040B8DA:
	word32 r23_734 = CONVERT(r20_1617 < 0x1C<32>, bool, word32)
	word32 r2_1982 = 0x1DCD65<32>
	word32 r7_737 = 1<32>
	branch r23_734 == 0<32> l0040B8F0
l0040B8EC_1:
	r2_1982 = 0x1DCD6500<32>
l0040B8F0:
	word32 r11_739 = 9<32>
	branch r23_734 == 0<32> l0040B8FC
l0040B8F8_1:
	r11_739 = 1<32>
l0040B8FC:
	branch r23_734 != 0<32> l0040B900
l0040B8FC_1:
	r7_737 = 0x1FF<32>
l0040B900:
	word32 r17_758 = dwLoc0260_2309
	dwLoc0260_2309 = r7_737 + r11_739
	branch dwLoc0260_2309 == r30_1140 l0040B898
l0040B90C:
	word32 r7_767 = dwLoc0260_2309
	r19_136 = 0<32>
l0040B91A:
	word32 r4_773 = fp + 0xFFFFEFD0<32> + (r7_767 << 2<8>)
	word32 r6_775 = Mem774[r4_773 + 0xE00<32>:word32]
	word32 r5_781 = (r6_775 >>u r11_739) + r19_136
	Mem784[r4_773 + 0xE00<32>:byte] = SLICE(r5_781, byte, 0)
	word32 r22_772 = r7_767 + 1<32>
	r19_136 = (r6_775 & r7_737) *s r2_1982
	branch r7_767 != r17_758 l0040B912
l0040B940:
	branch r5_781 != 0<32> l0040B912
l0040B912:
	r7_767 = r22_772 & 0x7F<32>
	branch r30_1140 == (r22_772 & 0x7F<32>) l0040B956
l0040B942:
	r17_758 = r18_715 & 0x7F<32>
	r7_767 = r22_772 & 0x7F<32>
	r20_1617 = r20_1617 + 0xFFFFFFF7<32>
	r18_715 = r17_758 + 1<32>
	branch r30_1140 != (r22_772 & 0x7F<32>) l0040B91A
l0040B956:
	branch r19_136 == 0<32> l0040BAB6
l0040BAB6:
	r6_1977 = r17_758 & 0x7F<32>
l0040B95A:
	word32 r6_802 = r30_1140 + 1<32>
	branch r17_758 == (r6_802 & 0x7F<32>) l0040BABC
l0040BABC:
	word32 r7_810 = fp + 0xFFFFEFD0<32> + ((r30_1140 + 0xFFFFFFFF<32> & 0x7F<32>) << 2<8>)
	Mem815[r7_810 + 0xE00<32>:byte] = Mem784[r7_810 + 0xE00<32>:byte] | 1<8>
	r6_1977 = r6_802 & 0x7F<32>
l0040B966:
	Mem820[fp + 0xFFFFEFD0<32> + (r30_1140 << 2<8>) + 0xE00<32>:byte] = SLICE(r19_136, byte, 0)
	r6_1977 = r17_758 & 0x7F<32>
	r30_1140 = r6_802 & 0x7F<32>
	branch (r6_802 & 0x7F<32>) != r6_1977 l0040B89C
l0040B97C:
	branch r20_1617 != 0x12<32> l0040B8DA
l0040B980:
	branch r30_1140 == r6_1977 l0040BBDC
l0040BBDC:
	word32 r8_832 = r30_1140 + 1<32>
	Mem839[fp + 0xFFFFEFD0<32> + ((r8_832 & 0x7F<32>) << 2<8>) + 0xDFC<32>:byte] = 0<8>
	r30_1140 = r8_832 & 0x7F<32>
l0040B984:
	word32 r5_861
	word32 r5_876
	word32 r4_3737
	word32 r6_3738
	word32 r7_3739
	word32 r8_3740
	word32 r12_3742
	word32 r13_3743
	word32 r11_3741
	__adddf3(__floatunsidf(Mem854[fp + 0xFFFFEFD0<32> + (r6_1977 << 2<8>) + 0xE00<32>:word32], out r5_861), r5_861, 0<32>, 0<32>, out r4_3737, out r5_876, out r6_3738, out r7_3739, out r8_3740, out r11_3741, out r12_3742, out r13_3743)
	word32 r18_851 = r18_715 & 0x7F<32>
	branch r18_851 == r30_1140 l0040BB8E
l0040BB8E:
	word32 r8_882 = r30_1140 + 1<32>
	Mem886[fp + 0xFFFFEFD0<32> + ((r8_882 & 0x7F<32>) << 2<8>) + 0xDFC<32>:byte] = 0<8>
	r30_1140 = r8_882 & 0x7F<32>
l0040B9A2:
	word32 r19_1089
	word32 r18_1088
	word32 r6_1003
	word32 r10_1004
	word32 dwLoc0240_2386
	word32 dwLoc023C_2387
	word32 r4_934
	word32 r5_935
	word32 r3_3744
	word32 r9_3748
	word32 r14_3752
	word32 r12_3751
	word32 r10_3749
	word32 r8_3747
	word32 r6_3745
	word32 r11_3750
	word32 r7_3746
	__muldf3(dwLoc025C_2124, r5_876, Mem888[0x4120278<32>:word32], Mem888[0x412027C<32>:word32], out r3_3744, out r4_934, out r5_935, out r6_3745, out r7_3746, out r8_3747, out r9_3748, out r10_3749, out r11_3750, out r12_3751, out r14_3752)
	word32 r5_948
	word32 r4_962
	word32 r5_963
	word32 r11_3756
	word32 r12_3757
	word32 r13_3758
	word32 r8_3755
	word32 r7_3754
	word32 r6_3753
	__adddf3(__floatunsidf(Mem922[fp + 0xFFFFEFD0<32> + (r18_851 << 2<8>) + 0xE00<32>:word32], out r5_948), r5_948, r4_934, r5_935, out r4_962, out r5_963, out r6_3753, out r7_3754, out r8_3755, out r11_3756, out r12_3757, out r13_3758)
	word32 r4_980
	word32 r5_981
	word32 r11_3764
	word32 r8_3761
	word32 r6_3760
	word32 r3_3759
	word32 r14_3766
	word32 r12_3765
	word32 r9_3762
	word32 r10_3763
	word32 r7_1002
	__muldf3(r4_962, r5_963, r4_544, r5, out r3_3759, out r4_980, out r5_981, out r6_3760, out r7_1002, out r8_3761, out r9_3762, out r10_3763, out r11_3764, out r12_3765, out r14_3766)
	word32 r16_907 = r16_1504 + 0x35<32>
	word32 r16_921 = r16_907 - r19_136
	word32 r22_1125 = r4_980
	word32 r23_1126 = r5_981
	branch r16_921 >= r7_1002 l0040BADE
l0040BADE:
	branch r7_1002 >= 0x35<32> l0040B9F8
l0040BAE6:
l0040B9E8:
	branch r16_921 < 0<32> l0040BCAA
l0040BCAA:
	r10_1004 = 0x35<32>
	r6_1003 = 0x69<32>
l0040B9EC:
	r7_1002 = r16_921
	branch r16_921 < 0x35<32> l0040BB3A
l0040BB3A:
	r6_1003 = 0x69<32> - r7_1002
	r10_1004 = 0x35<32> - r7_1002
l0040BB46:
	word32 r19_1011 = Mem1009[0x412025C<32>:word32]
	word32 r10_1015
	word32 r5_1026
	word32 r8_3816
	word32 r4_1025 = scalbn(Mem1009[0x4120258<32>:word32], r19_1011, r6_1003, out r5_1026, out r8_3816, out r10_1015)
	word32 r8_3817
	word32 r5_1038 = copysignl(r5_1026, r5_981, out r8_3817)
	word32 r5_1061
	word32 r5_1083
	word32 r8_3818
	word32 r10_3819
	word32 r4_1082 = fmodl(r4_980, r5_981, scalbn(r10_1004, r19_1011, r10_1015, out r5_1061, out r8_3818, out r10_3819), r5_1061, out r5_1083)
	word32 r6_3822
	word32 r5_1102
	word32 r4_1119
	word32 r5_1120
	word32 r12_3826
	word32 r8_3824
	word32 r11_3825
	word32 r13_3827
	word32 r7_3823
	word32 r13_3821
	word32 r7_3820
	__adddf3(r4_1025, r5_1038, __subdf3(r4_980, r5_981, r4_1082, r5_1083, out r5_1102, out r7_3820, out r13_3821), r5_1102, out r4_1119, out r5_1120, out r6_3822, out r7_3823, out r8_3824, out r11_3825, out r12_3826, out r13_3827)
	dwLoc0240_2386 = r4_1025
	dwLoc023C_2387 = r5_1038
	r18_1088 = r4_1082
	r19_1089 = r5_1083
	r22_1125 = r4_1119
	r23_1126 = r5_1120
l0040B9F8:
	r18_1088 = 0<32>
	r19_1089 = 0<32>
	dwLoc0240_2386 = 0<32>
	dwLoc023C_2387 = 0<32>
l0040BA00:
	word32 r7_1137 = r6 + 2<32> & 0x7F<32>
	branch r30_1140 == r7_1137 l0040BA7E
l0040BA0C:
	word32 r7_1156
	word32 r6_1155
	word32 r6_1146 = 0x1DCD64FF<32>
	word32 r7_1148 = Mem1147[fp + 0xFFFFEFD0<32> + (r7_1137 << 2<8>) + 0xE00<32>:word32]
	branch r7_1148 >u 0x1DCD64FF<32> l0040BC24
l0040BC24:
	branch r7_1148 == 0x1DCD6500<32> l0040BD34
l0040BD34:
	branch r30_1140 != (r6 + 3<32> & 0x7F<32>) l0040BC32
l0040BD44:
	r6_1155 = Mem1147[0x4120250<32>:word32]
	r7_1156 = Mem1147[0x4120254<32>:word32]
l0040BC2E:
l0040BC32:
	r6_1155 = Mem1147[0x4120290<32>:word32]
	r7_1156 = Mem1147[0x4120294<32>:word32]
l0040BA22:
	branch r7_1148 != 0<32> l0040BA30
l0040BA24:
	branch r30_1140 == (r6 + 3<32> & 0x7F<32>) l0040BA4E
l0040BA30:
	r6_1155 = Mem1147[0x4120288<32>:word32]
	r7_1156 = Mem1147[0x412028C<32>:word32]
l0040BA40:
	word32 r6_3768
	word32 r4_1188
	word32 r5_1189
	word32 r9_3771
	word32 r8_3770
	word32 r7_3769
	word32 r3_3767
	word32 r10_3772
	word32 r12_3774
	word32 r11_3773
	word32 r14_3775
	__muldf3(r4_544, r5, r6_1155, r7_1156, out r3_3767, out r4_1188, out r5_1189, out r6_3768, out r7_3769, out r8_3770, out r9_3771, out r10_3772, out r11_3773, out r12_3774, out r14_3775)
	word32 r7_3776
	word32 r4_1214
	word32 r5_1215
	word32 r8_3777
	word32 r12_3779
	word32 r13_3780
	word32 r11_3778
	__adddf3(r18_1088, r19_1089, r4_1188, r5_1189, out r4_1214, out r5_1215, out r6_1146, out r7_3776, out r8_3777, out r11_3778, out r12_3779, out r13_3780)
	r18_1088 = r4_1214
	r19_1089 = r5_1215
l0040BA4E:
	branch 0x35<32> - r6_1146 < 2<32> l0040BA7E
l0040BA58:
	word32 r20_1232 = Mem1147[0x4120258<32>:word32]
	word32 r21_1233 = Mem1147[0x412025C<32>:word32]
	word32 r5_1253
	word32 r4_1266
	word32 r9_3785
	word32 r11_3786
	word32 r8_3784
	word32 r6_3782
	word32 r5_3781
	word32 r7_3783
	word32 r13_3787
	__nedf2(fmodl(r18_1088, r19_1089, r20_1232, r21_1233, out r5_1253), r5_1253, 0<32>, 0<32>, out r4_1266, out r5_3781, out r6_3782, out r7_3783, out r8_3784, out r9_3785, out r11_3786, out r13_3787)
	branch r4_1266 != 0<32> l0040BA7E
l0040BA74:
	word32 r4_1285
	word32 r5_1286
	word32 r7_3789
	word32 r8_3790
	word32 r6_3788
	word32 r11_3791
	word32 r13_3793
	word32 r12_3792
	__adddf3(r18_1088, r19_1089, r20_1232, r21_1233, out r4_1285, out r5_1286, out r6_3788, out r7_3789, out r8_3790, out r11_3791, out r12_3792, out r13_3793)
	r18_1088 = r4_1285
	r19_1089 = r5_1286
l0040BA7E:
	word32 r11_3798
	word32 r5_1327
	word32 r4_3794
	word32 r7_3796
	word32 r6_3795
	word32 r12_3799
	word32 r8_3797
	word32 r13_3800
	__adddf3(r22_1125, r23_1126, r18_1088, r19_1089, out r4_3794, out r5_1327, out r6_3795, out r7_3796, out r8_3797, out r11_3798, out r12_3799, out r13_3800)
	word32 r30_1358 = r16_907 - r16_921
	word32 r5_1343
	word32 r7_1345
	word32 r13_3801
	word32 r4_1342 = __subdf3(r6, r5_1327, dwLoc0240_2386, dwLoc023C_2387, out r5_1343, out r7_1345, out r13_3801)
	word32 r6_1359 = r30_1358 + 0xFFFFFFFF<32>
	word32 r20_1361 = r4_1342
	word32 r21_1362 = r5_1343
	branch __ext(r7_1345, 0<32>, 0x1F<32>) >= r30_1358 + 0xFFFFFFFF<32> l0040BC48
l0040BC48:
	word32 r7_1379
	branch __gtdf2(r4_1342, fabs(r5_1343), Mem1147[0x4120240<32>:word32], Mem1147[0x4120244<32>:word32], out r6_1359, out r7_1379) < 0<32> l0040BC82
l0040BC60:
	branch r7_1379 != 0<32> l0040BCB8
l0040BCB8:
l0040BC64:
l0040BC66:
	word32 r4_1414
	word32 r5_1415
	word32 r12_3807
	word32 r10_3805
	word32 r8_3803
	word32 r3_3802
	word32 r11_3806
	word32 r9_3804
	word32 r14_3808
	__muldf3(r4_1342, r5_1343, Mem1147[0x4120250<32>:word32], Mem1147[0x4120254<32>:word32], out r3_3802, out r4_1414, out r5_1415, out r6_1359, out r7_1379, out r8_3803, out r9_3804, out r10_3805, out r11_3806, out r12_3807, out r14_3808)
	r20_1361 = r4_1414
	r21_1362 = r5_1415
l0040BC82:
	word32 r7_1429 = r7_1379 + 0x34<32>
	branch r7_1429 >= r30_1358 + 3<32> l0040BCA0
l0040BC8E:
	branch r7_1429 == 0<32> l0040BAAA
l0040BC94:
	word32 r4_1445
	word32 r5_3809
	word32 r8_3811
	word32 r9_3812
	word32 r7_3810
	word32 r11_3813
	word32 r13_3814
	__nedf2(r18_1088, r19_1089, 0<32>, 0<32>, out r4_1445, out r5_3809, out r6_1359, out r7_3810, out r8_3811, out r9_3812, out r11_3813, out r13_3814)
	branch r4_1445 == 0<32> l0040BAAA
l0040BCA0:
	word32 r4_3815
	__errno_location(out r4_3815)
l0040BAAA:
l0040BAB2_thunk_scalbnl:
	word32 r10_1483
	word32 r11_1484
	word32 r12_1485
	word32 r3_1492
	word32 r4_1493
	word32 r5_1494
	word32 r6_1495
	word32 r7_1496
	word32 r2_1489 = scalbnl(r20_1361, r21_1362, r6_1359, out r3_1492, out r4_1493, out r5_1494, out r6_1495, out r7_1496, out r10_1483, out r11_1484, out r12_1485)
	r3Out = r3_1492
	r4Out = r4_1493
	r5Out = r5_1494
	r6Out = r6_1495
	r7Out = r7_1496
	r10Out = r10_1483
	r11Out = r11_1484
	r12Out = r12_1485
	return r2_1489
l0040B72E:
	r16_1504 = r30_1140 + 0xFFFFFFFF<32>
	r17_1501 = dwLoc0260_2309
	word32 r22_1505 = r16_1504 & 0x7F<32>
	word32 r21_1506 = 0<32>
	dwLoc0260_2305 = r7_1507 + 0xFFFFFFE3<32>
l0040B740:
	word32 r6_1534
	word32 r4_1529
	word32 r23_1512 = r22_1505 << 2<32>
	word32 r5_1518 = Mem1517[fp + 0xFFFFEFD0<32> + r23_1512 + 0xE00<32>:word32]
	r19_136 = (r5_1518 << 0x1D<32>) + r21_1506
	word32 r18_1527 = CONVERT(r19_136 <u r5_1518 << 0x1D<32>, bool, word32) + (r5_1518 >>u 3<32>)
	branch r18_1527 != 0<32> l0040B774
l0040B770:
	branch r19_136 <=u 0x3B9ACA00<32> l0040B7A8
l0040B7A8:
	Mem1535[r23_1512 + (fp + 0xFFFFEFD0<32>) + 0xE00<32>:byte] = SLICE(r19_136, byte, 0)
	r4_1529 = r19_136
	r7_1507 = r16_1504 & 0x7F<32>
	r21_1506 = 0<32>
	r6_1534 = r22_1505 + 0xFFFFFFFF<32>
	branch r22_1505 != r7_1507 l0040B79E
l0040B774:
	word32 r4_1549
	word32 r13_1556
	word32 r9_3733
	word32 r11_3734
	word32 r8_3732
	word32 r7_3731
	word32 r6_3730
	word32 r3_3728
	word32 r5_3729
	__udivdi3(r2_1544, 0x3B9ACA00<32>, r19_136, r18_1527, 0x3B9ACA00<32>, 0<32>, r12_1542, out r3_3728, out r4_1549, out r5_3729, out r6_3730, out r7_3731, out r8_3732, out r9_3733, out r11_3734, out r13_1556)
	word32 r3_3735
	word32 r8_3736
	r2_1544 = __umoddi3(r19_136, r18_1527, 0x3B9ACA00<32>, 0<32>, r13_1556, out r3_3735, out r4_1529, out r8_3736, out r12_1542)
	Mem1588[r23_1512 + (fp + 0xFFFFEFD0<32>) + 0xE00<32>:byte] = SLICE(r4_1529, byte, 0)
	r21_1506 = r4_1549
	r7_1507 = r16_1504 & 0x7F<32>
	r6_1534 = r22_1505 + 0xFFFFFFFF<32>
	branch r22_1505 == r7_1507 l0040B7C2
l0040B7C2:
	branch r22_1505 == dwLoc0260_2309 l0040B7D4
l0040B7D4:
	r7_1507 = dwLoc0260_2309
l0040B7C6:
	branch r4_1529 != 0<32> l0040B7CA
l0040B7C6_1:
	r30_1140 = r7_1507
l0040B7CA:
	r22_1505 = r6_1534 & 0x7F<32>
	r16_1504 = r30_1140 + 0xFFFFFFFF<32>
l0040B79E:
	branch r22_1505 == dwLoc0260_2309 l0040B7D6
l0040B7D6:
	dwLoc0260_2309 = dwLoc0260_2305
	branch r21_1506 == 0<32> l0040B710
l0040B7DA:
	r20_1617 = r20_1617 + 9<32>
	r17_1501 = dwLoc0260_2309 + 0xFFFFFFFF<32> & 0x7F<32>
	branch r30_1140 == r17_1501 l0040B7F8
l0040B7F8:
	word32 r7_1632 = fp + 0xFFFFEFD0<32> + ((r7_1507 + 0xFFFFFFFF<32> & 0x7F<32>) << 2<8>)
	Mem1639[r7_1632 + 0xE00<32>:byte] = Mem1633[r7_1632 + 0xE00<32>:byte] | Mem1633[((fp + 0xFFFFEFD0<32>) + (r7_1507 << 2<8>)) + 0xE00<32>:byte]
	r30_1140 = r7_1507
l0040B7EA:
	r7_1507 = fp + 0xFFFFEFD0<32> + (r17_1501 << 2<8>)
	Mem1645[r7_1507 + 0xE00<32>:byte] = SLICE(r21_1506, byte, 0)
l0040B7A2:
	r22_1505 = r6_1534 & 0x7F<32>
l0040B5E0:
	r18_1659 = __floatsidf(Mem553[0x00413240<p32> + (r23_106 + 0xFFFFFFF6<32>) * 4<32>:word32])
	word32 r6_3717
	word32 r5_1666
	word32 r12_3723
	word32 r11_3722
	word32 r9_3720
	word32 r14_3724
	word32 r10_3721
	word32 r7_3718
	word32 r8_3719
	word32 r3_3716
	__muldf3(__floatunsidf(r4, out r5_1666), r5_1666, r4_544, r5, out r3_3716, out r4_1683, out r5_1684, out r6_3717, out r7_3718, out r8_3719, out r9_3720, out r10_3721, out r11_3722, out r12_3723, out r14_3724)
	r19_1661 = r5
l0040BBD0:
	word32 r8_3725
	word32 r9_3726
	word32 r14_3727
	r2_1544 = __muldf3(r18_1659, r19_1661, r4_1683, r5_1684, out r3_1706, out r4_1707, out r5_1708, out r6_1709, out r7_1710, out r8_3725, out r9_3726, out r10_1697, out r11_1698, out r12_1542, out r14_3727)
l0040B5C4:
l0040BCF8:
	word32 r5_1716
	word32 r14_1726
	word32 r4_1732
	word32 r5_1733
	word32 r10_3713
	word32 r11_3714
	word32 r8_3711
	word32 r6_3709
	word32 r7_3710
	word32 r9_3712
	word32 r3_3708
	word32 r12_3715
	__muldf3(__floatunsidf(r4, out r5_1716), r5_1716, r4_544, r5, out r3_3708, out r4_1732, out r5_1733, out r6_3709, out r7_3710, out r8_3711, out r9_3712, out r10_3713, out r11_3714, out r12_3715, out r14_1726)
	r4_1707 = __divdf3(r4_1732, r5_1733, __floatsidf(Mem553[0x00413240<p32> + (8<32> - r23_106) * 4<32>:word32]), r5_1733, r14_1726, out r5_1708)
l0040B5BC:
l0040BD24:
	word32 r5_1773
	word32 r14_3707
	word32 r8_3705
	word32 r9_3706
	r2_1544 = __muldf3(__floatunsidf(r4, out r5_1773), r5_1773, r4_544, r5, out r3_1706, out r4_1707, out r5_1708, out r6_1709, out r7_1710, out r8_3705, out r9_3706, out r10_1697, out r11_1698, out r12_1542, out r14_3707)
l0040B662:
	r3Out = r3_1706
	r4Out = r4_1707
	r5Out = r5_1708
	r6Out = r6_1709
	r7Out = r7_1710
	r10Out = r10_1697
	r11Out = r11_1698
	r12Out = r12_1542
	return r2_1544
decfloat_exit:
l0040B450:
	r23_106 = r22_137
	r18_104 = r17_138
	r21_128 = 1<32>
l0040B458:
	r7_1818 = Mem1817[r4 + 4<32>:word32]
	branch r7_1818 >=u Mem1817[r4 + 0x68<32>:word32] l0040B4C4
l0040B462:
	r6_109 = r7_1818 + 1<32>
	r5 = CONVERT(Mem1823[r7_1818:byte], byte, word32)
	dwLoc025C_2124 = r6_109
	r7_144 = r5 + 0xFFFFFFD0<32>
	branch r5 >=u 0xFFFFFFC6<32> l0040B448
l0040B472:
	branch r5 == 0x2E<32> l0040B44C
l0040B476:
	word32 r6_1830 = r22_137 + 1<32>
	r22_137 = r6_1830
	r17_138 = CONVERT(r6_1830 <u r22_137, bool, word32) + r17_138
	branch r30_1140 >= 0x3D<32> l0040B602
l0040B602:
	branch r5 == 0x30<32> l0040B458
l0040B606:
	r19_136 = 0x45C<32>
l0040B486:
	word32 r4_1852 = r20_140 + 1<32>
	branch (r5 ^ 0x30<32>) == 0<32> l0040B492
l0040B48E_1:
	r19_136 = r6_1830
l0040B492:
	branch r20_140 == 0<32> l0040B618
l0040B618:
	Mem1864[fp + 0xFFFFEFD0<32> + (r30_1140 << 2<8>) + 0xE00<32>:byte] = SLICE(r7_144, byte, 0)
	r20_140 = 1<32>
	dwLoc0260_2128 = 1<32>
l0040B496:
	word32 r5_1866 = fp + 0xFFFFEFD0<32> + (r30_1140 << 2<8>)
	Mem1871[r5_1866 + 0xE00<32>:byte] = SLICE(r7_144, byte, 0) + Mem1842[r5_1866 + 0xE00<32>:byte] * 0xA<8>
	branch r4_1852 != 9<32> l0040B63E
l0040B63E:
	r20_140 = r4_1852
	dwLoc0260_2128 = 1<32>
l0040B4B2:
	dwLoc0260_2128 = 1<32>
	r30_1140 = r30_1140 + 1<32>
	r7_1818 = Mem1882[r4 + 4<32>:word32]
	r20_140 = 0<32>
	branch r7_1818 <u Mem1871[r4 + 0x68<32>:word32] l0040B462
l0040B4C4:
	word32 r4_1889
	word32 r3_3698
	word32 r8_3701
	word32 r5_3699
	word32 r7_3700
	word32 r9_3702
	word32 r10_3703
	word32 r11_3704
	r2 = __shgetc(r4, out r3_3698, out r4_1889, out r5_3699, out r6_109, out r7_3700, out r8_3701, out r9_3702, out r10_3703, out r11_3704, out r12)
	r5 = r4_1889


word32 __floatscan(word32 r0, word32 r2, word32 r4, word32 r5, word32 r6, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strtold_l
//      __isoc99_vfscanf
// MayUse:  r0:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__floatscan_entry:
	word32 r10
	word32 r11
	word32 r3
	word32 r7
l0040BD5C:
	word32 dwLoc78_2112
	word32 r18_111
	word32 r23_119
	word32 r22_118
	word32 r17_144
	word32 r19_282
	branch r5 == 0<32> l0040BEA8
l0040BEA8:
	r19_282 = 0xFFFFFF6B<32>
	dwLoc78_2112 = 0x18<32>
	r18_111 = 0xFFFFFF6B<32>
	r17_144 = 0x18<32>
l0040BD66:
	branch r5 < 0<32> l0040BEA0
l0040BD6A:
	branch r5 >= 3<32> l0040BEA0
l0040BEA0:
	r22_118 = 0<32>
	r23_119 = 0<32>
l0040BD6E:
	r19_282 = 0xFFFFFBCE<32>
	dwLoc78_2112 = 0x35<32>
	r18_111 = 0xFFFFFBCE<32>
	r17_144 = 0x35<32>
l0040BD90:
	word32 r4_63
	word32 r30_2048 = 0<32>
	word32 r7_58 = Mem57[r4 + 1<32>:word32]
	branch r7_58 >=u Mem57[r4 + 0x68<32>:word32] l0040BE96
l0040BE96:
	word32 r9_3861
	word32 r5_3857
	word32 r6_3858
	word32 r7_3859
	word32 r8_3860
	r2 = __shgetc(r4, out r3, out r4_63, out r5_3857, out r6_3858, out r7_3859, out r8_3860, out r9_3861, out r10, out r11, out r12)
	branch r4_63 == 0x20<32> l0040BD90
l0040BE9E:
l0040BD9E:
	Mem74[r4 + 1<32>:word32] = r7_58 + 1<32>
	r4_63 = CONVERT(Mem74[r7_58:byte], byte, word32)
	branch r4_63 == 0x20<32> l0040BD90
l0040BDA6:
	branch r4_63 <u 0xFFFFFFF2<32> l0040BD90
l0040BDAE:
	word32 r8_109
	word32 r5_1074 = r4_63
	branch r4_63 == 0x2B<32> l0040C00A
l0040C00A:
	r8_109 = 1<32>
	r22_118 = Mem81[0x41202A0<32>:word32]
	r23_119 = Mem81[0x41202A4<32>:word32]
l0040BDB4:
	branch r4_63 == 0x2D<32> l0040BEEA
l0040BEEA:
	r8_109 = 0xFFFFFFFF<32>
	r22_118 = Mem81[0x4120298<32>:word32]
	r23_119 = Mem81[0x412029C<32>:word32]
l0040BEFA:
	word32 r7_91 = Mem81[r4 + 1<32>:word32]
	branch r7_91 >=u Mem81[r4 + 0x68<32>:word32] l0040BFFE
l0040BFFE:
	word32 r4_100
	word32 r5_3914
	word32 r6_3915
	word32 r9_3917
	word32 r7_3916
	r2 = __shgetc(r4, out r3, out r4_100, out r5_3914, out r6_3915, out r7_3916, out r8_109, out r9_3917, out r10, out r11, out r12)
	r18_111 = r8_109
	r5_1074 = r4_100
l0040BF04:
	Mem114[r4 + 1<32>:word32] = r7_91 + 1<32>
	r5_1074 = CONVERT(Mem114[r7_91:byte], byte, word32)
l0040BDB8:
	r8_109 = 1<32>
	r22_118 = Mem81[0x41202A0<32>:word32]
	r23_119 = Mem81[0x41202A4<32>:word32]
l0040BDC8:
	word32 r7_121 = r5_1074 | 0x20<32>
	branch r7_121 != 0x29<32> l0040BF0E
l0040BF0E:
	branch r7_121 != 0x2E<32> l0040BFCA
l0040BFCA:
	branch r5_1074 != 0x30<32> l0040BFF0
l0040BFCE:
	word32 r4_132
	word32 r6_124 = Mem123[r4 + 1<32>:word32]
	word32 r7_125 = Mem123[r4 + 0x68<32>:word32]
	branch r6_124 >=u r7_125 l0040C036
l0040C036:
	word32 r10_3922
	word32 r11_3923
	word32 r6_3919
	word32 r7_3920
	word32 r9_3921
	word32 r3_3918
	r2 = __shgetc(r4, out r3_3918, out r4_132, out r5_1074, out r6_3919, out r7_3920, out r8_109, out r9_3921, out r10_3922, out r11_3923, out r12)
	r7_125 = Mem129[r4 + 0x68<32>:word32]
	r17_144 = r5_1074
	r18_111 = r8_109
l0040BFD8:
	Mem147[r4 + 1<32>:word32] = r6_124 + 1<32>
	r4_132 = CONVERT(Mem147[r6_124:byte], byte, word32)
l0040BFE0:
	branch (r4_132 | 0x20<32>) == 0x38<32> l0040C0EA
l0040C0EA:
	word32 r4_1306
	word32 r6_153 = Mem152[r4 + 1<32>:word32]
	branch r6_153 >=u r7_125 l0040C4E2
l0040C4E2:
	word32 r6_3925
	word32 r11_3929
	word32 r12_3930
	word32 r10_3928
	word32 r7_3926
	word32 r9_3927
	word32 r3_3924
	__shgetc(r4, out r3_3924, out r4_1306, out r5_1074, out r6_3925, out r7_3926, out r8_109, out r9_3927, out r10_3928, out r11_3929, out r12_3930)
	r18_111 = r8_109
l0040C0F0:
	Mem173[r4 + 1<32>:word32] = r6_153 + 1<32>
	r4_1306 = CONVERT(Mem173[r6_153:byte], byte, word32)
l0040C0F8:
	word32 r6_1300
	branch r4_1306 != 0x30<32> l0040C4EC
l0040C4EC:
	r6_1300 = 0<32>
l0040C0FC:
	word32 r7_179 = Mem178[r4 + 0x68<32>:word32]
l0040C102:
	word32 r6_184 = Mem183[r4 + 1<32>:word32]
	branch r6_184 >=u r7_179 l0040C242
l0040C242:
	word32 r3_3931
	word32 r10_3936
	word32 r9_3935
	word32 r8_3934
	word32 r7_3933
	word32 r6_3932
	word32 r11_3937
	word32 r12_3938
	__shgetc(r4, out r3_3931, out r4_1306, out r5_1074, out r6_3932, out r7_3933, out r8_3934, out r9_3935, out r10_3936, out r11_3937, out r12_3938)
	branch r4_1306 != 0x30<32> l0040C114
l0040C24A:
	r7_179 = Mem183[r4 + 0x68<32>:word32]
l0040C108:
	Mem201[r4 + 1<32>:word32] = r6_184 + 1<32>
	r5_1074 = r6_184 + 1<32>
	r4_1306 = CONVERT(Mem201[r6_184:byte], byte, word32)
	branch r4_1306 == 0x30<32> l0040C102
l0040C114:
	r6_1300 = 1<32>
l0040C118:
	word32 dwLoc50_2127
	word32 r8_1297 = r8_109
	branch r4_1306 == 0x2E<32> l0040C464
l0040C464:
	r5_1074 = Mem211[r4 + 1<32>:word32]
	branch r5_1074 >=u Mem211[r4 + 0x68<32>:word32] l0040C50A
l0040C50A:
	word32 r9_4070
	word32 r11_4072
	word32 r12_4073
	word32 r10_4071
	word32 r7_4069
	word32 r3_4068
	__shgetc(r4, out r3_4068, out r4_1306, out r5_1074, out r6_1300, out r7_4069, out r8_1297, out r9_4070, out r10_4071, out r11_4072, out r12_4073)
	r18_111 = r8_109
l0040C46E:
	Mem239[r4 + 1<32>:word32] = r5_1074 + 1<32>
	r4_1306 = CONVERT(Mem239[r5_1074:byte], byte, word32)
l0040C476:
	branch r4_1306 != 0x30<32> l0040C500
l0040C500:
	dwLoc50_2127 = 1<32>
l0040C47A:
	word32 r7_249 = Mem248[r4 + 0x68<32>:word32]
	word32 r22_250 = 0<32>
	r30_2048 = 0xFFFFFFFF<32>
l0040C48C:
	word32 r6_300 = Mem299[r4 + 1<32>:word32]
	r5_1074 = r22_250 + 0xFFFFFFFF<32>
	branch r6_300 >=u r7_249 l0040C4C6
l0040C4C6:
	word32 r3_4074
	word32 r7_4076
	word32 r8_4077
	word32 r10_4079
	word32 r11_4080
	word32 r12_4081
	word32 r6_4075
	word32 r9_4078
	__shgetc(r4, out r3_4074, out r4_1306, out r5_1074, out r6_4075, out r7_4076, out r8_4077, out r9_4078, out r10_4079, out r11_4080, out r12_4081)
	r22_250 = r22_250 + 0xFFFFFFFF<32>
	branch r4_1306 != 0x30<32> l0040C4B0
l0040C4DC:
	r7_249 = Mem299[r4 + 0x68<32>:word32]
l0040C49E:
	Mem328[r4 + 1<32>:word32] = r6_300 + 1<32>
	r22_250 = r5_1074
	r4_1306 = CONVERT(Mem328[r6_300:byte], byte, word32)
	branch r4_1306 == 0x30<32> l0040C48C
l0040C4B0:
	r6_1300 = 1<32>
	dwLoc50_2127 = 0<32>
l0040C11C:
	dwLoc50_2127 = 0<32>
l0040C122:
	word32 r7_1295 = 0x4120000<32>
	word32 r22_1331 = 0<32>
	word32 r11_1302 = 0<32>
	word32 r23_1105 = 0<32>
	word32 dwLoc60_2138 = 0<32>
	word32 dwLoc5C_2139 = 0<32>
	word32 dwLoc58_2142 = Mem363[0x4120258<32>:word32]
	word32 dwLoc54_2143 = Mem363[0x412025C<32>:word32]
l0040C140:
	word32 r4_552
	word32 r7_555
	word32 r9_1323 = r4_1306 + 0xFFFFFFD0<32>
	branch r9_1323 <u 0xA<32> l0040C180
l0040C148:
	r5_1074 = r4_1306 | 0x20<32>
	r7_1295 = r5_1074 + 0xFFFFFF9F<32>
	branch r5_1074 <u 0xFFFFFF99<32> l0040C180
l0040C154:
	branch r4_1306 != 0x2E<32> l0040C442
l0040C442:
	branch r6_1300 == 0<32> l0040C410
l0040C444:
	r6_1300 = dwLoc50_2127
	branch dwLoc50_2127 != 0<32> l0040C44C
l0040C448_1:
l0040C44C:
	branch dwLoc50_2127 != 0<32> l0040C454
l0040C450_1:
l0040C454:
	branch r11_1302 > 0<32> l0040C2DA
l0040C45A:
	branch r11_1302 != 0<32> l0040C25E
l0040C45E:
	branch r22_1331 <u 8<32> l0040C25E
l0040C462:
l0040C158:
	branch r7_1295 != 0<32> l0040C250
l0040C250:
	branch r6_1300 == 0<32> l0040C410
l0040C410:
	branch Mem402[r4 + 0x68<32>:word32] == 0<32> l0040C4F0
l0040C4F0:
	branch r6 != 0<32> l0040C432
l0040C418:
	word32 r7_407 = Mem402[r4 + 1<32>:word32]
	Mem409[r4 + 1<32>:word32] = r7_407 + 0xFFFFFFFF<32>
	branch r6 == 0<32> l0040C4F4
l0040C4F4:
	word32 r10_4066
	word32 r11_4067
	word32 r9_4065
	r5_1074 = __shlim(r4, 0<32>, 0<32>, out r8_1297, out r9_4065, out r10_4066, out r11_4067)
l0040C424:
	Mem429[r4 + 1<32>:word32] = r7_407 + 0xFFFFFFFE<32>
	branch r7_407 == 0xFFFFFFFE<32> l0040C432
l0040C42E:
	Mem432[r4 + 1<32>:word32] = r7_407 + 0xFFFFFFFD<32>
l0040C254:
	branch r11_1302 > 0<32> l0040C2DE
l0040C258:
	branch r11_1302 == 0<32> l0040C62C
l0040C62C:
	branch r22_1331 <u 8<32> l0040C25C
l0040C630:
l0040C25C:
	r5_1074 = 0x2E<32>
l0040C25E:
	word32 r7_438 = r22_1331 + 1<32>
	r23_1105 = r23_1105 << 4<32>
	r6_1300 = CONVERT(r7_438 <u r22_1331, bool, word32) + r11_1302
	branch r7_438 == 8<32> l0040C600
l0040C600:
	branch r6_1300 != 0<32> l0040C270
l0040C604:
l0040C270:
	word32 r7_451 = r22_1331 + 2<32>
	r23_1105 = r23_1105 << 4<32>
	r6_1300 = CONVERT(r7_451 <u r22_1331, bool, word32) + r11_1302
	branch r7_451 == 8<32> l0040C626
l0040C626:
	branch r6_1300 != 0<32> l0040C282
l0040C62A:
l0040C282:
	word32 r7_458 = r22_1331 + 3<32>
	r23_1105 = r23_1105 << 8<32>
	r6_1300 = CONVERT(r7_458 <u r22_1331, bool, word32) + r11_1302
	branch r7_458 == 8<32> l0040C620
l0040C620:
	branch r6_1300 != 0<32> l0040C294
l0040C624:
l0040C294:
	word32 r7_465 = r22_1331 + 4<32>
	r23_1105 = r23_1105 << 0xC<32>
	r6_1300 = CONVERT(r7_465 <u r22_1331, bool, word32) + r11_1302
	branch r7_465 == 8<32> l0040C61A
l0040C61A:
	branch r6_1300 != 0<32> l0040C2A6
l0040C61E:
l0040C2A6:
	word32 r7_472 = r22_1331 + 5<32>
	r23_1105 = r23_1105 << 0x10<32>
	r6_1300 = CONVERT(r7_472 <u r22_1331, bool, word32) + r11_1302
	branch r7_472 == 8<32> l0040C614
l0040C614:
	branch r6_1300 != 0<32> l0040C2B8
l0040C618:
l0040C2B8:
	word32 r7_479 = r22_1331 + 6<32>
	r23_1105 = r23_1105 << 0x14<32>
	r6_1300 = CONVERT(r7_479 <u r22_1331, bool, word32) + r11_1302
	branch r7_479 == 8<32> l0040C5FA
l0040C5FA:
	branch r6_1300 != 0<32> l0040C2CA
l0040C5FE:
l0040C2CA:
	r23_1105 = r23_1105 << 0x18<32>
	branch (r22_1331 | r11_1302) != 0<32> l0040C2DA
l0040C2D6:
	r23_1105 = r23_1105 << 0x1C<32>
l0040C2DA:
	branch r5_1074 == 0x30<32> l0040C5D2
l0040C5D2:
	r2 = scanexp(r4, r6, out r3, out r4_552, out r5_1074, out r6_1300, out r7_555, out r8_1297, out r12)
	r18_111 = r8_1297
	branch r4_552 != 0<32> l0040C2EE
l0040C5E0:
	r7_555 = 0<32>
	branch r5_1074 != 0<32> l0040C2EE
l0040C5E8:
	branch r6 == 0<32> l0040C606
l0040C606:
	word32 r8_4063
	word32 r9_4064
	__shlim(r4, 0<32>, 0<32>, out r8_4063, out r9_4064, out r10, out r11)
	r6 = 0<32>
	r7 = 0<32>
	r22_118 = 0<32>
	r23_119 = 0<32>
l0040C5EA:
	r7_555 = Mem545[r4 + 0x68<32>:word32]
	branch r7_555 == 0<32> l0040C5CE
l0040C5F0:
	word32 r7_572 = Mem545[r4 + 1<32>:word32]
	Mem575[r4 + 1<32>:word32] = r7_572 + 0xFFFFFFFF<32>
	r5_1074 = 0<32>
	r7_555 = r7_572 + 0xFFFFFFFF<32>
l0040C2DE:
	r7_555 = Mem577[r4 + 0x68<32>:word32]
	branch r7_555 == 0<32> l0040C5CC
l0040C5CC:
	r4_552 = 0<32>
l0040C5CE:
	r5_1074 = 0<32>
l0040C2E6:
	word32 r7_590 = Mem577[r4 + 1<32>:word32]
	Mem594[r4 + 1<32>:word32] = r7_590 + 0xFFFFFFFF<32>
	r4_552 = 0<32>
	r5_1074 = 0<32>
	r7_555 = r7_590 + 0xFFFFFFFF<32>
l0040C2EE:
	branch r23_1105 == 0<32> l0040C432
l0040C432:
	word32 r4_626
	word32 r5_627
	word32 r8_3977
	word32 r14_3979
	word32 r9_3978
	r2 = __muldf3(__floatsidf(r8_1297), r5_1074, 0<32>, 0<32>, out r3, out r4_626, out r5_627, out r6, out r7, out r8_3977, out r9_3978, out r10, out r11, out r12, out r14_3979)
	r22_118 = r4_626
	r23_119 = r5_627
l0040C2F2:
	word32 r16_643 = r7_555 + 0xFFFFFFF8<32>
	word32 r4_658 = (r16_643 << 2<32>) + r4_552
	word32 r6_661 = (CONVERT(r16_643 <u r7_555, bool, word32) + (r6_1300 + 0xFFFFFFFF<32>) << 2<32> | r16_643 >>u 0x1E<32>) + r5_1074
	word32 r7_662 = CONVERT(r4_658 <u r16_643 << 2<32>, bool, word32) + r6_661
	word32 r16_663 = r4_658
	word32 r21_664 = r7_662
	branch r30_2048 < r7_662 l0040C59A
l0040C320:
	branch r7_662 == 0<32> l0040C594
l0040C594:
	branch r6_661 >=u r4_658 l0040C324
l0040C59A:
	word32 r4_3980
	__errno_location(out r4_3980)
	word32 r4_712
	word32 r5_713
	word32 r6_3982
	word32 r3_3981
	word32 r9_3985
	word32 r8_3984
	word32 r10_3986
	word32 r11_3987
	word32 r12_3988
	word32 r14_3989
	word32 r7_3983
	__muldf3(__floatsidf(r8_1297), r5_1074, Mem691[0x4120220<32>:word32], Mem691[0x4120224<32>:word32], out r3_3981, out r4_712, out r5_713, out r6_3982, out r7_3983, out r8_3984, out r9_3985, out r10_3986, out r11_3987, out r12_3988, out r14_3989)
	word32 r4_730
	word32 r5_731
	word32 r8_3990
	word32 r9_3991
	word32 r14_3992
	r2 = __muldf3(r4_712, r5_713, Mem691[0x4120220<32>:word32], Mem691[0x4120224<32>:word32], out r3, out r4_730, out r5_731, out r6, out r7, out r8_3990, out r9_3991, out r10, out r11, out r12, out r14_3992)
	r22_118 = r4_730
	r23_119 = r5_731
l0040C324:
	branch r7_662 < 0xFFFFFFFF<32> l0040C51E
l0040C328:
	branch r7_662 == 0xFFFFFFFF<32> l0040C518
l0040C518:
	branch r4_658 >=u r7_662 l0040C32C
l0040C51E:
	word32 r4_3993
	__errno_location(out r4_3993)
	word32 r4_792
	word32 r5_793
	word32 r3_3994
	word32 r7_3996
	word32 r6_3995
	word32 r8_3997
	word32 r14_4002
	word32 r12_4001
	word32 r9_3998
	word32 r10_3999
	word32 r11_4000
	__muldf3(__floatsidf(r8_1297), r5_1074, Mem770[0x4120280<32>:word32], Mem770[0x4120284<32>:word32], out r3_3994, out r4_792, out r5_793, out r6_3995, out r7_3996, out r8_3997, out r9_3998, out r10_3999, out r11_4000, out r12_4001, out r14_4002)
	word32 r4_810
	word32 r5_811
	word32 r14_4005
	word32 r9_4004
	word32 r8_4003
	r2 = __muldf3(r4_792, r5_793, Mem770[0x4120280<32>:word32], Mem770[0x4120284<32>:word32], out r3, out r4_810, out r5_811, out r6, out r7, out r8_4003, out r9_4004, out r10, out r11, out r12, out r14_4005)
	r22_118 = r4_810
	r23_119 = r5_811
l0040C32C:
	branch r23_1105 < 0<32> l0040C390
l0040C330:
	word32 r17_826 = r4_658
	word32 r16_828 = r23_1105
l0040C340:
	r16_828 = r16_828 << 1<32>
	word32 r6_856 = r22_1331
	word32 r7_857 = r23_1105
	word32 r6_4014
	word32 r7_4015
	branch __gtdf2(r22_1331, r23_1105, Mem823[0x4120250<32>:word32], Mem823[0x4120254<32>:word32], out r6_4014, out r7_4015) < 0<32> l0040C36A
l0040C356:
	r17_826 = 0x4120000<32>
	r16_828 = r16_828 + 1<32>
	word32 r5_873
	word32 r13_4013
	word32 r7_4012
	r6_856 = __subdf3(r22_1331, r23_1105, Mem823[r23_1105 + 0x258<32>:word32], Mem823[r23_1105 + 0x25C<32>:word32], out r5_873, out r7_4012, out r13_4013)
	r7_857 = r5_873
l0040C36A:
	word32 r4_894
	word32 r7_4007
	word32 r13_4011
	word32 r12_4010
	word32 r8_4008
	word32 r11_4009
	word32 r6_4006
	__adddf3(r22_1331, r23_1105, r6_856, r7_857, out r4_894, out r5_1074, out r6_4006, out r7_4007, out r8_4008, out r11_4009, out r12_4010, out r13_4011)
	word32 r7_902 = r17_826 + 0xFFFFFFFF<32>
	r22_1331 = r4_894
	r23_1105 = r5_1074
	r17_826 = r7_902
	r21_664 = r21_664 + 0xFFFFFFFF<32> + CONVERT(r7_902 <u r17_826, bool, word32)
	branch r16_828 >= 0<32> l0040C340
l0040C384:
	dwLoc60_2138 = r4_894
	dwLoc5C_2139 = r5_1074
	r23_1105 = r16_828
	r16_663 = r7_902
l0040C390:
	word32 r19_1031
	word32 r18_1079
	word32 r17_1032
	word32 r6_923 = r16_663 + 0x20<32>
	word32 r19_946 = r6_923 - r19_282
	word32 r6_951 = CONVERT(r6_923 <u r19_946, bool, word32)
	word32 r8_1028 = r8_1297
	word32 r7_953 = CONVERT(r6_923 <u r16_663, bool, word32) + r21_664 + 1<32> - r6_951
	branch r7_953 < 0<32> l0040C3B2
l0040C3A8:
	r17_1032 = 0<32>
	branch r6_951 != r7_953 l0040C3BC
l0040C3AC:
	r17_1032 = dwLoc78_2112
	branch r19_946 >=u r7_953 l0040C3BC
l0040C3B2:
	word32 r17_982 = r16_663 - r18_111
	r17_1032 = r17_982 + 0x20<32>
	branch r17_982 < 0x20<32> l0040C550
l0040C550:
	word32 r5_1005
	word32 r8_1008
	word32 r10_4016
	scalbn(Mem990[r7_953 + 0x258<32>:word32], Mem990[r7_953 + 0x25C<32>:word32], 0x54<32>, out r5_1005, out r8_1008, out r10_4016)
	__floatsidf(r8_1008)
	r19_1031 = copysignl(r5_1005, r5_1005, out r8_1028)
l0040C3BC:
	branch r17_1032 < 0x35<32> l0040C63C
l0040C63C:
	word32 r5_1054
	word32 r8_1057
	word32 r10_4017
	word32 r4_1053 = scalbn(Mem1039[r7_953 + 0x258<32>:word32], Mem1039[r7_953 + 0x25C<32>:word32], 0xFBEE0054<32>, out r5_1054, out r8_1057, out r10_4017)
	__floatsidf(r8_1057)
	r5_1074 = copysignl(r5_1054, r5_1054, out r8_1028)
	r18_1079 = r4_1053
	r19_1031 = r5_1074
	branch false l0040C576
l0040C576:
	word32 r4_1095
	word32 r9_4021
	word32 r6_4019
	word32 r7_4020
	word32 r13_4023
	word32 r11_4022
	__nedf2(dwLoc60_2138, dwLoc5C_2139, 0<32>, 0<32>, out r4_1095, out r5_1074, out r6_4019, out r7_4020, out r8_1028, out r9_4021, out r11_4022, out r13_4023)
	r18_1079 = r8_1028
	branch r4_1095 == 0<32> l0040C3C4
l0040C588:
	branch !__bit(r23_1105, 0<32>) l0040C3C4
l0040C58C:
	r23_1105 = r23_1105 + 1<32>
	dwLoc60_2138 = 0<32>
	dwLoc5C_2139 = 0<32>
l0040C668:
l0040C3C0:
	r18_1079 = 0<32>
	r19_1031 = 0<32>
l0040C3C4:
	word32 r4_1115 = __floatsidf(r8_1028)
	word32 r4_1143
	word32 r5_1144
	word32 r7_4026
	word32 r6_4025
	word32 r11_4030
	word32 r12_4031
	word32 r14_4032
	word32 r9_4028
	word32 r10_4029
	word32 r3_4024
	word32 r8_4027
	__muldf3(r4_1115, r5_1074, dwLoc60_2138, dwLoc5C_2139, out r3_4024, out r4_1143, out r5_1144, out r6_4025, out r7_4026, out r8_4027, out r9_4028, out r10_4029, out r11_4030, out r12_4031, out r14_4032)
	word32 r5_1155
	word32 r4_1173
	word32 r5_1174
	word32 r7_4035
	word32 r3_4033
	word32 r6_4034
	word32 r8_4036
	word32 r9_4037
	word32 r10_4038
	word32 r11_4039
	word32 r12_4040
	word32 r14_4041
	__muldf3(__floatunsidf(r23_1105, out r5_1155), r5_1155, r4_1115, r5_1074, out r3_4033, out r4_1173, out r5_1174, out r6_4034, out r7_4035, out r8_4036, out r9_4037, out r10_4038, out r11_4039, out r12_4040, out r14_4041)
	word32 r4_1192
	word32 r5_1193
	word32 r6_4042
	word32 r7_4043
	word32 r8_4044
	word32 r12_4046
	word32 r11_4045
	word32 r13_4047
	__adddf3(r4_1173, r5_1174, r18_1079, r19_1031, out r4_1192, out r5_1193, out r6_4042, out r7_4043, out r8_4044, out r11_4045, out r12_4046, out r13_4047)
	word32 r4_1208
	word32 r5_1209
	word32 r11_4051
	word32 r7_4049
	word32 r6_4048
	word32 r8_4050
	word32 r12_4052
	word32 r13_4053
	__adddf3(r4_1192, r5_1193, r4_1143, r5_1144, out r4_1208, out r5_1209, out r6_4048, out r7_4049, out r8_4050, out r11_4051, out r12_4052, out r13_4053)
	word32 r5_1224
	word32 r7_4054
	word32 r13_4055
	word32 r4_1223 = __subdf3(r4_1208, r5_1209, r18_1079, r19_1031, out r5_1224, out r7_4054, out r13_4055)
	word32 r4_1239
	word32 r9_4060
	word32 r7_4058
	word32 r8_4059
	word32 r5_4056
	word32 r6_4057
	word32 r11_4061
	word32 r13_4062
	__nedf2(r4_1223, r5_1224, 0<32>, 0<32>, out r4_1239, out r5_4056, out r6_4057, out r7_4058, out r8_4059, out r9_4060, out r11_4061, out r13_4062)
	branch r4_1239 == 0<32> l0040C632
l0040C632:
	word32 r4_4018
	__errno_location(out r4_4018)
l0040C404:
l0040C40C_thunk_scalbnl:
	word32 r10_1273
	word32 r11_1274
	word32 r12_1275
	word32 r3_1282
	word32 r4_1283
	word32 r5_1284
	word32 r6_1285
	word32 r7_1286
	word32 r2_1279 = scalbnl(r4_1223, r5_1224, r16_663, out r3_1282, out r4_1283, out r5_1284, out r6_1285, out r7_1286, out r10_1273, out r11_1274, out r12_1275)
	r3Out = r3_1282
	r4Out = r4_1283
	r5Out = r5_1284
	r6Out = r6_1285
	r7Out = r7_1286
	r10Out = r10_1273
	r11Out = r11_1274
	r12Out = r12_1275
	return r2_1279
l0040C15E:
	dwLoc50_2127 = 1<32>
l0040C166:
	r7_1295 = Mem1294[r4 + 1<32>:word32]
	branch r7_1295 >=u Mem1294[r4 + 0x68<32>:word32] l0040C230
l0040C230:
	word32 r10_3941
	word32 r9_3940
	word32 r3_3939
	word32 r12_3942
	__shgetc(r4, out r3_3939, out r4_1306, out r5_1074, out r6_1300, out r7_1295, out r8_1297, out r9_3940, out r10_3941, out r11_1302, out r12_3942)
	r18_111 = r11_1302
l0040C170:
	Mem1321[r4 + 1<32>:word32] = r7_1295 + 1<32>
	r4_1306 = CONVERT(Mem1321[r7_1295:byte], byte, word32)
	r5_1074 = r7_1295 + 1<32>
	r9_1323 = r4_1306 + 0xFFFFFFD0<32>
	branch r4_1306 >=u 0xFFFFFFC6<32> l0040C148
l0040C180:
	branch r4_1306 == 0x2E<32> l0040C158
l0040C184:
	branch r4_1306 < 0x3A<32> l0040C190
l0040C188:
	r9_1323 = (r4_1306 | 0x20<32>) + 0xFFFFFFA9<32>
l0040C190:
	branch r11_1302 > 0<32> l0040C1EE
l0040C194:
	branch r11_1302 != 0<32> l0040C228
l0040C198:
	branch r22_1331 <u 8<32> l0040C228
l0040C228:
	r23_1105 = (r23_1105 << 4<32>) + r9_1323
l0040C19C:
	branch r22_1331 >=u 0xE<32> l0040C1EE
l0040C1EE:
	branch r9_1323 == 0<32> l0040C1DE
l0040C1F2:
	branch r7_1295 != 0<32> l0040C1DE
l0040C1F6:
	word32 r4_1384
	word32 r5_1385
	word32 r3_3964
	word32 r14_3972
	word32 r7_3966
	word32 r12_3971
	word32 r11_3970
	word32 r8_3967
	word32 r9_3968
	word32 r10_3969
	word32 r6_3965
	__muldf3(dwLoc58_2142, dwLoc54_2143, Mem1365[0x4120250<32>:word32], Mem1365[0x4120254<32>:word32], out r3_3964, out r4_1384, out r5_1385, out r6_3965, out r7_3966, out r8_3967, out r9_3968, out r10_3969, out r11_3970, out r12_3971, out r14_3972)
	word32 r4_1402
	word32 r5_1403
	word32 r13_3976
	word32 r12_3975
	word32 r7_3974
	word32 r6_3973
	__adddf3(dwLoc60_2138, dwLoc5C_2139, r4_1384, r5_1385, out r4_1402, out r5_1403, out r6_3973, out r7_3974, out r8_1297, out r11_1302, out r12_3975, out r13_3976)
	r18_111 = r11_1302
	dwLoc60_2138 = r4_1402
	dwLoc5C_2139 = r5_1403
l0040C1A0:
	word32 r4_1430
	word32 r5_1431
	word32 r9_1435
	word32 r6_3944
	word32 r3_3943
	word32 r14_3950
	word32 r12_3949
	word32 r7_3945
	word32 r8_3946
	word32 r10_3947
	word32 r11_3948
	__muldf3(dwLoc58_2142, dwLoc54_2143, Mem1413[0x41202B0<32>:word32], Mem1413[0x41202B4<32>:word32], out r3_3943, out r4_1430, out r5_1431, out r6_3944, out r7_3945, out r8_3946, out r9_1435, out r10_3947, out r11_3948, out r12_3949, out r14_3950)
	word32 r4_1458
	word32 r5_1459
	word32 r7_3953
	word32 r9_3955
	word32 r8_3954
	word32 r6_3952
	word32 r3_3951
	word32 r10_3956
	word32 r14_3959
	word32 r12_3958
	word32 r11_3957
	__muldf3(__floatsidf(r9_1435), r5_1431, r4_1430, r5_1431, out r3_3951, out r4_1458, out r5_1459, out r6_3952, out r7_3953, out r8_3954, out r9_3955, out r10_3956, out r11_3957, out r12_3958, out r14_3959)
	word32 r4_1476
	word32 r5_1477
	word32 r13_3963
	word32 r12_3962
	word32 r7_3961
	word32 r6_3960
	__adddf3(dwLoc60_2138, dwLoc5C_2139, r4_1458, r5_1459, out r4_1476, out r5_1477, out r6_3960, out r7_3961, out r8_1297, out r11_1302, out r12_3962, out r13_3963)
	dwLoc58_2142 = r4_1430
	dwLoc54_2143 = r5_1431
	r18_111 = r11_1302
	dwLoc60_2138 = r4_1476
	dwLoc5C_2139 = r5_1477
l0040C1DE:
	word32 r7_1489 = r22_1331 + 1<32>
	r6_1300 = 1<32>
	r22_1331 = r7_1489
	r11_1302 = r11_1302 + CONVERT(r7_1489 <u r22_1331, bool, word32)
l0040BFE8:
	branch r7_125 == 0<32> l0040BFF0
l0040BFEA:
	Mem1498[r4 + 1<32>:word32] = Mem152[r4 + 1<32>:word32] + 0xFFFFFFFF<32>
l0040BFF0:
l0040BFFA_thunk_decfloat:
	word32 r10_1553
	word32 r11_1554
	word32 r3_1556
	word32 r4_1557
	word32 r5_1558
	word32 r6_1559
	word32 r7_1560
	word32 r12_1563
	word32 r2_1567 = decfloat(r0, r2, r4, r5_1074, r17_144, r18_111, r6, r12, out r3_1556, out r4_1557, out r5_1558, out r6_1559, out r7_1560, out r10_1553, out r11_1554, out r12_1563)
	r3Out = r3_1556
	r4Out = r4_1557
	r5Out = r5_1558
	r6Out = r6_1559
	r7Out = r7_1560
	r10Out = r10_1553
	r11Out = r11_1554
	r12Out = r12_1563
	return r2_1567
l0040BF12:
	word32 r4_1575
	word32 r6_1571 = Mem123[r4 + 1<32>:word32]
	r7 = Mem123[r4 + 0x68<32>:word32]
	branch r6_1571 >=u r7 l0040C0C2
l0040C0C2:
	word32 r5_3894
	word32 r6_3895
	word32 r7_3896
	word32 r9_3898
	word32 r8_3897
	r2 = __shgetc(r4, out r3, out r4_1575, out r5_3894, out r6_3895, out r7_3896, out r8_3897, out r9_3898, out r10, out r11, out r12)
	r7 = Mem123[r4 + 0x68<32>:word32]
l0040BF1C:
	Mem1588[r4 + 1<32>:word32] = r6_1571 + 1<32>
	r4_1575 = CONVERT(Mem1588[r6_1571:byte], byte, word32)
l0040BF24:
	branch (r4_1575 | 0x20<32>) != 0x21<32> l0040BE78
l0040BF2C:
	word32 r4_1598
	word32 r6_1594 = Mem1593[r4 + 1<32>:word32]
	branch r6_1594 >=u r7 l0040C02C
l0040C02C:
	word32 r5_3899
	word32 r7_3901
	word32 r9_3903
	word32 r8_3902
	word32 r6_3900
	r2 = __shgetc(r4, out r3, out r4_1598, out r5_3899, out r6_3900, out r7_3901, out r8_3902, out r9_3903, out r10, out r11, out r12)
	r7 = Mem1593[r4 + 0x68<32>:word32]
l0040BF32:
	Mem1611[r4 + 1<32>:word32] = r6_1594 + 1<32>
	r4_1598 = CONVERT(Mem1611[r6_1594:byte], byte, word32)
l0040BF3A:
	branch (r4_1598 | 0x20<32>) != 0x2E<32> l0040BE78
l0040BF42:
	word32 r6_1617 = Mem1616[r4 + 1<32>:word32]
	branch r6_1617 >=u r7 l0040C0B0
l0040C0B0:
	word32 r4_1621
	word32 r8_3907
	word32 r9_3908
	word32 r6_3905
	word32 r7_3906
	word32 r5_3904
	r2 = __shgetc(r4, out r3, out r4_1621, out r5_3904, out r6_3905, out r7_3906, out r8_3907, out r9_3908, out r10, out r11, out r12)
	r7 = Mem1616[r4 + 0x68<32>:word32]
	r6 = CONVERT((r4_1621 ^ 0x28<32>) >u 0<32>, bool, word32)
l0040BF48:
	Mem1636[r4 + 1<32>:word32] = r6_1617 + 1<32>
	r6 = CONVERT((CONVERT(Mem1636[r6_1617:byte], byte, word32) ^ 0x28<32>) >u 0<32>, bool, word32)
l0040BF58:
	branch r6 != 0<32> l0040C098
l0040C098:
	branch r7 == 0<32> l0040BFA8
l0040C09C:
	word32 r7_1644 = Mem1643[r4 + 1<32>:word32]
	r22_118 = Mem1643[0x41202A8<32>:word32]
	r23_119 = Mem1643[0x41202AC<32>:word32]
	Mem1649[r4 + 1<32>:word32] = r7_1644 + 0xFFFFFFFF<32>
	r6 = 0x4120000<32>
	r7 = r7_1644 + 0xFFFFFFFF<32>
l0040BF5C:
	word32 r4_1656
	word32 r6_1650 = Mem1643[r4 + 1<32>:word32]
	word32 r17_1651 = 1<32>
	branch r6_1650 >=u r7 l0040C092
l0040BF64:
	Mem1655[r4 + 1<32>:word32] = r6_1650 + 1<32>
	r4_1656 = CONVERT(Mem1655[r6_1650:byte], byte, word32)
l0040BF6C:
	r6 = r4_1656 + 0xFFFFFFD0<32>
	word32 r7_1660 = __ins(r4_1656, 0<32>, 5<32>, 1<32>)
	branch r6 <u 0xA<32> l0040C086
l0040BF7A:
	branch r7_1660 <u 0xFFFFFFA5<32> l0040C086
l0040BF82:
	branch r4_1656 == 0x1F<32> l0040C086
l0040C086:
	r17_1651 = r17_1651 + 1<32>
	r6_1650 = Mem1665[r4 + 1<32>:word32]
	branch r6_1650 <u Mem1665[r4 + 0x68<32>:word32] l0040BF64
l0040C092:
	word32 r6_3910
	word32 r5_3909
	word32 r8_3912
	word32 r7_3911
	word32 r9_3913
	r2 = __shgetc(r4, out r3, out r4_1656, out r5_3909, out r6_3910, out r7_3911, out r8_3912, out r9_3913, out r10, out r11, out r12)
l0040BF86:
	branch r4_1656 == 0x29<32> l0040BFA8
l0040BF8A:
	branch Mem1665[r4 + 0x68<32>:word32] == 0<32> l0040C0E4
l0040C0E4:
	branch r6 != 0<32> l0040BFA8
l0040C0E8:
l0040BF92:
	word32 r7_1693 = Mem1665[r4 + 1<32>:word32]
	Mem1695[r4 + 1<32>:word32] = r7_1693 + 0xFFFFFFFF<32>
	word32 r7_1694 = r7_1693 + 0xFFFFFFFF<32>
	branch r6 != 0<32> l0040BFA0
l0040BFA0:
	r17_1651 = r17_1651 + 0xFFFFFFFF<32>
	r6 = 0xFFFFFFFF<32>
	branch r17_1651 != 0xFFFFFFFF<32> l0040BF9C
l0040BF9C:
	r7_1694 = r7_1694 + 0xFFFFFFFF<32>
	Mem1702[r4 + 1<32>:word32] = r7_1694
l0040BFA8:
	r7 = 0x4120000<32>
	r22_118 = Mem1704[0x41202A8<32>:word32]
	r23_119 = Mem1704[0x41202AC<32>:word32]
l0040BF9A:
l0040BDD0:
	word32 r4_1712
	word32 r6_1708 = Mem123[r4 + 1<32>:word32]
	r7 = Mem123[r4 + 0x68<32>:word32]
	branch r6_1708 >=u r7 l0040BED6
l0040BED6:
	word32 r5_3862
	word32 r7_3864
	word32 r6_3863
	word32 r9_3866
	word32 r8_3865
	r2 = __shgetc(r4, out r3, out r4_1712, out r5_3862, out r6_3863, out r7_3864, out r8_3865, out r9_3866, out r10, out r11, out r12)
	r7 = Mem123[r4 + 0x68<32>:word32]
l0040BDDA:
	Mem1725[r4 + 1<32>:word32] = r6_1708 + 1<32>
	r4_1712 = CONVERT(Mem1725[r6_1708:byte], byte, word32)
l0040BDE2:
	branch (r4_1712 | 0x20<32>) != 0x2E<32> l0040BE78
l0040BDEA:
	word32 r4_1735
	word32 r6_1731 = Mem1730[r4 + 1<32>:word32]
	branch r6_1731 >=u r7 l0040BEE0
l0040BEE0:
	word32 r5_3867
	word32 r7_3869
	word32 r6_3868
	word32 r8_3870
	word32 r9_3871
	r2 = __shgetc(r4, out r3, out r4_1735, out r5_3867, out r6_3868, out r7_3869, out r8_3870, out r9_3871, out r10, out r11, out r12)
	r7 = Mem1730[r4 + 0x68<32>:word32]
l0040BDF0:
	Mem1748[r4 + 1<32>:word32] = r6_1731 + 1<32>
	r4_1735 = CONVERT(Mem1748[r6_1731:byte], byte, word32)
l0040BDF8:
	branch (r4_1735 | 0x20<32>) != 0x26<32> l0040BE78
l0040BE00:
	word32 r4_1758
	r6 = Mem1753[r4 + 1<32>:word32]
	branch r6 >=u r7 l0040BFB6
l0040BFB6:
	word32 r7_3873
	word32 r9_3875
	word32 r8_3874
	word32 r5_3872
	r2 = __shgetc(r4, out r3, out r4_1758, out r5_3872, out r6, out r7_3873, out r8_3874, out r9_3875, out r10, out r11, out r12)
	r7 = Mem1753[r4 + 0x68<32>:word32]
l0040BE06:
	Mem1771[r4 + 1<32>:word32] = r6 + 1<32>
	r4_1758 = CONVERT(Mem1771[r6:byte], byte, word32)
l0040BE0E:
	word32 r5_1775
	branch (r4_1758 | 0x20<32>) != 0x29<32> l0040C048
l0040C048:
	r5_1775 = 3<32>
l0040BE16:
	word32 r4_1782
	r6 = Mem1777[r4 + 1<32>:word32]
	branch r6 >=u r7 l0040BFC0
l0040BFC0:
	word32 r7_3877
	word32 r8_3878
	word32 r9_3879
	word32 r5_3876
	r2 = __shgetc(r4, out r3, out r4_1782, out r5_3876, out r6, out r7_3877, out r8_3878, out r9_3879, out r10, out r11, out r12)
	r7 = Mem1777[r4 + 0x68<32>:word32]
l0040BE1C:
	Mem1795[r4 + 1<32>:word32] = r6 + 1<32>
	r4_1782 = CONVERT(Mem1795[r6:byte], byte, word32)
l0040BE24:
	branch (r4_1782 | 0x20<32>) != 0x2E<32> l0040C0CC
l0040C0CC:
	r5_1775 = 4<32>
	branch r6 != 0<32> l0040C04A
l0040C0D2:
l0040BE2C:
	word32 r4_1810
	r6 = Mem1805[r4 + 1<32>:word32]
	branch r6 >=u r7 l0040C01C
l0040C01C:
	word32 r9_3883
	word32 r5_3880
	word32 r7_3881
	word32 r8_3882
	r2 = __shgetc(r4, out r3, out r4_1810, out r5_3880, out r6, out r7_3881, out r8_3882, out r9_3883, out r10, out r11, out r12)
	r7 = Mem1805[r4 + 0x68<32>:word32]
l0040BE32:
	Mem1823[r4 + 1<32>:word32] = r6 + 1<32>
	r4_1810 = CONVERT(Mem1823[r6:byte], byte, word32)
l0040BE3A:
	branch (r4_1810 | 0x20<32>) != 0x29<32> l0040C0D4
l0040C0D4:
	r5_1775 = 5<32>
	branch r6 != 0<32> l0040C04A
l0040C0DA:
l0040BE42:
	word32 r4_1835
	r6 = Mem1830[r4 + 1<32>:word32]
	branch r6 >=u r7 l0040BECC
l0040BECC:
	word32 r9_3887
	word32 r8_3886
	word32 r5_3884
	word32 r7_3885
	r2 = __shgetc(r4, out r3, out r4_1835, out r5_3884, out r6, out r7_3885, out r8_3886, out r9_3887, out r10, out r11, out r12)
	r7 = Mem1830[r4 + 0x68<32>:word32]
l0040BE48:
	Mem1848[r4 + 1<32>:word32] = r6 + 1<32>
	r4_1835 = CONVERT(Mem1848[r6:byte], byte, word32)
l0040BE50:
	branch (r4_1835 | 0x20<32>) != 0x34<32> l0040C0DC
l0040C0DC:
	r5_1775 = 6<32>
	branch r6 != 0<32> l0040C04A
l0040C0E2:
l0040BE58:
	word32 r4_1860
	r6 = Mem1855[r4 + 1<32>:word32]
	branch r6 >=u r7 l0040C026
l0040C026:
	word32 r8_3889
	word32 r9_3890
	word32 r5_3888
	r2 = __shgetc(r4, out r3, out r4_1860, out r5_3888, out r6, out r7, out r8_3889, out r9_3890, out r10, out r11, out r12)
l0040BE5E:
	Mem1872[r4 + 1<32>:word32] = r6 + 1<32>
	r7 = r6 + 1<32>
	r4_1860 = CONVERT(Mem1872[r6:byte], byte, word32)
l0040BE66:
	branch (r4_1860 | 0x20<32>) == 0x39<32> l0040BEA4
l0040BE6E:
	r5_1775 = 7<32>
	r7 = Mem1878[r4 + 0x68<32>:word32]
	branch r6 != 0<32> l0040C04A
l0040C04A:
	branch r7 == 0<32> l0040C052
l0040C04C:
	word32 r6_1884 = Mem1883[r4 + 1<32>:word32]
	Mem1886[r4 + 1<32>:word32] = r6_1884 + 0xFFFFFFFF<32>
	r6 = r6_1884 + 0xFFFFFFFF<32>
l0040C052:
	branch r6 == 0<32> l0040BEA4
l0040C056:
	branch r5_1775 == 3<32> l0040BEA4
l0040C05A:
	branch r7 == 0<32> l0040BEA4
l0040C05E:
	r7 = Mem1893[r4 + 1<32>:word32]
	Mem1896[r4 + 1<32>:word32] = r7 + 0xFFFFFFFF<32>
	r6 = r7 + 0xFFFFFFFF<32>
	branch r5_1775 == 4<32> l0040BEA4
l0040C06A:
	Mem1898[r4 + 1<32>:word32] = r7 + 0xFFFFFFFE<32>
	r6 = r7 + 0xFFFFFFFE<32>
	branch r5_1775 == 5<32> l0040BEA4
l0040C074:
	Mem1900[r4 + 1<32>:word32] = r7 + 0xFFFFFFFD<32>
	r6 = r7 + 0xFFFFFFFD<32>
	branch r5_1775 != 7<32> l0040BEA4
l0040BEA4:
	r3Out = r3
	r4Out = r22_118
	r5Out = r23_119
	r6Out = r6
	r7Out = r7
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
l0040C07E:
	Mem1963[r4 + 1<32>:word32] = r7 + 0xFFFFFFFC<32>
	r3Out = r3
	r4Out = r22_118
	r5Out = r23_119
	r6Out = r7 + 0xFFFFFFFD<32>
	r7Out = r7 + 0xFFFFFFFC<32>
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
l0040BE78:
	branch r7 == 0<32> l0040BE80
l0040BE7A:
	Mem1982[r4 + 1<32>:word32] = Mem1979[r4 + 1<32>:word32] + 0xFFFFFFFF<32>
l0040BE80:
	word32 r4_3891
	word32 r3_1984 = __errno_location(out r4_3891)
	word32 r10_1996
	word32 r11_1997
	word32 r8_3892
	word32 r9_3893
	__shlim(r4, 0<32>, 0<32>, out r8_3892, out r9_3893, out r10_1996, out r11_1997)
	r3Out = r3_1984
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = 0<32>
	r7Out = 0<32>
	r10Out = r10_1996
	r11Out = r11_1997
	r12Out = r12
	return r2
__floatscan_exit:


word32 __intscan(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r8, word32 r9, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strtox
//      __isoc99_vfscanf
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..63] r6:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: hi lo r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__intscan_entry:
	word32 r10
	word32 r11
l0040C670:
	word32 r7_129
	word32 dwLoc4C_1004 = r9
	branch r5 >=u 0x25<32> l0040C736
l0040C67A:
	word32 r30_154 = r5
	branch r5 == 1<32> l0040C736
l0040C680:
	word32 r19_105 = Mem28[r4 + 0x68<32>:word32]
	word32 r16_33 = r4
	r5_109 = r5
l0040C688:
	word32 r4_108
	word32 r5_109
	word32 r7_38 = Mem37[r4 + 4<32>:word32]
	branch r7_38 >=u r19_105 l0040C708
l0040C708:
	word32 r6_2121
	word32 r7_2122
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2121, out r7_2122, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem37[r4 + 0x68<32>:word32]
	branch r4_108 == 0x20<32> l0040C688
l0040C714:
l0040C68E:
	dwLoc4C_1004 = r7_38 + 1<32>
	r4_108 = CONVERT(Mem56[r7_38:byte], byte, word32)
	branch r4_108 == 0x20<32> l0040C688
l0040C69A:
	branch r4_108 <u 0xFFFFFFF2<32> l0040C688
l0040C6A2:
	word32 r23_662
	branch r4_108 == 0x2B<32> l0040C742
l0040C6A6:
	branch r4_108 == 0x2D<32> l0040C742
l0040C742:
	word32 r7_64 = Mem63[r4 + 4<32>:word32]
	r23_662 = -CONVERT(r4_108 == 0x2D<32>, bool, word32)
	branch r7_64 >=u r19_105 l0040C98A
l0040C98A:
	word32 r6_2150
	word32 r7_2151
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2150, out r7_2151, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem63[r4 + 0x68<32>:word32]
l0040C750:
	dwLoc4C_1004 = r7_64 + 1<32>
	r4_108 = CONVERT(Mem87[r7_64:byte], byte, word32)
l0040C6AA:
	r23_662 = 0<32>
l0040C6AC:
	word32 r20_152
	word32 r6_2005
	word32 r18_294
	word32 r17_659
	word32 r7_2012
	word32 r21_329
	word32 r7_153
	branch r5 == 0<32> l0040C716
l0040C716:
	branch r4_108 == 0x30<32> l0040C95E
l0040C71A:
	branch CONVERT(Mem96[r4_108 + 0x0041326D<p32>:byte], byte, word32) <u 0xA<32> l0040C75A
l0040C6B0:
	branch r5 == 0x10<32> l0040C95A
l0040C95A:
	branch r4_108 != 0x30<32> l0040CA88
l0040CA88:
	branch CONVERT(Mem96[0x0041326D<p32> + r4_108:byte], byte, word32) <u 0x10<32> l0040C6CC
l0040CA96:
l0040C95E:
	word32 r7_103 = Mem96[r4 + 4<32>:word32]
	branch r7_103 >=u r19_105 l0040CAA4
l0040CAA4:
	word32 r7_2148
	word32 r6_2147
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2147, out r7_2148, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem96[r4 + 0x68<32>:word32]
l0040C964:
	dwLoc4C_1004 = r7_103 + 1<32>
	r4_108 = CONVERT(Mem123[r7_103:byte], byte, word32)
l0040C96C:
	branch (r4_108 | 0x20<32>) == 0x38<32> l0040CAAE
l0040CAAE:
	word32 r4_133
	r7_129 = Mem128[r4 + 4<32>:word32]
	branch r7_129 >=u r19_105 l0040CB16
l0040CB16:
	word32 r5_2149
	r2 = __shgetc(r4, out r3, out r4_133, out r5_2149, out r6, out r7_129, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem128[r4 + 0x68<32>:word32]
l0040CAB4:
	r6 = r7_129 + 1<32>
	dwLoc4C_1004 = r7_129 + 1<32>
	r4_133 = CONVERT(Mem147[r7_129:byte], byte, word32)
l0040CABC:
	r20_152 = CONVERT(Mem151[0x0041326D<p32> + r4_133:byte], byte, word32)
	branch r20_152 <u 0x10<32> l0040CB00
l0040CB00:
	r7_153 = 3<32>
	r30_154 = 0x10<32>
l0040CACA:
	branch r19_105 == 0<32> l0040CB2C
l0040CB2C:
	branch r6 != 0<32> l0040C73E
l0040CB30:
l0040CACC:
	word32 r7_164 = Mem151[r4 + 4<32>:word32]
	branch r6 == 0<32> l0040CB20
l0040CB20:
l0040CB22:
	word32 r10_172
	word32 r11_173
	word32 r8_176
	word32 r9_177
	__shlim(r4, 0<32>, 0<32>, out r8_176, out r9_177, out r10_172, out r11_173)
	r3Out = r3
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = 0<32>
	r7Out = 0<32>
	r8Out = r8_176
	r9Out = r9_177
	r10Out = r10_172
	r11Out = r11_173
	r12Out = r12
	return r2
l0040CAD4:
	r3Out = r3
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = r7_164 + 0xFFFFFFFF<32>
	r7Out = r7_164 + 0xFFFFFFFE<32>
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
l0040C974:
	branch r5 != 0<32> l0040C6C2
l0040C978:
	r7_153 = 5<32>
	r20_152 = CONVERT(Mem128[0x0041326D<p32> + r4_108:byte], byte, word32)
	r30_154 = 8<32>
l0040C6B4:
	branch CONVERT(Mem96[0x0041326D<p32> + r4_108:byte], byte, word32) >=u r5 l0040C728
l0040C728:
	branch r19_105 == 0<32> l0040C730
l0040C72A:
l0040C730:
	__shlim(r4, 0<32>, 0<32>, out r8, out r9, out r10, out r11)
	r6 = 0<32>
l0040C736:
	word32 r4_2120
	r3 = __errno_location(out r4_2120)
	r7_129 = 0x16<32>
l0040C73E:
	r3Out = r3
	r4Out = 0<32>
	r5Out = 0<32>
	r6Out = r6
	r7Out = r7_129
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
l0040C6C2:
	branch r5 == 0xA<32> l0040C75A
l0040C75A:
	word32 r17_257 = 0<32>
l0040C75C:
	r6_2005 = r4_108 + 0xFFFFFFD0<32>
	r7_2012 = r4_108 + r17_257 * 0xA<32>
	branch r6_2005 >=u 0xA<32> l0040C79E
l0040C772:
	branch r17_257 >u 0x19999998<32> l0040C79E
l0040C776:
	word32 r6_268 = Mem267[r4 + 4<32>:word32]
	r17_257 = r7_2012 + 0xFFFFFFD0<32>
	branch r6_268 >=u r19_105 l0040C824
l0040C824:
	word32 r6_2136
	word32 r7_2137
	word32 r5_2135
	r2 = __shgetc(r4, out r3, out r4_108, out r5_2135, out r6_2136, out r7_2137, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem267[r4 + 0x68<32>:word32]
l0040C780:
	r4_108 = CONVERT(Mem289[r6_268:byte], byte, word32)
	dwLoc4C_1004 = r6_268 + 1<32>
	r6_2005 = r4_108 + 0xFFFFFFD0<32>
	r7_2012 = r4_108 + r17_257 * 0xA<32>
	branch r4_108 <u 0xFFFFFFC6<32> l0040C772
l0040C79E:
	r5_109 = 0x19999998<32>
	r18_294 = 0<32>
l0040C7A0:
	branch r6_2005 >=u 0xA<32> l0040C846
l0040C7A4:
	branch r18_294 >u 0x19999999<32> l0040C838
l0040C7AE:
	branch r18_294 == 0x19999999<32> l0040C82E
l0040C82E:
	branch r17_257 <=u 0x99999999<32> l0040C7B2
l0040C7B2:
	word32 r7_301 = r17_257 << 2<32>
	word32 r20_312 = r6_2005 >> 0x1F<32>
	word32 r5_305 = r7_301 + r17_257
	word32 r30_314 = ~r20_312
	word32 r7_315 = CONVERT(r5_305 <u r7_301, bool, word32) + ((r18_294 << 2<32> | r17_257 >>u 0x1E<32>) + r18_294) << 1<32> | r5_305 >>u 0x1F<32>
	r5_109 = r5_305 << 1<32>
	r8 = ~r6_2005
	branch r30_314 <u r7_315 l0040C838
l0040C7E6:
	branch r7_315 == r30_314 l0040CADC
l0040CADC:
	branch r8 >=u r5_305 << 1<32> l0040C7EA
l0040CAE0:
l0040C838:
	r7_2012 = CONVERT(Mem323[0x0041326D<p32> + r4_108:byte], byte, word32)
	branch r7_2012 <u 0xA<32> l0040C8F8
l0040C8F8:
	r21_329 = Mem323[r4 + 1<32>:word32]
	r30_154 = 0xA<32>
l0040C7EA:
	r17_257 = (r5_305 << 1<32>) + r6_2005
	r5_109 = CONVERT(r17_257 <u r5_305 << 1<32>, bool, word32)
	word32 r4_336 = Mem323[r4 + 4<32>:word32]
	r18_294 = r5_109 + (r7_315 + r20_312)
	branch r4_336 >=u r19_105 l0040C816
l0040C816:
	word32 r6_2138
	r2 = __shgetc(r4, out r3, out r4_108, out r5_109, out r6_2138, out r7_2012, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem323[r4 + 0x68<32>:word32]
	r6_2005 = r4_108 + 0xFFFFFFD0<32>
l0040C7FA:
	r4_108 = CONVERT(Mem364[r4_336:byte], byte, word32)
	r7_2012 = r4_336 + 1<32>
	dwLoc4C_1004 = r4_336 + 1<32>
	r6_2005 = r4_108 + 0xFFFFFFD0<32>
l0040C6CC:
	r20_152 = CONVERT(Mem372[0x0041326D<p32> + r4_108:byte], byte, word32)
	branch (r5 + 0xFFFFFFFF<32> & r5) == 0<32> l0040C9A2
l0040C9A2:
	r7_153 = __ext(r5 * 0x18<32> - r5, 5<32>, 3<32>)
l0040C9B0:
	word32 r17_381 = 0<32>
	r5_109 = CONVERT(Mem383[r7_153 + 0x00413260<p32>:byte], byte, word32)
l0040C9BA:
	word32 r6_388 = r17_381 << r5_109
	branch r20_152 >=u r30_154 l0040C9F6
l0040C9C8:
	branch r17_381 >u 0x7FFFFFF<32> l0040C9F6
l0040C9F6:
	r2 = -r5_109
	word32 r7_394 = 0xFFFFFFFF<32> << r2
	word32 r3_395 = 0xFFFFFFFF<32> >>u r5_109
	branch r5_109 != 0<32> l0040CA0A
l0040CA06_1:
	r7_394 = 0<32>
l0040CA0A:
	r10 = r3_395
	word32 r11_400 = CONVERT(r5_109 < 0x20<32>, bool, word32)
	r3 = r3_395 | r7_394
	branch r11_400 != 0<32> l0040CA18
l0040CA14_1:
	r3 = r3_395
l0040CA18:
	r18_294 = 0<32>
	branch r11_400 != 0<32> l0040CA1E
l0040CA1A_1:
	r10 = 0<32>
l0040CA1E:
	r11 = r11_400
	word32 r4_409 = r17_381 >>u r2
	r7_2012 = r18_294 << r5_109
	branch r5_109 != 0<32> l0040CA2A
l0040CA26_1:
	r4_409 = 0<32>
l0040CA2A:
	r6_2005 = r17_381 << r5_109
	branch r20_152 >=u r30_154 l0040C846
l0040CA32:
	word32 r7_423 = r7_2012 | r4_409
	r21_329 = Mem427[r16_33 + 1<32>:word32]
	branch r10 <u r18_294 l0040C8FE
l0040CA3A:
	branch r11_400 != 0<32> l0040CA42
l0040CA3E_1:
	r7_423 = r6_2005
l0040CA42:
	branch r18_294 == r10 l0040CA82
l0040CA82:
	branch r3 >=u r17_381 l0040CA46
l0040CA86:
l0040CA46:
	branch r11_400 != 0<32> l0040CA4A
l0040CA46_1:
	r6_2005 = 0<32>
l0040CA4A:
	r18_294 = r7_423
	r17_381 = r20_152 | r6_2005
	branch r21_329 >=u r19_105 l0040CA60
l0040CA60:
	word32 r4_491
	word32 r10_2145
	word32 r7_2144
	word32 r11_2146
	word32 r6_2143
	r2 = __shgetc(r16_33, out r3, out r4_491, out r5_109, out r6_2143, out r7_2144, out r8, out r9, out r10_2145, out r11_2146, out r12)
	r20_152 = CONVERT(Mem485[0x0041326D<p32> + r4_491:byte], byte, word32)
	r19_105 = Mem485[r16_33 + 0x68<32>:word32]
	r17_381 = r5_109
	r16_33 = r2
l0040CA54:
	dwLoc4C_1004 = r21_329 + 1<32>
	r20_152 = CONVERT(Mem517[0x0041326D<p32> + CONVERT(Mem517[r21_329:byte], byte, word32):byte], byte, word32)
l0040C9CC:
	word32 r7_522 = Mem521[r4 + 4<32>:word32]
	r17_381 = r20_152 | r6_388
	branch r7_522 >=u r19_105 l0040C9E4
l0040C9E4:
	word32 r4_529
	word32 r10_2133
	word32 r11_2134
	word32 r3_2130
	word32 r6_2131
	word32 r7_2132
	__shgetc(r4, out r3_2130, out r4_529, out r5_109, out r6_2131, out r7_2132, out r8, out r9, out r10_2133, out r11_2134, out r12)
	r19_105 = Mem526[r4 + 0x68<32>:word32]
	r17_381 = r5_109
	r20_152 = CONVERT(Mem526[0x0041326D<p32> + r4_529:byte], byte, word32)
l0040C9D6:
	dwLoc4C_1004 = r7_522 + 1<32>
	r20_152 = CONVERT(Mem545[0x0041326D<p32> + CONVERT(Mem545[r7_522:byte], byte, word32):byte], byte, word32)
l0040C6DC:
	word32 r17_548 = 0<32>
l0040C6DE:
	word32 r6_551 = r17_548 *s r5
	branch r20_152 >=u r5 l0040C8A2
l0040C6EC:
	branch r17_548 >u 0x71C71C6<32> l0040C8A2
l0040C8A2:
	r18_294 = 0<32>
l0040C8A4:
	r6_2005 = r5
	r7_2012 = 0<32>
	branch r20_152 >=u r5 l0040C846
l0040C846:
	branch r19_105 == 0<32> l0040C84E
l0040C8AC:
	word32 r13_2127
	word32 r4_570
	word32 r7_2125
	word32 r11_2126
	__udivdi3(r2, r3, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>, r5, 0<32>, r12, out r3, out r4_570, out r5_109, out r6_2005, out r7_2125, out r8, out r9, out r11_2126, out r13_2127)
	r21_329 = Mem582[r4 + 1<32>:word32]
	word32 r7_585 = r18_294 *s r5
	r10 = 0xFFFFFFFF<32>
	r11 = SLICE(r17_548 *u64 r5, word32, 32)
	r2 = r21_329 + 1<32>
	branch r5_109 <u r18_294 l0040C8FE
l0040C8CA:
	branch r18_294 == r5_109 l0040CA98
l0040CA98:
	branch r4_570 >=u r17_548 l0040C8CE
l0040CA9C:
l0040C8CE:
	word32 r7_592 = r7_585 + r11
	r6_2005 = r17_548 *s r5
	r5_109 = ~r20_152
	branch r7_592 == 0xFFFFFFFF<32> l0040CA9E
l0040CA9E:
	branch r5_109 >=u r6_2005 l0040C8DC
l0040CAA2:
l0040C8FE:
	branch r21_329 >=u r19_105 l0040C91A
l0040C902:
	branch CONVERT(Mem606[0x0041326D<p32> + CONVERT(Mem606[r21_329:byte], byte, word32):byte], byte, word32) >=u r30_154 l0040C92E
l0040C914:
	r21_329 = Mem606[r16_33 + 1<32>:word32]
l0040C916:
	branch r21_329 <u r19_105 l0040C902
l0040C91A:
	word32 r7_2141
	word32 r4_621
	word32 r3_2140
	r2 = __shgetc(r16_33, out r3_2140, out r4_621, out r5_109, out r6_2005, out r7_2141, out r8, out r9, out r10, out r11, out r12)
	branch CONVERT(Mem637[0x0041326D<p32> + r4_621:byte], byte, word32) >=u r30_154 l0040C92E
l0040C92E:
	word32 r4_2142
	r3 = __errno_location(out r4_2142)
	r17_659 = r8
	branch __bit(0x22<32>, 0<32>) l0040C994
l0040C994:
	r7_2012 = Mem658[r16_33 + 0x68<32>:word32]
	branch r7_2012 == 0<32> l0040CB08
l0040CB08:
	branch r23_662 == 0<32> l0040CAE2
l0040CB0C:
	r23_662 = 0xFFFFFFFF<32>
l0040C99C:
l0040C93C:
	r7_2012 = Mem658[r16_33 + 0x68<32>:word32]
	r23_662 = 0<32>
	branch r7_2012 != 0<32> l0040C848
l0040C848:
	word32 r7_706 = Mem704[r16_33 + 4<32>:word32]
	r7_2012 = r7_706 + 0xFFFFFFFF<32>
	dwLoc4C_1004 = r7_706 + 0xFFFFFFFF<32>
l0040C84E:
	r17_659 = dwLoc4C_1004
	branch r18_294 >=u r7_2012 l0040C86E
l0040C86E:
	branch r18_294 != r7_2012 l0040C876
l0040C870:
	r17_659 = r8
	branch r8 <u r7_2012 l0040C854
l0040C876:
	branch !__bit(r7_2012, 0<32>) l0040C884
l0040C87C:
	branch r23_662 == 0<32> l0040CAE2
l0040CAE2:
	word32 r4_2139
	r3Out = __errno_location(out r4_2139)
	word32 r7_754 = r6_2005 + 0xFFFFFFFF<32>
	r4Out = r7_754
	r5Out = CONVERT(r7_754 <u r6_2005, bool, word32) + (r6_2005 + 0xFFFFFFFF<32>)
	r6Out = 0x22<32>
	r7Out = r7_754
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
l0040C880:
	r23_662 = 0xFFFFFFFF<32>
l0040C884:
	r17_659 = dwLoc4C_1004
	branch r7_2012 <u r18_294 l0040C894
l0040C88A:
	branch r7_2012 != r18_294 l0040C854
l0040C88E:
	r17_659 = r8
	branch r7_2012 >=u r8 l0040C854
l0040C894:
	word32 r4_783
	r3Out = __errno_location(out r4_783)
	r4Out = r4_783
	r5Out = r5_109
	r6Out = r6_2005
	r7Out = 0x22<32>
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
l0040C94A:
l0040C854:
	word32 r17_803 = r23_662 ^ r17_659
	r3Out = r3
	word32 r4_806 = r17_803 - r23_662
	r4Out = r4_806
	r5Out = (r23_662 ^ r18_294) - r23_662 - CONVERT(r17_803 <u r4_806, bool, word32)
	r6Out = r6_2005
	r7Out = r7_2012
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
__intscan_exit:
l0040C926:
	r19_105 = Mem637[r16_33 + 0x68<32>:word32]
	r21_329 = Mem637[r16_33 + 1<32>:word32]
l0040C8DC:
	r17_548 = r6_2005 + r20_152
	r18_294 = CONVERT(r17_548 <u r6_2005, bool, word32) + r7_592
	branch r21_329 >=u r19_105 l0040C94C
l0040C94C:
	word32 r7_2129
	word32 r6_2128
	word32 r4_836
	r2 = __shgetc(r4, out r3, out r4_836, out r5_109, out r6_2128, out r7_2129, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem582[r4 + 0x68<32>:word32]
	r20_152 = CONVERT(Mem582[0x0041326D<p32> + r4_836:byte], byte, word32)
l0040C8EA:
	Mem853[r4 + 4<32>:byte] = SLICE(r21_329, byte, 0) + 1<8>
	r20_152 = CONVERT(Mem853[0x0041326D<p32> + CONVERT(Mem853[r21_329:byte], byte, word32):byte], byte, word32)
l0040C6F0:
	word32 r7_858 = Mem857[r4 + 4<32>:word32]
	r17_548 = r20_152 + r6_551
	r5_109 = r7_858 + 1<32>
	branch r7_858 >=u r19_105 l0040C808
l0040C808:
	word32 r4_864
	word32 r6_2123
	word32 r7_2124
	r2 = __shgetc(r4, out r3, out r4_864, out r5_109, out r6_2123, out r7_2124, out r8, out r9, out r10, out r11, out r12)
	r19_105 = Mem857[r4 + 0x68<32>:word32]
	r20_152 = CONVERT(Mem857[0x0041326D<p32> + r4_864:byte], byte, word32)
l0040C6FE:
	dwLoc4C_1004 = r7_858 + 1<32>
	r20_152 = CONVERT(Mem879[0x0041326D<p32> + CONVERT(Mem879[r7_858:byte], byte, word32):byte], byte, word32)


word32 __shlim(word32 r4, word32 r6, word32 r7, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strtold_l
//      strtox
//      __floatscan
//      __intscan
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r10 r11 r5 r8 r9
// Trashed: r10 r11 r25 r5 r8 r9
// Preserved: sp
__shlim_entry:
l0040CB40:
	word32 r10_6 = Mem0[r4 + 1<32>:word32]
	word32 r5_10 = Mem0[r4 + 8<32>:word32]
	Mem11[r4 + 112<i32>:word32] = r6
	Mem12[r4 + 116<i32>:word32] = r7
	word32 r8_13 = r5_10 - r10_6
	Mem15[r4 + 120<i32>:word32] = r8_13
	Mem16[r4 + 124<i32>:word32] = r8_13 >> 0x1F<32>
	branch (r6 | r7) == 0<32> l0040CB64
l0040CB5C:
	branch r7 < r8_13 >> 0x1F<32> l0040CB6E
l0040CB60:
	branch r8_13 >> 0x1F<32> == r7 l0040CB6A
l0040CB6A:
	branch r6 >=u r8_13 l0040CB64
l0040CB6E:
	word32 r5_19 = r10_6 + r6
	Mem21[r4 + 0x68<32>:byte] = SLICE(r5_19, byte, 0)
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	return r5_19
l0040CB64:
	Mem24[r4 + 0x68<32>:byte] = SLICE(r5_10, byte, 0)
	r8Out = <invalid>
	r9Out = <invalid>
	r10Out = <invalid>
	r11Out = <invalid>
	return r5_10
__shlim_exit:


word32 __shgetc(word32 r4, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scanexp
//      __floatscan
//      __intscan
//      __isoc99_vfscanf
//      fn0040DC0C
// MayUse:  r4:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__shgetc_entry:
	word32 r10
	word32 r11
	word32 r12
	word32 r2
	word32 r3
	word32 r8
	word32 r9
l0040CB78:
	word32 r5_14
	word32 r6_10 = Mem7[r4 + 112<i32>:word32]
	word32 r7_11 = Mem7[r4 + 116<i32>:word32]
	branch (r6_10 | r7_11) == 0<32> l0040CB8E
l0040CB86:
	r5_14 = Mem7[r4 + 0x7C<32>:word32]
	branch r5_14 >= r7_11 l0040CC1C
l0040CC1C:
	branch r5_14 != r7_11 l0040CC26
l0040CC1E:
	r7_11 = Mem7[r4 + 0x78<32>:word32]
	branch r7_11 <u r6_10 l0040CB8E
l0040CB8E:
	word32 r4_19 = __uflow(r4, out r5_14, out r6_10, out r7_11)
	branch r4_19 < 0<32> l0040CC26
l0040CC26:
	Mem25[r4 + 0x68<32>:byte] = 0<8>
	r3Out = r3
	r4Out = 0xFFFFFFFF<32>
	r5Out = r5_14
	r6Out = r6_10
	r7Out = r7_11
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
l0040CB96:
	word32 r6_171
	word32 r6_32 = Mem7[r4 + 0x70<32>:word32]
	word32 r5_164 = Mem7[r4 + 0x74<32>:word32]
	word32 r8_34 = Mem7[r4 + 1<32>:word32]
	word32 r9_185 = r6_32 | r5_164
	word32 r7_36 = Mem7[r4 + 8<32>:word32]
	branch r9_185 != 0<32> l0040CBE4
l0040CBE4:
	r9_185 = Mem7[r4 + 0x78<32>:word32]
	r11 = r6_32 - r9_185
	r2 = r7_36 - r8_34
	r12 = Mem7[r4 + 0x7C<32>:word32]
	r3 = CONVERT(r6_32 <u r11, bool, word32)
	r10 = r2 >> 0x1F<32>
	r5_164 = r5_164 - r12 - r3
	branch r2 >> 0x1F<32> < r5_164 l0040CBAA
l0040CC08:
	branch r5_164 == r2 >> 0x1F<32> l0040CC16
l0040CC16:
	branch r2 <u r11 l0040CBAA
l0040CC1A:
l0040CC0C:
	r6_171 = r6_32 + 0xFFFFFFFF<32> - r9_185 + r8_34
l0040CBAA:
	r6_171 = r7_36
l0040CBAC:
	Mem57[r4 + 0x68<32>:byte] = SLICE(r6_171, byte, 0)
	branch r7_36 == 0<32> l0040CBD8
l0040CBB2:
	word32 r6_60 = Mem57[r4 + 0x78<32>:word32]
	word32 r7_63 = r7_36 - r8_34
	r9_185 = r6_60 + (r7_63 + 1<32>)
	r5_164 = Mem57[r4 + 0x7C<32>:word32]
	Mem71[r4 + 0x78<32>:byte] = SLICE(r9_185, byte, 0)
	r6_171 = CONVERT(r9_185 <u r6_60, bool, word32)
	Mem72[r4 + 0x7C<32>:byte] = SLICE(r6_171 + (r5_164 + (r7_63 + 1<32> >> 0x1F<32>)), byte, 0)
l0040CBD8:
	word32 r7_75 = CONVERT(Mem74[r8_34 - 1<32>:byte], byte, word32)
	branch r4_19 == r7_75 l0040CBE2
l0040CBDE:
	Mem80[r8_34 - 1<32>:int8] = SLICE(r4_19, int8, 0)
l0040CBE2:
	r3Out = r3
	r4Out = r4_19
	r5Out = r5_164
	r6Out = r6_171
	r7Out = r7_75
	r8Out = r8_34
	r9Out = r9_185
	r10Out = r10
	r11Out = r11
	r12Out = r12
	return r2
__shgetc_exit:


word32 __syscall_ret(word32 r4, ptr32 & r4Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sysinfo
//      free
//      getrlimit64
//      ioctl
//      madvise
//      mmap64
//      mremap
//      bind
//      connect
//      getsockname
//      getsockopt
//      recvfrom
//      recvmsg
//      sendmsg
//      sendto
//      setsockopt
//      socket
//      sched_yield
//      poll
//      raise
//      setitimer
//      __libc_sigaction
//      __fopen_rb_ca
//      __stdio_close
//      __stdio_read
//      __stdio_seek
//      __clock_gettime
//      close
//      write
//      __stdio_write
//      open64
//      lseek64
// MayUse:  r4:[0..31]
// LiveOut: r3 r4 r7
// Trashed: r25 r3 r4 r7
// Preserved: r16 ra sp
__syscall_ret_entry:
	word32 r3
l0040CC30:
	branch r4 >u 0xFFFF0000<32> l0040CC3A
l0040CC3A:
	word32 r4_34
	word32 r3_13 = __errno_location(out r4_34)
	r4Out = 0xFFFFFFFF<32>
	r7Out = -r4
	return r3_13
l0040CC38:
	r4Out = r4
	r7Out = 0xFFFF0000<32>
	return r3
__syscall_ret_exit:


word32 __vdsosym(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      cgt_init
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r10 r11 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
__vdsosym_entry:
l0040CC50:
	word32 r16_28
	word32 r17_26 = Mem23[0x00454440<p32>:word32]
	word32 r7_27 = Mem23[r17_26:word32]
	branch r7_27 == 0x21<32> l0040CDA2
l0040CDA2:
	r16_28 = 4<32>
l0040CC5E:
	word32 r16_29 = 3<32>
	branch r7_27 != 0<32> l0040CC6A
l0040CC6A:
	word32 r6_31 = r16_29 + 2<32>
	word32 r7_34 = Mem23[r17_26 + r6_31 * 4<32>:word32]
	branch r7_34 != 0x21<32> l0040CC64
l0040CC64:
	r16_29 = r6_31
	branch r7_34 == 0<32> l0040CD20
l0040CC74:
	r16_28 = r16_29 + 0<32> << 2<32>
l0040CC78:
	word32 r11_41 = Mem23[r17_26 + r16_28:word32]
	branch r11_41 == 0<32> l0040CD20
l0040CC80:
	word32 r9_43 = CONVERT(Mem23[r11_41 + 0x2C<32>:uint16], uint16, word32)
	word32 r6_44 = Mem23[r11_41 + 0x1C<32>:word32] + r11_41
	branch r9_43 == 0<32> l0040CD20
l0040CC8E:
	word32 r10_45 = CONVERT(Mem23[r11_41 + 0x2A<32>:uint16], uint16, word32)
	word32 r17_46 = 0xFFFFFFFF<32>
	word32 r7_47 = 0<32>
	word32 r16_48 = 0<32>
l0040CCA6:
	word32 r8_51 = Mem23[r6_44:word32]
	branch r8_51 != 1<32> l0040CC9A
l0040CC9A:
	branch r8_51 == 2<32> l0040CD24
l0040CD24:
	r7_47 = Mem23[r6_44 + 4<32>:word32] + r11_41
l0040CC9E:
	r16_48 = r16_48 + 1<32>
	r6_44 = r6_44 + r10_45
	branch r16_48 == r9_43 l0040CCBC
l0040CCAC:
	r16_48 = r16_48 + 1<32>
	r6_44 = r6_44 + r10_45
	r17_46 = Mem23[r6_44 + 4<i32>:word32] + r11_41 - Mem23[r6_44 + 8<i32>:word32]
	branch r16_48 != r9_43 l0040CCA6
l0040CCBC:
	branch r7_47 == 0<32> l0040CD20
l0040CCBE:
	branch r17_46 == 0xFFFFFFFF<32> l0040CD20
l0040CCC4:
	word32 r16_101 = Mem23[r7_47:word32]
	branch r16_101 == 0<32> l0040CD20
l0040CCC8:
	word32 r7_103 = r7_47 + 4<32>
	word32 r22_105 = 0<32>
	word32 r30_127 = 0<32>
	word32 r23_117 = 0<32>
	word32 r18_113 = 0<32>
	word32 r21_109 = 0<32>
l0040CCEA:
	word32 r6_91 = r17_46 + Mem23[r7_103:word32]
	branch r16_101 == 6<32> l0040CD2A
l0040CD2A:
	r18_113 = r6_91
l0040CCF8:
	branch r16_101 <u 7<32> l0040CCD6
l0040CCD6:
	branch r16_101 == 4<32> l0040CD2E
l0040CD2E:
	r23_117 = r6_91
l0040CCDA:
	branch (r16_101 ^ 5<32>) != 0<32> l0040CCE2
l0040CCDE_1:
	r21_109 = r6_91
l0040CCFC:
	branch r16_101 == 0x6FFFFFF0<32> l0040CD32
l0040CD32:
	r30_127 = r6_91
l0040CCE2:
	r7_103 = r7_103 + 8<32>
	r16_101 = Mem23[r7_103 - 4<32>:word32]
	branch r16_101 == 0<32> l0040CD16
l0040CD00:
	r7_103 = r7_103 + 8<32>
	branch (r16_101 ^ 0x6FFFFFFC<32>) != 0<32> l0040CD10
l0040CD0C_1:
	r22_105 = r6_91
l0040CD10:
	r16_101 = Mem23[r7_103 - 4<32>:word32]
	branch r16_101 != 0<32> l0040CCEA
l0040CD16:
	branch r21_109 == 0<32> l0040CD20
l0040CD1A:
	branch r18_113 == 0<32> l0040CD20
l0040CD1C:
	branch r23_117 != 0<32> l0040CD36
l0040CD36:
	word32 r8_122 = Mem23[r23_117 + 1<32>:word32]
	branch r22_105 != 0<32> l0040CD3C
l0040CD38_1:
	r30_127 = 0<32>
l0040CD3C:
	branch r8_122 == 0<32> l0040CD20
l0040CD40:
l0040CD4C:
	word32 r6_155 = CONVERT(Mem23[r18_113 + 0xC<32>:byte], byte, word32)
	branch __bit(0x27<32> >> (r6_155 & 0xF<32>), 0<32>) l0040CD44
l0040CD5C:
	branch __bit(0x406<32> >> (r6_155 >>u 4<32>), 0<32>) l0040CD44
l0040CD6A:
	branch CONVERT(Mem23[r18_113 + 0xE<32>:uint16], uint16, word32) == 0<32> l0040CD44
l0040CD70:
	branch strcmp(r5, Mem23[r18_113:word32] + r21_109) != 0<32> l0040CD9E
l0040CD7A:
	branch r30_127 == 0<32> l0040CDB4
l0040CD7E:
	word32 r7_177 = r22_105
	word32 r5_178 = __ext(CONVERT(Mem23[r30_127 + r16_101 * 2<32>:word16], word16, word32), 0<32>, 0xF<32>)
l0040CD8C:
	branch !__bit(CONVERT(Mem23[r7_177 + 2<32>:uint16], uint16, word32), 0<32>) l0040CD9A
l0040CD92:
	branch r5_178 == __ext(CONVERT(Mem23[r7_177 + 4<32>:uint16], uint16, word32), 0<32>, 0xF<32>) l0040CDA6
l0040CDA6:
	branch strcmp(r4, Mem23[r7_177 + Mem23[r7_177 + 0xC<32>:word32]:word32] + r21_109) != 0<32> l0040CD9E
l0040CDB4:
	return r17_46 + Mem23[r18_113 + 4<32>:word32]
l0040CD9A:
	word32 r6_220 = Mem23[r7_177 + 0x10<32>:word32]
	branch r6_220 != 0<32> l0040CD8A
l0040CD8A:
	r7_177 = r7_177 + r6_220
l0040CD9E:
	r8_122 = Mem23[r23_117 + 1<32>:word32]
l0040CD44:
	r16_101 = r16_101 + 1<32>
	r18_113 = r18_113 + 0x10<32>
	branch r16_101 >=u r8_122 l0040CD20
l0040CC62:
l0040CD20:
	return 0<32>
__vdsosym_exit:


word32 calloc(word32 r0, word32 r4, word32 r5, word32 r7, word32 r11, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getaddrinfo
//      netlink_msg_to_ifaddr
// MayUse:  r0:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r11 r2 r4 r6 r8
// Trashed: hi lo r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
calloc_entry:
	word32 r2
	word32 r8
l0040CDC0:
	branch r5 == 0<32> l0040CDD0
l0040CDC2:
	branch r5 != r0 l0040CDCC
l0040CDC8_1:
	__trap_code(7<32>)
l0040CDCC:
	branch r7 <u r4 l0040CDD6
l0040CDD6:
	word32 r4_84
	__errno_location(out r4_84)
	r4Out = 0<32>
	r6Out = 0xFFFFFFFF<32>
	r8Out = r8
	r11Out = r11
	return r2
l0040CDD0:
	word32 r4_29 = r4 *s r5
l0040CDD2_thunk___malloc0:
	word32 r11_36
	word32 r4_40
	word32 r6_42
	word32 r8_44
	word32 r2_37 = __malloc0(r0, r4_29, r11, out r4_40, out r6_42, out r8_44, out r11_36)
	r4Out = r4_40
	r6Out = r6_42
	r8Out = r8_44
	r11Out = r11_36
	return r2_37
calloc_exit:


word32 __expand_heap(word32 r4, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __simple_malloc
//      malloc
// MayUse:  r4:[0..31]
// LiveOut: r10 r11 r2 r3 r4 r6 r7 r8 r9
// Trashed: r10 r11 r2 r22 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__expand_heap_entry:
	ptr32 fp
	word32 r10
	word32 r11
	word32 r2
	word32 r3
	word32 r8
	word32 r9
l0040CDF0:
	word32 r6_119 = Mem11[0x00454454<p32>:word32]
	word32 r16_17 = Mem11[r4:word32]
	branch 0x7FFFFFFF<32> - r6_119 <u r16_17 l0040CEDC
l0040CEDC:
	word32 r4_261
	r3Out = __errno_location(out r4_261)
	r4Out = 0<32>
	r6Out = r6_119
	r7Out = 0xC<32>
	r8Out = r8
	r9Out = r9
	r10Out = r10
	r11Out = r11
	return r2
l0040CE06:
	word32 r4_34 = Mem11[0x00432EF4<p32>:word32]
	word32 r16_135 = r16_17 + (-r16_17 & r6_119 + 0xFFFFFFFF<32>)
	branch r4_34 == 0<32> l0040CEB4
l0040CEB4:
	word32 r4_40
	word32 r9_266
	word32 r6_263
	word32 r7_264
	word32 r8_265
	word32 r5_262
	__syscall(out r4_40, out r5_262, out r6_263, out r7_264, out r8_265, out r9_266)
	r6_119 = Mem11[0x00454454<p32>:word32]
	r4_34 = (-r4_40 & r6_119 + 0xFFFFFFFF<32>) + r4_40
	Mem51[0x00432EF4<p32>:word32] = r4_34
l0040CE1E:
	branch r16_135 >=u ~r4_34 l0040CE42
l0040CE26:
	word32 r8_60
	word32 r7_57 = Mem56[0x00454440<p32>:word32]
	word32 r5_59 = r16_135 + r4_34
	branch r7_57 <=u 0x8000000<32> l0040CED4
l0040CED4:
	r8_60 = 0<32>
l0040CE32:
	r8_60 = r7_57 + 0xFF800000<32>
l0040CE3A:
	branch r8_60 >=u r5_59 l0040CE82
l0040CE3E:
	branch r4_34 >=u r7_57 l0040CE82
l0040CE82:
	word32 r8_72
	branch fp <=u 0x8000014<32> l0040CED8
l0040CED8:
	r8_72 = 0<32>
l0040CE8C:
	r8_72 = fp + 0xFF7FFFEC<32>
l0040CE94:
	branch r8_72 >=u r5_59 l0040CE9C
l0040CE98:
	branch r4_34 <u fp - 0x14<32> l0040CE42
l0040CE9C:
	word32 r4_84
	word32 r8_88
	word32 r9_89
	word32 r6_268
	word32 r7_269
	word32 r5_267
	word32 r2_82 = __syscall(out r4_84, out r5_267, out r6_268, out r7_269, out r8_88, out r9_89)
	word32 r7_94 = Mem56[0x00432EF4<p32>:word32]
	word32 r6_99 = r16_135 + r7_94
	branch r4_84 == r6_99 l0040CEE8
l0040CEE8:
	Mem100[0x00432EF4<p32>:word32] = r4_84
	Mem106[r4:word32] = r16_135
	r3Out = r3
	r4Out = r7_94
	r6Out = r6_99
	r7Out = r7_94
	r8Out = r8_88
	r9Out = r9_89
	r10Out = r10
	r11Out = r11
	return r2_82
l0040CEB0:
	r6_119 = Mem56[0x00454454<p32>:word32]
l0040CE42:
	word32 r5_130 = r6_119 << (Mem56[0x00432EF0<p32>:word32] >>u 1<32>)
	branch CONVERT(r5_130 <u r16_135, bool, word32) != 0<32> l0040CE62
l0040CE5E_1:
	r16_135 = r5_130
l0040CE62:
	word32 r10_143
	word32 r3_146
	word32 r4_147
	word32 r6_149
	word32 r8_151
	word32 r9_152
	word32 r2_144 = mmap64(r16_135, 0x802<32>, 0<32>, 0<32>, out r3_146, out r4_147, out r6_149, out r8_151, out r9_152, out r10_143)
	branch r4_147 == 0xFFFFFFFF<32> l0040CEF4
l0040CEF4:
	r3Out = r3_146
	r4Out = 0<32>
	r6Out = r6_149
	r7Out = 0xFFFFFFFF<32>
	r8Out = r8_151
	r9Out = r9_152
	r10Out = r10_143
	r11Out = 0<32>
	return r2_144
l0040CE70:
	word32 r7_164 = Mem56[0x00432EF0<p32>:word32]
	Mem167[r4:word32] = r16_135
	Mem169[0x00432EF0<p32>:word32] = r7_164 + 1<32>
	r3Out = r3_146
	r4Out = r4_147
	r6Out = r6_149
	r7Out = r7_164 + 1<32>
	r8Out = r8_151
	r9Out = r9_152
	r10Out = r10_143
	r11Out = 0<32>
	return r2_144
__expand_heap_exit:


word32 copysignl(word32 r5, word32 r7, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r5:[0..31] r7:[0..31]
// LiveOut: r5 r8
// Trashed: r25 r5 r6 r7 r8
// Preserved: sp
copysignl_entry:
l0040CF00:
l0040CF00_thunk_copysign:
	word32 r8_10
	word32 r5_7 = copysign(r5, r7, out r8_10)
	r8Out = r8_10
	return r5_7
copysignl_exit:


word32 fabs(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r5:[0..31]
// LiveOut: r5
// Trashed: r25 r5 r6 r7
// Preserved: r4 sp
fabs_entry:
l0040CF10:
	return __ext(r5, 0<32>, 0x1F<32>)
fabs_exit:


word32 fmodl(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4 r5
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fmodl_entry:
l0040CF20:
l0040CF20_thunk_fmod:
	word32 r5_21
	word32 r4_20 = fmod(r4, r5, r6, r7, out r5_21)
	r5Out = r5_21
	return r4_20
fmodl_exit:


void frexpl(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r18 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
frexpl_entry:
l0040CF30:
l0040CF30_thunk_frexp:
	frexp(r4, r5, r6)
	return
frexpl_exit:


word32 scalbn(word32 r4, word32 r5, word32 r6, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r10 r4 r5 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
scalbn_entry:
l0040CF40:
	word32 r16_113
	word32 r8_111 = r4
	word32 r9_112 = r5
	branch r6 <= 0x3FF<32> l0040CF90
l0040CF90:
	r16_113 = r6
	branch r6 >= 0xFFFFFC02<32> l0040CF7E
l0040CF9A:
	word32 r5_39
	word32 r10_176
	word32 r8_175
	word32 r4_38 = fn0040CFCC(r4, r5, Mem13[0x41202C0<32>:word32], Mem13[0x41202C4<32>:word32], out r5_39, out r8_175, out r10_176)
	r16_113 = r6 + 0x3C9<32>
	r8_111 = r4_38
	r9_112 = r5_39
	branch r6 >= 0x7C7<32> l0040CF7E
l0040CFB2:
	r16_113 = r6 + 0x792<32>
	word32 r5_60
	word32 r8_177
	word32 r10_178
	r8_111 = fn0040CFCC(r4_38, r5_39, Mem13[0x41202C0<32>:word32], Mem13[0x41202C4<32>:word32], out r5_60, out r8_177, out r10_178)
	r9_112 = r5_60
	branch CONVERT(r6 < 0xB90<32>, bool, word32) == 0<32> l0040CFCA
l0040CFC6_1:
	r16_113 = 0xFFFFFC02<32>
l0040CFCA:
l0040CF4E:
	word32 r5_84
	word32 r10_172
	word32 r8_171
	word32 r4_83 = fn0040CFCC(r4, r5, Mem13[0x41202B8<32>:word32], Mem13[0x41202BC<32>:word32], out r5_84, out r8_171, out r10_172)
	r16_113 = r6 + 0xFFFFFC01<32>
	r8_111 = r4_83
	r9_112 = r5_84
	branch r6 <= 0xFFFFF802<32> l0040CF7E
l0040CF66:
	r16_113 = r6 + 0xFFFFF802<32>
	word32 r5_105
	word32 r10_174
	word32 r8_173
	r8_111 = fn0040CFCC(r4_83, r5_84, Mem13[0x41202B8<32>:word32], Mem13[0x41202BC<32>:word32], out r5_105, out r8_173, out r10_174)
	r9_112 = r5_105
	branch CONVERT(r6 < 0xFFFFF402<32>, bool, word32) != 0<32> l0040CF7E
l0040CF7A_1:
	r16_113 = 0x3FF<32>
l0040CF7E:
	word32 r10_127
	word32 r5_138
	word32 r8_141
	word32 r4_137 = fn0040CFCC(r8_111, r9_112, 0<32>, r16_113 + 0x3FF<32> << 0x14<32>, out r5_138, out r8_141, out r10_127)
	r5Out = r5_138
	r8Out = r8_141
	r10Out = r10_127
	return r4_137
scalbn_exit:


word32 fn0040CFCC(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      scalbn
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r10 r4 r5 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040CFCC_entry:
l0040CFCC:
l0040CFCC_thunk___muldf3:
	word32 r10_8
	word32 r4_18
	word32 r5_19
	word32 r8_22
	word32 r3_27
	word32 r6_28
	word32 r7_29
	word32 r9_30
	word32 r11_31
	word32 r12_32
	word32 r14_33
	__muldf3(r4, r5, r6, r7, out r3_27, out r4_18, out r5_19, out r6_28, out r7_29, out r8_22, out r9_30, out r10_8, out r11_31, out r12_32, out r14_33)
	r5Out = r5_19
	r8Out = r8_22
	r10Out = r10_8
	return r4_18
fn0040CFCC_exit:


word32 scalbnl(word32 r4, word32 r5, word32 r6, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
scalbnl_entry:
l0040CFD0:
l0040CFD0_thunk_scalbn:
	word32 r10_7
	word32 r5_18
	word32 r8_31
	word32 r4_17 = scalbn(r4, r5, r6, out r5_18, out r8_31, out r10_7)
	r3Out = r3_16
	r4Out = r4_17
	r5Out = r5_18
	r6Out = r6_19
	r7Out = r7_20
	r10Out = r10_7
	r11Out = r11_8
	r12Out = r12_9
	return r2_13
scalbnl_exit:


word32 mbstowcs(word32 r4, word32 r5, word32 r6, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      is_valid_hostname
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r18 r4 r5 r6 r8
// Trashed: r18 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
mbstowcs_entry:
	struct <anonymous> tLoc14
l0040CFE0:
	Mem9[&tLoc14:word32] = r5
	word32 r18_13
	word32 r5_17
	word32 r6_18
	word32 r8_20
	word32 r4_16 = mbsrtowcs(r4, &tLoc14, r6, 0<32>, out r5_17, out r6_18, out r8_20, out r18_13)
	r5Out = r5_17
	r6Out = r6_18
	r8Out = r8_20
	r18Out = r18_13
	return r4_16
mbstowcs_exit:


void wctomb(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: sp
wctomb_entry:
l0040CFF0:
	branch r4 == 0<32> l0040CFF8
l0040CFF8:
	return
l0040CFF2:
l0040CFF4_thunk_wcrtomb:
	wcrtomb(r4, r5)
	return
wctomb_exit:


word32 dn_expand(word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      dns_parse_callback
//      dns_parse_callback
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r11 r12 r2 r4 r8
// Trashed: r10 r11 r12 r13 r14 r2 r25 r3 r4 r8 r9
// Preserved: sp
dn_expand_entry:
	word32 r11
	word32 r12
	word32 r2
l0040D000:
	word32 r9_18
	branch r5 != r6 l0040D00A
l0040D00A:
	branch r8 <= 0<32> l0040D002
l0040D00E:
	branch CONVERT(r8 < 0xFF<32>, bool, word32) != 0<32> l0040D01A
l0040D016_1:
	r8 = 0xFE<32>
l0040D01A:
	word32 r13_11 = r6
	r8 = r8 + r7
	r11 = r7
	word32 r14_17 = 0<32>
	r9_18 = 0xFFFFFFFF<32>
l0040D026:
	r2 = r5 - r4
	branch r14_17 >= r2 l0040D002
l0040D02E:
	word32 r10_25 = CONVERT(Mem24[r13_11:byte], byte, word32)
	branch (r10_25 & 0xC0<32>) == 0<32> l0040D06E
l0040D06E:
	branch r10_25 == 0<32> l0040D0BC
l0040D0BC:
	Mem28[r11:byte] = 0<8>
	branch r9_18 >= 0<32> l0040D006
l0040D0C4:
	r9_18 = r13_11 + 1<32> - r6
l0040D072:
	r2 = r7
	branch r11 == r7 l0040D084
l0040D078:
	Mem37[r11:byte] = 0x2E<8>
	r2 = r11 + 1<32>
l0040D084:
	word32 r3_39 = r13_11 + 1<32>
	word32 r10_41 = CONVERT(Mem40[r13_11:byte], byte, word32)
	r11 = r5 - r3_39
	branch r10_41 >= r11 l0040D002
l0040D094:
	r11 = r8 - r2
	branch r10_41 >= r11 l0040D002
l0040D09C:
	word32 r11_48 = 0<32>
l0040D0AE:
	branch r10_41 != r11_48 l0040D0A0
l0040D0A0:
	r12 = CONVERT(Mem53[r13_11 + r11_48 + 1<32>:byte], byte, word32)
	Mem56[r11_48 + r2:byte] = SLICE(r12, byte, 0)
	r11_48 = r11_48 + 1<32>
l0040D0B2:
	r11 = r2 + r10_41
	r13_11 = r3_39 + r10_41
l0040D03A:
	branch r5 == r13_11 + 1<32> l0040D002
l0040D042:
	word32 r10_66 = r10_25 << 8<32> & 0x3F00<32> | CONVERT(Mem24[r13_11 + 1<32>:byte], byte, word32)
	branch r9_18 >= 0<32> l0040D062
l0040D05A:
	r9_18 = r13_11 + 2<32> - r6
l0040D062:
	branch r10_66 >= r2 l0040D002
l0040D066:
	r13_11 = r4 + r10_66
l0040D06A:
	r14_17 = r14_17 + 2<32>
l0040D002:
	r9_18 = 0xFFFFFFFF<32>
l0040D006:
	r4Out = r9_18
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
dn_expand_exit:


word32 __dns_parse(word32 r4, word32 r5, word32 r7, word32 r11, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getnameinfo
//      name_from_dns
// MayUse:  r11:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r11 r12 r2 r5 r6 r7 r8
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 ra sp
__dns_parse_entry:
	word32 r6
	word32 r12
	word32 r2
	word32 r8
l0040D0D0:
	word32 r18_134 = r4
	branch r5 >= 0xC<32> l0040D0DE
l0040D0DE:
	word32 r7_29 = CONVERT(Mem19[r4 + 3<32>:byte], byte, word32)
	r7 = r7_29 & 0xF<32>
	branch (r7_29 & 0xF<32>) == 0<32> l0040D0E8
l0040D0E8:
	r6 = (CONVERT(Mem19[r4 + 4<32>:byte], byte, word32) << 8<32>) + CONVERT(Mem19[r4 + 5<32>:byte], byte, word32)
	word32 r19_39 = (CONVERT(Mem19[r4 + 6<32>:byte], byte, word32) << 8<32>) + CONVERT(Mem19[r4 + 7<32>:byte], byte, word32)
	r7 = r4 + 0xC<32>
	r5 = r6 + r19_39
	branch r5 >= 1<32> l0040D0DA
l0040D108:
	r6 = r6 + 0xFFFFFFFF<32>
	r5 = 0xFFFFFFFF<32>
	branch r6 != 0xFFFFFFFF<32> l0040D11A
l0040D11A:
	r5 = CONVERT(Mem19[r7:byte], byte, word32)
	branch r7 - r4 >= r5 l0040D12A
l0040D122:
	branch r5 <u 0xFFFFFFC0<32> l0040D118
l0040D118:
	r7 = r7 + 1<32>
l0040D12A:
	branch r5 >u 0xC1<32> l0040D0DA
l0040D132:
	branch r5 != 0xC1<32> l0040D13E
l0040D134:
	branch CONVERT(Mem19[r7 + 1<32>:byte], byte, word32) == 0xFF<32> l0040D0DA
l0040D13E:
	branch r4 + (r5 + 0xFFFFFFFA<32>) <u r7 l0040D0DA
l0040D148:
	word32 r4_65 = 6<32>
	branch r5 != 0<32> l0040D150
l0040D14C_1:
	r4_65 = 5<32>
l0040D150:
	r7 = r7 + r4_65
l0040D10E:
	r19_39 = r19_39 + 0xFFFFFFFF<32>
	r6 = 0xFFFFFFFF<32>
	branch r19_39 != 0xFFFFFFFF<32> l0040D156
l0040D156:
	word32 r16_79 = CONVERT(Mem19[r7:byte], byte, word32)
	branch r7 - r18_134 >= r5 l0040D166
l0040D15E:
	branch r16_79 <u 0xFFFFFFC0<32> l0040D154
l0040D154:
	r7 = r7 + 1<32>
l0040D166:
	r6 = 0xC1<32>
	branch r16_79 >u 0xC1<32> l0040D0DA
l0040D16E:
	branch r16_79 != 0xC1<32> l0040D17A
l0040D170:
	r5 = CONVERT(Mem19[r7 + 1<32>:byte], byte, word32)
	r6 = 0xFF<32>
	branch r5 == 0xFF<32> l0040D0DA
l0040D17A:
	r6 = r18_134 + (r5 + 0xFFFFFFFA<32>)
	branch r6 <u r7 l0040D0DA
l0040D184:
	word32 r6_101 = 2<32>
	r5 = 1<32>
	branch r16_79 != 0<32> l0040D18C
l0040D188_1:
	r6_101 = 1<32>
l0040D18C:
	word32 r16_102 = r7 + r6_101
	word32 r17_111 = (CONVERT(Mem19[r16_102 + 8<32>:byte], byte, word32) << 8<32>) + CONVERT(Mem19[r16_102 + 9<32>:byte], byte, word32)
	r6 = r18_134 + r5
	r7 = r16_102 + r17_111
	branch r6 <u r7 l0040D0DA
l0040D1A4:
	word32 r4_139
	r2 = fn00406F48(r7, CONVERT(Mem19[r16_102 + 1<32>:byte], byte, word32), r16_102 + 0xA<32>, r18_134, r11, out r4_139, out r5, out r6, out r7, out r8, out r11, out r12, out r18_134)
	branch r4_139 < 0<32> l0040D0DA
l0040D1B4:
	r7 = r16_102 + (r17_111 + 0xA<32>)
l0040D116:
l0040D0E4:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
l0040D0DA:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8
	r11Out = r11
	r12Out = r12
	return r2
__dns_parse_exit:


void __restore(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__restore_entry:
l0040D1C0:
	__syscall(0<32>)
l0040D1CC_thunk___lockfile:
	word32 r3_15
	word32 r4_16
	word32 r5_17
	word32 r8_18
	word32 r9_19
	__lockfile(r4, out r3_15, out r4_16, out r5_17, out r8_18, out r9_19)
	return
__restore_exit:


word32 __lockfile(word32 r4, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7A
//      fflush_unlocked
//      fgets_unlocked
//      fputc
//      fwrite_unlocked
//      _IO_getc
//      _IO_putc
//      puts
//      vfprintf
//      __restore
//      __isoc99_vfscanf
//      close_file
// MayUse:  r4:[0..31]
// LiveOut: r2 r3 r4 r5 r8 r9
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__lockfile_entry:
	word32 r2
	word32 r5
	word32 r8
	word32 r9
l0040D1D0:
	word32 r17_16 = Mem9[__read_user_local() - 0x94<32>:word32]
	branch r17_16 != Mem9[r4 + 0x4C<32>:word32] l0040D1F0
l0040D1F0:
	__sync(0<32>)
l0040D1F8:
	word32 r6_21 = __load_linked_32(Mem9[r4 + 0x4C<32>:word32])
	branch r6_21 != 0<32> l0040D206
l0040D1FE:
	branch __store_conditional_32(Mem9[r4 + 0x4C<32>:word32], r17_16) == 0<32> l0040D1F8
l0040D206:
	__sync(0<32>)
	branch r6_21 != 0<32> l0040D1E6
l0040D1E6:
	word32 r4_111
	r2 = __wait(r4 + 0x4C<32>, r4 + 0x50<32>, r6_21, 1<32>, out r4_111, out r5, out r8, out r9)
l0040D20C:
	r3Out = <invalid>
	r4Out = 1<32>
	r5Out = r5
	r8Out = r8
	r9Out = r9
	return r2
l0040D1E4:
	r3Out = <invalid>
	r4Out = 0<32>
	r5Out = r5
	r8Out = r8
	r9Out = r9
	return r2
__lockfile_exit:


word32 __unlockfile(word32 r4, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7A
//      __getopt_msg
//      fflush_unlocked
//      fgets_unlocked
//      fputc
//      fwrite_unlocked
//      _IO_getc
//      _IO_putc
//      puts
//      vfprintf
//      __isoc99_vfscanf
// MayUse:  r4:[0..31]
// LiveOut: r2 r4 r5 r6 r7 r8 r9
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__unlockfile_entry:
	word32 r2
	word32 r5
	word32 r6
	word32 r8
	word32 r9
l0040D210:
	__sync(0<32>)
	Mem10[r4 + 0x4C<32>:byte] = 0<8>
	__sync(0<32>)
	word32 r7_11 = Mem10[r4 + 0x50<32>:word32]
	branch r7_11 == 0<32> l0040D248
l0040D224:
	word32 r7_80
	r2 = __syscall(out r4, out r5, out r6, out r7_80, out r8, out r9)
	r7_11 = 0xFFFFFFDA<32>
	branch r4 != 0xFFFFFFDA<32> l0040D248
l0040D248:
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7_11
	r8Out = r8
	r9Out = r9
	return r2
l0040D23A:
l0040D244_thunk___syscall:
	word32 r4_40
	word32 r5_41
	word32 r6_42
	word32 r7_43
	word32 r8_44
	word32 r9_45
	word32 r2_38 = __syscall(out r4_40, out r5_41, out r6_42, out r7_43, out r8_44, out r9_45)
	r4Out = r4_40
	r5Out = r5_41
	r6Out = r6_42
	r7Out = r7_43
	r8Out = r8_44
	r9Out = r9_45
	return r2_38
__unlockfile_exit:


word32 __overflow(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fputc
//      _IO_putc
//      puts
// MayUse:  r4:[0..31] r5:[0..7]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7
// Preserved: r16 ra sp
__overflow_entry:
	ptr32 fp
l0040D250:
	byte bLoc11_57 = SLICE(r5, byte, 0)
	branch Mem7[r4 + 0x10<32>:word32] == 0<32> l0040D27A
l0040D27A:
	word32 r6_81
	word32 r7_82
	branch __towrite(r4, out r6_81, out r7_82) == 0<32> l0040D25C
l0040D25C:
	word32 r7_21 = Mem13[r4 + 20<i32>:word32]
	branch r7_21 <u Mem13[r4 + 16<i32>:word32] l0040D284
l0040D284:
	word32 r4_23 = CONVERT(bLoc11_57, byte, word32)
	branch r4_23 == CONVERT(Mem13[r4 + 0x4B<32>:int8], int8, word32) l0040D264
l0040D290:
	Mem27[r7_21:byte] = SLICE(r4_23, byte, 0)
	return r4_23
l0040D264:
	word32 r4_40
	call Mem13[r4 + 0x24<32>:word32] (retsize: 0;)
		uses: r4:r4,r5:fp - 0x11<32>,r6:1<32>
		defs: r4:r4_40
	branch r4_40 != 1<32> l0040D280
l0040D280:
	return 0xFFFFFFFF<32>
l0040D274:
	return CONVERT(bLoc11_57, byte, word32)
__overflow_exit:


void __stdio_write(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __stdout_write
// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r19 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r20 ra sp
__stdio_write_entry:
	ptr32 fp
l0040D2A0:
	word32 r20_23 = 2<32>
	word32 r17_24 = fp - 48<i32>
	word32 r18_28 = Mem15[r4 + 0x14<32>:word32] - Mem15[r4 + 0x1C<32>:word32] + r6
l0040D2F2:
	word32 r4_42
	word32 r6_142
	word32 r8_144
	word32 r5_141
	word32 r7_143
	word32 r9_145
	__syscall(out r4_42, out r5_141, out r6_142, out r7_143, out r8_144, out r9_145)
	word32 r4_50
	word32 r7_146
	__syscall_ret(r4_42, out r4_50, out r7_146)
	branch r18_28 == r4_50 l0040D2BE
l0040D2BE:
	word32 r7_53 = Mem33[r4 + 0x2C<32>:word32]
	Mem58[r4 + 16<i32>:word32] = r7_53 + Mem33[r4 + 0x30<32>:word32]
	Mem59[r4 + 20<i32>:word32] = r7_53
l0040D304:
	branch r4_50 < 0<32> l0040D2CE
l0040D2CE:
	branch r20_23 == 2<32> l0040D318
l0040D318:
l0040D2E0:
l0040D2CA:
	return
__stdio_write_exit:
l0040D308:
	r18_28 = r18_28 - r4_50
	branch Mem33[r17_24 + 4<32>:word32] >=u r4_50 l0040D2E6
l0040D310:
	r17_24 = r17_24 + 8<32>
	r20_23 = r20_23 + 0xFFFFFFFF<32>
l0040D2E6:


void __stdout_write(word32 r4, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r19 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
__stdout_write_entry:
l0040D320:
	branch !__bit(Mem20[r4:word32], 6<32>) l0040D34A
l0040D332:
	word32 r4_28
	word32 r8_71
	word32 r7_70
	word32 r6_69
	word32 r5_68
	word32 r9_72
	__syscall(out r4_28, out r5_68, out r6_69, out r7_70, out r8_71, out r9_72)
	branch r4_28 == 0<32> l0040D34A
l0040D344:
	Mem35[r4 + 0x4B<32>:byte] = 0xFF<8>
l0040D34A:
	__stdio_write(r4, r6)
	return
__stdout_write_exit:


void __string_read(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      do_read
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 ra sp
__string_read_entry:
l0040D360:
	word32 r16_26 = Mem17[r4 + 0x54<32>:word32]
	word32 r18_24 = r6 + 0x100<32>
	word32 r20_25 = r6
	word32 r8_109
	word32 r5_107
	word32 r6_108
	word32 r4_31 = memchr(r16_26, 0<32>, r6 + 0x100<32>, out r5_107, out r6_108, out r8_109)
	branch r4_31 == 0<32> l0040D378
l0040D376:
	r18_24 = r4_31 - r16_26
l0040D378:
	branch CONVERT(r6 <u r18_24, bool, word32) != 0<32> l0040D380
l0040D37C_1:
	r20_25 = r18_24
l0040D380:
	word32 r13_119
	word32 r11_117
	word32 r12_118
	word32 r9_115
	word32 r10_116
	word32 r7_113
	word32 r8_114
	word32 r5_111
	word32 r6_112
	word32 r3_110
	memcpy(r5, r16_26, r20_25, out r3_110, out r5_111, out r6_112, out r7_113, out r8_114, out r9_115, out r10_116, out r11_117, out r12_118, out r13_119)
	word32 r16_68 = r16_26 + r18_24
	Mem75[r4 + 2<32>:word32] = r16_68
	Mem76[r4 + 0x54<32>:byte] = SLICE(r16_68, byte, 0)
	return
__string_read_exit:


word32 __towrite(word32 r4, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fputc
//      __fwritex
// MayUse:  r4:[0..31]
// LiveOut: r4 r6 r7
// Trashed: r25 r4 r6 r7
// Preserved: sp
__towrite_entry:
l0040D3A0:
	word32 r7_6 = CONVERT(Mem0[r4 + 0x4A<32>:int8], int8, word32)
	Mem9[r4 + 0x4A<32>:byte] = SLICE(r7_6, byte, 0) | SLICE(r7_6, byte, 0) + 0xFF<8>
	word32 r7_10 = Mem9[r4:word32]
	branch !__bit(r7_10, 3<32>) l0040D3C8
l0040D3C8:
	r6Out = r7_6 + 0xFFFFFFFF<32>
	r7Out = r7_10 | 0x20<32>
	return 0xFFFFFFFF<32>
l0040D3B4:
	word32 r6_15 = Mem9[r4 + 0x30<32>:word32]
	word32 r7_18 = Mem9[r4 + 0x2C<32>:word32] + r6_15
	r6Out = r6_15
	r7Out = r7_18
	return 0<32>
__towrite_exit:


void __towrite_needs_stdio_exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__towrite_needs_stdio_exit_entry:
l0040D3D2:
l0040D3D2_thunk___stdio_exit_needed:
	__stdio_exit_needed()
	return
__towrite_needs_stdio_exit_exit:


word32 __uflow(word32 r4, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fgets_unlocked
//      _IO_getc
//      __shgetc
// MayUse:  r4:[0..31]
// LiveOut: r4 r5 r6 r7
// Trashed: r25 r4 r5 r6 r7
// Preserved: r16 ra sp
__uflow_entry:
	ptr32 fp
	byte bLoc11
	word32 r5
l0040D3E0:
	word32 r16_15
	word32 r6_13
	word32 r7_14
	branch __toread(r4, out r6_13, out r7_14, out r16_15) != 0<32> l0040D400
l0040D3EA:
	word32 r4_20
	call Mem7[r16_15 + 0x20<32>:word32] (retsize: 0;)
		uses: r4:r16_15,r5:fp - 0x11<32>,r6:1<32>,Stack +000F:bLoc11
		defs: r4:r4_20,r5:r5_23,r6:r6_22,r7:r7_21
	branch r4_20 != 1<32> l0040D400
l0040D400:
	r5Out = r5
	r6Out = r6_13
	r7Out = r7_14
	return 0xFFFFFFFF<32>
l0040D3FA:
	r5Out = r5
	r6Out = r6_13
	r7Out = r7_14
	return CONVERT(bLoc11, byte, word32)
__uflow_exit:


word32 store_int(word32 r4, word32 r5, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r4 r8
// Trashed: r25 r4 r5 r8
// Preserved: sp
store_int_entry:
	word32 r8
l0040D410:
	branch r4 == 0<32> l0040D432
l0040D412:
	branch r5 >=u 0xFFFFFFFC<32> l0040D432
l0040D432:
	r8Out = r8
	return r4
l0040D418:
	word32 r5_9 = Mem0[0x0041343C<p32> + (r5 + 2<32>) * 4<32>:word32]
	word32 r4_10
	word32 r8_12
	call r5_9 (retsize: 0;)
		uses: r4:r4,r5:r5_9,r8:0x0041343C<p32>
		defs: r4:r4_10,r8:r8_12
	r8Out = r8_12
	return r4_10
store_int_exit:


word32 arg_n(word32 r4, word32 r5, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r8 r9
// Trashed: r10 r11 r12 r13 r14 r15 r17 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
arg_n_entry:
	ptr32 fp
	int8 bLoc24
l0040D434:
	word32 r11_245
	word32 r13_247
	word32 r12_246
	word32 r3_238
	word32 r6_240
	word32 r7_241
	word32 r8_242
	word32 r9_243
	word32 r10_244
	word32 r5_239
	memcpy(fp - 0x20<32>, r4, 0x10<32>, out r3_238, out r5_239, out r6_240, out r7_241, out r8_242, out r9_243, out r10_244, out r11_245, out r12_246, out r13_247)
	word32 r16_11 = r5
	word32 r10_33
	word32 r8_38
	word32 r9_39
	word32 r11_41
	word32 r12_42
	word32 r3_47
	word32 r6_249
	word32 r13_251
	word32 r7_250
	word32 r5_248
	word32 r2_45 = memcpy(fp - 48<i32>, fp - 0x20<32>, 0x10<32>, out r3_47, out r5_248, out r6_249, out r7_250, out r8_38, out r9_39, out r10_33, out r11_41, out r12_42, out r13_251)
	word32 r7_103 = CONVERT(bLoc24, int8, word32)
	word32 r6_101 = 0<32>
	word32 r4_50 = 0<32>
l0040D462:
	branch r16_11 <u 2<32> l0040D478
l0040D478:
	branch r4_50 == 0<32> l0040D47C
l0040D47A:
l0040D47C:
	branch r6_101 == 0<32> l0040D482
l0040D47E:
l0040D482:
	branch r7_103 <= 0<32> l0040D49E
l0040D486:
	word32 r6_66 = CONVERT(SLICE(r7_103, byte, 0) + 0xFC<8>, byte, int32)
	branch r6_66 < 0<32> l0040D49E
l0040D49E:
l0040D496:
	r7_103 = r6_66 - r7_103
l0040D49A:
	word32 r4_82 = Mem81[r7_103:word32]
	r3Out = r3_47
	r4Out = r4_82
	r8Out = r8_38
	r9Out = r9_39
	r10Out = r10_33
	r11Out = r11_41
	r12Out = r12_42
	return r2_45
arg_n_exit:
l0040D466:
	branch r7_103 <= 0<32> l0040D45C
l0040D46A:
	r6_101 = 1<32>
	r7_103 = CONVERT(SLICE(r7_103, byte, 0) + 0xFC<8>, byte, int32)
	branch r7_103 >= 0<32> l0040D460
l0040D476:
l0040D45C:
	r4_50 = 1<32>
l0040D460:
	r16_11 = r16_11 + 0xFFFFFFFF<32>


word32 __isoc99_vfscanf(word32 r0, word32 r4, word32 r5, word32 r6, word32 r19, word32 r20, word32 r21, ptr32 & r4Out, ptr32 & r18Out, ptr32 & r19Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vsscanf
// MayUse:  r0:[0..31] r19:[0..31] r20:[0..31] r21:[0..31] r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r18 r19 r3 r4
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r16 r17 r18 r19 r2 r20 r21 r22 r23 r24 r25 r3 r30 r4 r5 r6 r7 r8 r9 sp
// Preserved: ra
l0040D5BE_thunk_fn0040F9A8:
	r4Out = fn0040F9A8(r6_180, r8_1651, r10_1783)
	r18Out = r18_1649
	r19Out = r19_1201
	return r3_534
__isoc99_vfscanf_entry:
	def fp
	def r18
	def r19
	def r20
	def r21
	def r5
	def r6
	def r4
	def r0
	def tLoc0151
	def tLoc014C
	def tLoc0134
l0040D4A6:
	r2_55 = memcpy(fp - 0x144<32>, r6, 0x10<32>, out r3_57, out r5_4205, out r6_4206, out r7_4207, out r8_48, out r9_49, out r10_43, out r11_51, out r12_52, out r13_4208)
	r16_35 = r5
	r4_41 = fp - 0x144<32>
	dwLoc0178_2010 = CONVERT(Mem62[r6 + 0xC<32>:int8], int8, word32)
	branch Mem64[r4 + 0x4C<32>:word32] < 0<32> l0040D4D6
l0040D4CE:
	r2_67 = __lockfile(r4, out r3_69, out r4_70, out r5_4209, out r8_74, out r9_75)
l0040D4D6:
	r3_1887 = PHI((r3_57, l0040D4A6), (r3_69, l0040D4CE))
	r2_1849 = PHI((r2_55, l0040D4A6), (r2_67, l0040D4CE))
	r9_1739 = PHI((r9_49, l0040D4A6), (r9_75, l0040D4CE))
	r8_1653 = PHI((r8_48, l0040D4A6), (r8_74, l0040D4CE))
	r4_1641 = PHI((r4_41, l0040D4A6), (r4_70, l0040D4CE))
	r23_77 = 0<32>
l0040D4DC:
	dwLoc0178_2015 = PHI((dwLoc0178_2010, l0040D4D6), (dwLoc0178_3099, l0040DBC8))
	r10_1784 = PHI((r10_43, l0040D4D6), (r10_1786, l0040DBC8))
	r9_1738 = PHI((r9_1739, l0040D4D6), (r9_1740, l0040DBC8))
	r11_1712 = PHI((r11_51, l0040D4D6), (r11_1714, l0040DBC8))
	r12_1668 = PHI((r12_52, l0040D4D6), (r12_1670, l0040DBC8))
	r8_1652 = PHI((r8_1653, l0040D4D6), (r8_1654, l0040DBC8))
	r20_1288 = PHI((r20, l0040D4D6), (r20_1980, l0040DBC8))
	r19_1205 = PHI((r19, l0040D4D6), (r19_1967, l0040DBC8))
	r3_535 = PHI((r3_1887, l0040D4D6), (r3_1888, l0040DBC8))
	r2_511 = PHI((r2_1849, l0040D4D6), (r2_1850, l0040DBC8))
	r23_324 = PHI((r23_77, l0040D4D6), (r23_1844, l0040DBC8))
	r21_311 = PHI((r21, l0040D4D6), (r21_1830, l0040DBC8))
	r4_121 = PHI((r4_1641, l0040D4D6), (r4_1642, l0040DBC8))
	Mem82 = PHI((Mem80, l0040D4D6), (Mem1639, l0040DBC8))
	r16_81 = PHI((r16_35, l0040D4D6), (r16_1587, l0040DBC8))
	r7_83 = CONVERT(Mem82[r16_81:byte], byte, word32)
	branch r7_83 != 0<32> l0040D4F0
l0040D4F0:
	branch r7_83 != 0x20<32> l0040D4F8
l0040D4F8:
	branch r7_83 >=u 0xFFFFFFF2<32> l0040D504
l0040D504:
	branch r7_83 != 0x25<32> l0040D50E
l0040D508:
	r5_85 = CONVERT(Mem82[r16_81 + 1<32>:byte], byte, word32)
	branch r5_85 != 0x25<32> l0040D57C
l0040D57C:
	branch r5_85 != 0x2A<32> l0040D5C0
l0040D5C0:
	branch r5_85 >=u 0xFFFFFFC6<32> l0040D5EC
l0040D5C8:
	r7_87 = CONVERT(Mem82[r16_81 + 2<32>:byte], byte, word32)
	branch r7_87 != 0x24<32> l0040D5EC
l0040D5EC:
	r7_92 = PHI((r7_83, l0040D5C0), (r7_87, l0040D5C8))
	branch r7_92 <= 0<32> l0040D618
l0040D5F2:
	r6_95 = CONVERT(SLICE(r7_92, byte, 0) + 0xFC<8>, byte, int32)
	branch r6_95 < 0<32> l0040D616
l0040D616:
	dwLoc0178_2016 = r6_95
l0040D618:
	dwLoc0178_2017 = PHI((dwLoc0178_2015, l0040D5EC), (dwLoc0178_2016, l0040D616))
	r6_99 = dwLoc0178_2017
l0040D5FE:
	r4_103 = dwLoc0178_2015
l0040D608:
	r4_118 = PHI((r4_103, l0040D5FE), (r4_121, l0040D618))
	r6_114 = PHI((r6_95, l0040D5FE), (r6_99, l0040D618))
	r7_113 = r16_81 + 1<32>
	dwLoc0178_2025 = r6_114
	r18_122 = Mem117[r4_118:word32]
l0040D5CE:
	r2_137 = arg_n(fp - 0x144<32>, r5_85 + 0xFFFFFFD0<32>, out r3_140, out r4_141, out r8_145, out r9_146, out r10_130, out r11_131, out r12_132)
	r18_147 = r4_141
	r7_148 = r16_81 + 3<32>
	dwLoc0178_3120 = dwLoc0178_2015 (alias)
l0040D580:
	r7_149 = r16_81 + 2<32>
	r18_150 = 0<32>
l0040D586:
	dwLoc0178_3118 = PHI((dwLoc0178_2015, l0040D580), (dwLoc0178_3120, l0040D5CE), (dwLoc0178_2025, l0040D608))
	r10_1783 = PHI((r10_1784, l0040D580), (r10_130, l0040D5CE), (r10_1784, l0040D608))
	r9_1737 = PHI((r9_1738, l0040D580), (r9_146, l0040D5CE), (r9_1738, l0040D608))
	r11_1711 = PHI((r11_1712, l0040D580), (r11_131, l0040D5CE), (r11_1712, l0040D608))
	r12_1667 = PHI((r12_1668, l0040D580), (r12_132, l0040D5CE), (r12_1668, l0040D608))
	r8_1651 = PHI((r8_1652, l0040D580), (r8_145, l0040D5CE), (r8_1652, l0040D608))
	r18_1649 = PHI((r18_150, l0040D580), (r18_147, l0040D5CE), (r18_122, l0040D608))
	r7_1645 = PHI((r7_149, l0040D580), (r7_148, l0040D5CE), (r7_113, l0040D608))
	r3_534 = PHI((r3_535, l0040D580), (r3_140, l0040D5CE), (r3_535, l0040D608))
	r2_510 = PHI((r2_511, l0040D580), (r2_137, l0040D5CE), (r2_511, l0040D608))
	dwLoc0184_2031 = 0<32>
l0040D588:
	dwLoc0184_2032 = PHI((dwLoc0184_3279, l0040D630), (dwLoc0184_2031, l0040D586))
	r20_1285 = PHI((r20_1286, l0040D630), (r20_1288, l0040D586))
	r19_1202 = PHI((r19_1203, l0040D630), (r19_1205, l0040D586))
	Mem154 = PHI((Mem1646, l0040D630), (Mem152, l0040D586))
	r7_153 = PHI((r7_1644, l0040D630), (r7_1645, l0040D586))
	r6_155 = CONVERT(Mem154[r7_153:byte], byte, word32)
	r5_156 = r7_153 + 1<32>
	r4_157 = r6_155 + 0xFFFFFFD0<32>
	branch r6_155 <u 0xFFFFFFC6<32> l0040D620
l0040D620:
	dwLoc0184_2033 = (r6_155 + 0xFFFFFFD0<32>) *s 0xA<32> + r6_155 + 0xFFFFFFD0<32>
	r7_165 = r5_156
l0040D596:
	dwLoc017C_2034 = 0<32>
	branch r6_155 != 0x2D<32> l0040D5A8
l0040D59C:
	r20_169 = 0<32>
	dwLoc017C_2035 = CONVERT(r18_1649 >u 0<32>, bool, word32)
	r19_171 = 0<32>
	r7_172 = r5_156
l0040D5A8:
	dwLoc017C_2090 = PHI((dwLoc017C_2034, l0040D596), (dwLoc017C_2035, l0040D59C))
	r20_1284 = PHI((r20_1285, l0040D596), (r20_169, l0040D59C))
	r19_1201 = PHI((r19_1202, l0040D596), (r19_171, l0040D59C))
	Mem174 = PHI((Mem166, l0040D596), (Mem170, l0040D59C))
	r7_173 = PHI((r7_153, l0040D596), (r7_172, l0040D59C))
	r16_176 = r7_173 + 1<32>
	r6_178 = CONVERT(Mem174[r7_173:byte], byte, word32) + 0xFFFFFFBF<32> & 0xFF<32>
	branch r6_178 >=u 0x3A<32> l0040D7B4
l0040D5B8:
	r5_179 = 0x00413454<p32>
	r6_180 = Mem174[0x00413454<p32> + r6_178 * 4<32>:word32]
	switch (r6_180) { l0040D70C l0040D7B4 l0040D70C l0040D7B4 l0040D70C l0040D70C l0040D70C l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D704 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D70C l0040D70C l0040D70C l0040D70C l0040D70C l0040D630 l0040D70C l0040D700 l0040D7B4 l0040D6F0 l0040D7B4 l0040D70C l0040D70C l0040D70C l0040D7B4 l0040D7B4 l0040D70C l0040D710 l0040D70C l0040D7B4 l0040D7B4 l0040D70C l0040D7B4 l0040D710 l0040FA58 l0040F9BC l0040D5BE_thunk_fn0040F9A8 l0040F9BC l0040FA4C l0040F9BC l0040F9A8 l0040FA58 l0040FA58 l0040FA4C l0040F9A8 l0040F9C4 l0040F9C4 l0040F9C4 l0040F97C }
l0040F97C:
	r4_184 = r8_1651 | r6_155 + 0xFFFFFFD0<32>
	branch (r4_184 & 0x800000<32>) == 0<32> l0040F990
l0040F98C_1:
l0040F990:
	branch (r4_184 & 0x800000<32>) == 0<32> l0040F994
l0040F990_1:
l0040F994:
	branch (r4_184 & 0x800000<32>) == 0<32> l0040F99C
l0040F998_1:
l0040F9C4:
l0040F9B2:
	branch r12_1667 == 2<32> l0040F9B2_thunk_fn0040FA5A
l0040F9B2_thunk_fn0040FA5A:
	fn0040FA5A(out r5_4220)
	r4Out = r6_155 + 0xFFFFFFD0<32>
	r18Out = r18_1649
	r19Out = r19_1201
	return r3_534
l0040F9B6:
	branch r12_1667 == 3<32> l0040F99C
l0040F9BA:
	branch r12_1667 != 1<32> l0040F9BA_thunk_fn0040F91A
l0040F9BA_thunk_fn0040F91A:
	r4Out = fn0040F91A(r8_1651, r9_1737, r11_1711, out r5_4221)
	r18Out = r18_1649
	r19Out = r19_1201
	return r3_534
l0040F9BA_thunk_fn0040F9BE:
	fn0040F9BE(out r5_4222)
	r4Out = r6_155 + 0xFFFFFFD0<32>
	r18Out = r18_1649
	r19Out = r19_1201
	return r3_534
l0040D5BE_thunk_fn0040F9A8:
	r4Out = fn0040F9A8(r6_180, r8_1651, r10_1783)
	r18Out = r18_1649
	r19Out = r19_1201
	return r3_534
l0040FA4C:
l0040D5BE_thunk_fn0040F9A8:
	r4Out = fn0040F9A8(r6_180, r8_1651, r10_1783)
	r18Out = r18_1649
	r19Out = r19_1201
	return r3_534
l0040F9BC:
l0040FA58:
l0040F99C:
l0040F9A0_thunk_fn0040F9A4:
	r4Out = fn0040F9A4(out r5_4223)
	r18Out = r18_1649
	r19Out = r19_1201
	return r3_534
l0040D6F0:
	r6_259 = 0x0037366C<p32>
	r21_260 = 1<32>
	branch 0x0037366C<p32> != 0x2C<32> l0040D644
l0040D6FC:
	r16_261 = r7_173 + 2<32>
l0040D700:
	r6_435 = PHI((r6_180, l0040D5B8), (r6_259, l0040D6FC))
	r16_268 = PHI((r16_176, l0040D5B8), (r16_261, l0040D6FC))
	r21_262 = 3<32>
l0040D630:
	dwLoc0184_3279 = PHI((dwLoc0184_2032, l0040D5B8), (dwLoc0184_2033, l0040D620))
	Mem1646 = PHI((Mem174, l0040D5B8), (Mem164, l0040D620))
	r7_1644 = PHI((r7_173, l0040D5B8), (r7_165, l0040D620))
	r20_1286 = PHI((r20_1284, l0040D5B8), (r20_1285, l0040D620))
	r19_1203 = PHI((r19_1201, l0040D5B8), (r19_1202, l0040D620))
l0040D704:
	r6_434 = PHI((r6_180, l0040D5B8), (r6_435, l0040D700))
	r21_306 = PHI((r21_311, l0040D5B8), (r21_262, l0040D700))
	r16_267 = PHI((r16_176, l0040D5B8), (r16_268, l0040D700))
l0040D70C:
	r16_264 = r7_173
	r21_265 = 0<32>
l0040D710:
	r21_315 = PHI((r21_311, l0040D5B8), (r21_311, l0040D5B8), (r21_265, l0040D70C))
	r16_269 = PHI((r16_176, l0040D5B8), (r16_176, l0040D5B8), (r16_264, l0040D70C))
l0040D644:
	r6_433 = PHI((r6_434, l0040D704), (r6_259, l0040D6F0), (r6_180, l0040D710))
	r21_305 = PHI((r21_306, l0040D704), (r21_260, l0040D6F0), (r21_315, l0040D710))
	r16_266 = PHI((r16_267, l0040D704), (r16_176, l0040D6F0), (r16_269, l0040D710))
	r17_275 = CONVERT(Mem174[r16_266:byte], byte, word32)
	r7_276 = r17_275 & 0x2F<32>
	branch (r17_275 & 0x2F<32>) != 3<32> l0040D656
l0040D64E:
	r17_277 = r17_275 | 0x20<32>
	r21_278 = 1<32>
l0040D656:
	r21_304 = PHI((r21_305, l0040D644), (r21_278, l0040D64E))
	r17_279 = PHI((r17_275, l0040D644), (r17_277, l0040D64E))
	branch r17_279 == 0x23<32> l0040D718
l0040D718:
	r6_291 = CONVERT((r17_275 & 0x2F<32>) > 0<32>, bool, word32)
	r7_292 = 1<32>
	branch r6_291 != 0<32> l0040D726
l0040D722_1:
	r5_293 = 1<32>
l0040D726:
	r5_294 = PHI((r5_179, l0040D718), (r5_293, l0040D722_1))
	dwLoc0184_2043 = r5_294
l0040D65A:
	branch r17_279 == 0x2E<32> l0040D72A
l0040D72A:
	r4_342 = store_int(r18_1649, r21_304, out r8_343)
l0040D65E:
	branch r17_279 != 0x1B<32> l0040D736
l0040D736:
	__shlim(r4, 0<32>, 0<32>, out r8_4224, out r9_4225, out r10_4226, out r11_4227)
l0040D73E:
	r3_544 = PHI((r3_534, l0040D736), (r3_543, l0040D758), (r3_543, l0040D754))
	r2_520 = PHI((r2_510, l0040D736), (r2_519, l0040D758), (r2_519, l0040D754))
	r12_496 = PHI((r12_1667, l0040D736), (r12_495, l0040D758), (r12_495, l0040D754))
	Mem368 = PHI((Mem174, l0040D736), (Mem390, l0040D758), (Mem390, l0040D754))
	r7_369 = Mem368[r4 + 4<32>:word32]
	branch r7_369 >=u Mem368[r4 + 0x68<32>:word32] l0040D7A2
l0040D7A2:
	r2_380 = __shgetc(r4, out r3_381, out r4_373, out r5_4259, out r6_4260, out r7_4261, out r8_4262, out r9_4263, out r10_4264, out r11_4265, out r12_379)
l0040D74A:
	Mem385[r4 + 4<32>:byte] = SLICE(r7_369, byte, 0) + 1<8>
	r4_386 = CONVERT(Mem385[r7_369:byte], byte, word32)
l0040D754:
	r3_543 = PHI((r3_544, l0040D74A), (r3_381, l0040D7A2))
	r2_519 = PHI((r2_520, l0040D74A), (r2_380, l0040D7A2))
	r12_495 = PHI((r12_496, l0040D74A), (r12_379, l0040D7A2))
	Mem390 = PHI((Mem385, l0040D74A), (Mem368, l0040D7A2))
	r4_387 = PHI((r4_386, l0040D74A), (r4_373, l0040D7A2))
	branch r4_387 == 0x20<32> l0040D73E
l0040D758:
	branch r4_387 <u 0xFFFFFFF2<32> l0040D73E
l0040D760:
	branch Mem390[r4 + 0x68<32>:word32] == 0<32> l0040D770
l0040D766:
	Mem394[r4 + 4<32>:byte] = Mem390[r4 + 4<32>:byte] + 0xFF<8>
l0040D770:
	Mem396 = PHI((Mem390, l0040D760), (Mem394, l0040D766))
	r7_400 = Mem396[r4 + 4<32>:word32] - Mem396[r4 + 8<32>:word32]
	r6_403 = r7_400 + Mem396[r4 + 0x78<32>:word32]
	r4_399 = Mem396[r4 + 0x7C<32>:word32]
	r6_414 = r6_403 + r23_324
	r7_417 = CONVERT(r6_414 <u r23_324, bool, word32) + (r4_399 + (CONVERT(r6_403 <u r7_400, bool, word32) + ((r7_400 >> 0x1F<32>) + r4_399)))
	r23_418 = r6_414
l0040D662:
	dwLoc0184_2062 = PHI((dwLoc0184_2032, l0040D65E), (dwLoc0184_2032, l0040D770), (dwLoc0184_2043, l0040D726))
	r23_1370 = PHI((r23_324, l0040D65E), (r23_418, l0040D770), (r23_324, l0040D726))
	r3_527 = PHI((r3_534, l0040D65E), (r3_543, l0040D770), (r3_534, l0040D726))
	r2_503 = PHI((r2_510, l0040D65E), (r2_519, l0040D770), (r2_510, l0040D726))
	r12_487 = PHI((r12_1667, l0040D65E), (r12_495, l0040D770), (r12_1667, l0040D726))
	r6_431 = PHI((r6_433, l0040D65E), (r6_414, l0040D770), (r6_291, l0040D726))
	r7_427 = PHI((r7_276, l0040D65E), (r7_417, l0040D770), (r7_292, l0040D726))
	__shlim(r4, r6_431, r7_427 >> 0x1F<32>, out r8_443, out r9_444, out r10_439, out r11_440)
	r7_445 = Mem430[r4 + 4<32>:word32]
	branch r7_445 >=u Mem430[r4 + 0x68<32>:word32] l0040D7AA
l0040D7AA:
	r2_456 = __shgetc(r4, out r3_457, out r4_449, out r5_4228, out r6_451, out r7_4229, out r8_458, out r9_459, out r10_453, out r11_454, out r12_455)
	branch r4_449 >= 0<32> l0040D684
l0040D67E:
	Mem461[r4 + 4<32>:byte] = SLICE(r7_445, byte, 0) + 1<8>
l0040D684:
	r10_1794 = PHI((r10_439, l0040D67E), (r10_453, l0040D7AA))
	r9_1748 = PHI((r9_444, l0040D67E), (r9_459, l0040D7AA))
	r8_1662 = PHI((r8_443, l0040D67E), (r8_458, l0040D7AA))
	r11_798 = PHI((r11_440, l0040D67E), (r11_454, l0040D7AA))
	r3_526 = PHI((r3_527, l0040D67E), (r3_457, l0040D7AA))
	r2_502 = PHI((r2_503, l0040D67E), (r2_456, l0040D7AA))
	r12_486 = PHI((r12_487, l0040D67E), (r12_455, l0040D7AA))
	Mem463 = PHI((Mem461, l0040D67E), (Mem430, l0040D7AA))
	branch Mem463[r4 + 0x68<32>:word32] == 0<32> l0040D694
l0040D68A:
	Mem467[r4 + 4<32>:byte] = Mem463[r4 + 4<32>:byte] + 0xFF<8>
l0040D694:
	Mem564 = PHI((Mem467, l0040D68A), (Mem463, l0040D684))
	branch dwLoc0184_2062 == 0x24<32> l0040DAE6
l0040D698:
	branch dwLoc0184_2062 >= 0x25<32> l0040D83A
l0040D83A:
	branch dwLoc0184_2062 == 0x2F<32> l0040DAEA
l0040DAEA:
	r5_470 = 8<32>
l0040D83E:
	branch dwLoc0184_2062 >= 0x30<32> l0040D894
l0040D894:
	branch dwLoc0184_2062 == 0x33<32> l0040D8AE
l0040D898:
	branch dwLoc0184_2062 >= 0x34<32> l0040D8A4
l0040D8A4:
	branch dwLoc0184_2062 == 0x35<32> l0040DAE6
l0040DAE6:
	r5_471 = 0xA<32>
l0040D8A8:
	branch dwLoc0184_2062 == 0x38<32> l0040D8A0
l0040D8AC:
l0040D89C:
	branch dwLoc0184_2062 != 0x30<32> l0040D6B4
l0040D842:
	branch dwLoc0184_2062 < 0x28<32> l0040DAF8
l0040D846:
	r5_472 = 0<32>
	branch dwLoc0184_2062 != 0x29<32> l0040D6B4
l0040D69C:
	branch dwLoc0184_2062 == 0x18<32> l0040D8A0
l0040D8A0:
	r5_473 = 0x10<32>
l0040D84C:
	r5_482 = PHI((r5_473, l0040D8A0), (r5_472, l0040D846), (r5_470, l0040DAEA), (r5_471, l0040DAE6))
	r2_555 = __intscan(r2_502, r3_526, r4, r5_482, 0<32>, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>, r12_486, out r3_548, out r4_549, out r5_550, out r6_4246, out r7_4247, out r8_4248, out r9_4249, out r10_552, out r11_553, out r12_554)
	r22_571 = Mem564[r4 + 4<32>:word32] - Mem564[r4 + 8<32>:word32]
	r8_574 = Mem564[r4 + 0x78<32>:word32] + r22_571
	r9_576 = (r22_571 >> 0x1F<32>) + Mem564[r4 + 0x7C<32>:word32]
	r7_568 = r5_550
	branch (r8_574 | CONVERT(r8_574 <u r22_571, bool, word32) + r9_576) == 0<32> l0040D974
l0040D888:
	branch dwLoc0184_2062 != 0x30<32> l0040DAEE
l0040D88C:
	branch r18_1649 == 0<32> l0040DAEE
l0040DAEE:
	store_int(r18_1649, r21_304, out r8_609)
l0040D890:
l0040D6A0:
	branch dwLoc0184_2062 >= 0x19<32> l0040D7C0
l0040D7C0:
	branch dwLoc0184_2062 == 0x21<32> l0040DAF8
l0040D7C4:
	branch dwLoc0184_2062 == 0x23<32> l0040D8AE
l0040D8AE:
	memset(&tLoc0134, 0xFFFFFFFF<32>, 0x101<32>, out r6_4244, out r7_621, out r8_4245, out r9_626, out r10_623)
	Mem627[&tLoc0134:byte] = 0<8>
	branch dwLoc0184_2062 != 0x33<32> l0040D9A8
l0040D9A8:
	r22_629 = 0x1F<32>
	branch dwLoc0184_2062 != 0x23<32> l0040D8DE
l0040D9B0:
	r22_631 = r7_621 + 1<32>
l0040D8C2:
l0040D7C8:
	branch dwLoc0184_2062 != 0x1B<32> l0040D6B4
l0040D7CC:
	branch CONVERT(Mem564[r16_266 + 1<32>:byte], byte, word32) == 0x1E<32> l0040D986
l0040D986:
	r16_647 = r16_266 + 2<32>
	r22_648 = 1<32>
l0040D7D2:
	r16_649 = r16_266 + 1<32>
	r22_650 = 0<32>
l0040D7D6:
	r16_665 = PHI((r16_649, l0040D7D2), (r16_647, l0040D986))
	r22_655 = PHI((r22_650, l0040D7D2), (r22_648, l0040D986))
	memset(&tLoc0134, r22_655, 0x101<32>, out r6_4250, out r7_4251, out r8_660, out r9_664, out r10_661)
	r6_666 = CONVERT(Mem657[r16_665:byte], byte, word32)
	Mem669[&tLoc0134:byte] = 0<8>
	r4_654 = &tLoc0134
	r18_668 = &tLoc0134
	branch r6_666 != 0x2D<32> l0040D98E
l0040D98E:
	branch r6_666 != 0x1D<32> l0040D802
l0040D992:
	r16_671 = r16_665 + 1<32>
	r6_672 = 1<32> - r22_655
l0040D7F6:
	r16_675 = r16_665 + 1<32>
	r6_676 = 1<32> - r22_655
l0040D802:
	r6_1114 = PHI((r6_676, l0040D7F6), (r6_1143, l0040D824), (r6_666, l0040D98E), (r6_672, l0040D992))
	Mem679 = PHI((Mem677, l0040D7F6), (Mem1144, l0040D824), (Mem669, l0040D98E), (Mem673, l0040D992))
	r16_678 = PHI((r16_675, l0040D7F6), (r16_1138, l0040D824), (r16_665, l0040D98E), (r16_671, l0040D992))
	r7_680 = CONVERT(Mem679[r16_678:byte], byte, word32)
	branch r7_680 == 0x1D<32> l0040D8DA
l0040D8DA:
	r10_1803 = PHI((r10_661, l0040D802), (r10_623, l0040D8C2))
	r9_1756 = PHI((r9_664, l0040D802), (r9_626, l0040D8C2))
	r16_1572 = PHI((r16_678, l0040D802), (r16_266, l0040D8C2))
	r18_696 = PHI((r18_668, l0040D802), (r18_1649, l0040D8C2))
	r7_693 = PHI((r7_680, l0040D802), (r7_621, l0040D8C2))
	Mem690 = PHI((Mem679, l0040D802), (Mem637, l0040D8C2))
	r22_681 = 0x1F<32>
l0040D8DE:
	r10_1802 = PHI((r10_1803, l0040D8DA), (r10_623, l0040D9A8), (r10_623, l0040D9B0))
	r9_1755 = PHI((r9_1756, l0040D8DA), (r9_626, l0040D9A8), (r9_626, l0040D9B0))
	r16_1571 = PHI((r16_1572, l0040D8DA), (r16_266, l0040D9A8), (r16_266, l0040D9B0))
	r22_766 = PHI((r22_681, l0040D8DA), (r22_629, l0040D9A8), (r22_631, l0040D9B0))
	r18_695 = PHI((r18_696, l0040D8DA), (r18_1649, l0040D9A8), (r18_1649, l0040D9B0))
	r7_692 = PHI((r7_693, l0040D8DA), (r7_621, l0040D9A8), (r7_621, l0040D9B0))
	Mem689 = PHI((Mem690, l0040D8DA), (Mem627, l0040D9A8), (Mem627, l0040D9B0))
	branch r21_304 != 1<32> l0040DA14
l0040DA14:
	branch r7_692 == 0<32> l0040DA76
l0040DA76:
	r19_694 = 0<32>
	branch r18_695 != 0<32> l0040DAAA
l0040DAAA:
	r3_1918 = PHI((r3_526, l0040DA76), (r3_1917, l0040DAA4))
	r2_1880 = PHI((r2_502, l0040DA76), (r2_1879, l0040DAA4))
	r10_1813 = PHI((r10_1802, l0040DA76), (r10_1812, l0040DAA4))
	r9_1766 = PHI((r9_1755, l0040DA76), (r9_1765, l0040DAA4))
	r12_1700 = PHI((r12_486, l0040DA76), (r12_1699, l0040DAA4))
	r11_1257 = PHI((r11_798, l0040DA76), (r11_1256, l0040DAA4))
	r18_732 = PHI((r18_695, l0040DA76), (r18_731, l0040DAA4))
	r19_702 = PHI((r19_694, l0040DA76), (r19_734, l0040DAA4))
	Mem700 = PHI((Mem689, l0040DA76), (Mem733, l0040DAA4))
	r7_701 = Mem700[r4 + 4<32>:word32]
	r8_703 = r19_702
	branch r7_701 >=u Mem700[r4 + 0x68<32>:word32] l0040DAD2
l0040DAD2:
	r2_711 = fn0040DC0C(r4, out r3_713, out r4_714, out r6_4258, out r8_718, out r9_719, out r10_708, out r11_709, out r12_710)
	r18_720 = r19_702
l0040DAB8:
	Mem722[r4 + 4<32>:byte] = SLICE(r7_701, byte, 0) + 1<8>
	r4_723 = CONVERT(Mem722[r7_701:byte], byte, word32)
l0040DAC2:
	r3_1917 = PHI((r3_1918, l0040DAB8), (r3_713, l0040DAD2))
	r2_1879 = PHI((r2_1880, l0040DAB8), (r2_711, l0040DAD2))
	r10_1812 = PHI((r10_1813, l0040DAB8), (r10_708, l0040DAD2))
	r9_1765 = PHI((r9_1766, l0040DAB8), (r9_719, l0040DAD2))
	r12_1699 = PHI((r12_1700, l0040DAB8), (r12_710, l0040DAD2))
	r11_1256 = PHI((r11_1257, l0040DAB8), (r11_709, l0040DAD2))
	r8_1100 = PHI((r8_703, l0040DAB8), (r8_718, l0040DAD2))
	r18_731 = PHI((r18_732, l0040DAB8), (r18_720, l0040DAD2))
	Mem728 = PHI((Mem722, l0040DAB8), (Mem707, l0040DAD2))
	r4_726 = PHI((r4_723, l0040DAB8), (r4_714, l0040DAD2))
	branch CONVERT(Mem728[fp + 0xFFFFEFD0<32> + r4_726 + 0xEFD<32>:byte], byte, word32) != 0<32> l0040DAA4
l0040DAA4:
	Mem733[r19_702 + r18_731:byte] = SLICE(r4_726, byte, 0)
	r19_734 = r19_702 + 1<32>
l0040DACE:
	r19_735 = r18_731
l0040DA7A:
	r3_1920 = PHI((r3_526, l0040DA76), (r3_1919, l0040DA90))
	r2_1882 = PHI((r2_502, l0040DA76), (r2_1881, l0040DA90))
	r10_1815 = PHI((r10_1802, l0040DA76), (r10_1814, l0040DA90))
	r9_1768 = PHI((r9_1755, l0040DA76), (r9_1767, l0040DA90))
	r12_1702 = PHI((r12_486, l0040DA76), (r12_1701, l0040DA90))
	r11_1259 = PHI((r11_798, l0040DA76), (r11_1258, l0040DA90))
	Mem737 = PHI((Mem689, l0040DA76), (Mem761, l0040DA90))
	r7_738 = Mem737[r4 + 4<32>:word32]
	branch r7_738 >=u Mem737[r4 + 0x68<32>:word32] l0040DADC
l0040DADC:
	r2_744 = fn0040DC0C(r4, out r3_746, out r4_747, out r6_4256, out r8_4257, out r9_752, out r10_741, out r11_742, out r12_743)
l0040DA86:
	Mem754[r4 + 4<32>:byte] = SLICE(r7_738, byte, 0) + 1<8>
	r4_755 = CONVERT(Mem754[r7_738:byte], byte, word32)
l0040DA90:
	r3_1919 = PHI((r3_1920, l0040DA86), (r3_746, l0040DADC))
	r2_1881 = PHI((r2_1882, l0040DA86), (r2_744, l0040DADC))
	r10_1814 = PHI((r10_1815, l0040DA86), (r10_741, l0040DADC))
	r9_1767 = PHI((r9_1768, l0040DA86), (r9_752, l0040DADC))
	r12_1701 = PHI((r12_1702, l0040DA86), (r12_743, l0040DADC))
	r11_1258 = PHI((r11_1259, l0040DA86), (r11_742, l0040DADC))
	Mem761 = PHI((Mem754, l0040DA86), (Mem737, l0040DADC))
	r4_759 = PHI((r4_755, l0040DA86), (r4_747, l0040DADC))
	branch CONVERT(Mem761[fp + 0xFFFFEFD0<32> + r4_759 + 0xEFD<32>:byte], byte, word32) != 0<32> l0040DA7A
l0040DA9C:
	r8_763 = 0<32>
	r20_764 = 0<32>
	r19_765 = 0<32>
l0040DA18:
	r2_801 = malloc(r0, r22_766, r11_798, out r3_803, out r4_804, out r6_806, out r8_4253, out r9_809, out r10_799, out r11_800)
	r19_810 = r4_804
	branch r4_804 == 0<32> l0040DBF8
l0040DA22:
	r8_811 = 0<32>
l0040DA24:
	r3_1915 = PHI((r3_803, l0040DA22), (r3_1916, l0040DA66))
	r2_1877 = PHI((r2_801, l0040DA22), (r2_1878, l0040DA66))
	r10_1810 = PHI((r10_799, l0040DA22), (r10_1811, l0040DA66))
	r9_1763 = PHI((r9_809, l0040DA22), (r9_1764, l0040DA66))
	r12_1697 = PHI((r12_486, l0040DA22), (r12_1698, l0040DA66))
	r18_1087 = PHI((r18_695, l0040DA22), (r18_1086, l0040DA66))
	r11_856 = PHI((r11_800, l0040DA22), (r11_1959, l0040DA66))
	r22_849 = PHI((r22_766, l0040DA22), (r22_1957, l0040DA66))
	r19_845 = PHI((r19_810, l0040DA22), (r19_877, l0040DA66))
	r8_817 = PHI((r8_811, l0040DA22), (r8_875, l0040DA66))
	Mem813 = PHI((Mem689, l0040DA22), (Mem846, l0040DA66))
	r7_814 = Mem813[r4 + 4<32>:word32]
	branch r7_814 >=u Mem813[r4 + 0x68<32>:word32] l0040DA6C
l0040DA6C:
	r2_823 = fn0040DC0C(r4, out r3_825, out r4_826, out r6_4254, out r8_830, out r9_831, out r10_820, out r11_821, out r12_822)
	r18_832 = r8_817
l0040DA30:
	Mem834[r4 + 4<32>:byte] = SLICE(r7_814, byte, 0) + 1<8>
	r4_835 = CONVERT(Mem834[r7_814:byte], byte, word32)
l0040DA3A:
	r3_1914 = PHI((r3_1915, l0040DA30), (r3_825, l0040DA6C))
	r2_1876 = PHI((r2_1877, l0040DA30), (r2_823, l0040DA6C))
	r10_1809 = PHI((r10_1810, l0040DA30), (r10_820, l0040DA6C))
	r9_1762 = PHI((r9_1763, l0040DA30), (r9_831, l0040DA6C))
	r12_1696 = PHI((r12_1697, l0040DA30), (r12_822, l0040DA6C))
	r18_1086 = PHI((r18_1087, l0040DA30), (r18_832, l0040DA6C))
	r11_855 = PHI((r11_856, l0040DA30), (r11_821, l0040DA6C))
	r8_842 = PHI((r8_817, l0040DA30), (r8_830, l0040DA6C))
	Mem840 = PHI((Mem834, l0040DA30), (Mem819, l0040DA6C))
	r4_838 = PHI((r4_835, l0040DA30), (r4_826, l0040DA6C))
	branch CONVERT(Mem840[fp + 0xFFFFEFD0<32> + r4_838 + 0xEFD<32>:byte], byte, word32) != 0<32> l0040DA4A
l0040DA4A:
	Mem846[r8_842 + r19_845:byte] = SLICE(r4_838, byte, 0)
	r20_843 = r8_842 + 1<32>
	r4_847 = r19_845
	branch r22_849 != r20_843 l0040DA66
l0040DA58:
	r22_850 = r22_849 << 1<32>
	r22_851 = r22_850 + 1<32>
	r2_859 = realloc(r0, r19_845, r22_850 + 1<32>, r11_855, out r3_861, out r4_862, out r6_864, out r8_4255, out r9_867, out r10_857, out r11_858, out r12_868)
	branch r4_862 == 0<32> l0040DC08
l0040DC08:
	r20_873 = 0<32>
l0040DA66:
	r11_1959 = PHI((r11_855, l0040DA4A), (r11_858, l0040DA58))
	r22_1957 = PHI((r22_849, l0040DA4A), (r22_851, l0040DA58))
	r3_1916 = PHI((r3_1914, l0040DA4A), (r3_861, l0040DA58))
	r2_1878 = PHI((r2_1876, l0040DA4A), (r2_859, l0040DA58))
	r10_1811 = PHI((r10_1809, l0040DA4A), (r10_857, l0040DA58))
	r9_1764 = PHI((r9_1762, l0040DA4A), (r9_867, l0040DA58))
	r12_1698 = PHI((r12_1696, l0040DA4A), (r12_868, l0040DA58))
	r4_876 = PHI((r4_847, l0040DA4A), (r4_862, l0040DA58))
	r8_875 = r20_843
	r19_877 = r4_876
l0040DA46:
	r3_1913 = PHI((r3_1914, l0040DA3A), (r3_1917, l0040DACE))
	r2_1875 = PHI((r2_1876, l0040DA3A), (r2_1879, l0040DACE))
	r10_1808 = PHI((r10_1809, l0040DA3A), (r10_1812, l0040DACE))
	r9_1761 = PHI((r9_1762, l0040DA3A), (r9_1765, l0040DACE))
	r12_1695 = PHI((r12_1696, l0040DA3A), (r12_1699, l0040DACE))
	r11_1255 = PHI((r11_855, l0040DA3A), (r11_1256, l0040DACE))
	r8_1099 = PHI((r8_842, l0040DA3A), (r8_1100, l0040DACE))
	r18_1085 = PHI((r18_1086, l0040DA3A), (r18_731, l0040DACE))
	r19_1076 = PHI((r19_845, l0040DA3A), (r19_735, l0040DACE))
	Mem1020 = PHI((Mem840, l0040DA3A), (Mem728, l0040DACE))
	r20_878 = 0<32>
l0040D8E2:
	r20_880 = r18_695
	branch r7_692 == 0<32> l0040D8F6
l0040D8E8:
	r2_884 = malloc(r0, r22_766 << 2<32>, r11_798, out r3_886, out r4_887, out r6_889, out r8_4252, out r9_892, out r10_882, out r11_883)
	r20_893 = r4_887
	branch r4_887 == 0<32> l0040DBF8
l0040DBF8:
	r11_1263 = PHI((r11_883, l0040D8E8), (r11_800, l0040DA18))
	r6_1000 = PHI((r6_889, l0040D8E8), (r6_806, l0040DA18))
	r20_894 = 0<32>
l0040D8F6:
	r20_1961 = PHI((r20_880, l0040D8E2), (r20_893, l0040D8E8))
	r3_1904 = PHI((r3_526, l0040D8E2), (r3_886, l0040D8E8))
	r2_1866 = PHI((r2_502, l0040D8E2), (r2_884, l0040D8E8))
	r10_1801 = PHI((r10_1802, l0040D8E2), (r10_882, l0040D8E8))
	r9_1754 = PHI((r9_1755, l0040D8E2), (r9_892, l0040D8E8))
	r11_1252 = PHI((r11_798, l0040D8E2), (r11_883, l0040D8E8))
	Mem897[&tLoc014C:word32] = 0<32>
	r8_895 = 0<32>
l0040D8FC:
	r3_1903 = PHI((r3_1904, l0040D8F6), (r3_941, l0040D9B8), (r3_941, l0040D9E6), (r3_941, l0040D9EC), (r3_977, l0040DA04))
	r2_1865 = PHI((r2_1866, l0040D8F6), (r2_935, l0040D9B8), (r2_935, l0040D9E6), (r2_935, l0040D9EC), (r2_975, l0040DA04))
	r10_1800 = PHI((r10_1801, l0040D8F6), (r10_939, l0040D9B8), (r10_939, l0040D9E6), (r10_939, l0040D9EC), (r10_973, l0040DA04))
	r9_1753 = PHI((r9_1754, l0040D8F6), (r9_938, l0040D9B8), (r9_938, l0040D9E6), (r9_938, l0040D9EC), (r9_983, l0040DA04))
	r12_1685 = PHI((r12_486, l0040D8F6), (r12_1684, l0040D9B8), (r12_1684, l0040D9E6), (r12_1684, l0040D9EC), (r12_984, l0040DA04))
	r11_1251 = PHI((r11_1252, l0040D8F6), (r11_940, l0040D9B8), (r11_940, l0040D9E6), (r11_940, l0040D9EC), (r11_974, l0040DA04))
	r22_962 = PHI((r22_766, l0040D8F6), (r22_962, l0040D9B8), (r22_962, l0040D9E6), (r22_962, l0040D9EC), (r22_964, l0040DA04))
	r20_951 = PHI((r20_1961, l0040D8F6), (r20_951, l0040D9B8), (r20_951, l0040D9E6), (r20_951, l0040D9EC), (r20_1005, l0040DA04))
	r8_904 = PHI((r8_895, l0040D8F6), (r8_943, l0040D9B8), (r8_959, l0040D9E6), (r8_959, l0040D9EC), (r8_982, l0040DA04))
	Mem900 = PHI((Mem898, l0040D8F6), (Mem931, l0040D9B8), (Mem956, l0040D9E6), (Mem956, l0040D9EC), (Mem965, l0040DA04))
	r7_901 = Mem900[r4 + 4<32>:word32]
	branch r7_901 >=u Mem900[r4 + 0x68<32>:word32] l0040DA0A
l0040DA0A:
	r2_910 = fn0040DC0C(r4, out r3_912, out r4_913, out r6_915, out r8_917, out r9_918, out r10_907, out r11_908, out r12_909)
l0040D908:
	Mem921[r4 + 4<32>:byte] = SLICE(r7_901, byte, 0) + 1<8>
	r6_920 = r7_901 + 1<32>
	r4_922 = CONVERT(Mem921[r7_901:byte], byte, word32)
l0040D912:
	r3_1902 = PHI((r3_1903, l0040D908), (r3_912, l0040DA0A))
	r2_1864 = PHI((r2_1865, l0040D908), (r2_910, l0040DA0A))
	r10_1799 = PHI((r10_1800, l0040D908), (r10_907, l0040DA0A))
	r9_1752 = PHI((r9_1753, l0040D908), (r9_918, l0040DA0A))
	r12_1684 = PHI((r12_1685, l0040D908), (r12_909, l0040DA0A))
	r11_1250 = PHI((r11_1251, l0040D908), (r11_908, l0040DA0A))
	r6_1115 = PHI((r6_920, l0040D908), (r6_915, l0040DA0A))
	r4_927 = PHI((r4_922, l0040D908), (r4_913, l0040DA0A))
	r8_925 = PHI((r8_904, l0040D908), (r8_917, l0040DA0A))
	branch CONVERT(Mem926[fp + 0xFFFFEFD0<32> + r4_927 + 0xEFD<32>:byte], byte, word32) != 0<32> l0040D9B8
l0040D9B8:
	Mem931[&tLoc0151:byte] = SLICE(r4_927, byte, 0)
	r2_935 = mbrtowc(fp - 0x150<32>, &tLoc0151, 1<32>, &tLoc014C, out r3_941, out r4_937, out r6_945, out r8_943, out r9_938, out r10_939, out r11_940)
	branch r4_937 == 0xFFFFFFFE<32> l0040D8FC
l0040D9D4:
	branch r4_937 == 0xFFFFFFFF<32> l0040DB4A
l0040DB4A:
	r19_949 = 0<32>
l0040D9DA:
	branch r20_951 == 0<32> l0040D9E6
l0040D9DE:
	Mem953[r20_951 + r8_943 * 4<32>:word32] = 0xFFFFFFFF<32>
	r8_954 = r8_943 + 1<32>
l0040D9E6:
	r8_959 = PHI((r8_943, l0040D9DA), (r8_954, l0040D9DE))
	Mem956 = PHI((Mem931, l0040D9DA), (Mem953, l0040D9DE))
	branch false l0040D8FC
l0040D9EC:
	branch r8_959 != r22_962 l0040D8FC
l0040D9F0:
	r22_963 = r8_959 << 1<32>
	r22_964 = r22_963 + 1<32>
	r2_975 = realloc(r0, r20_951, r22_963 + 1<32> << 2<32>, r11_940, out r3_977, out r4_978, out r6_980, out r8_982, out r9_983, out r10_973, out r11_974, out r12_984)
	branch r4_978 == 0<32> l0040DBFA
l0040DBFA:
	r20_1310 = PHI((r20_894, l0040DBF8), (r20_951, l0040D9F0))
	r11_1262 = PHI((r11_1263, l0040DBF8), (r11_974, l0040D9F0))
	r6_999 = PHI((r6_1000, l0040DBF8), (r6_980, l0040D9F0))
	r19_989 = 0<32>
l0040DBFC:
	r20_1309 = PHI((r20_873, l0040DC08), (r20_1310, l0040DBFA))
	r11_1261 = PHI((r11_858, l0040DC08), (r11_1262, l0040DBFA))
	r19_1226 = PHI((r19_845, l0040DC08), (r19_989, l0040DBFA))
	r6_998 = PHI((r6_864, l0040DC08), (r6_999, l0040DBFA))
	branch r6_998 != 0<32> l0040DC04
l0040DC00_1:
l0040DC04:
l0040DA04:
	r20_1005 = r4_978
l0040D922:
	r19_1008 = 0<32>
	r4_1010 = mbsinit(&tLoc014C)
	branch r4_1010 == 0<32> l0040D7B4
l0040D92E:
	r18_1012 = r8_925
l0040D930:
	r3_1901 = PHI((r3_1902, l0040D92E), (r3_1913, l0040DA46), (r3_1919, l0040DA9C))
	r2_1863 = PHI((r2_1864, l0040D92E), (r2_1875, l0040DA46), (r2_1881, l0040DA9C))
	r10_1798 = PHI((r10_1799, l0040D92E), (r10_1808, l0040DA46), (r10_1814, l0040DA9C))
	r9_1751 = PHI((r9_1752, l0040D92E), (r9_1761, l0040DA46), (r9_1767, l0040DA9C))
	r12_1683 = PHI((r12_1684, l0040D92E), (r12_1695, l0040DA46), (r12_1701, l0040DA9C))
	r11_1254 = PHI((r11_1250, l0040D92E), (r11_1255, l0040DA46), (r11_1258, l0040DA9C))
	r8_1098 = PHI((r8_925, l0040D92E), (r8_1099, l0040DA46), (r8_763, l0040DA9C))
	r18_1084 = PHI((r18_1012, l0040D92E), (r18_1085, l0040DA46), (r18_695, l0040DA9C))
	r20_1081 = PHI((r20_951, l0040D92E), (r20_878, l0040DA46), (r20_764, l0040DA9C))
	r19_1075 = PHI((r19_1008, l0040D92E), (r19_1076, l0040DA46), (r19_765, l0040DA9C))
	Mem1019 = PHI((Mem926, l0040D92E), (Mem1020, l0040DA46), (Mem761, l0040DA9C))
	r7_1022 = Mem1019[r4 + 4<32>:word32]
	branch Mem1019[r4 + 0x68<32>:word32] == 0<32> l0040D940
l0040D93A:
	Mem1024[r4 + 4<32>:byte] = SLICE(r7_1022, byte, 0) + 0xFF<8>
l0040D940:
	Mem1026 = PHI((Mem1024, l0040D93A), (Mem1019, l0040D930))
	r7_1030 = Mem1026[r4 + 4<32>:word32] - Mem1026[r4 + 8<32>:word32]
	r4_1029 = Mem1026[r4 + 0x7C<32>:word32]
	r6_1033 = r7_1030 + Mem1026[r4 + 0x78<32>:word32]
	r7_1036 = CONVERT(r6_1033 <u r7_1030, bool, word32) + ((r7_1030 >> 0x1F<32>) + r4_1029)
	r5_1037 = r6_1033 | r7_1036
	branch r5_1037 == 0<32> l0040D974
l0040D966:
	branch dwLoc017C_2090 != 0x23<32> l0040DBCE
l0040DBCE:
	branch r7_1036 == 0<32> l0040DBDC
l0040D96A:
	branch r5_1037 != r6_1033 l0040D974
l0040D96E:
	branch r6_1033 == r7_1036 l0040DBF0
l0040DBF0:
	branch r7_1036 == 0<32> l0040D6B4
l0040DBF6:
l0040DBD2:
	branch r21_304 != 1<32> l0040DAE2
l0040DAE2:
l0040DBD6:
	Mem1091[r18_1084:word32] = r20_1081
l0040DBD8:
	Mem1349 = PHI((Mem1091, l0040DBD6), (Mem1078, l0040DAE2))
	branch dwLoc017C_2090 == 0x23<32> l0040D6B4
l0040DBDC:
	Mem1348 = PHI((Mem1026, l0040DBCE), (Mem1349, l0040DBD8))
	branch r20_1081 == 0<32> l0040DBE4
l0040DBE0:
	Mem1103[r20_1081 + r8_1098 * 4<32>:word32] = 0<32>
l0040DBE4:
	Mem1347 = PHI((Mem1348, l0040DBDC), (Mem1103, l0040DBE0))
	branch r19_1075 == 0<32> l0040D6B4
l0040DBE8:
	Mem1108[r19_1075 + r8_1098:byte] = 0<8>
l0040D808:
	branch r7_680 == 0<32> l0040D7B4
l0040D7B4:
	r4_4075 = PHI((r4_157, l0040D5A8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_157, l0040D5B8), (r4_449, l0040D7AA), (r4_654, l0040D808), (r4_1010, l0040D922), (r4_937, l0040DB4A))
	r3_4055 = PHI((r3_534, l0040D5A8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_534, l0040D5B8), (r3_457, l0040D7AA), (r3_526, l0040D808), (r3_1902, l0040D922), (r3_941, l0040DB4A))
	r20_1300 = PHI((r20_1284, l0040D5A8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D5B8), (r20_1284, l0040D7AA), (r20_1284, l0040D808), (r20_951, l0040D922), (r20_951, l0040DB4A))
	r11_1249 = PHI((r11_1711, l0040D5A8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_1711, l0040D5B8), (r11_454, l0040D7AA), (r11_798, l0040D808), (r11_1250, l0040D922), (r11_940, l0040DB4A))
	r19_1217 = PHI((r19_1201, l0040D5A8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D5B8), (r19_1201, l0040D7AA), (r19_1201, l0040D808), (r19_1008, l0040D922), (r19_949, l0040DB4A))
	r6_1113 = PHI((r6_178, l0040D5A8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_180, l0040D5B8), (r6_451, l0040D7AA), (r6_1114, l0040D808), (r6_1115, l0040D922), (r6_945, l0040DB4A))
	r7_1112 = 0xFFFFFFFF<32>
	branch r6_1113 != 0<32> l0040D7BC
l0040D7B8_1:
l0040D7BC:
l0040D80A:
	branch r7_680 != 0x2D<32> l0040D824
l0040D80E:
	r6_1120 = CONVERT(Mem679[r16_678 + 1<32>:byte], byte, word32)
	branch r6_1120 == 0<32> l0040D824
l0040D812:
	branch r6_1120 == 0x1D<32> l0040D824
l0040D816:
	r7_1121 = CONVERT(Mem679[r16_678 - 1<32>:byte], byte, word32)
l0040D81A:
	Mem1133 = PHI((Mem679, l0040D816), (Mem1128, l0040D9A0))
	r7_1124 = PHI((r7_1121, l0040D816), (r7_1126, l0040D9A0))
	r5_1123 = r22_655 ^ 1<32>
	branch r7_1124 < r6_1120 l0040D9A0
l0040D9A0:
	r7_1126 = r7_1124 + 1<32>
	Mem1128[r7_1126 + r8_660:byte] = SLICE(r5_1123, byte, 0)
l0040D822:
	r16_1130 = r16_678 + 1<32>
l0040D824:
	Mem1132 = PHI((Mem679, l0040D80A), (Mem679, l0040D80E), (Mem679, l0040D812), (Mem1133, l0040D822))
	r16_1131 = PHI((r16_678, l0040D80A), (r16_678, l0040D80E), (r16_678, l0040D812), (r16_1130, l0040D822))
	r6_1143 = 1<32> - r22_655
	Mem1144[fp + 0xFFFFEFD0<32> + CONVERT(Mem1132[r16_1131:byte], byte, word32) + 0xEFD<32>:byte] = SLICE(r6_1143, byte, 0)
	r16_1138 = r16_1131 + 1<32>
l0040D6A4:
	branch dwLoc0184_2062 == 1<32> l0040DAF8
l0040D6A8:
	branch dwLoc0184_2062 < 1<32> l0040D6B4
l0040D6AC:
	branch dwLoc0184_2062 <u 0xFFFFFFB8<32> l0040DAF8
l0040DAF8:
	r2_1162 = __floatscan(r0, r2_502, r4, r21_304, 0<32>, r12_486, out r3_1165, out r4_1166, out r5_1167, out r6_4230, out r7_4231, out r10_1156, out r11_1157, out r12_1158)
	r7_1176 = Mem564[r4 + 4<32>:word32] - Mem564[r4 + 8<32>:word32]
	r6_1179 = r7_1176 + Mem564[r4 + 0x78<32>:word32]
	r7_1183 = CONVERT(r6_1179 <u r7_1176, bool, word32) + ((r7_1176 >> 0x1F<32>) + Mem564[r4 + 0x7C<32>:word32]) | r6_1179
	r8_1184 = r4_1166
	r9_1185 = r5_1167
	branch r7_1183 == 0<32> l0040D974
l0040D974:
	r4_4073 = PHI((r4_1166, l0040DAF8), (r4_4075, l0040D7BC), (r4_549, l0040D84C), (r4_1029, l0040D940), (r4_1029, l0040D96A), (r4_1029, l0040D96E))
	r3_4053 = PHI((r3_1165, l0040DAF8), (r3_4055, l0040D7BC), (r3_548, l0040D84C), (r3_1901, l0040D940), (r3_1901, l0040D96A), (r3_1901, l0040D96E))
	r20_1276 = PHI((r20_1284, l0040DAF8), (r20_1300, l0040D7BC), (r20_1284, l0040D84C), (r20_1081, l0040D940), (r20_1081, l0040D96A), (r20_1081, l0040D96E))
	r11_1247 = PHI((r11_1157, l0040DAF8), (r11_1249, l0040D7BC), (r11_553, l0040D84C), (r11_1254, l0040D940), (r11_1254, l0040D96A), (r11_1254, l0040D96E))
	r19_1193 = PHI((r19_1201, l0040DAF8), (r19_1217, l0040D7BC), (r19_1201, l0040D84C), (r19_1075, l0040D940), (r19_1075, l0040D96A), (r19_1075, l0040D96E))
	r7_1190 = PHI((r7_1183, l0040DAF8), (r7_1112, l0040D7BC), (r7_568, l0040D84C), (r7_1036, l0040D940), (r7_1036, l0040D96A), (r7_1036, l0040D96E))
	branch r7_1190 == 0<32> l0040D4E0
l0040D97A:
	r20_1275 = PHI((r20_1276, l0040D974), (r20_1309, l0040DC04))
	r11_1246 = PHI((r11_1247, l0040D974), (r11_1261, l0040DC04))
	r19_1192 = PHI((r19_1193, l0040D974), (r19_1226, l0040DC04))
	free(r0, r19_1192, r11_1246, out r3_4232, out r4_4233, out r6_4234, out r7_4235, out r8_4236, out r9_4237, out r10_4238, out r11_1266)
	free(r0, r20_1275, r11_1266, out r3_1316, out r4_1317, out r6_4239, out r7_1320, out r8_4240, out r9_4241, out r10_4242, out r11_4243)
l0040DB28:
	branch r18_1649 == 0<32> l0040D6B4
l0040DB2C:
	branch r21_304 == 1<32> l0040DB42
l0040DB30:
	branch r21_304 == 2<32> l0040DB42
l0040DB42:
	Mem1326[r18_1649:word32] = r4_1166
	Mem1328[r18_1649 + 4<i32>:word32] = r5_1167
l0040DB34:
	branch r21_304 != 0<32> l0040D6B4
l0040DB38:
	r8_1335 = __truncdfsf2(r4_1166, r5_1167, out r9_1336, out r10_1329)
l0040D6B4:
	r20_1989 = PHI((r20_1284, l0040D6A8), (r20_1284, l0040D6AC), (r20_1284, l0040DB28), (r20_1284, l0040DB34), (r20_1284, l0040DB38), (r20_1284, l0040DB42), (r20_1284, l0040D7C8), (r20_1284, l0040D890), (r20_1284, l0040DAEE), (r20_1081, l0040DBF0), (r20_1081, l0040DBE4), (r20_1081, l0040DBE8), (r20_1081, l0040DBD8), (r20_1284, l0040D846), (r20_1284, l0040D89C), (r20_1284, l0040D8AC))
	r19_1976 = PHI((r19_1201, l0040D6A8), (r19_1201, l0040D6AC), (r19_1201, l0040DB28), (r19_1201, l0040DB34), (r19_1201, l0040DB38), (r19_1201, l0040DB42), (r19_1201, l0040D7C8), (r19_1201, l0040D890), (r19_1201, l0040DAEE), (r19_1075, l0040DBF0), (r19_1075, l0040DBE4), (r19_1075, l0040DBE8), (r19_1075, l0040DBD8), (r19_1201, l0040D846), (r19_1201, l0040D89C), (r19_1201, l0040D8AC))
	r3_1897 = PHI((r3_526, l0040D6A8), (r3_526, l0040D6AC), (r3_1165, l0040DB28), (r3_1165, l0040DB34), (r3_1165, l0040DB38), (r3_1165, l0040DB42), (r3_526, l0040D7C8), (r3_548, l0040D890), (r3_548, l0040DAEE), (r3_1901, l0040DBF0), (r3_1901, l0040DBE4), (r3_1901, l0040DBE8), (r3_1901, l0040DBD8), (r3_526, l0040D846), (r3_526, l0040D89C), (r3_526, l0040D8AC))
	r2_1859 = PHI((r2_502, l0040D6A8), (r2_502, l0040D6AC), (r2_1162, l0040DB28), (r2_1162, l0040DB34), (r2_1162, l0040DB38), (r2_1162, l0040DB42), (r2_502, l0040D7C8), (r2_555, l0040D890), (r2_555, l0040DAEE), (r2_1863, l0040DBF0), (r2_1863, l0040DBE4), (r2_1863, l0040DBE8), (r2_1863, l0040DBD8), (r2_502, l0040D846), (r2_502, l0040D89C), (r2_502, l0040D8AC))
	r10_1792 = PHI((r10_1794, l0040D6A8), (r10_1794, l0040D6AC), (r10_1156, l0040DB28), (r10_1156, l0040DB34), (r10_1329, l0040DB38), (r10_1156, l0040DB42), (r10_1794, l0040D7C8), (r10_552, l0040D890), (r10_552, l0040DAEE), (r10_1798, l0040DBF0), (r10_1798, l0040DBE4), (r10_1798, l0040DBE8), (r10_1798, l0040DBD8), (r10_1794, l0040D846), (r10_1794, l0040D89C), (r10_1794, l0040D8AC))
	r9_1746 = PHI((r9_1748, l0040D6A8), (r9_1748, l0040D6AC), (r9_1185, l0040DB28), (r9_1185, l0040DB34), (r9_1336, l0040DB38), (r9_1185, l0040DB42), (r9_1748, l0040D7C8), (r9_576, l0040D890), (r9_576, l0040DAEE), (r9_1751, l0040DBF0), (r9_1751, l0040DBE4), (r9_1751, l0040DBE8), (r9_1751, l0040DBD8), (r9_1748, l0040D846), (r9_1748, l0040D89C), (r9_1748, l0040D8AC))
	r11_1720 = PHI((r11_798, l0040D6A8), (r11_798, l0040D6AC), (r11_1157, l0040DB28), (r11_1157, l0040DB34), (r11_1157, l0040DB38), (r11_1157, l0040DB42), (r11_798, l0040D7C8), (r11_553, l0040D890), (r11_553, l0040DAEE), (r11_1254, l0040DBF0), (r11_1254, l0040DBE4), (r11_1254, l0040DBE8), (r11_1254, l0040DBD8), (r11_798, l0040D846), (r11_798, l0040D89C), (r11_798, l0040D8AC))
	r12_1679 = PHI((r12_486, l0040D6A8), (r12_486, l0040D6AC), (r12_1158, l0040DB28), (r12_1158, l0040DB34), (r12_1158, l0040DB38), (r12_1158, l0040DB42), (r12_486, l0040D7C8), (r12_554, l0040D890), (r12_554, l0040DAEE), (r12_1683, l0040DBF0), (r12_1683, l0040DBE4), (r12_1683, l0040DBE8), (r12_1683, l0040DBD8), (r12_486, l0040D846), (r12_486, l0040D89C), (r12_486, l0040D8AC))
	r8_1660 = PHI((r8_1662, l0040D6A8), (r8_1662, l0040D6AC), (r8_1184, l0040DB28), (r8_1184, l0040DB34), (r8_1335, l0040DB38), (r8_1184, l0040DB42), (r8_1662, l0040D7C8), (r8_574, l0040D890), (r8_609, l0040DAEE), (r8_1098, l0040DBF0), (r8_1098, l0040DBE4), (r8_1098, l0040DBE8), (r8_1098, l0040DBD8), (r8_1662, l0040D846), (r8_1662, l0040D89C), (r8_1662, l0040D8AC))
	r16_1559 = PHI((r16_266, l0040D6A8), (r16_266, l0040D6AC), (r16_266, l0040DB28), (r16_266, l0040DB34), (r16_266, l0040DB38), (r16_266, l0040DB42), (r16_266, l0040D7C8), (r16_266, l0040D890), (r16_266, l0040DAEE), (r16_1571, l0040DBF0), (r16_1571, l0040DBE4), (r16_1571, l0040DBE8), (r16_1571, l0040DBD8), (r16_266, l0040D846), (r16_266, l0040D89C), (r16_266, l0040D8AC))
	r18_1409 = PHI((r18_1649, l0040D6A8), (r18_1649, l0040D6AC), (r18_1649, l0040DB28), (r18_1649, l0040DB34), (r18_1649, l0040DB38), (r18_1649, l0040DB42), (r18_1649, l0040D7C8), (r18_1649, l0040D890), (r18_1649, l0040DAEE), (r18_1084, l0040DBF0), (r18_1084, l0040DBE4), (r18_1084, l0040DBE8), (r18_1084, l0040DBD8), (r18_1649, l0040D846), (r18_1649, l0040D89C), (r18_1649, l0040D8AC))
	Mem1345 = PHI((Mem564, l0040D6A8), (Mem564, l0040D6AC), (Mem564, l0040DB28), (Mem564, l0040DB34), (Mem1337, l0040DB38), (Mem1328, l0040DB42), (Mem564, l0040D7C8), (Mem615, l0040D890), (Mem564, l0040DAEE), (Mem1026, l0040DBF0), (Mem1347, l0040DBE4), (Mem1108, l0040DBE8), (Mem1349, l0040DBD8), (Mem564, l0040D846), (Mem564, l0040D89C), (Mem564, l0040D8AC))
	r4_1352 = Mem1345[r4 + 0x7C<32>:word32]
	r23_1407 = Mem1345[r4 + 4<32>:word32] - Mem1345[r4 + 8<32>:word32] + Mem1345[r4 + 0x78<32>:word32] + r23_1370
	branch r18_1409 == 0<32> l0040DBC8
l0040D6E8:
l0040D50E:
	__shlim(r4, 0<32>, 0<32>, out r8_1428, out r9_1429, out r10_1424, out r11_1425)
	r16_1421 = r16_81 + CONVERT(r7_83 == 0x25<32>, bool, word32)
	r7_1431 = Mem82[r4 + 4<32>:word32]
	branch r7_1431 >=u Mem82[r4 + 0x68<32>:word32] l0040D562
l0040D562:
	r2_1442 = __shgetc(r4, out r3_1443, out r4_1435, out r5_4218, out r6_1437, out r7_4219, out r8_1444, out r9_1445, out r10_1439, out r11_1440, out r12_1441)
l0040D528:
	Mem1447[r4 + 4<32>:byte] = SLICE(r7_1431, byte, 0) + 1<8>
	r6_1446 = r7_1431 + 1<32>
	r4_1448 = CONVERT(Mem1447[r7_1431:byte], byte, word32)
l0040D532:
	r3_1895 = PHI((r3_535, l0040D528), (r3_1443, l0040D562))
	r2_1857 = PHI((r2_511, l0040D528), (r2_1442, l0040D562))
	r10_1791 = PHI((r10_1424, l0040D528), (r10_1439, l0040D562))
	r9_1745 = PHI((r9_1429, l0040D528), (r9_1445, l0040D562))
	r11_1719 = PHI((r11_1425, l0040D528), (r11_1440, l0040D562))
	r12_1677 = PHI((r12_1668, l0040D528), (r12_1441, l0040D562))
	r8_1659 = PHI((r8_1428, l0040D528), (r8_1444, l0040D562))
	r6_1473 = PHI((r6_1446, l0040D528), (r6_1437, l0040D562))
	r4_1452 = PHI((r4_1448, l0040D528), (r4_1435, l0040D562))
	Mem1450 = PHI((Mem1447, l0040D528), (Mem82, l0040D562))
	branch r4_1452 == CONVERT(Mem1450[r16_1421:byte], byte, word32) l0040D56A
l0040D56A:
	r23_1457 = r23_324 + 1<32>
l0040D538:
	r7_1463 = Mem1450[r4 + 0x68<32>:word32]
	branch r7_1463 == 0<32> l0040D548
l0040D53E:
	r7_1464 = Mem1450[r4 + 4<32>:word32]
	Mem1466[r4 + 4<32>:byte] = SLICE(r7_1464, byte, 0) + 0xFF<8>
	r7_1465 = r7_1464 + 0xFFFFFFFF<32>
l0040D548:
	r7_1594 = PHI((r7_1463, l0040D538), (r7_1465, l0040D53E))
	branch r4_1452 >= 0<32> l0040D4E0
l0040D54C:
	r7_1471 = 0xFFFFFFFF<32>
	branch r6_1473 != 0<32> l0040D554
l0040D550_1:
l0040D554:
l0040D500:
l0040D4F4:
l0040DB50:
	r16_1478 = PHI((r16_81, l0040D4F4), (r16_81, l0040D500), (r16_1483, l0040DB4E))
	r7_1480 = CONVERT(Mem82[r16_1478 + 1<32>:byte], byte, word32)
	branch r7_1480 == 0x20<32> l0040DB4E
l0040DB56:
	branch r7_1480 <u 0xFFFFFFF2<32> l0040DB4E
l0040DB4E:
	r16_1483 = r16_1478 + 1<32>
l0040DB5E:
	__shlim(r4, 0<32>, 0<32>, out r8_1493, out r9_1494, out r10_1489, out r11_1490)
l0040DB66:
	r3_1892 = PHI((r3_535, l0040DB5E), (r3_1891, l0040DB80), (r3_1891, l0040DB7C))
	r2_1854 = PHI((r2_511, l0040DB5E), (r2_1853, l0040DB80), (r2_1853, l0040DB7C))
	r10_1790 = PHI((r10_1489, l0040DB5E), (r10_1789, l0040DB80), (r10_1789, l0040DB7C))
	r9_1744 = PHI((r9_1494, l0040DB5E), (r9_1743, l0040DB80), (r9_1743, l0040DB7C))
	r11_1718 = PHI((r11_1490, l0040DB5E), (r11_1717, l0040DB80), (r11_1717, l0040DB7C))
	r12_1674 = PHI((r12_1668, l0040DB5E), (r12_1673, l0040DB80), (r12_1673, l0040DB7C))
	r8_1658 = PHI((r8_1493, l0040DB5E), (r8_1657, l0040DB80), (r8_1657, l0040DB7C))
	Mem1496 = PHI((Mem82, l0040DB5E), (Mem1518, l0040DB80), (Mem1518, l0040DB7C))
	r7_1497 = Mem1496[r4 + 4<32>:word32]
	branch r7_1497 >=u Mem1496[r4 + 0x68<32>:word32] l0040D558
l0040D558:
	r2_1508 = __shgetc(r4, out r3_1509, out r4_1501, out r5_4215, out r6_4216, out r7_4217, out r8_1510, out r9_1511, out r10_1505, out r11_1506, out r12_1507)
l0040DB72:
	Mem1513[r4 + 4<32>:byte] = SLICE(r7_1497, byte, 0) + 1<8>
	r4_1514 = CONVERT(Mem1513[r7_1497:byte], byte, word32)
l0040DB7C:
	r3_1891 = PHI((r3_1892, l0040DB72), (r3_1509, l0040D558))
	r2_1853 = PHI((r2_1854, l0040DB72), (r2_1508, l0040D558))
	r10_1789 = PHI((r10_1790, l0040DB72), (r10_1505, l0040D558))
	r9_1743 = PHI((r9_1744, l0040DB72), (r9_1511, l0040D558))
	r11_1717 = PHI((r11_1718, l0040DB72), (r11_1506, l0040D558))
	r12_1673 = PHI((r12_1674, l0040DB72), (r12_1507, l0040D558))
	r8_1657 = PHI((r8_1658, l0040DB72), (r8_1510, l0040D558))
	Mem1518 = PHI((Mem1513, l0040DB72), (Mem1496, l0040D558))
	r4_1515 = PHI((r4_1514, l0040DB72), (r4_1501, l0040D558))
	branch r4_1515 == 0x20<32> l0040DB66
l0040DB80:
	branch r4_1515 <u 0xFFFFFFF2<32> l0040DB66
l0040DB88:
	branch Mem1518[r4 + 0x68<32>:word32] == 0<32> l0040DB98
l0040DB8E:
	Mem1522[r4 + 4<32>:byte] = Mem1518[r4 + 4<32>:byte] + 0xFF<8>
l0040DB98:
	Mem1524 = PHI((Mem1518, l0040DB88), (Mem1522, l0040DB8E))
	r4_1527 = Mem1524[r4 + 0x7C<32>:word32]
	r23_1549 = Mem1524[r4 + 4<32>:word32] - Mem1524[r4 + 8<32>:word32] + Mem1524[r4 + 0x78<32>:word32] + r23_324
l0040DBC6:
	r3_1889 = PHI((r3_1891, l0040DB98), (r3_1895, l0040D56A))
	r2_1851 = PHI((r2_1853, l0040DB98), (r2_1857, l0040D56A))
	r23_1845 = PHI((r23_1549, l0040DB98), (r23_1457, l0040D56A))
	r10_1787 = PHI((r10_1789, l0040DB98), (r10_1791, l0040D56A))
	r9_1741 = PHI((r9_1743, l0040DB98), (r9_1745, l0040D56A))
	r11_1715 = PHI((r11_1717, l0040DB98), (r11_1719, l0040D56A))
	r12_1671 = PHI((r12_1673, l0040DB98), (r12_1677, l0040D56A))
	r8_1655 = PHI((r8_1657, l0040DB98), (r8_1659, l0040D56A))
	r4_1643 = PHI((r4_1527, l0040DB98), (r4_1452, l0040D56A))
	r16_1555 = PHI((r16_1478, l0040DB98), (r16_1421, l0040D56A))
l0040DBC8:
	dwLoc0178_3099 = PHI((dwLoc0178_2015, l0040DBC6), (dwLoc0178_3118, l0040D6B4), (dwLoc0178_3118, l0040D6E8), (dwLoc0178_3118, l0040D72A))
	r20_1980 = PHI((r20_1288, l0040DBC6), (r20_1989, l0040D6B4), (r20_1989, l0040D6E8), (r20_1284, l0040D72A))
	r19_1967 = PHI((r19_1205, l0040DBC6), (r19_1976, l0040D6B4), (r19_1976, l0040D6E8), (r19_1201, l0040D72A))
	r3_1888 = PHI((r3_1889, l0040DBC6), (r3_1897, l0040D6B4), (r3_1897, l0040D6E8), (r3_534, l0040D72A))
	r2_1850 = PHI((r2_1851, l0040DBC6), (r2_1859, l0040D6B4), (r2_1859, l0040D6E8), (r2_510, l0040D72A))
	r23_1844 = PHI((r23_1845, l0040DBC6), (r23_1407, l0040D6B4), (r23_1407, l0040D6E8), (r23_324, l0040D72A))
	r21_1830 = PHI((r21_311, l0040DBC6), (r21_304, l0040D6B4), (r21_304, l0040D6E8), (r21_304, l0040D72A))
	r10_1786 = PHI((r10_1787, l0040DBC6), (r10_1792, l0040D6B4), (r10_1792, l0040D6E8), (r10_1783, l0040D72A))
	r9_1740 = PHI((r9_1741, l0040DBC6), (r9_1746, l0040D6B4), (r9_1746, l0040D6E8), (r9_1737, l0040D72A))
	r11_1714 = PHI((r11_1715, l0040DBC6), (r11_1720, l0040D6B4), (r11_1720, l0040D6E8), (r11_1711, l0040D72A))
	r12_1670 = PHI((r12_1671, l0040DBC6), (r12_1679, l0040D6B4), (r12_1679, l0040D6E8), (r12_1667, l0040D72A))
	r8_1654 = PHI((r8_1655, l0040DBC6), (r8_1660, l0040D6B4), (r8_1660, l0040D6E8), (r8_343, l0040D72A))
	r4_1642 = PHI((r4_1643, l0040DBC6), (r4_1352, l0040D6B4), (r4_1352, l0040D6E8), (r4_342, l0040D72A))
	Mem1639 = PHI((Mem1553, l0040DBC6), (Mem1408, l0040D6B4), (Mem1415, l0040D6E8), (Mem174, l0040D72A))
	r16_1554 = PHI((r16_1555, l0040DBC6), (r16_1559, l0040D6B4), (r16_1559, l0040D6E8), (r16_266, l0040D72A))
	r16_1587 = r16_1554 + 1<32>
l0040D4E0:
	r4_4071 = PHI((r4_121, l0040D4DC), (r4_1452, l0040D548), (r4_1452, l0040D554), (r4_4073, l0040D974), (r4_1317, l0040D97A))
	r3_4050 = PHI((r3_535, l0040D4DC), (r3_1895, l0040D548), (r3_1895, l0040D554), (r3_4053, l0040D974), (r3_1316, l0040D97A))
	r7_1593 = PHI((r7_83, l0040D4DC), (r7_1594, l0040D548), (r7_1471, l0040D554), (r7_1190, l0040D974), (r7_1320, l0040D97A))
	branch r7_1593 == 0<32> l0040D4EA
l0040D4E4:
	__unlockfile(r4, out r4_1619, out r5_4210, out r6_4211, out r7_4212, out r8_4213, out r9_4214)
l0040D4EA:
	r4_4070 = PHI((r4_4071, l0040D4E0), (r4_1619, l0040D4E4))
	r4Out = r4_4070
	r18Out = r18
	r19Out = r19
	return r3_4050
__isoc99_vfscanf_exit:


word32 fn0040DC0C(word32 r4, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31]
// LiveOut: r10 r11 r12 r2 r3 r4 r6 r8 r9
// Trashed: r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040DC0C_entry:
l0040DC0C:
l0040DC0C_thunk___shgetc:
	word32 r4_6
	word32 r6_8
	word32 r10_10
	word32 r11_11
	word32 r12_12
	word32 r3_14
	word32 r8_15
	word32 r9_16
	word32 r5_25
	word32 r7_26
	word32 r2_13 = __shgetc(r4, out r3_14, out r4_6, out r5_25, out r6_8, out r7_26, out r8_15, out r9_16, out r10_10, out r11_11, out r12_12)
	r3Out = r3_14
	r4Out = r4_6
	r6Out = r6_8
	r8Out = r8_15
	r9Out = r9_16
	r10Out = r10_10
	r11Out = r11_11
	r12Out = r12_12
	return r2_13
fn0040DC0C_exit:


word32 stpcpy(word32 r4, word32 r5, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strcpy
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut: r5 r6 r7 r8
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
stpcpy_entry:
	word32 r6
	word32 r8
l0040DC10:
	branch ((r4 ^ r5) & 3<32>) != 0<32> l0040DC80
l0040DC18:
	word32 r7_10
	branch (r5 & 3<32>) == 0<32> l0040DC32
l0040DC1C:
	r7_10 = CONVERT(Mem0[r5:byte], byte, word32)
	Mem11[r4:byte] = SLICE(r7_10, byte, 0)
	branch r7_10 != 0<32> l0040DC2A
l0040DC2A:
	r5 = r5 + 1<32>
	r4 = r4 + 1<32>
	branch (r5 & 3<32>) != 0<32> l0040DC24
l0040DC24:
	r7_10 = CONVERT(Mem17[r5:byte], byte, word32)
	Mem19[r4:byte] = SLICE(r7_10, byte, 0)
	branch r7_10 == 0<32> l0040DC88
l0040DC32:
	r6 = Mem21[r5:word32]
	r8 = r4
	word32 r9_25 = r5
	branch (r6 + 0xFEFEFEFF<32> & ~r6 & 0x80808080<32>) != 0<32> l0040DC80
l0040DC52:
	r8 = r8 + 4<32>
	Mem37[r8 - 4<32>:word32] = r6
	r9_25 = r9_25 + 4<32>
	r6 = Mem37[r9_25:word32]
	branch (r6 + 0xFEFEFEFF<32> & ~r6 & 0x80808080<32>) == 0<32> l0040DC52
l0040DC74:
	r7_10 = CONVERT(Mem37[r9_25:byte], byte, word32)
	Mem48[r8:byte] = SLICE(r7_10, byte, 0)
	r4 = r8
	r5 = r9_25
	branch r7_10 == 0<32> l0040DC88
l0040DC7C:
	r5 = r5 + 1<32>
	r4 = r4 + 1<32>
l0040DC80:
	word32 r7_56 = CONVERT(Mem54[r5:byte], byte, word32)
	Mem58[r4:byte] = SLICE(r7_56, byte, 0)
	branch r7_56 != 0<32> l0040DC7C
l0040DC86:
	r6Out = r6
	r7Out = r7_56
	r8Out = r8
	return r5
l0040DC22:
l0040DC88:
	r6Out = r6
	r7Out = r7_10
	r8Out = r8
	return r5
stpcpy_exit:


void stpncpy(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      strncpy
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
stpncpy_entry:
l0040DC90:
	word32 r16_12 = r4
	branch ((r4 ^ r5) & 3<32>) != 0<32> l0040DD0A
l0040DC9C:
	branch (r5 & 3<32>) == 0<32> l0040DCB2
l0040DCA0:
	branch r6 == 0<32> l0040DD1A
l0040DCA2:
	word32 r7_18 = CONVERT(Mem17[r5:byte], byte, word32)
	Mem20[r16_12:byte] = SLICE(r7_18, byte, 0)
	branch r7_18 == 0<32> l0040DD1A
l0040DCA8:
	r5 = r5 + 1<32>
	r6 = r6 + 0xFFFFFFFF<32>
	r16_12 = r16_12 + 1<32>
	branch (r5 & 3<32>) != 0<32> l0040DCA0
l0040DCB2:
	branch r6 == 0<32> l0040DD1A
l0040DCB4:
	word32 r9_29 = CONVERT(Mem28[r5:byte], byte, word32)
	branch r9_29 == 0<32> l0040DD1A
l0040DCBC:
	branch r6 <u 4<32> l0040DD24
l0040DCC0:
	word32 r4_30 = Mem28[r5:word32]
	branch (~r4_30 & r4_30 + 0xFEFEFEFF<32> & 0x80808080<32>) == 0<32> l0040DCFE
l0040DCFE:
	r6 = r6 + 0xFFFFFFFC<32>
	r5 = r5 + 4<32>
	r16_12 = r16_12 + 4<32>
	branch r6 >=u 4<32> l0040DCE0
l0040DCE0:
	word32 r4_46 = Mem41[r5:word32]
	branch (r4_46 + 0xFEFEFEFF<32> & ~r4_46 & 0x80808080<32>) != 0<32> l0040DD0C
l0040DD0A:
	branch r6 == 0<32> l0040DD1A
l0040DCDE:
l0040DD24:
	Mem57[r16_12:byte] = SLICE(r9_29, byte, 0)
l0040DD12:
	r6 = r6 + 0xFFFFFFFF<32>
	r5 = r5 + 1<32>
	r16_12 = r16_12 + 1<32>
	branch r6 != 0<32> l0040DD0C
l0040DD0C:
	word32 r7_69 = CONVERT(Mem66[r5:byte], byte, word32)
	Mem72[r16_12:byte] = SLICE(r7_69, byte, 0)
	branch r7_69 == 0<32> l0040DD1A
l0040DD1A:
	word32 r10_122
	word32 r9_121
	word32 r7_119
	word32 r8_120
	word32 r6_118
	memset(r16_12, 0<32>, r6, out r6_118, out r7_119, out r8_120, out r9_121, out r10_122)
	return
stpncpy_exit:


word32 __set_thread_area()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __init_tp
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
__set_thread_area_entry:
l0040DD30:
l0040DD36_thunk___syscall:
	word32 r4_9
	word32 r5_15
	word32 r6_16
	word32 r7_17
	word32 r8_18
	word32 r9_19
	__syscall(out r4_9, out r5_15, out r6_16, out r7_17, out r8_18, out r9_19)
	return r4_9
__set_thread_area_exit:


void handler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r10 r17 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
handler_entry:
	ptr32 fp
	struct <anonymous> tLoc20
l0040DD40:
	word32 r4_11
	__errno_location(out r4_11)
	word32 r16_12 = Mem7[r4_11:word32]
	sem_init(0<32>)
	sem_init(0<32>)
	word32 r7_183
	word32 r6_182
	word32 r5_181
	word32 r4_180
	word32 r9_185
	word32 r8_184
	__syscall(out r4_180, out r5_181, out r6_182, out r7_183, out r8_184, out r9_185)
l0040DD62:
	word32 r5_40 = Mem39[0x00432F18<p32>:word32]
	__sync(0<32>)
l0040DD6E:
	word32 r7_43 = 0x00432F18<p32>
	word32 r6_45 = __load_linked_32(Mem42[0x00432F18<p32>:word32])
	branch r5_40 != r6_45 l0040DD84
l0040DD78:
	r7_43 = __store_conditional_32(Mem42[0x00432F18<p32>:word32], fp - 0x38<32>)
	branch r7_43 == 0<32> l0040DD6E
l0040DD84:
	__sync(0<32>)
	branch r7_43 != r6_45 l0040DD62
l0040DD8E:
	__sync(0<32>)
l0040DD94:
	word32 r7_57 = 0x00432F0C<p32>
	word32 r6_59 = __load_linked_32(Mem42[0x00432F0C<p32>:word32])
	branch r5_40 == r6_59 l0040DDE4
l0040DDE4:
	r7_57 = __store_conditional_32(Mem42[0x00432F0C<p32>:word32], 0<32>)
	branch r7_57 == 0<32> l0040DD94
l0040DDF0:
l0040DDA0:
	__sync(0<32>)
	branch r6_59 != r7_57 l0040DDBC
l0040DDAE:
	word32 r8_190
	word32 r9_191
	word32 r7_189
	word32 r6_188
	word32 r5_187
	word32 r4_186
	__syscall(out r4_186, out r5_187, out r6_188, out r7_189, out r8_190, out r9_191)
l0040DDBC:
	sem_wait(fp - 0x30<32>)
	call Mem42[0x00432F08<p32>:word32] (retsize: 0;)
		uses: r4:Mem42[0x00432F04<p32>:word32],Stack +0020:tLoc20
	sem_post(&tLoc20)
	sem_wait(fp - 0x30<32>)
	word32 r4_143
	__errno_location(out r4_143)
	Mem144[r4_143:word32] = r16_12
	return
handler_exit:


word32 __synccall(word32 r0, word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      seteuid
// MayUse:  r0:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r11 r12 r13 r14 r15 r16 r17 r18 r19 r20 r21 r24 ra sp
__synccall_entry:
	ptr32 fp
	struct <anonymous> tLoc0954
	struct <anonymous> tLoc08CC
	struct <anonymous> tLoc0840
l0040DDF2:
	fn0040E008(&tLoc0840, 0<32>, 0x820<32>)
	fn0040E008(&tLoc08CC, 0<32>, 0x8C<32>)
	Mem48[&tLoc08CC:byte] = SLICE(0x0040DD40<p32>, byte, 0)
	Mem50[&tLoc08CC + 132<i32>:byte] = 0<8>
	__block_app_sigs()
	__lock(0x00432F10<p32>)
	__block_all_sigs()
	word32 r7_566
	__pthread_setcancelstate(1<32>, fp - 0x958<32>, out r7_566)
	word32 r7_83 = Mem50[0x00454431<p32>:word32]
	Mem85[0x00432F18<p32>:word32] = r0
	branch r7_83 == 0<32> l0040DF7E
l0040DE50:
	Mem86[0x00432F08<p32>:word32] = r4
	Mem87[0x00432F04<p32>:word32] = r5
	__sync(0<32>)
	Mem89[0x00432F00<p32>:word32] = 1<32>
	__sync(0<32>)
	fn0040E008(&tLoc08CC + 4<i32>, 0xFFFFFFFF<32>, 0x80<32>)
	__libc_sigaction(0x22<32>, &tLoc08CC, 0<32>)
	fn0040E00C()
	word32 r4_132 = fn0040E00C()
	word32 r4_146 = open64(0x900000<32>)
	Mem152[&tLoc0840:byte] = SLICE(r4_146, byte, 0)
	branch r4_146 >= 0<32> l0040DEF8
l0040DEF8:
	word32 r16_153 = Mem152[0x00454433<p32>:word32]
l0040DEFA:
	branch r16_153 != 0<32> l0040DF14
l0040DF14:
	word32 r7_571
	word32 r4_568
	word32 r5_569
	word32 r8_572
	word32 r9_573
	word32 r6_570
	__syscall(out r4_568, out r5_569, out r6_570, out r7_571, out r8_572, out r9_573)
	r16_153 = r16_153 + 0xFFFFFFFF<32>
l0040DEFC:
	word32 r16_168 = 0<32>
l0040DEFE:
	word32 r4_172 = readdir64(&tLoc0840)
	branch r4_172 != 0<32> l0040DF22
l0040DF22:
	branch CONVERT(Mem181[r4_172 + 0x13<32>:byte], byte, word32) >=u 0xFFFFFFC6<32> l0040DEFE
l0040DF2E:
	word32 r4_186 = atoi(r4_172 + 0x13<32>)
	branch r4_186 == r4_132 l0040DEFE
l0040DF3C:
	branch r4_186 == 0<32> l0040DEFE
l0040DF3E:
	__sync(0<32>)
	Mem193[0x00432F0C<p32>:word32] = r4_186
	__sync(0<32>)
	word32 r7_194 = Mem193[0x00432F18<p32>:word32]
l0040DF52:
	branch r7_194 == 0<32> l0040DFA8
l0040DFA8:
	word32 r4_202
	word32 r8_580
	word32 r9_581
	word32 r6_578
	word32 r7_579
	word32 r5_577
	__syscall(out r4_202, out r5_577, out r6_578, out r7_579, out r8_580, out r9_581)
	branch r4_202 == 0xFFFFFFFD<32> l0040DEFE
l0040DFBA:
	word32 r7_218
	word32 r8_586
	word32 r3_582
	word32 r6_585
	word32 r5_584
	word32 r4_583
	__clock_gettime(0<32>, &tLoc0954, out r3_582, out r4_583, out r5_584, out r6_585, out r7_218, out r8_586)
	Mem227[&tLoc0954 + 4<i32>:word32] = r7_218 + 0x989680<32>
	branch r7_218 <= 0xC4FDCC81<32> l0040DFE6
l0040DFD8:
	Mem231[&tLoc0954:word32] = r7_218 + 0x989681<32>
	Mem232[&tLoc0954 + 4<i32>:word32] = r7_218 + 0xC4FDCC80<32>
l0040DFE6:
	word32 r4_242 = fn0040E00C()
	branch r4_242 == 0<32> l0040DEFE
l0040DFFC:
	branch r4_242 == 0xFFFFFFFD<32> l0040DEFE
l0040E004:
	r16_168 = r16_168 + 1<32>
l0040DF54:
	branch Mem193[r7_194 + 4<32>:word32] == r4_186 l0040DEFE
l0040DF5A:
	r7_194 = Mem193[r7_194:word32]
l0040DF08:
	branch r16_168 == 0<32> l0040DF5E
l0040DF5E:
	word32 r6_575
	word32 r8_576
	word32 r4_574
	close(out r4_574, out r6_575, out r8_576)
	word32 r16_267 = Mem181[0x00432F18<p32>:word32]
l0040DF6C:
	branch r16_267 != 0<32> l0040DF8A
l0040DF8A:
	sem_post(r16_267 + 8<32>)
	sem_wait(r16_267 + 0x18<32>)
	r16_267 = Mem181[r16_267:word32]
l0040DF6E:
	Mem297[&tLoc08CC:byte] = 1<8>
	__libc_sigaction(0x22<32>, &tLoc08CC, 0<32>)
l0040DF7E:
	do_setxid(r5)
	word32 r4_330 = Mem329[0x00432F18<p32>:word32]
l0040DFA4:
	branch r4_330 != 0<32> l0040DF9A
l0040DF9A:
	word32 r16_333 = Mem329[r4_330:word32]
	sem_post(r4_330 + 8<32>)
	r4_330 = r16_333
l0040DFA6:
l0040DF0A:
	rewinddir(&tLoc0840)
l0040DEA4:
	__sync(0<32>)
	Mem364[0x00432F00<p32>:word32] = r0
	__sync(0<32>)
	word32 r4_371 = fn0040E00C()
	branch r4_371 != 0xFFFFFFDA<32> l0040DEDE
l0040DECC:
	r4_371 = fn0040E00C()
l0040DEDE:
	word32 r7_567
	__pthread_setcancelstate(r4_371, 0<32>, out r7_567)
	__unlock(0x00432F10<p32>)
	return __restore_sigs()
__synccall_exit:


void fn0040E008(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __synccall
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r25 r5 r6 r7 r8 r9
// Preserved: sp
fn0040E008_entry:
l0040E008:
l0040E008_thunk_memset:
	word32 r6_14
	word32 r7_15
	word32 r8_16
	word32 r9_17
	word32 r10_18
	memset(r4, r5, r6, out r6_14, out r7_15, out r8_16, out r9_17, out r10_18)
	return
fn0040E008_exit:


word32 fn0040E00C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __synccall
// MayUse: 
// LiveOut: r4
// Trashed: r2 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040E00C_entry:
l0040E00C:
l0040E00C_thunk___syscall:
	word32 r4_6
	word32 r5_12
	word32 r6_13
	word32 r7_14
	word32 r8_15
	word32 r9_16
	__syscall(out r4_6, out r5_12, out r6_13, out r7_14, out r8_15, out r9_16)
	return r4_6
fn0040E00C_exit:


word32 readdir64(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r18 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
readdir64_entry:
l0040E010:
	word32 r17_37
	branch Mem11[r4 + 16<i32>:word32] < Mem11[r4 + 20<i32>:word32] l0040E050
l0040E020:
	word32 r4_24
	word32 r5_98
	word32 r6_99
	word32 r7_100
	word32 r8_101
	word32 r9_102
	__syscall(out r4_24, out r5_98, out r6_99, out r7_100, out r8_101, out r9_102)
	branch r4_24 > 0<32> l0040E04C
l0040E04C:
l0040E050:
	r17_37 = r4 + 0x20<32> + Mem34[r4 + 0x10<32>:word32]
	word32 r7_43 = Mem42[r17_37 + 0xC<32>:word32]
	Mem44[r4 + 8<i32>:word32] = Mem34[r17_37 + 8<32>:word32]
	Mem45[r4 + 12<i32>:word32] = r7_43
l0040E034:
	r17_37 = 0<32>
	branch __ins(r4_24 + 2<32>, 0<32>, 1<32>, 1<32>) == 0<32> l0040E064
l0040E040:
	word32 r4_103
	__errno_location(out r4_103)
l0040E064:
	return r17_37
readdir64_exit:


void rewinddir(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
rewinddir_entry:
l0040E070:
	__lock(r4 + 0x18<32>)
	lseek64()
	Mem39[r4 + 8<i32>:word32] = 0<32>
	Mem40[r4 + 12<i32>:word32] = 0<32>
l0040E094_thunk___unlock:
	__unlock(r4 + 0x18<32>)
	return
rewinddir_exit:


word32 open64(word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __synccall
// MayUse:  r5:[0..31]
// LiveOut: r4
// Trashed: r10 r18 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
open64_entry:
l0040E0A0:
	branch !__bit(r5, 6<32>) l0040E0C4
l0040E0B8:
	branch (r5 & 0x4100000<32>) != 0x4100000<32> l0040E0DA
l0040E0C4:
l0040E0DA:
	word32 r8_123
	word32 r4_54
	word32 r6_122
	word32 r5_121
	__syscall_cp(out r4_54, out r5_121, out r6_122, out r8_123)
	branch r4_54 < 0<32> l0040E106
l0040E0F6:
	branch __bit(r5, 0x13<32>) l0040E106
l0040E0FA:
	word32 r4_125
	word32 r5_126
	word32 r6_127
	word32 r7_128
	word32 r8_129
	word32 r9_130
	__syscall(out r4_125, out r5_126, out r6_127, out r7_128, out r8_129, out r9_130)
l0040E106:
	word32 r4_77
	word32 r7_124
	__syscall_ret(r4_54, out r4_77, out r7_124)
	return r4_77
open64_exit:


word32 copysign(word32 r5, word32 r7, ptr32 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      copysignl
// MayUse:  r5:[0..31] r7:[0..31]
// LiveOut: r5 r8
// Trashed: r25 r5 r6 r7 r8
// Preserved: r4 sp
copysign_entry:
	word32 r4
l0040E120:
	word32 r5_12 = __ext(r5, 0<32>, 0x1F<32>) | __ins(r7, 0<32>, 0<32>, 1<32>)
	r8Out = r4
	return r5_12
copysign_exit:


word32 fmod(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fmodl
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4 r5
// Trashed: hi lo r10 r11 r12 r13 r14 r15 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 r20 r21 r22 r23 r30 ra sp
fmod_entry:
l0040E140:
	word32 r5_215
	word32 r4_214
	word32 r7_35 = r7 << 1<32> | r6 >>u 0x1F<32>
	word32 r23_161 = r4
	word32 r22_164 = r5
	branch (r6 << 1<32> | r7_35) == 0<32> l0040E178
l0040E15C:
	word32 r16_40 = __ext(r7, 0<32>, 0x1F<32>)
	branch r16_40 >u 0xFF000000<32> l0040E178
l0040E168:
	branch r16_40 != 0xFF000000<32> l0040E16E
l0040E16A:
	branch r6 != 0<32> l0040E178
l0040E16E:
	word32 r16_132 = __ext(r5, 4<32>, 0xB<32>)
	branch r16_132 != 0x7FF<32> l0040E18C
l0040E18C:
	word32 r6_48 = r5 << 1<32> | r4 >>u 0x1F<32>
	branch r7_35 <u r6_48 l0040E1B4
l0040E19C:
	branch r6_48 != r7_35 l0040E1A2
l0040E19E:
	branch r6 << 1<32> <u r4 << 1<32> l0040E1B4
l0040E1B4:
	word32 r18_124
	word32 r17_121
	branch r16_132 != 0<32> l0040E20C
l0040E20C:
	r17_121 = r4
	r18_124 = __ext(r5, 0<32>, 0x14<32>) | 0x1000000<32>
l0040E1B6:
	word32 r7_61 = r5 << 0xC<32> | r4 >>u 0x14<32>
	word32 r5_62 = r4 << 0xC<32>
l0040E1C4:
	branch r7_61 >= 0<32> l0040E1FC
l0040E1FC:
	r16_132 = r16_132 + 0xFFFFFFFF<32>
	r7_61 = r7_61 << 1<32> | r5_62 >>u 0x1F<32>
	r5_62 = r5_62 << 1<32>
l0040E1C8:
	word32 r5_78
	r17_121 = __ashldi3(r4, r5, 1<32> - r16_132, out r5_78)
	r18_124 = r5_78
l0040E1D2:
	word32 r5_116
	word32 r4_115
	word32 r30_104 = __ext(r7, 4<32>, 0xB<32>)
	branch r30_104 != 0<32> l0040E22A
l0040E22A:
	r4_115 = r6
	r5_116 = __ext(r7, 0<32>, 0x14<32>) | 0x1000000<32>
l0040E1DA:
	word32 r7_100 = r7 << 0xC<32> | r6 >>u 0x14<32>
	word32 r5_101 = r6 << 0xC<32>
l0040E1E8:
	branch r7_100 >= 0<32> l0040E21A
l0040E21A:
	r30_104 = r30_104 + 0xFFFFFFFF<32>
	r7_100 = r7_100 << 1<32> | r5_101 >>u 0x1F<32>
	r5_101 = r5_101 << 1<32>
l0040E1EC:
	r4_115 = __ashldi3(r6, r7, 1<32> - r30_104, out r5_116)
l0040E1F8:
l0040E244:
	word32 r20_123 = r17_121 - r4_115
	word32 r6_129 = r18_124 - r5_116 - CONVERT(r17_121 <u r20_123, bool, word32)
	word32 r4_128 = r20_123
	word32 r7_130 = r6_129
	branch r30_104 >= r16_132 l0040E26A
l0040E26A:
	branch r6_129 < 0<32> l0040E29A
l0040E29A:
	r4_128 = r17_121
	r7_130 = r18_124
l0040E26E:
	branch (r20_123 | r6_129) == 0<32> l0040E1AA
l0040E276:
	branch r7_130 >>u 0x14<32> == 0<32> l0040E2A0
l0040E2A0:
	r7_130 = r7_130 << 1<32> | r4_128 >>u 0x1F<32>
	r4_128 = r4_128 << 1<32>
	r16_132 = r16_132 + 0xFFFFFFFF<32>
l0040E27C:
	word32 r5_150
	branch r16_132 <= 0<32> l0040E2B0
l0040E2B0:
	r4_128 = __lshrdi3(r4_128, r7_130, 1<32> - r16_132, out r5_150)
l0040E280:
	r5_150 = r16_132 << 0x14<32> | r7_130 + 0xFFF00000<32>
l0040E28C:
	r23_161 = r4_128
	r22_164 = __ins(r5, 0<32>, 0<32>, 1<32>) | r5_150
l0040E258:
	branch r6_129 < 0<32> l0040E238
l0040E25C:
	branch (r20_123 | r6_129) == 0<32> l0040E1AA
l0040E264:
	r17_121 = r20_123
	r18_124 = r6_129
l0040E238:
	r18_124 = r18_124 << 1<32> | r17_121 >>u 0x1F<32>
	r17_121 = r17_121 << 1<32>
	r16_132 = r16_132 + 0xFFFFFFFF<32>
l0040E1A2:
	branch r6 << 1<32> != r4 << 1<32> l0040E188
l0040E1A6:
	branch r7_35 != r6_48 l0040E188
l0040E1AA:
	word32 r7_700
	word32 r8_701
	word32 r9_702
	word32 r10_703
	word32 r11_704
	word32 r12_705
	word32 r14_706
	word32 r3_698
	word32 r6_699
	__muldf3(r4, r5, 0<32>, 0<32>, out r3_698, out r4_214, out r5_215, out r6_699, out r7_700, out r8_701, out r9_702, out r10_703, out r11_704, out r12_705, out r14_706)
l0040E178:
	word32 r14_232
	word32 r4_238
	word32 r5_239
	word32 r3_690
	word32 r6_691
	word32 r12_697
	word32 r7_692
	word32 r8_693
	word32 r9_694
	word32 r10_695
	word32 r11_696
	__muldf3(r4, r5, r6, r7, out r3_690, out r4_238, out r5_239, out r6_691, out r7_692, out r8_693, out r9_694, out r10_695, out r11_696, out r12_697, out r14_232)
	r4_214 = __divdf3(r4_238, r5_239, r4_238, r5_239, r14_232, out r5_215)
l0040E186:
	r23_161 = r4_214
	r22_164 = r5_215
l0040E188:
	r5Out = r22_164
	return r23_161
fmod_exit:


void frexp(word32 r4, word32 r5, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      frexpl
//      frexp
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r18 r2 r24 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
frexp_entry:
l0040E2C0:
	word32 r7_17 = __ext(r5, 4<32>, 0xB<32>)
	branch r7_17 != 0<32> l0040E2FE
l0040E2FE:
	branch r7_17 == 0x7FF<32> l0040E2F6
l0040E306:
	__ins(r5, 0<32>, 4<32>, 1<32>)
l0040E2CE:
	word32 r4_35
	word32 r5_133
	word32 r6_134
	word32 r7_135
	word32 r8_136
	word32 r9_137
	word32 r11_138
	word32 r13_139
	__nedf2(r4, r5, 0<32>, 0<32>, out r4_35, out r5_133, out r6_134, out r7_135, out r8_136, out r9_137, out r11_138, out r13_139)
	branch r4_35 == 0<32> l0040E2FA
l0040E2FA:
l0040E2D6:
	word32 r4_58
	word32 r5_59
	word32 r3_140
	word32 r6_141
	word32 r7_142
	word32 r8_143
	word32 r9_144
	word32 r10_145
	word32 r11_146
	word32 r12_147
	word32 r14_148
	__muldf3(r4, r5, Mem11[0x41202C8<32>:word32], Mem11[0x41202CC<32>:word32], out r3_140, out r4_58, out r5_59, out r6_141, out r7_142, out r8_143, out r9_144, out r10_145, out r11_146, out r12_147, out r14_148)
	frexp(r4_58, r5_59, r6)
l0040E2F6:
	return
frexp_exit:


word32 mbrtowc(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r10 r11 r2 r3 r4 r6 r8 r9
// Trashed: r10 r11 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
mbrtowc_entry:
	ptr32 fp
	word32 r10
	word32 r11
	word32 r3
	word32 r8
l0040E320:
	word32 r2_140 = r4
	branch r7 != 0<32> l0040E32C
l0040E328_1:
	r7 = 0x00432F20<p32>
l0040E32C:
	word32 r4_102
	word32 r9_14 = Mem5[r7:word32]
	branch r5 != 0<32> l0040E338
l0040E338:
	branch r4 != 0<32> l0040E340
l0040E33C:
	r2_140 = fp - 0x14<32>
l0040E340:
	r4_102 = 0xFFFFFFFE<32>
	branch r6 == 0<32> l0040E3FE
l0040E348:
	branch r9_14 != 0<32> l0040E3A0
l0040E3A0:
	r8 = r6
l0040E34C:
	branch true l0040E362
l0040E362:
	r3 = __read_user_local()
	branch Mem5[Mem5[r3 - 0x38<32>:word32]:word32] != 0<32> l0040E37E
l0040E37E:
	r8 = 0x3C<32>
	branch true l0040E3F2
l0040E386:
	r5 = r5 + 1<32>
	r9_14 = Mem5[0x00413460<p32>:word32]
	r8 = r6 + 0xFFFFFFFF<32>
	branch r6 != 0xFFFFFFFF<32> l0040E3A2
l0040E3A2:
	word32 r11_41 = CONVERT(Mem5[r5:byte], byte, word32)
	r11 = (r11_41 >>u 3<32>) + 0xFFFFFFF0<32>
	r10 = __ins((r9_14 >> 0x1A<32>) + (r11_41 >>u 3<32>) | r11, 0<32>, 0<32>, 1<32>)
	branch r10 != 0<32> l0040E3F2
l0040E3C0:
	r5 = r5 + 1<32>
	r8 = r8 + 0xFFFFFFFF<32>
	r9_14 = CONVERT(Mem5[r5 - 1<32>:byte], byte, word32) + 0xFFFFFF80<32> | r9_14 << 6<32>
	branch r9_14 < 0<32> l0040E3E4
l0040E3E4:
	branch r8 == 0<32> l0040E398
l0040E3E8:
	branch CONVERT(Mem5[r5:byte], byte, word32) <u 0xFFFFFF80<32> l0040E3C0
l0040E3D8:
	Mem67[r2_140:byte] = SLICE(r9_14, byte, 0)
	r3Out = r3
	r4Out = r6 - r8
	r6Out = r6
	r8Out = r8
	r9Out = r9_14
	r10Out = r10
	r11Out = r11
	return r2_140
l0040E398:
	Mem80[r7:word32] = r9_14
	r3Out = r3
	r4Out = 0xFFFFFFFE<32>
	r6Out = r6
	r8Out = r8
	r9Out = r9_14
	r10Out = r10
	r11Out = r11
	return r2_140
l0040E36E:
	Mem88[r2_140:byte] = Mem5[r5:int8]
	r3Out = r3
	r4Out = 1<32>
	r6Out = 0xDFFF<32>
	r8Out = 254<i32>
	r9Out = r9_14
	r10Out = r10
	r11Out = r11
	return r2_140
l0040E358:
	Mem92[r2_140:byte] = 0xFE<8>
	r3Out = r3
	r4Out = 1<32>
	r6Out = r6
	r8Out = 254<i32>
	r9Out = r9_14
	r10Out = r10
	r11Out = r11
	return r2_140
l0040E330:
	branch r9_14 != 0<32> l0040E3F2
l0040E3F2:
	word32 r4_188
	r3 = __errno_location(out r4_188)
	r4_102 = 0xFFFFFFFF<32>
l0040E3FE:
	r3Out = r3
	r4Out = r4_102
	r6Out = r6
	r8Out = r8
	r9Out = r9_14
	r10Out = r10
	r11Out = r11
	return r2_140
l0040E334:
	r3Out = r3
	r4Out = 0<32>
	r6Out = r6
	r8Out = r8
	r9Out = r9_14
	r10Out = r10
	r11Out = r11
	return r4
mbrtowc_exit:


word32 mbsinit(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r7
// Preserved: sp
mbsinit_entry:
l0040E400:
	word32 r7_4 = 1<32>
	branch r4 == 0<32> l0040E40A
l0040E404:
	r7_4 = CONVERT(Mem0[r4:word32] <u 1<32>, bool, word32)
l0040E40A:
	return r7_4
mbsinit_exit:


word32 mbsrtowcs(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r8Out, ptr32 & r18Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      mbstowcs
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r18 r4 r5 r6 r8
// Trashed: r18 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
mbsrtowcs_entry:
	word32 r18
	word32 r8
l0040E410:
	word32 r5_121
	word32 r7_101
	word32 dwLoc10_296 = r18
	word32 r17_14 = r4
	word32 r16_100 = Mem11[r5:word32]
	branch r7 == 0<32> l0040E458
l0040E418:
	r8 = Mem11[r7:word32]
	branch r8 == 0<32> l0040E458
l0040E458:
	branch Mem11[Mem11[__read_user_local() - 0x38<32>:word32]:word32] != 0<32> l0040E49A
l0040E49A:
	r7_101 = r6
	r5_121 = r5
	branch r4 == 0<32> l0040E4C2
l0040E464:
	r5_121 = r6
	branch r4 != 0<32> l0040E48A
l0040E48A:
	branch r5_121 != 0<32> l0040E472
l0040E472:
	word32 r7_32 = CONVERT(Mem31[r16_100:byte], byte, word32)
	branch r7_32 == 0<32> l0040E490
l0040E490:
	r6 = r6 - r5_121
	dwLoc10_296 = 0<32>
l0040E476:
	r17_14 = r17_14 + 4<32>
	Mem46[r17_14 - 4<32>:word32] = CONVERT(SLICE(r7_32, byte, 0), byte, int32) & 0xDFFF<32>
	r16_100 = r16_100 + 1<32>
	r5_121 = r5_121 + 0xFFFFFFFF<32>
l0040E468:
l0040E46E_thunk_strlen:
	word32 r5_57
	word32 r6_58
	word32 r7_492
	word32 r4_56 = strlen(r16_100, out r5_57, out r6_58, out r7_492)
	r5Out = r5_57
	r6Out = r6_58
	r8Out = r8
	r18Out = r18
	return r4_56
l0040E41E:
	branch r4 == 0<32> l0040E544
l0040E544:
	r7_101 = r6
l0040E51A:
	Mem62 = Mem11 (alias)
	word32 r5_63 = CONVERT(Mem62[r16_100:byte], byte, word32)
	r5_121 = (r5_63 >>u 3<32>) + 0xFFFFFFF0<32>
	r17_14 = r4 (alias)
	branch __ins((r8 >> 0x1A<32>) + (r5_63 >>u 3<32>) | r5_121, 0<32>, 0<32>, 1<32>) == 0<32> l0040E548
l0040E548:
	branch __bit(r8, 0x19<32>) l0040E4FE
l0040E54C:
	word32 r5_71 = CONVERT(Mem62[r16_100 + 1<32>:byte], byte, word32)
	r5_121 = r5_71 + 0xFFFFFF80<32>
	branch r5_71 <u 0xFFFFFF80<32> l0040E568
l0040E568:
	branch !__bit(r8, 0x13<32>) l0040E570
l0040E570:
	word32 r5_73 = CONVERT(Mem62[r16_100 + 2<32>:byte], byte, word32)
	r5_121 = r5_73 + 0xFFFFFF80<32>
	branch r5_73 >=u 0xFFFFFF80<32> l0040E556
l0040E57A:
	r16_100 = r16_100 + 3<32>
l0040E56C:
	r16_100 = r16_100 + 2<32>
l0040E500:
	r7_101 = r7_101 + 0xFFFFFFFF<32>
l0040E4C2:
	Mem81 = Mem11 (alias)
	r17_14 = r4 (alias)
	branch CONVERT(Mem81[r16_100:byte], byte, word32) >=u 0xFFFFFFC0<32> l0040E4F4
l0040E4CA:
	branch (r16_100 & 3<32>) != 0<32> l0040E4F4
l0040E4CE:
	word32 r5_86 = r16_100
l0040E4D0:
	word32 r9_89 = Mem81[r5_86:word32]
	r8 = r7_101 - r5_86 + r16_100
	branch ((r9_89 + 0xFEFEFEFF<32> | r9_89) & 0x80808080<32>) == 0<32> l0040E504
l0040E504:
	r5_86 = r5_86 + 4<32>
l0040E4F0:
	r16_100 = r5_86
	r7_101 = r8
l0040E4F4:
	word32 r5_104 = CONVERT(Mem81[r16_100:byte], byte, word32)
	branch r5_104 >=u 0xFFFFFFC0<32> l0040E508
l0040E508:
	branch r5_104 >=u 0xFFFFFF0B<32> l0040E536
l0040E510:
	r16_100 = r16_100 + 1<32>
	r8 = Mem81[0x00413370<p32> + (r5_104 + 0xFFFFFF3E<32>) * 4<32>:word32]
l0040E4FE:
	r16_100 = r16_100 + 1<32>
l0040E422:
	r7_101 = r6
l0040E426:
	word32 r9_116 = CONVERT(Mem115[r16_100:byte], byte, word32)
	r5_121 = (r9_116 >>u 3<32>) + 0xFFFFFFF0<32>
	branch __ins((r8 >> 0x1A<32>) + (r9_116 >>u 3<32>) | r5_121, 0<32>, 0<32>, 1<32>) != 0<32> l0040E530
l0040E530:
	r16_100 = r16_100 + 0xFFFFFFFF<32>
	branch r8 != 0<32> l0040E558
l0040E442:
	r8 = r9_116 + 0xFFFFFF80<32> | r8 << 6<32>
	branch r8 < 0<32> l0040E5CA
l0040E5CA:
	word32 r5_130 = CONVERT(Mem115[r16_100 + 1<32>:byte], byte, word32)
	r5_121 = r5_130 + 0xFFFFFF80<32>
	branch r5_130 >=u 0xFFFFFF80<32> l0040E556
l0040E5D4:
	r8 = r5_130 + 0xFFFFFF80<32> | r8 << 6<32>
	branch r8 < 0<32> l0040E5E4
l0040E5E4:
	word32 r5_134 = CONVERT(Mem115[r16_100 + 2<32>:byte], byte, word32)
	r5_121 = r5_134 + 0xFFFFFF80<32>
	branch r5_134 >=u 0xFFFFFF80<32> l0040E556
l0040E556:
	r16_100 = r16_100 + 0xFFFFFFFF<32>
l0040E5EE:
	r16_100 = r16_100 + 3<32>
	r8 = r5_134 + 0xFFFFFF80<32> | r8 << 6<32>
l0040E5E0:
	r16_100 = r16_100 + 2<32>
l0040E452:
	r16_100 = r16_100 + 1<32>
l0040E454:
	Mem146[r17_14:word32] = r8
l0040E4BC:
	r7_101 = r7_101 + 0xFFFFFFFF<32>
	r17_14 = r17_14 + 4<32>
l0040E49E:
	dwLoc10_296 = r18 (alias)
	branch r7_101 == 0<32> l0040E48C
l0040E4A0:
	branch CONVERT(Mem154[r16_100:byte], byte, word32) >=u 0xFFFFFFC0<32> l0040E4AE
l0040E4A8:
	branch (r16_100 & 3<32>) == 0<32> l0040E596
l0040E596:
	r8 = CONVERT(Mem160[r16_100:byte], byte, word32)
	branch r7_101 <u 5<32> l0040E4AE
l0040E59E:
	word32 r4_163 = Mem160[r16_100:word32]
	branch ((r4_163 + 0xFEFEFEFF<32> | r4_163) & 0x80808080<32>) == 0<32> l0040E57E
l0040E57E:
	Mem170[r17_14:word32] = r8
	r16_100 = r16_100 + 4<32>
	r17_14 = r17_14 + 0x10<32>
	Mem180[r17_14 - 4<32>:word32] = CONVERT(Mem177[r16_100 - 1<32>:byte], byte, word32)
	r7_101 = r7_101 + 0xFFFFFFFC<32>
l0040E5B4:
l0040E4AE:
	r5_121 = CONVERT(Mem182[r16_100:byte], byte, word32)
	branch r5_121 >=u 0xFFFFFFC0<32> l0040E5B6
l0040E5B6:
	branch r5_121 >=u 0xFFFFFF0B<32> l0040E536
l0040E536:
	dwLoc10_296 = r18
	r5_121 = CONVERT(Mem187[r16_100:byte], byte, word32)
	branch r5_121 != 0<32> l0040E558
l0040E558:
	word32 r4_493
	__errno_location(out r4_493)
	r6 = 0xFFFFFFFF<32>
	dwLoc10_296 = 0x54<32>
	branch r17_14 != 0<32> l0040E48C
l0040E48C:
	Mem242[r5:word32] = r16_100
l0040E566:
l0040E53A:
	branch r17_14 == 0<32> l0040E540
l0040E53C:
	dwLoc10_296 = 0<32>
l0040E540:
	r6 = r6 - r7_101
l0040E496:
	r5Out = r5_121
	r6Out = r6
	r8Out = r8
	r18Out = dwLoc10_296
	return r6
mbsrtowcs_exit:
l0040E5BE:
	r16_100 = r16_100 + 1<32>
	r8 = Mem182[0x00413370<p32> + (r5_121 + 0xFFFFFF3E<32>) * 4<32>:word32]
l0040E4B8:
	r16_100 = r16_100 + 1<32>


void wcrtomb(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      wctomb
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r5 r6 r7
// Preserved: ra sp
wcrtomb_entry:
l0040E600:
	branch r4 == 0<32> l0040E612
l0040E606:
	branch r5 >=u 0x80<32> l0040E616
l0040E616:
	branch Mem5[Mem5[__read_user_local() - 0x38<32>:word32]:word32] != 0<32> l0040E63A
l0040E63A:
	branch r5 >u 0x7FF<32> l0040E65E
l0040E65E:
	branch r5 <=u 0xD7FF<32> l0040E676
l0040E666:
	branch r5 >u 0xFFFF0001<32> l0040E69A
l0040E69A:
	branch r5 >u 0xFFEF0001<32> l0040E62E
l0040E6AC:
	word32 r6_25 = __ext(r5, 0xC<32>, 6<32>)
	Mem26[r4:byte] = SLICE(r5 >> 0x12<32>, byte, 0) | 0xF0<8>
	Mem29[r4 + 1<32>:byte] = SLICE(r6_25, byte, 0) | 0x80<8>
	Mem34[r4 + 2<32>:byte] = SLICE(__ext(r5, 6<32>, 6<32>), byte, 0) | 0x80<8>
	Mem36[r4 + 3<32>:byte] = SLICE(r5, byte, 0) & 0x3F<8> | 0x80<8>
l0040E676:
	Mem43[r4:byte] = SLICE(r5 >> 0xC<32>, byte, 0) | 0xE0<8>
	Mem48[r4 + 1<32>:byte] = SLICE(__ext(r5, 6<32>, 6<32>), byte, 0) | 0x80<8>
	Mem49[r4 + 2<32>:byte] = SLICE(r5, byte, 0) & 0x3F<8> | 0x80<8>
l0040E642:
	Mem55[r4:byte] = SLICE(r5 >> 6<32>, byte, 0) | 0xC0<8>
	Mem59[r4 + 1<32>:byte] = SLICE(r5, byte, 0) & 0x3F<8> | 0x80<8>
l0040E622:
	branch r5 <u 0xFFFF2000<32> l0040E60E
l0040E62E:
	word32 r4_100
	__errno_location(out r4_100)
l0040E60E:
	Mem72[r4:byte] = SLICE(r5, byte, 0)
l0040E612:
	return
wcrtomb_exit:


void close_file(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __stdio_exit_needed
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
close_file_entry:
l0040E6E0:
	branch r4 == 0<32> l0040E71E
l0040E6E6:
	branch Mem7[r4 + 0x4C<32>:word32] < 0<32> l0040E6F2
l0040E6EE:
	word32 r3_117
	word32 r4_118
	word32 r5_119
	word32 r8_120
	word32 r9_121
	__lockfile(r4, out r3_117, out r4_118, out r5_119, out r8_120, out r9_121)
l0040E6F2:
	branch Mem7[r4 + 0x1C<32>:word32] >=u Mem7[r4 + 0x14<32>:word32] l0040E702
l0040E6FA:
	word32 r7_32
	word32 r8_35
	word32 r2_37
	word32 r3_38
	word32 r9_39
	call Mem7[r4 + 0x24<32>:word32] (retsize: 0;)
		uses: r2:r2_37,r3:r3_38,r4:r4,r5:0<32>,r6:0<32>,r7:r7_32,r8:r8_35,r9:r9_39
		defs: r2:r2_37,r3:r3_38,r7:r7_32,r8:r8_35,r9:r9_39
l0040E702:
	word32 r6_42 = Mem7[r4 + 4<i32>:word32]
	word32 r7_43 = Mem7[r4 + 8<i32>:word32]
	branch r6_42 >=u r7_43 l0040E71E
l0040E71E:
	return
l0040E70A:
	word32 r6_50 = r6_42 - r7_43
	word32 r5_61
	word32 r2_64
	word32 r3_65
	word32 r9_66
	call Mem7[r4 + 0x28<32>:word32] (retsize: 0;)
		uses: r2:r2_64,r3:r3_65,r4:r4,r5:r5_61,r6:r6_50,r7:r6_50 >> 0x1F<32>,r8:1<32>,r9:r9_66
		defs: r2:r2_64,r3:r3_65,r5:r5_61,r9:r9_66
	return
close_file_exit:


void __stdio_exit_needed()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00401E7E
//      __towrite_needs_stdio_exit
//      __toread_needs_stdio_exit
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
__stdio_exit_needed_entry:
l0040E720:
	word32 r16_17 = Mem7[__ofl_lock():word32]
l0040E730:
	branch r16_17 != 0<32> l0040E72A
l0040E72A:
	close_file(r16_17)
	r16_17 = Mem7[r16_17 + 0x38<32>:word32]
l0040E732:
	close_file(Mem7[0x00432F30<p32>:word32])
	word32 r4_41 = Mem7[0x00430300<p32>:word32]
l0040E746_thunk_close_file:
	close_file(r4_41)
	return
__stdio_exit_needed_exit:


word32 __toread(word32 r4, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r16Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __uflow
// MayUse:  r4:[0..31]
// LiveOut: r16 r4 r6 r7
// Trashed: r16 r25 r4 r6 r7
// Preserved: r5 ra sp
__toread_entry:
	word32 r16
l0040E750:
	word32 r7_10 = CONVERT(Mem7[r4 + 0x4A<32>:int8], int8, word32)
	word32 r6_14 = Mem7[r4 + 0x1C<32>:word32]
	Mem15[r4 + 0x4A<32>:byte] = SLICE(r7_10, byte, 0) | SLICE(r7_10, byte, 0) + 0xFF<8>
	word32 r7_16 = Mem15[r4 + 0x14<32>:word32]
	branch r6_14 >=u r7_16 l0040E770
l0040E76A:
	call Mem15[r4 + 0x24<32>:word32] (retsize: 0;)
		uses: r4:r4,r5:0<32>,r6:0<32>
		defs: r6:r6_22,r7:r7_21
l0040E770:
	word32 r4_27 = Mem15[r4:word32]
	branch !__bit(r4_27, 2<32>) l0040E790
l0040E790:
	r6Out = r6_14
	r7Out = r7_16
	r16Out = r16
	return 0xFFFFFFFF<32>
l0040E77C:
	word32 r7_38 = Mem31[r4 + 0x2C<32>:word32]
	word32 r4_39 = __ext(r4_27, 4<32>, 1<32>)
	word32 r6_40 = Mem31[r4 + 0x30<32>:word32]
	r6Out = r6_40
	word32 r7_42 = r7_38 + r6_40
	r7Out = r7_42
	r16Out = r7_42
	return -r4_39
__toread_exit:


void __toread_needs_stdio_exit()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__toread_needs_stdio_exit_entry:
l0040E79A:
l0040E79A_thunk___stdio_exit_needed:
	__stdio_exit_needed()
	return
__toread_needs_stdio_exit_exit:


void sem_init(word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      handler
// MayUse:  r6:[0..31]
// LiveOut:
// Trashed: r25 r3 r4 r5 r7
// Preserved: ra sp
sem_init_entry:
l0040E7A0:
	branch r6 < 0<32> l0040E7B6
l0040E7B6:
	word32 r4_39
	__errno_location(out r4_39)
	return
l0040E7A6:
	return
sem_init_exit:


void sem_post(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      handler
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 ra sp
sem_post_entry:
l0040E7D0:
	word32 r6_10 = Mem7[r4 + 8<32>:word32]
l0040E7D6:
	word32 r7_14 = Mem7[r4:word32]
	word32 r9_16 = Mem7[r4 + 1<32>:word32]
	branch r7_14 != 0x7FFFFFFF<32> l0040E7EE
l0040E7EE:
	__sync(0<32>)
	word32 r5_19 = r7_14 + 1<32> + (r7_14 >>u 0x1F<32>)
l0040E7FC:
	word32 r8_22 = __load_linked_32(Mem7[r4:word32])
	branch r7_14 != r8_22 l0040E80C
l0040E804:
	branch __store_conditional_32(Mem7[r4:word32], r5_19) == 0<32> l0040E7FC
l0040E80C:
	__sync(0<32>)
	branch r7_14 != r8_22 l0040E7D6
l0040E814:
	branch r7_14 < 0<32> l0040E820
l0040E818:
	branch r9_16 != 0<32> l0040E820
l0040E820:
	branch r6_10 == 0<32> l0040E828
l0040E824_1:
l0040E828:
	word32 r9_145
	word32 r7_143
	word32 r6_142
	word32 r5_141
	word32 r8_144
	word32 r4_47
	__syscall(out r4_47, out r5_141, out r6_142, out r7_143, out r8_144, out r9_145)
	branch r4_47 != 0xFFFFFFDA<32> l0040E81C
l0040E83A:
	word32 r7_149
	word32 r5_147
	word32 r6_148
	word32 r4_146
	word32 r8_150
	word32 r9_151
	__syscall(out r4_146, out r5_147, out r6_148, out r7_149, out r8_150, out r9_151)
l0040E81C:
	return
l0040E7E2:
	word32 r4_140
	__errno_location(out r4_140)
	return
sem_post_exit:


void sem_wait(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      handler
//      __synccall
// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
sem_wait_entry:
l0040E850:
l0040E852_thunk_sem_timedwait:
	sem_timedwait(r4, 0<32>)
	return
sem_wait_exit:


void lseek64()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      rewinddir
// MayUse: 
// LiveOut:
// Trashed: r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: ra sp
lseek64_entry:
l0040E860:
	word32 r4_20
	word32 r9_55
	word32 r8_54
	word32 r7_53
	word32 r6_52
	word32 r5_51
	__syscall(out r4_20, out r5_51, out r6_52, out r7_53, out r8_54, out r9_55)
	word32 r4_28
	word32 r7_56
	__syscall_ret(r4_20, out r4_28, out r7_56)
	branch r4_28 != 0<32> l0040E882
l0040E87E:
l0040E882:
	return
lseek64_exit:


void cleanup(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r4:[0..31]
// LiveOut:
// Trashed: r25 r7
// Preserved: sp
cleanup_entry:
l0040E890:
	__sync(0<32>)
l0040E894:
	branch __store_conditional_32(Mem0[r4:word32], __load_linked_32(Mem0[r4:word32]) + 0xFFFFFFFF<32>) == 0<32> l0040E894
l0040E8A0:
	__sync(0<32>)
	return
cleanup_exit:


void sem_timedwait(word32 r4, word32 r5)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sem_wait
// MayUse:  r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 ra sp
sem_timedwait_entry:
	struct <anonymous> tLoc1C
l0040E8A6:
	__pthread_testcancel()
	word32 r7_26 = 0x65<32>
	branch sem_trywait(r4) != 0<32> l0040E8BE
l0040E8BE:
	r7_26 = r7_26 + 0xFFFFFFFF<32>
	branch r7_26 == 0<32> l0040E8CC
l0040E8C2:
	branch Mem11[r4:word32] > 0<32> l0040E8CC
l0040E8C8:
	branch Mem11[r4 + 4<32>:word32] == 0<32> l0040E8BA
l0040E8BA:
	__sync(0<32>)
l0040E8CC:
	branch sem_trywait(r4) == 0<32> l0040E8B6
l0040E8D2:
	__sync(0<32>)
l0040E8D8:
	branch __store_conditional_32(Mem11[r4 + 4<32>:word32], __load_linked_32(Mem11[r4 + 4<32>:word32]) + 1<32>) == 0<32> l0040E8D8
l0040E8E4:
	__sync(0<32>)
	__sync(0<32>)
l0040E8EC:
	branch __load_linked_32(Mem11[r4:word32]) != 0<32> l0040E8FA
l0040E8F2:
	branch __store_conditional_32(Mem11[r4:word32], 0xFFFFFFFF<32>) == 0<32> l0040E8EC
l0040E8FA:
	__sync(0<32>)
	_pthread_cleanup_push(&tLoc1C, 0x0040E890<p32>, r4 + 4<32>)
	word32 r4_76 = __timedwait_cp(0<32>, r5, Mem11[r4 + 2<32>:word32])
	_pthread_cleanup_pop(&tLoc1C, 1<32>)
	branch __ins(r4_76, 0<32>, 2<32>, 1<32>) == 0<32> l0040E8CC
l0040E924:
	word32 r4_177
	__errno_location(out r4_177)
	return
l0040E8B6:
	return
sem_timedwait_exit:


word32 sem_trywait(word32 r4)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sem_wait
// MayUse:  r4:[0..31]
// LiveOut: r4
// Trashed: r25 r3 r4 r5 r6 r7 r8
// Preserved: ra sp
sem_trywait_entry:
l0040E930:
l0040E932:
	word32 r7_9 = Mem5[r4:word32]
	branch r7_9 > 0<32> l0040E944
l0040E944:
	word32 r6_11 = 0<32>
	branch r7_9 != 1<32> l0040E954
l0040E94E:
	r6_11 = CONVERT(Mem5[r4 + 4<32>:word32] >u 0<32>, bool, word32)
l0040E954:
	__sync(0<32>)
	word32 r5_16 = r7_9 + 0xFFFFFFFF<32> - r6_11
l0040E95A:
	word32 r8_19 = __load_linked_32(Mem5[r4:word32])
	branch r7_9 != r8_19 l0040E96A
l0040E962:
	branch __store_conditional_32(Mem5[r4:word32], r5_16) == 0<32> l0040E95A
l0040E96A:
	__sync(0<32>)
	branch r7_9 != r8_19 l0040E932
l0040E972:
	return 0<32>
l0040E938:
	word32 r4_80
	__errno_location(out r4_80)
	return 0xFFFFFFFF<32>
sem_trywait_exit:


word32 __timedwait_cp(word32 r6, word32 r7, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sem_wait
//      __timedwait
// MayUse:  r6:[0..31] r7:[0..31] r8:[0..31]
// LiveOut: r4
// Trashed: r10 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: r16 r17 r18 r19 ra sp
__timedwait_cp_entry:
	struct <anonymous> tLoc28
l0040E980:
	branch r8 != 0<32> l0040E98E
l0040E98A_1:
l0040E98E:
	branch r7 == 0<32> l0040E9D4
l0040E9D4:
l0040E990:
	branch Mem13[r7 + 4<32>:word32] <=u 0x3B9AC9FF<32> l0040E9A0
l0040E9A0:
	word32 r4_37
	word32 r6_39
	word32 r7_40
	word32 r8_253
	word32 r5_252
	word32 r3_251
	__clock_gettime(r6, &tLoc28, out r3_251, out r4_37, out r5_252, out r6_39, out r7_40, out r8_253)
	branch r4_37 != 0<32> l0040E99C
l0040E9A8:
	word32 r5_48 = Mem13[r7:word32] - r7_40
	word32 r7_49 = Mem13[r7 + 4<32>:word32]
	Mem50[&tLoc28:word32] = r5_48
	word32 r7_51 = r7_49 - r6_39
	Mem52[&tLoc28 + 4<i32>:word32] = r7_51
	branch r7_51 >= 0<32> l0040E9C8
l0040E9BC:
	Mem55[&tLoc28:word32] = r5_48 + 0xFFFFFFFF<32>
	Mem56[&tLoc28 + 4<i32>:word32] = r7_51 + 0x3B9ACA00<32>
	r7_51 = r7_51 + 0x3B9ACA00<32>
l0040E9C8:
	branch r7_51 >= 0<32> l0040E9D6
l0040E9D6:
	word32 r4_80
	word32 r8_259
	word32 r6_258
	word32 r5_257
	__syscall_cp(out r4_80, out r5_257, out r6_258, out r8_259)
	word32 r4_104 = -r4_80
	branch r4_80 != 0xFFFFFFDA<32> l0040EA02
l0040E9F0:
	word32 r4_98
	word32 r8_256
	word32 r6_255
	word32 r5_254
	__syscall_cp(out r4_98, out r5_254, out r6_255, out r8_256)
	r4_104 = -r4_98
l0040EA02:
	branch r4_104 == 4<32> l0040EA12
l0040EA06:
	branch r4_104 == 0x2E<32> l0040E9D0
l0040EA0A:
	branch (r4_104 ^ 0x7D<32>) == 0<32> l0040EA12
l0040EA0E_1:
	r4_104 = 0<32>
l0040EA12:
	return r4_104
l0040E9D0:
	return 0x6E<32>
l0040E99C:
	return 0x16<32>
__timedwait_cp_exit:


void __timedwait(word32 r6, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r6:[0..31] r8:[0..31]
// LiveOut:
// Trashed: r10 r18 r2 r25 r3 r5 r6 r7 r8 r9
// Preserved: r16 r17 ra sp
__timedwait_entry:
	ptr32 fp
l0040EA14:
	word32 r7_25
	__pthread_setcancelstate(1<32>, fp - 0x14<32>, out r7_25)
	word32 r7_61
	__pthread_setcancelstate(__timedwait_cp(r6, r7_25, r8), 0<32>, out r7_61)
	return
__timedwait_exit:


void __testcancel()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __pthread_testcancel
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__testcancel_entry:
l0040EA40:
	return
__testcancel_exit:


void __pthread_testcancel()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      sem_wait
// MayUse: 
// LiveOut:
// Trashed: r25
// Preserved: sp
__pthread_testcancel_entry:
l0040EA42:
l0040EA42_thunk___testcancel:
	__testcancel()
	return
__pthread_testcancel_exit:


word32 __ashldi3(word32 r4, word32 r5, word32 r6, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
//      fmod
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4 r5
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
__ashldi3_entry:
l0040EA50:
	word32 r5_7 = r5 << r6
	word32 r7_11 = r4 >>u -r6
	word32 r4_10 = r4 << r6
	branch r6 != 0<32> l0040EA64
l0040EA60_1:
	r7_11 = 0<32>
l0040EA64:
	word32 r6_13 = CONVERT(r6 < 0x20<32>, bool, word32)
	word32 r5_16 = r5_7 | r7_11
	branch r6_13 != 0<32> l0040EA6E
l0040EA6A_1:
	r5_16 = r4_10
l0040EA6E:
	branch r6_13 != 0<32> l0040EA72
l0040EA6E_1:
	r4_10 = 0<32>
l0040EA72:
	r5Out = r5_16
	return r4_10
__ashldi3_exit:


word32 __lshrdi3(word32 r4, word32 r5, word32 r6, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fmod
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: r4 r5
// Trashed: r25 r4 r5 r6 r7
// Preserved: sp
__lshrdi3_entry:
l0040EA80:
	word32 r4_7 = r4 >>u r6
	word32 r7_11 = r5 << -r6
	word32 r5_10 = r5 >>u r6
	branch r6 != 0<32> l0040EA94
l0040EA90_1:
	r7_11 = 0<32>
l0040EA94:
	word32 r6_13 = CONVERT(r6 < 0x20<32>, bool, word32)
	word32 r4_16 = r4_7 | r7_11
	branch r6_13 != 0<32> l0040EA9E
l0040EA9A_1:
	r4_16 = r5_10
l0040EA9E:
	branch r6_13 != 0<32> l0040EAA2
l0040EA9E_1:
	r5_10 = 0<32>
l0040EAA2:
	r5Out = r5_10
	return r4_16
__lshrdi3_exit:


word32 __udivdi3(word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00402CEE
//      fmt_u
//      fn00409170
//      __floatscan
//      __intscan
// MayUse:  r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11 r13 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: hi lo r10 r11 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__udivdi3_entry:
	word32 r13
l0040EAB0:
	word32 r7_14
	word32 r8_180 = r5
	word32 r10_160 = r4
	word32 r9_147 = r6
	word32 r5_11 = r7
	word32 r11_12 = r5
	branch r7 != 0<32> l0040EC5A
l0040EC5A:
	branch r5 <u r7 l0040ED3A
l0040ED3A:
	r5_11 = 0<32>
	r7_14 = 0<32>
l0040EC5E:
	r3 = __clz(r7)
	branch r3 != 0<32> l0040EC76
l0040EC76:
	word32 r5_18 = 0x20<32> - r3
	r2 = r6 >>u r5_18 | r7 << r3
	word32 r9_24 = __ext(r2, 0<32>, 0x10<32>)
	r13 = r5 >>u r5_18
	word32 r11_25 = r4 >>u r5_18 | r5 << r3
	word32 r5_30 = r9_24 *s r12
	word32 r6_34 = r6 << r3
	word32 r10_35 = r13 % (r2 >>u 0x10<32>) << 0x10<32> | r11_25 >>u 0x10<32>
	word32 r8_36 = r12
	branch r10_35 >=u r5_30 l0040ECD8
l0040ECC2:
	r10_35 = r10_35 + r2
	r8_36 = r12 + 0xFFFFFFFF<32>
	branch r10_35 <u r2 l0040ECD8
l0040ECCC:
	branch r10_35 >=u r5_30 l0040ECD8
l0040ECD0:
	r8_36 = r12 + 0xFFFFFFFE<32>
	r10_35 = r10_35 + r2
l0040ECD8:
	r11_12 = __ext(r11_25, 0<32>, 0x10<32>)
	word32 r9_48 = r9_24 *s r12
	word32 r5_54 = (r10_35 - r5_30) % (r2 >>u 0x10<32>) << 0x10<32> | r11_12
	word32 r7_55 = r12
	branch r5_54 >=u r9_48 l0040ED10
l0040ECFA:
	r5_54 = r5_54 + r2
	r7_55 = r12 + 0xFFFFFFFF<32>
	branch r5_54 <u r2 l0040ED10
l0040ED04:
	branch r5_54 >=u r9_48 l0040ED10
l0040ED08:
	r7_55 = r12 + 0xFFFFFFFE<32>
	r5_54 = r5_54 + r2
l0040ED10:
	r7_14 = r8_36 << 0x10<32> | r7_55
	r9_147 = r5_54 - r9_48
	r8_180 = r7_14 *s r6_34
	r6 = SLICE(r7_14 *u64 r6_34, word32, 32)
	branch r9_147 <u r6 l0040ED36
l0040ED28:
	r5_11 = 0<32>
	branch r9_147 != r6 l0040EB48
l0040ED2E:
	r6 = r4 << r3
	branch r6 >=u r8_180 l0040EB48
l0040ED36:
	r7_14 = r7_14 + 0xFFFFFFFF<32>
l0040EC66:
	branch r7 <u r5 l0040ED40
l0040ED40:
	r5_11 = 0<32>
	r7_14 = 1<32>
l0040EC6A:
	r6 = CONVERT(r4 <u r6, bool, word32)
	r7_14 = r6 ^ 1<32>
l0040EC72:
	r5_11 = 0<32>
l0040EABC:
	word32 r4_187
	word32 r7_168
	branch r5 >=u r6 l0040EB4C
l0040EB4C:
	branch r6 != 0<32> l0040EB56
l0040EB50:
l0040EB56:
	word32 r8_142
	word32 r6_90 = __clz(r6)
	branch r6_90 != 0<32> l0040EBCA
l0040EBCA:
	r9_147 = r6 << r6_90
	word32 r7_93 = 0x20<32> - r6_90
	word32 r5_94 = __ext(r9_147, 0<32>, 0x10<32>)
	r3 = r5 >>u r7_93
	word32 r8_107 = r4 >>u r7_93 | r5 << r6_90
	r10_160 = r4 << r6_90
	word32 r6_105 = r5_94 *s r2
	word32 r7_111 = r3 % (r9_147 >>u 0x10<32>) << 0x10<32> | r8_107 >>u 0x10<32>
	word32 r4_112 = r2
	branch r7_111 >=u r6_105 l0040EC1C
l0040EC0A:
	r7_111 = r7_111 + r9_147
	r4_112 = r2 + 0xFFFFFFFF<32>
	branch r7_111 <u r9_147 l0040EC1C
l0040EC12:
	branch r7_111 >=u r6_105 l0040EC1C
l0040EC16:
	r4_112 = r2 + 0xFFFFFFFE<32>
	r7_111 = r7_111 + r9_147
l0040EC1C:
	word32 r6_126 = r5_94 *s r2
	word32 r8_130 = (r7_111 - r6_105) % (r9_147 >>u 0x10<32>) << 0x10<32> | __ext(r8_107, 0<32>, 0x10<32>)
	word32 r7_131 = r2
	branch r8_130 >=u r6_126 l0040EC4E
l0040EC3C:
	r8_130 = r8_130 + r9_147
	r7_131 = r2 + 0xFFFFFFFF<32>
	branch r8_130 <u r9_147 l0040EC4E
l0040EC44:
	branch r8_130 >=u r6_126 l0040EC4E
l0040EC48:
	r7_131 = r2 + 0xFFFFFFFE<32>
	r8_130 = r8_130 + r9_147
l0040EC4E:
	r8_142 = r8_130 - r6_126
	r5_11 = r4_112 << 0x10<32> | r7_131
l0040EB5C:
	r8_142 = r5 - r6
	r5_11 = 1<32>
l0040EB62:
	r11_12 = __ext(r9_147, 0<32>, 0x10<32>)
	r2 = r9_147 >>u 0x10<32>
	word32 r4_159 = r11_12 *s r3
	word32 r6_167 = r8_142 % r2 << 0x10<32> | r10_160 >>u 0x10<32>
	r7_168 = r3
	branch r6_167 >=u r4_159 l0040EB98
l0040EB86:
	r6_167 = r6_167 + r9_147
	r7_168 = r3 + 0xFFFFFFFF<32>
	branch r6_167 <u r9_147 l0040EB98
l0040EB8E:
	branch r6_167 >=u r4_159 l0040EB98
l0040EB92:
	r7_168 = r3 + 0xFFFFFFFE<32>
	r6_167 = r6_167 + r9_147
l0040EB98:
	word32 r4_182 = (r6_167 - r4_159) % r2
	r8_180 = r11_12 *s r3
	r6 = r4_182 << 0x10<32>
	word32 r10_186 = r4_182 << 0x10<32> | __ext(r10_160, 0<32>, 0x10<32>)
	r4_187 = r3
	branch r10_186 >=u r8_180 l0040EB42
l0040EBB8:
	word32 r10_189 = r10_186 + r9_147
	r4_187 = r3 + 0xFFFFFFFF<32>
	branch r10_189 <u r9_147 l0040EB42
l0040EBC0:
	branch r10_189 >=u r8_180 l0040EB42
l0040EBC4:
	r4_187 = r3 + 0xFFFFFFFE<32>
l0040EAC0:
	word32 r7_192 = __clz(r6)
	branch r7_192 == 0<32> l0040EADE
l0040EAC6:
	r9_147 = r6 << r7_192
	r11_12 = r4 >>u -r7_192 | r5 << r7_192
	r10_160 = r4 << r7_192
l0040EADE:
	word32 r8_200 = __ext(r9_147, 0<32>, 0x10<32>)
	r2 = r9_147 >>u 0x10<32>
	word32 r4_206 = r8_200 *s r3
	word32 r6_211 = r11_12 % r2 << 0x10<32> | r10_160 >>u 0x10<32>
	r7_168 = r3
	branch r6_211 >=u r4_206 l0040EB14
l0040EB02:
	r6_211 = r6_211 + r9_147
	r7_168 = r3 + 0xFFFFFFFF<32>
	branch r6_211 <u r9_147 l0040EB14
l0040EB0A:
	branch r6_211 >=u r4_206 l0040EB14
l0040EB0E:
	r7_168 = r3 + 0xFFFFFFFE<32>
	r6_211 = r6_211 + r9_147
l0040EB14:
	word32 r4_226 = (r6_211 - r4_206) % r2
	r8_180 = r8_200 *s r11_12
	r6 = r4_226 << 0x10<32>
	word32 r10_230 = r4_226 << 0x10<32> | __ext(r10_160, 0<32>, 0x10<32>)
	r4_187 = r11_12
	branch r10_230 >=u r8_180 l0040EB42
l0040EB32:
	word32 r10_233 = r10_230 + r9_147
	r4_187 = r11_12 + 0xFFFFFFFF<32>
	branch r10_233 <u r9_147 l0040EB42
l0040EB3A:
	branch r10_233 >=u r8_180 l0040EB42
l0040EB3E:
	r4_187 = r11_12 + 0xFFFFFFFE<32>
l0040EB42:
	r7_14 = r7_168 << 0x10<32> | r4_187
l0040EB48:
	r3Out = r3
	r4Out = r7_14
	r5Out = r5_11
	r6Out = r6
	r7Out = r7_14
	r8Out = r8_180
	r9Out = r9_147
	r11Out = r11_12
	r13Out = r13
	return r2
__udivdi3_exit:


word32 __umoddi3(word32 r4, word32 r5, word32 r6, word32 r7, word32 r13, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r8Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fmt_u
//      fn00409170
//      __floatscan
// MayUse:  r13:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r12 r2 r3 r4 r8
// Trashed: hi lo r10 r11 r12 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__umoddi3_entry:
	word32 r12
	word32 r2
	word32 r3
l0040ED50:
	word32 r9_124 = r6
	word32 r8_103 = r4
	word32 r10_11 = r5
	branch r7 != 0<32> l0040EEA8
l0040EEA8:
	branch r5 <u r7 l0040EDDC
l0040EEAC:
	r12 = __clz(r7)
	branch r12 != 0<32> l0040EECE
l0040EECE:
	word32 r9_15 = 0x20<32> - r12
	word32 r8_18 = r6 >>u r9_15 | r7 << r12
	word32 r10_23 = __ext(r8_18, 0<32>, 0x10<32>)
	word32 r5_22 = r4 >>u r9_15 | r5 << r12
	word32 r11_28 = r10_23 *s r13
	word32 r6_31 = r6 << r12
	word32 r3_32 = (r5 >>u r9_15) % (r8_18 >>u 0x10<32>) << 0x10<32> | r5_22 >>u 0x10<32>
	word32 r4_33 = r4 << r12
	word32 r2_34 = r13
	branch r3_32 >=u r11_28 l0040EF36
l0040EF20:
	r3_32 = r3_32 + r8_18
	r2_34 = r13 + 0xFFFFFFFF<32>
	branch r3_32 <u r8_18 l0040EF36
l0040EF2A:
	branch r3_32 >=u r11_28 l0040EF36
l0040EF2E:
	r2_34 = r13 + 0xFFFFFFFE<32>
	r3_32 = r3_32 + r8_18
l0040EF36:
	r3 = r3_32 - r11_28
	word32 r7_48 = r10_23 *s r13
	word32 r10_52 = r3 % (r8_18 >>u 0x10<32>) << 0x10<32> | r5_22 & 0xFFFF<32>
	word32 r5_53 = r13
	branch r10_52 >=u r7_48 l0040EF68
l0040EF56:
	r10_52 = r10_52 + r8_18
	r5_53 = r13 + 0xFFFFFFFF<32>
	branch r10_52 <u r8_18 l0040EF68
l0040EF5E:
	branch r10_52 >=u r7_48 l0040EF68
l0040EF62:
	r5_53 = r13 + 0xFFFFFFFE<32>
	r10_52 = r10_52 + r8_18
l0040EF68:
	word32 r11_66 = r2_34 << 0x10<32> | r5_53
	r2 = r11_66 *s r6_31
	word32 r11_70 = SLICE(r11_66 *u64 r6_31, word32, 32)
	word32 r10_64 = r10_52 - r7_48
	word32 r7_71 = r2
	word32 r5_72 = r11_70
	branch r10_64 <u r11_70 l0040EF8C
l0040EF84:
	branch r10_64 != r11_70 l0040EF9C
l0040EF88:
	branch r4_33 >=u r2 l0040EF9C
l0040EF8C:
	r7_71 = r2 - r6_31
	r2 = CONVERT(r2 <u r7_71, bool, word32)
	r5_72 = r11_70 - r8_18 - r2
l0040EF9C:
	word32 r7_87 = r4_33 - r7_71
	r8_103 = r10_64 - r5_72 - CONVERT(r4_33 <u r7_87, bool, word32) << r9_15
	r4 = r8_103 | r7_87 >>u r12
l0040EEB4:
	branch r7 <u r5 l0040EEBC
l0040EEB8:
	branch r4 <u r6 l0040EECA
l0040EEBC:
	r8_103 = r4 - r6
l0040EECA:
	r4 = r8_103
l0040ED58:
	word32 r11_122
	word32 r4_195
	word32 r6_193
	branch r5 >=u r6 l0040EDDE
l0040EDDE:
	branch r6 != 0<32> l0040EDE8
l0040EDE2:
l0040EDE8:
	word32 r5_164
	r11_122 = __clz(r6)
	branch r11_122 != 0<32> l0040EE2E
l0040EE2E:
	r9_124 = r6 << r11_122
	word32 r2_125 = 0x20<32> - r11_122
	word32 r5_134 = __ext(r9_124, 0<32>, 0x10<32>)
	r3 = r5 >>u r2_125
	r2 = r4 >>u r2_125 | r5 << r11_122
	r8_103 = r4 << r11_122
	word32 r6_138 = r6 *s r5_134
	word32 r7_142 = r3 % (r9_124 >>u 0x10<32>) << 0x10<32> | r2 >>u 0x10<32>
	branch r7_142 >=u r6_138 l0040EE7C
l0040EE70:
	r7_142 = r7_142 + r9_124
	branch r7_142 <u r9_124 l0040EE7C
l0040EE76:
	branch r7_142 >=u r6_138 l0040EE7C
l0040EE7A:
	r7_142 = r7_142 + r9_124
l0040EE7C:
	r6 = r7_142 - r6_138
	word32 r10_152 = (r2 >>u 0x10<32>) *s r5_134
	word32 r5_158 = __ext(r2, 0<32>, 0x10<32>) | r6 % (r9_124 >>u 0x10<32>) << 0x10<32>
	branch r5_158 >=u r10_152 l0040EEA2
l0040EE96:
	r5_158 = r5_158 + r9_124
	branch r5_158 <u r9_124 l0040EEA2
l0040EE9C:
	branch r5_158 >=u r10_152 l0040EEA2
l0040EEA0:
	r5_158 = r5_158 + r9_124
l0040EEA2:
	r5_164 = r5_158 - r10_152
l0040EDF0:
	r5_164 = r5 - r6
l0040EDF4:
	word32 r4_168 = __ext(r9_124, 0<32>, 0x10<32>)
	word32 r10_169 = r9_124 >>u 0x10<32>
	word32 r5_181 = r8_103 >>u 0x10<32>
	word32 r6_175 = r6 *s r4_168
	word32 r7_183 = r5_164 % r10_169 << 0x10<32> | r5_181
	branch r7_183 >=u r6_175 l0040EE20
l0040EE14:
	r7_183 = r7_183 + r9_124
	branch r7_183 <u r9_124 l0040EE20
l0040EE1A:
	branch r7_183 >=u r6_175 l0040EE20
l0040EE1E:
	r7_183 = r7_183 + r9_124
l0040EE20:
	r6_193 = (r7_183 - r6_175) % r10_169
	r4_195 = r4_168 *s r5_181
l0040ED5C:
	r11_122 = __clz(r6)
	branch r11_122 == 0<32> l0040ED7C
l0040ED64:
	r9_124 = r6 << r11_122
	r10_11 = r4 >>u -r11_122 | r5 << r11_122
	r8_103 = r4 << r11_122
l0040ED7C:
	word32 r4_204 = __ext(r9_124, 0<32>, 0x10<32>)
	word32 r5_205 = r9_124 >>u 0x10<32>
	word32 r10_213 = r8_103 >>u 0x10<32>
	word32 r6_210 = r6 *s r4_204
	word32 r7_215 = r10_11 % r5_205 << 0x10<32> | r10_213
	branch r7_215 >=u r6_210 l0040EDAA
l0040ED9E:
	r7_215 = r7_215 + r9_124
	branch r7_215 <u r9_124 l0040EDAA
l0040EDA4:
	branch r7_215 >=u r6_210 l0040EDAA
l0040EDA8:
	r7_215 = r7_215 + r9_124
l0040EDAA:
	r4_195 = r4_204 *s r10_213
	r6_193 = (r7_215 - r6_210) % r5_205
l0040EDB6:
	word32 r8_234 = r6_193 << 0x10<32> | __ext(r8_103, 0<32>, 0x10<32>)
	branch r8_234 >=u r4_195 l0040EDD2
l0040EDC6:
	r8_234 = r8_234 + r9_124
	branch r8_234 <u r9_124 l0040EDD2
l0040EDCC:
	branch r8_234 >=u r4_195 l0040EDD2
l0040EDD0:
	r8_234 = r8_234 + r9_124
l0040EDD2:
	r8_103 = r8_234 - r4_195
	r4 = r8_103 >>u r11_122
l0040EDDC:
	r3Out = r3
	r4Out = r4
	r8Out = r8_103
	r12Out = r12
	return r2
__umoddi3_exit:


word32 __adddf3(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11 r12 r13 r3 r4 r5 r6 r7 r8
// Trashed: r10 r11 r12 r13 r14 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__adddf3_entry:
l0040EFC0:
	word32 r10_5 = __ext(r5, 0<32>, 0x14<32>)
	word32 r9_7 = __ext(r7, 0<32>, 0x14<32>)
	word32 r13_11 = __ext(r5, 4<32>, 0xB<32>)
	word32 r10_14 = __ext(r7, 4<32>, 0xB<32>)
	word32 r8_12 = r4 >>u 0x1D<32> | r10_5 << 3<32>
	word32 r3_13 = r7 >>u 0x1F<32>
	word32 r5_133 = r5 >>u 0x1F<32>
	word32 r12_116 = r4 << 3<32>
	word32 r9_150 = r6 >>u 0x1D<32> | r9_7 << 3<32>
	word32 r11_100 = r13_11 - r10_14
	branch r5 >>u 0x1F<32> != r7 >>u 0x1F<32> l0040F2C4
l0040F2C4:
	word32 r4_207
	word32 r14_24 = r11_100
	branch r11_100 <= 0<32> l0040F37E
l0040F37E:
	branch r11_100 == 0<32> l0040F42E
l0040F42E:
	branch (r13_11 + 1<32> & 0x7FF<32>) >= 2<32> l0040F4E4
l0040F4E4:
	r11_100 = (r4 << 3<32>) - (r6 << 3<32>)
	r4_207 = r8_12 - r9_150 - CONVERT(r4 << 3<32> <u r11_100, bool, word32)
	branch __bit(r4_207, 0x17<32>) l0040F564
l0040F564:
	r12_116 = r11_100 | r4_207
	branch r12_116 != 0<32> l0040F508
l0040F4F6:
	r11_100 = (r6 << 3<32>) - (r4 << 3<32>)
	r5_133 = r7 >>u 0x1F<32>
	r4_207 = r9_150 - r8_12 - CONVERT(r6 << 3<32> <u r11_100, bool, word32)
l0040F43A:
	r10_14 = r8_12 | r4 << 3<32>
	word32 r7_38 = r9_150 | r6 << 3<32>
	branch r13_11 != 0<32> l0040F496
l0040F496:
	branch r10_14 != 0<32> l0040F4A4
l0040F4A4:
	r10_14 = 0x7FF<32>
	branch r7_38 == 0<32> l0040F23A
l0040F4AA:
	word32 r4_44
	word32 r7_40 = r8_12 >>u 3<32>
	branch !__bit(r9_150 >>u 3<32> | r8_12 >>u 3<32>, 0x13<32>) l0040F4DA
l0040F4DA:
	r7_40 = 0xFFFFF<32>
	r4_44 = 0xFFFFFFFF<32>
l0040F4BA:
	r4_44 = r8_12 << 0x1D<32> | __ext(r4, 0<32>, 0x1D<32>)
	r14_24 = r5 >>u 0x1F<32>
l0040F4C8:
	r8_12 = r4_44 >>u 0x1D<32> | r7_40 << 3<32>
	r12_116 = r4_44 << 3<32>
	r5_133 = r14_24
l0040F49A:
	branch r7_38 == 0<32> l0040F5C0
l0040F5C0:
	r5_133 = 0<32>
	r8_12 = 0x7FFFFF<32>
	r12_116 = 0xFFFFFFF8<32>
	r10_14 = 0x7FF<32>
l0040F49E:
	r8_12 = r9_150
	r12_116 = r6 << 3<32>
l0040F446:
	branch r10_14 != 0<32> l0040F45A
l0040F45A:
	branch r7_38 == 0<32> l0040F492
l0040F45C:
	word32 r4_63 = (r4 << 3<32>) - (r6 << 3<32>)
	word32 r7_66 = r8_12 - r9_150 - CONVERT(r4 << 3<32> <u r4_63, bool, word32)
	branch __bit(r7_66, 0x17<32>) l0040F486
l0040F486:
	r12_116 = r4_63 | r7_66
	branch r12_116 == 0<32> l0040F56C
l0040F56C:
l0040F48E:
	r8_12 = r7_66
	r12_116 = r4_63
l0040F470:
	r12_116 = (r6 << 3<32>) - (r4 << 3<32>)
	r10_14 = 0<32>
	r8_12 = r9_150 - r8_12 - CONVERT(r6 << 3<32> <u r12_116, bool, word32)
l0040F44A:
	branch r7_38 != 0<32> l0040F398
l0040F44E:
	r12_116 = 0<32>
l0040F452:
	r8_12 = 0<32>
	r10_14 = 0<32>
	r5_133 = 0<32>
l0040F382:
	word32 r8_122
	branch r13_11 != 0<32> l0040F3F0
l0040F3F0:
	branch r10_14 == 0x7FF<32> l0040F390
l0040F3F4:
	r11_100 = -r11_100
	r8_12 = r8_12 | 0x8000000<32>
l0040F386:
	branch (r8_12 | r4 << 3<32>) != 0<32> l0040F39E
l0040F39E:
	r11_100 = ~r11_100
	branch r11_100 != 0<32> l0040F3BA
l0040F3BA:
	branch r10_14 == 0x7FF<32> l0040F390
l0040F3BE:
	word32 r12_109
	branch r11_100 >= 0x39<32> l0040F424
l0040F424:
	r12_109 = CONVERT((r8_12 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040F3C2:
	branch r11_100 >= 0x20<32> l0040F402
l0040F402:
	word32 r5_90 = r8_12 >>u r11_100
	word32 r7_91 = 0<32>
	branch r11_100 == 0x20<32> l0040F414
l0040F40C:
	r7_91 = r8_12 << -r11_100
l0040F414:
	r12_109 = r5_90 | CONVERT((r7_91 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040F420:
	r11_100 = 0<32>
l0040F3C6:
	word32 r7_103 = 0x20<32> - r11_100
	r11_100 = r8_12 >>u r11_100
	r12_109 = r8_12 << r7_103 | (r4 << 3<32>) >>u r11_100 | CONVERT((r4 << 3<32>) << r7_103 >u 0<32>, bool, word32)
l0040F3E6:
	r12_116 = (r6 << 3<32>) - r12_109
	r8_122 = r9_150 - r11_100
l0040F3A6:
	r12_116 = (r6 << 3<32>) - (r4 << 3<32>)
	r8_122 = r9_150 - r8_12
l0040F3AE:
	r5_133 = r7 >>u 0x1F<32>
	r8_12 = r8_122 - CONVERT(r6 << 3<32> <u r12_116, bool, word32)
l0040F38C:
	branch r10_14 != 0x7FF<32> l0040F398
l0040F390:
	r12_116 = r9_150 | r6 << 3<32>
	branch r12_116 == 0<32> l0040F5B8
l0040F5B8:
	r8_12 = 0<32>
	r5_133 = r7 >>u 0x1F<32>
l0040F398:
	r8_12 = r9_150
	r12_116 = r6 << 3<32>
l0040F482:
	r5_133 = r7 >>u 0x1F<32>
l0040F2CA:
	word32 r7_151
	branch r10_14 != 0<32> l0040F344
l0040F344:
	branch r13_11 == 0x7FF<32> l0040F0D2
l0040F348:
	r9_150 = r9_150 | 0x8000000<32>
	r7_151 = r11_100
l0040F2CE:
	branch (r9_150 | r6 << 3<32>) == 0<32> l0040F012
l0040F2D6:
	r7_151 = r11_100 + 0xFFFFFFFF<32>
	branch r11_100 != 0xFFFFFFFF<32> l0040F300
l0040F300:
	branch r11_100 == 0x7FF<32> l0040F0BE
l0040F304:
	word32 r7_169
	word32 r6_158
	branch r7_151 >= 0x39<32> l0040F374
l0040F374:
	r6_158 = CONVERT((r9_150 | r6 << 3<32>) >u 0<32>, bool, word32)
l0040F308:
	branch r7_151 >= 0x20<32> l0040F354
l0040F354:
	word32 r4_159 = r9_150 >>u r7_151
	word32 r10_160 = 0<32>
	branch r7_151 == 0x20<32> l0040F366
l0040F35E:
	r10_160 = r9_150 << -r7_151
l0040F366:
	r6_158 = CONVERT((r10_160 | r6 << 3<32>) >u 0<32>, bool, word32) | r4_159
l0040F370:
	r7_169 = 0<32>
l0040F30C:
	word32 r10_172 = 0x20<32> - r7_151
	r11_100 = r6 << 3<32> >>u r7_151
	r7_169 = r9_150 >>u r7_151
	r6_158 = CONVERT(r6 << 3<32> << r10_172 >u 0<32>, bool, word32) | (r9_150 << r10_172 | r11_100)
l0040F32E:
	word32 r6_185 = (r4 << 3<32>) - r6_158
	r10_14 = r13_11
	r8_12 = r8_12 - r7_169 - CONVERT(r4 << 3<32> <u r6_185, bool, word32)
	r12_116 = r6_185
l0040F2DC:
	word32 r6_200 = (r4 << 3<32>) - (r6 << 3<32>)
	r10_14 = 1<32>
	r8_12 = r8_12 - r9_150 - CONVERT(r4 << 3<32> <u r6_200, bool, word32)
	r12_116 = r6_200
l0040F2F2:
	branch __bit(r8_12, 0x17<32>) l0040F23A
l0040F2F6:
	r4_207 = __ext(r8_12, 0<32>, 0x17<32>)
	r11_100 = r12_116
	r13_11 = r10_14
l0040F508:
	word32 r7_218 = __clz(r4_207)
	branch r4_207 != 0<32> l0040F516
l0040F50E:
	r7_218 = __clz(r11_100) + 0x20<32>
l0040F516:
	word32 r8_227
	word32 r10_223 = r7_218 + 0xFFFFFFF8<32>
	branch r10_223 >= 0x20<32> l0040F570
l0040F570:
	r12_116 = 0<32>
	r8_227 = r11_100 << r7_218 + 0xFFFFFFD8<32>
l0040F51E:
	r12_116 = r11_100 << r10_223
	r8_227 = r11_100 >>u -r10_223 | r4_207 << r10_223
l0040F532:
	branch r10_223 < r13_11 l0040F5A2
l0040F5A2:
	r10_14 = r13_11 - r10_223
	r8_12 = __ins(r8_227, 0<32>, 7<32>, 1<32>)
l0040F536:
	word32 r10_241 = r10_223 - r13_11
	branch r10_241 >= 0xFFFFFFE1<32> l0040F57C
l0040F57C:
	word32 r7_244 = 0<32>
	word32 r10_245 = r8_227 >>u r10_241 + 0xFFFFFFE1<32>
	branch r10_241 == 0xFFFFFFE1<32> l0040F592
l0040F58A:
	r7_244 = r8_227 << -(r10_241 + 1<32>)
l0040F592:
	r12_116 = r10_245 | CONVERT((r12_116 | r7_244) >u 0<32>, bool, word32)
	r8_12 = 0<32>
l0040F542:
	word32 r7_258 = 0x20<32> - (r10_241 + 1<32>)
	r12_116 = r8_227 << r7_258 | r12_116 >>u r10_241 + 1<32> | CONVERT(r12_116 << r7_258 >u 0<32>, bool, word32)
	r8_12 = r8_227 >>u r10_241 + 1<32>
l0040F002:
	r3_13 = r11_100
	branch r11_100 <= 0<32> l0040F152
l0040F152:
	branch r11_100 == 0<32> l0040F200
l0040F200:
	r10_14 = r13_11 + 1<32>
	branch (r13_11 + 1<32> & 0x7FF<32>) >= 2<32> l0040F2A2
l0040F2A2:
	branch r13_11 == 0xFFFFF802<32> l0040F020
l0040F2A6:
	word32 r6_268 = (r4 << 3<32>) + (r6 << 3<32>)
	word32 r2_272 = r8_12 + r9_150 + CONVERT(r6_268 <u r4 << 3<32>, bool, word32)
	r12_116 = r2_272 << 0x1F<32> | r6_268 >>u 1<32>
	r8_12 = r2_272 >>u 1<32>
l0040F20C:
	word32 r7_276 = r8_12 | r4 << 3<32>
	branch r13_11 != 0<32> l0040F258
l0040F258:
	branch r7_276 == 0<32> l0040F5B2
l0040F5B2:
	r8_12 = r9_150
	r12_116 = r6 << 3<32>
l0040F25C:
	r10_14 = 0x7FF<32>
	branch (r9_150 | r6 << 3<32>) == 0<32> l0040F23A
l0040F264:
	word32 r7_285
	word32 r10_281 = r8_12 >>u 3<32>
	branch !__bit(r9_150 >>u 3<32> | r8_12 >>u 3<32>, 0x13<32>) l0040F298
l0040F298:
	r10_281 = 0xFFFFF<32>
	r7_285 = 0xFFFFFFFF<32>
l0040F274:
	r7_285 = r8_12 << 0x1D<32> | __ext(r4, 0<32>, 0x1D<32>)
	r3_13 = r5 >>u 0x1F<32>
l0040F280:
	r8_12 = r7_285 >>u 0x1D<32> | r10_281 << 3<32>
	r12_116 = r7_285 << 3<32>
l0040F290:
	r5_133 = r3_13
l0040F214:
	branch r7_276 == 0<32> l0040F5AC
l0040F5AC:
	r8_12 = r9_150
	r12_116 = r6 << 3<32>
l0040F492:
	r10_14 = 0<32>
l0040F218:
	r10_14 = 0<32>
	branch (r9_150 | r6 << 3<32>) == 0<32> l0040F23A
l0040F220:
	word32 r6_304 = (r4 << 3<32>) + (r6 << 3<32>)
	r12_116 = r6_304
	r8_12 = r8_12 + r9_150 + CONVERT(r6_304 <u r4 << 3<32>, bool, word32)
	branch __bit(r8_12, 0x17<32>) l0040F23A
l0040F232:
	r8_12 = __ins(r8_12, 0<32>, 7<32>, 1<32>)
	r10_14 = 1<32>
l0040F156:
	word32 r8_353
	branch r13_11 != 0<32> l0040F1C2
l0040F1C2:
	branch r10_14 == 0x7FF<32> l0040F164
l0040F1C6:
	r11_100 = -r11_100
	r8_12 = r8_12 | 0x8000000<32>
l0040F15A:
	branch (r8_12 | r4 << 3<32>) != 0<32> l0040F174
l0040F174:
	r11_100 = ~r11_100
	branch r11_100 != 0<32> l0040F18A
l0040F18A:
	branch r10_14 == 0x7FF<32> l0040F164
l0040F18E:
	word32 r12_320
	branch r11_100 >= 0x39<32> l0040F1F6
l0040F1F6:
	r12_320 = CONVERT((r8_12 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040F192:
	branch r11_100 >= 0x20<32> l0040F1D4
l0040F1D4:
	word32 r4_321 = r8_12 >>u r11_100
	word32 r7_322 = 0<32>
	branch r11_100 == 0x20<32> l0040F1E6
l0040F1DE:
	r7_322 = r8_12 << -r11_100
l0040F1E6:
	r12_320 = r4_321 | CONVERT((r7_322 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040F1F2:
	r11_100 = 0<32>
l0040F196:
	word32 r7_334 = 0x20<32> - r11_100
	r11_100 = r8_12 >>u r11_100
	r12_320 = r8_12 << r7_334 | (r4 << 3<32>) >>u r11_100 | CONVERT((r4 << 3<32>) << r7_334 >u 0<32>, bool, word32)
l0040F1B8:
	r12_116 = r12_320 + (r6 << 3<32>)
	r8_353 = r11_100 + r9_150
l0040F17C:
	r12_116 = (r4 << 3<32>) + (r6 << 3<32>)
	r8_353 = r8_12 + r9_150
l0040F182:
	r8_12 = r8_353 + CONVERT(r12_116 <u r6 << 3<32>, bool, word32)
l0040F160:
	branch r10_14 != 0x7FF<32> l0040F16E
l0040F164:
	r12_116 = r9_150 | r6 << 3<32>
	r8_12 = 0<32>
	branch r12_116 == 0<32> l0040F024
l0040F16E:
	r8_12 = r9_150
	r12_116 = r6 << 3<32>
l0040F008:
	word32 r7_371
	branch r10_14 != 0<32> l0040F0CE
l0040F0CE:
	branch r13_11 != 0x7FF<32> l0040F0E2
l0040F0E2:
	r9_150 = r9_150 | 0x8000000<32>
	r7_371 = r11_100
l0040F0D2:
	branch (r8_12 | r4 << 3<32>) != 0<32> l0040F292
l0040F0DA:
	r8_12 = 0<32>
	r12_116 = 0<32>
	r10_14 = r13_11
l0040F00C:
	branch (r9_150 | r6 << 3<32>) != 0<32> l0040F074
l0040F074:
	r7_371 = r11_100 + 0xFFFFFFFF<32>
	branch r11_100 != 0xFFFFFFFF<32> l0040F0BA
l0040F0BA:
	branch r11_100 != 0x7FF<32> l0040F0EC
l0040F0EC:
	word32 r7_396
	word32 r6_385
	branch r7_371 >= 0x39<32> l0040F148
l0040F148:
	r6_385 = CONVERT((r9_150 | r6 << 3<32>) >u 0<32>, bool, word32)
l0040F0F0:
	branch r7_371 >= 0x20<32> l0040F128
l0040F128:
	word32 r4_386 = r9_150 >>u r7_371
	word32 r10_387 = 0<32>
	branch r7_371 == 0x20<32> l0040F13A
l0040F132:
	r10_387 = r9_150 << -r7_371
l0040F13A:
	r6_385 = CONVERT((r10_387 | r6 << 3<32>) >u 0<32>, bool, word32) | r4_386
l0040F144:
	r7_396 = 0<32>
l0040F0F4:
	word32 r10_399 = 0x20<32> - r7_371
	r11_100 = r6 << 3<32> >>u r7_371
	r7_396 = r9_150 >>u r7_371
	r6_385 = CONVERT(r6 << 3<32> << r10_399 >u 0<32>, bool, word32) | (r9_150 << r10_399 | r11_100)
l0040F116:
	word32 r6_412 = r6_385 + (r4 << 3<32>)
	r10_14 = r13_11
	r8_12 = CONVERT(r6_412 <u r4 << 3<32>, bool, word32) + (r7_396 + r8_12)
	r12_116 = r6_412
l0040F0BE:
	branch (r8_12 | r4 << 3<32>) != 0<32> l0040F292
l0040F292:
	r10_14 = 0x7FF<32>
l0040F0C6:
	r8_12 = 0<32>
	r12_116 = 0<32>
	r10_14 = r11_100
l0040F07A:
	word32 r6_435 = (r4 << 3<32>) + (r6 << 3<32>)
	r10_14 = 1<32>
	r8_12 = r8_12 + r9_150 + CONVERT(r6_435 <u r4 << 3<32>, bool, word32)
	r12_116 = r6_435
l0040F08C:
	branch __bit(r8_12, 0x17<32>) l0040F23A
l0040F090:
	r10_14 = r10_14 + 1<32>
	branch r10_14 == 0x7FF<32> l0040F020
l0040F09A:
	word32 r6_453 = __ins(r8_12, 0<32>, 7<32>, 1<32>)
	r12_116 = r6_453 << 0x1F<32> | (r12_116 >>u 1<32> | r12_116 & 1<32>)
	r8_12 = r6_453 >>u 1<32>
l0040F012:
	r10_14 = r11_100
	branch r11_100 != 0x7FF<32> l0040F23A
l0040F018:
	branch (r8_12 | r4 << 3<32>) != 0<32> l0040F23A
l0040F23A:
	branch (r12_116 & 7<32>) == 0<32> l0040F024
l0040F242:
	branch (r12_116 & 0xF<32>) == 4<32> l0040F024
l0040F24A:
	word32 r6_472 = r12_116 + 4<32>
	r12_116 = r6_472
	r8_12 = r8_12 + CONVERT(r6_472 <u r12_116, bool, word32)
l0040F020:
	r8_12 = 0<32>
	r12_116 = 0<32>
l0040F024:
	branch __bit(r8_12, 0x17<32>) l0040F03A
l0040F028:
	r10_14 = r10_14 + 1<32>
	r8_12 = __ins(r8_12, 0<32>, 7<32>, 1<32>)
	branch r10_14 != 0x7FF<32> l0040F03A
l0040F036:
	r8_12 = 0<32>
	r12_116 = 0<32>
l0040F03A:
	word32 r7_505 = r12_116 >>u 3<32> | r8_12 << 0x1D<32>
	word32 r8_507 = r8_12 >>u 3<32>
	branch r10_14 != 0x7FF<32> l0040F060
l0040F050:
	branch (r7_505 | r8_507) == 0<32> l0040F5D2
l0040F5D2:
	r8_507 = 0<32>
l0040F058:
	r8_507 = r8_507 | 0x800000<32>
l0040F060:
	word32 r6_549 = __ins(__ins(__ins(0<32>, r8_507, 0<32>, 1<32>), r10_14, 4<32>, 1<32>), r5_133, 0xF<32>, 1<32>)
	r4Out = r7_505
	r5Out = r6_549
	r6Out = r6_549
	r7Out = r7_505
	r8Out = r6_549
	r11Out = r11_100
	r12Out = r12_116
	r13Out = r13_11
	return r3_13
__adddf3_exit:


word32 __divdf3(word32 r4, word32 r5, word32 r6, word32 r7, word32 r14, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __floatscan
//      fmod
// MayUse:  r14:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r4 r5
// Trashed: hi lo r10 r11 r12 r13 r14 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__divdf3_entry:
l0040F5E0:
	word32 r8_10
	word32 r12_113
	word32 r2_104
	word32 r11_5 = __ext(r5, 4<32>, 0xB<32>)
	word32 r10_6 = __ext(r5, 0<32>, 0x14<32>)
	word32 r9_11 = r4
	branch r11_5 == 0<32> l0040F66A
l0040F66A:
	r8_10 = r10_6 | r4
	branch r8_10 == 0<32> l0040F6CE
l0040F6CE:
	r9_11 = 0<32>
	r2_104 = 0<32>
	r12_113 = 1<32>
l0040F672:
	word32 r11_14 = __clz(r10_6)
	branch r10_6 != 0<32> l0040F682
l0040F67A:
	r11_14 = __clz(r4) + 0x20<32>
l0040F682:
	word32 r2_18 = r11_14 + 0xFFFFFFF5<32>
	branch r2_18 >= 0x1D<32> l0040F6B0
l0040F6B0:
	r9_11 = 0<32>
	r8_10 = r4 << r11_14 + 0xFFFFFFD8<32>
l0040F68A:
	word32 r9_24 = r11_14 + 0xFFFFFFF8<32>
	r9_11 = r4 << r9_24
	r8_10 = r4 >>u 0x1D<32> - r2_18 | r10_6 << r9_24
l0040F6A6:
	r2_104 = 0xFFFFFC0D<32> - r11_14
l0040F5F2:
	branch r11_5 == 0x7FF<32> l0040F6BC
l0040F6BC:
	r8_10 = r10_6 | r4
	branch r8_10 == 0<32> l0040F6D8
l0040F6D8:
	r9_11 = 0<32>
	r2_104 = r11_5
	r12_113 = 2<32>
l0040F6C4:
	r8_10 = r10_6
	r2_104 = r11_5
	r12_113 = 3<32>
l0040F5FA:
	r8_10 = r4 >>u 0x1D<32> | 0x8000000<32> | r10_6 << 3<32>
	r9_11 = r4 << 3<32>
	r2_104 = r11_5 + 0xFFFFFC01<32>
l0040F616:
	r12_113 = 0<32>
l0040F618:
	word32 r7_151
	word32 r3_102
	word32 r6_101
	word32 r11_55 = __ext(r7, 4<32>, 0xB<32>)
	word32 r4_100 = __ext(r7, 0<32>, 0x14<32>)
	branch r11_55 == 0<32> l0040F6E2
l0040F6E2:
	r7_151 = r4_100 | r6
	branch r7_151 == 0<32> l0040F740
l0040F740:
	r4_100 = 0<32>
	r6_101 = 0<32>
	r3_102 = 1<32>
l0040F6E8:
	word32 r11_67 = __clz(r4_100)
	branch r4_100 != 0<32> l0040F6F6
l0040F6EE:
	r11_67 = __clz(r6) + 0x20<32>
l0040F6F6:
	word32 r3_71 = r11_67 + 0xFFFFFFF5<32>
	branch r3_71 >= 0x1D<32> l0040F724
l0040F724:
	r7_151 = 0<32>
	r4_100 = r6 << r11_67 + 0xFFFFFFD8<32>
l0040F6FE:
	word32 r7_77 = r11_67 + 0xFFFFFFF8<32>
	r7_151 = r6 << r7_77
	r4_100 = r6 >>u 0x1D<32> - r3_71 | r4_100 << r7_77
l0040F71A:
	r6_101 = 0xFFFFFC0D<32> - r11_67
l0040F628:
	branch r11_55 == 0x7FF<32> l0040F730
l0040F730:
	r7_151 = r4_100 | r6
	branch r7_151 == 0<32> l0040F74A
l0040F74A:
	r4_100 = 0<32>
	r6_101 = r11_55
	r3_102 = 2<32>
l0040F736:
	r7_151 = r6
	r3_102 = 3<32>
	r6_101 = r11_55
l0040F630:
	r7_151 = r6 << 3<32>
	r4_100 = r6 >>u 0x1D<32> | 0x8000000<32> | r4_100 << 3<32>
	r6_101 = r11_55 + 0xFFFFFC01<32>
l0040F648:
	r3_102 = 0<32>
l0040F64A:
	word32 r11_111 = r2_104 - r6_101
	word32 r6_119 = r12_113 << 2<32> | r3_102
	branch r6_119 >=u 0xFFFFFFF0<32> l0040F754
l0040F754:
	word32 r2_156
	branch r4_100 <u r8_10 l0040F760
l0040F758:
	branch r8_10 != r4_100 l0040F976
l0040F75C:
	branch r9_11 <u r7_151 l0040F976
l0040F976:
	r11_111 = r11_111 + 0xFFFFFFFF<32>
	r2_156 = 0<32>
l0040F760:
	r2_156 = r9_11 << 0x1F<32>
	r8_10 = r8_10 >>u 1<32>
	r9_11 = r8_10 << 0x1F<32> | r9_11 >>u 1<32>
l0040F774:
	word32 r4_172 = r4_100 << 8<32> | r7_151 >>u 0x18<32>
	word32 r13_174 = __ext(r4_172, 0<32>, 0x10<32>)
	word32 r7_173 = r7_151 << 8<32>
	word32 r6_192 = r13_174 *s r14
	word32 r3_198 = r14
	word32 r5_199 = r9_11 >>u 0x10<32> | r8_10 % (r4_172 >>u 0x10<32>) << 0x10<32>
	branch r5_199 >=u r6_192 l0040F7B6
l0040F7A4:
	r5_199 = r5_199 + r4_172
	r3_198 = r14 + 0xFFFFFFFF<32>
	branch r5_199 <u r4_172 l0040F7B6
l0040F7AC:
	branch r5_199 >=u r6_192 l0040F7B6
l0040F7B0:
	r3_198 = r14 + 0xFFFFFFFE<32>
	r5_199 = r5_199 + r4_172
l0040F7B6:
	word32 r8_211 = r13_174 *s r14
	word32 r9_217 = __ext(r9_11, 0<32>, 0x10<32>) | (r5_199 - r6_192) % (r4_172 >>u 0x10<32>) << 0x10<32>
	word32 r6_218 = r14
	branch r9_217 >=u r8_211 l0040F7E8
l0040F7D6:
	r9_217 = r9_217 + r4_172
	r6_218 = r14 + 0xFFFFFFFF<32>
	branch r9_217 <u r4_172 l0040F7E8
l0040F7DE:
	branch r9_217 >=u r8_211 l0040F7E8
l0040F7E2:
	r6_218 = r14 + 0xFFFFFFFE<32>
	r9_217 = r9_217 + r4_172
l0040F7E8:
	word32 r8_236
	word32 r3_231 = r3_198 << 0x10<32> | r6_218
	word32 r9_229 = r9_217 - r8_211
	word32 r6_234 = SLICE(r3_231 *u64 r7_173, word32, 32)
	word32 r5_235 = r3_231 *s r7_173
	branch r9_229 <u r6_234 l0040F80A
l0040F800:
	r8_236 = r3_231
	branch r9_229 != r6_234 l0040F84A
l0040F806:
	branch r2_156 >=u r5_235 l0040F84A
l0040F80A:
	r2_156 = r2_156 + r7_173
	r14 = CONVERT(r2_156 <u r7_173, bool, word32) + r4_172
	r8_236 = r3_231 + 0xFFFFFFFF<32>
	r9_229 = r9_229 + r14
	branch r4_172 <u r9_229 l0040F82A
l0040F822:
	branch r4_172 != r9_229 l0040F84A
l0040F826:
	branch r2_156 <u r7_173 l0040F84A
l0040F82A:
	branch r9_229 <u r6_234 l0040F836
l0040F82E:
	branch r6_234 != r9_229 l0040F84A
l0040F832:
	branch r2_156 >=u r5_235 l0040F84A
l0040F836:
	r2_156 = r2_156 + r7_173
	r8_236 = r3_231 + 0xFFFFFFFE<32>
	r9_229 = r9_229 + (CONVERT(r2_156 <u r7_173, bool, word32) + r4_172)
l0040F84A:
	word32 r5_273 = r2_156 - r5_235
	word32 r6_279 = r9_229 - r6_234 - CONVERT(r2_156 <u r5_273, bool, word32)
	branch r4_172 == r6_279 l0040F91A
l0040F85E_thunk_fn0040F91A:
	word32 r5_296
	word32 r4_295 = fn0040F91A(r8_236, 0xFFFFFFFF<32>, r11_111, out r5_296)
	r5Out = r5_296
	return r4_295
l0040F862:
	word32 r3_312 = r13_174 *s r14
	word32 r9_321 = r14
	word32 r2_322 = r5_273 >>u 0x10<32> | r6_279 % (r4_172 >>u 0x10<32>) << 0x10<32>
	branch r2_322 >=u r3_312 l0040F896
l0040F880:
	r2_322 = r2_322 + r4_172
	r9_321 = r14 + 0xFFFFFFFF<32>
	branch r2_322 <u r4_172 l0040F896
l0040F88A:
	branch r2_322 >=u r3_312 l0040F896
l0040F88E:
	r9_321 = r14 + 0xFFFFFFFE<32>
	r2_322 = r2_322 + r4_172
l0040F896:
	word32 r3_334 = r13_174 *s r14
	word32 r6_340 = (r2_322 - r3_312) % (r4_172 >>u 0x10<32>) << 0x10<32> | r5_273 & 0xFFFF<32>
	word32 r2_341 = r14
	branch r6_340 >=u r3_334 l0040F8C6
l0040F8B4:
	r6_340 = r6_340 + r4_172
	r2_341 = r14 + 0xFFFFFFFF<32>
	branch r6_340 <u r4_172 l0040F8C6
l0040F8BC:
	branch r6_340 >=u r3_334 l0040F8C6
l0040F8C0:
	r2_341 = r14 + 0xFFFFFFFE<32>
	r6_340 = r6_340 + r4_172
l0040F8C6:
	word32 r9_360
	word32 r5_354 = r9_321 << 0x10<32> | r2_341
	word32 r6_352 = r6_340 - r3_334
	word32 r2_358 = SLICE(r7_173 *u64 r5_354, word32, 32)
	word32 r3_359 = r7_173 *s r5_354
	branch r6_352 <u r2_358 l0040F8E8
l0040F8DE:
	r9_360 = r5_354
	branch r6_352 != r2_358 l0040F916
l0040F8E4:
	branch r3_359 == 0<32> l0040F91A
l0040F8E4_thunk_fn0040F91A:
	word32 r5_369
	word32 r4_368 = fn0040F91A(r8_236, r5_354, r11_111, out r5_369)
	r5Out = r5_369
	return r4_368
l0040F8E8:
	word32 r6_377 = r4_172 + r6_352
	r9_360 = r5_354 + 0xFFFFFFFF<32>
	branch r6_377 <u r4_172 l0040F90E
l0040F8F2:
	branch r6_377 <u r2_358 l0040F8FE
l0040F8F6:
	branch r2_358 != r6_377 l0040F916
l0040F8FA:
	branch r7_173 >=u r3_359 l0040F912
l0040F8FE:
	r9_360 = r5_354 + 0xFFFFFFFE<32>
	r7_173 = r7_173 << 1<32>
	r6_377 = r6_377 + (CONVERT(r7_173 << 1<32> <u r7_173, bool, word32) + r4_172)
l0040F90E:
	branch r6_377 != r2_358 l0040F916
l0040F912:
	branch r3_359 == r7_173 l0040F91A
l0040F912_thunk_fn0040F91A:
	word32 r5_415
	word32 r4_414 = fn0040F91A(r8_236, r9_360, r11_111, out r5_415)
	r5Out = r5_415
	return r4_414
l0040F916:
	word32 r9_421 = r9_360 | 1<32>
l0040F916_thunk_fn0040F91A:
	word32 r5_428
	word32 r4_427 = fn0040F91A(r8_236, r9_421, r11_111, out r5_428)
	r5Out = r5_428
	return r4_427
l0040F660:
	word32 r6_443 = Mem0[0x0041353C<p32> + (r6_119 + 0xFFFFFFFF<32>) * 4<32>:word32]
	word32 r5_453
	word32 r4_455
	call r6_443 (retsize: 0;)
		uses: r14:r14,r2:0x0041353C<p32>,r4:r4_134,r5:r5 >>u 0x1F<32>,r6:r6_443,r7:r7_151
		defs: r4:r4_455,r5:r5_453
	r5Out = r5_453
	return r4_455
__divdf3_exit:


word32 fn0040F91A(word32 r8, word32 r9, word32 r11, ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
//      __divdf3
//      fn0040F9A4
//      fn0040F9BE
//      fn0040FA5A
// MayUse:  r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r4 r5
// Trashed: r10 r11 r25 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0040F91A_entry:
l0040F91A:
	word32 r6_5 = r11 + 0x3FF<32>
	branch r11 <= 0x3FF<32> l0040F9C8
l0040F9C8:
	word32 r5_7 = 1<32> - (r11 + 0x3FF<32>)
	branch r5_7 >= 0x39<32> l0040F9BE
l0040F9CC_thunk_fn0040F9BE:
	word32 r5_16
	word32 r4_15 = fn0040F9BE(out r5_16)
	r5Out = r5_16
	return r4_15
l0040F9D0:
	word32 r8_28
	word32 r9_31
	branch r5_7 >= 0x20<32> l0040FA24
l0040FA24:
	word32 r6_19 = 0<32>
	word32 r7_21 = r8 >>u 0xFFFFFFE1<32> - (r11 + 0x3FF<32>)
	branch r5_7 == 0x20<32> l0040FA3C
l0040FA34:
	r6_19 = r8 << -r5_7
l0040FA3C:
	r8_28 = 0<32>
	r9_31 = r7_21 | CONVERT((r6_19 | r9) >u 0<32>, bool, word32)
l0040F9D4:
	word32 r6_34 = 0x20<32> - r5_7
	r9_31 = r8 << r6_34 | r9 >>u r5_7 | CONVERT(r9 << r6_34 >u 0<32>, bool, word32)
	r8_28 = r8 >>u r5_7
l0040F9F2:
	branch (r9_31 & 7<32>) == 0<32> l0040FA0C
l0040F9F8:
	branch (r9_31 & 0xF<32>) == 4<32> l0040FA0C
l0040FA00:
	r8_28 = r8_28 + CONVERT(r9_31 + 4<32> <u r9_31, bool, word32)
l0040FA0C:
	branch !__bit(r8_28, 0x17<32>) l0040FA60
l0040FA60:
l0040FA66_thunk_fn0040F9A4:
	word32 r5_67
	word32 r4_66 = fn0040F9A4(out r5_67)
	r5Out = r5_67
	return r4_66
l0040FA10:
l0040FA1C_thunk_fn0040F9BE:
	word32 r5_81
	word32 r4_80 = fn0040F9BE(out r5_81)
	r5Out = r5_81
	return r4_80
l0040F922:
	branch (r9 & 7<32>) == 0<32> l0040F93C
l0040F928:
	branch (r9 & 0xF<32>) == 4<32> l0040F93C
l0040F930:
	r8 = r8 + CONVERT(r9 + 4<32> <u r9, bool, word32)
l0040F93C:
	branch __bit(r8, 0x18<32>) l0040F948
l0040F940:
	__ins(r8, 0<32>, 8<32>, 1<32>)
	r6_5 = r11 + 0x400<32>
l0040F948:
	branch r6_5 > 0x7FE<32> l0040FA5A
l0040F94C_thunk_fn0040FA5A:
	word32 r5_109
	word32 r4_108 = fn0040FA5A(out r5_109)
	r5Out = r5_109
	return r4_108
l0040F950:
l0040F95C_thunk_fn0040F9A4:
	word32 r5_122
	word32 r4_121 = fn0040F9A4(out r5_122)
	r5Out = r5_122
	return r4_121
fn0040F91A_exit:


word32 fn0040F9A4(ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
//      fn0040F91A
// MayUse: 
// LiveOut: r4 r5
// Trashed: r10 r25 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0040F9A4_entry:
	word32 r9
	word32 r11
l0040F9A4_thunk_fn0040F91A:
	word32 r5_20
	word32 r4_19 = fn0040F91A(r8, r9, r11, out r5_20)
	r5Out = r5_20
	return r4_19
fn0040F9A4_exit:


word32 fn0040F9A8(word32 r6, word32 r8, word32 r10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
//      fn0040F9A4
// MayUse:  r10:[0..31] r6:[0..31] r8:[0..31]
// LiveOut: r4
// Trashed: r25 r4 r5 r6 r7 r8
// Preserved: sp
fn0040F9A8_entry:
	word32 r9
l0040F9A8:
l0040F960_in___isoc99_vfscanf:
	__ins(__ins(__ins(0<32>, r8, 0<32>, 1<32>), r6, 4<32>, 1<32>), r10, 0xF<32>, 1<32>)
	return r9
fn0040F9A8_exit:


word32 fn0040F9BE(ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
//      fn0040F91A
// MayUse: 
// LiveOut: r4 r5
// Trashed: r25 r6 r8 r9 sp
// Preserved:
fn0040F9BE_entry:
	word32 r8
	word32 r9
	word32 r11
l0040F9BE_thunk_fn0040F91A:
	word32 r5_19
	fn0040F91A(r8, r9, r11, out r5_19)
	r5Out = <invalid>
	return <invalid>
fn0040F9BE_exit:


word32 fn0040FA5A(ptr32 & r5Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __isoc99_vfscanf
//      fn0040F91A
// MayUse: 
// LiveOut: r4 r5
// Trashed: r25 r8 r9
// Preserved: sp
fn0040FA5A_entry:
	word32 r8
	word32 r9
	word32 r11
l0040FA5A_thunk_fn0040F91A:
	word32 r5_16
	fn0040F91A(r8, r9, r11, out r5_16)
	r5Out = <invalid>
	return <invalid>
fn0040FA5A_exit:


word32 __nedf2(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
//      __floatscan
//      frexp
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r11 r13 r2 r4 r5 r6 r7 r8 r9
// Trashed: r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__nedf2_entry:
	word32 r2
l0040FA70:
	word32 r4_19
	word32 r9_8 = __ext(r5, 4<32>, 0xB<32>)
	word32 r8_10 = __ext(r5, 0<32>, 0x14<32>)
	word32 r3_12 = __ext(r7, 0<32>, 0x14<32>)
	word32 r10_13 = __ext(r7, 4<32>, 0xB<32>)
	branch r9_8 != 0x7FF<32> l0040FAA6
l0040FAA6:
	branch r10_13 != 0x7FF<32> l0040FAB2
l0040FA96:
	r2 = r8_10 | r4
	r4_19 = 1<32>
	branch r2 != 0<32> l0040FAD2
l0040FAA0:
	branch r10_13 == r9_8 l0040FAAA
l0040FAAA:
	r6 = r3_12 | r6
	r4_19 = 1<32>
	branch r6 != 0<32> l0040FAD2
l0040FAB2:
	r4_19 = 1<32>
	branch r9_8 != r10_13 l0040FAD2
l0040FAB8:
	branch r8_10 != r3_12 l0040FAD2
l0040FABC:
	branch r4 != r6 l0040FAD2
l0040FAC0:
	branch r5 >>u 0x1F<32> == r7 >>u 0x1F<32> l0040FAD0
l0040FAD0:
	r4_19 = 0<32>
l0040FAC2:
	branch r9_8 != 0<32> l0040FAD2
l0040FAD2:
	r4Out = r4_19
	r5Out = <invalid>
	r6Out = r6
	r7Out = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r11Out = <invalid>
	r13Out = <invalid>
	return r2
l0040FAC6:
	r4Out = CONVERT((r8_10 | r4) >u 0<32>, bool, word32)
	r5Out = <invalid>
	r6Out = r6
	r7Out = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r11Out = <invalid>
	r13Out = <invalid>
	return r2
l0040FAA4:
	r4Out = 1<32>
	r5Out = <invalid>
	r6Out = r6
	r7Out = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	r11Out = <invalid>
	r13Out = <invalid>
	return r2
__nedf2_exit:


word32 __subdf3(word32 r4, word32 r5, word32 r6, word32 r7, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r13Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00409170
//      __floatscan
// MayUse:  r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r13 r4 r5 r7
// Trashed: r10 r11 r12 r13 r2 r25 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
__subdf3_entry:
l0040FAE0:
	word32 r10_5 = __ext(r5, 0<32>, 0x14<32>)
	word32 r9_7 = __ext(r7, 0<32>, 0x14<32>)
	word32 r10_13 = __ext(r7, 4<32>, 0xB<32>)
	word32 r8_101 = r4 >>u 0x1D<32> | r10_5 << 3<32>
	word32 r12_12 = r7 >>u 0x1F<32>
	word32 r13_17 = __ext(r5, 4<32>, 0xB<32>)
	word32 r9_169 = r6 >>u 0x1D<32> | r9_7 << 3<32>
	word32 r5_152 = r5 >>u 0x1F<32>
	word32 r3_135 = r4 << 3<32>
	branch r10_13 != 0x7FF<32> l0040FB24
l0040FB1E:
	branch (r9_169 | r6 << 3<32>) != 0<32> l0040FB28
l0040FB24:
	r12_12 = r7 >>u 0x1F<32> ^ 1<32>
l0040FB28:
	word32 r11_30 = r13_17 - r10_13
	branch r12_12 != r5 >>u 0x1F<32> l0040FDF2
l0040FDF2:
	word32 r11_228
	word32 r4_226
	branch r11_30 <= 0<32> l0040FEAA
l0040FEAA:
	branch r11_30 == 0<32> l0040FF5A
l0040FF5A:
	branch (r13_17 + 1<32> & 0x7FF<32>) >= 2<32> l00410010
l00410010:
	r11_228 = (r4 << 3<32>) - (r6 << 3<32>)
	r4_226 = r8_101 - r9_169 - CONVERT(r4 << 3<32> <u r11_228, bool, word32)
	branch __bit(r4_226, 0x17<32>) l00410090
l00410090:
	r3_135 = r11_228 | r4_226
	branch r3_135 != 0<32> l00410034
l00410022:
	r11_228 = (r6 << 3<32>) - (r4 << 3<32>)
	r5_152 = r12_12
	r4_226 = r9_169 - r8_101 - CONVERT(r6 << 3<32> <u r11_228, bool, word32)
l0040FF66:
	r10_13 = r8_101 | r4 << 3<32>
	word32 r7_56 = r9_169 | r6 << 3<32>
	branch r13_17 != 0<32> l0040FFC2
l0040FFC2:
	branch r10_13 != 0<32> l0040FFD2
l0040FFD2:
	r10_13 = 0x7FF<32>
	branch r7_56 == 0<32> l0040FD6A
l0040FFD8:
	word32 r4_62
	word32 r7_58 = r8_101 >>u 3<32>
	branch !__bit(r9_169 >>u 3<32> | r8_101 >>u 3<32>, 0x13<32>) l00410006
l00410006:
	r7_58 = 0xFFFFF<32>
	r4_62 = 0xFFFFFFFF<32>
l0040FFE8:
	r4_62 = r8_101 << 0x1D<32> | __ext(r4, 0<32>, 0x1D<32>)
	r11_30 = r5 >>u 0x1F<32>
l0040FFF6:
	r8_101 = r4_62 >>u 0x1D<32> | r7_58 << 3<32>
	r3_135 = r4_62 << 3<32>
l0040FFC6:
	branch r7_56 == 0<32> l004100EC
l004100EC:
	r5_152 = 0<32>
	r8_101 = 0x7FFFFF<32>
	r3_135 = 0xFFFFFFF8<32>
	r10_13 = 0x7FF<32>
l0040FFCA:
	r8_101 = r9_169
	r3_135 = r6 << 3<32>
	r5_152 = r12_12
l0040FF72:
	branch r10_13 != 0<32> l0040FF86
l0040FF86:
	branch r7_56 == 0<32> l0040FFBE
l0040FF88:
	word32 r4_82 = (r4 << 3<32>) - (r6 << 3<32>)
	word32 r7_85 = r8_101 - r9_169 - CONVERT(r4 << 3<32> <u r4_82, bool, word32)
	branch __bit(r7_85, 0x17<32>) l0040FFB2
l0040FFB2:
	r3_135 = r4_82 | r7_85
	branch r3_135 == 0<32> l00410098
l00410098:
l0040FFBA:
	r8_101 = r7_85
	r3_135 = r4_82
l0040FF9C:
	r3_135 = (r6 << 3<32>) - (r4 << 3<32>)
	r10_13 = 0<32>
	r8_101 = r9_169 - r8_101 - CONVERT(r6 << 3<32> <u r3_135, bool, word32)
l0040FF76:
	branch r7_56 != 0<32> l0040FEC4
l0040FF7A:
	r3_135 = 0<32>
l0040FF7E:
	r8_101 = 0<32>
	r10_13 = 0<32>
	r5_152 = 0<32>
l0040FEAE:
	word32 r8_141
	word32 r11_100
	branch r13_17 != 0<32> l0040FF1C
l0040FF1C:
	branch r10_13 == 0x7FF<32> l0040FEBC
l0040FF20:
	r11_100 = -r11_30
	r8_101 = r8_101 | 0x8000000<32>
l0040FEB2:
	branch (r8_101 | r4 << 3<32>) != 0<32> l0040FECA
l0040FECA:
	r11_100 = ~r11_30
	branch r11_100 != 0<32> l0040FEE6
l0040FEE6:
	branch r10_13 == 0x7FF<32> l0040FEBC
l0040FEEA:
	word32 r11_119
	word32 r3_108
	branch r11_100 >= 0x39<32> l0040FF50
l0040FF50:
	r3_108 = CONVERT((r8_101 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040FEEE:
	branch r11_100 >= 0x20<32> l0040FF2E
l0040FF2E:
	word32 r5_109 = r8_101 >>u r11_100
	word32 r7_110 = 0<32>
	branch r11_100 == 0x20<32> l0040FF40
l0040FF38:
	r7_110 = r8_101 << -r11_100
l0040FF40:
	r3_108 = r5_109 | CONVERT((r7_110 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040FF4C:
	r11_119 = 0<32>
l0040FEF2:
	word32 r7_122 = 0x20<32> - r11_100
	r11_119 = r8_101 >>u r11_100
	r3_108 = r8_101 << r7_122 | (r4 << 3<32>) >>u r11_100 | CONVERT((r4 << 3<32>) << r7_122 >u 0<32>, bool, word32)
l0040FF12:
	r3_135 = (r6 << 3<32>) - r3_108
	r8_141 = r9_169 - r11_119
l0040FED2:
	r3_135 = (r6 << 3<32>) - (r4 << 3<32>)
	r8_141 = r9_169 - r8_101
l0040FEDA:
	r5_152 = r12_12
	r8_101 = r8_141 - CONVERT(r6 << 3<32> <u r3_135, bool, word32)
l0040FEB8:
	branch r10_13 != 0x7FF<32> l0040FEC4
l0040FEBC:
	r3_135 = r9_169 | r6 << 3<32>
	branch r3_135 == 0<32> l004100E4
l004100E4:
	r8_101 = 0<32>
	r5_152 = r12_12
l0040FEC4:
	r8_101 = r9_169
	r3_135 = r6 << 3<32>
l0040FFAE:
	r5_152 = r12_12
l0040FDF6:
	word32 r7_170
	branch r10_13 != 0<32> l0040FE70
l0040FE70:
	branch r13_17 == 0x7FF<32> l0040FC02
l0040FE74:
	r9_169 = r9_169 | 0x8000000<32>
	r7_170 = r11_30
l0040FDFA:
	branch (r9_169 | r6 << 3<32>) == 0<32> l0040FB42
l0040FE02:
	r7_170 = r11_30 + 0xFFFFFFFF<32>
	branch r11_30 != 0xFFFFFFFF<32> l0040FE2C
l0040FE2C:
	branch r11_30 == 0x7FF<32> l0040FBEE
l0040FE30:
	word32 r7_188
	word32 r6_177
	branch r7_170 >= 0x39<32> l0040FEA0
l0040FEA0:
	r6_177 = CONVERT((r9_169 | r6 << 3<32>) >u 0<32>, bool, word32)
l0040FE34:
	branch r7_170 >= 0x20<32> l0040FE80
l0040FE80:
	word32 r4_178 = r9_169 >>u r7_170
	word32 r10_179 = 0<32>
	branch r7_170 == 0x20<32> l0040FE92
l0040FE8A:
	r10_179 = r9_169 << -r7_170
l0040FE92:
	r6_177 = CONVERT((r10_179 | r6 << 3<32>) >u 0<32>, bool, word32) | r4_178
l0040FE9C:
	r7_188 = 0<32>
l0040FE38:
	word32 r10_191 = 0x20<32> - r7_170
	r7_188 = r9_169 >>u r7_170
	r6_177 = CONVERT(r6 << 3<32> << r10_191 >u 0<32>, bool, word32) | (r9_169 << r10_191 | (r6 << 3<32>) >>u r7_170)
l0040FE5A:
	word32 r6_204 = (r4 << 3<32>) - r6_177
	r10_13 = r13_17
	r8_101 = r8_101 - r7_188 - CONVERT(r4 << 3<32> <u r6_204, bool, word32)
	r3_135 = r6_204
l0040FE08:
	word32 r6_219 = (r4 << 3<32>) - (r6 << 3<32>)
	r10_13 = 1<32>
	r8_101 = r8_101 - r9_169 - CONVERT(r4 << 3<32> <u r6_219, bool, word32)
	r3_135 = r6_219
l0040FE1E:
	branch __bit(r8_101, 0x17<32>) l0040FD6A
l0040FE22:
	r4_226 = __ext(r8_101, 0<32>, 0x17<32>)
	r11_228 = r3_135
	r13_17 = r10_13
l00410034:
	word32 r7_237 = __clz(r4_226)
	branch r4_226 != 0<32> l00410042
l0041003A:
	r7_237 = __clz(r11_228) + 0x20<32>
l00410042:
	word32 r8_246
	word32 r10_242 = r7_237 + 0xFFFFFFF8<32>
	branch r10_242 >= 0x20<32> l0041009C
l0041009C:
	r3_135 = 0<32>
	r8_246 = r11_228 << r7_237 + 0xFFFFFFD8<32>
l0041004A:
	r3_135 = r11_228 << r10_242
	r8_246 = r11_228 >>u -r10_242 | r4_226 << r10_242
l0041005E:
	branch r10_242 < r13_17 l004100CE
l004100CE:
	r10_13 = r13_17 - r10_242
	r8_101 = __ins(r8_246, 0<32>, 7<32>, 1<32>)
l00410062:
	word32 r10_260 = r10_242 - r13_17
	branch r10_260 >= 0xFFFFFFE1<32> l004100A8
l004100A8:
	word32 r7_263 = 0<32>
	word32 r10_264 = r8_246 >>u r10_260 + 0xFFFFFFE1<32>
	branch r10_260 == 0xFFFFFFE1<32> l004100BE
l004100B6:
	r7_263 = r8_246 << -(r10_260 + 1<32>)
l004100BE:
	r3_135 = r10_264 | CONVERT((r3_135 | r7_263) >u 0<32>, bool, word32)
	r8_101 = 0<32>
l0041006E:
	word32 r7_277 = 0x20<32> - (r10_260 + 1<32>)
	r3_135 = r8_246 << r7_277 | r3_135 >>u r10_260 + 1<32> | CONVERT(r3_135 << r7_277 >u 0<32>, bool, word32)
	r8_101 = r8_246 >>u r10_260 + 1<32>
l0040FB34:
	branch r11_30 <= 0<32> l0040FC82
l0040FC82:
	branch r11_30 == 0<32> l0040FD30
l0040FD30:
	r10_13 = r13_17 + 1<32>
	branch (r13_17 + 1<32> & 0x7FF<32>) >= 2<32> l0040FDD0
l0040FDD0:
	branch r13_17 == 0xFFFFF802<32> l0040FB50
l0040FDD4:
	word32 r6_286 = (r4 << 3<32>) + (r6 << 3<32>)
	word32 r11_290 = r8_101 + r9_169 + CONVERT(r6_286 <u r4 << 3<32>, bool, word32)
	r3_135 = r11_290 << 0x1F<32> | r6_286 >>u 1<32>
	r8_101 = r11_290 >>u 1<32>
l0040FD3C:
	word32 r7_294 = r8_101 | r4 << 3<32>
	branch r13_17 != 0<32> l0040FD88
l0040FD88:
	branch r7_294 == 0<32> l004100DE
l004100DE:
	r8_101 = r9_169
	r3_135 = r6 << 3<32>
l0040FD8C:
	r10_13 = 0x7FF<32>
	branch (r9_169 | r6 << 3<32>) == 0<32> l0040FD6A
l0040FD94:
	word32 r7_303
	word32 r5_299 = r8_101 >>u 3<32>
	branch !__bit(r9_169 >>u 3<32> | r8_101 >>u 3<32>, 0x13<32>) l0040FDC6
l0040FDC6:
	r5_299 = 0xFFFFF<32>
	r7_303 = 0xFFFFFFFF<32>
l0040FDA4:
	r7_303 = r8_101 << 0x1D<32> | __ext(r4, 0<32>, 0x1D<32>)
	r11_30 = r12_12
l0040FDB0:
	r8_101 = r7_303 >>u 0x1D<32> | r5_299 << 3<32>
	r3_135 = r7_303 << 3<32>
l0040FDBE:
	r5_152 = r11_30
l0040FD44:
	branch r7_294 == 0<32> l004100D8
l004100D8:
	r8_101 = r9_169
	r3_135 = r6 << 3<32>
l0040FFBE:
	r10_13 = 0<32>
l0040FD48:
	r10_13 = 0<32>
	branch (r9_169 | r6 << 3<32>) == 0<32> l0040FD6A
l0040FD50:
	word32 r6_323 = (r4 << 3<32>) + (r6 << 3<32>)
	r3_135 = r6_323
	r8_101 = r8_101 + r9_169 + CONVERT(r6_323 <u r4 << 3<32>, bool, word32)
	branch __bit(r8_101, 0x17<32>) l0040FD6A
l0040FD62:
	r8_101 = __ins(r8_101, 0<32>, 7<32>, 1<32>)
	r10_13 = 1<32>
l0040FC86:
	word32 r8_372
	word32 r11_331
	branch r13_17 != 0<32> l0040FCF2
l0040FCF2:
	branch r10_13 == 0x7FF<32> l0040FC94
l0040FCF6:
	r11_331 = -r11_30
	r8_101 = r8_101 | 0x8000000<32>
l0040FC8A:
	branch (r8_101 | r4 << 3<32>) != 0<32> l0040FCA4
l0040FCA4:
	r11_331 = ~r11_30
	branch r11_331 != 0<32> l0040FCBA
l0040FCBA:
	branch r10_13 == 0x7FF<32> l0040FC94
l0040FCBE:
	word32 r11_350
	word32 r3_339
	branch r11_331 >= 0x39<32> l0040FD26
l0040FD26:
	r3_339 = CONVERT((r8_101 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040FCC2:
	branch r11_331 >= 0x20<32> l0040FD04
l0040FD04:
	word32 r4_340 = r8_101 >>u r11_331
	word32 r7_341 = 0<32>
	branch r11_331 == 0x20<32> l0040FD16
l0040FD0E:
	r7_341 = r8_101 << -r11_331
l0040FD16:
	r3_339 = r4_340 | CONVERT((r7_341 | r4 << 3<32>) >u 0<32>, bool, word32)
l0040FD22:
	r11_350 = 0<32>
l0040FCC6:
	word32 r7_353 = 0x20<32> - r11_331
	r11_350 = r8_101 >>u r11_331
	r3_339 = r8_101 << r7_353 | (r4 << 3<32>) >>u r11_331 | CONVERT((r4 << 3<32>) << r7_353 >u 0<32>, bool, word32)
l0040FCE8:
	r3_135 = r3_339 + (r6 << 3<32>)
	r8_372 = r11_350 + r9_169
l0040FCAC:
	r3_135 = (r4 << 3<32>) + (r6 << 3<32>)
	r8_372 = r8_101 + r9_169
l0040FCB2:
	r8_101 = r8_372 + CONVERT(r3_135 <u r6 << 3<32>, bool, word32)
l0040FC90:
	branch r10_13 != 0x7FF<32> l0040FC9E
l0040FC94:
	r3_135 = r9_169 | r6 << 3<32>
	r8_101 = 0<32>
	branch r3_135 == 0<32> l0040FB54
l0040FC9E:
	r8_101 = r9_169
	r3_135 = r6 << 3<32>
l0040FB38:
	word32 r7_390
	branch r10_13 != 0<32> l0040FBFE
l0040FBFE:
	branch r13_17 != 0x7FF<32> l0040FC12
l0040FC12:
	r9_169 = r9_169 | 0x8000000<32>
	r7_390 = r11_30
l0040FC02:
	branch (r8_101 | r4 << 3<32>) != 0<32> l0040FDC0
l0040FC0A:
	r8_101 = 0<32>
	r3_135 = 0<32>
	r10_13 = r13_17
l0040FB3C:
	branch (r9_169 | r6 << 3<32>) != 0<32> l0040FBA4
l0040FBA4:
	r7_390 = r11_30 + 0xFFFFFFFF<32>
	branch r11_30 != 0xFFFFFFFF<32> l0040FBEA
l0040FBEA:
	branch r11_30 != 0x7FF<32> l0040FC1C
l0040FC1C:
	word32 r7_415
	word32 r6_404
	branch r7_390 >= 0x39<32> l0040FC78
l0040FC78:
	r6_404 = CONVERT((r9_169 | r6 << 3<32>) >u 0<32>, bool, word32)
l0040FC20:
	branch r7_390 >= 0x20<32> l0040FC58
l0040FC58:
	word32 r4_405 = r9_169 >>u r7_390
	word32 r10_406 = 0<32>
	branch r7_390 == 0x20<32> l0040FC6A
l0040FC62:
	r10_406 = r9_169 << -r7_390
l0040FC6A:
	r6_404 = CONVERT((r10_406 | r6 << 3<32>) >u 0<32>, bool, word32) | r4_405
l0040FC74:
	r7_415 = 0<32>
l0040FC24:
	word32 r10_418 = 0x20<32> - r7_390
	r7_415 = r9_169 >>u r7_390
	r6_404 = CONVERT(r6 << 3<32> << r10_418 >u 0<32>, bool, word32) | (r9_169 << r10_418 | (r6 << 3<32>) >>u r7_390)
l0040FC46:
	word32 r6_431 = r6_404 + (r4 << 3<32>)
	r10_13 = r13_17
	r8_101 = CONVERT(r6_431 <u r4 << 3<32>, bool, word32) + (r7_415 + r8_101)
	r3_135 = r6_431
l0040FBEE:
	branch (r8_101 | r4 << 3<32>) != 0<32> l0040FDC0
l0040FDC0:
	r10_13 = 0x7FF<32>
l0040FBF6:
	r8_101 = 0<32>
	r3_135 = 0<32>
	r10_13 = r11_30
l0040FBAA:
	word32 r6_454 = (r4 << 3<32>) + (r6 << 3<32>)
	r10_13 = 1<32>
	r8_101 = r8_101 + r9_169 + CONVERT(r6_454 <u r4 << 3<32>, bool, word32)
	r3_135 = r6_454
l0040FBBC:
	branch __bit(r8_101, 0x17<32>) l0040FD6A
l0040FBC0:
	r10_13 = r10_13 + 1<32>
	branch r10_13 == 0x7FF<32> l0040FB50
l0040FBCA:
	word32 r6_472 = __ins(r8_101, 0<32>, 7<32>, 1<32>)
	r3_135 = r6_472 << 0x1F<32> | (r3_135 >>u 1<32> | r3_135 & 1<32>)
	r8_101 = r6_472 >>u 1<32>
l0040FB42:
	r10_13 = r11_30
	branch r11_30 != 0x7FF<32> l0040FD6A
l0040FB48:
	branch (r8_101 | r4 << 3<32>) != 0<32> l0040FD6A
l0040FD6A:
	branch (r3_135 & 7<32>) == 0<32> l0040FB54
l0040FD72:
	branch (r3_135 & 0xF<32>) == 4<32> l0040FB54
l0040FD7A:
	word32 r6_491 = r3_135 + 4<32>
	r3_135 = r6_491
	r8_101 = r8_101 + CONVERT(r6_491 <u r3_135, bool, word32)
l0040FB50:
	r8_101 = 0<32>
	r3_135 = 0<32>
l0040FB54:
	branch __bit(r8_101, 0x17<32>) l0040FB6A
l0040FB58:
	r10_13 = r10_13 + 1<32>
	r8_101 = __ins(r8_101, 0<32>, 7<32>, 1<32>)
	branch r10_13 != 0x7FF<32> l0040FB6A
l0040FB66:
	r8_101 = 0<32>
	r3_135 = 0<32>
l0040FB6A:
	word32 r7_524 = r3_135 >>u 3<32> | r8_101 << 0x1D<32>
	word32 r8_526 = r8_101 >>u 3<32>
	branch r10_13 != 0x7FF<32> l0040FB90
l0040FB80:
	branch (r7_524 | r8_526) == 0<32> l004100FE
l004100FE:
	r8_526 = 0<32>
l0040FB88:
	r8_526 = r8_526 | 0x800000<32>
l0040FB90:
	r5Out = __ins(__ins(__ins(0<32>, r8_526, 0<32>, 1<32>), r10_13, 4<32>, 1<32>), r5_152, 0xF<32>, 1<32>)
	r7Out = r7_524
	r13Out = r13_17
	return r7_524
__subdf3_exit:


