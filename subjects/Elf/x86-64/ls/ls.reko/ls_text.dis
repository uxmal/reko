void fn00000000004028C0(word64 rsi, word32 edi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  edi:[0..31] fs:[0..15] rsi:[0..63]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn00000000004028C0_exit:
fn00000000004028C0_entry:
l00000000004028C0:
	fn000000000040D6A0(Mem23[rsi:word64])
	setlocale(6<i32>, 0x416919<u64>)
	bindtextdomain(0x413800<u64>, 0x41381C<u64>)
	textdomain(0x413800<u64>)
	Mem61[0x000000000061A580<p64>:word32] = 2<32>
	fn0000000000411EE0(0x40A200<u64>)
	Mem70[0x000000000061B030<p64>:word32] = 0<32>
	Mem71[0x000000000061B0D0<p64>:byte] = 1<8>
	Mem72[0x000000000061B180<p64>:word64] = 0x8000000000000000<64>
	word32 eax_78 = Mem72[0x000000000061A56C<p64>:word32]
	Mem75[0x000000000061B190<p64>:word64] = 0<64>
	Mem76[0x000000000061B188<p64>:word64] = 0xFFFFFFFFFFFFFFFF<64>
	Mem77[0x000000000061B0F0<p64>:byte] = 0<8>
	word64 rbp_1361 = rsi
	word32 ebx_1879 = edi
	word64 rsp_1336 = fp - 0x3B8<64>
	branch eax_78 == 2<32> l0000000000403203
l0000000000403203:
	Mem3648[0x000000000061B150<p64>:word32] = 2<32>
	fn000000000040E640(5<32>, 0<u64>)
l000000000040297B:
	branch eax_78 == 3<32> l00000000004029AF
l00000000004029AF:
	Mem90[0x000000000061B150<p64>:word32] = 0<32>
	fn000000000040E640(5<32>, 0<u64>)
l0000000000402980:
	branch eax_78 == 1<32> l000000000040298A
l000000000040298A:
	branch isatty(1<i32>) == 0<32> l00000000004037EC
l00000000004037EC:
	Mem108[0x000000000061B150<p64>:word32] = 1<32>
l000000000040299C:
	Mem109[0x000000000061B150<p64>:word32] = 2<32>
	Mem110[0x000000000061B0F0<p64>:byte] = 1<8>
l00000000004029C5:
	Mem113[0x000000000061B14C<p64>:word32] = 0<32>
	Mem114[0x000000000061B148<p64>:word32] = 0<32>
	Mem115[0x000000000061B147<p64>:byte] = 0<8>
	Mem116[0x000000000061B145<p64>:byte] = 0<8>
	Mem117[0x000000000061B144<p64>:byte] = 0<8>
	Mem118[0x000000000061B12C<p64>:word32] = 0<32>
	Mem119[0x000000000061B114<p64>:byte] = 0<8>
	Mem120[0x000000000061B110<p64>:word32] = 1<32>
	Mem121[0x000000000061B10E<p64>:byte] = 0<8>
	Mem122[0x000000000061B10D<p64>:byte] = 0<8>
	Mem123[0x000000000061B108<p64>:word32] = 0<32>
	Mem124[0x000000000061B100<p64>:word64] = 0<64>
	Mem125[0x000000000061B0F8<p64>:word64] = 0<64>
	Mem126[0x000000000061B17D<p64>:byte] = 0<8>
	word64 rax_127 = getenv(0x41382E<u64>)
	branch rax_127 == 0<64> l0000000000402A7F
l0000000000402A50:
	word32 eax_148 = SLICE(fn0000000000409E50(4<u64>, 0x416460<u64>, 0x416480<u64>, rax_127), word32, 0)
	branch eax_148 < 0<32> l0000000000403786
l0000000000403786:
	fn000000000040E930(rax_127, fs)
	error(0<i32>, 0<i32>, dcgettext(0<u64>, 0x415B00<u64>, 5<i32>), 0<32>)
l0000000000402A6F:
	fn000000000040E640(Mem126[CONVERT(eax_148, word32, int64) * 4<64> + 4285536<i64>:word32], 0<u64>)
l0000000000402A7F:
	Mem202[0x000000000061B0C8<p64>:word64] = 0x50<64>
	word64 rax_203 = getenv(0x41383C<u64>)
	branch rax_203 == 0<64> l0000000000402AB1
l0000000000402AA6:
	branch Mem210[rax_203:byte] != 0<8> l00000000004037B8
l00000000004037B8:
	word64 rbx_233 = <invalid>
	rsp_1336 = <invalid>
	ebx_1879 = SLICE(rbx_233, word32, 0) (alias)
	word64 r12_226
	word32 ebx_3885
	byte r13b_3886
	branch fn0000000000410E90(fp - 0x378<64>, 0<32>, 0<u64>, rax_203, 0<u64>, out ebx_3885, out rbp_1361, out r12_226, out r13b_3886) != 0<32> l0000000000403A93
l00000000004037D2:
	word64 rax_248 = Mem210[rsp_1336 + 0x40<64>:word64]
	branch rax_248 == 0<64> l0000000000403A93
l0000000000403A93:
	fn000000000040E930(r12_226, fs)
	error(0<i32>, 0<i32>, dcgettext(0<u64>, 0x415B48<u64>, 5<i32>), 0<32>)
l00000000004037E0:
	Mem288[0x000000000061B0C8<p64>:word64] = rax_248
l0000000000402AB1:
	branch ioctl(1<i32>, 0x5413<u32>, 0<32>) == 0xFFFFFFFF<32> l0000000000402ADD
l0000000000402ACC:
	word64 rax_304 = CONVERT(Mem291[rsp_1336 + 0x42<64>:word16], word16, uint64)
	branch SLICE(rax_304, word16, 0) == 0<16> l0000000000402ADD
l0000000000402AD6:
	Mem309[0x000000000061B0C8<p64>:word64] = rax_304
l0000000000402ADD:
	word64 rax_312 = getenv(0x413844<u64>)
	Mem316[0x000000000061B0D8<p64>:word64] = 8<64>
	branch rax_312 == 0<64> l0000000000402B22
l0000000000402AFA:
	word64 rbx_338 = <invalid>
	rsp_1336 = <invalid>
	ebx_1879 = SLICE(rbx_338, word32, 0) (alias)
	word64 r12_331
	byte r13b_3888
	word32 ebx_3887
	branch fn0000000000410E90(Mem316[rsp_1336 + 0x20<64>:word64], 0<32>, 0<u64>, rax_312, 0<u64>, out ebx_3887, out rbp_1361, out r12_331, out r13b_3888) != 0<32> l00000000004041BB
l00000000004041BB:
	fn000000000040E930(r12_331, fs)
	error(0<i32>, 0<i32>, dcgettext(0<u64>, 0x415B88<u64>, 5<i32>), 0<32>)
l0000000000402B16:
	Mem389[0x000000000061B0D8<p64>:word64] = Mem316[rsp_1336 + 0x40<64>:word64]
l0000000000402B22:
	byte r13b_3749 = 0<8>
	word64 r12_3358 = 0<u64>
l0000000000402B30:
	Mem410[rsp_1336 + 0x38<64>:word32] = 0xFFFFFFFF<32>
	word32 eax_411 = getopt_long(ebx_1879, rbp_1361, 0x415BC8<u64>, 0x413080<u64>, rsp_1336 + 0x38<64>)
	branch eax_411 == 0xFFFFFFFF<32> l000000000040321E
l000000000040321E:
	branch Mem410[0x000000000061B138<p64>:word64] == 0<64> l000000000040398A
l000000000040398A:
	word64 r15_429
	byte r14b_3902
	fn000000000040C810(0x61B138<u64>, 0x61B140<u64>, getenv(0x4138E1<u64>), out r14b_3902, out r15_429)
	word64 r14_428 = <invalid>
	byte r14b_456 = SLICE(r14_428, byte, 0)
	branch r15_429 == 0<64> l0000000000404531
l0000000000404531:
	branch getenv(0x4138E4<u64>) != 0<64> l00000000004039B2
l0000000000404544:
l00000000004039B2:
	Mem451[0x000000000061B134<p64>:word32] = Mem410[0x000000000061B140<p64>:word32]
	Mem453[0x000000000061A560<p64>:word64] = Mem451[0x000000000061B138<p64>:word64]
l00000000004039CC:
	branch r14b_456 == 0<8> l000000000040322C
l00000000004039D5:
	Mem460[0x000000000061B140<p64>:word32] = 0<32>
	Mem461[0x000000000061B138<p64>:word64] = 0x400<64>
l000000000040322C:
	word64 rdx_464 = Mem462[0x000000000061B0C8<p64>:word64]
	word64 rax_466 = 1<u64>
	branch rdx_464 >u 2<64> l00000000004037FB
l00000000004037FB:
	rax_466 = CONVERT(CONVERT(rdx_464, word64, uint128) /u 3<u64>, word64, uint64)
l0000000000403242:
	Mem485[0x000000000061B020<p64>:word64] = rax_466
	word64 rax_486 = fn000000000040E600(0<u64>)
	Mem495[0x000000000061B0E8<p64>:word64] = rax_486
	branch fn000000000040E630(rax_486) == 5<32> l000000000040426C
l000000000040426C:
	fn000000000040E650(1<32>, 0x20<32>, Mem495[0x000000000061B0E8<p64>:word64])
l0000000000403268:
	word64 rax_522 = CONVERT(Mem495[0x000000000061B12C<p64>:word32], word32, uint64)
	branch SLICE(rax_522, word32, 0) <=u 1<32> l00000000004032A9
l0000000000403273:
	word64 r14_526 = rax_522 + 0x4138ED<64>
	byte al_530 = Mem495[rax_522 + 0x4138ED<64>:byte]
	branch al_530 == 0<8> l00000000004032A9
l0000000000403289:
	fn000000000040E650(1<32>, CONVERT(al_530, byte, int32), Mem495[0x000000000061B0E8<p64>:word64])
	r14_526 = r14_526 + 1<64>
	al_530 = Mem495[r14_526:byte] (alias)
	branch al_530 != 0<8> l0000000000403289
l00000000004032A9:
	word64 rax_564 = fn000000000040E600(0<u64>)
	Mem577[0x000000000061B0E0<p64>:word64] = rax_564
	fn000000000040E650(1<32>, 0x3A<32>, rax_564)
	branch Mem577[0x000000000061B130<p64>:byte] == 0<8> l00000000004032E2
l00000000004032D2:
	branch Mem577[0x000000000061B150<p64>:word32] == 0<32> l00000000004032E2
l00000000004032DB:
	Mem593[0x000000000061B130<p64>:byte] = 0<8>
l00000000004032E2:
	branch Mem594[0x000000000061B14C<p64>:word32] <=u 2<32> l0000000000403965
l0000000000403965:
	branch r13b_3749 != 0<8> l00000000004032F4
l000000000040396E:
	branch Mem594[0x000000000061B150<p64>:word32] == 0<32> l000000000040380D
l000000000040397B:
	Mem617[0x000000000061B148<p64>:word32] = 4<32>
l00000000004032F4:
	branch Mem618[0x000000000061B150<p64>:word32] == 0<32> l000000000040380D
l000000000040380D:
	bool v146_3851 = r12_3358 == 0<64>
	branch r12_3358 == 0<64> l00000000004045C6
l00000000004045C6:
	word64 rax_637 = getenv(0x4138F5<u64>)
	r12_3358 = rax_637
	v146_3851 = rax_637 == 0<64>
	branch rax_637 != 0<64> l00000000004045DF
l00000000004045DB_1:
	r12_3358 = 0x413827<u64>
l00000000004045DF:
l0000000000403816:
l000000000040383E:
	word64 rsi_650 = r12_3358
	word64 rdi_652 = 0x412CA0<u64>
	word64 rcx_654 = 6<u64>
l0000000000403847:
	branch rcx_654 == 0<64> l0000000000403849
l0000000000403847_1:
	v146_3851 = Mem3780[rsi_3903:byte] == Mem3780[rdi_3904:byte]
	rsi_650 = rsi_3903 + 1<i64>
	rdi_652 = rdi_3904 + 1<i64>
	rcx_654 = rcx_654 - 1<64>
	rsi_3903 = rsi_650
	rdi_3904 = rdi_652
	branch Mem3780[rsi_3903:byte] != Mem3780[rdi_3904:byte] l0000000000403847
l0000000000403849:
	branch v146_3851 l0000000000403828
l0000000000403828:
	branch fn000000000040AB70(2<32>) == 0<8> l0000000000403301
l000000000040383A:
	r12_3358 = r12_3358 + 6<64>
	v146_3851 = r12_3358 == 0<64>
l000000000040384B:
	branch Mem3780[r12_3358:byte] == 0x2B<8> l00000000004043D9
l00000000004043D9:
	word64 r13_1098
	word64 r12_1089 = r12_3358 + 1<64>
	word64 rax_1093 = strchr(r12_1089, '\n')
	branch rax_1093 == 0<64> l000000000040444F
l000000000040444F:
	r13_1098 = r12_1089
l00000000004043F2:
	r13_1098 = rax_1093 + 1<64>
	branch strchr(rax_1093 + 1<64>, '\n') == 0<64> l0000000000404438
l0000000000404408:
	word64 r9_3896
	word64 r8_3895
	fn000000000040EC10(r12_1089, fs, out r8_3895, out r9_3896)
	error(2<i32>, 0<i32>, dcgettext(0<u64>, 0x413900<u64>, 5<i32>), 0<32>)
l0000000000404438:
	Mem1141[rax_1093:byte] = 0<8>
l000000000040443C:
	Mem1144[0x000000000061A3D0<p64>:word64] = r12_1089
	Mem1147[0x000000000061A3D8<p64>:word64] = r13_1098
l0000000000403856:
	word64 rax_695 = fn0000000000409E50(4<u64>, 0x4136F0<u64>, 0x413700<u64>, r12_3358)
	branch rax_695 < 0<64> l0000000000404564
l0000000000404564:
	fn0000000000409F80(rax_695, r12_3358, 0x41391D<u64>, fs)
	fputs_unlocked(dcgettext(0<u64>, 0x413928<u64>, 5<i32>), Mem3780[0x000000000061A650<p64>:word64])
	word64 rbx_754 = 0x413700<u64>
l000000000040459C:
	branch Mem3780[rbx_754:word64] == 0<64> l00000000004031D6
l00000000004031D6:
	fputs_unlocked(dcgettext(0<u64>, 0x415BF8<u64>, 5<i32>), Mem3780[0x000000000061A650<p64>:word64])
l00000000004045A8:
	__fprintf_chk(Mem3780[0x000000000061A650<p64>:word64], 1<i32>, 0x41393E<u64>, 0<32>)
	rbx_754 = rbx_754 + 8<64>
l0000000000403876:
	branch rax_695 == 1<64> l0000000000404549
l0000000000404549:
	Mem788[0x000000000061A3D8<p64>:word64] = 0x413966<64>
	Mem789[0x000000000061A3D0<p64>:word64] = 0x413966<64>
l0000000000403880:
	branch rax_695 <= 1<64> l0000000000404465
l0000000000404465:
	branch rax_695 != 0<64> l00000000004038A8
l000000000040446E:
	Mem794[0x000000000061A3D8<p64>:word64] = 0x41394E<64>
	Mem795[0x000000000061A3D0<p64>:word64] = 0x41394E<64>
l0000000000403886:
	branch rax_695 == 2<64> l00000000004045F3
l00000000004045F3:
	Mem798[0x000000000061A3D0<p64>:word64] = 0x413975<64>
	Mem799[0x000000000061A3D8<p64>:word64] = 0x413969<64>
l0000000000403890:
	branch rax_695 != 3<64> l00000000004038A8
l0000000000403896:
	branch fn000000000040AB70(2<32>) != 0<8> l000000000040460E
l000000000040460E:
	word64 rax_821 = dcgettext(0<u64>, Mem3780[0x000000000061A3D0<p64>:word64], 2<i32>)
	word64 rsi_822 = Mem3780[0x000000000061A3D8<p64>:word64]
	Mem830[0x000000000061A3D0<p64>:word64] = rax_821
	Mem832[0x000000000061A3D8<p64>:word64] = dcgettext(0<u64>, rsi_822, 2<i32>)
l00000000004038A8:
	branch strstr(Mem1148[0x000000000061A3D0<p64>:word64], 0x413766<u64>) == 0<64> l0000000000404484
l0000000000404484:
	branch strstr(Mem1156[0x000000000061A3D8<p64>:word64], 0x413766<u64>) != 0<64> l00000000004038C2
l000000000040449E:
l00000000004038C2:
	Mem1164[0x000000000061A748<p64>:word64] = 5<64>
l00000000004038CD:
	word64 r14_1166 = Mem1165[0x000000000061A748<p64>:word64]
	Mem1169[0x000000000061A748<p64>:word64] = 0<64>
	word64 r13_1168 = 0x61A760<u64>
	word32 r12d_1172 = 0x2000E<32>
l00000000004038EB:
	Mem1177[rsp_1336 + 0x40<64>:word64] = r14_1166
	branch fn000000000040CDC0(Mem1177[rsp_1336 + 0x20<64>:word64], 0xA1<u64>, r13_1168, nl_langinfo(r12d_1172), 0<32>, 0<32>) >u 0xA0<64> l0000000000404356
l0000000000404356:
	Mem1204[0x000000000061A748<p64>:word64] = 0<64>
l000000000040391F:
	word64 rax_1205 = Mem1177[rsp_1336 + 0x40<64>:word64]
	branch Mem1177[0x000000000061A748<p64>:word64] <u rax_1205 l0000000000403933
l000000000040392B_1:
	rax_1205 = Mem1177[0x000000000061A748<p64>:word64]
l0000000000403933:
	Mem1217[0x000000000061A748<p64>:word64] = rax_1205
	r12d_1172 = r12d_1172 + 1<32> (alias)
	r13_1168 = r13_1168 + 0xA1<64>
	branch r12d_1172 != 0x2001A<32> l00000000004038EB
l000000000040394E:
	branch rax_1205 <u r14_1166 l00000000004038CD
l0000000000403957:
	branch rax_1205 != 0<64> l0000000000403301
l0000000000403960:
l0000000000404361:
	error(0<i32>, 0<i32>, dcgettext(0<u64>, 0x415C30<u64>, 5<i32>), 0<32>)
l0000000000403301:
	word64 r12_1246 = CONVERT(Mem1242[0x000000000061A620<p64>:word32], word32, uint64)
	branch Mem1242[0x000000000061B129<p64>:byte] != 0<8> l0000000000403AC5
l0000000000403AC5:
	word64 rax_1250 = getenv(0x41397F<u64>)
	Mem1275[rsp_1336 + 0x38<64>:word64] = rax_1250
	branch rax_1250 == 0<64> l0000000000403AE2
l0000000000403AD9:
	branch Mem1275[rax_1250:byte] != 0<8> l00000000004044FA
l00000000004044FA:
	Mem1280[rsp_1336 + 0x30<64>:word16] = 0x3F3F<16>
	Mem1281[rsp_1336 + 0x32<64>:byte] = 0<8>
	word64 rax_1287 = fn0000000000410E30(rax_1250)
	Mem1300[0x000000000061B118<p64>:word64] = rax_1287
	Mem1301[rsp_1336 + 0x40<64>:word64] = rax_1287
	word64 r13_1283 = 0<u64>
	word32 edx_1297 = 0<32>
l000000000040451F:
	branch edx_1297 >u 5<32> l0000000000402985
l0000000000404528:
	switch (edx_1297) { l0000000000404703 l00000000004046D6 l000000000040473B l0000000000404690 l0000000000402985 l0000000000404647 }
l0000000000404647:
	error(0<i32>, 0<i32>, dcgettext(0<u64>, 0x415D98<u64>, 5<i32>), 0<32>)
	free(Mem1325[0x000000000061B118<p64>:word64])
	word64 rdi_1327 = Mem1325[0x000000000061B120<p64>:word64]
l0000000000404679:
	branch rdi_1327 == 0<64> l0000000000404787
l0000000000404787:
	Mem1332[0x000000000061B129<p64>:byte] = 0<8>
l0000000000404682:
	word64 r13_1334 = Mem1325[rdi_1327 + 0x20<64>:word64]
	free(rdi_1327)
	rdi_1327 = r13_1334
l0000000000404690:
	word64 rax_1337 = Mem1325[rsp_1336 + 0x38<64>:word64]
	Mem1339[rsp_1336 + 0x38<64>:word64] = rax_1337 + 1<64>
	edx_1297 = 5<32> (alias)
	branch Mem1339[rax_1337:byte] != 0x3D<8> l0000000000404528
l00000000004046AC:
	word64 rdi_1345 = Mem1339[rsp_1336 + 0x20<64>:word64]
	Mem1352[r13_1283 + 0x18<64>:word64] = Mem1339[rsp_1336 + 0x40<64>:word64]
	word64 rbx_1362 = <invalid>
	rsp_1336 = <invalid>
	ebx_1879 = SLICE(rbx_1362, word32, 0) (alias)
	word32 ebx_3897
	edx_1297 = 0<32> - CONVERT(fn00000000004049E0(r13_1283 + 0x10<64>, 0<8>, rsp_1336 + 0x38<64>, rdi_1345, out ebx_3897, out rbp_1361, out r12_1246) <u 1<8>, bool, word32) & 5<32> (alias)
l000000000040473B:
	word64 rax_1381 = Mem1325[rsp_1336 + 0x38<64>:word64]
	Mem1385[rsp_1336 + 0x38<64>:word64] = rax_1381 + 1<64>
	word64 r15_1383 = 0<u64>
	edx_1297 = 5<32> (alias)
	branch Mem1385[rax_1381:byte] != 0x3D<8> l0000000000404528
l000000000040475A:
l0000000000404772:
	word64 rsi_1392 = Mem1385[r15_1383 * 8<64> + 4273632<i64>:word64]
	word64 r14_1394 = CONVERT(SLICE(r15_1383, word32, 0), word32, int64)
	branch rsi_1392 != 0<64> l000000000040475C
l000000000040475C:
	r15_1383 = r15_1383 + 1<64>
	branch strcmp(rsp_1336 + 0x30<64>, rsi_1392) == 0<32> l0000000000404828
l0000000000404828:
	word64 rdi_1407 = Mem1385[rsp_1336 + 0x20<64>:word64]
	word64 rcx_1408 = (r14_1394 << 4<64>) + 0x61A3E0<64>
	Mem1415[rcx_1408 + 8<64>:word64] = Mem1385[rsp_1336 + 0x40<64>:word64]
	word64 rbx_1426 = <invalid>
	rsp_1336 = <invalid>
	ebx_1879 = SLICE(rbx_1426, word32, 0) (alias)
	edx_1297 = 0<32> (alias)
	word32 ebx_3899
	branch fn00000000004049E0(rcx_1408, 0<8>, rsp_1336 + 0x38<64>, rdi_1407, out ebx_3899, out rbp_1361, out r12_1246) != 0<8> l0000000000404528
l0000000000404782:
l0000000000404857:
	fn000000000040E930(rsp_1336 + 0x30<64>, fs)
	error(0<i32>, 0<i32>, dcgettext(0<u64>, 0x4139FB<u64>, 5<i32>), 0<32>)
	edx_1297 = 5<32> (alias)
l00000000004046D6:
	word64 rax_1479 = Mem1325[rsp_1336 + 0x38<64>:word64]
	edx_1297 = 5<32> (alias)
	r12_3907 = r12_1246
	branch Mem1325[rax_1479:byte] == 0<8> l0000000000404528
l00000000004046E9:
	Mem1485[rsp_1336 + 0x38<64>:word64] = rax_1479 + 1<64>
	Mem1491[rsp_1336 + 0x31<64>:byte] = Mem1485[rax_1479:byte]
	edx_1297 = 2<32> (alias)
l0000000000404703:
	word64 rax_1492 = Mem1325[rsp_1336 + 0x38<64>:word64]
	byte cl_1495 = Mem1325[rax_1492:byte]
	branch cl_1495 == 0x2A<8> l00000000004047D4
l00000000004047D4:
	word64 rax_1500 = fn0000000000410C40(0x28<u64>)
	word64 rax_1506 = Mem1325[0x000000000061B120<p64>:word64]
	word64 rdi_1507 = Mem1325[rsp_1336 + 0x20<64>:word64]
	Mem1513[rsp_1336 + 0x38<64>:word64] = Mem1325[rsp_1336 + 0x38<64>:word64] + 1<64>
	Mem1515[0x000000000061B120<p64>:word64] = rax_1500
	Mem1516[rax_1500 + 0x20<64>:word64] = rax_1506
	Mem1518[rax_1500 + 8<64>:word64] = Mem1516[rsp_1336 + 0x40<64>:word64]
	word64 rbx_1529 = <invalid>
	r13_1283 = rax_1500
	rsp_1336 = <invalid>
	ebx_1879 = SLICE(rbx_1529, word32, 0) (alias)
	word32 ebx_3898
	edx_1297 = (0<32> - CONVERT(fn00000000004049E0(rax_1500, 1<8>, rsp_1336 + 0x38<64>, rdi_1507, out ebx_3898, out rbp_1361, out r12_1246) <u 1<8>, bool, word32) & 2<32>) + 3<32> (alias)
l0000000000404714:
	branch cl_1495 == 0x3A<8> l00000000004047C6
l00000000004047C6:
	Mem1554[rsp_1336 + 0x38<64>:word64] = rax_1492 + 1<64>
l000000000040471D:
	branch cl_1495 == 0<8> l000000000040478E
l000000000040478E:
	branch Mem1558[0x000000000061A450<p64>:word64] != 6<64> l0000000000403AE2
l000000000040479C:
	branch strncmp(Mem1558[0x000000000061A458<p64>:word64], 0x413989<u64>, 6<i32>) != 0<32> l0000000000403AE2
l00000000004047BA:
	Mem1570[0x000000000061B198<p64>:byte] = 1<8>
l0000000000404721:
	Mem1572[rsp_1336 + 0x38<64>:word64] = rax_1492 + 1<64>
	Mem1578[rsp_1336 + 0x30<64>:byte] = Mem1572[rax_1492:byte]
	edx_1297 = 1<32> (alias)
l0000000000403AE2:
	branch Mem1579[0x000000000061B129<p64>:byte] == 0<8> l0000000000403315
l0000000000403AEF:
	branch SLICE(fn0000000000404CD0(0xD<32>), byte, 0) != 0<8> l0000000000403B2B
l0000000000403AFD:
	branch SLICE(fn0000000000404CD0(0xE<32>), byte, 0) == 0<8> l0000000000403B14
l0000000000403B0B:
	branch Mem1579[0x000000000061B198<p64>:byte] != 0<8> l0000000000403B2B
l0000000000403B14:
	branch SLICE(fn0000000000404CD0(0xC<32>), byte, 0) == 0<8> l0000000000403B32
l0000000000403B22:
	branch Mem1579[0x000000000061B150<p64>:word32] != 0<32> l0000000000403B32
l0000000000403B2B:
	Mem1635[0x000000000061B115<p64>:byte] = 1<8>
l0000000000403B32:
	branch tcgetpgrp(1<i32>) < 0<32> l0000000000403315
l0000000000403B44:
	sigemptyset(0x61B040<u64>)
	word64 r13_1645 = 0x412CC0<64>
l0000000000403B51:
	word32 r14d_1658 = Mem1735[r13_1645 + 0<64>:word32]
	sigaction(r14d_1658, 0<u64>, Mem1735[rsp_1336 + 0x20<64>:word64])
	branch Mem1735[rsp_1336 + 0x40<64>:word64] == 1<64> l0000000000403B7C
l0000000000403B6F:
	sigaddset(0x61B040<u64>, r14d_1658)
l0000000000403B7C:
	r13_1645 = r13_1645 + 4<64>
	word56 r13_56_8_3811 = SLICE(r13_1645, word56, 8)
	branch r13_1645 != 0xFFFFFFFFFFBED370<64> l0000000000403B51
l0000000000403B86:
	word64 rdi_1674 = rsp_1336 + 0x48<64>
	word64 rsi_1676 = 0x61B040<u64>
	word64 rcx_1678 = 0x20<u64>
l0000000000403B95:
	branch rcx_1678 == 0<64> l0000000000403B97
l0000000000403B97:
	Mem1681[rsp_1336 + 0xC8<64>:word32] = 0x10000000<32>
	word64 r13_1687 = SEQ(r13_56_8_3811, 0<8>) + 0x412CC0<64>
l0000000000403BAB:
	word32 r15d_1693 = Mem1688[r13_1687 + 0<64>:word32]
	branch sigismember(0x61B040<u64>, r15d_1693) == 0<32> l0000000000403BE4
l0000000000403BC3:
	word64 rsi_1701 = Mem1688[rsp_1336 + 0x20<64>:word64]
	word64 rax_1704 = 0x4057F0<u64>
	branch r15d_1693 == 0x14<32> l0000000000403BD5
l0000000000403BD1_1:
	rax_1704 = 0x4049B0<u64>
l0000000000403BD5:
	Mem1718[rsp_1336 + 0x40<64>:word64] = rax_1704
	sigaction(r15d_1693, rsi_1701, 0<u64>)
l0000000000403BE4:
	r13_1687 = r13_1687 + 4<64>
	branch r13_1687 != 0xFFFFFFFFFFBED370<64> l0000000000403BAB
l0000000000403BEE:
l0000000000403B95_1:
	Mem1730[rdi_1674:word32] = Mem1727[rsi_1676:word32]
	rsi_1676 = rsi_1676 + 4<i64>
	rdi_1674 = rdi_1674 + 4<i64>
	rcx_1678 = rcx_1678 - 1<64>
l0000000000403315:
	word32 r12d_1937 = SLICE(r12_1246, word32, 0)
	branch Mem1734[0x000000000061B110<p64>:word32] == 1<32> l0000000000403A39
l0000000000403A39:
	word32 eax_1755 = 2<32>
	branch Mem1734[0x000000000061B10D<p64>:byte] != 0<8> l0000000000403A5F
l0000000000403A47:
	branch Mem1734[0x000000000061B12C<p64>:word32] == 3<32> l0000000000403A5F
l0000000000403A50:
	eax_1755 = (0<32> - CONVERT(Mem1734[0x000000000061B150<p64>:word32] <u 1<32>, bool, word32) & 0xFFFFFFFE<32>) + 4<32> (alias)
l0000000000403A5F:
	Mem1759[0x000000000061B110<p64>:word32] = eax_1755
l0000000000403322:
	branch Mem1760[0x000000000061B10E<p64>:byte] != 0<8> l00000000004039EF
l00000000004039EF:
	word64 rax_1776 = fn000000000040B400(0x404990<u64>, 0x404980<u64>, 0<u64>, 0x1E<u64>, 0x4049D0<u64>)
	Mem1794[0x000000000061B1C8<p64>:word64] = rax_1776
	branch rax_1776 == 0<64> l00000000004043BB
l0000000000403A1B:
	_obstack_begin(0x61AF00<u64>, 0<i32>, 0<i32>, 0x402640<u64>, 0x4021F0<u64>)
l000000000040332F:
	byte al_1841
	word32 eax_1813 = Mem1810[0x000000000061B148<p64>:word32]
	branch eax_1813 == 4<32> l000000000040377A
l000000000040333E:
	branch eax_1813 == 2<32> l000000000040377A
l0000000000403347:
	branch Mem1810[0x000000000061B150<p64>:word32] == 0<32> l000000000040377A
l0000000000403354:
	branch Mem1810[0x000000000061B17D<p64>:byte] != 0<8> l000000000040377A
l0000000000403361:
	branch Mem1810[0x000000000061B144<p64>:byte] != 0<8> l000000000040377A
l000000000040377A:
	Mem1824[0x000000000061B0C1<p64>:byte] = 1<8>
l000000000040336E:
	Mem1826[0x000000000061B0C1<p64>:byte] = 0<8>
	al_1841 = 1<8> (alias)
	branch Mem1810[0x000000000061B10E<p64>:byte] != 0<8> l00000000004033A0
l0000000000403383:
	branch Mem1826[0x000000000061B129<p64>:byte] != 0<8> l00000000004033A0
l000000000040338C:
	branch Mem1826[0x000000000061B12C<p64>:word32] != 0<32> l00000000004033A0
l0000000000403395:
	branch Mem1826[0x000000000061B10C<p64>:byte] != 0<8> l00000000004033A0
l000000000040339E:
	al_1841 = 0<8> (alias)
l00000000004033A0:
	Mem1844[0x000000000061B0C0<p64>:byte] = al_1841
	Mem1846[0x000000000061B0C0<p64>:byte] = Mem1844[0x000000000061B0C0<p64>:byte] & 1<8>
	branch Mem1846[0x000000000061B130<p64>:byte] == 0<8> l00000000004033E8
l00000000004033B6:
	_obstack_begin(0x61AFC0<u64>, 0<i32>, 0<i32>, 0x402640<u64>, 0x4021F0<u64>)
	_obstack_begin(0x61AF60<u64>, 0<i32>, 0<i32>, 0x402640<u64>, 0x4021F0<u64>)
l00000000004033E8:
	Mem1931[0x000000000061B1B8<p64>:word64] = 0x64<64>
	word64 rax_1965 = fn0000000000410C40(0x4B00<u64>)
	Mem1970[0x000000000061B1B0<p64>:word64] = 0<64>
	Mem1971[0x000000000061B1C0<p64>:word64] = rax_1965
	fn0000000000404DD0()
	word32 r13d_1963 = ebx_1879 - r12d_1937
	word64 r12_2107 = r12_1246
	branch r13d_1963 <= 0<32> l00000000004042A0
l00000000004042A0:
	branch Mem1971[0x000000000061B10D<p64>:byte] == 0<8> l00000000004043A5
l00000000004043A5:
	fn0000000000404D20(1<32>, 0<u64>, 0x413990<u64>)
l00000000004042AD:
	fn0000000000407EA0(0x416919<u64>, 1<32>, 3<32>, 0x413990<u64>, fs)
l0000000000403423:
	word64 rbp_2099 = rbp_1361 + CONVERT(r12d_1937, word32, int64) * 8<64>
l000000000040342B:
	fn0000000000407EA0(0x416919<u64>, 1<32>, 0<32>, Mem1971[rbp_2099:word64], fs)
	r12_2107 = CONVERT(r12d_1937 + 1<32>, word32, uint64)
	r12d_1937 = SLICE(r12_2107, word32, 0) (alias)
	rbp_2099 = rbp_2099 + 8<64>
	branch ebx_1879 > r12d_1937 l000000000040342B
l000000000040344D:
	branch Mem1971[0x000000000061B1B0<p64>:word64] != 0<64> l0000000000404200
l0000000000404200:
	fn0000000000404E80()
	branch Mem1971[0x000000000061B10D<p64>:byte] == 0<8> l0000000000404454
l0000000000404454:
	fn0000000000405090(1<8>, 0<u64>)
l0000000000404212:
	branch Mem1971[0x000000000061B1B0<p64>:word64] == 0<64> l000000000040345B
l0000000000404220:
	fn00000000004079F0(r12_2107, fs)
	branch Mem1971[0x000000000061B190<p64>:word64] == 0<64> l00000000004044B5
l00000000004044B5:
	Mem2231[rsp_1336 + 0x18<64>:word64] = 0<64>
l0000000000404233:
	word64 rdi_2232 = Mem1971[0x000000000061A610<p64>:word64]
	word64 rax_2233 = Mem1971[rdi_2232 + 0x28<64>:word64]
	branch rax_2233 >=u Mem1971[rdi_2232 + 0x30<64>:word64] l00000000004044A3
l00000000004044A3:
	__overflow(rdi_2232, 10<i32>)
l0000000000404248:
	Mem2240[rdi_2232 + 0x28<64>:word64] = rax_2233 + 1<64>
	Mem2241[rax_2233:byte] = 0xA<8>
l0000000000404253:
	word64 rax_2243 = Mem2242[0x000000000061B190<p64>:word64]
	Mem2245[0x000000000061B018<p64>:word64] = Mem2242[0x000000000061B018<p64>:word64] + 1<64>
	Mem2248[rsp_1336 + 0x18<64>:word64] = rax_2243
l000000000040345B:
	word64 rax_2250 = Mem1971[0x000000000061B190<p64>:word64]
	Mem2260[rsp_1336 + 0x18<64>:word64] = rax_2250
	branch r13d_1963 > 1<32> l00000000004034D2
l000000000040346D:
l0000000000404385:
	branch rax_2250 == 0<64> l00000000004034D2
l000000000040438E:
	branch Mem2260[rax_2250 + 0x18<64>:word64] != 0<64> l00000000004034D2
l0000000000404399:
	Mem2267[0x000000000061B0D0<p64>:byte] = 0<8>
l00000000004034D2:
	branch Mem2269[rsp_1336 + 0x18<64>:word64] == 0<64> l00000000004040B5
l00000000004040B5:
	branch Mem2269[0x000000000061B129<p64>:byte] == 0<8> l0000000000404152
l00000000004040C2:
	branch Mem2269[0x000000000061B128<p64>:byte] == 0<8> l00000000004040ED
l00000000004040CB:
	branch Mem2269[0x000000000061A3E0<p64>:word64] == 2<64> l00000000004042CB
l00000000004042CB:
	branch memcmp(Mem2269[0x000000000061A3E8<p64>:word64], 0x4139E1<u64>, 2<u64>) != 0<32> l00000000004040D9
l00000000004042E9:
	branch Mem2269[0x000000000061A3F0<p64>:word64] != 1<64> l00000000004040D9
l00000000004042F7:
	branch Mem2269[Mem2269[0x000000000061A3F8<p64>:word64]:byte] != 0x6D<8> l00000000004040D9
l0000000000404307:
l00000000004040D9:
	word64 rcx_3900
	fn0000000000406440(0x61A3E0<u64>, out rcx_3900)
	word64 rcx_3901
	fn0000000000406440(0x61A3F0<u64>, out rcx_3901)
l00000000004040ED:
	fflush_unlocked(Mem2269[0x000000000061A610<p64>:word64])
	word64 rbx_2318 = 0x412CC0<u64>
l000000000040410D:
	word32 ebp_2326 = Mem2269[rbx_2318:word32]
	branch sigismember(0x61B040<u64>, ebp_2326) == 0<32> l0000000000404100
l000000000040411F:
	signal(ebp_2326, 0<u64>)
l0000000000404100:
	rbx_2318 = rbx_2318 + 4<64>
	branch rbx_2318 == 0x412CF0<64> l000000000040412A
l000000000040412A:
	word32 ebx_2348 = Mem2269[0x000000000061B034<p64>:word32]
	branch ebx_2348 == 0<32> l0000000000404143
l0000000000404134:
	raise(19<i32>)
	ebx_2348 = ebx_2348 - 1<32> (alias)
	branch ebx_2348 != 0<32> l0000000000404134
l0000000000404143:
	word64 rdi_2364 = CONVERT(Mem2269[0x000000000061B038<p64>:word32], word32, uint64)
	branch SLICE(rdi_2364, word32, 0) == 0<32> l0000000000404152
l000000000040414D:
	raise(SLICE(rdi_2364, int32, 0))
l0000000000404152:
	branch Mem2269[0x000000000061B130<p64>:byte] != 0<8> l000000000040430C
l000000000040430C:
	fn0000000000405630(0x61AFC0<u64>, 0x4139E4<u64>)
	fn0000000000405630(0x61AF60<u64>, 0x4139EE<u64>)
	fn000000000040E630(Mem2269[0x000000000061B0E8<p64>:word64])
	__printf_chk(1<i32>, 0x415D40<u64>, 0<32>)
l000000000040415F:
	word64 rbx_2420 = Mem2269[0x000000000061B1C8<p64>:word64]
	branch rbx_2420 == 0<64> l00000000004041F5
l000000000040416F:
	branch fn000000000040AFB0(rbx_2420) == 0<64> l00000000004041ED
l00000000004041ED:
	fn000000000040B640(rbx_2420)
l00000000004041F5:
	exit(Mem2269[0x000000000061B030<p64>:word32])
l000000000040417C:
	__assert_fail(0x415D68<u64>, 0x413736<u64>, 0x5DC<u32>, 0x412CA7<u64>)
l00000000004034DE:
	word64 r14_2452
	word64 rcx_2446 = Mem2269[rsp_1336 + 0x18<64>:word64]
	Mem2449[0x000000000061B190<p64>:word64] = Mem2269[rcx_2446 + 0x18<64>:word64]
	branch Mem2269[0x000000000061B1C8<p64>:word64] == 0<64> l0000000000403FB5
l0000000000403FB5:
	r14_2452 = Mem2449[Mem2449[rsp_1336 + 0x18<64>:word64]:word64]
l00000000004034FC:
	r14_2452 = Mem2449[rcx_2446:word64]
	branch r14_2452 == 0<64> l0000000000403FC2
l0000000000403FC2:
	word64 rax_2457 = Mem2449[0x000000000061AF18<p64>:word64]
	branch SLICE(rax_2457, word32, 0) - Mem2449[0x000000000061AF10<p64>:word32] <=u 0xF<32> l00000000004044C3
l00000000004044C3:
	__assert_fail(0x415C58<u64>, 0x413736<u64>, 0x3D5<u32>, 0x412C38<u64>)
l0000000000403FDC:
	branch Mem2449[0x000000000061AF20<p64>:word64] - rax_2457 >= 0xFFFFFFFFFFFFFFF0<64> l0000000000404002
l0000000000403FEC:
	_obstack_newchunk(0x61AF00<u64>, -16<i32>)
	rax_2457 = Mem2449[0x000000000061AF18<p64>:word64]
l0000000000404002:
	word64 rsi_2484 = Mem2449[rsp_1336 + 0x20<64>:word64]
	word64 rdi_2485 = Mem2449[0x000000000061B1C8<p64>:word64]
	Mem2486[0x000000000061AF18<p64>:word64] = rax_2457 - 0x10<64>
	word64 rax_2488 = Mem2486[rax_2457 - 8<64>:word64]
	Mem2489[rsp_1336 + 0x40<64>:word64] = Mem2486[rax_2457 - 0x10<64>:word64]
	Mem2490[rsp_1336 + 0x48<64>:word64] = rax_2488
	word64 rax_2493 = fn000000000040BB90(rsi_2484, rdi_2485)
	branch rax_2493 == 0<64> l0000000000404287
l0000000000404287:
	__assert_fail(0x413992<u64>, 0x413736<u64>, 0x59D<u32>, 0x412CA7<u64>)
l0000000000404039:
	free(rax_2493)
	word64 rbx_2520 = Mem2490[rsp_1336 + 0x18<64>:word64]
	free(Mem2490[rbx_2520:word64])
	free(Mem2490[rbx_2520 + 8<64>:word64])
	free(rbx_2520)
l0000000000403508:
	word64 rax_2526 = Mem2449[rsp_1336 + 0x18<64>:word64]
	word64 rbx_2529 = Mem2449[rax_2526 + 8<64>:word64]
	Mem2531[rsp_1336 + 0x2F<64>:byte] = Mem2449[rax_2526 + 0x10<64>:byte]
	word64 rax_2532 = __errno_location()
	Mem2535[rax_2532:word32] = 0<32>
	word64 rax_2537 = opendir(r14_2452)
	branch rax_2537 == 0<64> l0000000000404195
l0000000000404195:
	fn0000000000405810(r14_2452, dcgettext(0<u64>, 0x413998<u64>, 5<i32>), CONVERT(Mem2535[rsp_1336 + 0x2F<64>:byte], byte, word32), fs)
l000000000040353B:
	word64 rax_2715
	rax_2715 = rax_2537
	branch Mem2535[0x000000000061B1C8<p64>:word64] == 0<64> l00000000004035FF
l0000000000403549:
	byte al_2597
	word32 eax_2575 = dirfd(rax_2537)
	word64 rdx_2578 = Mem2535[rsp_1336 + 0x20<64>:word64]
	branch eax_2575 < 0<32> l0000000000403E95
l0000000000403E95:
	al_2597 = SLICE(__xstat(1<i32>, r14_2452, rdx_2578) >>u 0x1F<32>, byte, 0) (alias)
l000000000040355E:
	al_2597 = SLICE(__fxstat(1<i32>, eax_2575, rdx_2578) >>u 0x1F<32>, byte, 0) (alias)
l000000000040356D:
	branch al_2597 != 0<8> l0000000000403478
l0000000000403478:
	fn0000000000405810(r14_2452, dcgettext(0<u64>, 0x415CE8<u64>, 5<i32>), CONVERT(Mem2535[rsp_1336 + 0x2F<64>:byte], byte, word32), fs)
	closedir(rax_2537)
l0000000000403575:
	word64 rdx_2639 = Mem2535[rsp_1336 + 0x40<64>:word64]
	Mem2642[rsp_1336 + 0x10<64>:word64] = Mem2535[rsp_1336 + 0x48<64>:word64]
	Mem2643[rsp_1336 + 8<64>:word64] = rdx_2639
	word64 rax_2644 = fn0000000000410C40(0x10<u64>)
	word64 rdx_2650 = Mem2643[rsp_1336 + 8<64>:word64]
	word64 rdi_2652 = Mem2643[0x000000000061B1C8<p64>:word64]
	Mem2654[rax_2644:word64] = Mem2643[rsp_1336 + 0x10<64>:word64]
	Mem2655[rax_2644 + 8<64>:word64] = rdx_2650
	word64 rax_2659 = fn000000000040BB50(rax_2644, rdi_2652)
	branch rax_2659 == 0<64> l00000000004043BB
l00000000004043BB:
	fn0000000000410E50()
l00000000004035BF:
	branch rax_2644 != rax_2659 l0000000000403EE2
l0000000000403EE2:
	free(rax_2644)
	fn000000000040EAB0(r14_2452, fs)
	error(0<i32>, 0<i32>, dcgettext(0<u64>, 0x415D10<u64>, 5<i32>), 0<32>)
	closedir(rax_2537)
	Mem2714[0x000000000061B030<p64>:word32] = 2<32>
l00000000004035C8:
	rax_2715 = Mem2655[0x000000000061AF18<p64>:word64]
	branch Mem2655[0x000000000061AF20<p64>:word64] - rax_2715 <= 0xF<64> l0000000000404064
l0000000000404064:
	_obstack_newchunk(0x61AF00<u64>, 16<i32>)
	rax_2715 = Mem2655[0x000000000061AF18<p64>:word64]
l00000000004035E3:
	Mem2727[0x000000000061AF18<p64>:word64] = rax_2715 + 0x10<64>
	Mem2730[rax_2715 + 8<64>:word64] = Mem2727[rsp_1336 + 0x40<64>:word64]
	Mem2732[rax_2715:word64] = Mem2730[rsp_1336 + 0x48<64>:word64]
l00000000004035FF:
	branch Mem2733[0x000000000061B10E<p64>:byte] != 0<8> l0000000000403615
l0000000000403608:
	branch Mem2733[0x000000000061B0D0<p64>:byte] == 0<8> l00000000004036D6
l0000000000403615:
	branch Mem2733[0x000000000061A3C0<p64>:byte] != 0<8> l0000000000403646
l000000000040361E:
	word64 rdi_2741 = Mem2733[0x000000000061A610<p64>:word64]
	rax_2715 = Mem2733[rdi_2741 + 0x28<64>:word64]
	word32 rax_32_32_2854 = SLICE(rax_2715, word32, 32)
	branch rax_2715 >=u Mem2733[rdi_2741 + 0x30<64>:word64] l00000000004045E4
l00000000004045E4:
	rax_2715 = SEQ(rax_32_32_2854, __overflow(rdi_2741, 10<i32>)) (alias)
l0000000000403633:
	Mem2749[rdi_2741 + 0x28<64>:word64] = rax_2715 + 1<64>
	Mem2750[rax_2715:byte] = 0xA<8>
l000000000040363E:
	Mem2753[0x000000000061B018<p64>:word64] = Mem2751[0x000000000061B018<p64>:word64] + 1<64>
l0000000000403646:
	Mem2757[0x000000000061A3C0<p64>:byte] = 0<8>
	branch Mem2755[0x000000000061B130<p64>:byte] != 0<8> l0000000000403F2E
l0000000000403F2E:
	rax_2715 = fwrite_unlocked(0x413771<u64>, 1<u64>, 2<u64>, Mem2757[0x000000000061A610<p64>:word64])
	Mem2768[0x000000000061B018<p64>:word64] = Mem2757[0x000000000061B018<p64>:word64] + 2<64>
	branch Mem2768[0x000000000061B130<p64>:byte] == 0<8> l000000000040365A
l0000000000403F5E:
	rax_2715 = Mem2768[0x000000000061AF78<p64>:word64]
	branch Mem2768[0x000000000061AF80<p64>:word64] <u rax_2715 + 8<64> l000000000040407F
l000000000040407F:
	_obstack_newchunk(0x61AF60<u64>, 8<i32>)
	rax_2715 = Mem2768[0x000000000061AF78<p64>:word64]
l0000000000403F76:
	Mem2783[rax_2715:word64] = Mem2768[0x000000000061B018<p64>:word64]
	Mem2785[0x000000000061AF78<p64>:word64] = Mem2783[0x000000000061AF78<p64>:word64] + 8<64>
l000000000040365A:
	word64 rdx_2798 = Mem2797[0x000000000061B0E0<p64>:word64]
	word64 rdi_2799 = Mem2797[0x000000000061A610<p64>:word64]
	branch rbx_2529 != 0<64> l000000000040366F
l000000000040366B_1:
	rbx_2529 = r14_2452
l000000000040366F:
	fn00000000004052D0(0<u64>, rdx_2798, rbx_2529, rdi_2799, rax_2532, fs)
	Mem2857[0x000000000061B018<p64>:word64] = Mem2797[0x000000000061B018<p64>:word64] + rax_2715
	branch Mem2857[0x000000000061B130<p64>:byte] == 0<8> l00000000004036B3
l0000000000403689:
	word64 rax_2860 = Mem2857[0x000000000061AF78<p64>:word64]
	branch Mem2857[0x000000000061AF80<p64>:word64] <u rax_2860 + 8<64> l000000000040409A
l000000000040409A:
	_obstack_newchunk(0x61AF60<u64>, 8<i32>)
	rax_2860 = Mem2857[0x000000000061AF78<p64>:word64]
l00000000004036A1:
	Mem2872[rax_2860:word64] = Mem2857[0x000000000061B018<p64>:word64]
	Mem2874[0x000000000061AF78<p64>:word64] = Mem2872[0x000000000061AF78<p64>:word64] + 8<64>
l00000000004036B3:
	fwrite_unlocked(0x41393B<u64>, 1<u64>, 2<u64>, Mem2876[0x000000000061A610<p64>:word64])
	Mem2886[0x000000000061B018<p64>:word64] = Mem2876[0x000000000061B018<p64>:word64] + 2<64>
l00000000004036D6:
	fn0000000000404DD0()
	word32 eax_2908 = CONVERT(Mem2904[rsp_1336 + 0x2F<64>:byte], byte, word32)
	Mem2907[rsp_1336 + 8<64>:word64] = 0<64>
	Mem2909[rsp_1336 + 0x10<64>:word32] = eax_2908
l00000000004036F0:
	Mem2911[rax_2532:word32] = 0<32>
	word64 rax_2914 = readdir(rax_2537)
	branch rax_2914 == 0<64> l0000000000403CC0
l0000000000403CC0:
	branch Mem2911[rax_2532:word32] == 0<32> l0000000000403CF3
l0000000000403CC8:
	fn0000000000405810(r14_2452, dcgettext(0<u64>, 0x4139B1<u64>, 5<i32>), Mem2911[rsp_1336 + 0x10<64>:word32], fs)
	branch Mem2911[rax_2532:word32] == 0x4B<32> l0000000000403770
l0000000000403CF3:
	branch closedir(rax_2537) != 0<32> l0000000000403EBC
l0000000000403EBC:
	fn0000000000405810(r14_2452, dcgettext(0<u64>, 0x4139C6<u64>, 5<i32>), CONVERT(Mem2911[rsp_1336 + 0x2F<64>:byte], byte, word32), fs)
l0000000000403D03:
	fn0000000000404E80()
	branch Mem2911[0x000000000061B10E<p64>:byte] != 0<8> l0000000000403EAA
l0000000000403EAA:
	fn0000000000405090(Mem2911[rsp_1336 + 0x2F<64>:byte], r14_2452)
l0000000000403D15:
	branch Mem2911[0x000000000061B150<p64>:word32] == 0<32> l0000000000403D2C
l0000000000403D1F:
	branch Mem2911[0x000000000061B144<p64>:byte] == 0<8> l0000000000403E00
l0000000000403D2C:
	branch Mem2911[0x000000000061B130<p64>:byte] != 0<8> l0000000000403F8D
l0000000000403F8D:
	fwrite_unlocked(0x413771<u64>, 1<u64>, 2<u64>, Mem2911[0x000000000061A610<p64>:word64])
	Mem3044[0x000000000061B018<p64>:word64] = Mem2911[0x000000000061B018<p64>:word64] + 2<64>
l0000000000403D39:
	word64 rax_3052 = dcgettext(0<u64>, 0x4139DB<u64>, 5<i32>)
	fputs_unlocked(rax_3052, Mem3053[0x000000000061A610<p64>:word64])
	word64 rax_3059 = strlen(rax_3052)
	word64 rdi_3060 = Mem3053[0x000000000061A610<p64>:word64]
	Mem3062[0x000000000061B018<p64>:word64] = Mem3053[0x000000000061B018<p64>:word64] + rax_3059
	word64 rax_3063 = Mem3062[rdi_3060 + 0x28<64>:word64]
	branch rax_3063 >=u Mem3062[rdi_3060 + 0x30<64>:word64] l00000000004044EB
l00000000004044EB:
	__overflow(rdi_3060, 32<i32>)
l0000000000403D80:
	Mem3070[rdi_3060 + 0x28<64>:word64] = rax_3063 + 1<64>
	Mem3071[rax_3063:byte] = 0x20<8>
l0000000000403D8B:
	word64 r8_3073 = Mem3072[0x000000000061B138<p64>:word64]
	word32 edx_3087 = Mem3072[0x000000000061B140<p64>:word32]
	word64 rdi_3081 = Mem3072[rsp_1336 + 8<64>:word64]
	Mem3085[0x000000000061B018<p64>:word64] = Mem3072[0x000000000061B018<p64>:word64] + 1<64>
	word64 rax_3096 = fn000000000040BD70(0x200<u64>, edx_3087, rsp_1336 + 0xE0<64>, rdi_3081, r8_3073, fs)
	fputs_unlocked(rax_3096, Mem3085[0x000000000061A610<p64>:word64])
	word64 rax_3110 = strlen(rax_3096)
	word64 rdi_3111 = Mem3085[0x000000000061A610<p64>:word64]
	Mem3113[0x000000000061B018<p64>:word64] = Mem3085[0x000000000061B018<p64>:word64] + rax_3110
	word64 rax_3114 = Mem3113[rdi_3111 + 0x28<64>:word64]
	branch rax_3114 >=u Mem3113[rdi_3111 + 0x30<64>:word64] l00000000004044DC
l00000000004044DC:
	__overflow(rdi_3111, 10<i32>)
l0000000000403DED:
	Mem3121[rdi_3111 + 0x28<64>:word64] = rax_3114 + 1<64>
	Mem3122[rax_3114:byte] = 0xA<8>
l0000000000403DF8:
	Mem3125[0x000000000061B018<p64>:word64] = Mem3123[0x000000000061B018<p64>:word64] + 1<64>
l0000000000403E00:
	branch Mem3127[0x000000000061B1B0<p64>:word64] == 0<64> l00000000004034A1
l0000000000403E0E:
	fn00000000004079F0(rax_2532, fs)
l00000000004034A1:
	word64 rbx_3157 = Mem3156[rsp_1336 + 0x18<64>:word64]
	free(Mem3156[rbx_3157:word64])
	free(Mem3156[rbx_3157 + 8<64>:word64])
	free(rbx_3157)
	Mem3161[0x000000000061B0D0<p64>:byte] = 1<8>
l00000000004034C6:
	Mem3165[rsp_1336 + 0x18<64>:word64] = Mem3162[0x000000000061B190<p64>:word64]
l000000000040370C:
	word32 eax_3169 = Mem2911[0x000000000061B108<p64>:word32]
	branch eax_3169 == 2<32> l0000000000403C78
l000000000040371F:
	branch Mem2911[rax_2914 + 0x13<64>:byte] == 0x2E<8> l0000000000403C58
l0000000000403C58:
	branch eax_3169 == 0<32> l0000000000403770
l0000000000403C60:
	branch Mem2911[rax_2914 + 0x14<64> + CONVERT(CONVERT(Mem2911[rax_2914 + 0x14<64>:byte] == 0x2E<8>, bool, int8), int8, uint64):byte] == 0<8> l0000000000403770
l0000000000403C74:
l0000000000403729:
	branch eax_3169 != 0<32> l0000000000403C78
l0000000000403731:
	word64 r15_3189 = Mem2911[0x000000000061B0F8<p64>:word64]
	branch r15_3189 != 0<64> l0000000000403755
l0000000000403755:
	branch fnmatch(Mem2911[r15_3189:word64], rax_2914 + 0x13<64>, 4<i32>) != 0<32> l0000000000403748
l0000000000403748:
	r15_3189 = Mem2911[r15_3189 + 8<64>:word64]
	branch r15_3189 == 0<64> l0000000000403C78
l0000000000403769:
l000000000040373D:
l0000000000403C78:
	word64 r15_3209 = Mem2911[0x000000000061B100<p64>:word64]
	branch r15_3209 != 0<64> l0000000000403C9D
l0000000000403C9D:
	branch fnmatch(Mem2911[r15_3209:word64], rax_2914 + 0x13<64>, 4<i32>) != 0<32> l0000000000403C90
l0000000000403C90:
	r15_3209 = Mem2911[r15_3209 + 8<64>:word64]
	branch r15_3209 == 0<64> l0000000000403E20
l0000000000403CB1:
l0000000000403C84:
l0000000000403E20:
	word32 esi_3262 = 0<32>
	byte al_3240 = Mem2911[rax_2914 + 0x12<64>:byte] - 1<8>
	branch al_3240 >u 0xD<8> l0000000000403E37
l0000000000403E2D:
	esi_3262 = Mem2911[CONVERT(al_3240, byte, uint64) * 4<64> + 4271104<i64>:word32] (alias)
l0000000000403E37:
	Mem3287[rsp_1336 + 8<64>:word64] = Mem2911[rsp_1336 + 8<64>:word64] + fn0000000000407EA0(r14_2452, 0<32>, esi_3262, rax_2914 + 0x13<64>, fs)
	branch Mem3287[0x000000000061B150<p64>:word32] != 1<32> l0000000000403770
l0000000000403E56:
	branch Mem3287[0x000000000061B148<p64>:word32] != 0xFFFFFFFF<32> l0000000000403770
l0000000000403E63:
	branch Mem3287[0x000000000061B144<p64>:byte] != 0<8> l0000000000403770
l0000000000403E70:
	branch Mem3287[0x000000000061B10E<p64>:byte] != 0<8> l0000000000403770
l0000000000403E7D:
	fn0000000000404E80()
	fn00000000004079F0(rax_2532, fs)
	fn0000000000404DD0()
l0000000000403770:
	fn0000000000406490()
l0000000000402B5A:
	branch eax_411 >u 0xFFFFFF71<32> l00000000004031F9
l0000000000402B6A:
	switch (eax_411 + 0x83<32>) { l0000000000402DFF l0000000000402DF8 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402DDC l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402DC0 l0000000000402D75 l0000000000402D66 l0000000000402D5A l00000000004031F9 l0000000000402D4B l0000000000402D3F l0000000000402D30 l0000000000402D05 l00000000004031F9 l00000000004031F9 l0000000000402CF6 l00000000004031F9 l0000000000402CE8 l00000000004031F9 l00000000004031F9 l0000000000402CD7 l0000000000402CCB l0000000000402CB6 l0000000000402C85 l0000000000402C70 l00000000004031F9 l00000000004031F9 l0000000000402C5B l00000000004031F9 l0000000000402C4F l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l0000000000402C40 l0000000000402C2F l0000000000402C20 l0000000000402C14 l00000000004031F9 l0000000000402BDA l0000000000402BC4 l0000000000402B95 l0000000000402B8C l00000000004031F9 l0000000000402B84 l0000000000402B78 l00000000004031C7 l0000000000402B71 l00000000004031B1 l00000000004031A2 l0000000000403196 l000000000040318A l000000000040317E l0000000000403169 l000000000040315A l0000000000403145 l00000000004030DC l00000000004030CD l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004031F9 l00000000004030C1 l0000000000403084 l000000000040302E l000000000040301F l0000000000403010 l0000000000402FD6 l0000000000402FC1 l0000000000402FB5 l0000000000402F8A l0000000000402F50 l0000000000402F15 l0000000000402F09 l0000000000402EDA l0000000000402E9A l0000000000402E60 l0000000000402E54 }
l0000000000402E54:
	r12_3358 = Mem410[0x000000000061A640<p64>:word64]
l0000000000402E60:
	Mem865[0x000000000061B14C<p64>:word32] = Mem410[fn000000000040A120(0x412F50<u64>, 0x412F80<u64>, Mem410[0x000000000061A640<p64>:word64], 0x413883<u64>, 4<u64>, Mem410[0x000000000061A578<p64>:word64], fs) * 4<64> + 4271952<i64>:word32]
l0000000000402E9A:
	Mem894[0x000000000061B148<p64>:word32] = Mem410[fn000000000040A120(0x412FB0<u64>, 0x412FE0<u64>, Mem410[0x000000000061A640<p64>:word64], 0x41387C<u64>, 4<u64>, Mem410[0x000000000061A578<p64>:word64], fs) * 4<64> + 4272048<i64>:word32]
	r13b_3749 = 1<8> (alias)
l0000000000402EDA:
	Mem895[0x000000000061B140<p64>:word32] = 0x90<32>
	Mem896[0x000000000061B134<p64>:word32] = 0x90<32>
	Mem897[0x000000000061B138<p64>:word64] = 1<64>
	Mem898[0x000000000061A560<p64>:word64] = 1<64>
l0000000000402F09:
	Mem899[0x000000000061B0F0<p64>:byte] = 0<8>
l0000000000402F15:
	fn000000000040E640(Mem410[fn000000000040A120(0x416460<u64>, 0x416480<u64>, Mem410[0x000000000061A640<p64>:word64], 0x4138AD<u64>, 4<u64>, Mem410[0x000000000061A578<p64>:word64], fs) * 4<64> + 4285536<i64>:word32], 0<u64>)
l0000000000402F50:
	Mem962[0x000000000061B12C<p64>:word32] = Mem410[fn000000000040A120(0x4136B0<u64>, 0x4136C0<u64>, Mem410[0x000000000061A640<p64>:word64], 0x41389B<u64>, 4<u64>, Mem410[0x000000000061A578<p64>:word64], fs) * 4<64> + 4273840<i64>:word32]
l0000000000402F8A:
	word64 rax_965 = fn0000000000410C40(0x10<u64>)
	Mem971[rax_965:word64] = Mem410[0x000000000061A640<p64>:word64]
	word64 rdx_972 = Mem971[0x000000000061B0F8<p64>:word64]
	Mem973[0x000000000061B0F8<p64>:word64] = rax_965
	Mem974[rax_965 + 8<64>:word64] = rdx_972
l0000000000402FB5:
	Mem975[0x000000000061B10C<p64>:byte] = 1<8>
l0000000000402FC1:
	Mem976[0x000000000061B150<p64>:word32] = 0<32>
	r12_3358 = 0x413813<u64>
l0000000000402FD6:
	Mem1005[0x000000000061B150<p64>:word32] = Mem410[fn000000000040A120(0x413010<u64>, 0x413040<u64>, Mem410[0x000000000061A640<p64>:word64], 0x41388A<u64>, 4<u64>, Mem410[0x000000000061A578<p64>:word64], fs) * 4<64> + 4272144<i64>:word32]
l0000000000403010:
	Mem1006[0x000000000061B12C<p64>:word32] = 2<32>
l000000000040301F:
	Mem1007[0x000000000061B110<p64>:word32] = 4<32>
l000000000040302E:
	word64 rsi_1008 = Mem410[0x000000000061A640<p64>:word64]
	branch rsi_1008 == 0<64> l0000000000403A7C
l000000000040303E:
	word32 eax_1036 = Mem410[fn000000000040A120(0x412EC0<u64>, 0x412F00<u64>, rsi_1008, 0x413893<u64>, 4<u64>, Mem410[0x000000000061A578<p64>:word64], fs) * 4<64> + 4271808<i64>:word32]
	branch eax_1036 == 1<32> l0000000000403A7C
l000000000040306F:
	branch eax_1036 == 2<32> l0000000000403A6A
l0000000000403A6A:
	branch isatty(1<i32>) == 0<32> l0000000000403078
l0000000000403A7C:
	Mem1047[0x000000000061B129<p64>:byte] = 1<8>
	Mem1048[0x000000000061B0D8<p64>:word64] = 0<64>
l0000000000403078:
	Mem1049[0x000000000061B129<p64>:byte] = 0<8>
l0000000000403084:
	word64 r15_3894
	byte r14b_3893
	word32 eax_1068 = fn000000000040C810(0x61B138<u64>, 0x61B140<u64>, Mem410[0x000000000061A640<p64>:word64], out r14b_3893, out r15_3894)
	branch eax_1068 != 0<32> l00000000004043C0
l00000000004043C0:
	fn00000000004112D0(Mem410[rsp_1336 + 0x38<64>:word32], eax_1068)
l00000000004030A2:
	Mem3341[0x000000000061B134<p64>:word32] = Mem410[0x000000000061B140<p64>:word32]
	Mem3343[0x000000000061A560<p64>:word64] = Mem3341[0x000000000061B138<p64>:word64]
l00000000004030C1:
	Mem3344[0x000000000061B146<p64>:byte] = 1<8>
l00000000004030CD:
	Mem3345[0x000000000061B150<p64>:word32] = 3<32>
l00000000004030DC:
	word64 rbx_3365 = <invalid>
	word64 r13_3359 = <invalid>
	rsp_1336 = <invalid>
	ebx_1879 = SLICE(rbx_3365, word32, 0) (alias)
	r13b_3749 = SLICE(r13_3359, byte, 0) (alias)
	word32 ebx_3891
	byte r13b_3892
	branch fn0000000000410E90(Mem410[rsp_1336 + 0x20<64>:word64], 0<32>, 0<u64>, Mem410[0x000000000061A640<p64>:word64], 0<u64>, out ebx_3891, out rbp_1361, out r12_3358, out r13b_3892) != 0<32> l0000000000403100
l00000000004030F8:
	branch Mem410[rsp_1336 + 0x40<64>:word64] != 0<64> l0000000000403134
l0000000000403100:
	fn000000000040E930(Mem410[0x000000000061A640<p64>:word64], fs)
	error(2<i32>, 0<i32>, dcgettext(0<u64>, 0x41384C<u64>, 5<i32>), 0<32>)
l0000000000403134:
	Mem3421[0x000000000061B0C8<p64>:word64] = Mem410[rsp_1336 + 0x40<64>:word64]
l0000000000403145:
	Mem3422[0x000000000061B148<p64>:word32] = 3<32>
	r13b_3749 = 1<8> (alias)
l000000000040315A:
	Mem3425[0x000000000061B14C<p64>:word32] = 2<32>
l0000000000403169:
	Mem3426[0x000000000061B148<p64>:word32] = 4<32>
	r13b_3749 = 1<8> (alias)
l000000000040317E:
	Mem3429[0x000000000061B144<p64>:byte] = 1<8>
l000000000040318A:
	Mem3430[0x000000000061B147<p64>:byte] = 1<8>
l0000000000403196:
	Mem3431[0x000000000061B0F0<p64>:byte] = 1<8>
l00000000004031A2:
	Mem3432[0x000000000061B12C<p64>:word32] = 1<32>
l00000000004031B1:
	Mem3433[0x000000000061B150<p64>:word32] = 0<32>
	Mem3434[0x000000000061A568<p64>:byte] = 0<8>
l0000000000402B71:
	Mem3435[0x000000000061B145<p64>:byte] = 1<8>
l00000000004031C7:
	Mem3436[0x000000000061B150<p64>:word32] = 4<32>
l0000000000402B78:
	Mem3437[0x000000000061B150<p64>:word32] = 0<32>
l0000000000402B84:
l0000000000402B8C:
	Mem3440[0x000000000061B114<p64>:byte] = 1<8>
l0000000000402B95:
	Mem3441[0x000000000061B140<p64>:word32] = 0xB0<32>
	Mem3442[0x000000000061B134<p64>:word32] = 0xB0<32>
	Mem3443[0x000000000061B138<p64>:word64] = 1<64>
	Mem3444[0x000000000061A560<p64>:word64] = 1<64>
l0000000000402BC4:
	Mem3445[0x000000000061B150<p64>:word32] = 0<32>
	Mem3446[0x000000000061A569<p64>:byte] = 0<8>
l0000000000402BDA:
	Mem3448[0x000000000061B108<p64>:word32] = 2<32>
	Mem3449[0x000000000061B148<p64>:word32] = 0xFFFFFFFF<32>
	branch Mem410[0x000000000061B150<p64>:word32] == 0<32> l0000000000403C36
l0000000000403C36:
	Mem3463[0x000000000061B150<p64>:word32] = 0<32> - CONVERT(isatty(1<i32>) <u 1<32>, bool, word32) + 2<32>
l0000000000402BFB:
	Mem3464[0x000000000061B144<p64>:byte] = 0<8>
	Mem3465[0x000000000061B129<p64>:byte] = 0<8>
	r13b_3749 = 1<8> (alias)
l0000000000402C14:
	Mem3468[0x000000000061B10D<p64>:byte] = 1<8>
l0000000000402C20:
	Mem3469[0x000000000061B14C<p64>:word32] = 1<32>
l0000000000402C2F:
	fn000000000040E640(5<32>, 0<u64>)
l0000000000402C40:
	Mem3483[0x000000000061B108<p64>:word32] = 2<32>
l0000000000402C4F:
	Mem3484[0x000000000061B17D<p64>:byte] = 1<8>
l0000000000402C5B:
	Mem3485[0x000000000061B148<p64>:word32] = 1<32>
	r13b_3749 = 1<8> (alias)
l0000000000402C70:
	Mem3488[0x000000000061B148<p64>:word32] = 0xFFFFFFFF<32>
	r13b_3749 = 1<8> (alias)
l0000000000402C85:
	word64 rbx_3510 = <invalid>
	word64 r13_3504 = <invalid>
	rsp_1336 = <invalid>
	ebx_1879 = SLICE(rbx_3510, word32, 0) (alias)
	r13b_3749 = SLICE(r13_3504, byte, 0) (alias)
	word32 ebx_3889
	byte r13b_3890
	branch fn0000000000410E90(Mem410[rsp_1336 + 0x20<64>:word64], 0<32>, 0<u64>, Mem410[0x000000000061A640<p64>:word64], 0<u64>, out ebx_3889, out rbp_1361, out r12_3358, out r13b_3890) != 0<32> l0000000000403BFD
l0000000000403BFD:
	fn000000000040E930(Mem410[0x000000000061A640<p64>:word64], fs)
	error(2<i32>, 0<i32>, dcgettext(0<u64>, 0x413867<u64>, 5<i32>), 0<32>)
l0000000000402CA5:
	Mem3561[0x000000000061B0D8<p64>:word64] = Mem410[rsp_1336 + 0x40<64>:word64]
l0000000000402CB6:
	Mem3562[0x000000000061B148<p64>:word32] = 2<32>
	r13b_3749 = 1<8> (alias)
l0000000000402CCB:
	Mem3565[0x000000000061B10E<p64>:byte] = 1<8>
l0000000000402CD7:
	fn000000000040E640(3<32>, 0<u64>)
l0000000000402CE8:
	fn000000000040E640(0<32>, 0<u64>)
l0000000000402CF6:
	Mem3592[0x000000000061B110<p64>:word32] = 5<32>
l0000000000402D05:
	word64 r15_3595 = Mem410[0x000000000061A640<p64>:word64]
	word64 rax_3596 = fn0000000000410C40(0x10<u64>)
	word64 rdx_3601 = Mem410[0x000000000061B100<p64>:word64]
	Mem3602[rax_3596:word64] = r15_3595
	Mem3603[rax_3596 + 8<64>:word64] = rdx_3601
	Mem3604[0x000000000061B100<p64>:word64] = rax_3596
l0000000000402D30:
	Mem3605[0x000000000061B110<p64>:word32] = 3<32>
l0000000000402D3F:
	Mem3606[0x000000000061A568<p64>:byte] = 0<8>
l0000000000402D4B:
	Mem3607[0x000000000061B12C<p64>:word32] = 3<32>
l0000000000402D5A:
	Mem3608[0x000000000061B130<p64>:byte] = 1<8>
l0000000000402D66:
	Mem3609[0x000000000061B150<p64>:word32] = 2<32>
l0000000000402D75:
	word64 rax_3612 = fn0000000000410C40(0x10<u64>)
	word64 rdx_3617 = Mem410[0x000000000061B100<p64>:word64]
	Mem3618[rax_3612:word64] = 0x413864<64>
	Mem3621[0x000000000061B100<p64>:word64] = rax_3612
	Mem3622[rax_3612 + 8<64>:word64] = rdx_3617
	word64 rax_3623 = fn0000000000410C40(0x10<u64>)
	word64 rdx_3628 = Mem3622[0x000000000061B100<p64>:word64]
	Mem3629[rax_3623:word64] = 0x413863<64>
	Mem3630[rax_3623 + 8<64>:word64] = rdx_3628
	Mem3631[0x000000000061B100<p64>:word64] = rax_3623
l0000000000402DC0:
	branch Mem410[0x000000000061B108<p64>:word32] != 0<32> l0000000000402B30
l0000000000402DCD:
	Mem3634[0x000000000061B108<p64>:word32] = 1<32>
l0000000000402DDC:
	branch Mem410[0x000000000061B150<p64>:word32] == 0<32> l0000000000402B30
l0000000000402DE9:
	Mem3637[0x000000000061B150<p64>:word32] = 1<32>
l00000000004031F9:
	fn0000000000409750(2<32>)
l0000000000402DF8:
	fn0000000000409750(0<32>)
l0000000000402DFF:
	word64 rsi_3667
	word32 eax_3663 = Mem410[0x000000000061A56C<p64>:word32]
	word64 rcx_3662 = Mem410[0x000000000061A570<p64>:word64]
	branch eax_3663 == 1<32> l0000000000403BF3
l0000000000403BF3:
	rsi_3667 = 0x413807<u64>
l0000000000402E15:
	rsi_3667 = 0x41380F<u64>
	branch eax_3663 == 2<32> l0000000000402E26
l0000000000402E22_1:
	rsi_3667 = 0x41380E<u64>
l0000000000402E26:
	word64 rdi_3676 = Mem410[0x000000000061A610<p64>:word64]
	Mem3678[rsp_1336:word64] = 0<64>
	fn0000000000410B30(0<8>, rcx_3662, rsi_3667, rdi_3676)
	exit(0<i32>)
l0000000000402985:
	abort()


void fn0000000000404890(word64 rdx, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdx:[0..63] Stack +0000:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000404890_exit:
fn0000000000404890_entry:
l0000000000404890:
	__align_stack<word64>(fp + 8<i64>)
	__libc_start_main(0x4028C0<64>, SLICE(qwArg00, int32, 0), fp + 8<i64>, 0x411E60<64>, 0x411ED0<64>, rdx, fp)
	__hlt()


void fn00000000004048C0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi Top
// Preserved: rbp rsp
fn00000000004048C0_entry:
l00000000004048C0:
	branch false l00000000004048D7
l00000000004048D7:
	branch true l00000000004048D5
l00000000004048E1:
	call 0<u64> (retsize: 0;)
		uses: rdi:0x61A5F8<u64>
	return
l00000000004048D5:
	return
fn00000000004048C0_exit:


byte fn00000000004049E0(word64 rcx, byte dl, word64 rsi, word64 rdi, ptr64 & ebxOut, ptr64 & rbpOut, ptr64 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  dl:[0..7] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r12 rax rbp rbx rsp
// Trashed: SCZO dl r10 r11 r12 r8 r9 rax rbp rbx rcx rdi rsi rsp Top
// Preserved: r14
fn00000000004049E0_entry:
l00000000004049E0:
	word64 r8_124 = Mem6[rsi:word64]
	word64 r9_110 = Mem6[rdi:word64]
	word64 r10_116 = 0<u64>
	word64 r11_127 = 0<u64>
l0000000000404A06:
	word64 rax_291
	bool v33_420
	byte al_152
	word32 eax_247
	word32 eax_190
	byte al_139
	word32 r11_32_32_510 = SLICE(r11_127, word32, 32)
	branch false l0000000000404A59
l0000000000404A59:
	word64 rax_40 = CONVERT(Mem131[r8_124:byte], byte, uint64)
	branch SLICE(rax_40, byte, 0) <=u 0x37<8> l0000000000404A50
l0000000000404A50:
	r11_127 = CONVERT(SLICE(rax_40, word32, 0) - 0x30<32> + SLICE(r11_127, word32, 0) * 8<32>, word32, uint64)
	r8_124 = r8_124 + 1<64>
l0000000000404A0B:
	branch false l0000000000404B20
l0000000000404B20:
	branch true l0000000000404A70
l0000000000404A11:
	branch false l0000000000404AE0
l0000000000404AE0:
	word64 rax_59 = CONVERT(Mem131[r8_124:byte], byte, uint64)
	word64 rcx_576 = CONVERT(SLICE(rax_59, word32, 0) - 0x30<32>, word32, uint64)
	word32 r11d_373 = r11_127
	r11_127 = SEQ(r11_32_32_510, r11_127) (alias)
	branch SLICE(rcx_576, byte, 0) >u 0x36<8> l0000000000404A65
l0000000000404AF0:
	word64 r14_68 = 1<u64> << SLICE(rcx_576, byte, 0)
	byte r11b_106 = SLICE(r11d_373, byte, 0)
	word24 r11d_24_8_517 = SLICE(r11d_373, word24, 8)
	word32 r14d_69 = SLICE(r14_68, word32, 0)
	branch (r14d_69 & 0x7E0000<32>) != 0<32> l0000000000404B78
l0000000000404B78:
	r8_124 = r8_124 + 1<64>
	rax_59 = CONVERT(Mem131[r8_124:byte], byte, uint64)
	r11_127 = CONVERT(SLICE(rax_59, word32, 0) - 0x37<32> + (r11d_373 << 4<32>), word32, uint64)
	rcx_576 = CONVERT(SLICE(rax_59, word32, 0) - 0x30<32>, word32, uint64)
	r11d_373 = SLICE(r11_127, word32, 0) (alias)
	r11_32_32_510 = SLICE(r11_127, word32, 32) (alias)
	branch SLICE(rcx_576, byte, 0) >u 0x36<8> l0000000000404A65
l0000000000404B95:
l0000000000404AFF:
	branch (r14_68 & 0x7E000000000000<64>) != 0<64> l0000000000404AD0
l0000000000404AD0:
	r11_127 = CONVERT(SLICE(rax_59, word32, 0) - 0x57<32> + (r11d_373 << 4<32>), word32, uint64)
	r8_124 = r8_124 + 1<64>
	r11_32_32_510 = SLICE(r11_127, word32, 32) (alias)
l0000000000404B04:
	r11_127 = SEQ(r11_32_32_510, r11d_24_8_517, r11b_106) (alias)
	branch (r14d_69 & 0x3FF<32>) == 0<32> l0000000000404A65
l0000000000404A65:
	Mem113[r9_110:byte] = SLICE(r11_127, byte, 0)
	r10_116 = r10_116 + 1<64>
	r9_110 = r9_110 + 1<64>
l0000000000404B11:
	r11_127 = CONVERT(SLICE(rax_59, word32, 0) - 0x30<32> + (r11d_373 << 4<32>), word32, uint64)
	r8_124 = r8_124 + 1<64>
	r11_32_32_510 = SLICE(r11_127, word32, 32) (alias)
l0000000000404A1A:
	branch true l0000000000404A70
l0000000000404A22:
	word64 rax_133 = CONVERT(Mem131[r8_124:byte], byte, uint64)
	eax_247 = SLICE(rax_133, word32, 0) (alias)
	al_139 = SLICE(rax_133, byte, 0) (alias)
	branch SLICE(rax_133, byte, 0) <=u 0x7E<8> l0000000000404AA0
l0000000000404A2E:
	branch al_139 == 0x3F<8> l0000000000404CB0
l0000000000404CB0:
	Mem143[r9_110:byte] = 0x7F<8>
	r10_116 = r10_116 + 1<64>
	r9_110 = r9_110 + 1<64>
l0000000000404A70:
	al_152 = Mem149[r8_124:byte] (alias)
	v33_420 = al_152 <= 0x3D<8>
	branch al_152 == 0x3D<8> l0000000000404ABA
l0000000000404A78:
	branch v33_420 l0000000000404B40
l0000000000404B40:
	branch al_152 == 0<8> l0000000000404B48
l0000000000404B44:
	branch al_152 != 0x3A<8> l0000000000404B60
l0000000000404B48:
	eax_190 = 5<32> (alias)
l0000000000404A7E:
	branch al_152 == 0x5C<8> l0000000000404CA0
l0000000000404CA0:
	r8_124 = r8_124 + 1<64>
l0000000000404B29:
	word64 rax_173 = CONVERT(Mem170[r8_124:byte], byte, uint64)
	byte al_174 = SLICE(rax_173, byte, 0)
	word32 eax_177 = SLICE(rax_173, word32, 0)
	branch al_174 >u 0x78<8> l0000000000404C90
l0000000000404C90:
	r11_127 = CONVERT(eax_177, word32, uint64)
	byte r11b_180 = SLICE(r11_127, byte, 0)
l0000000000404BD0:
	Mem183[r9_110:byte] = r11b_180
	r10_116 = r10_116 + 1<64>
	r9_110 = r9_110 + 1<64>
	eax_190 = 0<32> (alias)
l0000000000404BB0:
	r8_124 = r8_124 + 1<64>
	branch false l0000000000404A06
l0000000000404BBD:
l0000000000404B4D:
	rax_291 = SEQ(0<32>, SLICE(eax_190, word24, 8), CONVERT(eax_190 != 6<32>, bool, int8)) (alias)
l0000000000404B35:
	word64 rcx_202 = CONVERT(al_174, byte, uint64)
	word64 rax_229
	byte dl_235
	call Mem170[rcx_202 * 8<64> + 4267840<i64>:word64] (retsize: 0;)
		uses: dl:dl_235,rcx:rcx_202,rdi:rdi,rsi:rsi
		defs: dl:dl_235,rax:rax_229
	ebxOut = <invalid>
	rbpOut = rcx
	r12Out = 0x7E000000000000<64>
	return SLICE(rax_229, byte, 0)
l0000000000404A86:
	branch al_152 != 0x5E<8> l0000000000404B60
l0000000000404A8E:
	r8_124 = r8_124 + 1<64>
	word64 rax_241 = CONVERT(Mem171[r8_124:byte], byte, uint64)
	eax_247 = SLICE(rax_241, word32, 0) (alias)
	al_139 = SLICE(rax_241, byte, 0) (alias)
	branch SLICE(rax_241, byte, 0) >u 0x7E<8> || SLICE(rax_241, byte, 0) <u 0x40<8> l0000000000404A2E
l0000000000404A9E:
l0000000000404AA0:
	Mem258[r9_110:byte] = SLICE(eax_247, byte, 0) & 0x1F<8>
	r8_124 = r8_124 + 1<64>
	al_152 = Mem258[r8_124:byte] (alias)
	r10_116 = r10_116 + 1<64>
	r9_110 = r9_110 + 1<64>
	v33_420 = al_152 <= 0x3D<8>
	branch al_152 != 0x3D<8> l0000000000404A78
l0000000000404ABA:
	branch dl == 0<8> l0000000000404B60
l0000000000404B60:
	Mem280[r9_110:byte] = al_152
	r8_124 = r8_124 + 1<64>
	r10_116 = r10_116 + 1<64>
	r9_110 = r9_110 + 1<64>
l0000000000404AC2:
	rax_291 = 1<u64>
l0000000000404A36:
	rax_291 = 0<u64>
l0000000000404A38:
	Mem312[rdi:word64] = r9_110
	Mem329[rsi:word64] = r8_124
	Mem345[rcx:word64] = r10_116
	ebxOut = <invalid>
	rbpOut = rbp
	r12Out = r12
	return SLICE(rax_291, byte, 0)
fn00000000004049E0_exit:


word64 fn0000000000404CD0(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000406540
//      fn0000000000406A30
//      fn0000000000407EA0
// MayUse:  edi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn0000000000404CD0_entry:
l0000000000404CD0:
	word64 rdi_6 = CONVERT(edi, word32, uint64)
	word64 rax_23 = 0<u64>
	word64 rdx_11 = Mem0[(rdi_6 << 4<64>) + 0x61A3E0<64>:word64]
	word64 rsi_12 = Mem0[(rdi_6 << 4<64>) + 0x61A3E8<64>:word64]
	branch rdx_11 == 0<64> l0000000000404CFC
l0000000000404CEB:
	branch rdx_11 == 1<64> l0000000000404D10
l0000000000404D10:
	return CONVERT(CONVERT(Mem0[rsi_12:byte] != 0x30<8>, bool, int8), int8, uint64)
l0000000000404CF1:
	bool v17_41 = rdx_11 != 2<64>
	rax_23 = 1<u64>
	branch rdx_11 == 2<64> l0000000000404D00
l0000000000404D00:
	word64 rdi_26 = 0x413733<u64>
	word64 rcx_28 = 2<u64>
l0000000000404D0A:
	branch rcx_28 == 0<64> l0000000000404D0C
l0000000000404D0A_1:
	v17_41 = Mem0[rsi_100:byte] != Mem0[rdi_101:byte]
	rsi_12 = rsi_100 + 1<i64>
	rdi_26 = rdi_101 + 1<i64>
	rcx_28 = rcx_28 - 1<64>
	rsi_100 = rsi_12
	rdi_101 = rdi_26
	branch Mem0[rsi_100:byte] != Mem0[rdi_101:byte] l0000000000404D0A
l0000000000404D0C:
	return CONVERT(CONVERT(v17_41, bool, int8), int8, uint64)
l0000000000404CFC:
	return rax_23
fn0000000000404CD0_exit:


void fn0000000000404D20(word32 edx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000405090
// MayUse:  rdi:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r12 r13 rbp rbx rsp
fn0000000000404D20_entry:
	word32 edx = SLICE(rdx, word32, 0)
l0000000000404D20:
	byte r13b_71 = SLICE(edx, byte, 0)
	word64 rax_27 = fn0000000000410C40(0x20<u64>)
	word64 rax_34 = 0<u64>
	branch rsi == 0<64> l0000000000404D4F
l0000000000404D47:
	rax_34 = fn0000000000410E30(rsi)
l0000000000404D4F:
	Mem49[rax_27 + 8<64>:word64] = rax_34
	word64 rax_51 = 0<u64>
	branch rdi == 0<64> l0000000000404D62
l0000000000404D5A:
	rax_51 = fn0000000000410E30(rdi)
l0000000000404D62:
	Mem67[rax_27:word64] = rax_51
	word64 rax_68 = Mem67[0x000000000061B190<p64>:word64]
	Mem72[rax_27 + 0x10<64>:byte] = r13b_71
	Mem73[0x000000000061B190<p64>:word64] = rax_27
	Mem74[rax_27 + 0x18<64>:word64] = rax_68
	return
fn0000000000404D20_exit:


void fn0000000000404D90(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000404DD0
//      fn0000000000405090
// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rdi Top
// Preserved: rbx rsp
fn0000000000404D90_entry:
l0000000000404D90:
	free(Mem6[rdi:word64])
	free(Mem6[rdi + 8<64>:word64])
	word64 rdi_11 = Mem6[rdi + 0xA8<64>:word64]
	branch rdi_11 == 0x61A56A<64> l0000000000404DC0
l0000000000404DC0:
	return
l0000000000404DB5:
	freecon(rdi_11)
	return
fn0000000000404D90_exit:


void fn0000000000404DD0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi Top
// Preserved: rbx rsp
fn0000000000404DD0_entry:
l0000000000404DD0:
	word64 rbx_13 = 0<u64>
	branch Mem6[0x000000000061B1B0<p64>:word64] == 0<64> l0000000000404DFD
l0000000000404DDD:
l0000000000404DE0:
	fn0000000000404D90(Mem6[Mem6[0x000000000061B1A8<p64>:word64] + rbx_13 * 8<64>:word64])
	rbx_13 = rbx_13 + 1<64>
	branch Mem6[0x000000000061B1B0<p64>:word64] >u rbx_13 l0000000000404DE0
l0000000000404DFD:
	Mem24[0x000000000061B1B0<p64>:word64] = 0<64>
	Mem25[0x000000000061B17C<p64>:byte] = 0<8>
	Mem26[0x000000000061B178<p64>:word32] = 0<32>
	Mem27[0x000000000061B174<p64>:word32] = 0<32>
	Mem28[0x000000000061B170<p64>:word32] = 0<32>
	Mem29[0x000000000061B168<p64>:word32] = 0<32>
	Mem30[0x000000000061B164<p64>:word32] = 0<32>
	Mem31[0x000000000061B160<p64>:word32] = 0<32>
	Mem32[0x000000000061B16C<p64>:word32] = 0<32>
	Mem33[0x000000000061B15C<p64>:word32] = 0<32>
	Mem34[0x000000000061B158<p64>:word32] = 0<32>
	Mem35[0x000000000061B154<p64>:word32] = 0<32>
	return
fn0000000000404DD0_exit:


void fn0000000000404E80()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse: 
// LiveOut:
// Trashed: SCZO r8 rax rcx rdi rdx rsi Top
// Preserved: rbp rbx rsp
fn0000000000404E80_entry:
l0000000000404E80:
	word64 rbx_11 = Mem9[0x000000000061B1B0<p64>:word64]
	word64 rbp_13 = rbx_11
	branch (rbx_11 >>u 1<64>) + rbx_11 >u Mem9[0x000000000061B1A0<p64>:word64] l0000000000404F98
l0000000000404F98:
	free(Mem9[0x000000000061B1A8<p64>:word64])
	branch rbx_11 >u 0xAAAAAAAAAAAAAAA<64> l0000000000404FF8
l0000000000404FF8:
	fn0000000000410E50()
l0000000000404FB3:
	word64 rax_25 = fn0000000000410C40(rbx_11 * 0x18<64>)
	rbp_13 = Mem9[0x000000000061B1B0<p64>:word64]
	Mem31[0x000000000061B1A8<p64>:word64] = rax_25
	Mem33[0x000000000061B1A0<p64>:word64] = rbp_13 * 3<64>
l0000000000404EA6:
	branch rbp_13 == 0<64> l0000000000404ED3
l0000000000404EAB:
	word64 rax_39 = Mem38[0x000000000061B1A8<p64>:word64]
	word64 rdx_40 = Mem38[0x000000000061B1C0<p64>:word64]
	word64 rcx_41 = rax_39 + rbp_13 * 8<64>
l0000000000404EC0:
	Mem44[rax_39:word64] = rdx_40
	rax_39 = rax_39 + 8<64>
	rdx_40 = rdx_40 + 0xC0<64>
	branch rax_39 != rcx_41 l0000000000404EC0
l0000000000404ED3:
	branch Mem50[0x000000000061B148<p64>:word32] == 0xFFFFFFFF<32> l0000000000404F8C
l0000000000404EE0:
	word64 rsi_133
	word64 rdi_129
	word32 ecx_100
	word32 eax_109 = _setjmp(0x61A680<u64>)
	branch eax_109 == 0<32> l0000000000404F40
l0000000000404F40:
	ecx_100 = Mem50[0x000000000061B148<p64>:word32] (alias)
	rsi_133 = Mem50[0x000000000061B1B0<p64>:word64]
	rdi_129 = Mem50[0x000000000061B1A8<p64>:word64]
l0000000000404EEE:
	word32 r8d_65 = Mem50[0x000000000061B148<p64>:word32]
	branch r8d_65 == 3<32> l0000000000404FDF
l0000000000404FDF:
	__assert_fail(0x41373F<u64>, 0x413736<u64>, 0xDDB<u32>, 0x412C95<u64>)
l0000000000404EFF:
	rsi_133 = Mem50[0x000000000061B1B0<p64>:word64]
	rdi_129 = Mem50[0x000000000061B1A8<p64>:word64]
	branch rsi_133 == 0<64> l0000000000404F33
l0000000000404F12:
	word64 rdx_81 = Mem50[0x000000000061B1C0<p64>:word64]
	word64 rcx_82 = rdi_129 + rsi_133 * 8<64>
	word64 rax_83 = rdi_129
l0000000000404F20:
	Mem86[rax_83:word64] = rdx_81
	rax_83 = rax_83 + 8<64>
	rdx_81 = rdx_81 + 0xC0<64>
	branch rax_83 != rcx_82 l0000000000404F20
l0000000000404F33:
	ecx_100 = r8d_65 (alias)
	eax_109 = 1<32> (alias)
l0000000000404F54:
	word32 edx_107 = 0<32>
	branch ecx_100 != 4<32> l0000000000404F60
l0000000000404F59_1:
	edx_107 = Mem105[0x000000000061B14C<p64>:word32]
l0000000000404F60:
	fn000000000040D690(Mem105[(CONVERT(Mem105[0x000000000061B10C<p64>:byte], byte, uint64) + (CONVERT(Mem105[0x000000000061B147<p64>:byte], byte, uint64) + (CONVERT(eax_109, word32, int64) + CONVERT(edx_107 + ecx_100, word32, uint64) * 2<64>) * 2<64>) * 2<64>) * 8<64> + 4271360<i64>:word64], rbx_11, rsi_133, rdi_129)
l0000000000404F8C:
	return
fn0000000000404E80_exit:


void fn0000000000405090(byte sil, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63] rsi:[0..7]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000405090_entry:
	byte sil = SLICE(rsi, byte, 0)
l0000000000405090:
	word32 r14d_245 = CONVERT(sil, byte, word32)
	branch rdi == 0<64> l00000000004050C0
l00000000004050AA:
	branch Mem26[0x000000000061B1C8<p64>:word64] == 0<64> l00000000004050C0
l00000000004050B4:
	fn0000000000404D20(0<32>, rdi, 0<u64>)
l00000000004050C0:
	word64 rbx_223 = Mem26[0x000000000061B1B0<p64>:word64]
l0000000000405108:
	branch rbx_223 == 0<64> l00000000004051A8
l00000000004051A8:
	word64 rdx_62
	word64 rdi_57 = Mem26[0x000000000061B1B0<p64>:word64]
	branch rdi_57 == 0<64> l00000000004051F7
l00000000004051F7:
	rdx_62 = 0<u64>
l00000000004051B4:
	word64 rsi_66 = Mem26[0x000000000061B1A8<p64>:word64]
	rdx_62 = 0<u64>
	word64 rax_70 = 0<u64>
l00000000004051C0:
	word64 rcx_77 = Mem76[rsi_66 + rax_70 * 8<64>:word64]
	Mem80[rsi_66 + rdx_62 * 8<64>:word64] = rcx_77
	rax_70 = rax_70 + 1<64>
	rdx_62 = rdx_62 + CONVERT(Mem76[rcx_77 + 0xA0<64>:word32] != 9<32>, bool, uint64)
	branch rax_70 != rdi_57 l00000000004051C0
l00000000004051E1:
	Mem91[0x000000000061B1B0<p64>:word64] = rdx_62
	return
fn0000000000405090_exit:
l0000000000405111:
	word64 rbp_110 = Mem26[Mem26[0x000000000061B1A8<p64>:word64]:word64]
	word32 eax_113 = Mem26[rbp_110 + 0xA0<64>:word32]
	branch eax_113 == 9<32> l000000000040512C
l0000000000405127:
	branch eax_113 != 3<32> l0000000000405100
l000000000040512C:
	word64 r15_124 = Mem26[rbp_110:word64]
	branch rdi == 0<64> l00000000004050E2
l0000000000405135:
	word64 rax_127 = fn000000000040A390(r15_124)
	branch Mem26[rax_127:byte] != 0x2E<8> l00000000004050D8
l0000000000405142:
	byte al_146 = Mem26[rax_127 + 1<64> + CONVERT(CONVERT(Mem26[rax_127 + 1<64>:byte] == 0x2E<8>, bool, int8), int8, uint64):byte]
	branch al_146 == 0x2F<8> l0000000000405100
l0000000000405154:
	branch al_146 == 0<8> l0000000000405100
l0000000000405158:
l00000000004050D8:
	branch Mem26[r15_124:byte] != 0x2F<8> l0000000000405160
l0000000000405160:
	word64 rax_164 = fn000000000040A610(0<u64>, r15_124, rdi)
	fn0000000000404D20(r14d_245, Mem26[rbp_110 + 8<64>:word64], rax_164)
	free(rax_164)
	branch Mem26[rbp_110 + 0xA0<64>:word32] != 9<32> l0000000000405100
l00000000004050E2:
	fn0000000000404D20(r14d_245, Mem26[rbp_110 + 8<64>:word64], r15_124)
	branch Mem26[rbp_110 + 0xA0<64>:word32] == 9<32> l0000000000405194
l0000000000405194:
	fn0000000000404D90(rbp_110)
l00000000004050FE:
l0000000000405100:
	rbx_223 = rbx_223 - 1<64>


void fn0000000000405200(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004079F0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rbp rbx rsp
fn0000000000405200_entry:
l0000000000405200:
	word64 rbx_13 = rdi
	branch rdi <u rsi l000000000040526B
l000000000040526B:
	word64 rcx_18 = Mem17[0x000000000061B0D8<p64>:word64]
	branch rcx_18 != 0<64> l0000000000405220
l0000000000405220:
	word64 rsi_27 = rbx_13 + 1<64>
	branch CONVERT(CONVERT(rsi, word64, uint128) /u rcx_18, word64, uint64) <=u CONVERT(CONVERT(rsi_27, word64, uint128) /u rcx_18, word64, uint64) l00000000004052A8
l00000000004052A8:
	rbx_13 = rsi_27
l000000000040523C:
	word64 rdi_43 = Mem17[0x000000000061A610<p64>:word64]
	word64 rax_44 = Mem17[rdi_43 + 0x28<64>:word64]
	branch rax_44 >=u Mem17[rdi_43 + 0x30<64>:word64] l00000000004052B9
l00000000004052B9:
	__overflow(rdi_43, 9<i32>)
	rcx_18 = Mem17[0x000000000061B0D8<p64>:word64]
l000000000040524D:
	Mem52[rdi_43 + 0x28<64>:word64] = rax_44 + 1<64>
	Mem53[rax_44:byte] = 9<8>
l0000000000405258:
	rbx_13 = rbx_13 + rcx_18 - CONVERT(CONVERT(rbx_13, word64, uint128) % rcx_18, word128, uint64)
l0000000000405277:
	rbx_13 = rbx_13 + 1<64>
l000000000040527B:
	word64 rdi_69 = Mem17[0x000000000061A610<p64>:word64]
	word64 rdx_70 = Mem17[rdi_69 + 0x28<64>:word64]
	branch rdx_70 >=u Mem17[rdi_69 + 0x30<64>:word64] l00000000004052AD
l00000000004052AD:
	__overflow(rdi_69, 32<i32>)
l0000000000405266:
	branch rsi <=u rbx_13 l000000000040529C
l000000000040528C:
	Mem85[rdi_69 + 0x28<64>:word64] = rdx_70 + 1<64>
	Mem86[rdx_70:byte] = 0x20<8>
	branch rsi >u rbx_13 l000000000040526B
l0000000000405211:
l000000000040529C:
	return
fn0000000000405200_exit:


word64 fn00000000004052D0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r12, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000405D50
//      fn0000000000406540
// MayUse:  fs:[0..15] r12:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rcx
// Trashed: SCZO r10 r11 r8 r9 rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn00000000004052D0_entry:
l00000000004052D0:
	word64 rax_39 = Mem36[fs:0x28<32>:word64]
	word64 rax_50 = fn000000000040E6F0(0xFFFFFFFFFFFFFFFF<64>, rsi, 0x2000<u64>, fp + 0xFFFFFFFFFFFFDFB8<64>, rdx, fs)
	word64 rbx_130 = rax_50
	word64 qwLoc2070_419 = fp + 0xFFFFFFFFFFFFDFB8<64>
	branch rax_50 >u 0x1FFF<64> l0000000000405590
l0000000000405590:
	word64 v24_73 = fp - 0x2088<64> - (rax_50 + 0x1F<64> & 0xFFFFFFFFFFFFFFF0<64>) + 0xF<64> & 0xFFFFFFFFFFFFFFF0<64>
	fn000000000040E6F0(0xFFFFFFFFFFFFFFFF<64>, rsi, rax_50 + 1<64>, v24_73, rdx, fs)
	qwLoc2070_419 = v24_73
l0000000000405343:
	branch Mem91[0x000000000061B0F0<p64>:byte] != 0<8> l0000000000405412
l0000000000405412:
	branch __ctype_get_mb_cur_max() <=u 1<64> l00000000004055D1
l00000000004055D1:
	word64 r12_100 = qwLoc2070_419 + rax_50
	branch qwLoc2070_419 >=u r12_100 l0000000000405602
l00000000004055E1:
	word64 rax_103 = __ctype_b_loc()
	word64 rdx_104 = qwLoc2070_419
l00000000004055E9:
	branch (Mem106[Mem106[rax_103:word64] + 1<64> + CONVERT(Mem106[rdx_104:byte], byte, uint64) * 2<64>:byte] & 0x40<8>) != 0<8> l00000000004055F9
l00000000004055F6:
	Mem114[rdx_104:byte] = 0x3F<8>
l00000000004055F9:
	rdx_104 = rdx_104 + 1<64>
	branch rdx_104 != r12_100 l00000000004055E9
l0000000000405602:
	r12 = rax_50
l0000000000405421:
	word64 r15_125 = qwLoc2070_419
	word64 r13_126 = qwLoc2070_419 + rax_50
	branch qwLoc2070_419 >=u r13_126 l0000000000405612
l0000000000405612:
	rbx_130 = 0<u64>
	r12 = 0<u64>
l0000000000405435:
	word64 rbx_136 = qwLoc2070_419
	r12 = 0<u64>
l0000000000405440:
	word64 rax_145 = CONVERT(Mem143[r15_125:byte], byte, uint64)
	byte al_146 = SLICE(rax_145, byte, 0)
	branch al_146 > 0x3F<8> l0000000000405520
l0000000000405520:
	branch al_146 < 0x41<8> l0000000000405460
l0000000000405528:
	branch al_146 <= 0x5F<8> l0000000000405538
l000000000040552C:
	branch SLICE(rax_145, byte, 0) >u 0x7E<8> || SLICE(rax_145, byte, 0) <u 0x61<8> l0000000000405460
l000000000040544C:
	branch al_146 >= 0x25<8> l0000000000405538
l0000000000405454:
	branch SLICE(rax_145, byte, 0) <=u 0x23<8> l0000000000405538
l0000000000405538:
	Mem170[rbx_136:byte] = al_146
	r15_125 = r15_125 + 1<64>
	r12 = r12 + 1<64>
	rbx_136 = rbx_136 + 1<64>
	branch r15_125 <u r13_126 l0000000000405440
l000000000040554F:
l0000000000405460:
l0000000000405470:
	word64 rax_190 = mbrtowc(fp + 0xFFFFFFFFFFFFDFA4<64>, r15_125, r13_126 - r15_125, fp + 0xFFFFFFFFFFFFDFA8<64>)
	word64 r14_192 = rax_190
	branch rax_190 == 0xFFFFFFFFFFFFFFFF<64> l0000000000405551
l0000000000405551:
	Mem196[rbx_136:byte] = 0x3F<8>
	r15_125 = r15_125 + 1<64>
	r12 = r12 + 1<64>
	rbx_136 = rbx_136 + 1<64>
	branch r15_125 <u r13_126 l0000000000405440
l0000000000405569:
l0000000000405499:
	branch rax_190 == 0xFFFFFFFFFFFFFFFE<64> l000000000040556B
l000000000040556B:
	Mem205[rbx_136:byte] = 0x3F<8>
	r15_125 = r13_126
	r12 = r12 + 1<64>
	rbx_136 = rbx_136 + 1<64>
	branch false l0000000000405440
l0000000000405582:
l00000000004054A3:
	word64 rdi_212 = CONVERT(dwLoc205C, word32, uint64)
	branch rax_190 != 0<64> l00000000004054B5
l00000000004054B1_1:
	r14_192 = 1<u64>
l00000000004054B5:
	word32 eax_220 = wcwidth(SLICE(rdi_212, wchar_t, 0))
	branch eax_220 < 0<32> l0000000000405510
l0000000000405510:
	Mem225[rbx_136:byte] = 0x3F<8>
	r15_125 = r15_125 + r14_192
	r12 = r12 + 1<64>
	rbx_136 = rbx_136 + 1<64>
l00000000004054BE:
	word64 rsi_233 = r15_125 + r14_192
	word64 rdx_234 = rbx_136
l00000000004054C8:
	r15_125 = r15_125 + 1<64>
	rdx_234 = rdx_234 + 1<64>
	Mem245[rdx_234 - 1<64>:byte] = Mem237[r15_125 - 1<64>:byte]
	branch r15_125 != rsi_233 l00000000004054C8
l00000000004054DD:
	rbx_136 = rbx_136 + r14_192
	r12 = r12 + CONVERT(eax_220, word32, int64)
l00000000004054E5:
	branch mbsinit(fp + 0xFFFFFFFFFFFFDFA8<64>) == 0<32> l0000000000405470
l00000000004054F9:
	branch r15_125 <u r13_126 l0000000000405440
l0000000000405502:
	rbx_130 = rbx_136 - qwLoc2070_419
l0000000000405350:
	branch rcx == 0<64> l0000000000405379
l000000000040535A:
	branch __ctype_get_mb_cur_max() <=u 1<64> l00000000004053CD
l00000000004053CD:
	word64 r13_283 = qwLoc2070_419 + rax_50
	branch qwLoc2070_419 >=u r13_283 l000000000040560A
l000000000040560A:
	r12 = 0<u64>
l00000000004053E1:
	r12 = 0<u64>
	word64 rcx_297 = Mem91[__ctype_b_loc():word64]
	word64 rax_298 = qwLoc2070_419
l00000000004053F0:
	r12 = r12 - 0xFFFFFFFFFFFFFFFF<64> - CONVERT((Mem91[rcx_297 + CONVERT(Mem91[rax_298:byte], byte, uint64) * 2<64>:word16] & 0x4000<16>) <u 1<16>, bool, word64)
	rax_298 = rax_298 + 1<64>
	branch rax_298 != r13_283 l00000000004053F0
l000000000040540D:
l0000000000405365:
	r12 = CONVERT(fn000000000040D240(0<32>, rax_50, qwLoc2070_419, fs), word32, int64)
l0000000000405379:
	branch rdi == 0<64> l0000000000405399
l0000000000405385:
	fwrite_unlocked(qwLoc2070_419, 1<u64>, rbx_130, rdi)
l0000000000405399:
	branch rcx == 0<64> l00000000004053A8
l00000000004053A5:
	Mem365[rcx:word64] = r12
l00000000004053A8:
	branch (rax_39 ^ Mem370[fs:0x28<32>:word64]) != 0<64> l000000000040561C
l000000000040561C:
	__stack_chk_fail()
l00000000004053BE:
	return rdi
fn00000000004052D0_exit:


void fn0000000000405630(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 rbp rbx rsp
fn0000000000405630_entry:
l0000000000405630:
	word64 rax_14 = Mem12[rsi + 0x18<64>:word64]
	word64 rbp_15 = Mem12[rsi + 0x10<64>:word64]
	word64 r12_20 = CONVERT(SLICE(rax_14 - rbp_15, word32, 0) >>u 3<32>, word32, uint64)
	branch r12_20 == 0<64> l00000000004056DB
l000000000040564F:
	branch rax_14 == rbp_15 l00000000004056E6
l00000000004056E6:
	Mem27[rsi + 0x50<64>:byte] = Mem12[rsi + 0x50<64>:byte] | 2<8>
l0000000000405658:
	word64 rcx_32 = CONVERT(Mem31[rsi + 0x30<64>:word32], word32, int64)
	word64 rcx_38 = Mem31[rsi + 0x20<64>:word64]
	word64 rdx_44 = CONVERT(~SLICE(rcx_32, word32, 0), word32, int64) & rax_14 + rcx_32
	word64 rax_45 = Mem31[rsi + 8<64>:word64]
	Mem47[rsi + 0x18<64>:word64] = rdx_44
	branch rdx_44 - rax_45 > rcx_38 - rax_45 l00000000004056E0
l00000000004056E0:
	Mem52[rsi + 0x18<64>:word64] = rcx_38
l0000000000405683:
	Mem61[rsi + 0x10<64>:word64] = Mem54[rsi + 0x18<64>:word64]
	fputs_unlocked(rdi, Mem61[0x000000000061A610<p64>:word64])
	word64 rbx_57 = 0<u64>
l00000000004056A0:
	__printf_chk(1<i32>, 0x413759<u64>, 0<32>)
	rbx_57 = rbx_57 + 1<64>
	branch r12_20 >u rbx_57 l00000000004056A0
l00000000004056BF:
	word64 rdi_82 = Mem61[0x000000000061A610<p64>:word64]
	word64 rax_83 = Mem61[rdi_82 + 0x28<64>:word64]
	branch rax_83 >=u Mem61[rdi_82 + 0x30<64>:word64] l00000000004056EF
l00000000004056EF:
	__overflow(rdi_82, 10<i32>)
	return
l00000000004056D0:
	Mem99[rdi_82 + 0x28<64>:word64] = rax_83 + 1<64>
	Mem100[rax_83:byte] = 0xA<8>
l00000000004056DB:
	return
fn0000000000405630_exit:


void fn0000000000405700(word32 edx, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004057B0
//      fn0000000000406B70
// MayUse:  fs:[0..15] rdi:[0..63] rdx:[0..31]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rbp rbx rsp
fn0000000000405700_entry:
	word32 edx = SLICE(rdx, word32, 0)
l0000000000405700:
	word64 rbp_31
	branch rdi == 0<64> l0000000000405780
l0000000000405780:
	__printf_chk(1<i32>, 0x41375E<u64>, 0<32>)
	rbp_31 = CONVERT(edx, word32, int64)
l0000000000405710:
	word32 eax_47 = fn000000000040D420(0<32>, rdi, fs)
	word64 rsi_46 = Mem11[0x000000000061A610<p64>:word64]
	word32 ebx_50 = edx - eax_47
	branch ebx_50 >= 0<32> l0000000000405728
l0000000000405725_1:
	ebx_50 = 0<32>
l0000000000405728:
	fputs_unlocked(rdi, rsi_46)
	rbp_31 = CONVERT(ebx_50, word32, int64) + strlen(rdi)
l0000000000405740:
	word64 rdi_68 = Mem67[0x000000000061A610<p64>:word64]
	word64 rcx_69 = Mem67[rdi_68 + 0x28<64>:word64]
	branch rcx_69 >=u Mem67[rdi_68 + 0x30<64>:word64] l0000000000405799
l0000000000405799:
	__overflow(rdi_68, 32<i32>)
l0000000000405751:
	Mem76[rdi_68 + 0x28<64>:word64] = rcx_69 + 1<64>
	Mem77[rcx_69:byte] = 0x20<8>
l000000000040575C:
	ebx_50 = ebx_50 - 1<32> (alias)
	branch ebx_50 != 0xFFFFFFFF<32> l0000000000405740
l0000000000405764:
	Mem92[0x000000000061B018<p64>:word64] = rbp_31 + 1<64> + Mem85[0x000000000061B018<p64>:word64]
	return
fn0000000000405700_exit:


void fn00000000004057B0(byte dl, word32 esi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
// MayUse:  dl:[0..7] esi:[0..31] fs:[0..15] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rbx rsp
fn00000000004057B0_entry:
l00000000004057B0:
	word64 rax_18 = 0x413764<u64>
	branch dl == 0<8> l00000000004057CB
l00000000004057C0:
	rax_18 = 0<u64>
	branch Mem6[0x000000000061B145<p64>:byte] == 0<8> l00000000004057E0
l00000000004057E0:
	rax_18 = fn000000000040C9B0(SLICE(rdi, word32, 0))
l00000000004057CB:
	word64 rdx_41 = CONVERT(esi, word32, uint64)
l00000000004057D8_thunk_fn0000000000405700:
	fn0000000000405700(SLICE(rdx_41, word32, 0), rax_18, fs)
	return
fn00000000004057B0_exit:


void fn0000000000405810(word64 rdx, word64 rsi, word32 edi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000407EA0
// MayUse:  edi:[0..31] fs:[0..15] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 rbp rbx rsp
fn0000000000405810_entry:
l0000000000405810:
	fn000000000040EAB0(rdx, fs)
	error(0<i32>, Mem17[__errno_location():word32], rsi, 0<32>)
	branch SLICE(edi, byte, 0) == 0<8> l0000000000405850
l0000000000405850:
	branch Mem17[0x000000000061B030<p64>:word32] != 0<32> l000000000040584A
l000000000040585A:
	Mem58[0x000000000061B030<p64>:word32] = 1<32>
	return
l0000000000405840:
	Mem61[0x000000000061B030<p64>:word32] = 2<32>
l000000000040584A:
	return
fn0000000000405810_exit:


word32 fn0000000000405C20(word32 ecx, word32 edx, word32 esi, byte dil)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405D00
//      fn0000000000405D50
// MayUse:  dil:[0..7] edx:[0..31] rcx:[8..31] rsi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rsi Top
// Preserved: rsp
fn0000000000405C20_entry:
	word24 ecx_24_8 = SLICE(rcx, word24, 8)
	word32 esi = SLICE(rsi, word32, 0)
l0000000000405C20:
	word64 rcx_190
	word64 rax_101
	word56 rcx_56_8_150 = SLICE(rcx, word56, 8)
	branch dil == 0<8> l0000000000405C40
l0000000000405C40:
	rax_101 = 0<u64>
	branch edx == 5<32> l0000000000405C3E
l0000000000405C47:
	rcx_190 = CONVERT(SEQ(ecx_24_8, CONVERT(edx == 9<32>, bool, int8)) | CONVERT(CONVERT(edx == 3<32>, bool, int8), int8, uint32), word32, uint64)
l0000000000405C25:
	branch (esi & 0xF000<32>) != 0x8000<32> l0000000000405CA0
l0000000000405CA0:
	rcx_190 = SEQ(rcx_56_8_150, CONVERT((esi & 0xF000<32>) == 0x4000<32>, bool, int8)) (alias)
l0000000000405C55:
	rax_101 = 0x2F<u64>
	branch SLICE(rcx_190, byte, 0) != 0<8> l0000000000405C3E
l0000000000405C5E:
	branch Mem0[0x000000000061B12C<p64>:word32] == 1<32> l0000000000405CF0
l0000000000405CF0:
	return 0<32>
l0000000000405C6B:
	word32 eax_87
	branch dil == 0<8> l0000000000405CC0
l0000000000405CC0:
	rax_101 = 0x40<u64>
	branch edx == 6<32> l0000000000405C3E
l0000000000405CCE:
	rax_101 = 0x7C<u64>
	branch edx == 1<32> l0000000000405C3E
l0000000000405CDC:
	eax_87 = CONVERT(CONVERT(edx == 7<32>, bool, int8), int8, uint32) (alias)
l0000000000405C70:
	rax_101 = 0x40<u64>
	branch (esi & 0xF000<32>) == 0xA000<32> l0000000000405C3E
l0000000000405C83:
	rax_101 = 0x7C<u64>
	branch (esi & 0xF000<32>) == 0x1000<32> l0000000000405C3E
l0000000000405C90:
	eax_87 = CONVERT(CONVERT((esi & 0xF000<32>) == 0xC000<32>, bool, int8), int8, uint32) (alias)
l0000000000405CE2:
	return -eax_87 & 0x3D<32>
l0000000000405C33:
	rax_101 = 0<u64>
	branch Mem0[0x000000000061B12C<p64>:word32] == 3<32> l0000000000405CB0
l0000000000405CB0:
	return ~(0<32> - CONVERT((esi & 0x49<32>) <u 1<32>, bool, word32)) & 0x2A<32>
l0000000000405C3E:
	return SLICE(rax_101, word32, 0)
fn0000000000405C20_exit:


byte fn0000000000405D00(word64 rcx, word32 edx, word64 rsi, byte dil)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
//      fn0000000000407870
// MayUse:  dil:[0..7] rcx:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rbx rsp
fn0000000000405D00_entry:
	word32 edx = SLICE(rdx, word32, 0)
l0000000000405D00:
	word64 rax_14 = CONVERT(fn0000000000405C20(SLICE(rcx, word32, 0), edx, SLICE(rsi, word32, 0), dil), word32, uint64)
	byte bl_32 = SLICE(rax_14, byte, 0)
	branch SLICE(rax_14, byte, 0) == 0<8> l0000000000405D33
l0000000000405D10:
	word64 rdi_28 = Mem6[0x000000000061A610<p64>:word64]
	word64 rax_29 = Mem6[rdi_28 + 0x28<64>:word64]
	word32 rax_32_32_62 = SLICE(rax_29, word32, 32)
	branch rax_29 >=u Mem6[rdi_28 + 0x30<64>:word64] l0000000000405D3A
l0000000000405D3A:
	__overflow(rdi_28, CONVERT(bl_32, byte, int32))
l0000000000405D21:
	Mem37[rdi_28 + 0x28<64>:word64] = rax_29 + 1<64>
	Mem38[rax_29:byte] = bl_32
l0000000000405D2B:
	Mem41[0x000000000061B018<p64>:word64] = Mem39[0x000000000061B018<p64>:word64] + 1<64>
l0000000000405D33:
	return CONVERT(bl_32 != 0<8>, bool, int8)
fn0000000000405D00_exit:


word64 fn0000000000405D50(word64 rdi, word64 r12, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405ED0
//      fn00000000004079F0
// MayUse:  fs:[0..15] r12:[0..63] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: rbp rbx rsp
fn0000000000405D50_entry:
l0000000000405D50:
	word64 rbx_101 = 0<u64>
	word64 rax_16 = Mem11[fs:0x28<32>:word64]
	branch Mem17[0x000000000061B114<p64>:byte] == 0<8> l0000000000405D92
l0000000000405D7A:
	branch Mem17[0x000000000061B150<p64>:word32] == 4<32> l0000000000405EA0
l0000000000405EA0:
	rbx_101 = strlen(fn000000000040CD70(fp - 0x2B8<64>, Mem17[rdi + 0x18<64>:word64])) + 1<64>
l0000000000405D87:
	rbx_101 = CONVERT(Mem17[0x000000000061B178<p64>:word32], word32, int64) + 1<64>
l0000000000405D92:
	branch Mem17[0x000000000061B144<p64>:byte] == 0<8> l0000000000405DB6
l0000000000405D9B:
	word64 rax_49
	branch Mem17[0x000000000061B150<p64>:word32] == 4<32> l0000000000405E58
l0000000000405E58:
	rax_49 = 2<u64>
	branch Mem17[rdi + 0xB0<64>:byte] == 0<8> l0000000000405DB3
l0000000000405E6A:
	rax_49 = strlen(fn000000000040BD70(0x200<u64>, Mem17[0x000000000061B140<p64>:word32], fp - 0x2B8<64>, Mem17[rdi + 0x50<64>:word64], Mem17[0x000000000061B138<p64>:word64], fs)) + 1<64>
l0000000000405DA8:
	rax_49 = CONVERT(Mem17[0x000000000061B174<p64>:word32], word32, int64) + 1<64>
l0000000000405DB3:
	rbx_101 = rbx_101 + rax_49
l0000000000405DB6:
	branch Mem17[0x000000000061B17D<p64>:byte] == 0<8> l0000000000405DD6
l0000000000405DBF:
	word64 rax_102
	branch Mem17[0x000000000061B150<p64>:word32] == 4<32> l0000000000405E40
l0000000000405E40:
	rax_102 = strlen(Mem17[rdi + 0xA8<64>:word64]) + 1<64>
l0000000000405DC8:
	rax_102 = CONVERT(Mem17[0x000000000061B16C<p64>:word32], word32, int64) + 1<64>
l0000000000405DD3:
	rbx_101 = rbx_101 + rax_102
l0000000000405DD6:
	word64 rcx_135 = fn00000000004052D0(fp - 0x2C0<64>, Mem17[0x000000000061B0E8<p64>:word64], Mem17[rdi:word64], 0<u64>, r12, fs)
	word64 rbx_146 = rbx_101 + qwLoc02C0
	branch Mem17[0x000000000061B12C<p64>:word32] == 0<32> l0000000000405E1C
l0000000000405DFC:
	rbx_146 = rbx_146 + CONVERT(SLICE(fn0000000000405C20(SLICE(rcx_135, word32, 0), Mem17[rdi + 0xA0<64>:word32], Mem17[rdi + 0x28<64>:word32], Mem17[rdi + 0xB0<64>:byte]), byte, 0) != 0<8>, bool, uint64)
l0000000000405E1C:
	branch (rax_16 ^ Mem17[fs:0x28<32>:word64]) != 0<64> l0000000000405EBF
l0000000000405EBF:
	__stack_chk_fail()
l0000000000405E36:
	return rbx_146
fn0000000000405D50_exit:


word64 fn0000000000405ED0(word32 edi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004079F0
// MayUse:  fs:[0..15] rdi:[0..31]
// LiveOut: rax
// Trashed: SCZO r8 rax rdi rdx rsi Top
// Preserved: r10 r11 r12 r13 r14 r9 rbp rbx rcx rsp
fn0000000000405ED0_entry:
	word32 edi = SLICE(rdi, word32, 0)
l0000000000405ED0:
	word64 rdx_7 = Mem6[0x000000000061B1B0<p64>:word64]
	word64 rax_8 = Mem6[0x000000000061B020<p64>:word64]
	word64 r12_18 = CONVERT(edi, word32, uint64)
	word64 rbx_25 = rdx_7
	branch rax_8 >u rdx_7 l0000000000405EF3
l0000000000405EEF_1:
	rbx_25 = rax_8
l0000000000405EF3:
	word64 r8_130
	word64 rsi_131
	word64 rax_121
	branch rbx_25 <=u Mem24[0x000000000061A660<p64>:word64] l00000000004060C8
l00000000004060C8:
	rax_121 = 0<u64>
	r8_130 = rdx_7
	rsi_131 = Mem24[0x000000000061B028<p64>:word64]
	branch rbx_25 == 0<64> l0000000000406004
l00000000004060DD:
l0000000000405F00:
	word64 rbp_49
	word64 rdi_42 = Mem24[0x000000000061B028<p64>:word64]
	branch rbx_25 <u rax_8 >>u 1<64> l0000000000406170
l0000000000406170:
	branch rbx_25 >u 0x555555555555555<64> l000000000040619D
l000000000040617F:
	rbp_49 = rbx_25 * 2<64>
	Mem58[0x000000000061B028<p64>:word64] = fn0000000000410C90(rbp_49 + rbx_25 << 4<64>, rdi_42)
l0000000000405F16:
	branch rax_8 >u 0xAAAAAAAAAAAAAAA<64> l000000000040619D
l0000000000405F29:
	word64 rax_65 = fn0000000000410C90(rax_8 * 0x18<64>, rdi_42)
	rbp_49 = Mem24[0x000000000061B020<p64>:word64]
	Mem71[0x000000000061B028<p64>:word64] = rax_65
l0000000000405F44:
	word64 rax_73 = Mem72[0x000000000061A660<p64>:word64]
	word64 rsi_76 = rbp_49 + 1<64> + rax_73
	word64 rdi_77 = rbp_49 - rax_73
	word64 rcx_79 = rsi_76 *s rdi_77
	branch rbp_49 >u rsi_76 l000000000040619D
l0000000000405F66:
	branch rsi_76 != CONVERT(CONVERT(rcx_79, word64, uint128) /u rdi_77, word64, uint64) l000000000040619D
l0000000000405F77:
	branch rcx_79 >>u 1<64> >u 0x1FFFFFFFFFFFFFFF<64> l000000000040619D
l000000000040619D:
	fn0000000000410E50()
l0000000000405F8D:
	word64 rax_110 = fn0000000000410C40((rcx_79 >>u 1<64>) * 8<64>)
	word64 rcx_101 = Mem72[0x000000000061A660<p64>:word64]
	branch rbp_49 <=u rcx_101 l0000000000405FE4
l0000000000405FA6:
	word64 rsi_104 = Mem72[0x000000000061B028<p64>:word64]
	word64 rcx_107 = rcx_101 * 8<64> + 8<i64>
	word64 rdx_108 = rsi_104 + rcx_101 * 0x18<64> + 0x10<64>
	word64 rsi_109 = rsi_104 + rbp_49 * 0x18<64>
l0000000000405FD0:
	Mem112[rdx_108 + 0<64>:word64] = rax_110
	rdx_108 = rdx_108 + 0x18<64>
	rax_110 = rax_110 + rcx_107
	rcx_107 = rcx_107 + 8<64>
	branch rdx_108 != rsi_109 l0000000000405FD0
l0000000000405FE4:
	Mem129[0x000000000061A660<p64>:word64] = rbp_49
	rax_121 = 0<u64>
	r8_130 = Mem129[0x000000000061B1B0<p64>:word64]
	rsi_131 = Mem129[0x000000000061B028<p64>:word64]
	branch rbx_25 != 0<64> l00000000004060E0
l00000000004060E0:
	word64 rcx_137 = Mem136[rsi_131 + 0x10<64>:word64]
	Mem138[rsi_131:byte] = 1<8>
	word64 rdi_134 = rax_121 + 1<64>
	Mem140[rsi_131 + 8<64>:word64] = rdi_134 * 3<64>
	word64 rdx_142 = 0<u64>
l00000000004060F8:
	Mem148[rcx_137 + rdx_142 * 8<64>:word64] = 3<64>
	rdx_142 = rdx_142 + 1<64>
	branch rdx_142 <=u rax_121 l00000000004060F8
l0000000000406109:
	rsi_131 = rsi_131 + 0x18<64>
	branch rdi_134 == rbx_25 l0000000000406004
l0000000000406116:
	rax_121 = rdi_134
l0000000000406004:
	word64 rbp_162 = 0<u64>
	branch r8_130 == 0<64> l000000000040612D
l000000000040600F:
l0000000000406010:
	word64 rax_179 = fn0000000000405D50(Mem169[Mem169[0x000000000061B1A8<p64>:word64] + rbp_162 * 8<64>:word64], r12_18, fs)
	word64 r14_192 = Mem169[0x000000000061B1B0<p64>:word64]
	branch rbx_25 == 0<64> l0000000000406120
l0000000000406033:
	word64 r13_194 = Mem169[0x000000000061B0C8<p64>:word64]
	word64 rsi_195 = Mem169[0x000000000061B028<p64>:word64]
	word64 rcx_197 = 1<u64>
l00000000004060A7:
	byte r12b_206 = SLICE(r12_18, byte, 0)
	word64 r9_203 = rcx_565 - 1<64>
	branch Mem200[rsi_195:byte] == 0<8> l000000000040609A
l00000000004060B3:
	word64 r10_229
	branch r12b_206 != 0<8> l0000000000406050
l0000000000406050:
	r10_229 = CONVERT(CONVERT(rbp_162, word64, uint128) /u CONVERT(CONVERT((r14_192 - 1<64>) + rcx_565, word64, uint128) /u rcx_565, word64, uint64), word64, uint64)
l00000000004060B8:
	r10_229 = CONVERT(CONVERT(rbp_162, word64, uint128) % rcx_565, word128, uint64)
l000000000040606A:
	word64 rax_255 = Mem200[rsi_195 + 0x10<64>:word64] + r10_229 * 8<64>
	word64 rdx_251 = rax_179 + CONVERT(CONVERT(r9_203 != r10_229, bool, int8), int8, uint64) * 2<64>
	word64 r9_256 = Mem200[rax_255:word64]
	branch rdx_251 <=u r9_256 l000000000040609A
l0000000000406086:
	Mem262[rsi_195 + 8<64>:word64] = Mem200[rsi_195 + 8<64>:word64] + (rdx_251 - r9_256)
	Mem263[rax_255:word64] = rdx_251
	Mem268[rsi_195:byte] = CONVERT(Mem263[rsi_195 + 8<64>:word64] <u r13_194, bool, int8)
l000000000040609A:
	rsi_195 = rsi_195 + 0x18<64>
	rcx_197 = rcx_565 + 1<64>
	rcx_565 = rcx_197
	branch rbx_25 <=u rcx_565 l0000000000406120
l0000000000406120:
	rbp_162 = rbp_162 + 1<64>
	branch rbp_162 <u r14_192 l0000000000406010
l000000000040612D:
	branch rbx_25 <=u 1<64> l0000000000406164
l0000000000406133:
	word64 rdx_300 = Mem296[0x000000000061B028<p64>:word64]
	word64 rax_301 = rbx_25 * 3<64>
	branch Mem296[rdx_300 - 0x18<64> + (rax_301 << 3<64>):byte] != 0<8> l0000000000406164
l0000000000406149:
	word64 rax_305 = (rax_301 << 3<64>) + rdx_300
l000000000040615A:
	rbx_25 = rbx_25 - 1<64>
	branch rbx_25 != 1<64> l0000000000406150
l0000000000406150:
	rax_305 = rax_305 - 0x18<64>
	branch Mem296[rax_305 - 0x18<64>:byte] != 0<8> l0000000000406164
l0000000000406164:
	return rbx_25
fn0000000000405ED0_exit:


word32 fn00000000004061B0(word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405ED0
//      fn0000000000407EA0
// MayUse:  fs:[0..15] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r8 rbp rbx rcx rsp
fn00000000004061B0_entry:
l00000000004061B0:
	word64 rdx_127
	word64 rax_15 = Mem12[fs:0x28<32>:word64]
	branch Mem16[0x000000000061B145<p64>:byte] == 0<8> l0000000000406248
l0000000000406248:
	word64 rax_23 = fn000000000040C9B0(SLICE(rdi, word32, 0))
	branch rax_23 == 0<64> l00000000004061D1
l0000000000406259:
	word32 eax_49 = fn000000000040D420(0<32>, rax_23, fs)
	word32 edx_150 = 0<32>
	branch eax_49 < 0<32> l0000000000406267
l0000000000406264_1:
	edx_150 = eax_49
l0000000000406267:
	rdx_127 = CONVERT(edx_150, word32, uint64) (alias)
l00000000004061D1:
	__sprintf_chk(fp - 0x38<64>, 1<i32>, 0x15<u64>, 0x41375A<u64>, 0<32>)
	word32 ebx_125 = SLICE(fp, word32, 0) - 0x38<32>
	word64 rax_108 = fp - 0x38<64>
l00000000004061F3:
	word64 rcx_77 = CONVERT(Mem16[rax_108:word32], word32, uint64)
	word64 rdx_90 = CONVERT(SLICE(rcx_77, word32, 0) + 0xFEFEFEFF<32> & ~SLICE(rcx_77, word32, 0) & 0x80808080<32>, word32, uint64)
	rax_108 = rax_108 + 4<64>
	word32 edx_91 = SLICE(rdx_90, word32, 0)
	byte dl_110 = SLICE(rdx_90, byte, 0)
	branch edx_91 == 0<32> l00000000004061F3
l000000000040620B:
	branch (edx_91 & 0x8080<32>) != 0<32> l0000000000406219
l0000000000406216_1:
	dl_110 = SLICE(edx_91 >>u 0x10<32>, byte, 0) (alias)
l0000000000406219:
	branch (edx_91 & 0x8080<32>) != 0<32> l0000000000406221
l000000000040621D_1:
	rax_108 = rax_108 + 2<64>
l0000000000406221:
	rdx_127 = CONVERT(SLICE(SLICE(SEQ(rax_108, dl_110) + SEQ(3<64>, dl_110), word64, 8), word32, 0) - ebx_125, word32, uint64)
l000000000040622B:
	word64 rax_153 = CONVERT(SLICE(rdx_127, word32, 0), word32, uint64)
	branch (rax_15 ^ Mem16[fs:0x28<32>:word64]) != 0<64> l0000000000406269
l0000000000406269:
	__stack_chk_fail()
l000000000040623D:
	return SLICE(rax_153, word32, 0)
fn00000000004061B0_exit:


void fn0000000000406400()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406440
//      fn0000000000406540
// MayUse: 
// LiveOut:
// Trashed: SCZO rdi Top
// Preserved: rsp
fn0000000000406400_entry:
l0000000000406400:
	branch Mem0[0x000000000061A408<p64>:word64] == 0<64> l0000000000406418
l0000000000406418:
	word64 rcx_42
	fn0000000000406440(0x61A3E0<u64>, out rcx_42)
	word64 rcx_43
	fn0000000000406440(0x61A410<u64>, out rcx_43)
l0000000000406439_thunk_fn0000000000406440:
	word64 rcx_46
	fn0000000000406440(rdi, out rcx_46)
	return
l000000000040640A:
l000000000040640F_thunk_fn0000000000406440:
	word64 rcx_45
	fn0000000000406440(rdi, out rcx_45)
	return
fn0000000000406400_exit:


word64 fn0000000000406440(word64 rdi, ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000406400
//      fn0000000000406490
//      fn0000000000406540
//      fn0000000000406A30
// MayUse:  rdi:[0..63]
// LiveOut: rax rcx
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn0000000000406440_entry:
l0000000000406440:
	branch Mem0[0x000000000061B128<p64>:byte] == 0<8> l0000000000406470
l0000000000406470:
	Mem10[0x000000000061B128<p64>:byte] = 1<8>
	fn0000000000406400()
l000000000040644D:
	word64 rcx_21 = Mem19[0x000000000061A610<p64>:word64]
	word64 rax_28 = fwrite_unlocked(Mem19[rdi + 8<64>:word64], Mem19[rdi:word64], 1<u64>, rcx_21)
	rcxOut = rcx_21
	return rax_28
fn0000000000406440_exit:


void fn0000000000406490()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000406540
// MayUse: 
// LiveOut:
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: rbx rcx rsp
fn0000000000406490_entry:
l0000000000406490:
l00000000004064EF:
	branch Mem9[0x000000000061B038<p64>:word32] != 0<32> l0000000000406503
l00000000004064F9:
	branch Mem9[0x000000000061B034<p64>:word32] == 0<32> l0000000000406538
l0000000000406538:
	return
fn0000000000406490_exit:
l0000000000406503:
	branch Mem9[0x000000000061B128<p64>:byte] == 0<8> l00000000004064A0
l000000000040650C:
	word64 rcx_127
	fn0000000000406440(0x61A3E0<u64>, out rcx_127)
	word64 rcx_128
	fn0000000000406440(0x61A3F0<u64>, out rcx_128)
l00000000004064A0:
	fflush_unlocked(Mem9[0x000000000061A610<p64>:word64])
	sigprocmask(0<i32>, 0x61B040<u64>, fp + 0xFFFFFFFFFFFFFF78<64>)
	word32 ebx_76 = Mem9[0x000000000061B038<p64>:word32]
	word32 eax_67 = Mem9[0x000000000061B034<p64>:word32]
	branch eax_67 == 0<32> l0000000000406528
l0000000000406528:
	signal(ebx_76, 0<u64>)
l00000000004064CB:
	Mem86[0x000000000061B034<p64>:word32] = eax_67 - 1<32>
	ebx_76 = 0x13<32> (alias)
l00000000004064D9:
	raise(ebx_76)
	sigprocmask(2<i32>, fp + 0xFFFFFFFFFFFFFF78<64>, 0<u64>)


word64 fn0000000000406540(word64 rax, word64 rcx, word64 rdx, byte sil, word64 rdi, selector fs, ptr64 & rcxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
//      fn0000000000407870
// MayUse:  fs:[0..15] rax:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] sil:[0..7]
// LiveOut: rax rcx
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000406540_entry:
l0000000000406540:
	byte r14b_722
	word64 rbp_436
	word32 edx_324
	word32 r14d_359
	word32 r15d_108
	word64 rdx_32 = Mem25[rdi:word64]
	word64 r12_33 = Mem25[rdi + 8<64>:word64]
	branch sil == 0<8> l00000000004069BD
l00000000004069BD:
	branch Mem25[0x000000000061B129<p64>:byte] != 0<8> l00000000004069D8
l00000000004069D8:
	word32 r14d_45
	branch Mem25[0x000000000061B198<p64>:byte] == 0<8> l0000000000406A08
l0000000000406A08:
	r14d_45 = CONVERT(Mem25[rdi + 0xB1<64>:byte], byte, word32) (alias)
l00000000004069E1:
	branch Mem25[rdi + 0xB1<64>:byte] == 0<8> l0000000000406A20
l0000000000406A20:
	r14d_45 = 0<32> (alias)
l0000000000406A10:
	r15d_108 = Mem25[rdi + 0x28<64>:word32] (alias)
l00000000004069EA:
	r15d_108 = Mem25[rdi + 0xA4<64>:word32] (alias)
	r14d_45 = 1<32> (alias)
l00000000004069F7:
	r14d_359 = r14d_45 ^ 1<32> (alias)
	r12_33 = rdx_32
l00000000004069C6:
	r12_33 = rdx_32
	r14b_722 = 0<8> (alias)
l0000000000406567:
	branch Mem25[0x000000000061B129<p64>:byte] != 0<8> l0000000000406580
l0000000000406580:
	word64 r14_77 = CONVERT(Mem25[rdi + 0xB1<64>:byte], byte, uint64)
	r14d_359 = SLICE(r14_77, word32, 0) (alias)
	r15d_108 = Mem25[rdi + 0xA4<64>:word32] (alias)
	branch SLICE(r14_77, byte, 0) != 0<8> l00000000004065B0
l0000000000406594:
	edx_324 = 0xC<32> (alias)
	branch SLICE(fn0000000000404CD0(0xC<32>), byte, 0) != 0<8> l00000000004066B0
l00000000004065AB:
l00000000004065B0:
	byte r14b_368 = SLICE(r14d_359, byte, 0)
	byte r15b_267 = SLICE(r15d_108, byte, 0)
	branch Mem25[rdi + 0xB0<64>:byte] != 0<8> l0000000000406628
l0000000000406628:
	word32 eax_118 = r15d_108 & 0xF000<32>
	branch eax_118 == 0x8000<32> l0000000000406868
l0000000000406868:
	branch (r15d_108 & 0x800<32>) == 0<32> l00000000004068B8
l0000000000406871:
	branch SLICE(fn0000000000404CD0(0x10<32>), byte, 0) == 0<8> l00000000004068B8
l00000000004068B8:
	branch (r15d_108 & 0x400<32>) == 0<32> l000000000040693B
l00000000004068C1:
	branch SLICE(fn0000000000404CD0(0x11<32>), byte, 0) == 0<8> l000000000040693B
l000000000040693B:
	branch SLICE(fn0000000000404CD0(0x15<32>), byte, 0) == 0<8> l000000000040695C
l0000000000406949:
	branch Mem25[rdi + 0xB8<64>:byte] == 0<8> l000000000040695C
l000000000040695C:
	branch (r15d_108 & 0x49<32>) == 0<32> l000000000040697A
l0000000000406962:
	branch SLICE(fn0000000000404CD0(0xE<32>), byte, 0) == 0<8> l000000000040697A
l000000000040697A:
	branch Mem25[rdi + 0x20<64>:word64] <=u 1<64> l00000000004065CF
l0000000000406985:
	branch SLICE(fn0000000000404CD0(0x16<32>), byte, 0) == 0<8> l00000000004065CF
l0000000000406997:
	edx_324 = 0x16<32> (alias)
l0000000000406970:
	edx_324 = 0xE<32> (alias)
l0000000000406952:
	edx_324 = 0x15<32> (alias)
l00000000004068CF:
	edx_324 = 0x11<32> (alias)
l000000000040687F:
	edx_324 = 0x10<32> (alias)
l000000000040663B:
	branch eax_118 == 0x4000<32> l00000000004068E0
l00000000004068E0:
	branch (r15d_108 & 0x202<32>) == 0x202<32> l00000000004069A1
l00000000004069A1:
	edx_324 = 0x14<32> (alias)
	branch SLICE(fn0000000000404CD0(0x14<32>), byte, 0) != 0<8> l00000000004066B0
l00000000004069B8:
l00000000004068F3:
	branch (r15b_267 & 2<8>) == 0<8> l0000000000406910
l00000000004068F9:
	edx_324 = 0x13<32> (alias)
	branch SLICE(fn0000000000404CD0(0x13<32>), byte, 0) != 0<8> l00000000004066B0
l0000000000406910:
	edx_324 = 6<32> (alias)
	branch (r15d_108 & 0x200<32>) == 0<32> l00000000004066B0
l0000000000406922:
	edx_324 = (0<32> - CONVERT(SLICE(fn0000000000404CD0(0x12<32>), byte, 0) <u 1<8>, bool, word32) & 0xFFFFFFF4<32>) + 0x12<32> (alias)
l0000000000406646:
	branch eax_118 == 0xA000<32> l0000000000406859
l0000000000406859:
	edx_324 = 7<32> (alias)
l0000000000406651:
	edx_324 = 8<32> (alias)
	branch eax_118 == 0x1000<32> l00000000004066B0
l000000000040665D:
	edx_324 = 9<32> (alias)
	branch eax_118 == 0xC000<32> l00000000004066B0
l0000000000406666:
	edx_324 = 0xA<32> (alias)
	branch eax_118 == 0x6000<32> l00000000004066B0
l000000000040666F:
	word64 rdx_346 = CONVERT(CONVERT(eax_118 != 0x2000<32>, bool, int8), int8, uint64)
	edx_324 = SLICE(rdx_346, word32, 0) + 0xB<32> + SLICE(rdx_346, word32, 0) (alias)
l00000000004065B9:
	word64 rax_350 = CONVERT(Mem25[rdi + 0xA0<64>:word32], word32, uint64)
	edx_324 = Mem25[rax_350 * 4<64> + 4271200<i64>:word32] (alias)
	branch edx_324 != 5<32> l0000000000406680
l0000000000406680:
	r14b_368 = SLICE(r14d_359, byte, 0) & CONVERT(edx_324 == 7<32>, bool, int8) (alias)
l0000000000406689:
	branch r14b_368 == 0<8> l00000000004066B0
l000000000040668E:
	edx_324 = 0xD<32> (alias)
	branch Mem25[0x000000000061B198<p64>:byte] != 0<8> l00000000004066B0
l000000000040669C:
	edx_324 = (0<32> - CONVERT(SLICE(fn0000000000404CD0(0xD<32>), byte, 0) <u 1<8>, bool, word32) & 0xFFFFFFFA<32>) + 0xD<32> (alias)
l00000000004065CF:
	word64 rax_411 = strlen(r12_33)
	word64 rbp_413 = Mem25[0x000000000061B120<p64>:word64]
	word64 r15_415 = r12_33 + rax_411
	branch rbp_413 == 0<64> l0000000000406619
l00000000004065EA:
l00000000004065F0:
	word64 rdx_421 = Mem25[rbp_413:word64]
	branch rax_411 <u rdx_421 l0000000000406610
l00000000004065F9:
	branch strncmp(r15_415 - rdx_421, Mem25[rbp_413 + 8<64>:word64], SLICE(rdx_421, int32, 0)) == 0<32> l00000000004068A0
l00000000004068A0:
	branch rbp_413 == 0<64> l0000000000406619
l00000000004068A9:
	rbp_436 = rbp_413 + 0x10<64>
l0000000000406610:
	rbp_413 = Mem25[rbp_413 + 0x20<64>:word64]
	branch rbp_413 != 0<64> l00000000004065F0
l0000000000406619:
	edx_324 = 5<32> (alias)
l00000000004066B0:
	rbp_436 = (CONVERT(edx_324, word32, uint64) << 4<64>) + 0x61A3E0<64>
l00000000004066C0:
	branch Mem25[rbp_436 + 8<64>:word64] == 0<64> l0000000000406890
l0000000000406890:
	rax = fn0000000000404CD0(4<32>)
	r14b_722 = SLICE(rax, byte, 0) (alias)
l00000000004066D0:
	branch SLICE(fn0000000000404CD0(4<32>), byte, 0) != 0<8> l0000000000406840
l0000000000406840:
	word64 rcx_1024
	fn0000000000406440(0x61A3E0<u64>, out rcx_1024)
	word64 rcx_1025
	fn0000000000406440(0x61A3F0<u64>, out rcx_1025)
l00000000004066DD:
	word64 rcx_1026
	fn0000000000406440(0x61A3E0<u64>, out rcx_1026)
	word64 rcx_1027
	fn0000000000406440(rbp_436, out rcx_1027)
	r14b_722 = 1<8> (alias)
	word64 rcx_1028
	rax = fn0000000000406440(0x61A3F0<u64>, out rcx_1028)
l0000000000406570:
	r14b_722 = 0<8> (alias)
l00000000004066FF:
	word64 rbp_642
	word64 rcx_632
	branch rdx == 0<64> l00000000004067D8
l00000000004067D8:
	rcx_632 = fn00000000004052D0(0<u64>, Mem25[0x000000000061B0E8<p64>:word64], r12_33, Mem25[0x000000000061A610<p64>:word64], r12_33, fs)
	Mem644[0x000000000061B018<p64>:word64] = Mem25[0x000000000061B018<p64>:word64] + rax
	rbp_642 = rax
l0000000000406708:
	branch Mem25[0x000000000061B130<p64>:byte] == 0<8> l0000000000406732
l0000000000406711:
	rax = Mem25[rdx + 0x18<64>:word64]
	branch Mem25[rdx + 0x20<64>:word64] <u rax + 8<64> l0000000000406820
l0000000000406820:
	_obstack_newchunk(rdx, 8<i32>)
	rax = Mem25[rdx + 0x18<64>:word64]
l0000000000406723:
	Mem659[rax:word64] = Mem25[0x000000000061B018<p64>:word64]
	Mem662[rdx + 0x18<64>:word64] = Mem659[rdx + 0x18<64>:word64] + 8<64>
l0000000000406732:
	rcx_632 = fn00000000004052D0(0<u64>, Mem664[0x000000000061B0E8<p64>:word64], r12_33, Mem664[0x000000000061A610<p64>:word64], r12_33, fs)
	word64 rdx_691 = rax + Mem664[0x000000000061B018<p64>:word64]
	Mem694[0x000000000061B018<p64>:word64] = rdx_691
	rbp_642 = rax
	branch Mem664[0x000000000061B130<p64>:byte] == 0<8> l0000000000406781
l0000000000406767:
	word64 rax_697 = Mem694[rdx + 0x18<64>:word64]
	rcx_632 = rax_697 + 8<64>
	branch Mem694[rdx + 0x20<64>:word64] <u rax_697 + 8<64> l0000000000406800
l0000000000406800:
	_obstack_newchunk(rdx, 8<i32>)
	rax_697 = Mem694[rdx + 0x18<64>:word64]
	rdx_691 = Mem694[0x000000000061B018<p64>:word64]
l0000000000406779:
	Mem708[rax_697:word64] = rdx_691
	Mem711[rdx + 0x18<64>:word64] = Mem708[rdx + 0x18<64>:word64] + 8<64>
l0000000000406781:
	fn0000000000406490()
	branch r14b_722 != 0<8> l00000000004067A0
l00000000004067A0:
	fn0000000000406400()
	rcx_632 = Mem738[0x000000000061B0C8<p64>:word64]
	branch CONVERT(CONVERT(rcx, word64, uint128) /u rcx_632, word64, uint64) == CONVERT(CONVERT((rbp_642 - 1<64>) + rcx, word64, uint128) /u rcx_632, word64, uint64) l000000000040678B
l00000000004067C6:
	fn0000000000406440(0x61A550<u64>, out rcx_632)
l000000000040678B:
	rcxOut = rcx_632
	return rbp_642
fn0000000000406540_exit:


word64 fn0000000000406A30()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000407870
//      fn00000000004079F0
// MayUse: 
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn0000000000406A30_entry:
l0000000000406A30:
	branch Mem0[0x000000000061B129<p64>:byte] == 0<8> l0000000000406A4F
l0000000000406A39:
	rax = fn0000000000404CD0(4<32>)
	branch SLICE(rax, byte, 0) != 0<8> l0000000000406A58
l0000000000406A58:
	word64 rcx_96
	fn0000000000406440(0x61A3E0<u64>, out rcx_96)
	word64 rcx_97
	fn0000000000406440(0x61A420<u64>, out rcx_97)
l0000000000406A75_thunk_fn0000000000406440:
	word64 rcx_98
	return fn0000000000406440(0x61A3F0<u64>, out rcx_98)
l0000000000406A4B:
l0000000000406A4F:
	return rax
fn0000000000406A30_exit:


word64 fn0000000000406A80(word64 rdx, word64 rsi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
// MayUse:  fs:[0..15] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO r10 r11 r15 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 rbp rbx rsp
fn0000000000406A80_entry:
l0000000000406A80:
	word64 rbx_27 = rsi
	word64 rax_30 = Mem25[fs:0x28<32>:word64]
	branch Mem31[0x000000000061A748<p64>:word64] == 0<64> l0000000000406ADB
l0000000000406AB8:
	word64 rax_39 = strstr(rsi, 0x413766<u64>)
	branch rax_39 == 0<64> l0000000000406ADB
l0000000000406ACD:
	branch strlen(rsi) <=u 0x65<64> l0000000000406B20
l0000000000406B20:
	word64 rax_55 = __mempcpy_chk(fp - 0x138<64>, rsi, rax_39 - rsi, 0x105<u64>)
	word64 rcx_56 = CONVERT(Mem31[rdx + 0x10<64>:word32], word32, int64)
	strcpy(stpcpy(rax_55, rcx_56 + 0x61A760<64> + rcx_56 * 0xA0<64>), rax_39 + 2<64>)
	rbx_27 = fp - 0x138<64>
l0000000000406ADB:
	word64 rax_92 = fn0000000000410600(rdx, rbx_27, 0x3E9<u64>, rdi, fs)
	branch (rax_30 ^ Mem31[fs:0x28<32>:word64]) != 0<64> l0000000000406B66
l0000000000406B66:
	__stack_chk_fail()
l0000000000406B07:
	return rax_92
fn0000000000406A80_exit:


void fn0000000000406B70(word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004079F0
// MayUse:  fs:[0..15] rdi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: fs r12 r13 r14 r15 rbp rbx rsp
fn0000000000406B70_entry:
l0000000000406B70:
	word64 qwLoc12B8_1240
	word64 qwLoc12B0_1239
	bool v52_1222
	word32 eax_105
	word64 rax_26 = Mem21[fs:0x28<32>:word64]
	branch Mem27[rdi + 0xB0<64>:byte] == 0<8> l0000000000406E00
l0000000000406E00:
	branch Mem27[0x000000000061B17C<p64>:byte] == 0<8> l0000000000406BC2
l0000000000406BA4:
	fn000000000040A600(fp - 0x12A8<64>, rdi + 0x10<64>)
	branch Mem27[0x000000000061B17C<p64>:byte] != 0<8> l0000000000406E41
l0000000000406E41:
	word32 eax_64 = Mem61[rdi + 0xB4<64>:word32]
	branch eax_64 == 1<32> l0000000000407138
l0000000000407138:
l0000000000406E50:
	branch eax_64 != 2<32> l0000000000406BC7
l0000000000406E59:
	eax_105 = Mem61[0x000000000061B14C<p64>:word32] (alias)
	v52_1222 = eax_105 <u 1<32>
	branch eax_105 != 1<32> l0000000000406BD6
l0000000000406E6D:
l0000000000406BC2:
l0000000000406BC7:
	eax_105 = Mem79[0x000000000061B14C<p64>:word32] (alias)
	v52_1222 = eax_105 <u 1<32>
	branch eax_105 == 1<32> l0000000000406E70
l0000000000406E70:
	qwLoc12B0_1239 = Mem88[rdi + 0x80<64>:word64]
	qwLoc12B8_1240 = Mem88[rdi + 0x78<64>:word64]
l0000000000406BD6:
	branch v52_1222 l0000000000407040
l0000000000407040:
	qwLoc12B0_1239 = Mem99[rdi + 0x70<64>:word64]
	qwLoc12B8_1240 = Mem99[rdi + 0x68<64>:word64]
l0000000000406BDC:
	branch eax_105 != 2<32> l0000000000406E90
l0000000000406E90:
	abort()
l0000000000406BE5:
	qwLoc12B0_1239 = Mem99[rdi + 0x60<64>:word64]
	qwLoc12B8_1240 = Mem99[rdi + 0x58<64>:word64]
l0000000000406BF7:
	word64 rbp_116 = fp - 0xE88<64>
	branch Mem112[0x000000000061B114<p64>:byte] != 0<8> l0000000000407060
l0000000000407060:
	branch Mem112[rdi + 0xB0<64>:byte] == 0<8> l0000000000407085
l000000000040706F:
	word64 rdi_123 = Mem112[rdi + 0x18<64>:word64]
	branch rdi_123 == 0<64> l0000000000407085
l0000000000407078:
	fn000000000040CD70(fp - 0x1278<64>, rdi_123)
l0000000000407085:
	__sprintf_chk(fp - 0xE88<64>, 1<i32>, 0xE3B<u64>, 0x413779<u64>, 0<32>)
	word64 rdx_156 = fp - 0xE88<64>
l00000000004070B0:
	word64 rcx_160 = CONVERT(Mem112[rdx_156:word32], word32, uint64)
	word64 rax_173 = CONVERT(SLICE(rcx_160, word32, 0) + 0xFEFEFEFF<32> & ~SLICE(rcx_160, word32, 0) & 0x80808080<32>, word32, uint64)
	rdx_156 = rdx_156 + 4<64>
	word32 eax_174 = SLICE(rax_173, word32, 0)
	byte al_193 = SLICE(rax_173, byte, 0)
	branch eax_174 == 0<32> l00000000004070B0
l00000000004070C7:
	word64 rbp_180 = rdx_156 + 2<64>
	branch (eax_174 & 0x8080<32>) != 0<32> l00000000004070D8
l00000000004070D5_1:
	al_193 = SLICE(eax_174 >>u 0x10<32>, byte, 0) (alias)
l00000000004070D8:
	branch (eax_174 & 0x8080<32>) == 0<32> l00000000004070DC
l00000000004070D8_1:
	rbp_180 = rdx_156
l00000000004070DC:
	rbp_116 = SLICE(SEQ(rbp_180, al_193) + SEQ(3<64>, al_193), word64, 8) (alias)
l0000000000406C0F:
	branch Mem112[0x000000000061B144<p64>:byte] == 0<8> l0000000000406C8F
l0000000000406C18:
	word64 r14_1210 = 0x413764<u64>
	branch Mem112[rdi + 0xB0<64>:byte] != 0<8> l0000000000407288
l0000000000407288:
	r14_1210 = fn000000000040BD70(0x200<u64>, Mem112[0x000000000061B140<p64>:word32], fp - 0x1278<64>, Mem112[rdi + 0x50<64>:word64], Mem112[0x000000000061B138<p64>:word64], fs)
l0000000000406C2B:
	word64 rdx_300
	word32 r15d_275 = Mem112[0x000000000061B174<p64>:word32] - fn000000000040D420(0<32>, r14_1210, fs)
	branch r15d_275 <= 0<32> l0000000000406F50
l0000000000406C4B:
	word64 rcx_289 = rbp_116 + 1<64> + CONVERT(r15d_275 - 1<32>, word32, uint64)
	word64 rdx_290 = rbp_116
l0000000000406C60:
	rdx_290 = rdx_290 + 1<64>
	Mem293[rdx_290 - 1<64>:byte] = 0x20<8>
	branch rdx_290 != rcx_289 l0000000000406C60
l0000000000406C6D:
	rdx_300 = rbp_116 + 1<64> + CONVERT(r15d_275 - 1<32>, word32, int64)
l0000000000406C74:
	r14_1210 = r14_1210 + 1<64>
	byte al_308 = Mem303[r14_1210 - 1<64>:byte]
	rbp_116 = rdx_300 + 1<64>
	Mem311[rbp_116 - 1<64>:byte] = al_308
	branch al_308 != 0<8> l0000000000406F50
l0000000000406F50:
	rdx_300 = rbp_116
l0000000000406C8C:
	Mem315[rdx_300:byte] = 0x20<8>
l0000000000406C8F:
	branch Mem321[rdi + 0xB0<64>:byte] != 0<8> l0000000000407120
l0000000000407120:
	fn000000000040CD70(fp - 0x1278<64>, Mem321[rdi + 0x20<64>:word64])
l0000000000406CA1:
	__sprintf_chk(rbp_116, 1<i32>, 0xFFFFFFFFFFFFFFFF<64>, 0x413769<u64>, 0<32>)
	word64 rbp_1208 = rbp_116 + strlen(rbp_116)
	branch Mem350[0x000000000061B130<p64>:byte] != 0<8> l00000000004070F0
l00000000004070F0:
	fwrite_unlocked(0x413771<u64>, 1<u64>, 2<u64>, Mem350[0x000000000061A610<p64>:word64])
	Mem391[0x000000000061B018<p64>:word64] = Mem350[0x000000000061B018<p64>:word64] + 2<64>
l0000000000406CE2:
	branch Mem393[0x000000000061A569<p64>:byte] != 0<8> l0000000000406D08
l0000000000406CEB:
	branch Mem393[0x000000000061A568<p64>:byte] != 0<8> l0000000000406D08
l0000000000406CF4:
	branch Mem393[0x000000000061B146<p64>:byte] == 0<8> l0000000000407148
l0000000000407148:
	branch Mem393[0x000000000061B17D<p64>:byte] == 0<8> l0000000000406D58
l0000000000407155:
l0000000000406D01:
l0000000000406D08:
	fputs_unlocked(fp - 0xE88<64>, Mem393[0x000000000061A610<p64>:word64])
	Mem422[0x000000000061B018<p64>:word64] = Mem393[0x000000000061B018<p64>:word64] + (rbp_1208 - (fp - 0xE88<64>))
	branch Mem422[0x000000000061A569<p64>:byte] != 0<8> l0000000000407248
l0000000000407248:
	fn00000000004057B0(Mem422[rdi + 0xB0<64>:byte], Mem422[0x000000000061B168<p64>:word32], CONVERT(Mem422[rdi + 0x2C<64>:word32], word32, uint64), fs)
l0000000000406D2E:
	branch Mem422[0x000000000061A568<p64>:byte] != 0<8> l0000000000407210
l0000000000407210:
	word64 rdx_462 = CONVERT(Mem422[0x000000000061B164<p64>:word32], word32, uint64)
	word32 eax_463 = Mem422[rdi + 0x30<64>:word32]
	word64 rdi_460 = 0x413764<u64>
	word32 edx_477 = SLICE(rdx_462, word32, 0)
	branch Mem422[rdi + 0xB0<64>:byte] == 0<8> l0000000000407238
l0000000000407229:
	rdi_460 = 0<u64>
	branch Mem422[0x000000000061B145<p64>:byte] == 0<8> l0000000000407415
l0000000000407415:
	rdi_460 = fn000000000040CB40(eax_463)
	rdx_462 = CONVERT(edx_477, word32, uint64)
l0000000000407238:
	fn0000000000405700(SLICE(rdx_462, word32, 0), rdi_460, fs)
l0000000000406D3B:
	branch Mem504[0x000000000061B146<p64>:byte] != 0<8> l00000000004071D0
l00000000004071D0:
	fn00000000004057B0(Mem504[rdi + 0xB0<64>:byte], Mem504[0x000000000061B160<p64>:word32], CONVERT(Mem504[rdi + 0x2C<64>:word32], word32, uint64), fs)
	rbp_1208 = fp - 0xE88<64>
	branch Mem504[0x000000000061B17D<p64>:byte] == 0<8> l0000000000406D58
l0000000000406D48:
	rbp_1208 = fp - 0xE88<64>
	branch Mem504[0x000000000061B17D<p64>:byte] != 0<8> l00000000004071F5
l00000000004071F5:
	fn0000000000405700(Mem504[0x000000000061B16C<p64>:word32], Mem504[rdi + 0xA8<64>:word64], fs)
	rbp_1208 = fp - 0xE88<64>
l0000000000406D58:
	word64 r13_680
	word64 r14_562
	branch Mem558[rdi + 0xB0<64>:byte] == 0<8> l0000000000406F60
l0000000000406F60:
	r14_562 = 0x413764<u64>
l0000000000406D65:
	branch (Mem558[rdi + 0x28<64>:word32] & 0xB000<32>) == 0x2000<32> l00000000004072B0
l00000000004072B0:
	word64 rax_571 = Mem558[rdi + 0x38<64>:word64]
	word32 r13d_647 = 0xFFFFFFFE<32> - Mem558[0x000000000061B15C<p64>:word32] - Mem558[0x000000000061B158<p64>:word32] + Mem558[0x000000000061B154<p64>:word32]
	fn000000000040CD70(fp - 0x1278<64>, CONVERT(SEQ(SLICE(rax_571 >>u 0xC<64>, word24, 8), 0<8>) | CONVERT(SLICE(rax_571, byte, 0), byte, word32), word32, uint64))
	word64 rdx_612 = Mem558[rdi + 0x38<64>:word64]
	fn000000000040CD70(fp - 0x1298<64>, CONVERT(SLICE(rdx_612 >>u 0x20<64>, word32, 0) & 0xFFFFF000<32> | SLICE(rdx_612 >>u 8<64>, word32, 0) & 0xFFF<32>, word32, uint64))
	branch r13d_647 < 0<32> l0000000000407328
l0000000000407324_1:
l0000000000407328:
	__sprintf_chk(rbp_1208, 1<i32>, 0xFFFFFFFFFFFFFFFF<64>, 0x413774<u64>, 0<32>)
	r13_680 = rbp_1208 + 1<64> + CONVERT(Mem663[0x000000000061B154<p64>:word32], word32, int64)
l0000000000406D78:
	r14_562 = fn000000000040BD70(1<u64>, Mem558[0x000000000061B134<p64>:word32], fp - 0x1278<64>, Mem558[rdi + 0x40<64>:word64], Mem558[0x000000000061A560<p64>:word64], fs)
l0000000000406D9B:
	word32 r13d_725 = Mem558[0x000000000061B154<p64>:word32] - fn000000000040D420(0<32>, r14_562, fs)
	branch r13d_725 <= 0<32> l0000000000406DDC
l0000000000406DB7:
	word64 rcx_738 = rbp_1208 + 1<64> + CONVERT(r13d_725 - 1<32>, word32, uint64)
	word64 rdx_739 = rbp_1208
l0000000000406DC8:
	rdx_739 = rdx_739 + 1<64>
	Mem742[rdx_739 - 1<64>:byte] = 0x20<8>
	branch rdx_739 != rcx_738 l0000000000406DC8
l0000000000406DD5:
	rbp_1208 = rbp_1208 + 1<64> + CONVERT(r13d_725 - 1<32>, word32, int64)
l0000000000406DDC:
	r14_562 = r14_562 + 1<64>
	byte al_757 = Mem752[r14_562 - 1<64>:byte]
	r13_680 = rbp_1208 + 1<64>
	Mem760[r13_680 - 1<64>:byte] = al_757
	branch al_757 == 0<8> l0000000000406E98
l0000000000406E98:
	Mem762[rbp_1208:byte] = 0x20<8>
l0000000000406E9C:
	word32 rax_32_32_1080
	word64 r13_1022
	word64 rax_766 = localtime(SLICE(fp, time_t, 0) - 4792<i32>)
	Mem768[r13_680:byte] = 1<8>
	branch Mem768[rdi + 0xB0<64>:byte] == 0<8> l0000000000406F80
l0000000000406EB8:
	branch rax_766 == 0<64> l0000000000407364
l0000000000406EC1:
	word32 r8d_817
	word64 rdi_779 = Mem768[0x000000000061B188<p64>:word64]
	word64 rdx_777 = Mem768[0x000000000061B180<p64>:word64]
	word32 edi_784 = SLICE(rdi_779, word32, 0)
	word32 ecx_785 = SLICE(qwLoc12B0_1239, word32, 0)
	branch qwLoc12B8_1240 > rdx_777 l0000000000407380
l0000000000406EE2:
	branch qwLoc12B8_1240 < rdx_777 l0000000000406EEC
l0000000000406EE4:
	branch edi_784 < ecx_785 l0000000000407380
l0000000000407380:
	fn000000000040AB30(0x61B180<u64>)
	rdx_777 = Mem792[0x000000000061B180<p64>:word64]
	r8d_817 = Mem792[0x000000000061B188<p64>:word32] (alias)
	ecx_785 = SLICE(qwLoc12B0_1239, word32, 0) (alias)
l0000000000406EEC:
	r8d_817 = SLICE(rdi_779, word32, 0) (alias)
l0000000000406EEF:
	word32 edi_843
	word64 rdi_809 = rdx_777 + 0xFFFFFFFFFF0F3D54<64>
	branch rdi_809 >= qwLoc12B8_1240 l0000000000407268
l0000000000407268:
	edi_843 = 0<32> (alias)
	branch rdi_809 > qwLoc12B8_1240 l0000000000406F20
l0000000000407273:
	branch r8d_817 >= ecx_785 l0000000000406F20
l000000000040727C:
l0000000000406EFF:
	edi_843 = 1<32> (alias)
	branch rdx_777 > qwLoc12B8_1240 l0000000000406F20
l0000000000406F09:
	edi_843 = 0<32> (alias)
	branch rdx_777 < qwLoc12B8_1240 l0000000000406F20
l0000000000406F0E:
	edi_843 = ecx_785 - r8d_817 >>u 0x1F<32> (alias)
l0000000000406F20:
	word64 rax_880 = fn0000000000406A80(rax_766, Mem858[CONVERT(edi_843, word32, int64) * 8<64> + 6398928<i64>:word64], r13_680, fs)
	branch rax_880 == 0<64> l0000000000406F6B
l0000000000406F6B:
	branch Mem858[r13_680:byte] == 0<8> l0000000000406F3B
l0000000000406F72:
	branch Mem858[rdi + 0xB0<64>:byte] != 0<8> l0000000000407364
l0000000000407364:
	fn000000000040CCD0(fp - 0x1298<64>, qwLoc12B8_1240)
l0000000000406F7F:
l0000000000406F80:
l0000000000406F86:
	branch Mem922[0x000000000061A3C4<p64>:word32] < 0<32> l00000000004073B1
l00000000004073B1:
	word64 rax_936 = localtime(SLICE(fp, time_t, 0) - 4800<i32>)
	branch rax_936 == 0<64> l0000000000407403
l00000000004073D3:
	word64 rax_957 = fn0000000000406A80(rax_936, Mem935[0x000000000061A3D0<p64>:word64], fp - 0x1278<64>, fs)
	word32 r8d_993 = Mem935[0x000000000061A3C4<p64>:word32]
	branch rax_957 != 0<64> l0000000000407436
l0000000000407436:
	word32 eax_989 = fn000000000040D240(0<32>, rax_957, fp - 0x1278<64>, fs)
	Mem990[0x000000000061A3C4<p64>:word32] = eax_989
	r8d_993 = eax_989 (alias)
l00000000004073FA:
	branch r8d_993 >= 0<32> l0000000000406F96
l0000000000407403:
	Mem999[0x000000000061A3C4<p64>:word32] = 0<32>
l0000000000406F96:
	__sprintf_chk(r13_680, 1<i32>, 0xFFFFFFFFFFFFFFFF<64>, 0x413779<u64>, 0<32>)
	word64 rax_1021 = strlen(r13_680)
	rax_32_32_1080 = SLICE(rax_1021, word32, 32) (alias)
	r13_1022 = r13_680 + rax_1021
l0000000000406F3B:
	word64 rax_1026 = rax_880 + r13_680
	Mem1029[rax_1026:byte] = 0x20<8>
	Mem1030[rax_1026 + 1<64>:byte] = 0<8>
	rax_32_32_1080 = SLICE(rax_1026, word32, 32) (alias)
	r13_1022 = rax_1026 + 1<64>
l0000000000406FBC:
	word64 r13_1054 = r13_1022 - (fp - 0xE88<64>)
	word32 eax_1056 = fputs_unlocked(fp - 0xE88<64>, Mem1031[0x000000000061A610<p64>:word64])
	Mem1072[0x000000000061B018<p64>:word64] = Mem1031[0x000000000061B018<p64>:word64] + r13_1054
	word64 rcx_1088
	word64 rax_1092 = fn0000000000406540(SEQ(rax_32_32_1080, eax_1056), r13_1054, 0x61AFC0<u64>, 0<8>, rdi, fs, out rcx_1088)
	word64 rdx_1098 = CONVERT(Mem1072[rdi + 0xA0<64>:word32], word32, uint64)
	branch SLICE(rdx_1098, word32, 0) == 6<32> l0000000000407160
l0000000000407160:
	branch Mem1072[rdi + 8<64>:word64] == 0<64> l0000000000407012
l000000000040716B:
	word64 rax_1112 = fwrite_unlocked(0x41377E<u64>, 1<u64>, 4<u64>, Mem1072[0x000000000061A610<p64>:word64])
	Mem1120[0x000000000061B018<p64>:word64] = Mem1072[0x000000000061B018<p64>:word64] + 4<64>
	word64 rcx_1127
	fn0000000000406540(rax_1112, r13_1054 + 4<64> + rax_1092, 0<u64>, 1<8>, rdi, fs, out rcx_1127)
	branch Mem1120[0x000000000061B12C<p64>:word32] == 0<32> l0000000000407012
l00000000004071B0:
	fn0000000000405D00(rcx_1127, 0<32>, CONVERT(Mem1120[rdi + 0xA4<64>:word32], word32, uint64), 1<8>)
l0000000000406FF9:
	branch Mem1072[0x000000000061B12C<p64>:word32] == 0<32> l0000000000407012
l0000000000407003:
	fn0000000000405D00(rcx_1088, SLICE(rdx_1098, word32, 0), CONVERT(Mem1072[rdi + 0x28<64>:word32], word32, uint64), Mem1072[rdi + 0xB0<64>:byte])
l0000000000407012:
	branch (rax_26 ^ Mem1187[fs:0x28<32>:word64]) != 0<64> l000000000040745A
l000000000040745A:
	__stack_chk_fail()
l0000000000407029:
	return
fn0000000000406B70_exit:
l0000000000406DF5:
	rbp_1208 = r13_680


void fn0000000000407870(word64 rsi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004079F0
// MayUse:  fs:[0..15] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rcx rdi rdx rsi Top
// Preserved: rbp rbx rsp
fn0000000000407870_entry:
l0000000000407870:
	word64 rax_16 = Mem11[fs:0x28<32>:word64]
	word64 rax_173 = fn0000000000406A30()
	branch Mem17[0x000000000061B114<p64>:byte] != 0<8> l0000000000407970
l0000000000407970:
	branch Mem17[rdi + 0xB0<64>:byte] == 0<8> l0000000000407992
l000000000040797E:
	word64 rdi_38 = Mem17[rdi + 0x18<64>:word64]
	branch rdi_38 == 0<64> l0000000000407992
l0000000000407987:
	fn000000000040CD70(fp - 0x2B8<64>, rdi_38)
l0000000000407992:
	branch Mem17[0x000000000061B150<p64>:word32] == 4<32> l00000000004079A7
l00000000004079A0_1:
l00000000004079A7:
	rax_173 = CONVERT(__printf_chk(1<i32>, 0x413779<u64>, 0<32>), int32, uint64) (alias)
l00000000004078A4:
	branch Mem17[0x000000000061B144<p64>:byte] == 0<8> l00000000004078E0
l00000000004078AD:
	branch Mem17[rdi + 0xB0<64>:byte] != 0<8> l00000000004079C0
l00000000004079C0:
	fn000000000040BD70(0x200<u64>, Mem17[0x000000000061B140<p64>:word32], fp - 0x2B8<64>, Mem17[rdi + 0x50<64>:word64], Mem17[0x000000000061B138<p64>:word64], fs)
l00000000004078BF:
	branch Mem17[0x000000000061B150<p64>:word32] == 4<32> l00000000004078D4
l00000000004078CD_1:
l00000000004078D4:
	rax_173 = CONVERT(__printf_chk(1<i32>, 0x413779<u64>, 0<32>), int32, uint64) (alias)
l00000000004078E0:
	branch Mem17[0x000000000061B17D<p64>:byte] == 0<8> l0000000000407911
l00000000004078E9:
	branch Mem17[0x000000000061B150<p64>:word32] == 4<32> l0000000000407900
l00000000004078F9_1:
l0000000000407900:
	rax_173 = CONVERT(__printf_chk(1<i32>, 0x413779<u64>, 0<32>), int32, uint64) (alias)
l0000000000407911:
	word64 rcx_186
	fn0000000000406540(rax_173, rsi, 0<u64>, 0<8>, rdi, fs, out rcx_186)
	branch Mem17[0x000000000061B12C<p64>:word32] == 0<32> l0000000000407948
l000000000040792D:
	fn0000000000405D00(rcx_186, Mem17[rdi + 0xA0<64>:word32], CONVERT(Mem17[rdi + 0x28<64>:word32], word32, uint64), Mem17[rdi + 0xB0<64>:byte])
l0000000000407948:
	branch (rax_16 ^ Mem17[fs:0x28<32>:word64]) != 0<64> l00000000004079E6
l00000000004079E6:
	__stack_chk_fail()
l0000000000407962:
	return
fn0000000000407870_exit:


void fn00000000004079F0(word64 r12, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  fs:[0..15] r12:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn00000000004079F0_entry:
l00000000004079F0:
	branch Mem0[0x000000000061B150<p64>:word32] >u 4<32> l0000000000407A46
l00000000004079F9:
	switch (Mem24[0x000000000061B150<p64>:word32]) { l0000000000407C01 l0000000000407C75 l0000000000407CDA l0000000000407A48 l0000000000407B31 }
l0000000000407B31:
	branch Mem24[0x000000000061B1B0<p64>:word64] == 0<64> l0000000000407A18
l0000000000407B3F:
	word64 r13_39 = Mem24[Mem24[0x000000000061B1A8<p64>:word64]:word64]
	word64 rbx_33 = 0<u64>
	word64 r12_102 = 0<u64>
	word64 rbp_100 = fn0000000000405D50(r13_39, 0<u64>, fs)
l0000000000407B60:
	fn0000000000407870(r12_102, r13_39, fs)
	rbx_33 = rbx_33 + 1<64>
	r12_102 = rbp_100
	branch rbx_33 >=u Mem76[0x000000000061B1B0<p64>:word64] l0000000000407A18
l0000000000407B7F:
	r13_39 = Mem76[Mem76[0x000000000061B1A8<p64>:word64] + rbx_33 * 8<64>:word64]
	word64 rax_88 = fn0000000000405D50(r13_39, rbp_100, fs)
	branch rbx_33 == 0<64> l0000000000407E00
l0000000000407E00:
	rbp_100 = rbp_100 + rax_88
l0000000000407B9B:
	byte r14b_146
	word32 r15d_137
	r12_102 = rbp_100 + 2<64>
	branch rax_88 >=u Mem76[0x000000000061B0C8<p64>:word64] l0000000000407E10
l0000000000407E10:
	r15d_137 = 0xA<32> (alias)
	r14b_146 = 0xA<8> (alias)
	r12_102 = 0<u64>
l0000000000407BB0:
	r15d_137 = 0x20<32> (alias)
	r14b_146 = 0x20<8> (alias)
l0000000000407BBC:
	word64 rdi_121 = Mem76[0x000000000061A610<p64>:word64]
	rbp_100 = rax_88
	word64 rax_122 = Mem76[rdi_121 + 0x28<64>:word64]
	branch rax_122 >=u Mem76[rdi_121 + 0x30<64>:word64] l0000000000407E8B
l0000000000407E8B:
	__overflow(rdi_121, 44<i32>)
l0000000000407BD1:
	Mem129[rdi_121 + 0x28<64>:word64] = rax_122 + 1<64>
	Mem130[rax_122:byte] = 0x2C<8>
l0000000000407BDC:
	word64 rdi_132 = Mem131[0x000000000061A610<p64>:word64]
	word64 rax_133 = Mem131[rdi_132 + 0x28<64>:word64]
	branch rax_133 >=u Mem131[rdi_132 + 0x30<64>:word64] l0000000000407E7E
l0000000000407E7E:
	__overflow(rdi_132, r15d_137)
l0000000000407BF1:
	Mem144[rdi_132 + 0x28<64>:word64] = rax_133 + 1<64>
	Mem149[rax_133:byte] = r14b_146
l0000000000407A48:
	word64 rax_158 = fn0000000000405ED0(0<32>, fs)
	word64 r14_169 = Mem24[0x000000000061B028<p64>:word64] - 0x18<64> + rax_158 * 0x18<64>
	word64 rbx_171 = Mem24[Mem24[0x000000000061B1A8<p64>:word64]:word64]
	word64 rax_177 = fn0000000000405D50(rbx_171, r12, fs)
	word64 r12_196 = Mem186[Mem186[r14_169 + 0x10<64>:word64]:word64]
	fn0000000000407870(0<u64>, rbx_171, fs)
	word64 r15_153 = 0<u64>
	word64 rbx_195 = 1<u64>
	word64 rcx_210 = rax_177
	branch Mem186[0x000000000061B1B0<p64>:word64] >u 1<64> l0000000000407B0D
l0000000000407B0D:
	word64 rdx_219 = CONVERT(CONVERT(rbx_195, word64, uint128) % rax_158, word128, uint64)
	branch rdx_219 == 0<64> l0000000000407AB0
l0000000000407AB0:
	word64 rdi_226 = Mem225[0x000000000061A610<p64>:word64]
	word64 rax_227 = Mem225[rdi_226 + 0x28<64>:word64]
	branch rax_227 >=u Mem225[rdi_226 + 0x30<64>:word64] l0000000000407E27
l0000000000407E27:
	__overflow(rdi_226, 10<i32>)
	r15_153 = 0<u64>
l0000000000407AC5:
	Mem244[rdi_226 + 0x28<64>:word64] = rax_227 + 1<64>
	Mem245[rax_227:byte] = 0xA<8>
	r15_153 = 0<u64>
l0000000000407B1D:
	word64 r12_248 = r12_196 + r15_153
	fn0000000000405200(r12_248, rcx_210 + r15_153)
	r15_153 = r12_248
l0000000000407AD3:
	word64 r12_268 = Mem263[Mem263[0x000000000061B1A8<p64>:word64] + rbx_195 * 8<64>:word64]
	fn0000000000407870(r15_153, r12_268, fs)
	rcx_210 = fn0000000000405D50(r12_268, r12_268, fs)
	rbx_195 = rbx_195 + 1<64>
	r12_196 = Mem263[Mem263[r14_169 + 0x10<64>:word64] + rdx_219 * 8<64>:word64]
	branch rbx_195 >=u Mem263[0x000000000061B1B0<p64>:word64] l0000000000407A18
l0000000000407AA1:
l0000000000407A18:
	word64 rdi_309 = Mem308[0x000000000061A610<p64>:word64]
	word64 rax_310 = Mem308[rdi_309 + 0x28<64>:word64]
	branch rax_310 >=u Mem308[rdi_309 + 0x30<64>:word64] l0000000000407E39
l0000000000407E39:
	__overflow(rdi_309, 10<i32>)
	return
l0000000000407A2D:
	Mem337[rdi_309 + 0x28<64>:word64] = rax_310 + 1<64>
	Mem338[rax_310:byte] = 0xA<8>
l0000000000407CDA:
	word64 rax_342 = fn0000000000405ED0(1<32>, fs)
	word128 rdx_rax_357 = CONVERT(Mem24[0x000000000061B1B0<p64>:word64], word64, uint128)
	word64 r15_353 = Mem24[0x000000000061B028<p64>:word64] - 0x18<64> + rax_342 * 0x18<64>
	word64 rdx_366 = CONVERT(CONVERT(rdx_rax_357 % rax_342, word128, uint64) != 0<64>, bool, uint64) + CONVERT(rdx_rax_357 /u rax_342, word64, uint64)
	branch rdx_366 == 0<64> l0000000000407A38
l0000000000407D1A:
	word64 qwLoc40_678 = 0<64>
l0000000000407D30:
	word64 rbp_377 = 0<u64>
	word64 rbx_379 = 0<u64>
	word64 r13_383 = qwLoc40_678 * 8<64>
	word64 r12_384 = qwLoc40_678
l0000000000407D6B:
	word64 r14_388 = Mem385[Mem385[0x000000000061B1A8<p64>:word64] + r13_383:word64]
	word64 rax_396 = fn0000000000405D50(r14_388, r12_384, fs)
	word64 rcx_413 = Mem406[Mem406[r15_353 + 0x10<64>:word64] + rbp_377:word64]
	fn0000000000407870(rbx_379, r14_388, fs)
	rbp_377 = rbp_377 + 8<64>
	r12_384 = r12_384 + rdx_366
	r13_383 = r13_383 + rdx_366 * 8<64>
	branch r12_384 <u Mem416[0x000000000061B1B0<p64>:word64] l0000000000407D50
l0000000000407D50:
	word64 r14_435 = rcx_413 + rbx_379
	fn0000000000405200(r14_435, rax_396 + rbx_379)
	rbx_379 = r14_435
l0000000000407DB2:
	word64 rdi_449 = Mem416[0x000000000061A610<p64>:word64]
	word64 rax_450 = Mem416[rdi_449 + 0x28<64>:word64]
	branch rax_450 >=u Mem416[rdi_449 + 0x30<64>:word64] l0000000000407E51
l0000000000407E51:
	__overflow(rdi_449, 10<i32>)
l0000000000407DC7:
	Mem457[rdi_449 + 0x28<64>:word64] = rax_450 + 1<64>
	Mem458[rax_450:byte] = 0xA<8>
l0000000000407DD2:
	word64 v32_461 = qwLoc40_678 + 1<64>
	qwLoc40_678 = v32_461
	branch v32_461 != rdx_366 l0000000000407D30
l0000000000407DE8:
l0000000000407C75:
	word64 rbx_481 = 0<u64>
	branch Mem24[0x000000000061B1B0<p64>:word64] == 0<64> l0000000000407A38
l0000000000407C85:
l0000000000407C88:
	fn0000000000407870(0<u64>, Mem484[Mem484[0x000000000061B1A8<p64>:word64] + rbx_481 * 8<64>:word64], fs)
	word64 rdi_506 = Mem484[0x000000000061A610<p64>:word64]
	word64 rax_507 = Mem484[rdi_506 + 0x28<64>:word64]
	branch rax_507 >=u Mem484[rdi_506 + 0x30<64>:word64] l0000000000407E60
l0000000000407E60:
	__overflow(rdi_506, 10<i32>)
l0000000000407CAF:
	Mem514[rdi_506 + 0x28<64>:word64] = rax_507 + 1<64>
	Mem515[rax_507:byte] = 0xA<8>
l0000000000407CBA:
	rbx_481 = rbx_481 + 1<64>
	branch Mem518[0x000000000061B1B0<p64>:word64] >u rbx_481 l0000000000407C88
l0000000000407CC7:
l0000000000407C01:
	word64 rbx_538 = 0<u64>
	branch Mem24[0x000000000061B1B0<p64>:word64] == 0<64> l0000000000407A38
l0000000000407A38:
l0000000000407C11:
l0000000000407C18:
	fn0000000000406A30()
	fn0000000000406B70(Mem566[Mem566[0x000000000061B1A8<p64>:word64] + rbx_538 * 8<64>:word64], fs)
	word64 rdi_584 = Mem566[0x000000000061A610<p64>:word64]
	word64 rax_585 = Mem566[rdi_584 + 0x28<64>:word64]
	branch rax_585 >=u Mem566[rdi_584 + 0x30<64>:word64] l0000000000407E6F
l0000000000407E6F:
	__overflow(rdi_584, 10<i32>)
l0000000000407C42:
	Mem592[rdi_584 + 0x28<64>:word64] = rax_585 + 1<64>
	Mem593[rax_585:byte] = 0xA<8>
l0000000000407C4D:
	Mem596[0x000000000061B018<p64>:word64] = Mem594[0x000000000061B018<p64>:word64] + 1<64>
	rbx_538 = rbx_538 + 1<64>
	branch Mem596[0x000000000061B1B0<p64>:word64] >u rbx_538 l0000000000407C18
l0000000000407C62:
l0000000000407A46:
	return
fn00000000004079F0_exit:


word64 fn0000000000407EA0(word64 rcx, word32 edx, word32 esi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  edx:[0..31] esi:[0..31] fs:[0..15] rcx:[0..63] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO r9 rax rcx rdi rdx rsi Top
// Preserved: r10 r11 r12 r13 r14 r15 r8 rbp rbx rsp
fn0000000000407EA0_entry:
l0000000000407EA0:
	byte bLoc038C_2825 = SLICE(edx, byte, 0)
	word64 rax_34 = Mem30[fs:0x28<32>:word64]
	word64 rcx_121 = Mem35[0x000000000061B1B0<p64>:word64]
	word64 r9_120 = Mem35[0x000000000061B1C0<p64>:word64]
	branch rcx_121 == Mem35[0x000000000061B1B8<p64>:word64] l0000000000408400
l0000000000408400:
	word64 rdi_43 = Mem35[0x000000000061B1C0<p64>:word64]
	branch rcx_121 >u 0xAAAAAAAAAAAAAA<64> l0000000000408C7B
l0000000000408C7B:
	fn0000000000410E50()
l000000000040841A:
	word64 rax_111 = fn0000000000410C90(rcx_121 * 0x180<64>, rdi_43)
	Mem117[0x000000000061B1B8<p64>:word64] = Mem108[0x000000000061B1B8<p64>:word64] << 1<64>
	Mem119[0x000000000061B1C0<p64>:word64] = rax_111
	r9_120 = rax_111
	rcx_121 = Mem119[0x000000000061B1B0<p64>:word64]
l0000000000407EED:
	word64 rdi_3301
	word64 rcx_124 = rcx_121 * 3<64>
	word64 r14_129 = r9_120 + (rcx_124 << 6<64>)
	word32 esi_151 = 0xC0<32>
	rdi_3301 = r14_129
	branch (SLICE(r14_129, byte, 0) & 1<8>) != 0<8> l0000000000408A18
l0000000000408A18:
	Mem135[r14_129:byte] = 0<8>
	esi_151 = 0xBF<32> (alias)
	rdi_3301 = SEQ(SLICE(r14_129 + 1<64>, word56, 8), SLICE(r14_129, byte, 0) + 1<8>) (alias)
l0000000000407F0B:
	word64 rdi_150
	byte dil_138 = SLICE(rdi_3301, byte, 0)
	branch (dil_138 & 2<8>) != 0<8> l00000000004089E0
l00000000004089E0:
	Mem158[rdi_3301:word16] = 0<16>
	rdi_150 = rdi_3301 + 2<64>
	esi_151 = esi_151 - 2<32> (alias)
	branch (dil_138 + 2<8> & 4<8>) == 0<8> l0000000000407F1F
l00000000004089F9:
l0000000000407F15:
	rdi_150 = rdi_3301 (alias)
	branch (dil_138 & 4<8>) != 0<8> l0000000000408A00
l0000000000408A00:
	Mem168[rdi_150:word32] = 0<32>
	esi_151 = esi_151 - 4<32> (alias)
	rdi_150 = rdi_150 + 4<64>
l0000000000407F1F:
	byte sil_184 = SLICE(esi_151, byte, 0)
	word64 rcx_183 = CONVERT(esi_151 >>u 3<32>, word32, uint64)
l0000000000407F2A:
	branch rcx_183 == 0<64> l0000000000407F2D
l0000000000407F2D:
	branch (sil_184 & 4<8>) != 0<8> l0000000000408360
l0000000000408360:
	Mem190[rdi_150:word32] = 0<32>
	rdi_150 = rdi_150 + 4<64>
	branch (sil_184 & 2<8>) == 0<8> l0000000000407F3D
l0000000000408374:
l0000000000407F33:
	branch (sil_184 & 2<8>) != 0<8> l0000000000408340
l0000000000408340:
	rdi_150 = rdi_150 + 2<64>
	Mem204[rdi_150 - 2<64>:word16] = 0<16>
	branch (esi_151 & 1<32>) == 0<32> l0000000000407F46
l0000000000408355:
l0000000000407F3D:
	branch (esi_151 & 1<32>) != 0<32> l0000000000408338
l0000000000408338:
	Mem224[rdi_150:byte] = 0<8>
l0000000000407F46:
	word64 r12_1455
	word32 ecx_331
	Mem239[r14_129 + 0x18<64>:word64] = 0<64>
	Mem245[r14_129 + 0xA0<64>:word32] = esi
	branch bLoc038C_2825 == 0<8> l0000000000408220
l0000000000408220:
	branch Mem245[0x000000000061B0C1<p64>:byte] != 0<8> l0000000000407F62
l000000000040822D:
	branch esi == 3<32> l0000000000408910
l0000000000408910:
	branch Mem245[0x000000000061B129<p64>:byte] == 0<8> l0000000000408237
l000000000040891D:
	branch SLICE(fn0000000000404CD0(0x13<32>), byte, 0) != 0<8> l0000000000407F62
l000000000040893D:
	branch SLICE(fn0000000000404CD0(0x12<32>), byte, 0) != 0<8> l0000000000407F62
l0000000000408956:
	branch SLICE(fn0000000000404CD0(0x14<32>), byte, 0) != 0<8> l0000000000407F62
l000000000040896F:
l0000000000408237:
	byte al_313 = Mem310[0x000000000061B114<p64>:byte]
	branch al_313 == 0<8> l0000000000408818
l0000000000408818:
	branch Mem310[0x000000000061B0C0<p64>:byte] != 0<8> l0000000000408246
l0000000000408246:
	byte sil_324 = CONVERT(esi == 0<32>, bool, int8)
	branch esi == 0<32> l0000000000408255
l000000000040824F:
	branch esi != 6<32> l0000000000408280
l0000000000408255:
	ecx_331 = Mem310[0x000000000061B110<p64>:word32] (alias)
	branch ecx_331 == 5<32> l0000000000408BD0
l0000000000408BD0:
	ecx_331 = 5<32> (alias)
l0000000000408264:
	branch Mem310[0x000000000061B198<p64>:byte] != 0<8> l0000000000407F68
l0000000000408271:
	branch Mem310[0x000000000061B115<p64>:byte] != 0<8> l0000000000407F68
l000000000040827E:
l0000000000408280:
	branch al_313 != 0<8> l0000000000407F62
l0000000000408288:
	branch Mem310[0x000000000061B0C0<p64>:byte] == 0<8> l0000000000408825
l0000000000408825:
	r12_1455 = 0<u64>
l0000000000408295:
	branch sil_324 != 0<8> l0000000000407F62
l000000000040829E:
	r12_1455 = 0<u64>
	branch esi != 5<32> l00000000004081E1
l00000000004082AB:
	branch Mem310[0x000000000061B12C<p64>:word32] == 3<32> l0000000000407F62
l00000000004082B8:
	branch Mem310[0x000000000061B129<p64>:byte] == 0<8> l00000000004081E1
l00000000004082C5:
	branch SLICE(fn0000000000404CD0(0xE<32>), byte, 0) != 0<8> l0000000000407F62
l00000000004082E5:
	branch SLICE(fn0000000000404CD0(0x10<32>), byte, 0) != 0<8> l0000000000407F62
l00000000004082FE:
	branch SLICE(fn0000000000404CD0(0x11<32>), byte, 0) != 0<8> l0000000000407F62
l0000000000408317:
	branch SLICE(fn0000000000404CD0(0x15<32>), byte, 0) != 0<8> l0000000000407F62
l0000000000408330:
l0000000000407F62:
	ecx_331 = Mem446[0x000000000061B110<p64>:word32] (alias)
l0000000000407F68:
	word64 rsi_462 = CONVERT(Mem460[rdi:byte], byte, uint64)
	word32 esi_482 = SLICE(rsi_462, word32, 0)
	word64 r12_463 = rdi
	branch SLICE(rsi_462, byte, 0) == 0x2F<8> l0000000000407F81
l0000000000407F74:
	byte r15b_471 = Mem460[rcx:byte]
	branch r15b_471 != 0<8> l0000000000408670
l0000000000408670:
	word64 rax_510 = fp - 0x3A8<64> - ((strlen(rdi) + 0x20<64>) + strlen(rcx) & 0xFFFFFFFFFFFFFFF0<64>) + 0xF<64> & 0xFFFFFFFFFFFFFFF0<64>
	byte sil_545 = SLICE(esi_482, byte, 0)
	r12_463 = rax_510
	branch r15b_471 == 0x2E<8> l0000000000408B30
l0000000000408B30:
	branch Mem484[rcx + 1<64>:byte] == 0<8> l0000000000408705
l0000000000408B3A:
l00000000004086D2:
	word64 rsi_517 = rcx
l00000000004086D8:
	rax_510 = rax_510 + 1<64>
	Mem523[rax_510 - 1<64>:byte] = r15b_471
	rsi_517 = rsi_517 + 1<64>
	r15b_471 = Mem523[rsi_517:byte] (alias)
	branch r15b_471 != 0<8> l00000000004086D8
l00000000004086ED:
	branch rcx >=u rsi_517 l0000000000408702
l00000000004086F5:
	branch Mem523[rsi_517 - 1<64>:byte] == 0x2F<8> l0000000000408702
l00000000004086FB:
	Mem538[rax_510:byte] = 0x2F<8>
	rax_510 = rax_510 + 1<64>
l0000000000408702:
	sil_545 = Mem542[rdi:byte] (alias)
l0000000000408705:
	branch sil_545 == 0<8> l0000000000408724
l000000000040870A:
	word64 rdx_552 = rdi
l0000000000408710:
	rax_510 = rax_510 + 1<64>
	Mem558[rax_510 - 1<64>:byte] = sil_545
	rdx_552 = rdx_552 + 1<64>
	sil_545 = Mem558[rdx_552:byte] (alias)
	branch sil_545 != 0<8> l0000000000408710
l0000000000408724:
	Mem568[rax_510:byte] = 0<8>
l0000000000407F81:
	word64 r15_604
	word32 edx_673
	word32 esi_668
	branch ecx_331 <u 3<32> l0000000000407FFD
l0000000000407F86:
	branch ecx_331 <=u 4<32> l0000000000407FF0
l0000000000407FF0:
	branch bLoc038C_2825 != 0<8> l00000000004088B0
l00000000004088B0:
	word32 eax_617 = __xstat(1<i32>, r12_463, r14_129 + 0x10<64>)
	r15_604 = r14_129 + 0x10<64>
	edx_673 = eax_617 (alias)
	esi_668 = 1<32> (alias)
	branch ecx_331 == 3<32> l0000000000408015
l00000000004088E0:
	byte al_636
	branch eax_617 < 0<32> l0000000000408B5E
l0000000000408B5E:
	al_636 = CONVERT(Mem630[__errno_location():word32] == 2<32>, bool, int8)
l00000000004088E8:
	al_636 = CONVERT((Mem615[r14_129 + 0x28<64>:word32] & 0xF000<32>) != 0x4000<32>, bool, int8)
l00000000004088F9:
	edx_673 = eax_617
	esi_668 = 1<32> (alias)
	branch al_636 == 0<8> l0000000000408015
l0000000000408906:
l0000000000407F8B:
	branch ecx_331 != 5<32> l0000000000407FFD
l0000000000407FFD:
l0000000000408001:
	r15_604 = r9_120 + (rcx_124 << 6<64>) + 0x10<64>
	esi_668 = 0<32> (alias)
	edx_673 = __lxstat(1<i32>, r12_463, r15_604) (alias)
l0000000000408015:
	branch edx_673 != 0<32> l0000000000407FB1
l0000000000407F92:
	r15_604 = r14_129 + 0x10<64>
	edx_673 = __xstat(1<i32>, r12_463, r14_129 + 0x10<64>) (alias)
	esi_668 = 1<32> (alias)
	branch edx_673 == 0<32> l0000000000408019
l0000000000408019:
	Mem714[r14_129 + 0xB0<64>:byte] = 1<8>
	byte sil_821 = SLICE(esi_668, byte, 0)
	branch esi == 5<32> l0000000000408380
l000000000040802B:
	branch (Mem714[r14_129 + 0x28<64>:word32] & 0xF000<32>) == 0x8000<32> l0000000000408380
l0000000000408380:
	branch Mem714[0x000000000061B129<p64>:byte] == 0<8> l000000000040803F
l000000000040838D:
	word64 rsi_761 = CONVERT(esi_668, word32, uint64)
	word32 esi_773 = SLICE(rsi_761, word32, 0)
	sil_821 = SLICE(rsi_761, byte, 0) (alias)
	branch SLICE(fn0000000000404CD0(0x15<32>), byte, 0) == 0<8> l000000000040803F
l00000000004083B7:
	word64 r13_764 = Mem744[r14_129 + 0x10<64>:word64]
	branch r13_764 == Mem744[0x000000000061A678<p64>:word64] l0000000000408C1F
l0000000000408C1F:
	Mem770[__errno_location():word32] = 0x5F<32>
	sil_821 = SLICE(esi_668, byte, 0) (alias)
l00000000004083C8:
	Mem782[__errno_location():word32] = 0x5F<32>
	Mem783[0x000000000061A678<p64>:word64] = r13_764
	sil_821 = SLICE(esi_773, byte, 0) (alias)
l00000000004083F2:
	Mem785[r14_129 + 0xB8<64>:byte] = 0<8>
l000000000040803F:
	word32 r13d_1222
	word32 eax_1206
	branch Mem786[0x000000000061B150<p64>:word32] == 0<32> l0000000000408056
l0000000000408049:
	branch Mem786[0x000000000061B17D<p64>:byte] == 0<8> l00000000004080EF
l0000000000408056:
	byte r13b_1053
	branch Mem786[r14_129 + 0x10<64>:word64] == Mem786[0x000000000061A670<p64>:word64] l0000000000408C52
l0000000000408C52:
	Mem816[__errno_location():word32] = 0x5F<32>
	Mem819[r14_129 + 0xA8<64>:word64] = 0x61A56A<64>
	r13b_1053 = 0<8> (alias)
l000000000040806D:
	bool v82_2141
	branch sil_821 == 0<8> l0000000000408458
l0000000000408458:
	word32 eax_847 = fn0000000000411840(r14_129 + 0xA8<64>, r12_463)
	v82_2141 = eax_847 != 0<32>
	branch eax_847 >= 0<32> l0000000000408093
l0000000000408080:
	word32 eax_862 = fn0000000000411820(r14_129 + 0xA8<64>, r12_463)
	v82_2141 = eax_862 != 0<32>
	branch eax_862 < 0<32> l000000000040846B
l000000000040846B:
	word32 eax_878 = Mem872[__errno_location():word32]
	branch eax_878 == 0x16<32> l000000000040848C
l0000000000408483:
	branch eax_878 != 0x26<32> l00000000004089C0
l00000000004089C0:
	branch eax_878 != 0x5F<32> l0000000000408497
l00000000004089C9:
l000000000040848C:
	Mem889[0x000000000061A670<p64>:word64] = Mem872[r14_129 + 0x10<64>:word64]
l0000000000408497:
	Mem894[r14_129 + 0xA8<64>:word64] = 0x61A56A<64>
	branch eax_878 == 0x5F<32> l00000000004089D0
l00000000004084AB:
	branch eax_878 == 0x3D<32> l00000000004089D0
l00000000004089D0:
	r13b_1053 = 0<8> (alias)
l00000000004084B4:
	Mem903[r14_129 + 0xB4<64>:word32] = 0<32>
l0000000000408093:
	word64 rdi_906 = Mem808[r14_129 + 0xA8<64>:word64]
	word64 rsi_908 = 0x4137B1<u64>
	word64 rcx_910 = 0xA<u64>
l00000000004080A4:
	branch rcx_910 == 0<64> l00000000004080A6
l00000000004080A4_1:
	v82_2141 = Mem808[rsi_3303:byte] != Mem808[rdi_3304:byte]
	rsi_908 = rsi_3303 + 1<i64>
	rdi_906 = rdi_3304 + 1<i64>
	rcx_910 = rcx_910 - 1<64>
	rsi_3303 = rsi_908
	rdi_3304 = rdi_906
	branch Mem808[rsi_3303:byte] != Mem808[rdi_3304:byte] l00000000004080A4
l00000000004080A6:
	r13b_1053 = CONVERT(v82_2141, bool, int8)
l00000000004080AA:
	word32 ecx_1026
	word32 edx_1111 = edx_673
	branch Mem926[0x000000000061B150<p64>:word32] == 0<32> l0000000000408830
l0000000000408830:
	branch Mem926[r14_129 + 0x10<64>:word64] == Mem926[0x000000000061A668<p64>:word64] l0000000000408B40
l0000000000408B40:
	Mem965[__errno_location():word32] = 0x5F<32>
	ecx_1026 = 0<32> (alias)
	edx_1111 = edx_673 (alias)
l0000000000408841:
	word64 rax_969 = __errno_location()
	Mem985[rax_969:word32] = 0<32>
	word32 eax_1001 = fn0000000000409CC0(r15_604, r12_463)
	ecx_1026 = 1<32> (alias)
	edx_1111 = edx_673 (alias)
	branch eax_1001 > 0<32> l00000000004080BA
l000000000040887E:
	word32 edx_1011 = Mem995[rax_969:word32]
	branch edx_1011 == 0x16<32> l0000000000408C3B
l000000000040888A:
	branch edx_1011 == 0x26<32> l0000000000408C3B
l0000000000408893:
	branch edx_1011 == 0x5F<32> l0000000000408C3B
l0000000000408C3B:
	Mem1029[0x000000000061A668<p64>:word64] = Mem995[r14_129 + 0x10<64>:word64]
	ecx_1026 = 0<32> (alias)
	edx_1111 = eax_1001 >>u 0x1F<32> (alias)
l000000000040889C:
	edx_1111 = eax_1001 >>u 0x1F<32> (alias)
l00000000004080B8:
	ecx_1026 = 0<32> (alias)
l00000000004080BA:
	word32 eax_1097 = 0<32>
	byte sil_1057 = SLICE(ecx_1026, byte, 0) | r13b_1053
	branch sil_1057 == 0<8> l00000000004080D9
l00000000004080C3:
	byte r13b_1064 = r13b_1053 & (SLICE(ecx_1026, byte, 0) ^ 1<8>)
	branch r13b_1064 == 0<8> l00000000004080D0
l00000000004080CC_2:
	sil_1057 = r13b_1064 (alias)
l00000000004080D0:
	eax_1097 = CONVERT(SLICE(r13b_1064, bool, 0), bool, int32) + 2<32> (alias)
l00000000004080D9:
	Mem1107[0x000000000061B17C<p64>:byte] = Mem1101[0x000000000061B17C<p64>:byte] | sil_1057
	Mem1125[r14_129 + 0xB4<64>:word32] = eax_1097
	branch edx_1111 != 0<32> l00000000004084BF
l00000000004084BF:
	fn000000000040EAB0(r12_463, fs)
	error(0<i32>, Mem1190[__errno_location():word32], 0x415E54<u64>, 0<32>)
	eax_1206 = Mem1190[r14_129 + 0x28<64>:word32] & 0xF000<32> (alias)
	branch eax_1206 != 0xA000<32> l0000000000408103
l00000000004084F6:
l00000000004080EF:
	eax_1206 = Mem1210[r14_129 + 0x28<64>:word32] & 0xF000<32> (alias)
	branch eax_1206 == 0xA000<32> l0000000000408500
l0000000000408500:
	r13d_1222 = Mem1219[0x000000000061B150<p64>:word32] (alias)
	branch r13d_1222 == 0<32> l0000000000408519
l000000000040850C:
	branch Mem1219[0x000000000061B115<p64>:byte] == 0<8> l000000000040862A
l0000000000408519:
	word64 rax_1236 = fn0000000000409D20(Mem1219[r14_129 + 0x40<64>:word64], r12_463)
	Mem1247[r14_129 + 8<64>:word64] = rax_1236
	word64 r13_1246 = rax_1236
	branch rax_1236 == 0<64> l0000000000408BDA
l0000000000408BDA:
	fn0000000000405810(r12_463, dcgettext(0<u64>, 0x413794<u64>, 5<i32>), CONVERT(bLoc038C_2825, byte, word32), fs)
	r13_1246 = Mem1247[r14_129 + 8<64>:word64]
	branch r13_1246 != 0<64> l0000000000408535
l0000000000408C0A:
l0000000000408535:
	branch Mem1247[r13_1246:byte] == 0x2F<8> l0000000000408C0F
l0000000000408C0F:
	r13_1246 = fn0000000000410E30(r13_1246)
l0000000000408540:
	word64 rax_1309 = fn000000000040A2B0(r12_463)
	branch rax_1309 == 0<64> l0000000000408B98
l0000000000408B98:
	r13_1246 = fn0000000000410E30(r13_1246)
l0000000000408557:
	word64 rax_1333 = fn0000000000410C40(rax_1309 + 2<64> + strlen(r13_1246))
	strcpy(stpncpy(rax_1333, r12_463, rax_1309 + CONVERT(CONVERT(Mem1247[(r12_463 - 1<64>) + rax_1309:byte] != 0x2F<8>, bool, int8), byte, uint64)), r13_1246)
	r13_1246 = rax_1333
l00000000004085A1:
	branch r13_1246 == 0<64> l0000000000408607
l00000000004085A6:
	branch Mem1363[0x000000000061B12C<p64>:word32] <=u 1<32> l0000000000408B80
l0000000000408B80:
	branch Mem1363[0x000000000061B115<p64>:byte] == 0<8> l0000000000408607
l0000000000408B8D:
l00000000004085B3:
	branch __xstat(1<i32>, r13_1246, fp - 0x388<64>) != 0<32> l0000000000408607
l00000000004085CB:
	Mem1384[r14_129 + 0xB1<64>:byte] = 1<8>
	branch bLoc038C_2825 == 0<8> l0000000000408600
l00000000004085E2:
	branch Mem1384[0x000000000061B150<p64>:word32] == 0<32> l0000000000408600
l00000000004085EC:
	branch (dwLoc0370 & 0xF000<32>) == 0x4000<32> l0000000000408607
l00000000004085FC:
l0000000000408600:
	Mem1405[r14_129 + 0xA4<64>:word32] = dwLoc0370
l0000000000408607:
	free(r13_1246)
	eax_1206 = Mem1410[r14_129 + 0x28<64>:word32] & 0xF000<32> (alias)
	branch eax_1206 != 0xA000<32> l0000000000408103
l0000000000408623:
	r13d_1222 = Mem1410[0x000000000061B150<p64>:word32] (alias)
l000000000040862A:
	Mem1422[r14_129 + 0xA0<64>:word32] = 6<32>
l0000000000408103:
	branch eax_1206 == 0x4000<32> l0000000000408978
l0000000000408978:
	branch bLoc038C_2825 == 0<8> l00000000004089A8
l0000000000408981:
	branch Mem1429[0x000000000061B10D<p64>:byte] != 0<8> l00000000004089A8
l00000000004089A8:
	Mem1436[r14_129 + 0xA0<64>:word32] = 3<32>
	r13d_1222 = Mem1436[0x000000000061B150<p64>:word32] (alias)
l000000000040898A:
	Mem1439[r14_129 + 0xA0<64>:word32] = 9<32>
	r13d_1222 = Mem1439[0x000000000061B150<p64>:word32] (alias)
l000000000040810E:
	r13d_1222 = Mem1429[0x000000000061B150<p64>:word32] (alias)
	Mem1444[r14_129 + 0xA0<64>:word32] = 5<32>
l0000000000408120:
	r12_1455 = Mem1454[r14_129 + 0x50<64>:word64]
	branch r13d_1222 == 0<32> l0000000000408132
l0000000000408129:
	branch Mem1454[0x000000000061B144<p64>:byte] == 0<8> l00000000004081A8
l0000000000408132:
	word32 r15d_1650 = SLICE(fp, word32, 0) - 0x2D8<32>
	word32 eax_1509 = fn000000000040D420(0<32>, fn000000000040BD70(0x200<u64>, Mem1454[0x000000000061B140<p64>:word32], fp - 0x2D8<64>, r12_1455, Mem1454[0x000000000061B138<p64>:word64], fs), fs)
	branch eax_1509 <= Mem1454[0x000000000061B174<p64>:word32] l000000000040816E
l0000000000408168:
	Mem1512[0x000000000061B174<p64>:word32] = eax_1509
l000000000040816E:
	r13d_1222 = Mem1513[0x000000000061B150<p64>:word32] (alias)
	branch r13d_1222 != 0<32> l00000000004081A8
l000000000040817A:
	branch Mem1513[0x000000000061A569<p64>:byte] != 0<8> l0000000000408B10
l0000000000408B10:
	word32 eax_1535 = fn00000000004061B0(CONVERT(Mem1513[r14_129 + 0x2C<64>:word32], word32, uint64), fs)
	branch eax_1535 <= Mem1513[0x000000000061B168<p64>:word32] l0000000000408187
l0000000000408B25:
	Mem1538[0x000000000061B168<p64>:word32] = eax_1535
l0000000000408187:
	branch Mem1539[0x000000000061A568<p64>:byte] != 0<8> l0000000000408A90
l0000000000408A90:
	word32 edx_1581
	word32 r13d_1547 = Mem1539[r14_129 + 0x30<64>:word32]
	branch Mem1539[0x000000000061B145<p64>:byte] == 0<8> l0000000000408BA8
l0000000000408BA8:
	word64 rax_1550 = fn000000000040CB40(r13d_1547)
	branch rax_1550 == 0<64> l0000000000408AA1
l0000000000408BBC:
	word32 eax_1577 = fn000000000040D420(0<32>, rax_1550, fs)
	edx_1581 = 0<32> (alias)
	branch eax_1577 < 0<32> l0000000000408BCA
l0000000000408BC7_1:
	edx_1581 = eax_1577
l0000000000408BCA:
l0000000000408AA1:
	__sprintf_chk(fp - 0x2D8<64>, 1<i32>, 0x15<u64>, 0x41375A<u64>, 0<32>)
	word64 rdx_1601 = fp - 0x2D8<64>
l0000000000408AC0:
	word64 rcx_1605 = CONVERT(Mem1539[rdx_1601:word32], word32, uint64)
	word64 rax_1618 = CONVERT(SLICE(rcx_1605, word32, 0) + 0xFEFEFEFF<32> & ~SLICE(rcx_1605, word32, 0) & 0x80808080<32>, word32, uint64)
	rdx_1601 = rdx_1601 + 4<64>
	word32 eax_1619 = SLICE(rax_1618, word32, 0)
	byte al_1638 = SLICE(rax_1618, byte, 0)
	branch eax_1619 == 0<32> l0000000000408AC0
l0000000000408AD7:
	branch (eax_1619 & 0x8080<32>) != 0<32> l0000000000408AE4
l0000000000408AE1_1:
	al_1638 = SLICE(eax_1619 >>u 0x10<32>, byte, 0) (alias)
l0000000000408AE4:
	branch (eax_1619 & 0x8080<32>) != 0<32> l0000000000408AEC
l0000000000408AE8_1:
	rdx_1601 = rdx_1601 + 2<64>
l0000000000408AEC:
	edx_1581 = SLICE(SLICE(SEQ(rdx_1601, al_1638) + SEQ(3<64>, al_1638), word64, 8), word32, 0) - r15d_1650 (alias)
l0000000000408AF5:
	branch Mem1539[0x000000000061B164<p64>:word32] >= edx_1581 l0000000000408194
l0000000000408B01:
	Mem1664[0x000000000061B164<p64>:word32] = edx_1581
l0000000000408194:
	branch Mem1665[0x000000000061B146<p64>:byte] != 0<8> l0000000000408A70
l0000000000408A70:
	word32 eax_1692 = fn00000000004061B0(CONVERT(Mem1665[r14_129 + 0x2C<64>:word32], word32, uint64), fs)
	branch eax_1692 <= Mem1665[0x000000000061B160<p64>:word32] l00000000004081A1
l0000000000408A85:
	Mem1695[0x000000000061B160<p64>:word32] = eax_1692
l00000000004081A1:
	r13d_1222 = Mem1696[0x000000000061B150<p64>:word32] (alias)
l00000000004081A8:
	branch Mem1699[0x000000000061B17D<p64>:byte] == 0<8> l00000000004081C9
l00000000004081B1:
	word32 eax_1706 = SLICE(strlen(Mem1699[r14_129 + 0xA8<64>:word64]), word32, 0)
	branch eax_1706 > Mem1699[0x000000000061B16C<p64>:word32] l0000000000408730
l0000000000408730:
	Mem1713[0x000000000061B16C<p64>:word32] = eax_1706
	branch r13d_1222 != 0<32> l00000000004081D2
l00000000004081C9:
	branch r13d_1222 == 0<32> l000000000040873F
l000000000040873F:
	word32 eax_1749 = SLICE(strlen(fn000000000040CD70(fp - 0x2F8<64>, Mem1721[r14_129 + 0x20<64>:word64])), word32, 0)
	branch eax_1749 <= Mem1721[0x000000000061B170<p64>:word32] l0000000000408765
l000000000040875F:
	Mem1752[0x000000000061B170<p64>:word32] = eax_1749
l0000000000408765:
	word32 eax_1802
	branch (Mem1754[r14_129 + 0x28<64>:word32] & 0xB000<32>) != 0x2000<32> l0000000000408A30
l0000000000408A30:
	eax_1802 = fn000000000040D420(0<32>, fn000000000040BD70(1<u64>, Mem1754[0x000000000061B134<p64>:word32], fp - 0x2D8<64>, Mem1754[r14_129 + 0x40<64>:word64], Mem1754[0x000000000061A560<p64>:word64], fs), fs) (alias)
	branch eax_1802 <= Mem1754[0x000000000061B154<p64>:word32] l00000000004081D2
l0000000000408A68:
l0000000000408779:
	word64 rax_1805 = Mem1754[r14_129 + 0x38<64>:word64]
	word32 eax_1835 = SLICE(strlen(fn000000000040CD70(fp - 0x2D8<64>, CONVERT(SLICE(rax_1805 >>u 0x20<64>, word32, 0) & 0xFFFFF000<32> | SLICE(rax_1805 >>u 8<64>, word32, 0) & 0xFFF<32>, word32, uint64))), word32, 0)
	branch eax_1835 <= Mem1754[0x000000000061B15C<p64>:word32] l00000000004087BA
l00000000004087B4:
	Mem1838[0x000000000061B15C<p64>:word32] = eax_1835
l00000000004087BA:
	word64 rax_1841 = Mem1840[r14_129 + 0x38<64>:word64]
	word32 eax_1872 = SLICE(strlen(fn000000000040CD70(fp - 0x2D8<64>, CONVERT(SEQ(SLICE(rax_1841 >>u 0xC<64>, word24, 8), 0<8>) | CONVERT(SLICE(rax_1841, byte, 0), byte, word32), word32, uint64))), word32, 0)
	word64 rdx_1871 = CONVERT(Mem1840[0x000000000061B158<p64>:word32], word32, uint64)
	branch eax_1872 <= SLICE(rdx_1871, word32, 0) l00000000004087F0
l00000000004087E8:
	Mem1876[0x000000000061B158<p64>:word32] = eax_1872
	rdx_1871 = CONVERT(eax_1872, word32, uint64)
l00000000004087F0:
	eax_1802 = SLICE(rdx_1871, word32, 0) + 2<32> + Mem1879[0x000000000061B15C<p64>:word32] (alias)
	branch eax_1802 <= Mem1879[0x000000000061B154<p64>:word32] l00000000004081D2
l0000000000408806:
	Mem1889[0x000000000061B154<p64>:word32] = eax_1802
l00000000004081D2:
	branch Mem1890[0x000000000061B114<p64>:byte] != 0<8> l0000000000408640
l0000000000408640:
	word32 eax_1917 = SLICE(strlen(fn000000000040CD70(fp - 0x2D8<64>, Mem1890[r14_129 + 0x18<64>:word64])), word32, 0)
	branch eax_1917 <= Mem1890[0x000000000061B178<p64>:word32] l00000000004081E1
l0000000000408664:
	Mem1920[0x000000000061B178<p64>:word32] = eax_1917
l0000000000407FB1:
	byte r15b_1944 = SLICE(edx, byte, 0)
	fn0000000000405810(r12_463, dcgettext(0<u64>, 0x413783<u64>, 5<i32>), CONVERT(r15b_1944, byte, word32), fs)
	r12_1455 = 0<u64>
	branch r15b_1944 != 0<8> l00000000004081F4
l0000000000407FE4:
l00000000004081E1:
	word64 rax_2026 = fn0000000000410E30(rdi)
	Mem2037[0x000000000061B1B0<p64>:word64] = Mem2034[0x000000000061B1B0<p64>:word64] + 1<64>
	Mem2042[r14_129:word64] = rax_2026
l00000000004081F4:
	branch (rax_34 ^ Mem2046[fs:0x28<32>:word64]) != 0<64> l0000000000408C76
l0000000000408C76:
	__stack_chk_fail()
l000000000040820A:
	return r12_1455
fn0000000000407EA0_exit:
l0000000000407F2A_1:
	Mem2094[rdi_150:word64] = 0<u64>
	rdi_150 = rdi_150 + 8<i64>
	rcx_183 = rcx_183 - 1<64>


void fn0000000000409750(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  edi:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000000000409750_exit:
fn0000000000409750_entry:
l0000000000409750:
	branch edi == 0<32> l0000000000409794
l0000000000409794:
	__printf_chk(1<i32>, dcgettext(0<u64>, 0x413D88<u64>, 5<i32>), 0<32>)
	fputs_unlocked(dcgettext(0<u64>, 0x413DB0<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x413E40<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x413E90<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x413FA0<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x4141E8<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414398<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414540<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414580<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414670<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414780<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414928<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414AC0<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414C28<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414DA0<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x414F58<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x415020<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x4151F0<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x4153F0<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x415480<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x4155E8<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x415748<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x415778<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x4157B0<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x415850<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fputs_unlocked(dcgettext(0<u64>, 0x415970<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	fn000000000040A390(Mem11[0x000000000061B200<p64>:word64])
	__printf_chk(1<i32>, dcgettext(0<u64>, 0x4137BB<u64>, 5<i32>), 0<32>)
	__printf_chk(1<i32>, dcgettext(0<u64>, 0x4137E8<u64>, 5<i32>), 0<32>)
	fputs_unlocked(dcgettext(0<u64>, 0x415A30<u64>, 5<i32>), Mem11[0x000000000061A610<p64>:word64])
	word64 rax_368 = setlocale(5<i32>, 0<u64>)
	branch rax_368 == 0<64> l0000000000409BC8
l0000000000409BB2:
	branch strncmp(rax_368, 0x41380A<u64>, 3<i32>) != 0<32> l0000000000409BFF
l0000000000409BFF:
	fn000000000040A390(Mem11[0x000000000061B200<p64>:word64])
	__printf_chk(1<i32>, dcgettext(0<u64>, 0x415A70<u64>, 5<i32>), 0<32>)
l0000000000409BC8:
	fn000000000040A390(Mem11[0x000000000061B200<p64>:word64])
	__printf_chk(1<i32>, dcgettext(0<u64>, 0x415AB8<u64>, 5<i32>), 0<32>)
l0000000000409768:
	__fprintf_chk(Mem11[0x000000000061A650<p64>:word64], 1<i32>, dcgettext(0<u64>, 0x413D60<u64>, 5<i32>), 0<32>)
l000000000040978D:
	exit(edi)


word32 fn0000000000409CC0(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000407EA0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax Top
// Preserved: rsp
fn0000000000409CC0_entry:
l0000000000409CC0:
	word64 rax_10 = CONVERT(Mem0[rsi + 0x18<64>:word32] & 0xF000<32>, word32, uint64)
	word32 rax_32_32_63 = SLICE(rax_10, word32, 32)
	branch SLICE(rax_10, word32, 0) == 0xA000<32> l0000000000409D10
l0000000000409D10:
	return 0<32>
l0000000000409CCF:
	word32 eax_21 = acl_extended_file(rdi)
	word64 rax_48 = SEQ(rax_32_32_63, eax_21)
	branch eax_21 < 0<32> l0000000000409CE8
l0000000000409CE8:
	word32 eax_28 = Mem0[__errno_location():word32]
	branch eax_28 == 0x5F<32> l0000000000409D18
l0000000000409CF4:
	branch eax_28 == 0x26<32> l0000000000409D18
l0000000000409CF9:
	branch eax_28 == 0x16<32> l0000000000409D18
l0000000000409D18:
	return 0<32>
l0000000000409CFE:
	rax_48 = CONVERT(-CONVERT(eax_28 != 0x10<32>, bool, word32), word32, uint64)
l0000000000409CDC:
	return SLICE(rax_48, word32, 0)
fn0000000000409CC0_exit:


word64 fn0000000000409D20(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000407EA0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000409D20_entry:
l0000000000409D20:
	word64 rbx_125 = 0x401<u64>
	branch rsi >u 0x400<64> l0000000000409D59
l0000000000409D55_1:
	rbx_125 = rsi + 1<64>
l0000000000409D59:
l0000000000409D60:
	word64 rax_128 = malloc(rbx_125)
	word64 rbp_131 = rax_128
	branch rax_128 == 0<64> l0000000000409DAB
l0000000000409D70:
	word64 rax_47 = readlink(rdi, rax_128, rbx_125)
	branch rax_47 < 0<64> l0000000000409DD8
l0000000000409DD8:
	word64 rax_52 = __errno_location()
	word32 edx_56 = Mem27[rax_52:word32]
	branch edx_56 == 0x22<32> l0000000000409D86
l0000000000409DE4:
	free(rbp_131)
	Mem68[rax_52:word32] = edx_56
l0000000000409D86:
	branch rbx_125 >u rax_47 l0000000000409E08
l0000000000409E08:
	Mem79[rbp_131:byte] = 0<8>
	return rbp_131
l0000000000409D8B:
	free(rbp_131)
	branch rbx_125 >u 0x3FFFFFFFFFFFFFFF<64> l0000000000409DC0
l0000000000409DC0:
	branch rbx_125 >u 0x7FFFFFFFFFFFFFFE<64> l0000000000409E20
l0000000000409E20:
	Mem106[__errno_location():word32] = 0xC<32>
	return 0<u64>
l0000000000409DC5:
	rbx_125 = 0x7FFFFFFFFFFFFFFF<64>
l0000000000409D98:
	rbx_125 = rbx_125 * 2<64>
	rax_128 = malloc(rbx_125)
	rbp_131 = rax_128
	branch rax_128 != 0<64> l0000000000409D70
l0000000000409DAB:
l0000000000409DAD:
	return 0<u64>
fn0000000000409D20_exit:


word64 fn0000000000409E50(word64 rcx, word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn000000000040A120
//      fn000000000040C810
// MayUse:  rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn0000000000409E50_entry:
l0000000000409E50:
	word64 rax_133
	word64 qwLoc50_164
	word64 rax_32 = strlen(rdi)
	word64 rbp_113 = rdx
	word64 r14_118 = Mem31[rsi:word64]
	branch r14_118 == 0<64> l0000000000409F72
l0000000000409F72:
	qwLoc50_164 = 0xFFFFFFFFFFFFFFFF<64>
l0000000000409E81:
	byte bLoc41_165 = 0<8>
	qwLoc50_164 = 0xFFFFFFFFFFFFFFFF<64>
	word64 rbx_108 = 0<u64>
l0000000000409EE8:
	branch strncmp(r14_118, rdi, SLICE(rax_32, int32, 0)) != 0<32> l0000000000409ED8
l0000000000409EFB:
	branch strlen(r14_118) == rax_32 l0000000000409F60
l0000000000409F60:
	return rbx_108
l0000000000409F08:
	branch qwLoc50_164 != 0xFFFFFFFFFFFFFFFF<64> l0000000000409EA0
l0000000000409EA0:
	branch rdx == 0<64> l0000000000409F50
l0000000000409F50:
	bLoc41_165 = 1<8>
l0000000000409EAE:
	word64 rcx_278 = CONVERT(bLoc41_165, byte, uint64)
	word32 rcx_32_32_239 = SLICE(rcx_278, word32, 32)
	branch memcmp(qwLoc50_164 *s rcx + rdx, rbp_113, rcx) == 0<32> l0000000000409ED4
l0000000000409ED1_1:
	rcx_278 = SEQ(rcx_32_32_239, 0<24>, 1<8>) (alias)
l0000000000409ED4:
	bLoc41_165 = SLICE(rcx_278, byte, 0)
l0000000000409ED8:
	rbx_108 = rbx_108 + 1<64>
	rbp_113 = rbp_113 + rcx
	r14_118 = Mem117[rsi + rbx_108 * 8<64>:word64]
	branch r14_118 == 0<64> l0000000000409F28
l0000000000409F10:
	rbx_108 = rbx_108 + 1<64>
	qwLoc50_164 = rbx_108
	rbp_113 = rbp_113 + rcx
	r14_118 = Mem122[rsi + rbx_108 * 8<64>:word64]
	branch r14_118 != 0<64> l0000000000409EE8
l0000000000409F25:
l0000000000409F28:
	rax_133 = 0xFFFFFFFFFFFFFFFE<64>
	branch bLoc41_165 != 0<8> l0000000000409F3B
l0000000000409F36:
	rax_133 = qwLoc50_164
l0000000000409F3B:
	return rax_133
fn0000000000409E50_exit:


void fn0000000000409F80(word64 rdx, word64 rsi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn000000000040A120
// MayUse:  fs:[0..15] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 rbp rbx rsp
fn0000000000409F80_entry:
l0000000000409F80:
	word64 r12_30
	branch rdx == 0xFFFFFFFFFFFFFFFF<64> l0000000000409FE0
l0000000000409FE0:
	r12_30 = dcgettext(0<u64>, 0x415DFD<u64>, 5<i32>)
l0000000000409F95:
	r12_30 = dcgettext(0<u64>, 0x415E18<u64>, 5<i32>)
l0000000000409FA4:
	fn000000000040EBF0(rdi, 1<32>, fs)
	fn000000000040E970(rsi, 6<32>, 0<32>, fs)
	error(0<i32>, 0<i32>, r12_30, 0<32>)
	return
fn0000000000409F80_exit:


word64 fn000000000040A000(word64 rdx, word64 rsi, word64 rdi, selector fs, ptr64 & rdxOut, ptr64 & rsiOut, ptr64 & rdiOut, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040A120
// MayUse:  fs:[0..15] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r8 r9 rcx rdi rdx rsi
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040A000_entry:
l000000000040A000:
	word64 rbx_37 = Mem35[0x000000000061A650<p64>:word64]
	fputs_unlocked(dcgettext(0<u64>, 0x415E35<u64>, 5<i32>), rbx_37)
	word64 r14_15 = 0<u64>
	word64 rdx_124 = 5<u64>
	word64 rbp_106 = rsi
	word64 rsi_128 = rbx_37
	word64 rbx_105 = 0<u64>
	word64 r12_100 = Mem35[rdi:word64]
	branch r12_100 != 0<64> l000000000040A086
l000000000040A086:
	branch rbx_105 == 0<64> l000000000040A050
l000000000040A08B:
	branch memcmp(r14_15, rbp_106, rdx) != 0<32> l000000000040A050
l000000000040A050:
	word64 r8_74
	word64 r9_75
	fn000000000040EC10(r12_100, fs, out r8_74, out r9_75)
	__fprintf_chk(Mem35[0x000000000061A650<p64>:word64], 1<i32>, 0x415E4A<u64>, 0<32>)
	rbx_105 = rbx_105 + 1<64>
	r14_15 = rbp_106
	rdx_124 = 0x415E4A<u64>
	rsi_128 = 1<u64>
	rbp_106 = rbp_106 + rdx
	r12_100 = Mem35[rdi + rbx_105 * 8<64>:word64]
	branch r12_100 == 0<64> l000000000040A0D0
l000000000040A09D:
	word64 r8_110
	word64 r9_111
	fn000000000040EC10(r12_100, fs, out r8_110, out r9_111)
	__fprintf_chk(Mem35[0x000000000061A650<p64>:word64], 1<i32>, 0x415E52<u64>, 0<32>)
	rbx_105 = rbx_105 + 1<64>
	rbp_106 = rbp_106 + rdx
	rdx_124 = 0x415E52<u64>
	rsi_128 = 1<u64>
	r12_100 = Mem35[rdi + rbx_105 * 8<64>:word64]
	branch r12_100 != 0<64> l000000000040A086
l000000000040A047:
l000000000040A0D0:
	word64 rdi_135 = Mem35[0x000000000061A650<p64>:word64]
	word64 rax_136 = Mem35[rdi_135 + 0x28<64>:word64]
	branch rax_136 >=u Mem35[rdi_135 + 0x30<64>:word64] l000000000040A0FB
l000000000040A0FB:
	__overflow(rdi_135, 10<i32>)
	rdxOut = rdx_124
	rsiOut = 0xA<u64>
	rdiOut = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	return <invalid>
l000000000040A0E1:
	Mem160[rdi_135 + 0x28<64>:word64] = rax_136 + 1<64>
	Mem161[rax_136:byte] = 0xA<8>
	rdxOut = rax_136 + 1<64>
	rsiOut = rsi_128
	rdiOut = <invalid>
	r8Out = <invalid>
	r9Out = <invalid>
	return <invalid>
fn000000000040A000_exit:


word64 fn000000000040A120(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8, word64 r9, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  fs:[0..15] r8:[0..63] r9:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040A120_entry:
l000000000040A120:
	word64 rax_132 = fn0000000000409E50(r8, rcx, rdx, rsi)
	branch rax_132 < 0<64> l000000000040A165
l000000000040A165:
	fn0000000000409F80(rax_132, rsi, rdi, fs)
	word64 r8_74
	word64 r9_75
	word64 rdi_78
	word64 rdx_79
	word64 rsi_80
	word64 r10_92
	word64 r11_93
	call r9 (retsize: 8;)
		uses: r10:r10_92,r11:r11_93,r8:r8_74,r9:r9_75,rcx:fn000000000040A000(r8, rcx, rdx, fs, out rdx_79, out rsi_80, out rdi_78, out r8_74, out r9_75),rdi:rdi_78,rdx:rdx_79,rsi:rsi_80
		defs: r10:r10_92,r11:r11_93
	rax_132 = 0xFFFFFFFFFFFFFFFF<64>
l000000000040A156:
	return rax_132
fn000000000040A120_exit:


word64 fn000000000040A2B0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000407EA0
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx rsi Top
// Preserved: rbp rbx rsp
fn000000000040A2B0_entry:
l000000000040A2B0:
	word64 rdx_33
	byte bpl_17 = CONVERT(Mem11[rdi:byte] == 0x2F<8>, bool, int8)
	word64 rax_18 = fn000000000040A390(rdi)
	word64 rcx_27 = rax_18 - rdi
	word64 rbp_29 = CONVERT(bpl_17, byte, uint64)
	branch rcx_27 <=u rbp_29 l000000000040A2FD
l000000000040A2D2:
	rdx_33 = rcx_27 - 1<64>
	branch Mem11[rax_18 - 1<64>:byte] == 0x2F<8> l000000000040A2EE
l000000000040A2EE:
	branch rbp_29 <u rdx_33 l000000000040A2E0
l000000000040A2E0:
	word64 rax_42 = rdx_33 - 1<64>
	branch Mem11[rdi - 1<64> + rdx_33:byte] != 0x2F<8> l000000000040A2F3
l000000000040A2EB:
	rdx_33 = rax_42
l000000000040A2DC:
l000000000040A2FD:
	rdx_33 = rcx_27
l000000000040A2F3:
	return rdx_33
fn000000000040A2B0_exit:


word64 fn000000000040A390(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405090
//      fn0000000000409750
//      fn000000000040A2B0
//      fn000000000040A630
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdx rsi Top
// Preserved: rsp
fn000000000040A390_entry:
l000000000040A390:
	word64 rdx_7 = CONVERT(Mem0[rdi:byte], byte, uint64)
	word32 edx_20 = SLICE(rdx_7, word32, 0)
	word64 rax_12 = rdi
	branch SLICE(rdx_7, byte, 0) != 0x2F<8> l000000000040A3AC
l000000000040A39B:
l000000000040A3A0:
	rax_12 = rax_12 + 1<64>
	word64 rdx_16 = CONVERT(Mem0[rax_12:byte], byte, uint64)
	edx_20 = SLICE(rdx_16, word32, 0) (alias)
	branch SLICE(rdx_16, byte, 0) == 0x2F<8> l000000000040A3A0
l000000000040A3AC:
	word64 rdx_28 = rax_12
	branch SLICE(edx_20, byte, 0) == 0<8> l000000000040A3F7
l000000000040A3F7:
	return rax_12
l000000000040A3B7:
	word64 rsi_110 = 0<64>
l000000000040A3C0:
	rdx_28 = rdx_28 + 1<64>
	byte cl_38 = Mem0[rdx_28:byte]
	branch cl_38 == 0<8> l000000000040A3E5
l000000000040A3CB:
	byte sil_47 = SLICE(rsi_110, byte, 0)
	branch cl_38 == 0x2F<8> l000000000040A3F0
l000000000040A3F0:
	rsi_110 = 1<64> (alias)
l000000000040A3D0:
	branch sil_47 == 0<8> l000000000040A3C0
l000000000040A3D5:
	rdx_28 = rdx_28 + 1<64>
	rax_12 = rdx_28
	cl_38 = Mem0[rdx_28:byte] (alias)
	rsi_110 = 0<64> (alias)
	branch cl_38 != 0<8> l000000000040A3CB
l000000000040A3E5:
	return rax_12
fn000000000040A390_exit:


word64 fn000000000040A400(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040A630
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx Top
// Preserved: rbx rsp
fn000000000040A400_entry:
l000000000040A400:
	word64 rax_13 = strlen(rdi)
	branch rax_13 <=u 1<64> l000000000040A41A
l000000000040A40F:
	word64 rdx_16 = rax_13 - 1<64>
	branch Mem6[rdi - 1<64> + rax_13:byte] == 0x2F<8> l000000000040A420
l000000000040A420:
	rax_13 = rdx_16
	branch rdx_16 != 1<64> l000000000040A40F
l000000000040A429:
	return rdx_16
l000000000040A41A:
	return rax_13
fn000000000040A400_exit:


void fn000000000040A600(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx Top
// Preserved: rsp
fn000000000040A600_entry:
l000000000040A600:
	word32 edi_8 = Mem0[rdi + 0x18<64>:word32]
l000000000040A430:
	byte dl_50
	branch (edi_8 & 0xF000<32>) == 0x8000<32> l000000000040A5B0
l000000000040A5B0:
	dl_50 = 0x2D<8> (alias)
l000000000040A442:
	branch (edi_8 & 0xF000<32>) == 0x4000<32> l000000000040A5C0
l000000000040A5C0:
	dl_50 = 0x64<8> (alias)
l000000000040A44D:
	branch (edi_8 & 0xF000<32>) == 0x6000<32> l000000000040A5D0
l000000000040A5D0:
	dl_50 = 0x62<8> (alias)
l000000000040A458:
	branch (edi_8 & 0xF000<32>) == 0x2000<32> l000000000040A5A0
l000000000040A5A0:
	dl_50 = 0x63<8> (alias)
l000000000040A463:
	branch (edi_8 & 0xF000<32>) == 0xA000<32> l000000000040A5E0
l000000000040A5E0:
	dl_50 = 0x6C<8> (alias)
l000000000040A46E:
	branch (edi_8 & 0xF000<32>) == 0x1000<32> l000000000040A5F0
l000000000040A5F0:
	dl_50 = 0x70<8> (alias)
l000000000040A479:
	dl_50 = 0x73<8> (alias)
	branch (edi_8 & 0xF000<32>) == 0xC000<32> l000000000040A48B
l000000000040A488_1:
	dl_50 = 0x3F<8> (alias)
l000000000040A48B:
	byte al_124
	Mem61[rsi:byte] = dl_50
	Mem77[rsi + 1<64>:byte] = (0<8> - CONVERT((edi_8 & 0x100<32>) <u 1<32>, bool, byte) & 0xBB<8>) + 0x72<8>
	Mem95[rsi + 2<64>:byte] = (0<8> - CONVERT((edi_8 & 0x80<32>) <u 1<32>, bool, byte) & 0xB6<8>) + 0x77<8>
	word32 eax_109 = 0<32> - CONVERT((edi_8 & 0x40<32>) <u 1<32>, bool, word32)
	branch (edi_8 & 0x800<32>) == 0<32> l000000000040A590
l000000000040A590:
	al_124 = (SLICE(eax_109, byte, 0) & 0xB5<8>) + 0x78<8> (alias)
l000000000040A4CD:
	al_124 = (SLICE(eax_109, byte, 0) & 0xE0<8>) + 0x73<8> (alias)
l000000000040A4D3:
	byte al_194
	Mem128[rsi + 3<64>:byte] = al_124
	Mem147[rsi + 4<64>:byte] = (0<8> - CONVERT((edi_8 & 0x20<32>) <u 1<32>, bool, byte) & 0xBB<8>) + 0x72<8>
	Mem165[rsi + 5<64>:byte] = (0<8> - CONVERT((edi_8 & 0x10<32>) <u 1<32>, bool, byte) & 0xB6<8>) + 0x77<8>
	word32 eax_179 = 0<32> - CONVERT((edi_8 & 8<32>) <u 1<32>, bool, word32)
	branch (edi_8 & 0x400<32>) == 0<32> l000000000040A580
l000000000040A580:
	al_194 = (SLICE(eax_179, byte, 0) & 0xB5<8>) + 0x78<8> (alias)
l000000000040A50E:
	al_194 = (SLICE(eax_179, byte, 0) & 0xE0<8>) + 0x73<8> (alias)
l000000000040A514:
	Mem198[rsi + 6<64>:byte] = al_194
	Mem217[rsi + 7<64>:byte] = (0<8> - CONVERT((edi_8 & 4<32>) <u 1<32>, bool, byte) & 0xBB<8>) + 0x72<8>
	Mem237[rsi + 8<64>:byte] = (0<8> - CONVERT((edi_8 & 2<32>) <u 1<32>, bool, byte) & 0xB6<8>) + 0x77<8>
	branch (edi_8 & 0x200<32>) == 0<32> l000000000040A560
l000000000040A560:
	Mem241[rsi + 0xA<64>:byte] = 0x20<8>
	Mem242[rsi + 0xB<64>:byte] = 0<8>
	Mem257[rsi + 9<64>:byte] = (0<8> - CONVERT((edi_8 & 1<32>) <u 1<32>, bool, byte) & 0xB5<8>) + 0x78<8>
	return
l000000000040A545:
	Mem260[rsi + 0xA<64>:byte] = 0x20<8>
	Mem261[rsi + 0xB<64>:byte] = 0<8>
	Mem276[rsi + 9<64>:byte] = (0<8> - CONVERT((edi_8 & 1<32>) <u 1<32>, bool, byte) & 0xE0<8>) + 0x74<8>
	return
fn000000000040A600_exit:


word64 fn000000000040A610(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405090
// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040A610_entry:
l000000000040A610:
	word64 rax_9 = fn000000000040A630(rdx, rsi, rdi)
	branch rax_9 == 0<64> l000000000040A623
l000000000040A623:
	fn0000000000410E50()
l000000000040A61E:
	return rax_9
fn000000000040A610_exit:


word64 fn000000000040A630(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040A610
// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040A630_entry:
l000000000040A630:
	word64 rax_32 = fn000000000040A390(rdi)
	word64 rax_42 = fn000000000040A400(rax_32)
	word64 r14_13 = 0<u64>
	word64 rsi_52 = rax_32 - rdi + rax_42
	branch rax_42 == 0<64> l000000000040A679
l000000000040A66D:
	r14_13 = CONVERT(CONVERT(Mem53[rax_32 - 1<64> + rax_42:byte] != 0x2F<8>, bool, int8), int8, uint64) (alias)
l000000000040A679:
	word64 rbx_63 = rsi
	branch Mem53[rsi:byte] == 0x2F<8> l000000000040A700
l000000000040A700:
	rbx_63 = rbx_63 + 1<64>
	branch Mem53[rbx_63:byte] != 0x2F<8> l000000000040A682
l000000000040A70D:
	rbx_63 = rbx_63 + 1<64>
	branch Mem53[rbx_63 + 1<64>:byte] != 0x2F<8> l000000000040A682
l000000000040A71A:
l000000000040A682:
	word64 rax_136
	word64 rax_75 = strlen(rbx_63)
	word64 rax_89 = malloc(rsi_52 + 1<64> + r14_13 + rax_75)
	branch rax_89 == 0<64> l000000000040A720
l000000000040A720:
	rax_136 = 0<u64>
l000000000040A6A8:
	word64 rax_105 = mempcpy(rax_89, rdi, rsi_52)
	Mem111[rax_105:byte] = 0x2F<8>
	word64 rdi_112 = rax_105 + r14_13
	branch rdx == 0<64> l000000000040A6D5
l000000000040A6C3:
	Mem126[rdx:word64] = rdi_112 - CONVERT(CONVERT(Mem111[rsi:byte] == 0x2F<8>, bool, int8), int8, uint64)
l000000000040A6D5:
	Mem134[mempcpy(rdi_112, rbx_63, rax_75):byte] = 0<8>
	rax_136 = rax_89
l000000000040A6E8:
	return rax_136
fn000000000040A630_exit:


void fn000000000040A730(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r8 r9 rax rcx rdx rsi Top
// Preserved: rsp
fn000000000040A730_entry:
l000000000040A730:
	word64 rdx_49 = Mem0[rdi:word64]
	byte cl_31 = Mem0[rdx_49:byte]
	branch cl_31 == 0<8> l000000000040A7CD
l000000000040A7CD:
	return
l000000000040A73E:
	word64 rax_103 = 0<u64>
	word64 r8_178 = 0<64>
l000000000040A776:
	branch SLICE(r8_178, byte, 0) != 0<8> l000000000040A750
l000000000040A750:
	r8_178 = 0<64> (alias)
	r8_178 = 0<64> (alias)
	branch (CONVERT(cl_31, byte, int32) & 0xFFFFFFDF<32>) <=u 0x5A<32> l000000000040A768
l000000000040A77B:
	branch cl_31 == 0x2E<8> l000000000040A7B8
l000000000040A7B8:
	branch rax_103 == 0<64> l000000000040A7C8
l000000000040A7C8:
	rax_103 = rdx_49
l000000000040A7BD:
	r8_178 = 1<64> (alias)
l000000000040A780:
	word32 esi_53 = CONVERT(cl_31, byte, int32)
	branch esi_53 <=u 0x39<32> l000000000040A768
l000000000040A78D:
	branch (esi_53 & 0xFFFFFFDF<32>) >u 0x5A<32> || (esi_53 & 0xFFFFFFDF<32>) <u 0x41<32> l000000000040A761
l000000000040A761:
	branch cl_31 == 0x7E<8> l000000000040A768
l000000000040A764_1:
	rax_103 = 0<u64>
l000000000040A768:
	rdx_49 = rdx_49 + 1<64>
	Mem83[rdi:word64] = rdx_49
	cl_31 = Mem83[rdx_49:byte] (alias)
	branch cl_31 == 0<8> l000000000040A7B0
l000000000040A798:
	rdx_49 = rdx_49 + 1<64>
	Mem91[rdi:word64] = rdx_49
	cl_31 = Mem91[rdx_49:byte] (alias)
	branch cl_31 != 0<8> l000000000040A776
l000000000040A7A6:
l000000000040A7B0:
	return
fn000000000040A730_exit:


void fn000000000040AB30(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rsi Top
// Preserved: rbx rsp
fn000000000040AB30_entry:
l000000000040AB30:
	branch clock_gettime(0<i32>, rdi) == 0<32> l000000000040AB67
l000000000040AB46:
	gettimeofday(fp - 0x18<64>, 0<u64>)
	Mem22[rdi:word64] = qwLoc18
	Mem26[rdi + 8<64>:word64] = qwLoc10 *s 0x3E8<64>
l000000000040AB67:
	return
fn000000000040AB30_exit:


byte fn000000000040AB70(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rsi Top
// Preserved: rsp
fn000000000040AB70_entry:
l000000000040AB70:
	word64 rax_8 = setlocale(SLICE(rdi, int32, 0), 0<u64>)
	branch rax_8 == 0<64> l000000000040ABB0
l000000000040ABB0:
	return 1<8>
l000000000040AB80:
	bool v17_50 = Mem0[rax_8:byte] != 0x43<8>
	branch Mem0[rax_8:byte] != 0x43<8> l000000000040AB98
l000000000040AB85:
	v17_50 = Mem0[rax_8 + 1<64>:byte] != 0<8>
	branch Mem0[rax_8 + 1<64>:byte] != 0<8> l000000000040AB98
l000000000040AB98:
	word64 rsi_22 = rax_8
	word64 rdi_24 = 0x415E6A<u64>
	word64 rcx_26 = 6<u64>
l000000000040ABA5:
	branch rcx_26 == 0<64> l000000000040ABA7
l000000000040ABA5_1:
	v17_50 = Mem0[rsi_89:byte] != Mem0[rdi_90:byte]
	rsi_22 = rsi_89 + 1<i64>
	rdi_24 = rdi_90 + 1<i64>
	rcx_26 = rcx_26 - 1<64>
	rsi_89 = rsi_22
	rdi_90 = rdi_24
	branch Mem0[rsi_89:byte] != Mem0[rdi_90:byte] l000000000040ABA5
l000000000040ABA7:
	return CONVERT(v17_50, bool, int8)
l000000000040AB8B:
	return 0<8>
fn000000000040AB70_exit:


word64 fn000000000040ABC0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040B400
//      fn000000000040B710
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO r8 r9 rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040ABC0_entry:
l000000000040ABC0:
	word64 rdi_11
	branch rdi >u 9<64> l000000000040AC4F
l000000000040AC4F:
	rdi_11 = rdi | 1<64>
	branch (rdi | 1<64>) != 0xFFFFFFFFFFFFFFFF<64> l000000000040ABCF
l000000000040AC5D:
l000000000040ABCA:
	rdi_11 = 0xB<u64>
l000000000040ABCF:
l000000000040ABE0:
	word64 rcx_17
	branch rdi_11 <=u 9<64> l000000000040AC48
l000000000040AC48:
	rcx_17 = 3<u64>
l000000000040ABE6:
	word64 rdx_21 = SLICE(rdi_11 *u128 0xAAAAAAAAAAAAAAAB<64>, word64, 64)
	branch rdi_11 == (rdx_21 >>u 1<64>) + (rdx_21 >>u 1<64>) * 2<64> l000000000040AC3A
l000000000040ABF8:
	word64 r8_27 = 0x10<u64>
	word64 rsi_29 = 9<u64>
	rcx_17 = 3<u64>
l000000000040AC21:
	rsi_29 = rsi_29 + r8_27
	rcx_17 = rcx_17 + 2<64>
	branch rsi_29 <u rdi_11 l000000000040AC10
l000000000040AC10:
	r8_27 = r8_27 + 8<64>
	branch CONVERT(CONVERT(rdi_11, word64, uint128) % rcx_17, word128, uint64) == 0<64> l000000000040AC3A
l000000000040AC2D:
	branch CONVERT(CONVERT(rdi_11, word64, uint128) % rcx_17, word128, uint64) != 0<64> l000000000040AC44
l000000000040AC3A:
	rdi_11 = rdi_11 + 2<64>
	branch rdi_11 != 0xFFFFFFFFFFFFFFFF<64> l000000000040ABE0
l000000000040AC44:
	return rdi_11
fn000000000040ABC0_exit:


word64 fn000000000040AC80(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040ACB0
//      fn000000000040AE40
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rsi Top
// Preserved: rbx rsp
fn000000000040AC80_entry:
l000000000040AC80:
	word64 rax_14
	call Mem6[rdi + 0x30<64>:word64] (retsize: 8;)
		uses: rdi:rsi,rsi:Mem6[rdi + 0x10<64>:word64]
		defs: rax:rax_14
	branch rax_14 >=u Mem6[rdi + 0x10<64>:word64] l000000000040AC9D
l000000000040AC9D:
	abort()
l000000000040AC94:
	return (rax_14 << 4<64>) + Mem6[rdi:word64]
fn000000000040AC80_exit:


word64 fn000000000040ACB0(word32 ecx, word64 rdx, word64 rsi, word64 rdi, ptr64 & rsiOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040B8F0
//      fn000000000040BB90
// MayUse:  rcx:[0..31] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax rsi
// Trashed: SCZO r10 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 rbp rbx rsp
fn000000000040ACB0_entry:
	word32 ecx = SLICE(rcx, word32, 0)
l000000000040ACB0:
	word64 r13_14 = CONVERT(ecx, word32, uint64)
	word64 rax_28 = fn000000000040AC80(rsi, rdi)
	Mem35[rdx:word64] = rax_28
	byte r13b_137 = SLICE(r13_14, byte, 0)
	word64 rsi_103 = Mem35[rax_28:word64]
	word64 rbx_116 = rax_28
	branch rsi_103 == 0<64> l000000000040AD4F
l000000000040ACD7:
	branch rsi == rsi_103 l000000000040ACE9
l000000000040ACDC:
	word64 rax_48
	word64 r9_49
	word64 r10_50
	word64 rdx_44
	word64 rcx_274
	call Mem35[rdi + 0x38<64>:word64] (retsize: 8;)
		uses: ecx:ecx,r10:r10_50,r9:r9_49,rcx_32_32:rcx_32_32_238,rdi:rsi,rdx:rdx,rsi:rsi_36
		defs: r10:r10_50,r9:r9_49,rax:rax_48,rcx:rcx_45,rdx:rdx_44
	word32 rcx_32_32_238 = SLICE(rcx_274, word32, 32)
	branch SLICE(rax_48, byte, 0) == 0<8> l000000000040AD46
l000000000040AD46:
	word32 ecx_71 = SLICE(rcx_274, word32, 0)
	byte r13b_89 = SLICE(r13_14, byte, 0)
	word64 rax_58 = Mem35[rbx_116 + 8<64>:word64]
	branch rax_58 != 0<64> l000000000040AD30
l000000000040AD30:
	rsi_103 = Mem35[rax_58:word64]
	branch rsi_103 == rsi l000000000040AD67
l000000000040AD38:
	word64 rax_78
	word64 r9_79
	word64 r10_80
	call Mem35[rdi + 0x38<64>:word64] (retsize: 8;)
		uses: ecx:ecx_71,r10:r10_80,r9:r9_79,rcx_32_32:rcx_32_32_239,rdi:rsi,rdx:rdx_69,rsi:rsi_62
		defs: r10:r10_80,r9:r9_79,rax:rax_78,rcx:rcx_75,rdx:rdx_74
	word32 rcx_32_32_239 = SLICE(rcx_274, word32, 32)
	branch SLICE(rax_78, byte, 0) != 0<8> l000000000040AD60
l000000000040AD60:
	rax_58 = Mem35[rbx_116 + 8<64>:word64]
	rsi_103 = Mem35[rax_58:word64]
l000000000040AD67:
	branch r13b_89 == 0<8> l000000000040AD1C
l000000000040AD6C:
	Mem97[rbx_116 + 8<64>:word64] = Mem35[rax_58 + 8<64>:word64]
	Mem98[rax_58:word64] = 0<64>
	Mem101[rax_58 + 8<64>:word64] = Mem98[rdi + 0x48<64>:word64]
	Mem102[rdi + 0x48<64>:word64] = rax_58
	rsiOut = rsi_103
	return rsi_103
l000000000040AD42:
	rbx_116 = Mem35[rbx_116 + 8<64>:word64]
l000000000040AD4F:
	rsiOut = 0<u64>
	return 0<u64>
l000000000040ACE6:
	rsi_103 = Mem35[rax_28:word64]
l000000000040ACE9:
	branch r13b_137 == 0<8> l000000000040AD1C
l000000000040ACEE:
	word64 rax_143 = Mem35[rax_28 + 8<64>:word64]
	branch rax_143 == 0<64> l000000000040AD98
l000000000040AD98:
	Mem147[rax_28:word64] = 0<64>
l000000000040ACFB:
	word64 r10_149 = Mem35[rax_143 + 8<64>:word64]
	Mem150[rax_28:word64] = Mem35[rax_143:word64]
	Mem151[rax_28 + 8<64>:word64] = r10_149
	Mem152[rax_143:word64] = 0<64>
	Mem155[rax_143 + 8<64>:word64] = Mem152[rdi + 0x48<64>:word64]
	Mem156[rdi + 0x48<64>:word64] = rax_143
l000000000040AD1C:
	rsiOut = rsi_103
	return rsi_103
fn000000000040ACB0_exit:


byte fn000000000040ADB0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040B400
//      fn000000000040B8F0
//      fn000000000040BB90
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZOP rax Top xmm0 xmm1 xmm2 xmm3
// Preserved: rsp
fn000000000040ADB0_entry:
l000000000040ADB0:
	word64 rax_6 = Mem0[rdi:word64]
	branch rax_6 == 0x415EE0<64> l000000000040AE30
l000000000040AE30:
l000000000040ADBB:
	branch Mem0[rax_6 + 8<64>:real32] <=u Mem0[0x0000000000415EF4<p64>:real32] l000000000040AE20
l000000000040ADC9:
	branch Mem0[0x0000000000415EF8<p64>:real32] <=u Mem0[rax_6 + 8<64>:real32] l000000000040AE20
l000000000040ADD6:
	branch Mem0[rax_6 + 0xC<64>:real32] <=u Mem0[0x0000000000415EFC<p64>:real32] l000000000040AE20
l000000000040ADE4:
	branch Mem0[rax_6:real32] <u Mem0[0x0000000000415F00<p64>:real32] l000000000040AE20
l000000000040ADF1:
	real32 v14_31 = Mem0[rax_6:real32] + Mem0[0x0000000000415EF4<p64>:real32]
	branch Mem0[rax_6 + 4<64>:real32] <=u v14_31 l000000000040AE20
l000000000040AE03:
	branch Mem0[0x0000000000415F04<p64>:real32] <u Mem0[rax_6 + 4<64>:real32] l000000000040AE20
l000000000040AE10:
	branch Mem0[rax_6 + 8<64>:real32] >u v14_31 l000000000040AE35
l000000000040AE35:
	return 1<8>
l000000000040AE1A:
l000000000040AE20:
	Mem51[rdi:word64] = 0x415EE0<64>
	return 0<8>
fn000000000040ADB0_exit:


word32 fn000000000040AE40(word32 edx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040B710
// MayUse:  rdi:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040AE40_entry:
	word32 edx = SLICE(rdx, word32, 0)
l000000000040AE40:
	byte r15b_199 = SLICE(edx, byte, 0)
	word64 r13_167 = Mem28[rsi:word64]
	branch r13_167 >=u Mem28[rsi + 8<64>:word64] l000000000040AEEF
l000000000040AE64:
l000000000040AE68:
	word64 rbp_35 = Mem34[r13_167:word64]
	branch rbp_35 == 0<64> l000000000040AEE1
l000000000040AE71:
	word64 rbx_39 = Mem34[r13_167 + 8<64>:word64]
	branch rbx_39 != 0<64> l000000000040AE94
l000000000040AE94:
	word64 rbp_45 = Mem44[rbx_39:word64]
	word64 rax_49 = fn000000000040AC80(rbp_45, rdi)
	word64 rdx_57 = Mem44[rbx_39 + 8<64>:word64]
	branch Mem44[rax_49:word64] != 0<64> l000000000040AE80
l000000000040AE80:
	Mem62[rbx_39 + 8<64>:word64] = Mem44[rax_49 + 8<64>:word64]
	Mem63[rax_49 + 8<64>:word64] = rbx_39
	branch rdx_57 == 0<64> l000000000040AED0
l000000000040AEAC:
	Mem65[rax_49:word64] = rbp_45
	Mem67[rdi + 0x18<64>:word64] = Mem65[rdi + 0x18<64>:word64] + 1<64>
	Mem70[rbx_39:word64] = 0<64>
	Mem72[rbx_39 + 8<64>:word64] = Mem70[rdi + 0x48<64>:word64]
	Mem73[rdi + 0x48<64>:word64] = rbx_39
	branch rdx_57 != 0<64> l000000000040AE91
l000000000040AE91:
	rbx_39 = rdx_57
l000000000040AECF:
l000000000040AED0:
	rbp_35 = Mem80[r13_167:word64]
l000000000040AE7A:
l000000000040AED4:
	Mem90[r13_167 + 8<64>:word64] = 0<64>
	branch r15b_199 == 0<8> l000000000040AF08
l000000000040AF08:
	word64 rax_98 = fn000000000040AC80(rbp_35, rdi)
	branch Mem90[rax_98:word64] == 0<64> l000000000040AF5B
l000000000040AF5B:
	Mem108[rax_98:word64] = rbp_35
	Mem110[rdi + 0x18<64>:word64] = Mem108[rdi + 0x18<64>:word64] + 1<64>
l000000000040AF1C:
	word64 rax_112 = Mem90[rdi + 0x48<64>:word64]
	branch rax_112 == 0<64> l000000000040AF66
l000000000040AF66:
	rax_112 = malloc(0x10<u64>)
	branch rax_112 != 0<64> l000000000040AF2F
l000000000040AF75:
	return 0<32>
l000000000040AF26:
	Mem146[rdi + 0x48<64>:word64] = Mem90[rax_112 + 8<64>:word64]
l000000000040AF2F:
	word64 rdx_149 = Mem148[rax_98 + 8<64>:word64]
	Mem152[rax_112:word64] = rbp_35
	Mem153[rax_112 + 8<64>:word64] = rdx_149
	Mem154[rax_98 + 8<64>:word64] = rax_112
l000000000040AF3E:
	Mem157[r13_167:word64] = 0<64>
	Mem166[rsi + 0x18<64>:word64] = Mem157[rsi + 0x18<64>:word64] - 1<64>
	r13_167 = r13_167 + 0x10<64>
	branch Mem166[rsi + 8<64>:word64] >u r13_167 l000000000040AE68
l000000000040AF59:
l000000000040AEE1:
	r13_167 = r13_167 + 0x10<64>
	branch Mem173[rsi + 8<64>:word64] >u r13_167 l000000000040AE68
l000000000040AEEF:
	return 1<32>
fn000000000040AE40_exit:


word64 fn000000000040AFB0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: rax Top
// Preserved: rsp
fn000000000040AFB0_entry:
l000000000040AFB0:
	return Mem0[rdi + 0x20<64>:word64]
fn000000000040AFB0_exit:


word64 fn000000000040B400(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  r8:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZOP r8 r9 rax rcx rdi rdx rsi Top xmm0 xmm1 xmm2 xmm3
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040B400_entry:
l000000000040B400:
	word64 r15_10 = rdi
	word32 r15d_97 = SLICE(rdi, word32, 0)
	word32 r15_32_32_131 = SLICE(rdi, word32, 32)
	word64 r13_208 = rdx
	word64 r12_213 = rcx
	word64 rbp_32 = rsi
	branch rdx != 0<64> l000000000040B42E
l000000000040B42A_1:
	r13_208 = 0x40AC60<u64>
l000000000040B42E:
	branch rcx != 0<64> l000000000040B43A
l000000000040B436_1:
	r12_213 = 0x40AC70<u64>
l000000000040B43A:
	word64 rax_224
	word64 rax_50 = malloc(0x50<u64>)
	branch rax_50 == 0<64> l000000000040B598
l000000000040B598:
	rax_224 = 0<u64>
l000000000040B44B:
	branch rsi != 0<64> l000000000040B45B
l000000000040B457_1:
	rbp_32 = 0x415EE0<u64>
l000000000040B45B:
	Mem71[rax_50 + 0x28<64>:word64] = rbp_32
	branch fn000000000040ADB0(rax_50 + 0x28<64>) == 0<8> l000000000040B548
l000000000040B46C:
	branch Mem71[rbp_32 + 0x10<64>:byte] != 0<8> l000000000040B4C0
l000000000040B477:
	word128 xmm0_108
	branch rdi < 0<64> l000000000040B578
l000000000040B578:
	word64 r15_99 = CONVERT(r15d_97 & 1<32>, word32, uint64)
	real32 v35_104 = CONVERT(rdi >>u 1<64> | r15_99, word64, real32)
	r15_32_32_131 = SLICE(r15_99, word32, 32) (alias)
	xmm0_108 = SEQ(SLICE(xmm0_74, word96, 32), v35_104 + v35_104)
l000000000040B480:
	xmm0_108 = SEQ(SLICE(xmm0_74, word96, 32), CONVERT(rdi, word64, real32))
l000000000040B485:
	real32 v26_113 = SLICE(xmm0_108, real32, 0) / Mem71[rbp_32 + 8<64>:real32]
	branch v26_113 >=u Mem71[0x0000000000415F08<p64>:real32] l000000000040B540
l000000000040B496:
	branch v26_113 <u Mem71[0x0000000000415F0C<p64>:real32] l000000000040B568
l000000000040B568:
	r15_10 = SEQ(r15_32_32_131, CONVERT(v26_113, real32, int32)) (alias)
l000000000040B4A3:
	r15_10 = SEQ(r15_32_32_131, CONVERT(v26_113 - Mem71[0x0000000000415F0C<p64>:real32], real32, int32)) ^ 0x8000000000000000<64>
l000000000040B4C0:
	word64 rax_142 = fn000000000040ABC0(r15_10)
	branch rax_142 >u 0x1FFFFFFFFFFFFFFF<64> l000000000040B540
l000000000040B540:
	Mem159[rax_50 + 0x10<64>:word64] = 0<64>
l000000000040B4DA:
	Mem162[rax_50 + 0x10<64>:word64] = rax_142
	branch rax_142 == 0<64> l000000000040B548
l000000000040B4E3:
	word64 rax_167 = calloc(rax_142, 0x10<u64>)
	Mem170[rax_50:word64] = rax_167
	branch rax_167 == 0<64> l000000000040B548
l000000000040B548:
	free(rax_50)
	return 0<u64>
l000000000040B4F8:
	Mem201[rax_50 + 0x18<64>:word64] = 0<64>
	Mem202[rax_50 + 0x20<64>:word64] = 0<64>
	Mem210[rax_50 + 0x30<64>:word64] = r13_208
	Mem216[rax_50 + 0x38<64>:word64] = r12_213
	Mem217[rax_50 + 8<64>:word64] = rax_167 + (rax_142 << 4<64>)
	Mem223[rax_50 + 0x40<64>:word64] = r8
	Mem225[rax_50 + 0x48<64>:word64] = 0<64>
	rax_224 = rax_50
l000000000040B52A:
	return rax_224
fn000000000040B400_exit:


void fn000000000040B640(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax Top
// Preserved: r12 rbp rbx rdi rsp
fn000000000040B640_entry:
l000000000040B640:
	word64 rax_47
	branch Mem14[rdi + 0x40<64>:word64] == 0<64> l000000000040B655
l000000000040B64E:
	branch Mem14[rdi + 0x20<64>:word64] != 0<64> l000000000040B6C6
l000000000040B6C6:
	word64 r12_19 = Mem14[rdi:word64]
	branch r12_19 >=u Mem14[rdi + 8<64>:word64] l000000000040B693
l000000000040B6CF:
l000000000040B6D0:
	word64 rdi_24 = Mem14[r12_19:word64]
	word64 rbx_25 = r12_19
	branch rdi_24 != 0<64> l000000000040B6E3
l000000000040B6E3:
	word64 rax_37
	call Mem14[rdi + 0x40<64>:word64] (retsize: 8;)
		uses: rax:rax_37,rdi:rdi_32
		defs: rax:rax_37
	rbx_25 = Mem14[rbx_25 + 8<64>:word64]
	branch rbx_25 != 0<64> l000000000040B6E0
l000000000040B6E0:
	rdi_24 = Mem14[rbx_25:word64]
l000000000040B6DC:
l000000000040B6EF:
	rax_47 = Mem14[rdi + 8<64>:word64]
	r12_19 = r12_19 + 0x10<64>
	branch rax_47 >u r12_19 l000000000040B6D0
l000000000040B6FC:
l000000000040B655:
	rax_47 = Mem14[rdi + 8<64>:word64]
l000000000040B659:
	word64 r12_57 = Mem14[rdi:word64] + 8<64>
	branch r12_57 >=u rax_47 l000000000040B693
l000000000040B662:
l000000000040B668:
	word64 rdi_63 = Mem14[r12_57 + 0<64>:word64]
	branch rdi_63 != 0<64> l000000000040B67B
l000000000040B67B:
	word64 rbx_69 = Mem14[rdi_63 + 8<64>:word64]
	free(rdi_63)
	branch rbx_69 != 0<64> l000000000040B678
l000000000040B678:
	rdi_63 = rbx_69
l000000000040B672:
l000000000040B689:
	r12_57 = r12_57 + 0x10<64>
	branch Mem14[rdi + 8<64>:word64] >u r12_57 l000000000040B668
l000000000040B693:
	word64 rdi_85 = Mem14[rdi + 0x48<64>:word64]
	branch rdi_85 != 0<64> l000000000040B6A3
l000000000040B6A3:
	word64 rbx_91 = Mem14[rdi_85 + 8<64>:word64]
	free(rdi_85)
	branch rbx_91 != 0<64> l000000000040B6A0
l000000000040B6A0:
	rdi_85 = rbx_91
l000000000040B69C:
l000000000040B6B1:
	free(Mem14[rdi:word64])
	free(rdi)
	return
fn000000000040B640_exit:


word32 fn000000000040B710(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040B8F0
//      fn000000000040BB90
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZOP r8 r9 rax rcx rdi rdx rsi Top xmm0 xmm1
// Preserved: r12 rbp rbx rsp
fn000000000040B710_entry:
	word32 esi_25 = SLICE(rsi, word32, 0)
l000000000040B710:
	word64 rbp_16 = Mem12[rdi + 0x28<64>:word64]
	branch Mem12[rbp_16 + 0x10<64>:byte] != 0<8> l000000000040B770
l000000000040B72A:
	word128 xmm0_37
	branch rsi < 0<64> l000000000040B8D0
l000000000040B8D0:
	rsi = CONVERT(esi_25 & 1<32>, word32, uint64)
	real32 v30_32 = CONVERT(rsi >>u 1<64> | rsi, word64, real32)
	xmm0_37 = SEQ(SLICE(xmm0, word96, 32), v30_32 + v30_32)
l000000000040B733:
	xmm0_37 = SEQ(SLICE(xmm0, word96, 32), CONVERT(rsi, word64, real32))
l000000000040B738:
	word32 rsi_32_32_60 = SLICE(rsi, word32, 32)
	real32 v16_42 = SLICE(xmm0_37, real32, 0) / Mem12[rbp_16 + 8<64>:real32]
	branch v16_42 >=u Mem12[0x0000000000415F08<p64>:real32] l000000000040B870
l000000000040B749:
	branch v16_42 <u Mem12[0x0000000000415F0C<p64>:real32] l000000000040B880
l000000000040B880:
	rsi = SEQ(rsi_32_32_60, CONVERT(v16_42, real32, int32)) (alias)
l000000000040B756:
	rsi = SEQ(rsi_32_32_60, CONVERT(v16_42 - Mem12[0x0000000000415F0C<p64>:real32], real32, int32)) ^ 0x8000000000000000<64>
l000000000040B770:
	word64 rax_71 = fn000000000040ABC0(rsi)
	branch rax_71 >u 0x1FFFFFFFFFFFFFFF<64> l000000000040B870
l000000000040B792:
	branch Mem12[rdi + 0x10<64>:word64] == rax_71 l000000000040B860
l000000000040B860:
	return 1<32>
l000000000040B79C:
	word64 rax_109 = calloc(rax_71, 0x10<u64>)
	branch rax_109 == 0<64> l000000000040B870
l000000000040B870:
	return 0<32>
l000000000040B7B6:
	word64 rax_150 = Mem149[rdi + 0x48<64>:word64]
	word64 rax_152 = CONVERT(fn000000000040AE40(0<32>, rdi, fp - 0x68<64>), word32, uint64)
	word64 rax_134 = rax_109 + (rax_71 << 4<64>)
	word32 ebp_181 = SLICE(rax_152, word32, 0)
	branch SLICE(rax_152, byte, 0) != 0<8> l000000000040B890
l000000000040B890:
	free(Mem151[rdi:word64])
	Mem170[rdi:word64] = rax_109
	Mem172[rdi + 8<64>:word64] = rax_134
	Mem174[rdi + 0x10<64>:word64] = rax_71
	Mem176[rdi + 0x18<64>:word64] = 0<64>
	Mem178[rdi + 0x48<64>:word64] = rax_150
	return ebp_181
l000000000040B815:
	Mem195[rdi + 0x48<64>:word64] = rax_150
	branch SLICE(fn000000000040AE40(1<32>, fp - 0x68<64>, rdi), byte, 0) == 0<8> l000000000040B8EA
l000000000040B836:
	branch SLICE(fn000000000040AE40(0<32>, fp - 0x68<64>, rdi), byte, 0) == 0<8> l000000000040B8EA
l000000000040B8EA:
	abort()
l000000000040B84B:
	free(rax_109)
	return ebp_181
fn000000000040B710_exit:


word32 fn000000000040B8F0(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040BB50
// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi Top xmm0 xmm1 xmm2 xmm3
// Preserved: r12 rbp rbx rsp
fn000000000040B8F0_entry:
l000000000040B8F0:
	branch rsi == 0<64> l000000000040BA67
l000000000040B904:
	word64 rax_271
	word64 rsi_32
	word64 rax_29 = fn000000000040ACB0(0<32>, fp - 0x20<64>, rsi, rdi, out rsi_32)
	word32 rsi_32_32_198 = SLICE(rsi_32, word32, 32)
	branch rax_29 == 0<64> l000000000040B938
l000000000040B938:
	word128 xmm0_60
	word64 rax_43 = Mem14[rdi + 0x18<64>:word64]
	word32 eax_48 = SLICE(rax_43, word32, 0)
	branch rax_43 < 0<64> l000000000040BA70
l000000000040BA70:
	real32 v28_55 = CONVERT(rax_43 >>u 1<64> | CONVERT(eax_48 & 1<32>, word32, uint64), word64, real32)
	xmm0_60 = SEQ(SLICE(xmm0, word96, 32), v28_55 + v28_55)
l000000000040B945:
	xmm0_60 = SEQ(SLICE(xmm0, word96, 32), CONVERT(rax_43, word64, real32))
l000000000040B94A:
	word128 xmm1_84
	word64 rax_65 = Mem14[rdi + 0x10<64>:word64]
	word32 eax_71 = SLICE(rax_65, word32, 0)
	word64 rdx_66 = Mem14[rdi + 0x28<64>:word64]
	branch rax_65 < 0<64> l000000000040BA90
l000000000040BA90:
	real32 v54_78 = CONVERT(rax_65 >>u 1<64> | CONVERT(eax_71 & 1<32>, word32, uint64), word64, real32)
	xmm1_84 = SEQ(SLICE(xmm1, word96, 32), v54_78 + v54_78)
l000000000040B95B:
	xmm1_84 = SEQ(SLICE(xmm1, word96, 32), CONVERT(rax_65, word64, real32))
l000000000040B960:
	branch SLICE(xmm0_60, real32, 0) >u SLICE(xmm1_84, real32, 0) * Mem14[rdx_66 + 8<64>:real32] l000000000040B9C8
l000000000040B9C8:
	word128 xmm0_129
	fn000000000040ADB0(rdi + 0x28<64>)
	word64 rax_111 = Mem14[rdi + 0x10<64>:word64]
	word32 eax_118 = SLICE(rax_111, word32, 0)
	word64 rdx_112 = Mem14[rdi + 0x28<64>:word64]
	branch rax_111 < 0<64> l000000000040BAE7
l000000000040BAE7:
	real32 v51_125 = CONVERT(rax_111 >>u 1<64> | CONVERT(eax_118 & 1<32>, word32, uint64), word64, real32)
	xmm0_129 = SEQ(SLICE(xmm0_102, word96, 32), v51_125 + v51_125)
l000000000040B9E7:
	xmm0_129 = SEQ(SLICE(xmm0_102, word96, 32), CONVERT(rax_111, word64, real32))
l000000000040B9EC:
	word128 xmm1_151
	word64 rax_134 = Mem14[rdi + 0x18<64>:word64]
	word32 eax_139 = SLICE(rax_134, word32, 0)
	branch rax_134 < 0<64> l000000000040BB01
l000000000040BB01:
	real32 v46_146 = CONVERT(rax_134 >>u 1<64> | CONVERT(eax_139 & 1<32>, word32, uint64), word64, real32)
	xmm1_151 = SEQ(SLICE(xmm1_103, word96, 32), v46_146 + v46_146)
l000000000040B9F9:
	xmm1_151 = SEQ(SLICE(xmm1_103, word96, 32), CONVERT(rax_134, word64, real32))
l000000000040B9FE:
	branch SLICE(xmm1_151, real32, 0) <=u Mem14[rdx_112 + 8<64>:real32] * SLICE(xmm0_129, real32, 0) l000000000040B96A
l000000000040BA0E:
	real32 v40_171 = SLICE(xmm0_129, real32, 0) * Mem14[rdx_112 + 0xC<64>:real32]
	word96 v41_172 = SLICE(xmm0_129, word96, 32)
	word128 xmm0_173 = SEQ(v41_172, v40_171)
	branch Mem14[rdx_112 + 0x10<64>:byte] != 0<8> l000000000040BA1D
l000000000040BA19:
	xmm0_173 = SEQ(v41_172, v40_171 * Mem14[rdx_112 + 8<64>:real32])
l000000000040BA1D:
	branch SLICE(xmm0_173, real32, 0) >=u Mem14[0x0000000000415F08<p64>:real32] l000000000040BB2E
l000000000040BA2A:
	word64 rsi_200
	branch SLICE(xmm0_173, real32, 0) >=u Mem14[0x0000000000415F0C<p64>:real32] l000000000040BAC8
l000000000040BAC8:
	rsi_200 = SEQ(rsi_32_32_198, CONVERT(SLICE(xmm0_173, real32, 0) - Mem14[0x0000000000415F0C<p64>:real32], real32, int32)) ^ 0x8000000000000000<64>
l000000000040BA37:
	rsi_200 = SEQ(rsi_32_32_198, CONVERT(SLICE(xmm0_173, real32, 0), real32, int32)) (alias)
l000000000040BA3C:
	branch SLICE(fn000000000040B710(rsi_200, rdi), byte, 0) == 0<8> l000000000040BB2E
l000000000040BA4C:
	word64 rsi_531
	branch fn000000000040ACB0(0<32>, fp - 0x20<64>, rsi, rdi, out rsi_531) == 0<64> l000000000040B96A
l000000000040BA67:
	abort()
l000000000040B96A:
	branch Mem14[qwLoc20:word64] == 0<64> l000000000040BAB0
l000000000040BAB0:
	Mem269[qwLoc20:word64] = rsi
	Mem274[rdi + 0x20<64>:word64] = Mem269[rdi + 0x20<64>:word64] + 1<64>
	Mem276[rdi + 0x18<64>:word64] = Mem274[rdi + 0x18<64>:word64] + 1<64>
	rax_271 = 1<u64>
l000000000040B97A:
	word64 rax_278 = Mem14[rdi + 0x48<64>:word64]
	branch rax_278 == 0<64> l000000000040BB1B
l000000000040BB1B:
	rax_278 = malloc(0x10<u64>)
	branch rax_278 != 0<64> l000000000040B98F
l000000000040BB2E:
	rax_271 = 0xFFFFFFFF<u64>
l000000000040B987:
	Mem291[rdi + 0x48<64>:word64] = Mem14[rax_278 + 8<64>:word64]
l000000000040B98F:
	word64 rdx_294 = Mem293[qwLoc20 + 8<64>:word64]
	Mem297[rax_278:word64] = rsi
	Mem298[rax_278 + 8<64>:word64] = rdx_294
	Mem299[qwLoc20 + 8<64>:word64] = rax_278
	Mem304[rdi + 0x20<64>:word64] = Mem299[rdi + 0x20<64>:word64] + 1<64>
	return 1<32>
l000000000040B91B:
	branch rdx == 0<64> l000000000040B9B8
l000000000040B9B8:
	return 0<32>
l000000000040B924:
	Mem329[rdx:word64] = rax_29
	rax_271 = 0<u64>
l000000000040B92A:
	return SLICE(rax_271, word32, 0)
fn000000000040B8F0_exit:


word64 fn000000000040BB50(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi Top xmm0 xmm1 xmm2 xmm3
// Preserved: rbx rsp
fn000000000040BB50_entry:
l000000000040BB50:
	word64 rax_34
	word32 eax_30 = fn000000000040B8F0(fp - 0x10<64>, rsi, rdi)
	branch eax_30 == 0xFFFFFFFF<32> l000000000040BB80
l000000000040BB80:
	rax_34 = 0<u64>
l000000000040BB67:
	rax_34 = rsi
	branch eax_30 != 0<32> l000000000040BB72
l000000000040BB6C_1:
	rax_34 = qwLoc10
l000000000040BB72:
	return rax_34
fn000000000040BB50_exit:


word64 fn000000000040BB90(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZOP r10 r8 r9 rax rcx rdi rdx rsi Top xmm0 xmm1 xmm2 xmm3
// Preserved: r12 rbp rbx rsp
fn000000000040BB90_entry:
l000000000040BB90:
	word64 rsi_24
	word64 rax_21 = fn000000000040ACB0(1<32>, fp - 0x20<64>, rsi, rdi, out rsi_24)
	word32 rsi_32_32_196 = SLICE(rsi_24, word32, 32)
	branch rax_21 == 0<64> l000000000040BD08
l000000000040BD08:
	rax_21 = 0<u64>
l000000000040BBB6:
	Mem43[rdi + 0x20<64>:word64] = Mem14[rdi + 0x20<64>:word64] - 1<64>
	branch Mem43[qwLoc20:word64] == 0<64> l000000000040BBD0
l000000000040BBD0:
	word128 xmm0_65
	word64 rax_46 = Mem43[rdi + 0x18<64>:word64]
	Mem50[rdi + 0x18<64>:word64] = rax_46 - 1<64>
	word32 eax_53 = SLICE(rax_46, word32, 0) - 1<32>
	branch rax_46 < 1<64> l000000000040BCE8
l000000000040BCE8:
	real32 v27_60 = CONVERT(rax_46 - 1<64> >>u 1<64> | CONVERT(eax_53 & 1<32>, word32, uint64), word64, real32)
	xmm0_65 = SEQ(SLICE(xmm0, word96, 32), v27_60 + v27_60)
l000000000040BBE5:
	xmm0_65 = SEQ(SLICE(xmm0, word96, 32), CONVERT(rax_46 - 1<64>, word64, real32))
l000000000040BBEA:
	word128 xmm1_89
	word64 rax_70 = Mem50[rdi + 0x10<64>:word64]
	word32 eax_76 = SLICE(rax_70, word32, 0)
	word64 rdx_71 = Mem50[rdi + 0x28<64>:word64]
	branch rax_70 < 0<64> l000000000040BCC8
l000000000040BCC8:
	real32 v39_83 = CONVERT(rax_70 >>u 1<64> | CONVERT(eax_76 & 1<32>, word32, uint64), word64, real32)
	xmm1_89 = SEQ(SLICE(xmm1, word96, 32), v39_83 + v39_83)
l000000000040BBFB:
	xmm1_89 = SEQ(SLICE(xmm1, word96, 32), CONVERT(rax_70, word64, real32))
l000000000040BC00:
	branch SLICE(xmm1_89, real32, 0) * Mem50[rdx_71:real32] >u SLICE(xmm0_65, real32, 0) l000000000040BC18
l000000000040BC18:
	word128 xmm0_133
	fn000000000040ADB0(rdi + 0x28<64>)
	word64 rdx_116 = Mem50[rdi + 0x10<64>:word64]
	word32 edx_122 = SLICE(rdx_116, word32, 0)
	word64 rax_117 = Mem50[rdi + 0x28<64>:word64]
	branch rdx_116 < 0<64> l000000000040BD2F
l000000000040BD2F:
	real32 v43_129 = CONVERT(rdx_116 >>u 1<64> | CONVERT(edx_122 & 1<32>, word32, uint64), word64, real32)
	xmm0_133 = SEQ(SLICE(xmm0_107, word96, 32), v43_129 + v43_129)
l000000000040BC32:
	xmm0_133 = SEQ(SLICE(xmm0_107, word96, 32), CONVERT(rdx_116, word64, real32))
l000000000040BC37:
	word128 xmm1_155
	word64 rdx_138 = Mem50[rdi + 0x18<64>:word64]
	word32 edx_143 = SLICE(rdx_138, word32, 0)
	branch rdx_138 < 0<64> l000000000040BD49
l000000000040BD49:
	real32 v46_150 = CONVERT(rdx_138 >>u 1<64> | CONVERT(edx_143 & 1<32>, word32, uint64), word64, real32)
	xmm1_155 = SEQ(SLICE(xmm1_108, word96, 32), v46_150 + v46_150)
l000000000040BC44:
	xmm1_155 = SEQ(SLICE(xmm1_108, word96, 32), CONVERT(rdx_138, word64, real32))
l000000000040BC49:
	branch Mem50[rax_117:real32] * SLICE(xmm0_133, real32, 0) <=u SLICE(xmm1_155, real32, 0) l000000000040BC09
l000000000040BC56:
	real32 v35_173 = SLICE(xmm0_133, real32, 0) * Mem50[rax_117 + 4<64>:real32]
	word96 v36_174 = SLICE(xmm0_133, word96, 32)
	word128 xmm0_175 = SEQ(v36_174, v35_173)
	branch Mem50[rax_117 + 0x10<64>:byte] != 0<8> l000000000040BC66
l000000000040BC61:
	xmm0_175 = SEQ(v36_174, v35_173 * Mem50[rax_117 + 8<64>:real32])
l000000000040BC66:
	word64 rsi_198
	branch SLICE(xmm0_175, real32, 0) >=u Mem50[0x0000000000415F0C<p64>:real32] l000000000040BD10
l000000000040BD10:
	rsi_198 = SEQ(rsi_32_32_196, CONVERT(SLICE(xmm0_175, real32, 0) - Mem50[0x0000000000415F0C<p64>:real32], real32, int32)) ^ 0x8000000000000000<64>
l000000000040BC73:
	rsi_198 = SEQ(rsi_32_32_196, CONVERT(SLICE(xmm0_175, real32, 0), real32, int32)) (alias)
l000000000040BC78:
	branch SLICE(fn000000000040B710(rsi_198, rdi), byte, 0) != 0<8> l000000000040BBC6
l000000000040BC8D:
	word64 rdi_237 = Mem50[rdi + 0x48<64>:word64]
	branch rdi_237 != 0<64> l000000000040BCA3
l000000000040BCA3:
	word64 r12_243 = Mem50[rdi_237 + 8<64>:word64]
	free(rdi_237)
	branch r12_243 != 0<64> l000000000040BCA0
l000000000040BCA0:
	rdi_237 = r12_243
l000000000040BC96:
l000000000040BCB1:
	Mem250[rdi + 0x48<64>:word64] = 0<64>
l000000000040BC09:
	return rax_21
l000000000040BBC6:
	return rax_21
fn000000000040BB90_exit:


word64 fn000000000040BD70(word64 rcx, word32 edx, word64 rsi, word64 rdi, word64 r8, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000405D50
//      fn0000000000406B70
//      fn0000000000407870
//      fn0000000000407EA0
// MayUse:  edx:[0..31] fs:[0..15] r8:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO FPU -1 FPU -2 FPU -3 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: P FPU -4 r10 r12 r13 r14 r15 rbp rbx rsp
fn000000000040BD70_entry:
l000000000040BD70:
	word64 rcx_47 = Mem45[fs:0x28<32>:word64]
	word64 rax_64 = localeconv()
	word64 r15_542 = Mem63[rax_64:word64]
	word64 rax_68 = strlen(r15_542)
	byte bLocC8_1619 = SLICE(edx, byte, 0)
	word32 v22_62 = (0<32> - CONVERT((edx & 0x20<32>) <u 1<32>, bool, word32) & 0xFFFFFFE8<32>) + 0x400<32>
	word64 rbp_1213 = Mem63[rax_64 + 0x10<64>:word64]
	word64 r11_70 = rax_68
	word64 r13_1174 = Mem63[rax_64 + 8<64>:word64]
	branch rax_68 <u 0x11<64> l000000000040BE0E
l000000000040BE06_1:
	r11_70 = 1<u64>
l000000000040BE0A_1:
	r15_542 = 0x413990<u64>
l000000000040BE0E:
	branch strlen(r13_1174) <u 0x11<64> l000000000040BE2A
l000000000040BE26_1:
	r13_1174 = 0x416919<u64>
l000000000040BE2A:
	word64 rdi_139
	word64 r10_128
	word64 r12_1144
	word32 ebx_1288
	word64 r8_1150
	word32 ecx_151
	word64 qwLocD0_1574 = rsi + 0x288<64>
	branch r8 >u rcx l000000000040C0E0
l000000000040C0E0:
	branch rcx == 0<64> l000000000040BE59
l000000000040C0E9:
	word128 rdx_rax_110 = CONVERT(r8, word64, uint128)
	word64 rax_113 = CONVERT(rdx_rax_110 /u rcx, word64, uint64)
	branch CONVERT(rdx_rax_110 % rcx, word128, uint64) != 0<64> l000000000040BE59
l000000000040C0FF:
	word128 rdx_rax_123 = CONVERT(rdi, word64, uint128)
	word128 rdx_rax_132 = CONVERT(CONVERT(rdx_rax_123 % rax_113, word128, uint64) * 0xA<64>, word64, uint128)
	r10_128 = CONVERT(rdx_rax_123 /u rax_113, word64, uint64)
	word64 rdx_134 = CONVERT(rdx_rax_132 % rax_113, word128, uint64)
	rdi_139 = CONVERT(SLICE(rdx_rax_132 /u rax_113, word32, 0), word32, uint64)
	branch rax_113 <=u rdx_134 * 2<64> l000000000040C6E0
l000000000040C6E0:
	ecx_151 = ~(0<32> - CONVERT(rax_113 <u rdx_134 * 2<64>, bool, word32)) + 3<32> (alias)
l000000000040C125:
	ecx_151 = CONVERT(CONVERT(rdx_134 * 2<64> != 0<64>, bool, int8), int8, uint32) (alias)
l000000000040BE43:
	word128 rdx_rax_162 = CONVERT(rcx, word64, uint128)
	word64 rax_165 = CONVERT(rdx_rax_162 /u r8, word64, uint64)
	branch CONVERT(rdx_rax_162 % r8, word128, uint64) == 0<64> l000000000040C2F0
l000000000040C2F0:
	r10_128 = rax_165 *s rdi
	branch CONVERT(CONVERT(r10_128, word64, uint128) /u rax_165, word64, uint64) != rdi l000000000040BE59
l000000000040C308:
	ecx_151 = 0<32> (alias)
	rdi_139 = 0<64> (alias)
l000000000040C12D:
	word64 r9_197 = CONVERT(edx & 0x10<32>, word32, uint64)
	word32 edi_345 = SLICE(rdi_139, word32, 0)
	r8_1150 = rsi + 0x288<64>
	ebx_1288 = 0xFFFFFFFF<32> (alias)
	word32 r9d_198 = SLICE(r9_197, word32, 0)
	branch r9d_198 == 0<32> l000000000040C530
l000000000040C146:
	word64 rsi_203 = CONVERT(v22_62, word32, uint64)
	word64 rdi_1510 = rdi_139
	branch r10_128 <u rsi_203 l000000000040C710
l000000000040C710:
	r8_1150 = rsi + 0x288<64>
	ebx_1288 = 0<32> (alias)
l000000000040C153:
	ebx_1288 = 0<32> (alias)
l000000000040C17D:
	word128 rdx_rax_224 = CONVERT(r10_128, word64, uint128)
	word64 rdx_227 = CONVERT(rdx_rax_224 % rsi_203, word128, uint64)
	word64 edx_eax_246 = CONVERT(SLICE(rdi_1510, word32, 0) + (SLICE(rdx_227, word32, 0) + SLICE(rdx_227, word32, 0) * 4<32>) * 2<32>, word32, uint64)
	word32 eax_250 = CONVERT(edx_eax_246 /u v22_62, word32, uint32)
	word32 edx_249 = CONVERT(edx_eax_246 % v22_62, word64, uint32)
	word64 rax_228 = CONVERT(rdx_rax_224 /u rsi_203, word64, uint64)
	word64 rdi_256 = CONVERT(eax_250, word32, uint64)
	word32 r14d_257 = (ecx_151 >> 1<32>) + edx_249 * 2<32>
	r10_128 = rax_228
	edi_345 = SLICE(rdi_256, word32, 0) (alias)
	word32 ecx_262 = ecx_151 + r14d_257
	branch v22_62 >u r14d_257 l000000000040C160
l000000000040C160:
	ecx_151 = CONVERT(ecx_262 != 0<32>, bool, word32) (alias)
l000000000040C1A8:
	ecx_151 = ~(0<32> - CONVERT(v22_62 <u ecx_262, bool, word32)) + 3<32> (alias)
l000000000040C168:
	ebx_1288 = ebx_1288 + 1<32> (alias)
	rdi_1510 = rdi_256 (alias)
	branch rsi_203 >u rax_228 l000000000040C49F
l000000000040C49F:
	branch rax_228 >u 9<64> l000000000040C768
l000000000040C4A9:
	byte dl_311
	branch (edx & 3<32>) == 1<32> l000000000040C7B0
l000000000040C7B0:
	dl_311 = CONVERT((eax_250 & 1<32>) + ecx_151 > 2<32>, bool, int8)
l000000000040C4B4:
	dl_311 = CONVERT(ecx_151 > 0<32>, bool, int8) & CONVERT((edx & 3<32>) == 0<32>, bool, int8) (alias)
l000000000040C4C7:
	branch dl_311 == 0<8> l000000000040C788
l000000000040C788:
	branch eax_250 != 0<32> l000000000040C4DB
l000000000040C4CF:
	edi_345 = eax_250 + 1<32> (alias)
	branch eax_250 == 0xFFFFFFF7<32> l000000000040C7CE
l000000000040C7CE:
	r10_128 = rax_228 + 1<64>
	branch rax_228 != 9<64> l000000000040C7FF
l000000000040C7FF:
	ecx_151 = 0<32> (alias)
l000000000040C790:
	branch (bLocC8_1619 & 8<8>) != 0<8> l000000000040C7C2
l000000000040C7C2:
	r8_1150 = rsi + 0x288<64>
	edi_345 = 0<32> (alias)
l000000000040C797:
	edi_345 = 0<32> (alias)
l000000000040C7D8:
	r8_1150 = rsi + 0x288<64>
	ecx_151 = 0<32> (alias)
	edi_345 = 0<32> (alias)
l000000000040C4DB:
	Mem418[rsi + 0x287<64>:byte] = SLICE(edi_345, byte, 0) + 0x30<8>
	r8_1150 = memcpy(rsi + 0x287<64> - r11_70, r15_542, r11_70)
	r9_197 = CONVERT(r9d_198, word32, uint64)
	ecx_151 = 0<32> (alias)
	edi_345 = 0<32> (alias)
l000000000040C174:
	branch ebx_1288 == 8<32> l000000000040C768
l000000000040C768:
	r8_1150 = rsi + 0x288<64>
l000000000040C530:
	byte al_477
	word32 r9d_500 = SLICE(r9_197, word32, 0)
	branch (edx & 3<32>) == 1<32> l000000000040C6F0
l000000000040C6F0:
	al_477 = CONVERT(edi_345 + CONVERT(CONVERT(SLICE(r10_128, word32, 0) & 1<32>, word32, uint64) + CONVERT(ecx_151, word32, int64) != 0<64>, bool, word32) > 5<32>, bool, int8)
l000000000040C53B:
	al_477 = 0<8> (alias)
	branch (edx & 3<32>) != 0<32> l000000000040C54C
l000000000040C545:
	al_477 = CONVERT(ecx_151 + edi_345 > 0<32>, bool, int8)
l000000000040C54C:
	branch al_477 == 0<8> l000000000040C5A0
l000000000040C550:
	r10_128 = r10_128 + 1<64>
	branch r9d_500 == 0<32> l000000000040C5A0
l000000000040C559:
	branch CONVERT(v22_62, word32, uint64) != r10_128 l000000000040C5A0
l000000000040C562:
	branch ebx_1288 == 8<32> l000000000040C5A0
l000000000040C567:
	ebx_1288 = ebx_1288 + 1<32> (alias)
	r10_128 = 1<u64>
	branch (bLocC8_1619 & 8<8>) != 0<8> l000000000040C5A0
l000000000040C577:
	Mem531[r8_1150 - 1<64>:byte] = 0x30<8>
	r10_128 = 1<u64>
	r8_1150 = memcpy(r8_1150 - 1<64> - r11_70, r15_542, r11_70)
l000000000040C5A0:
	r12_1144 = r8_1150
l000000000040C5B0:
	word64 rdx_561 = SLICE(r10_128 *u128 0xCCCCCCCCCCCCCCCD<64>, word64, 64)
	r12_1144 = r12_1144 - 1<64>
	Mem572[r12_1144:byte] = SLICE(r10_128, byte, 0) - (SLICE(rdx_561 >>u 3<64>, byte, 0) + SLICE(rdx_561 >>u 3<64>, byte, 0) * 4<8>) * 2<8> + 0x30<8>
	r10_128 = rdx_561 >>u 3<64>
	branch rdx_561 >>u 3<64> != 0<64> l000000000040C5B0
l000000000040C5D8:
l000000000040BE59:
	real64 rLoc2_1627
	real64 rLoc1_1624 = CONVERT(rdi, word64, real64)
	branch rdi < 0<64> l000000000040C5F0
l000000000040C5F0:
	rLoc1_1624 = rLoc1_1624 + CONVERT(Mem577[0x0000000000415F08<p64>:real32], real32, real64)
	rLoc2_1627 = CONVERT(rcx, word64, real64)
	branch rcx >= 0<64> l000000000040BE7D
l000000000040BE6B:
	rLoc2_1627 = CONVERT(rcx, word64, real64)
	branch rcx < 0<64> l000000000040C608
l000000000040C608:
	rLoc2_1627 = rLoc2_1627 + CONVERT(Mem602[0x0000000000415F08<p64>:real32], real32, real64)
l000000000040BE7D:
	real64 rLoc3_1636 = CONVERT(r8, word64, real64)
	branch r8 < 0<64> l000000000040C5E0
l000000000040C5E0:
	rLoc3_1636 = rLoc3_1636 + CONVERT(Mem608[0x0000000000415F08<p64>:real32], real32, real64)
l000000000040BE94:
	word64 r14_1132
	word64 r15_1137
	real64 rLoc1_1649 = rLoc1_1624 * (rLoc2_1627 / rLoc3_1636)
	branch (bLocC8_1619 & 0x10<8>) == 0<8> l000000000040C1B8
l000000000040C1B8:
	branch (edx & 3<32>) == 1<32> l000000000040C1CD
l000000000040C1BF:
	branch CONVERT(Mem608[0x0000000000415F90<p64>:real80], real80, real64) >u rLoc1_1649 l000000000040C408
l000000000040C408:
	real64 rLoc1_1661
	word64 rax_661
	real64 rLoc2_1655 = CONVERT(Mem608[0x0000000000415F0C<p64>:real32], real32, real64)
	branch rLoc1_1649 >=u rLoc2_1655 l000000000040C6A0
l000000000040C6A0:
	word16 wLoc82_1658 = __fstcw()
	word64 rax_647 = CONVERT(wLoc82_1658, word16, uint64)
	__fldcw(SEQ(SLICE(rax_647, byte, 8) | 0xC<8>, SLICE(rax_647, byte, 0)))
	__fldcw(wLoc82_1658)
	rLoc1_1661 = rLoc1_1649 - rLoc2_1655
	rax_661 = CONVERT(rLoc2_1655, real64, int64) ^ 0x8000000000000000<64>
l000000000040C418:
	word16 wLoc82_1665 = __fstcw()
	word64 rax_668 = CONVERT(wLoc82_1665, word16, uint64)
	__fldcw(SEQ(SLICE(rax_668, byte, 8) | 0xC<8>, SLICE(rax_668, byte, 0)))
	__fldcw(wLoc82_1665)
	rLoc1_1661 = rLoc1_1649
	rax_661 = CONVERT(rLoc1_1649, real64, int64)
l000000000040C43E:
	word64 rdx_687 = 0<u64>
	branch (edx & 3<32>) != 0<32> l000000000040C470
l000000000040C470:
l000000000040C448:
	real64 rLoc2_1673 = CONVERT(rax_661, word64, real64)
	branch rax_661 < 0<64> l000000000040C772
l000000000040C772:
	rLoc2_1673 = rLoc2_1673 + CONVERT(Mem697[0x0000000000415F08<p64>:real32], real32, real64)
l000000000040C45A:
	rdx_687 = 1<u64>
	word64 rcx_720 = CONVERT(CONVERT(PARITY_EVEN(rLoc2_1673 - rLoc1_1661), bool, int8), int8, uint64)
	branch rLoc2_1673 != rLoc1_1661 l000000000040C46C
l000000000040C468_1:
	rdx_687 = rcx_720
l000000000040C46C:
l000000000040C472:
	branch rax_661 + rdx_687 >= 0<64> l000000000040C1CD
l000000000040C487:
l000000000040C1CD:
	__sprintf_chk(rsi, 1<i32>, 0xFFFFFFFFFFFFFFFF<64>, 0x415F18<u64>, 0<32>)
	r14_1132 = 0<u64>
	ebx_1288 = 0xFFFFFFFF<32> (alias)
	r15_1137 = strlen(rsi)
l000000000040BEA3:
	real64 rLoc2_1698 = CONVERT(v22_62, word32, real64)
	ebx_1288 = 0<32> (alias)
	real64 rLoc3_1699 = rLoc2_1698
l000000000040BEB4:
	ebx_1288 = ebx_1288 + 1<32> (alias)
	real64 rLoc4_1703 = rLoc3_1699 * rLoc2_1698
	branch rLoc1_1649 <u rLoc4_1703 l000000000040BED0
l000000000040BED0:
l000000000040BEC1:
	branch ebx_1288 != 8<32> l000000000040BEB0
l000000000040BEB0:
	rLoc3_1699 = rLoc4_1703
l000000000040BEC6:
l000000000040BED4:
	real64 rLoc2_1720
	real64 rLoc1_1716 = rLoc1_1649 / rLoc3_1699
	branch (edx & 3<32>) == 1<32> l000000000040BF70
l000000000040BF70:
	rLoc2_1720 = rLoc1_1716
l000000000040BEE3:
	branch CONVERT(Mem608[0x0000000000415F90<p64>:real80], real80, real64) <=u rLoc1_1716 l000000000040C498
l000000000040C498:
	rLoc2_1720 = rLoc1_1716
l000000000040BEF3:
	real64 rLoc1_1731
	word64 rax_860
	real64 rLoc2_1725 = CONVERT(Mem608[0x0000000000415F0C<p64>:real32], real32, real64)
	branch rLoc1_1716 >=u rLoc2_1725 l000000000040C660
l000000000040C660:
	word16 wLoc82_1728 = __fstcw()
	word64 rax_846 = CONVERT(wLoc82_1728, word16, uint64)
	__fldcw(SEQ(SLICE(rax_846, byte, 8) | 0xC<8>, SLICE(rax_846, byte, 0)))
	__fldcw(wLoc82_1728)
	rLoc1_1731 = rLoc1_1716 - rLoc2_1725
	rax_860 = CONVERT(rLoc2_1725, real64, int64) ^ 0x8000000000000000<64>
l000000000040BF03:
	word16 wLoc82_1735 = __fstcw()
	word64 rax_867 = CONVERT(wLoc82_1735, word16, uint64)
	__fldcw(SEQ(SLICE(rax_867, byte, 8) | 0xC<8>, SLICE(rax_867, byte, 0)))
	__fldcw(wLoc82_1735)
	rLoc1_1731 = rLoc1_1716
	rax_860 = CONVERT(rLoc1_1716, real64, int64)
l000000000040BF29:
	word64 rdx_886 = 0<u64>
	branch (edx & 3<32>) != 0<32> l000000000040BF55
l000000000040BF33:
	real64 rLoc2_1741 = CONVERT(rax_860, word64, real64)
	branch rax_860 < 0<64> l000000000040C77D
l000000000040C77D:
	rLoc2_1741 = rLoc2_1741 + CONVERT(Mem892[0x0000000000415F08<p64>:real32], real32, real64)
l000000000040BF45:
	rdx_886 = 1<u64>
	word64 rcx_914 = CONVERT(CONVERT(PARITY_EVEN(rLoc2_1741 - rLoc1_1731), bool, int8), int8, uint64)
	branch rLoc2_1741 != rLoc1_1731 l000000000040BF55
l000000000040BF51_1:
	rdx_886 = rcx_914
l000000000040BF55:
	branch rax_860 + rdx_886 < 0<64> l000000000040C758
l000000000040C758:
	rLoc2_1720 = rLoc1_1731
l000000000040BF6A:
	rLoc2_1720 = rLoc1_1731
l000000000040BF72:
	__sprintf_chk(rsi, 1<i32>, 0xFFFFFFFFFFFFFFFF<64>, 0x415F1E<u64>, 0<32>)
	word64 rax_966 = strlen(rsi)
	r15_1137 = rax_966
	r14_1132 = r11_70 + 1<64>
	branch rax_966 >u (r11_70 + 2<64>) + CONVERT(CONVERT((edx & 0x20<32>) == 0<32>, bool, int8), int8, uint64) l000000000040BFF0
l000000000040BFCB:
	branch (bLocC8_1619 & 8<8>) == 0<8> l000000000040C208
l000000000040C208:
l000000000040BFD6:
	branch Mem962[rsi - 1<64> + rax_966:byte] != 0x30<8> l000000000040C210
l000000000040C210:
l000000000040BFE7:
l000000000040BFF0:
	real64 rLoc1_1791 = rLoc2_1720 * CONVERT(Mem962[0x0000000000415F84<p64>:real32], real32, real64)
	branch (edx & 3<32>) == 1<32> l000000000040C0A0
l000000000040C001:
	branch CONVERT(Mem962[0x0000000000415F90<p64>:real80], real80, real64) <=u rLoc1_1791 l000000000040C0A0
l000000000040C00F:
	word64 rax_1034
	real64 rLoc1_1799
	real64 rLoc2_1793 = CONVERT(Mem962[0x0000000000415F0C<p64>:real32], real32, real64)
	branch rLoc1_1791 >=u rLoc2_1793 l000000000040C720
l000000000040C720:
	word16 wLoc82_1796 = __fstcw()
	word64 rax_1020 = CONVERT(wLoc82_1796, word16, uint64)
	__fldcw(SEQ(SLICE(rax_1020, byte, 8) | 0xC<8>, SLICE(rax_1020, byte, 0)))
	__fldcw(wLoc82_1796)
	rLoc1_1799 = rLoc1_1791 - rLoc2_1793
	rax_1034 = CONVERT(rLoc2_1793, real64, int64) ^ 0x8000000000000000<64>
l000000000040C01F:
	word16 wLoc82_1803 = __fstcw()
	word64 rax_1041 = CONVERT(wLoc82_1803, word16, uint64)
	__fldcw(SEQ(SLICE(rax_1041, byte, 8) | 0xC<8>, SLICE(rax_1041, byte, 0)))
	__fldcw(wLoc82_1803)
	rLoc1_1799 = rLoc1_1791
	rax_1034 = CONVERT(rLoc1_1791, real64, int64)
l000000000040C045:
	word64 rdx_1060 = 0<u64>
	branch (edx & 3<32>) != 0<32> l000000000040C080
l000000000040C080:
l000000000040C051:
	real64 rLoc2_1811 = CONVERT(rax_1034, word64, real64)
	branch rax_1034 < 0<64> l000000000040C79E
l000000000040C79E:
	rLoc2_1811 = rLoc2_1811 + CONVERT(Mem1070[0x0000000000415F08<p64>:real32], real32, real64)
l000000000040C063:
	rdx_1060 = 1<u64>
	word64 rcx_1093 = CONVERT(CONVERT(PARITY_EVEN(rLoc2_1811 - rLoc1_1799), bool, int8), int8, uint64)
	branch rLoc2_1811 != rLoc1_1799 l000000000040C075
l000000000040C071_1:
	rdx_1060 = rcx_1093
l000000000040C075:
l000000000040C082:
	branch rax_1034 + rdx_1060 >= 0<64> l000000000040C0A0
l000000000040C093:
l000000000040C0A0:
	__sprintf_chk(rsi, 1<i32>, 0xFFFFFFFFFFFFFFFF<64>, 0x415F18<u64>, 0<32>)
	r14_1132 = 0<u64>
	r15_1137 = strlen(rsi)
l000000000040C218:
	r12_1144 = rsi + 0x288<64> - r15_1137
	memmove(r12_1144, rsi, r15_1137)
	r8_1150 = r12_1144 + (r15_1137 - r14_1132)
l000000000040C237:
	branch (bLocC8_1619 & 4<8>) != 0<8> l000000000040C318
l000000000040C318:
	word64 r8_1161 = r8_1150 - r12_1144
	word64 rax_1202 = strlen(r13_1174)
	__memcpy_chk(fp - 0x78<64>, r12_1144, r8_1161, 0x29<u64>)
	word64 r15_1200 = 0xFFFFFFFFFFFFFFFF<64>
	word64 r14_1201 = r8_1161
	word64 r9_1210 = r12_1144 + r8_1161
l000000000040C36C:
	byte dl_1217 = Mem1208[rbp_1213:byte]
	branch dl_1217 == 0<8> l000000000040C383
l000000000040C374:
	r15_1200 = CONVERT(dl_1217, byte, uint64)
	branch dl_1217 <=u 0x7E<8> l000000000040C37F
l000000000040C37B_1:
	r15_1200 = r14_1201
l000000000040C37F:
	rbp_1213 = rbp_1213 + 1<64>
l000000000040C383:
	branch r15_1200 <=u r14_1201 l000000000040C38F
l000000000040C38B_1:
	r15_1200 = r14_1201
l000000000040C38F:
	r14_1201 = r14_1201 - r15_1200
	word64 rax_1254 = memcpy(r9_1210 - r15_1200, fp - 0x78<64> + r14_1201, r15_1200)
	branch r14_1201 != 0<64> l000000000040C358
l000000000040C358:
	r9_1210 = memcpy(rax_1254 - rax_1202, r13_1174, rax_1202)
l000000000040C3AC:
	r12_1144 = rax_1254
l000000000040C242:
	byte bLocC8_1976 = SLICE(edx, byte, 0)
	branch (bLocC8_1619 & 0x80<8>) == 0<8> l000000000040C2BA
l000000000040C249:
	branch ebx_1288 == 0xFFFFFFFF<32> l000000000040C618
l000000000040C618:
	branch r8 <=u 1<64> l000000000040C7A9
l000000000040C7A9:
	ebx_1288 = 0<32> (alias)
l000000000040C627:
	word64 r14_1317 = CONVERT(v22_62, word32, uint64)
	ebx_1288 = 1<32> (alias)
	word64 rax_1321 = 1<u64>
l000000000040C640:
	rax_1321 = rax_1321 *s r14_1317
	branch r8 <=u rax_1321 l000000000040C252
l000000000040C64D:
	ebx_1288 = ebx_1288 + 1<32> (alias)
	branch ebx_1288 != 8<32> l000000000040C640
l000000000040C655:
l000000000040C252:
	branch (ebx_1288 | edx & 0x100<32>) == 0<32> l000000000040C2BA
l000000000040C261:
	branch (bLocC8_1976 & 0x40<8>) != 0<8> l000000000040C3E8
l000000000040C3E8:
	Mem1359[rsi + 0x288<64>:byte] = 0x20<8>
	qwLocD0_1574 = rsi + 0x289<64>
l000000000040C26C:
	word64 rdx_1367
	branch ebx_1288 == 0<32> l000000000040C7EB
l000000000040C7EB:
	rdx_1367 = qwLocD0_1574
l000000000040C274:
	word64 rcx_1384
	rdx_1367 = qwLocD0_1574 + 1<64>
	branch (edx & 0x20<32>) == 0<32> l000000000040C3D0
l000000000040C3D0:
	branch ebx_1288 != 1<32> l000000000040C289
l000000000040C3DE:
	rcx_1384 = 0x6B<64> (alias)
l000000000040C289:
	rcx_1384 = CONVERT(Mem1366[CONVERT(ebx_1288, word32, int64) + 0x415F78<64>:byte], byte, uint64)
l000000000040C293:
	Mem1392[qwLocD0_1574:byte] = SLICE(rcx_1384, byte, 0)
l000000000040C29A:
	branch (edx & 0x100<32>) == 0<32> l000000000040C7F5
l000000000040C7F5:
	qwLocD0_1574 = rdx_1367
l000000000040C2A2:
	branch (edx & 0x20<32>) != 0<32> l000000000040C3B8
l000000000040C3B8:
	branch ebx_1288 == 0<32> l000000000040C2AE
l000000000040C3C0:
	Mem1417[rdx_1367:byte] = 0x69<8>
	rdx_1367 = rdx_1367 + 1<64>
l000000000040C2AE:
	Mem1422[rdx_1367:byte] = 0x42<8>
	qwLocD0_1574 = rdx_1367 + 1<64>
l000000000040C2BA:
	word64 rdi_1478 = rcx_47 ^ Mem1426[fs:0x28<32>:word64]
	Mem1481[qwLocD0_1574:byte] = 0<8>
	branch rdi_1478 != 0<64> l000000000040C7E6
l000000000040C7E6:
	__stack_chk_fail()
l000000000040C2DC:
	return r12_1144
fn000000000040BD70_exit:


word32 fn000000000040C810(word64 rdx, word64 rsi, word64 rdi, ptr64 & r14bOut, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r14 r15 rax
// Trashed: SCZO r14 r15 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 rbp rbx rsp
fn000000000040C810_entry:
l000000000040C810:
	word64 rax_104
	word64 rdx_121
	word32 ebp_153
	word64 r13_195 = rsi
	word64 r12_13 = rdx
	word64 rbx_21 = rdi
	branch rdi == 0<64> l000000000040C910
l000000000040C910:
	word64 rax_28 = getenv(0x4138E4<u64>)
	rbx_21 = rax_28
	branch rax_28 != 0<64> l000000000040C82C
l000000000040C926:
	word64 rax_35 = getenv(0x415F24<u64>)
	rbx_21 = rax_35
	branch rax_35 != 0<64> l000000000040C82C
l000000000040C93C:
	word64 rdx_50 = CONVERT(0<32> - CONVERT(getenv(0x415F2E<u64>) <u 1<64>, bool, word32) & 0x200<32>, word32, uint64)
	Mem53[rdx:word64] = rdx_50 + 0x200<64>
	ebp_153 = 0<32> (alias)
	rdx_121 = rdx_50 + 0x200<64>
l000000000040C82C:
	word32 ebp_183 = 0<32>
	branch Mem19[rbx_21:byte] == 0x27<8> l000000000040C8A0
l000000000040C8A0:
	rbx_21 = rbx_21 + 1<64>
	ebp_183 = 4<32> (alias)
l000000000040C833:
	word32 eax_80 = SLICE(fn0000000000409E50(4<u64>, 0x415F50<u64>, 0x415F60<u64>, rbx_21), word32, 0)
	branch eax_80 < 0<32> l000000000040C8B0
l000000000040C8B0:
	word64 rbp_105 = <invalid>
	ebp_153 = SLICE(rbp_105, word32, 0) (alias)
	byte r14b_369
	word32 ebp_368
	word64 rbx_106
	rax_104 = CONVERT(fn0000000000411360(rdx, 0<32>, fp - 0x30<64>, rbx_21, 0x415F3E<u64>, out rbx_106, out ebp_368, out r12_13, out r13_195, out r14b_369, out r15), word32, uint64)
	word64 rsp_111 = <invalid>
	byte bpl_159 = SLICE(ebp_153, byte, 0)
	word24 ebp_24_8_164 = SLICE(ebp_153, word24, 8)
	branch SLICE(rax_104, word32, 0) != 0<32> l000000000040C968
l000000000040C968:
	Mem120[r13_195:word32] = 0<32>
	rdx_121 = Mem120[r12_13:word64]
l000000000040C8D0:
	branch Mem19[rbx_106:byte] <=u 0x39<8> l000000000040C907
l000000000040C8DA:
	word64 rdx_131 = Mem19[rsp_111 + 8<64>:word64]
	branch rbx_106 != rdx_131 l000000000040C8F9
l000000000040C8F9:
	rbx_106 = rbx_106 + 1<64>
	branch Mem19[rbx_106:byte] >u 0x39<8> || Mem19[rbx_106:byte] <u 0x30<8> l000000000040C8F0
l000000000040C8F0:
	branch rbx_106 == rdx_131 l000000000040C980
l000000000040C8E4:
l000000000040C980:
	branch Mem19[rdx_131 - 1<64>:byte] == 0x42<8> l000000000040C998
l000000000040C998:
	ebp_153 = ebp_153 | 0x180<32> (alias)
	branch Mem19[rdx_131 - 2<64>:byte] != 0x69<8> l000000000040C907
l000000000040C9A8:
l000000000040C986:
	ebp_153 = SEQ(ebp_24_8_164, bpl_159 | 0x80<8>) (alias)
l000000000040C98A:
	ebp_153 = ebp_153 | 0x20<32> (alias)
l000000000040C907:
	rdx_121 = Mem19[r12_13:word64]
l000000000040C84E:
	Mem180[rdx:word64] = 1<64>
	rdx_121 = 1<u64>
	ebp_153 = ebp_183 | Mem180[CONVERT(eax_80, word32, int64) * 4<64> + 4284240<i64>:word32] (alias)
l000000000040C864:
	Mem202[r13_195:word32] = ebp_153
	rax_104 = 0<u64>
l000000000040C86A:
	branch rdx_121 != 0<64> l000000000040C894
l000000000040C86F:
	Mem226[r12_13:word64] = CONVERT(0<32> - CONVERT(getenv(0x415F2E<u64>) <u 1<64>, bool, word32) & 0x200<32>, word32, uint64) + 0x200<64>
	rax_104 = 4<u64>
l000000000040C894:
	r14bOut = <invalid>
	r15Out = r15
	return SLICE(rax_104, word32, 0)
fn000000000040C810_exit:


word64 fn000000000040C9B0(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004057B0
//      fn00000000004061B0
// MayUse:  rdi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r12 rbp rbx rsp
fn000000000040C9B0_entry:
	word32 edi = SLICE(rdi, word32, 0)
l000000000040C9B0:
	word64 rbx_16 = Mem15[0x000000000061B1F8<p64>:word64]
	branch rbx_16 != 0<64> l000000000040C9D1
l000000000040C9D1:
	branch Mem15[rbx_16:word32] != edi l000000000040C9C8
l000000000040C9C8:
	rbx_16 = Mem15[rbx_16 + 8<64>:word64]
	branch rbx_16 == 0<64> l000000000040C9F0
l000000000040C9C2:
l000000000040C9F0:
	word64 r12_34 = 0x416919<u64>
	word64 rax_35 = getpwuid(edi)
	word64 rdi_39 = 0x11<u64>
	branch rax_35 == 0<64> l000000000040CA16
l000000000040CA07:
	r12_34 = Mem15[rax_35:word64]
	rdi_39 = strlen(r12_34) + 0x11<64>
l000000000040CA16:
	word64 rax_47 = fn0000000000410C40(rdi_39)
	Mem54[rax_47:word32] = edi
	strcpy(rax_47 + 0x10<64>, r12_34)
	word64 rax_59 = Mem54[0x000000000061B1F8<p64>:word64]
	Mem60[0x000000000061B1F8<p64>:word64] = rax_47
	Mem61[rax_47 + 8<64>:word64] = rax_59
	rbx_16 = rax_47
l000000000040C9D5:
	word64 rax_100 = 0<u64>
	word64 rdx_67 = rbx_16 + 0x10<64>
	branch Mem65[rbx_16 + 0x10<64>:byte] == 0<8> l000000000040C9E7
l000000000040C9E3_1:
	rax_100 = rdx_67
l000000000040C9E7:
	return rax_100
fn000000000040C9B0_exit:


word64 fn000000000040CB40(word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
//      fn0000000000407EA0
// MayUse:  rdi:[0..31]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r12 rbp rbx rsp
fn000000000040CB40_entry:
	word32 edi = SLICE(rdi, word32, 0)
l000000000040CB40:
	word64 rbx_16 = Mem15[0x000000000061B1E8<p64>:word64]
	branch rbx_16 != 0<64> l000000000040CB61
l000000000040CB61:
	branch Mem15[rbx_16:word32] != edi l000000000040CB58
l000000000040CB58:
	rbx_16 = Mem15[rbx_16 + 8<64>:word64]
	branch rbx_16 == 0<64> l000000000040CB80
l000000000040CB52:
l000000000040CB80:
	word64 r12_34 = 0x416919<u64>
	word64 rax_35 = getgrgid(edi)
	word64 rdi_39 = 0x11<u64>
	branch rax_35 == 0<64> l000000000040CBA6
l000000000040CB97:
	r12_34 = Mem15[rax_35:word64]
	rdi_39 = strlen(r12_34) + 0x11<64>
l000000000040CBA6:
	word64 rax_47 = fn0000000000410C40(rdi_39)
	Mem54[rax_47:word32] = edi
	strcpy(rax_47 + 0x10<64>, r12_34)
	word64 rax_59 = Mem54[0x000000000061B1E8<p64>:word64]
	Mem60[0x000000000061B1E8<p64>:word64] = rax_47
	Mem61[rax_47 + 8<64>:word64] = rax_59
	rbx_16 = rax_47
l000000000040CB65:
	word64 rax_100 = 0<u64>
	word64 rdx_67 = rbx_16 + 0x10<64>
	branch Mem65[rbx_16 + 0x10<64>:byte] == 0<8> l000000000040CB77
l000000000040CB73_1:
	rax_100 = rdx_67
l000000000040CB77:
	return rax_100
fn000000000040CB40_exit:


void fn000000000040CCD0(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406B70
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r8 rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040CCD0_entry:
l000000000040CCD0:
	Mem9[rsi + 0x14<64>:byte] = 0<8>
	word64 rcx_17 = rsi + 0x14<64>
	branch rdi < 0<64> l000000000040CD28
l000000000040CD28:
l000000000040CD30:
	word64 rdx_25 = (SLICE(rdi *s128 0x6666666666666667<64>, word64, 64) >> 2<64>) - (rdi >> 0x3F<64>)
	rcx_17 = rcx_17 - 1<64>
	Mem38[rcx_17:byte] = SLICE(rdx_25, byte, 0) * 0xA<8> + 0x30<8> - SLICE(rdi, byte, 0)
	rdi = rdx_25
	branch rdx_25 != 0<64> l000000000040CD30
l000000000040CD5B:
	Mem43[rcx_17 - 1<64>:byte] = 0x2D<8>
	return
l000000000040CCE7:
l000000000040CCF0:
	word64 rdx_55 = (SLICE(rdi *s128 0x6666666666666667<64>, word64, 64) >> 2<64>) - (rdi >> 0x3F<64>)
	rcx_17 = rcx_17 - 1<64>
	Mem65[rcx_17:byte] = SLICE(rdi, byte, 0) - SLICE(rdx_55, byte, 0) * 0xA<8> + 0x30<8>
	rdi = rdx_55
	branch rdx_55 != 0<64> l000000000040CCF0
l000000000040CD20:
	return
fn000000000040CCD0_exit:


word64 fn000000000040CD70(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405D50
//      fn0000000000406B70
//      fn0000000000407870
//      fn0000000000407EA0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040CD70_entry:
l000000000040CD70:
	Mem6[rsi + 0x14<64>:byte] = 0<8>
	word64 rcx_10 = rsi + 0x14<64>
l000000000040CD88:
	word64 rdx_14 = SLICE(rdi *u128 0xCCCCCCCCCCCCCCCD<64>, word64, 64)
	rcx_10 = rcx_10 - 1<64>
	Mem25[rcx_10:byte] = SLICE(rdi, byte, 0) - (SLICE(rdx_14 >>u 3<64>, byte, 0) + SLICE(rdx_14 >>u 3<64>, byte, 0) * 4<8>) * 2<8> + 0x30<8>
	rdi = rdx_14 >>u 3<64>
	branch rdx_14 >>u 3<64> != 0<64> l000000000040CD88
l000000000040CDAE:
	return rcx_10
fn000000000040CD70_exit:


word64 fn000000000040CDC0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word32 r8d, word32 r9d)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  r8d:[0..31] r9d:[0..31] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040CDC0_entry:
l000000000040CDC0:
	word64 r12_162
	word64 rbp_128
	word64 r12_312
	word64 rcx_281
	word64 qwLoc58_563
	word64 rax_123
	word64 r15_117
	word64 rbx_28 = CONVERT(r9d, word32, uint64)
	word64 rax_36 = strlen(rdi)
	word64 r13_14 = rsi
	byte bl_37 = SLICE(rbx_28, byte, 0)
	word64 qwLoc60_559 = rdi
	word64 r14_227 = rax_36
	branch (bl_37 & 2<8>) == 0<8> l000000000040CF60
l000000000040CF60:
	branch __ctype_get_mb_cur_max() <=u 1<64> l000000000040CDFA
l000000000040CF6F:
	word64 rax_51 = mbstowcs(0<u64>, rdi, 0<u64>)
	branch rax_51 != 0xFFFFFFFFFFFFFFFF<64> l000000000040CFA8
l000000000040CFA8:
	word64 rax_58 = malloc((rax_51 + 1<64>) * 4<64>)
	qwLoc58_563 = rax_58
	branch rax_58 == 0<64> l000000000040D160
l000000000040D160:
	branch (bl_37 & 1<8>) == 0<8> l000000000040CF8C
l000000000040D169:
	r15_117 = rax_36
	rbp_128 = 0<u64>
l000000000040CFCF:
	branch mbstowcs(rax_58, rdi, rax_51 + 1<64>) == 0<64> l000000000040CE03
l000000000040CFEC:
	word64 qwLoc48_572
	Mem80[rax_58 - 4<64> + (rax_51 + 1<64>) * 4<64>:word32] = 0<32>
	word64 rdi_107 = CONVERT(Mem80[rax_58:word32], word32, uint64)
	branch SLICE(rdi_107, word32, 0) == 0<32> l000000000040D106
l000000000040D106:
	r15_117 = CONVERT(wcswidth(rax_58, rax_51 + 1<64>), int32, int64)
l000000000040D004:
	word64 r15_103 = rax_58
	byte bLoc39_564 = 0<8>
l000000000040D010:
	branch iswprint(SLICE(rdi_107, wint_t, 0)) != 0<32> l000000000040D025
l000000000040D019:
	Mem99[r15_103:word32] = 0xFFFD<32>
	bLoc39_564 = 1<8>
l000000000040D025:
	r15_103 = r15_103 + 4<64>
	rdi_107 = CONVERT(Mem104[r15_103:word32], word32, uint64)
	branch SLICE(rdi_107, word32, 0) != 0<32> l000000000040D010
l000000000040D030:
	r15_117 = CONVERT(wcswidth(rax_58, rax_51 + 1<64>), int32, int64)
	branch bLoc39_564 == 0<8> l000000000040D118
l000000000040D118:
	rax_123 = Mem122[rcx:word64]
	branch r15_117 <=u rax_123 l000000000040CF28
l000000000040CF28:
	rbp_128 = 0<u64>
l000000000040D125:
	qwLoc48_572 = rax_36 + 1<64>
l000000000040D04D:
	qwLoc48_572 = wcstombs(0<u64>, rax_58, 0<u64>) + 1<64>
l000000000040D064:
	word64 rax_150 = malloc(qwLoc48_572)
	rbp_128 = rax_150
	branch rax_150 == 0<64> l000000000040D138
l000000000040D138:
	branch (bl_37 & 1<8>) != 0<8> l000000000040CE08
l000000000040D141:
	r12_162 = 0xFFFFFFFFFFFFFFFF<64>
l000000000040D07A:
	word64 r14_173
	word64 rdi_168 = CONVERT(Mem165[rax_58:word32], word32, uint64)
	word64 rax_164 = Mem148[rcx:word64]
	branch SLICE(rdi_168, word32, 0) == 0<32> l000000000040D173
l000000000040D173:
	r14_173 = rax_58
	r15_117 = 0<u64>
l000000000040D092:
	r14_173 = rax_58
	r15_117 = 0<u64>
l000000000040D0BA:
	word64 rax_191
	word32 eax_186 = wcwidth(SLICE(rdi_168, wchar_t, 0))
	branch eax_186 != 0xFFFFFFFF<32> l000000000040D0A0
l000000000040D0A0:
	rax_191 = CONVERT(eax_186, word32, int64) + r15_117
	branch rax_164 <u rax_191 l000000000040D0E0
l000000000040D0C4:
	Mem199[r14_173:word32] = 0xFFFD<32>
	rax_191 = r15_117 + 1<u64>
	branch rax_164 >=u rax_191 l000000000040D0AC
l000000000040D0AC:
	r14_173 = r14_173 + 4<64>
	rdi_168 = CONVERT(Mem205[r14_173:word32], word32, uint64)
	r15_117 = rax_191
	branch SLICE(rdi_168, word32, 0) == 0<32> l000000000040D0E0
l000000000040D0DA:
l000000000040D0E0:
	Mem224[r14_173:word32] = 0<32>
	qwLoc60_559 = rax_150
	r14_227 = wcstombs(rax_150, rax_58, qwLoc48_572)
l000000000040CF83:
	branch (bl_37 & 1<8>) != 0<8> l000000000040D14D
l000000000040D14D:
	r15_117 = rax_36
	qwLoc58_563 = 0<64>
	rbp_128 = 0<u64>
l000000000040CF8C:
	qwLoc58_563 = 0<64>
	rbp_128 = 0<u64>
	r12_162 = 0xFFFFFFFFFFFFFFFF<64>
l000000000040CDFA:
	qwLoc58_563 = 0<64>
l000000000040CE03:
	r15_117 = rax_36
	rbp_128 = 0<u64>
l000000000040CE08:
	rax_123 = Mem262[rcx:word64]
	branch r15_117 <=u rax_123 l000000000040CF2A
l000000000040CF2A:
	branch r15_117 >=u rax_123 l000000000040D180
l000000000040D180:
	rax_123 = r15_117
l000000000040CF33:
	Mem284[rcx:word64] = r15_117
	rcx_281 = rax_123 - r15_117
	branch r8d != 0<32> l000000000040CE2A
l000000000040CE15:
	r14_227 = rax_123
l000000000040CE1A:
	Mem302[rcx:word64] = rax_123
	rcx_281 = 0<u64>
	branch r8d == 0<32> l000000000040CF4C
l000000000040CF4C:
	r12_312 = rcx_281
	rcx_281 = 0<u64>
l000000000040CE2A:
	word32 ecx_325 = SLICE(rcx_281, word32, 0)
	r12_312 = 0<u64>
	branch r8d == 1<32> l000000000040CE3E
l000000000040CE32:
	r12_312 = rcx_281 >>u 1<64>
	rcx_281 = CONVERT(ecx_325 & 1<32>, word32, uint64) + r12_312
l000000000040CE3E:
	word32 ebx_365 = SLICE(rbx_28, word32, 0)
	branch (bl_37 & 4<8>) == 0<8> l000000000040CE47
l000000000040CE43_1:
	rcx_281 = 0<u64>
l000000000040CE47:
	branch (ebx_365 & 8<32>) == 0<32> l000000000040CE4E
l000000000040CE4A_1:
	r12_312 = 0<u64>
l000000000040CE4E:
	branch rdx == 0<64> l000000000040CEF9
l000000000040CE5A:
	word64 rdx_392 = rcx_281 - 1<64>
	word64 rbx_410 = rsi - 1<64> + rdx
	branch rcx_281 == 0<64> l000000000040CE97
l000000000040CE6D:
	branch rsi >=u rbx_410 l000000000040CE97
l000000000040CE72:
	word64 rax_415 = 0<u64>
l000000000040CE89:
	r13_14 = r13_14 + 1<64>
	Mem424[r13_14 - 1<64>:byte] = 0x20<8>
	branch rdx_392 != rax_415 l000000000040CE80
l000000000040CE80:
	rax_415 = rax_415 + 1<64>
	branch r13_14 == rbx_410 l000000000040CE97
l000000000040CE97:
	Mem437[r13_14:byte] = 0<8>
	word64 rdx_438 = rbx_410 - r13_14
	branch rdx_438 <=u r14_227 l000000000040CEB6
l000000000040CEB2_1:
	rdx_438 = r14_227
l000000000040CEB6:
	word64 rax_465 = mempcpy(r13_14, qwLoc60_559, rdx_438)
	word64 rdx_474 = rax_465
	word64 rsi_475 = r12_312 - 1<64>
	branch r12_312 == 0<64> l000000000040CEF6
l000000000040CECD:
	branch rbx_410 <=u rax_465 l000000000040CEF6
l000000000040CED2:
	word64 rax_484 = 0<u64>
l000000000040CEE9:
	rdx_474 = rdx_474 + 1<64>
	Mem493[rdx_474 - 1<64>:byte] = 0x20<8>
	branch rsi_475 != rax_484 l000000000040CEE0
l000000000040CEE0:
	rax_484 = rax_484 + 1<64>
	branch rdx_474 == rbx_410 l000000000040CEF6
l000000000040CEF6:
	Mem500[rdx_474:byte] = 0<8>
l000000000040CEF9:
	r12_162 = r12_312 + (rcx_281 + r14_227)
l000000000040CEFF:
	free(qwLoc58_563)
	free(rbp_128)
	return r12_162
fn000000000040CDC0_exit:


word32 fn000000000040D240(word32 edx, word64 rsi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004052D0
//      fn0000000000406B70
//      fn000000000040D420
// MayUse:  fs:[0..15] rdi:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rcx rdi rsp
fn000000000040D240_entry:
	word32 edx = SLICE(rdx, word32, 0)
l000000000040D240:
	word64 rax_205
	word64 rax_31 = Mem28[fs:0x28<32>:word64]
	word64 r13_18 = rdi + rsi
	word64 rbp_110 = rdi
	branch __ctype_get_mb_cur_max() <=u 1<64> l000000000040D370
l000000000040D370:
	branch rdi >=u r13_18 l000000000040D406
l000000000040D379:
	word64 rcx_44 = Mem32[__ctype_b_loc():word64]
	word64 rax_506 = 0<64>
l000000000040D398:
	rbp_110 = rbp_110 + 1<64>
	word64 rdx_60 = CONVERT(Mem32[rcx_44 + CONVERT(Mem32[rbp_110 - 1<64>:byte], byte, uint64) * 2<64>:word16], word16, uint64)
	word32 eax_77 = SLICE(rax_506, word32, 0)
	word32 edx_69 = SLICE(rdx_60, word32, 0)
	branch (SLICE(rdx_60, byte, 8) & 0x40<8>) != 0<8> l000000000040D3B2
l000000000040D3A9:
	branch (edx & 2<32>) != 0<32> l000000000040D369
l000000000040D3AD:
	branch (edx_69 & 2<32>) != 0<32> l000000000040D393
l000000000040D3B2:
	branch eax_77 != 0x7FFFFFFF<32> l000000000040D390
l000000000040D390:
	rax_506 = CONVERT(eax_77 + 1<32>, word32, uint64)
l000000000040D393:
	rax_205 = rax_506 (alias)
	branch rbp_110 == r13_18 l000000000040D3C5
l000000000040D3B9:
l000000000040D277:
	branch rdi >=u r13_18 l000000000040D406
l000000000040D406:
	rax_205 = 0<u64>
l000000000040D280:
	word32 r12d_155 = 0<32>
l000000000040D2AC:
	word64 rax_113 = CONVERT(Mem111[rbp_110:byte], byte, uint64)
	byte al_114 = SLICE(rax_113, byte, 0)
	word32 eax_119 = SLICE(rax_113, word32, 0)
	branch al_114 <= 0x3F<8> l000000000040D290
l000000000040D290:
	branch al_114 >= 0x25<8> l000000000040D29B
l000000000040D294:
	branch SLICE(eax_119, byte, 0) >u 0x23<8> || SLICE(eax_119, byte, 0) <u 0x20<8> l000000000040D2C3
l000000000040D2B4:
	branch al_114 < 0x41<8> l000000000040D2C3
l000000000040D2B8:
	branch al_114 <= 0x5F<8> l000000000040D29B
l000000000040D2BC:
	branch SLICE(eax_119, byte, 0) <=u 0x7E<8> l000000000040D29B
l000000000040D2C3:
l000000000040D2F4:
	word64 rax_145 = mbrtowc(fp - 0x4C<64>, rbp_110, r13_18 - rbp_110, fp - 0x48<64>)
	word64 rbx_147 = rax_145
	branch rax_145 == 0xFFFFFFFFFFFFFFFF<64> l000000000040D360
l000000000040D360:
	branch (edx & 1<32>) == 0<32> l000000000040D29B
l000000000040D29B:
	rbp_110 = rbp_110 + 1<64>
	r12d_155 = r12d_155 + 1<32> (alias)
l000000000040D315:
	branch rax_145 == 0xFFFFFFFFFFFFFFFE<64> l000000000040D3E8
l000000000040D3E8:
	branch (edx & 1<32>) != 0<32> l000000000040D369
l000000000040D3F1:
	rbp_110 = r13_18
	r12d_155 = r12d_155 + 1<32> (alias)
	branch true l000000000040D2AC
l000000000040D31F:
	word64 rdi_174 = CONVERT(dwLoc4C, word32, uint64)
	branch rax_145 != 0<64> l000000000040D32F
l000000000040D32B_1:
	rbx_147 = 1<u64>
l000000000040D32F:
	word32 eax_182 = wcwidth(SLICE(rdi_174, wchar_t, 0))
	branch eax_182 >= 0<32> l000000000040D2D0
l000000000040D2D0:
	branch eax_182 > 0x7FFFFFFF<32> - r12d_155 l000000000040D3C0
l000000000040D2E0:
	r12d_155 = r12d_155 + eax_182 (alias)
l000000000040D338:
	branch (edx & 2<32>) != 0<32> l000000000040D369
l000000000040D369:
	rax_205 = 0xFFFFFFFF<u64>
l000000000040D33D:
	branch iswcntrl(dwLoc4C) != 0<32> l000000000040D2E3
l000000000040D34A:
	branch r12d_155 == 0x7FFFFFFF<32> l000000000040D3C0
l000000000040D3C0:
	rax_205 = 0x7FFFFFFF<u64>
l000000000040D353:
	r12d_155 = r12d_155 + 1<32> (alias)
l000000000040D2E3:
	rbp_110 = rbp_110 + rbx_147
	branch mbsinit(fp - 0x48<64>) != 0<32> l000000000040D2A3
l000000000040D2A3:
	branch r13_18 <=u rbp_110 l000000000040D401
l000000000040D401:
	rax_205 = CONVERT(r12d_155, word32, uint64)
l000000000040D3C5:
	branch (rax_31 ^ Mem257[fs:0x28<32>:word64]) != 0<64> l000000000040D40A
l000000000040D40A:
	__stack_chk_fail()
l000000000040D3D5:
	return SLICE(rax_205, word32, 0)
fn000000000040D240_exit:


word32 fn000000000040D420(word32 esi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405700
//      fn00000000004061B0
//      fn0000000000406B70
//      fn0000000000407EA0
// MayUse:  esi:[0..31] fs:[0..15] rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi Top
// Preserved: rbp rbx rdi rsp
fn000000000040D420_entry:
l000000000040D420:
	word64 rax_16 = strlen(rdi)
	word64 rdx_22 = CONVERT(esi, word32, uint64)
l000000000040D43E_thunk_fn000000000040D240:
	return fn000000000040D240(SLICE(rdx_22, word32, 0), rax_16, rdi, fs)
fn000000000040D420_exit:


word64 fn000000000040D450(word64 rcx, word64 rdx, word64 rbx, word64 rsi, word64 rdi, ptr64 & rdxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040D450
//      fn000000000040D690
// MayUse:  rbx:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rcx rdx
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040D450_entry:
l000000000040D450:
	word64 qwLoc30_292 = rbx
	branch rsi >u 2<64> l000000000040D490
l000000000040D490:
	word64 r12_139
	word64 rax_39 = rdi + (rsi >>u 1<64>) * 8<64>
	word64 qwLoc40_296 = rax_39
	rcx = fn000000000040D450(rcx, rdx, rdi, rsi - (rsi >>u 1<64>), rax_39, out rdx)
	branch rsi >>u 1<64> == 1<64> l000000000040D570
l000000000040D570:
	r12_139 = Mem43[rdi:word64]
	Mem55[qwLoc48:word64] = r12_139
l000000000040D4C5:
	word64 r13_62 = rdi + (rsi >>u 3<64>) * 8<64>
	word64 rdx_426
	fn000000000040D450(rcx, qwLoc48, rdi, qwLoc58 - (rsi >>u 3<64>), r13_62, out rdx_426)
	word64 rdx_105
	rcx = fn000000000040D450(rcx, qwLoc48, rdi, rsi >>u 3<64>, rdi, out rdx_105)
	word64 r14_111 = rsi >>u 3<64>
	word64 r15_210 = qwLoc48 + 8<64>
	word64 r12_208 = Mem66[rdi:word64]
	word64 r13_116 = Mem66[r13_62:word64]
	qwLoc40_296 = 0<64>
l000000000040D53B:
	word64 rax_106
	call rcx (retsize: 8;)
		uses: rax:rax_106,rcx:rcx_97,rdi:r12_92,rdx:rdx_99,rsi:r13_90,Stack +0000:qwLoc58,Stack +0010:qwLoc48,Stack +0020:qwLoc38
		defs: rax:rax_106,rcx:rcx_102,rdx:rdx_105
	branch SLICE(rax_106, word32, 0) > 0<32> l000000000040D520
l000000000040D520:
	Mem114[r15_210 - 8<64>:word64] = r13_116
	r14_111 = r14_111 + 1<64>
	branch qwLoc48 == r14_111 l000000000040D634
l000000000040D533:
	r13_116 = Mem114[rdi + r14_111 * 8<64>:word64]
l000000000040D547:
	word64 v22_117 = qwLoc40_296 + 1<64>
	Mem119[r15_210 - 8<64>:word64] = r12_208
	qwLoc40_296 = v22_117
	branch rbx == v22_117 l000000000040D625
l000000000040D625:
	qwLoc40_296 = r14_111
	qwLoc30_292 = qwLoc48
l000000000040D634:
	word64 rdx_132 = qwLoc30_292 - qwLoc40_296
	memcpy(r15_210, rdi + qwLoc40_296 * 8<64>, rdx_132 << 3<64>)
	rdx = rdx_132 << 3<64>
	r12_139 = Mem127[qwLoc38:word64]
l000000000040D57B:
	word64 r14_143 = rsi >>u 1<64>
	word64 r15_145 = 1<u64>
	word64 r13_147 = Mem146[qwLoc40_296:word64]
l000000000040D5B7:
	word64 rax_164
	call rcx (retsize: 8;)
		uses: rax:rax_164,rcx:rcx_155,rdi:r12_150,rdx:rdx_157,rsi:r13_148,Stack +0018:qwLoc58,Stack +0028:qwLoc48,Stack +0038:qwLoc38,Stack +FFFFFFB0:qwLoc58,Stack +FFFFFFC0:qwLoc48
		defs: rax:rax_164,rcx:rcx_160,rdx:rdx_163
	branch SLICE(rax_164, word32, 0) > 0<32> l000000000040D5A0
l000000000040D5A0:
	Mem172[rdi - 8<64> + r15_145 * 8<64>:word64] = r13_147
	r14_143 = r14_143 + 1<64>
	branch rsi == r14_143 l000000000040D5F0
l000000000040D5F0:
	word64 r15_187 = (rsi >>u 1<64>) - qwLoc58
	memcpy(rdi + r15_145 * 8<64>, rdx + qwLoc58 * 8<64>, r15_187 * 8<64>)
	rdxOut = r15_187 * 8<64>
	return rdx
l000000000040D5AF:
	r13_147 = Mem172[rdi + r14_143 * 8<64>:word64]
l000000000040D5C3:
	Mem199[rdi - 8<64> + r15_145 * 8<64>:word64] = r12_139
	branch rsi >>u 1<64> == qwLoc58 + 1<64> l000000000040D479
l000000000040D5DE:
	rcx = rdx
	r12_139 = Mem199[rdx + (qwLoc58 + 1<64>) * 8<64>:word64]
l000000000040D5B3:
	r15_145 = r15_145 + 1<64>
l000000000040D561:
	r12_208 = Mem119[rdi + v22_117 * 8<64>:word64]
l000000000040D537:
	r15_210 = r15_210 + 8<64>
l000000000040D473:
	branch rsi == 2<64> l000000000040D660
l000000000040D660:
	word64 r13_213 = Mem31[rdi + 8<64>:word64]
	word64 r12_214 = Mem31[rdi:word64]
	word64 rax_221
	call rcx (retsize: 8;)
		uses: rax:rax_221,rcx:rcx,rdi:r12_214,rdx:rdx,rsi:r13_213,Stack +0018:qwLoc58,Stack +0028:qwLoc48,Stack +0038:qwLoc38
		defs: rax:rax_221,rcx:rcx_217,rdx:rdx_220
	branch SLICE(rax_221, word32, 0) <= 0<32> l000000000040D479
l000000000040D677:
	Mem226[rdi:word64] = r13_213
	Mem227[rdi + 8<64>:word64] = r12_214
	rdxOut = rdx
	return rcx
l000000000040D479:
	rdxOut = rdx
	return rcx
fn000000000040D450_exit:


void fn000000000040D690(word64 rdx, word64 rbx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000404E80
// MayUse:  rbx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040D690_entry:
l000000000040D690:
	word64 rax_6 = rdi + rsi * 8<64>
l000000000040D69A_thunk_fn000000000040D450:
	word64 rdx_20
	fn000000000040D450(rdx, rax_6, rbx, rsi, rdi, out rdx_20)
	return
fn000000000040D690_exit:


void fn000000000040D6A0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rbx rsp
fn000000000040D6A0_entry:
l000000000040D6A0:
	word64 rbx_10 = rdi
	branch rdi == 0<64> l000000000040D713
l000000000040D713:
	fwrite(0x415FA0<u64>, 1<u64>, 0x37<u64>, Mem9[0x000000000061A650<p64>:word64])
	abort()
l000000000040D6A9:
	word64 rax_22 = strrchr(rdi, '/')
	branch rax_22 == 0<64> l000000000040D703
l000000000040D6B8:
	word64 rcx_28 = rax_22 + 1<64> - rdi
	byte SCZO_29 = cond(rcx_28 - 6<64>)
	bool Z_44 = SLICE(SCZO_29, bool, 2)
	bool v21_102 = rcx_28 != 6<64>
	bool C_71 = SLICE(SCZO_29, bool, 1)
	branch rcx_28 <= 6<64> l000000000040D703
l000000000040D6C8:
	word64 rsi_31 = rax_22 - 6<64>
	word64 rdi_33 = 0x415FD8<u64>
	word64 rcx_35 = 7<u64>
l000000000040D6D6:
	bool C_73 = SLICE(C_71, bool, 1)
	branch rcx_35 == 0<64> l000000000040D6D8
l000000000040D6D6_1:
	byte SCZO_40 = cond(Mem9[rsi_162:byte] - Mem9[rdi_163:byte])
	Z_44 = SLICE(SCZO_40, bool, 2) (alias)
	v21_102 = Mem9[rsi_162:byte] != Mem9[rdi_163:byte]
	C_71 = SLICE(SCZO_40, bool, 1) (alias)
	C_73 = SLICE(SCZO_40, bool, 1) (alias)
	rsi_31 = rsi_162 + 1<i64>
	rdi_33 = rdi_163 + 1<i64>
	rcx_35 = rcx_35 - 1<64>
	rsi_162 = rsi_31
	rdi_163 = rdi_33
	branch Mem9[rsi_162:byte] != Mem9[rdi_163:byte] l000000000040D6D6
l000000000040D6D8:
	bool C_75 = SLICE(C_73, bool, 2)
	bool v29_110 = Z_44 | C_75
	bool v25_106 = Z_44 | C_75
	branch v21_102 l000000000040D703
l000000000040D6DA:
	word64 rcx_49 = 3<u64>
	word64 rsi_52 = rax_22 + 1<64>
	word64 rdi_54 = 0x415FE0<u64>
l000000000040D6E7:
	branch rcx_49 == 0<64> l000000000040D6E9
l000000000040D6E7_2:
	v29_110 = Mem9[rsi_164:byte] <u Mem9[rdi_165:byte]
	v25_106 = Mem9[rsi_164:byte] >u Mem9[rdi_165:byte]
	rsi_52 = rsi_164 + 1<i64>
	rdi_54 = rdi_165 + 1<i64>
	rcx_49 = rcx_49 - 1<64>
	rsi_164 = rsi_52
	rdi_165 = rdi_54
	branch Mem9[rsi_164:byte] != Mem9[rdi_165:byte] l000000000040D6E7
l000000000040D6E9:
	rbx_10 = rax_22 + 1<64>
	branch CONVERT(v25_106, bool, int8) != CONVERT(v29_110, bool, int8) l000000000040D703
l000000000040D6F8:
	Mem88[0x000000000061A600<p64>:word64] = rax_22 + 4<64>
	rbx_10 = rax_22 + 4<64>
l000000000040D703:
	Mem92[0x000000000061B200<p64>:word64] = rbx_10
	Mem93[0x000000000061A648<p64>:word64] = rbx_10
	return
fn000000000040D6A0_exit:


void fn000000000040D740(word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040E970
// MayUse:  esi:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx Top
// Preserved: rsp
fn000000000040D740_entry:
l000000000040D740:
	word64 rcx_10 = 7<u64>
	word64 rdi_11 = fp - 0x48<64>
l000000000040D754:
	branch rcx_10 == 0<64> l000000000040D757
l000000000040D757:
	branch esi == 8<32> l000000000040D7A1
l000000000040D7A1:
	abort()
l000000000040D759:
	Mem21[rdi:word64] = SEQ(dwLoc44, esi)
	Mem23[rdi + 8<64>:word64] = qwLoc40
	Mem25[rdi + 0x10<64>:word64] = qwLoc38
	Mem27[rdi + 0x18<64>:word64] = qwLoc30
	Mem29[rdi + 0x20<64>:word64] = qwLoc28
	Mem31[rdi + 0x28<64>:word64] = qwLoc20
	Mem33[rdi + 0x30<64>:word64] = qwLoc18
	return
fn000000000040D740_exit:
l000000000040D754_1:
	Mem39[rdi_11:word64] = 0<u64>
	rdi_11 = rdi_11 + 8<i64>
	rcx_10 = rcx_10 - 1<64>


word64 fn000000000040D7B0(word32 esi, word64 rdi, selector fs, ptr64 & rcxOut, ptr64 & rdxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040D8A0
// MayUse:  esi:[0..31] fs:[0..15] rdi:[0..63]
// LiveOut: rax rcx rdx
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: r12 r13 rbp rbx rsp
fn000000000040D7B0_entry:
l000000000040D7B0:
	word64 rax_27 = dcgettext(0<u64>, rdi, 5<i32>)
	word64 rdx_176 = 5<u64>
	word64 rbx_106 = rax_27
	branch rax_27 == rdi l000000000040D7E8
l000000000040D7E8:
	rcx = fn0000000000411900(fs)
	rdx_176 = CONVERT(CONVERT(Mem25[rax_27:byte], byte, word32) & 0xFFFFFFDF<32>, word32, uint64)
	byte dl_43 = SLICE(rdx_176, byte, 0)
	branch dl_43 != 0x55<8> l000000000040D850
l000000000040D850:
	branch dl_43 != 0x47<8> l000000000040D838
l000000000040D855:
	rdx_176 = CONVERT(CONVERT(Mem25[rax_27 + 1<64>:byte], byte, word32) & 0xFFFFFFDF<32>, word32, uint64)
	branch SLICE(rdx_176, byte, 0) != 0x42<8> l000000000040D838
l000000000040D861:
	branch Mem25[rax_27 + 2<64>:byte] != 0x31<8> l000000000040D838
l000000000040D867:
	branch Mem25[rax_27 + 3<64>:byte] != 0x38<8> l000000000040D838
l000000000040D86D:
	branch Mem25[rax_27 + 4<64>:byte] != 0x30<8> l000000000040D838
l000000000040D873:
	branch Mem25[rax_27 + 5<64>:byte] != 0x33<8> l000000000040D838
l000000000040D879:
	branch Mem25[rax_27 + 6<64>:byte] != 0x30<8> l000000000040D838
l000000000040D87F:
	branch Mem25[rax_27 + 7<64>:byte] != 0<8> l000000000040D838
l000000000040D885:
	rbx_106 = 0x415FED<u64>
	branch Mem25[rax_27:byte] == 0x60<8> l000000000040D89B
l000000000040D897_1:
	rbx_106 = 0x415FE8<u64>
l000000000040D89B:
l000000000040D7F8:
	rdx_176 = CONVERT(CONVERT(Mem25[rax_27 + 1<64>:byte], byte, word32) & 0xFFFFFFDF<32>, word32, uint64)
	branch SLICE(rdx_176, byte, 0) != 0x54<8> l000000000040D838
l000000000040D804:
	rdx_176 = CONVERT(CONVERT(Mem25[rax_27 + 2<64>:byte], byte, word32) & 0xFFFFFFDF<32>, word32, uint64)
	branch SLICE(rdx_176, byte, 0) != 0x46<8> l000000000040D838
l000000000040D810:
	branch Mem25[rax_27 + 3<64>:byte] != 0x2D<8> l000000000040D838
l000000000040D816:
	branch Mem25[rax_27 + 4<64>:byte] != 0x38<8> l000000000040D838
l000000000040D81C:
	branch Mem25[rax_27 + 5<64>:byte] != 0<8> l000000000040D838
l000000000040D838:
	rbx_106 = 0x415FEB<u64>
	branch esi == 7<32> l000000000040D84A
l000000000040D846_1:
	rbx_106 = 0x416DEA<u64>
l000000000040D84A:
l000000000040D822:
	rbx_106 = 0x415FE4<u64>
	branch Mem25[rax_27:byte] != 0x60<8> l000000000040D833
l000000000040D82F_1:
	rbx_106 = 0x415FF1<u64>
l000000000040D833:
l000000000040D7D7:
	rcxOut = rcx
	rdxOut = rdx_176
	return rbx_106
fn000000000040D7B0_exit:


word64 fn000000000040D8A0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word32 r8d, word32 r9d, selector fs, word64 qwArg08, word64 qwArg10, word64 qwArg18, ptr64 & rbxOut, ptr64 & rbpOut, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14Out, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040D8A0
//      fn000000000040E6F0
//      fn000000000040E930
// MayUse:  fs:[0..15] r8d:[0..31] r9d:[0..31] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63] Stack +0008:[0..63] Stack +0010:[0..63] Stack +0018:[0..63]
// LiveOut: r12 r13 r14 r15 rax rbp rbx rsp
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp Top
// Preserved: fs
fn000000000040D8A0_entry:
l000000000040D8A0:
	word64 rax_46 = Mem44[fs:0x28<32>:word64]
	byte al_63 = SLICE(r9d >>u 1<32>, byte, 0) & 1<8>
	word64 r15_1445 = rcx
	word32 dwLocC4_1463 = r8d
	word64 qwLoc88_1467 = qwArg10
	word64 qwLoc90_1469 = qwArg18
	word64 rax_50 = __ctype_get_mb_cur_max()
	byte bLocC5_1472 = al_63
	branch r8d >u 8<32> l000000000040E280
l000000000040E280:
	abort()
l000000000040D92D:
	word64 qwLoc98_1489
	byte bLocD8_1490
	word64 rsi_103
	word64 rdi_1303
	word64 rdx_102
	word64 rbx_111
	word64 rcx_2614
	word64 r14_155
	switch (r8d) { l000000000040D940 l000000000040E070 l000000000040DF10 l000000000040DF50 l000000000040DFB0 l000000000040DF90 l000000000040DFE0 l000000000040DFE0 l000000000040DFE0 }
l000000000040DFE0:
	word64 rcx_100
	rdx_102 = rdx
	rsi_103 = rsi
	rcx_100 = rcx
	branch r8d == 8<32> l000000000040E012
l000000000040DFE2:
	word64 rdx_2657
	word64 rcx_2656
	qwLoc88_1467 = fn000000000040D7B0(r8d, 0x415FF5<u64>, fs, out rcx_2656, out rdx_2657)
	qwLoc90_1469 = fn000000000040D7B0(r8d, 0x416DEA<u64>, fs, out rcx_100, out rdx_102)
l000000000040E012:
	rbx_111 = 0<u64>
	word64 rcx_2624 = rcx_100
	branch al_63 != 0<8> l000000000040E044
l000000000040E01B:
	rdx_102 = qwLoc88_1467
	byte al_119 = Mem113[qwLoc88_1467:byte]
	rcx_2624 = rcx_100 (alias)
	branch al_119 == 0<8> l000000000040E044
l000000000040E027:
l000000000040E030:
	word32 ecx_1369 = SLICE(rdi, word32, 0)
	word32 rcx_32_32_1245 = SLICE(rdi, word32, 32)
	word24 ecx_24_8_1399 = SLICE(ecx_1369, word24, 8)
	byte cl_2549 = SLICE(ecx_1369, byte, 0)
	branch rbx_111 >=u rsi l000000000040E038
l000000000040E035:
	Mem130[rdi + rbx_111:byte] = al_119
l000000000040E038:
	rbx_111 = rbx_111 + 1<64>
	al_119 = Mem135[qwLoc88_1467 + rbx_111:byte] (alias)
	rcx_2624 = SEQ(rcx_32_32_1245, ecx_24_8_1399, cl_2549) (alias)
	branch al_119 != 0<8> l000000000040E030
l000000000040E044:
	rdi_1303 = qwLoc90_1469
	qwLoc98_1489 = qwLoc90_1469
	r14_155 = strlen(qwLoc90_1469)
	bLocD8_1490 = 1<8>
	rcx_2614 = rcx_2624 (alias)
l000000000040DF90:
	bLocC5_1472 = 0<8>
	bLocD8_1490 = 1<8>
	r14_155 = 0<u64>
	qwLoc98_1489 = 0<64>
	rbx_111 = 0<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040DFB0:
	bLocC5_1472 = 1<8>
	bLocD8_1490 = 1<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x415FEB<64>
	rbx_111 = 0<u64>
	dwLocC4_1463 = 3<32>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040DF50:
	branch al_63 != 0<8> l000000000040E428
l000000000040E428:
	bLocD8_1490 = 1<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x415FEB<64>
	rbx_111 = 0<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040DF5B:
	branch rsi == 0<64> l000000000040E2B3
l000000000040E2B3:
	bLocD8_1490 = 1<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x415FEB<64>
	rbx_111 = 1<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040DF64:
	Mem206[rdi:byte] = 0x22<8>
	bLocD8_1490 = 1<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x415FEB<64>
	rbx_111 = 1<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040DF10:
	branch al_63 != 0<8> l000000000040E408
l000000000040E408:
	bLocD8_1490 = 0<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x416DEA<64>
	rbx_111 = 0<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040DF1B:
	branch rsi == 0<64> l000000000040E2D1
l000000000040E2D1:
	bLocD8_1490 = 0<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x416DEA<64>
	rbx_111 = 1<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040DF24:
	Mem234[rdi:byte] = 0x27<8>
	bLocD8_1490 = 0<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x416DEA<64>
	rbx_111 = 1<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040E070:
	bLocC5_1472 = 1<8>
	bLocD8_1490 = 0<8>
	r14_155 = 1<u64>
	qwLoc98_1489 = 0x416DEA<64>
	rbx_111 = 0<u64>
	dwLocC4_1463 = 2<32>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040D940:
	bLocC5_1472 = 0<8>
	bLocD8_1490 = 0<8>
	r14_155 = 0<u64>
	qwLoc98_1489 = 0<64>
	rbx_111 = 0<u64>
	rcx_2614 = rcx
	rdx_102 = rdx
	rdi_1303 = rdi
	rsi_103 = rsi
l000000000040D960:
	word64 rax_1137
	word64 rcx_2611
	word32 rcx_32_32_1236
	word64 r11_533
	word64 r13_417
	word24 ecx_24_8_1392
	word64 r9_1371 = r14_155
	word64 rbp_1056 = 0<u64>
	word64 r14_265 = rsi
	word64 r8_272 = rdx
	byte al_276 = bLocC5_1472 ^ 1<8>
	byte al_283 = bLocD8_1490 ^ 1<8>
	byte al_293 = CONVERT(rcx != 0<u64>, bool, int8)
	word64 rcx_2599 = rcx_2614
	branch rcx == 0xFFFFFFFFFFFFFFFF<64> l000000000040DB76
l000000000040D996:
	rcx_2611 = rcx_2614 (alias)
l000000000040D9A0:
	ecx_24_8_1392 = SLICE(rcx_2611, word24, 8) (alias)
	rcx_32_32_1236 = SLICE(rcx_2611, word32, 32) (alias)
	branch al_293 == 0<8> l000000000040DB86
l000000000040D9A8:
	word32 r11d_320
	word64 r13_317
	byte cl_304 = CONVERT(r9_1371 != 0<64>, bool, int8)
	word32 ecx_327 = SEQ(ecx_24_8_1392, cl_304)
	word64 rcx_1234 = SEQ(rcx_32_32_1236, ecx_24_8_1392, cl_304)
	branch r9_1371 == 0<64> l000000000040E0A0
l000000000040D9B4:
	branch bLocD8_1490 == 0<8> l000000000040E0A0
l000000000040D9BF:
	branch r15_1445 <u rbp_1056 + r9_1371 l000000000040E0A0
l000000000040E0A0:
	r13_317 = r8_272 + rbp_1056
	r11d_320 = 0<32> (alias)
l000000000040D9CD:
	r13_317 = r8_272 + rbp_1056
	rsi_103 = qwLoc98_1489
	rdx_102 = r9_1371
	rdi_1303 = r13_317
	rcx_1234 = CONVERT(ecx_327, word32, uint64)
	branch memcmp(r13_317, qwLoc98_1489, r9_1371) != 0<32> l000000000040E0B0
l000000000040E0B0:
	r11d_320 = 0<32> (alias)
l000000000040DA05:
	branch bLocC5_1472 != 0<8> l000000000040DC40
l000000000040DA10:
	r11d_320 = 1<32> (alias)
l000000000040DA20:
	word64 r12_2631 = CONVERT(Mem350[r13_317:byte], byte, uint64)
	byte r11b_407 = SLICE(r11d_320, byte, 0)
	word32 r9d_1302 = SLICE(r9_1371, word32, 0)
	word32 r8d_1267 = SLICE(r8_272, word32, 0)
	byte r12b_354 = SLICE(r12_2631, byte, 0)
	branch r12b_354 >u 0x7E<8> l000000000040DE18
l000000000040DE18:
	word64 r12_2608
	word64 rdx_2602
	byte r11b_1436
	word56 rdx_56_8_1280
	word64 rbx_1230
	word64 rcx_2616
	word64 rax_440
	word64 r12_2618
	byte dl_604
	branch rax_50 != 1<64> l000000000040E0C0
l000000000040E0C0:
	branch r15_1445 == 0xFFFFFFFFFFFFFFFF<64> l000000000040E285
l000000000040E285:
	r15_1445 = strlen(r8_272)
	r11b_407 = SLICE(r11d_320, byte, 0) (alias)
l000000000040E0D6:
	word64 rbx_398 = 0<u64>
	word32 r12d_1420 = 1<32>
	r13_417 = r8_272
l000000000040E11D:
	word64 rcx_2641
	word64 r12_2633
	word64 r14_427 = rbx_398 + rbp_1056
	word64 r15_429 = r8_272 + r14_427
	byte cl_2559 = SLICE(fp, byte, 0) - 0x48<8>
	rdi_1303 = fp - 0x4C<64>
	rsi_103 = r15_429
	word64 rax_432 = mbrtowc(fp - 0x4C<64>, r15_429, r15_1445 - r14_427, fp - 0x48<64>)
	branch rax_432 == 0<64> l000000000040E30E
l000000000040E30E:
	word64 rdx_451 = CONVERT(r12d_1420 ^ 1<32>, word32, uint64)
	rax_440 = rbx_398
	r12_2633 = CONVERT(r12b_354, byte, uint64)
	dl_604 = SLICE(rdx_451, byte, 0) (alias)
	rdx_56_8_1280 = SLICE(rdx_451, word56, 8) (alias)
	rcx_2641 = SEQ(SLICE(fp - 0x48<64>, word56, 8), cl_2559) (alias)
l000000000040E157:
	branch rax_432 == 0xFFFFFFFFFFFFFFFF<64> l000000000040E350
l000000000040E350:
	rax_440 = rbx_398
	r12_2633 = CONVERT(r12b_354, byte, uint64)
	dl_604 = 1<8> (alias)
	rdx_56_8_1280 = 0<56> (alias)
	rcx_2641 = SEQ(SLICE(fp - 0x48<64>, word56, 8), cl_2559) (alias)
l000000000040E161:
	branch rax_432 == 0xFFFFFFFFFFFFFFFE<64> l000000000040E391
l000000000040E391:
	rsi_103 = r14_427
	rax_440 = rbx_398
	r12_2633 = CONVERT(r12b_354, byte, uint64)
	branch r15_1445 <=u r14_427 l000000000040E3FE
l000000000040E3DB:
	branch Mem419[r15_429:byte] != 0<8> l000000000040E3F0
l000000000040E3F0:
	rax_440 = rax_440 + 1<64>
	branch r15_1445 >u rbp_1056 + rax_440 l000000000040E3E8
l000000000040E3E8:
	branch Mem419[r13_317 + rax_440:byte] == 0<8> l000000000040E3FE
l000000000040E3E1:
l000000000040E3FE:
	dl_604 = 1<8> (alias)
	rdx_56_8_1280 = 0<56> (alias)
	rcx_2641 = SEQ(SLICE(fp - 0x48<64>, word56, 8), cl_2559) (alias)
l000000000040E16B:
	word64 rcx_2646 = SEQ(SLICE(fp - 0x48<64>, word56, 8), cl_2559)
	branch bLocC5_1472 == 0<8> l000000000040E1BF
l000000000040E172:
	rcx_2646 = SEQ(SLICE(fp - 0x48<64>, word56, 8), cl_2559) (alias)
	branch dwLocC4_1463 != 2<32> l000000000040E1BF
l000000000040E179:
	rcx_2646 = SEQ(SLICE(fp - 0x48<64>, word56, 8), cl_2559) (alias)
	branch rax_432 == 1<64> l000000000040E1BF
l000000000040E17F:
	word64 rdx_512 = 1<u64>
l000000000040E190:
	rcx_2646 = CONVERT(CONVERT(Mem419[r15_429 + rdx_512:byte], byte, word32) - 0x5B<32>, word32, uint64)
	byte cl_522 = SLICE(rcx_2646, byte, 0)
	branch cl_522 >u 0x21<8> l000000000040E1B6
l000000000040E19D:
	branch (1<u64> << cl_522 & 0x20000002B<64>) != 0<64> l000000000040E260
l000000000040E260:
	r11_533 = r14_265
l000000000040E1B6:
	rdx_512 = rdx_512 + 1<64>
	branch rdx_512 != rax_432 l000000000040E190
l000000000040E1BF:
	rdi_1303 = fp - 0x48<64>
	branch iswprint(dwLoc4C) != 0<32> l000000000040E1DE
l000000000040E1DA_1:
	r12d_1420 = 0<32>
l000000000040E1DE:
	rbx_398 = rbx_398 + rax_432
	branch mbsinit(fp - 0x48<64>) == 0<32> l000000000040E11D
l000000000040E1EE:
	rsi_103 = CONVERT(r12d_1420, word32, uint64)
	word64 rdx_596 = CONVERT(SLICE(rsi_103, word32, 0) ^ 1<32>, word32, uint64)
	r12_2633 = CONVERT(r12b_354, byte, uint64)
	rax_440 = rbx_398
	dl_604 = SLICE(rdx_596, byte, 0) (alias)
	rdx_56_8_1280 = SLICE(rdx_596, word56, 8) (alias)
	rcx_2641 = rcx_2646 (alias)
l000000000040E22D:
	r11b_1436 = r11b_407
	r12_2631 = r12_2633 (alias)
	rcx_1234 = rcx_2641 (alias)
	branch rax_440 <=u 1<64> l000000000040DE61
l000000000040E237:
	rdx_2602 = SEQ(rdx_56_8_1280, dl_604 & bLocD8_1490) (alias)
	r12_2618 = r12_2633 (alias)
l000000000040DE24:
	word64 rdx_629 = CONVERT(Mem619[Mem619[__ctype_b_loc():word64] + CONVERT(r12b_354, byte, uint64) * 2<64>:word16], word16, uint64)
	word64 rdx_640 = CONVERT((SEQ(SLICE(rdx_629, word16, 16), SLICE(rdx_629, word16, 0) >>u 0xE<16>) ^ 1<32>) & 1<32>, word32, uint64)
	r11b_1436 = SLICE(r11d_320, byte, 0) (alias)
	rax_440 = 1<u64>
	dl_604 = SLICE(rdx_640, byte, 0) (alias)
	rdx_56_8_1280 = SLICE(rdx_640, word56, 8) (alias)
l000000000040DE61:
	word32 r12d_663 = SLICE(r12_2631, word32, 0)
	byte dl_648 = dl_604 & bLocD8_1490
	word32 r12_32_32_1018 = SLICE(r12_2631, word32, 32)
	rbx_1230 = rbx_111
	byte r12b_894 = SLICE(r12d_663, byte, 0)
	word24 r12d_24_8_1027 = SLICE(r12d_663, word24, 8)
	rdx_102 = SEQ(rdx_56_8_1280, dl_648) (alias)
	rdx_2602 = SEQ(rdx_56_8_1280, dl_648) (alias)
	r12_2618 = r12_2631 (alias)
	branch dl_648 == 0<8> l000000000040DAF8
l000000000040DAF8:
	word64 rcx_2635
	word64 rcx_2628
	word56 r12_56_8_1016
	branch al_276 == 0<8> l000000000040DB09
l000000000040DAFF:
	r12_56_8_1016 = SEQ(r12_32_32_1018, r12d_24_8_1027) (alias)
	rcx_2635 = rcx_1234 (alias)
	branch al_283 != 0<8> l000000000040DB2E
l000000000040DB09:
	rdi_1303 = qwArg08
	r12_56_8_1016 = SEQ(r12_32_32_1018, r12d_24_8_1027) (alias)
	rcx_2635 = rcx_1234 (alias)
	branch qwArg08 == 0<64> l000000000040DB2E
l000000000040DB13:
	rcx_2635 = CONVERT(r12d_663 & 0x1F<32>, word32, uint64)
	rdx_102 = CONVERT(SLICE(r12d_663, byte, 0) >>u 5<8>, byte, uint64)
	r12_56_8_1016 = SEQ(r12_32_32_1018, r12d_24_8_1027) (alias)
	branch (Mem647[qwArg08 + rdx_102 * 4<64>:word32] & 1<32> << SLICE(rcx_2635, byte, 0)) != 0<32> l000000000040DB33
l000000000040DB2E:
	rcx_2628 = rcx_2635 (alias)
	branch r11b_1436 == 0<8> l000000000040DB50
l000000000040DB33:
	branch bLocC5_1472 != 0<8> l000000000040DC40
l000000000040DB3E:
	branch rbx_111 >=u r14_265 l000000000040DB4C
l000000000040DB43:
	Mem730[rdi + rbx_111:byte] = 0x5C<8>
l000000000040DB4C:
	rbx_1230 = rbx_111 + 1<64>
	rcx_2628 = rcx_2635 (alias)
l000000000040DB50:
	rbp_1056 = rbp_1056 + 1<64>
	r12_2608 = SEQ(r12_56_8_1016, r12b_894) (alias)
	rcx_2616 = rcx_2628 (alias)
l000000000040DE6B:
	rbx_1230 = rbx_111
	byte dl_1423 = SLICE(rdx_2602, byte, 0)
	word64 rax_747 = rax_440 + rbp_1056
	word64 rdi_752 = CONVERT(bLocC5_1472, byte, uint64)
	word64 r12_1228 = r12_2618
l000000000040DEF0:
	word64 r12_2621
	word32 r12d_786 = SLICE(r12_1228, word32, 0)
	byte r12b_898 = SLICE(r12d_786, byte, 0)
	byte dil_758 = SLICE(rdi_752, byte, 0)
	word56 r12_56_8_1037 = SEQ(SLICE(r12_1228, word32, 32), SLICE(r12d_786, word24, 8))
	rdx_102 = rdx_2602 (alias)
	branch dl_1423 != 0<8> l000000000040DE80
l000000000040DE80:
	branch dil_758 != 0<8> l000000000040DC40
l000000000040DC40:
	r11_533 = r14_265
	r13_417 = r8_272
l000000000040DE89:
	branch rbx_1230 >=u r14_265 l000000000040DE92
l000000000040DE8E:
	Mem779[rdi + rbx_1230:byte] = 0x5C<8>
l000000000040DE92:
	branch r14_265 <=u rbx_1230 + 1<64> l000000000040DEAA
l000000000040DE9B:
	word64 rsi_788 = CONVERT(r12d_786, word32, uint64)
	Mem799[rdi + 1<64> + rbx_1230:byte] = (SLICE(rsi_788, byte, 0) >>u 6<8>) + 0x30<8>
l000000000040DEAA:
	rsi_103 = rbx_1230 + 2<64>
	branch r14_265 <=u rsi_103 l000000000040DEC5
l000000000040DEB3:
	word64 rsi_807 = CONVERT(r12d_786, word32, uint64)
	rsi_103 = CONVERT((SEQ(SLICE(rsi_807, word24, 8), SLICE(rsi_807, byte, 0) >>u 3<8>) & 7<32>) + 0x30<32>, word32, uint64)
	Mem821[rdi + 2<64> + rbx_1230:byte] = SLICE(rsi_103, byte, 0)
l000000000040DEC5:
	rbx_1230 = rbx_1230 + 3<64>
	r12_2621 = CONVERT((r12d_786 & 7<32>) + 0x30<32>, word32, uint64)
l000000000040DEF4:
	r12_2621 = SEQ(r12_56_8_1037, r12b_898) (alias)
	branch r11b_1436 == 0<8> l000000000040DED1
l000000000040DEF9:
	branch rbx_1230 >=u r14_265 l000000000040DF02
l000000000040DEFE:
	Mem838[rdi + rbx_1230:byte] = 0x5C<8>
l000000000040DF02:
	rbx_1230 = rbx_1230 + 1<64>
	r11b_1436 = 0<8> (alias)
	r12_2621 = SEQ(r12_56_8_1037, r12b_898) (alias)
l000000000040DED1:
	rdi_1303 = rdi_752
	byte r12b_897 = SLICE(r12_2621, byte, 0)
	rbp_1056 = rbp_1056 + 1<64>
	r12_2608 = r12_2621 (alias)
	rcx_2616 = rdi
	branch rax_747 <=u rbp_1056 l000000000040DB54
l000000000040DB54:
	byte r12b_891 = SLICE(r12_2608, byte, 0)
	branch rbx_1230 >=u r14_265 l000000000040DB62
l000000000040DB59:
	Mem901[rdi + rbx_1230:byte] = r12b_891
l000000000040DB62:
	rbx_111 = rbx_1230 + 1<64>
	al_293 = CONVERT(rbp_1056 != r15_1445, bool, int8)
	rcx_2599 = rcx_2616 (alias)
	rcx_2611 = rcx_2616 (alias)
	branch r15_1445 != 0xFFFFFFFFFFFFFFFF<64> l000000000040D9A0
l000000000040DB76:
	ecx_24_8_1392 = SLICE(rcx_2599, word24, 8) (alias)
	rcx_32_32_1236 = SLICE(rcx_2599, word32, 32) (alias)
	branch CONVERT(Mem938[r8_272 + rbp_1056:byte] != 0<8>, bool, int8) != 0<8> l000000000040D9A8
l000000000040DB86:
	r11_533 = r14_265
	r13_417 = r8_272
	branch rbx_111 != 0<64> l000000000040DBA3
l000000000040DB91:
	branch dwLocC4_1463 != 2<32> l000000000040DBA3
l000000000040DB98:
	branch bLocC5_1472 != 0<8> l000000000040DC46
l000000000040DC46:
	word64 rbx_2658
	word64 rbp_2659
	word64 r13_2661
	word64 r14_2662
	word64 r15_2663
	word64 r12_2660
	rax_1137 = fn000000000040D8A0(r15_1445, r13_417, r11_533, rdi, dwLocC4_1463, r9d & 0xFFFFFFFD<32>, fs, 0<64>, qwLoc88_1467, qwLoc90_1469, out rbx_2658, out rbp_2659, out r12_2660, out r13_2661, out r14_2662, out r15_2663)
l000000000040DBA3:
	branch bLocC5_1472 != 0<8> l000000000040DBE4
l000000000040DBAA:
	branch qwLoc98_1489 == 0<64> l000000000040DBE4
l000000000040DBB2:
	byte al_1152 = Mem966[qwLoc98_1489:byte]
	branch al_1152 == 0<8> l000000000040DBE4
l000000000040DBBE:
	word64 rdx_1158 = qwLoc98_1489 - rbx_111
l000000000040DBD0:
	branch r14_265 <=u rbx_111 l000000000040DBD8
l000000000040DBD5:
	Mem1166[rdi + rbx_111:byte] = al_1152
l000000000040DBD8:
	rbx_111 = rbx_111 + 1<64>
	al_1152 = Mem1171[rdx_1158 + rbx_111:byte] (alias)
	branch al_1152 != 0<8> l000000000040DBD0
l000000000040DBE4:
	rax_1137 = rbx_111
	branch rbx_111 >=u r14_265 l000000000040DC86
l000000000040DBF0:
	Mem1191[rdi + rbx_111:byte] = 0<8>
l000000000040DC86:
	branch (rax_46 ^ Mem1193[fs:0x28<32>:word64]) != 0<64> l000000000040E423
l000000000040E423:
	__stack_chk_fail()
l000000000040DC9D:
	rbxOut = rbx
	rbpOut = rbp
	r12Out = r12
	r13Out = r13
	r14Out = r14
	r15Out = r15
	return rax_1137
l000000000040DEDE:
	branch rbx_1230 >=u r14_265 l000000000040DEE7
l000000000040DEE3:
	Mem1223[rdi + rbx_1230:byte] = r12b_897
l000000000040DEE7:
	r12_1228 = CONVERT(Mem1226[r8_272 + rbp_1056:byte], byte, uint64)
	rbx_1230 = rbx_1230 + 1<64>
l000000000040DA2F:
	word64 rax_1233 = CONVERT(r12b_354, byte, uint64)
	word64 rax_1362
	word64 r10_1366
	call Mem350[rax_1233 * 8<64> + 4284520<i64>:word64] (retsize: 0;)
		uses: r10:r10_1366,r8d:r8d_1267,r9d:r9d_1302,rax:rax_1233,rcx:rcx_1234,rdi:rdi_1303,rdx:rdx_1268,rsi:rsi_1330,Stack +00AC:dwLoc4C,Stack +0100:qwArg08,Stack +0108:qwArg10,Stack +0110:qwArg18
		defs: r10:r10_1366,rax:rax_1362
	rbxOut = rbx_111
	rbpOut = rbp_1056
	r12Out = r12_2631
	r13Out = r13_317
	r14Out = r14_265
	r15Out = r15_1445
	return rax_1362
fn000000000040D8A0_exit:


word64 fn000000000040E450(word64 rcx, word64 rdx, word64 rsi, word32 edi, selector fs, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040E930
//      fn000000000040E970
//      fn000000000040EAB0
//      fn000000000040EBF0
//      fn000000000040EC10
// MayUse:  edi:[0..31] fs:[0..15] rcx:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040E450_entry:
l000000000040E450:
	word64 r15_8 = CONVERT(edi, word32, int64)
	word32 eax_39 = Mem30[__errno_location():word32]
	word32 r15d_35 = SLICE(r15_8, word32, 0)
	word64 r12_102 = Mem30[0x000000000061A5D8<p64>:word64]
	branch r15d_35 < 0<32> l000000000040E5F7
l000000000040E5F7:
	abort()
l000000000040E48C:
	branch r15d_35 <u Mem40[0x000000000061A5F0<p64>:word32] l000000000040E4FA
l000000000040E495:
	word32 ebp_46 = SLICE(r15_8, word32, 0) + 1<32>
	word64 r14_48 = CONVERT(ebp_46, word32, uint64)
	branch r12_102 != 0x61A5E0<64> l000000000040E5E0
l000000000040E5E0:
	word64 rax_54 = fn0000000000410C90(r14_48 << 4<64>, r12_102)
	Mem60[0x000000000061A5D8<p64>:word64] = rax_54
	r12_102 = rax_54
l000000000040E4B0:
	word64 rax_66 = fn0000000000410C90(r14_48 << 4<64>, 0<u64>)
	word64 rsi_71 = Mem40[0x000000000061A5E0<p64>:word64]
	word64 rdi_72 = Mem40[0x000000000061A5E8<p64>:word64]
	Mem74[0x000000000061A5D8<p64>:word64] = rax_66
	Mem75[rax_66:word64] = rsi_71
	Mem76[rax_66 + 8<64>:word64] = rdi_72
	r12_102 = rax_66
l000000000040E4D6:
	word64 rdi_79 = CONVERT(Mem77[0x000000000061A5F0<p64>:word32], word32, uint64)
	memset((rdi_79 << 4<64>) + r12_102, 0<i32>, r14_48 - rdi_79 << 4<64>)
	Mem92[0x000000000061A5F0<p64>:word32] = ebp_46
l000000000040E4FA:
	word64 r12_103 = r12_102 + (r15_8 << 4<64>)
	word64 r12_135
	word64 r15_138
	word64 rbp_142
	word64 rbx_143
	word64 r13_136
	word64 r14_137
	word64 rax_141 = fn000000000040D8A0(rdx, rsi, Mem95[r12_103:word64], Mem95[r12_103 + 8<64>:word64], Mem95[rcx:word32], Mem95[rcx + 4<64>:word32] | 1<32>, fs, rcx + 8<64>, Mem111[rcx + 0x28<64>:word64], Mem95[rcx + 0x30<64>:word64], out rbx_143, out rbp_142, out r12_135, out r13_136, out r14_137, out r15_138)
	word64 rsp_148 = <invalid>
	word32 ebp_181 = SLICE(rbp_142, word32, 0)
	branch Mem127[rsp_148 + 0x38<64>:word64] >u rax_141 l000000000040E5BF
l000000000040E554:
	Mem158[r12_135:word64] = rax_141 + 1<64>
	word64 rsi_156 = rax_141 + 1<64>
	branch r14_137 == 0x61B220<64> l000000000040E577
l000000000040E565:
	Mem161[rsp_148 + 0x38<64>:word64] = rax_141 + 1<64>
	free(r14_137)
	rsi_156 = Mem161[rsp_148 + 0x38<64>:word64]
l000000000040E577:
	Mem166[rsp_148 + 0x38<64>:word64] = rsi_156
	word64 rax_167 = fn0000000000410C40(rsi_156)
	Mem173[r12_135 + 8<64>:word64] = rax_167
	word32 r8d_192 = Mem173[rbx_143:word32]
	word64 rcx_179 = Mem173[rsp_148 + 0x28<64>:word64]
	word64 rdx_184 = Mem173[rsp_148 + 0x20<64>:word64]
	word64 rsi_185 = Mem173[rsp_148 + 0x38<64>:word64]
	Mem187[rsp_148 + 0x10<64>:word64] = Mem173[rbx_143 + 0x30<64>:word64]
	word64 rax_188 = Mem187[rbx_143 + 0x28<64>:word64]
	Mem190[rsp_148:word64] = r15_138
	Mem191[rsp_148 + 8<64>:word64] = rax_188
	word64 r12_303
	word64 r15_304
	word64 rbx_301
	word64 rbp_302
	fn000000000040D8A0(rcx_179, rdx_184, rsi_185, rax_167, r8d_192, ebp_181, fs, Mem191[rsp_148:word64], Mem191[rsp_148 + 8<i64>:word64], Mem191[rsp_148 + 16<i64>:word64], out rbx_301, out rbp_302, out r12_303, out r13_136, out r14_137, out r15_304)
l000000000040E5BF:
	word64 r9_140
	word64 r8_139
	Mem221[r13_136:word32] = eax_39
	r8Out = r8_139
	r9Out = r9_140
	return r14_137
fn000000000040E450_exit:


word64 fn000000000040E600(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: r12 rbp rbx rsp
fn000000000040E600_entry:
l000000000040E600:
	word64 rax_15 = __errno_location()
	word32 r12d_37 = Mem14[rax_15:word32]
	word64 rdi_21 = 0x61B320<u64>
	branch rdi == 0<64> l000000000040E61E
l000000000040E61A_1:
	rdi_21 = rdi
l000000000040E61E:
	word64 rax_28 = fn0000000000410E00(0x38<u64>, rdi_21)
	Mem39[rax_15:word32] = r12d_37
	return rax_28
fn000000000040E600_exit:


word32 fn000000000040E630(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax Top
// Preserved: rsp
fn000000000040E630_entry:
l000000000040E630:
	word64 rax_10 = 0x61B320<u64>
	branch rdi == 0<64> l000000000040E63C
l000000000040E638_1:
	rax_10 = rdi
l000000000040E63C:
	return Mem0[rax_10:word32]
fn000000000040E630_exit:


void fn000000000040E640(word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  esi:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax Top
// Preserved: rsp
fn000000000040E640_entry:
l000000000040E640:
	word64 rax_10 = 0x61B320<u64>
	branch rdi == 0<64> l000000000040E64C
l000000000040E648_1:
	rax_10 = rdi
l000000000040E64C:
	Mem14[rax_10:word32] = esi
	return
fn000000000040E640_exit:


void fn000000000040E650(word32 edx, word32 esi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  edx:[0..31] esi:[0..31] rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040E650_entry:
	byte sil_15 = SLICE(esi, byte, 0)
l000000000040E650:
	word64 rax_13 = 0x61B320<u64>
	branch rdi == 0<64> l000000000040E65E
l000000000040E65A_1:
	rax_13 = rdi
l000000000040E65E:
	word64 rsi_24 = rax_13 + CONVERT(sil_15 >>u 5<8>, byte, uint64) * 4<64>
	word32 edi_29 = Mem0[rsi_24 + 8<64>:word32]
	byte cl_33 = SLICE(esi, byte, 0) & 0x1F<8>
	Mem55[rsi_24 + 8<64>:word32] = ((edx ^ edi_29 >>u cl_33) & 1<32>) << cl_33 ^ edi_29
	return
fn000000000040E650_exit:


void fn000000000040E6B0(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax Top
// Preserved: rdi rsp
fn000000000040E6B0_entry:
l000000000040E6B0:
	branch rdi != 0<64> l000000000040E6C0
l000000000040E6BC_1:
	rdi = 0x61B320<u64>
l000000000040E6C0:
	Mem17[rdi:word32] = 8<32>
	branch rsi == 0<64> l000000000040E6DD
l000000000040E6CB:
	branch rdx == 0<64> l000000000040E6DD
l000000000040E6DD:
	abort()
l000000000040E6D0:
	Mem24[rdi + 0x28<64>:word64] = rsi
	Mem25[rdi + 0x30<64>:word64] = rdx
	return
fn000000000040E6B0_exit:


word64 fn000000000040E6F0(word64 rcx, word64 rdx, word64 rsi, word64 rdi, word64 r8, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004052D0
// MayUse:  fs:[0..15] r8:[0..63] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: r12 r13 r14 r15 rbp rbx rsp
fn000000000040E6F0_entry:
l000000000040E6F0:
	word64 rbx_31 = r8
	branch r8 != 0<64> l000000000040E716
l000000000040E712_1:
	rbx_31 = 0x61B320<u64>
l000000000040E716:
	__errno_location()
	word64 r12_69
	word64 rbp_76
	word64 r15_127
	word64 r14_126
	word64 r13_125
	word64 rbx_124
	word64 rax_75 = fn000000000040D8A0(rcx, rdx, rsi, rdi, Mem60[rbx_31:word32], Mem40[rbx_31 + 4<64>:word32], fs, rbx_31 + 8<64>, Mem56[rbx_31 + 0x28<64>:word64], Mem40[rbx_31 + 0x30<64>:word64], out rbx_124, out rbp_76, out r12_69, out r13_125, out r14_126, out r15_127)
	Mem88[rbp_76:word32] = SLICE(r12_69, word32, 0)
	return rax_75
fn000000000040E6F0_exit:


void fn000000000040E930(word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  fs:[0..15] rdi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040E930_entry:
l000000000040E930:
l000000000040E941_thunk_fn000000000040E450:
	word64 r8_28
	word64 r9_29
	fn000000000040E450(0x61B320<u64>, 0xFFFFFFFFFFFFFFFF<64>, rdi, 0<32>, fs, out r8_28, out r9_29)
	return
fn000000000040E930_exit:


void fn000000000040E970(word64 rdx, word32 esi, word32 edi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000409F80
// MayUse:  edi:[0..31] esi:[0..31] fs:[0..15] rdx:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: rbp rbx rsp
fn000000000040E970_entry:
l000000000040E970:
	fn000000000040D740(esi, fp - 0x58<64>)
	word64 r8_60
	word64 r9_61
	fn000000000040E450(fp - 0x58<64>, 0xFFFFFFFFFFFFFFFF<64>, rdx, edi, fs, out r8_60, out r9_61)
	return
fn000000000040E970_exit:


void fn000000000040EAB0(word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000405810
//      fn0000000000407EA0
// MayUse:  fs:[0..15] rdi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040EAB0_entry:
l000000000040EAB0:
l000000000040EA00:
	word64 r8_96
	word64 r9_97
	fn000000000040E450(fp - 0x48<64>, 0xFFFFFFFFFFFFFFFF<64>, rdi, 0<32>, fs, out r8_96, out r9_97)
	return
fn000000000040EAB0_exit:


void fn000000000040EBF0(word64 rsi, word32 edi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000409F80
// MayUse:  edi:[0..31] fs:[0..15] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040EBF0_entry:
l000000000040EBF0:
l000000000040EBFC_thunk_fn000000000040E450:
	word64 r8_23
	word64 r9_24
	fn000000000040E450(0x61A5A0<u64>, 0xFFFFFFFFFFFFFFFF<64>, rsi, edi, fs, out r8_23, out r9_24)
	return
fn000000000040EBF0_exit:


word64 fn000000000040EC10(word64 rdi, selector fs, ptr64 & r8Out, ptr64 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn000000000040A000
// MayUse:  fs:[0..15] rdi:[0..63]
// LiveOut: r8 r9 rax
// Trashed: SCZO r10 r11 r8 r9 rax rcx rdi rdx rsi Top
// Preserved: rsp
fn000000000040EC10_entry:
l000000000040EC10:
l000000000040EC21_thunk_fn000000000040E450:
	word64 r8_17
	word64 r9_18
	word64 rax_19 = fn000000000040E450(0x61A5A0<u64>, 0xFFFFFFFFFFFFFFFF<64>, rdi, 0<32>, fs, out r8_17, out r9_18)
	r8Out = r8_17
	r9Out = r9_18
	return rax_19
fn000000000040EC10_exit:


void fn000000000040EC30(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx Top
// Preserved: r12 rbp rbx rsp
fn000000000040EC30_entry:
l000000000040EC30:
	word64 rbx_18 = rdx - 1<64>
	branch rdx == 0<64> l000000000040EC69
l000000000040EC40:
	word64 rax_22 = __ctype_tolower_loc()
l000000000040EC50:
	Mem34[rdi + rbx_18:byte] = Mem25[Mem25[rax_22:word64] + CONVERT(Mem25[rsi + rbx_18:byte], byte, uint64) * 4<64>:byte]
	rbx_18 = rbx_18 - 1<64>
	branch rbx_18 != 0xFFFFFFFFFFFFFFFF<64> l000000000040EC50
l000000000040EC69:
	return
fn000000000040EC30_exit:


void fn000000000040EC80(word64 rdx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040ECD0
// MayUse:  rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rcx rdx Top
// Preserved: r12 rbp rbx rsp
fn000000000040EC80_entry:
l000000000040EC80:
	word64 rbx_18 = rdx - 1<64>
	branch rdx == 0<64> l000000000040ECB9
l000000000040EC90:
	word64 rax_22 = __ctype_toupper_loc()
l000000000040ECA0:
	Mem34[rdi + rbx_18:byte] = Mem25[Mem25[rax_22:word64] + CONVERT(Mem25[rsi + rbx_18:byte], byte, uint64) * 4<64>:byte]
	rbx_18 = rbx_18 - 1<64>
	branch rbx_18 != 0xFFFFFFFFFFFFFFFF<64> l000000000040ECA0
l000000000040ECB9:
	return
fn000000000040EC80_exit:


word64 fn000000000040ECD0(word64 rcx, word64 rdx, word64 rsi, byte dil, word64 r8, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000410600
// MayUse:  fs:[0..15] r8:[0..63] rcx:[0..63] rdi:[0..7] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp Top
// Preserved:
fn000000000040ECD0_entry:
	byte dil = SLICE(rdi, byte, 0)
l000000000040ECD0:
	word64 r12_19 = rsi
	word64 rbx_101 = rcx
	word64 rsi_32 = Mem25[fs:0x28<32>:word64]
	word32 esi_44 = Mem33[r8 + 8<64>:word32]
	branch esi_44 <= 0xC<32> l000000000040EEE0
l000000000040EEE0:
	branch esi_44 == 0<32> l000000000040EEEE
l000000000040EEEB_1:
l000000000040EEEE:
l000000000040ED26:
l000000000040ED2B:
	word64 rax_1015
	byte al_442 = Mem66[rcx:byte]
	word64 r13_426 = 0<u64>
	branch al_442 == 0<8> l000000000040F053
l000000000040ED39:
	word32 rsi_32_32_635 = SLICE(fp - 0x447<64>, word32, 32)
l000000000040ED85:
	word32 rcx_32_32_557 = SLICE(rcx, word32, 32)
	branch al_442 != 0x25<8> l000000000040ED50
l000000000040ED50:
	branch rdx - r13_426 <=u 1<64> l000000000040EE98
l000000000040ED60:
	branch r12_19 == 0<64> l000000000040ED6D
l000000000040ED65:
	Mem94[r12_19:byte] = al_442
	r12_19 = r12_19 + 1<64>
l000000000040ED6D:
	r13_426 = r13_426 + 1<64>
	r8 = rbx_101
l000000000040ED89:
	word64 r9_106 = CONVERT(dil, byte, uint64)
	word32 r11d_111 = 0<32>
l000000000040ED94:
	rbx_101 = rbx_101 + 1<64>
	word64 rdi_1114 = CONVERT(Mem104[rbx_101:byte], byte, uint64)
	word32 r9d_618 = SLICE(r9_106, word32, 0)
	byte dil_119 = SLICE(rdi_1114, byte, 0)
	word32 r9_32_32_994 = SLICE(r9_106, word32, 32)
	word24 r9d_24_8_1006 = SLICE(r9d_618, word24, 8)
	bool v55_677 = dil_119 > 0x30<8>
	branch dil_119 == 0x30<8> l000000000040EDC0
l000000000040EDA1:
	byte r9b_385 = SLICE(r9d_618, byte, 0)
	dil_119 = SLICE(rdi_1114, byte, 0) (alias)
	branch v55_677 l000000000040EDD0
l000000000040EDD0:
	branch dil_119 != 0x5E<8> l000000000040EE70
l000000000040EE70:
	branch dil_119 != 0x5F<8> l000000000040EDEE
l000000000040EE7A:
	r11d_111 = CONVERT(dil_119, byte, int32)
l000000000040EDDA:
	r9_106 = 1<64> (alias)
l000000000040EDA3:
	branch dil_119 != 0x23<8> l000000000040EDE8
l000000000040EDE8:
	branch dil_119 == 0x2D<8> l000000000040EDC0
l000000000040EDEE:
	word64 rbp_1095 = 0xFFFFFFFF<64>
	word64 rdi_1111 = rdi_1114
	branch CONVERT(dil_119, byte, int32) >u 0x39<32> || CONVERT(dil_119, byte, int32) <u 0x30<32> l000000000040EE40
l000000000040EDFF:
	word64 rbp_1092 = 0<64>
l000000000040EE28:
	word64 rbp_1108
	word32 ebp_149 = SLICE(rbp_1092, word32, 0)
	branch ebp_149 <= 0xCCCCCCC<32> l000000000040EE08
l000000000040EE08:
	word32 edx_154 = CONVERT(Mem104[rbx_101:byte], byte, int32)
	byte dl_156 = SLICE(edx_154, byte, 0)
	branch ebp_149 == 0xCCCCCCC<32> l000000000040EE88
l000000000040EE88:
	branch dl_156 <= 0x37<8> l000000000040EE0D
l000000000040EE8D:
	rbp_1108 = 0x7FFFFFFF<64> (alias)
l000000000040EE0D:
	word64 rcx_165 = CONVERT(ebp_149 * 5<32>, word32, uint64)
	rcx_32_32_557 = SLICE(rcx_165, word32, 32) (alias)
	rbp_1108 = CONVERT(edx_154 - 0x30<32> + SLICE(rcx_165, word32, 0) * 2<32>, word32, uint64)
l000000000040EE30:
	rbp_1108 = 0x7FFFFFFF<64> (alias)
l000000000040EE15:
	rbx_101 = rbx_101 + 1<64>
	rdi_1111 = CONVERT(Mem104[rbx_101:byte], byte, uint64)
	rbp_1092 = rbp_1108 (alias)
	rbp_1095 = rbp_1108 (alias)
	branch CONVERT(SLICE(rdi_1111, byte, 0), byte, int32) >u 0x39<32> || CONVERT(SLICE(rdi_1111, byte, 0), byte, int32) <u 0x30<32> l000000000040EE40
l000000000040EE40:
	word64 rcx_191
	word64 rdi_1098
	word32 ebp_241 = SLICE(rbp_1095, word32, 0)
	byte dil_187 = SLICE(rdi_1111, byte, 0)
	branch dil_187 == 0x45<8> l000000000040EEC8
l000000000040EE4A:
	rcx_191 = 0<u64>
	rcx_32_32_557 = 0<32> (alias)
	rdi_1098 = rdi_1111 (alias)
	branch dil_187 == 0x4F<8> l000000000040EEC8
l000000000040EEC8:
	rbx_101 = rbx_101 + 1<64>
	rdi_1098 = CONVERT(Mem104[rbx_101:byte], byte, uint64)
	rcx_191 = SEQ(rcx_32_32_557, CONVERT(dil_187, byte, int32)) (alias)
l000000000040EE52:
	byte dil_208 = SLICE(rdi_1098, byte, 0)
	word64 rsi_546 = SEQ(rsi_32_32_635, CONVERT(dil_208, byte, int32))
	branch dil_208 >u 0x7A<8> l000000000040FF4D
l000000000040FF4D:
l000000000040F39F:
	word64 r15_222
	word64 rcx_231
	branch dil_208 != 0x25<8> l000000000040F0B2
l000000000040F0B2:
	word64 rax_218 = rbx_101 - 1<64>
	word32 ecx_224 = 1<32>
l000000000040F0C1:
	r15_222 = rax_218
	rax_218 = rax_218 - 1<64>
	ecx_224 = ecx_224 + 1<32> (alias)
	branch Mem104[rax_218 + 1<64>:byte] != 0x25<8> l000000000040F0C1
l000000000040F0D1:
	rcx_231 = CONVERT(ecx_224, word32, int64)
l000000000040F3A9:
	r15_222 = rbx_101
	rcx_231 = 1<u64>
l000000000040F0D7:
	word32 eax_263 = 0<32>
	branch ebp_241 < 0<32> l000000000040F0E1
l000000000040F0DE_1:
	eax_263 = ebp_241
l000000000040F0E1:
	word64 rax_266 = CONVERT(eax_263, word32, int64)
	word64 rbx_270 = rax_266
	branch rcx_231 <u rax_266 l000000000040F0ED
l000000000040F0E9_1:
	rbx_270 = rcx_231
l000000000040F0ED:
	branch rbx_270 >=u rdx - r13_426 l000000000040EE98
l000000000040EE98:
	rax_1015 = 0<u64>
l000000000040F0F9:
	branch r12_19 == 0<64> l000000000040F16E
l000000000040F0FE:
	word64 r9_1104 = SEQ(r9_32_32_994, r9d_24_8_1006, r9b_385)
	branch rax_266 <=u rcx_231 l000000000040F144
l000000000040F103:
	word64 rbp_344 = CONVERT(ebp_241, word32, int64) - rcx_231
	branch r11d_111 == 0x30<32> l000000000040F1C1
l000000000040F1C1:
	memset(r12_19, 48<i32>, rbp_344)
	r12_19 = r12_19 + rbp_344
	r9_1104 = CONVERT(r9d_618, word32, uint64)
l000000000040F125:
	memset(r12_19, 32<i32>, rbp_344)
	r12_19 = r12_19 + rbp_344
	r9_1104 = CONVERT(r9d_618, word32, uint64)
l000000000040F144:
	rsi_32_32_635 = SLICE(r15_222, word32, 32) (alias)
	branch SLICE(r9_1104, byte, 0) == 0<8> l000000000040F180
l000000000040F180:
	memcpy(r12_19, r15_222, rcx_231)
l000000000040F15C:
	fn000000000040EC80(rcx_231, r15_222, r12_19)
l000000000040F16B:
	r12_19 = r12_19 + rcx_231
l000000000040F16E:
	r8 = rbx_101
	r13_426 = r13_426 + rbx_270
	rcx = rcx_231 (alias)
l000000000040ED74:
	al_442 = Mem431[r8 + 1<64>:byte] (alias)
	rbx_101 = r8 + 1<64>
	branch al_442 == 0<8> l000000000040F050
l000000000040F050:
l000000000040F053:
	branch r12_19 == 0<64> l000000000040F191
l000000000040F05C:
	branch rdx == 0<64> l000000000040F191
l000000000040F191:
	rax_1015 = r13_426
l000000000040F065:
	Mem471[r12_19:byte] = 0<8>
	rax_1015 = r13_426
l000000000040EE9A:
	branch (rsi_32 ^ Mem481[fs:0x28<32>:word64]) != 0<64> l00000000004105EA
l00000000004105EA:
	__stack_chk_fail()
l000000000040EEB1:
	return rax_1015
l000000000040EE60:
	word64 rdx_529 = CONVERT(dil_208, byte, uint64)
	word64 rax_586
	word64 r9_588
	word64 rdi_589
	word64 r11_590
	call Mem104[rdx_529 * 8<64> + 4285672<i64>:word64] (retsize: 0;)
		uses: dil:dil_208,r11:r11_590,r8:r8_659,r9_32_32:r9_32_32_1086,r9d:r9d_618,rcx:rcx_556,rdi_56_8:rdi_56_8_1087,rdx:rdx_529,rsi:rsi_546
		defs: r11:r11_590,r9:r9_588,rax:rax_586,rdi:rdi_589
	word32 r9_32_32_1086 = SLICE(r9_588, word32, 32)
	word56 rdi_56_8_1087 = SLICE(rdi_589, word56, 8)
	return rax_586
fn000000000040ECD0_exit:
l000000000040EDA9:
	rbx_101 = rbx_101 + 1<64>
	rdi_1114 = CONVERT(Mem104[rbx_101:byte], byte, uint64)
	dil_119 = SLICE(rdi_1114, byte, 0) (alias)
	v55_677 = dil_119 > 0x30<8>
	branch dil_119 != 0x30<8> l000000000040EDA1
l000000000040EDBB:
l000000000040EDC0:
	r11d_111 = CONVERT(dil_119, byte, int32)


word64 fn0000000000410600(word64 rcx, word64 rdx, word64 rsi, word64 rdi, selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000406A80
// MayUse:  fs:[0..15] rcx:[0..63] rdi:[0..63] rdx:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO r10 r11 r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi Top
// Preserved: rsp
fn0000000000410600_entry:
l0000000000410600:
	return fn000000000040ECD0(rdx, rsi, rdi, 0<8>, rcx, fs)
fn0000000000410600_exit:


void fn0000000000410630(word64 rcx, word64 rsi, word64 rdi, word64 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000410AC0
// MayUse:  r9:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp Top
// Preserved: r13 r14 r15
fn0000000000410630_entry:
l0000000000410630:
	word64 r9_150
	branch rsi == 0<64> l0000000000410A30
l0000000000410A30:
	__fprintf_chk(rdi, 1<i32>, 0x4168CC<u64>, 0<32>)
	r9_150 = r9
l0000000000410650:
	__fprintf_chk(rdi, 1<i32>, 0x4168C0<u64>, 0<32>)
	r9_150 = rcx
l000000000041066A:
	word64 rax_66 = dcgettext(0<u64>, 0x4168D3<u64>, 5<i32>)
	__fprintf_chk(rdi, 1<i32>, 0x416BA0<u64>, 0<32>)
	word64 rax_85 = dcgettext(0<u64>, 0x416930<u64>, 5<i32>)
	fputs_unlocked(rax_85, rdi)
	branch r9 >u 9<64> l0000000000410A50
l0000000000410A50:
l00000000004107A1:
	__fprintf_chk(rdi, 1<i32>, dcgettext(0<u64>, 0x416B08<u64>, 5<i32>), 0<32>)
	return
l00000000004106BE:
	call Mem25[0x0000000000416B48<p64>:word64] (retsize: 0;)
		uses: r8:0x7DD<u64>,r9:r9_150,rcx:rax_66,rdi:rax_85,rdx:5<u64>,rsi:rdi
	return
fn0000000000410630_exit:


void fn0000000000410AC0(word64 rcx, word64 rsi, word64 rdi, word64 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000410B30
// MayUse:  r8:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi Top
// Preserved: rsp
fn0000000000410AC0_entry:
l0000000000410AC0:
	word64 r9_28 = 0<u64>
l0000000000410AF3:
	word32 eax_14 = Mem11[r8:word32]
	branch eax_14 <u 0x30<32> l0000000000410AD0
l0000000000410AD0:
	word64 r10_19 = CONVERT(eax_14, word32, uint64) + Mem11[r8 + 0x10<64>:word64]
	Mem23[r8:word32] = eax_14 + 8<32>
	word64 rax_24 = Mem23[r10_19:word64]
	Mem29[fp - 0x58<64> + r9_28 * 8<64>:word64] = rax_24
	branch rax_24 == 0<64> l0000000000410B18
l0000000000410AFB:
	word64 r10_31 = Mem11[r8 + 8<64>:word64]
	Mem33[r8 + 8<64>:word64] = r10_31 + 8<64>
	word64 rax_34 = Mem33[r10_31:word64]
	Mem37[fp - 0x58<64> + r9_28 * 8<64>:word64] = rax_34
	branch rax_34 != 0<64> l0000000000410AE9
l0000000000410AE9:
	r9_28 = r9_28 + 1<64>
	branch r9_28 == 0xA<64> l0000000000410B18
l0000000000410B13:
l0000000000410B18:
	fn0000000000410630(rcx, rsi, rdi, r9_28)
	return
fn0000000000410AC0_exit:


void fn0000000000410B30(byte al, word64 rcx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  al:[0..7] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut:
// Trashed: SCZO r10 r12 r8 r9 rax rbp rbx rcx rdi rdx rsi Top
// Preserved: rsp
fn0000000000410B30_entry:
l0000000000410B30:
	branch al == 0<8> l0000000000410B7C
l0000000000410B45:
l0000000000410B7C:
	fn0000000000410AC0(rcx, rsi, rdi, fp - 0xD0<64>)
	return
fn0000000000410B30_exit:


word64 fn0000000000410C40(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000404D20
//      fn0000000000404E80
//      fn0000000000405ED0
//      fn0000000000407EA0
//      fn000000000040C9B0
//      fn000000000040CB40
//      fn000000000040E930
//      fn0000000000410C90
//      fn0000000000410E30
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax Top
// Preserved: rbx rsp
fn0000000000410C40_entry:
l0000000000410C40:
	word64 rax_10 = malloc(rdi)
	branch rax_10 == 0<64> l0000000000410C50
l0000000000410C50:
	branch rdi == 0<64> l0000000000410C4E
l0000000000410C55:
	fn0000000000410E50()
l0000000000410C4E:
	return rax_10
fn0000000000410C40_exit:


word64 fn0000000000410C90(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000405ED0
//      fn0000000000407EA0
//      fn000000000040E930
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax Top
// Preserved: rbx rsi rsp
fn0000000000410C90_entry:
l0000000000410C90:
	branch rsi == 0<64> l0000000000410CB0
l0000000000410CB0:
	branch rdi == 0<64> l0000000000410C99
l0000000000410CB5:
	free(rdi)
	return 0<u64>
l0000000000410C99:
	word64 rax_27 = realloc(rdi, rsi)
	branch rax_27 == 0<64> l0000000000410CBE
l0000000000410CBE:
	branch rsi == 0<64> l0000000000410CA6
l0000000000410CC3:
	fn0000000000410E50()
l0000000000410CA6:
	return rax_27
fn0000000000410C90_exit:


word64 fn0000000000410E00(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040E600
//      fn0000000000410E30
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: rbp rbx rsp
fn0000000000410E00_entry:
l0000000000410E00:
	return memcpy(fn0000000000410C40(rsi), rdi, rsi)
fn0000000000410E00_exit:


word64 fn0000000000410E30(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000404D20
//      fn0000000000407EA0
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdi rdx rsi Top
// Preserved: rbx rsp
fn0000000000410E30_entry:
l0000000000410E30:
	word64 rax_9 = strlen(rdi)
l0000000000410E41_thunk_fn0000000000410E00:
	return fn0000000000410E00(rax_9 + 1<64>, rdi)
fn0000000000410E30_exit:


void fn0000000000410E50()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
//      fn0000000000404E80
//      fn0000000000405ED0
//      fn0000000000407EA0
//      fn000000000040A610
//      fn0000000000410C40
//      fn0000000000410C90
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
fn0000000000410E50_exit:
fn0000000000410E50_entry:
l0000000000410E50:
	dcgettext(0<u64>, 0x416BCF<u64>, 5<i32>)
	error(Mem0[0x000000000061A580<p64>:word32], 0<i32>, 0x415E54<u64>, 0<32>)
	abort()


word32 fn0000000000410E90(word64 rcx, word32 edx, word64 rsi, word64 rdi, word64 r8, ptr64 & ebxOut, ptr64 & rbpOut, ptr64 & r12Out, ptr64 & r13bOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  edx:[0..31] r8:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r12 r13 rax rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp Top
// Preserved:
fn0000000000410E90_entry:
l0000000000410E90:
	branch edx >u 0x24<32> l00000000004112B0
l00000000004112B0:
	__assert_fail(0x416BF0<u64>, 0x416BE0<u64>, 0x60<u32>, 0x416DC8<u64>)
l0000000000410EAA:
	word64 r15_40 = rsi
	branch rsi != 0<64> l0000000000410EC2
l0000000000410EBE_1:
	r15_40 = fp - 0x40<64>
l0000000000410EC2:
	byte bl_345 = Mem24[rdi:byte]
	word64 rdx_54 = Mem24[__ctype_b_loc():word64]
	word64 rax_56 = rdi
l0000000000410EDF:
	branch (Mem24[rdx_54 + 1<64> + CONVERT(bl_345, byte, uint64) * 2<64>:byte] & 0x20<8>) != 0<8> l0000000000410ED8
l0000000000410ED8:
	rax_56 = rax_56 + 1<64>
	bl_345 = Mem24[rax_56:byte] (alias)
l0000000000410EEB:
	word64 rax_242
	branch bl_345 != 0x2D<8> l0000000000410F08
l0000000000410F08:
	word32 ebp_134
	word32 edx_166
	word64 rax_72 = __errno_location()
	Mem78[rax_72:word32] = 0<32>
	word64 rax_90 = SEQ(SLICE(rax_72, word32, 32), strtoul(rdi, r15_40, edx))
	word64 r14_88 = Mem86[r15_40:word64]
	word64 rbx_113 = rax_90
	branch r14_88 == rdi l0000000000410FE7
l0000000000410FE7:
	branch r8 == 0<64> l0000000000410EF0
l0000000000410FF0:
	word64 rdx_101 = CONVERT(Mem86[rdi:byte], byte, uint64)
	byte dl_102 = SLICE(rdx_101, byte, 0)
	word32 edx_108 = SLICE(rdx_101, word32, 0)
	branch dl_102 == 0<8> l0000000000410EF0
l0000000000410FFC:
	ebp_134 = 0<32> (alias)
	rbx_113 = 1<u64>
	edx_166 = edx_108 (alias)
	branch strchr(r8, dl_102) != 0<64> l0000000000410F94
l000000000041101F:
l0000000000410F3A:
	word32 eax_124 = Mem86[rax_72:word32]
	branch eax_124 != 0<32> l0000000000410F68
l0000000000410F68:
	ebp_134 = 1<32> (alias)
	branch eax_124 != 0x22<32> l0000000000410EF0
l0000000000410F76:
l0000000000410F40:
	ebp_134 = 0<32> (alias)
l0000000000410F42:
	branch r8 == 0<64> l0000000000410F4F
l0000000000410F47:
	word64 rdx_144 = CONVERT(Mem86[r14_88:byte], byte, uint64)
	byte dl_145 = SLICE(rdx_144, byte, 0)
	word32 edx_151 = SLICE(rdx_144, word32, 0)
	branch dl_145 != 0<8> l0000000000410F78
l0000000000410F78:
	edx_166 = edx_151 (alias)
	branch strchr(r8, dl_145) == 0<64> l0000000000411028
l0000000000410F94:
	word64 rcx_195
	branch strchr(r8, '0') == 0<64> l0000000000410FCB
l0000000000410FAE:
	byte al_180 = Mem170[r14_88 + 1<64>:byte]
	branch al_180 == 0x44<8> l0000000000411262
l0000000000410FBB:
	branch al_180 == 0x69<8> l000000000041124A
l000000000041124A:
	word64 rcx_193 = CONVERT(CONVERT(Mem170[r14_88 + 2<64>:byte] == 0x42<8>, bool, int8), int8, uint64)
	rcx_195 = CONVERT(SLICE(rcx_193, word32, 0) + 1<32> + SLICE(rcx_193, word32, 0), word32, uint64)
l0000000000410FC3:
	branch al_180 == 0x42<8> l0000000000411262
l0000000000411262:
	rcx_195 = 2<u64>
l0000000000410FCB:
	rcx_195 = 1<u64>
l0000000000410FD5:
	byte dl_212 = SLICE(edx_166, byte, 0) - 0x42<8>
	word64 rbp_270 = CONVERT(ebp_134, word32, uint64)
	branch dl_212 >u 0x35<8> l0000000000411028
l0000000000411028:
	Mem239[rcx:word64] = rbx_113
	rax_242 = CONVERT(ebp_134 | 2<32>, word32, uint64)
l0000000000410FDD:
	word64 rdx_247 = CONVERT(dl_212, byte, uint64)
	word64 rax_296
	call Mem170[rdx_247 * 8<64> + 4287512<i64>:word64] (retsize: 0;)
		uses: r8:r8,rcx:rcx_277,rdi:r8,rdx:rdx_247,rsi:0x30<u64>
		defs: rax:rax_296
	ebxOut = <invalid>
	rbpOut = rbp_270
	r12Out = r8
	r13bOut = <invalid>
	return SLICE(rax_296, word32, 0)
l0000000000410F4F:
	Mem305[rcx:word64] = rax_90
	ebxOut = <invalid>
	rbpOut = rbp
	r12Out = r12
	r13bOut = <invalid>
	return ebp_134
l0000000000410EF0:
	rax_242 = 4<u64>
l0000000000410EF5:
	ebxOut = <invalid>
	rbpOut = rbp
	r12Out = r12
	r13bOut = <invalid>
	return SLICE(rax_242, word32, 0)
fn0000000000410E90_exit:


void fn00000000004112D0(word32 esi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  edi:[0..31] esi:[0..31]
// LiveOut:
// Trashed:
// Preserved: rsp
// Terminates process
fn00000000004112D0_exit:
fn00000000004112D0_entry:
l00000000004112D0:
	word64 rsi_28
	word32 ebp_86 = Mem19[0x000000000061A580<p64>:word32]
	branch edi >u 3<32> l000000000041133B
l000000000041133B:
	rsi_28 = 0x416DD1<u64>
	branch edi == 4<32> l00000000004112FA
l0000000000411345:
l00000000004112EB:
	branch edi >=u 2<32> l0000000000411334
l0000000000411334:
	rsi_28 = 0x416E10<u64>
l00000000004112F0:
	rsi_28 = 0x416DEC<u64>
	branch edi != 1<32> l000000000041132F
l00000000004112FA:
	branch esi < 0<32> l0000000000411347
l0000000000411347:
l00000000004112FF:
l000000000041130C:
	error(ebp_86, 0<i32>, dcgettext(0<u64>, rsi_28, 5<i32>), 0<32>)
l000000000041132F:
	abort()


word32 fn0000000000411360(word64 rcx, word32 edx, word64 rsi, word64 rdi, word64 r8, ptr64 & rbxOut, ptr64 & ebpOut, ptr64 & r12Out, ptr64 & r13Out, ptr64 & r14bOut, ptr64 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040C810
// MayUse:  edx:[0..31] r8:[0..63] rcx:[0..63] rdi:[0..63] rsi:[0..63]
// LiveOut: r12 r13 r14 r15 rax rbp rbx rsp
// Trashed: SCZO r12 r13 r14 r15 r8 r9 rax rbp rbx rcx rdi rdx rsi rsp Top
// Preserved:
fn0000000000411360_entry:
l0000000000411360:
	branch edx >u 0x24<32> l0000000000411788
l0000000000411788:
	__assert_fail(0x416BF0<u64>, 0x416BE0<u64>, 0x60<u32>, 0x416FE8<u64>)
l000000000041137A:
	word64 r15_40 = rsi
	branch rsi != 0<64> l0000000000411392
l000000000041138E_1:
	r15_40 = fp - 0x40<64>
l0000000000411392:
	byte bl_345 = Mem24[rdi:byte]
	word64 rdx_54 = Mem24[__ctype_b_loc():word64]
	word64 rax_56 = rdi
l00000000004113AF:
	branch (Mem24[rdx_54 + 1<64> + CONVERT(bl_345, byte, uint64) * 2<64>:byte] & 0x20<8>) != 0<8> l00000000004113A8
l00000000004113A8:
	rax_56 = rax_56 + 1<64>
	bl_345 = Mem24[rax_56:byte] (alias)
l00000000004113BB:
	word64 rax_244
	branch bl_345 != 0x2D<8> l00000000004113D8
l00000000004113D8:
	word32 ebp_136
	word32 edx_168
	word64 rax_72 = __errno_location()
	Mem80[rax_72:word32] = 0<32>
	word64 rax_92 = SEQ(SLICE(rax_72, word32, 32), __strtoul_internal(rdi, r15_40, edx, 0<i32>))
	word64 r14_90 = Mem88[r15_40:word64]
	word64 rbx_115 = rax_92
	branch r14_90 == rdi l00000000004114BF
l00000000004114BF:
	branch r8 == 0<64> l00000000004113C0
l00000000004114C8:
	word64 rdx_103 = CONVERT(Mem88[rdi:byte], byte, uint64)
	byte dl_104 = SLICE(rdx_103, byte, 0)
	word32 edx_110 = SLICE(rdx_103, word32, 0)
	branch dl_104 == 0<8> l00000000004113C0
l00000000004114D4:
	ebp_136 = 0<32> (alias)
	rbx_115 = 1<u64>
	edx_168 = edx_110 (alias)
	branch strchr(r8, dl_104) != 0<64> l000000000041146C
l00000000004114F7:
l000000000041140C:
	word32 eax_126 = Mem88[rax_72:word32]
	branch eax_126 != 0<32> l0000000000411440
l0000000000411440:
	ebp_136 = 1<32> (alias)
	branch eax_126 != 0x22<32> l00000000004113C0
l000000000041144E:
l0000000000411413:
	ebp_136 = 0<32> (alias)
l0000000000411415:
	branch r8 == 0<64> l0000000000411422
l000000000041141A:
	word64 rdx_146 = CONVERT(Mem88[r14_90:byte], byte, uint64)
	byte dl_147 = SLICE(rdx_146, byte, 0)
	word32 edx_153 = SLICE(rdx_146, word32, 0)
	branch dl_147 != 0<8> l0000000000411450
l0000000000411450:
	edx_168 = edx_153 (alias)
	branch strchr(r8, dl_147) == 0<64> l0000000000411500
l000000000041146C:
	word64 rcx_197
	branch strchr(r8, '0') == 0<64> l00000000004114A3
l0000000000411486:
	byte al_182 = Mem172[r14_90 + 1<64>:byte]
	branch al_182 == 0x44<8> l000000000041173A
l0000000000411493:
	branch al_182 == 0x69<8> l0000000000411722
l0000000000411722:
	word64 rcx_195 = CONVERT(CONVERT(Mem172[r14_90 + 2<64>:byte] == 0x42<8>, bool, int8), int8, uint64)
	rcx_197 = CONVERT(SLICE(rcx_195, word32, 0) + 1<32> + SLICE(rcx_195, word32, 0), word32, uint64)
l000000000041149B:
	branch al_182 == 0x42<8> l000000000041173A
l000000000041173A:
	rcx_197 = 2<u64>
l00000000004114A3:
	rcx_197 = 1<u64>
l00000000004114AD:
	byte dl_214 = SLICE(edx_168, byte, 0) - 0x42<8>
	branch dl_214 >u 0x35<8> l0000000000411500
l0000000000411500:
	Mem241[rcx:word64] = rbx_115
	rax_244 = CONVERT(ebp_136 | 2<32>, word32, uint64)
l00000000004114B5:
	word64 rdx_249 = CONVERT(dl_214, byte, uint64)
	word64 rax_296
	call Mem172[rdx_249 * 8<64> + 4288056<i64>:word64] (retsize: 0;)
		uses: r8:rax_72,rcx:rcx_279,rdi:r8,rdx:rdx_249,rsi:0x30<u64>
		defs: rax:rax_296
	rbxOut = rbx_115
	ebpOut = <invalid>
	r12Out = r8
	r13Out = rcx
	r14bOut = <invalid>
	r15Out = r15_40
	return SLICE(rax_296, word32, 0)
l0000000000411422:
	Mem305[rcx:word64] = rax_92
	rbxOut = rbx
	ebpOut = <invalid>
	r12Out = r12
	r13Out = r13
	r14bOut = <invalid>
	r15Out = r15
	return ebp_136
l00000000004113C0:
	rax_244 = 4<u64>
l00000000004113C5:
	rbxOut = rbx
	ebpOut = <invalid>
	r12Out = r12
	r13Out = r13
	r14bOut = <invalid>
	r15Out = r15
	return SLICE(rax_244, word32, 0)
fn0000000000411360_exit:


word32 fn00000000004117B0(word64 rsi, word32 edi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000411820
//      fn0000000000411840
// MayUse:  rdi:[0..31] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rsp
fn00000000004117B0_entry:
	word32 edi = SLICE(rdi, word32, 0)
l00000000004117B0:
	word64 rax_12
	branch edi == 0<32> l0000000000411800
l0000000000411800:
	Mem10[__errno_location():word32] = 0x5F<32>
	rax_12 = 0xFFFFFFFF<u64>
l00000000004117B8:
	bool v16_48 = edi != 0xA<32>
	rax_12 = CONVERT(edi, word32, uint64)
	branch edi == 0xA<32> l00000000004117C8
l00000000004117C8:
	word64 rdx_19 = Mem0[rsi:word64]
	word64 rdi_21 = 0x4137B1<u64>
	word64 rcx_23 = 0xA<u64>
	word64 rsi_24 = rdx_19
l00000000004117D8:
	branch rcx_23 == 0<64> l00000000004117DA
l00000000004117D8_1:
	v16_48 = Mem0[rsi_75:byte] != Mem0[rdi_76:byte]
	rsi_24 = rsi_75 + 1<i64>
	rdi_21 = rdi_76 + 1<i64>
	rcx_23 = rcx_23 - 1<64>
	rsi_75 = rsi_24
	rdi_76 = rdi_21
	branch Mem0[rsi_75:byte] != Mem0[rdi_76:byte] l00000000004117D8
l00000000004117DA:
	branch v16_48 l00000000004117BF
l00000000004117DC:
	freecon(rdx_19)
	Mem40[__errno_location():word32] = 0x3D<32>
	rax_12 = 0xFFFFFFFF<u64>
l00000000004117BF:
	return SLICE(rax_12, word32, 0)
fn00000000004117B0_exit:


word32 fn0000000000411820(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000407EA0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rbx rsp
fn0000000000411820_entry:
l0000000000411820:
	word64 rdi_13 = CONVERT(getfilecon(rdi, rsi), int32, uint64)
l000000000041182F_thunk_fn00000000004117B0:
	return fn00000000004117B0(rsi, SLICE(rdi_13, word32, 0))
fn0000000000411820_exit:


word32 fn0000000000411840(word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000407EA0
// MayUse:  rdi:[0..63] rsi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rcx rdi rdx rsi Top
// Preserved: rbx rsp
fn0000000000411840_entry:
l0000000000411840:
	word64 rdi_13 = CONVERT(lgetfilecon(rdi, rsi), int32, uint64)
l000000000041184F_thunk_fn00000000004117B0:
	return fn00000000004117B0(rsi, SLICE(rdi_13, word32, 0))
fn0000000000411840_exit:


void fn0000000000411880(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx rsi Top
// Preserved: r12 rbp rbx rdi rsp
fn0000000000411880_entry:
l0000000000411880:
	word64 rax_15 = __fpending(rdi)
	word32 ebx_27 = Mem14[rdi:word32]
	byte dl_33 = CONVERT(fn0000000000411D30(rdi) != 0<32>, bool, int8)
	branch (ebx_27 & 0x20<32>) != 0<32> l00000000004118C0
l00000000004118C0:
	branch dl_33 != 0<8> l00000000004118B4
l00000000004118C9:
	Mem44[__errno_location():word32] = 0<32>
	return
l00000000004118A6:
	branch dl_33 == 0<8> l00000000004118B4
l00000000004118AA:
	branch rax_15 == 0<64> l00000000004118E0
l00000000004118E0:
	__errno_location()
	return
l00000000004118B4:
	return
fn0000000000411880_exit:


word64 fn0000000000411900(selector fs)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000000000040D7B0
// MayUse:  fs:[0..15]
// LiveOut: rcx
// Trashed: SCZO rcx rdi Top
// Preserved: fs r10 r12 r13 r14 r15 rbp rbx rdx rsi rsp
fn0000000000411900_entry:
l0000000000411900:
	word64 rax_26 = Mem23[fs:0x28<32>:word64]
	word64 rax_30 = nl_langinfo(14<i32>)
	word64 r14_31 = Mem27[0x000000000061B358<p64>:word64]
	word64 rbx_34 = rax_30
	branch rax_30 != 0<64> l0000000000411944
l0000000000411940_1:
	rbx_34 = 0x416919<u64>
l0000000000411944:
	branch r14_31 != 0<64> l000000000041196A
l0000000000411949:
l00000000004119D4:
	word32 dwLocD0_612
	word64 r12_57
	word64 r13_72
	word64 rax_59
	word64 rax_45 = getenv(0x417002<u64>)
	word64 r15_100 = rax_45
	branch rax_45 == 0<64> l00000000004119EF
l00000000004119E6:
	branch Mem27[rax_45:byte] != 0<8> l0000000000411C52
l0000000000411C52:
	word64 rax_54 = strlen(rax_45)
	r12_57 = rax_54
	branch rax_54 == 0<64> l0000000000411C42
l0000000000411C62:
	rax_59 = rax_54 - 1<64>
l00000000004119EF:
	rax_59 = 7<u64>
	r12_57 = 8<u64>
	r15_100 = 0x416FF3<u64>
l0000000000411A00:
	r13_72 = 1<u64>
	dwLocD0_612 = 1<32>
	branch Mem27[r15_100 + rax_59:byte] == 0x2F<8> l0000000000411C42
l0000000000411C42:
	r13_72 = 0<u64>
	dwLocD0_612 = 0<32>
l0000000000411A19:
	word64 r13_89 = r13_72 + r12_57
	word64 rax_91 = malloc(r13_89 + 0xE<64>)
	branch rax_91 == 0<64> l0000000000411CF2
l0000000000411CF2:
	r14_31 = 0x416919<u64>
l0000000000411A31:
	memcpy(rax_91, r15_100, r12_57)
	branch dwLocD0_612 == 0<32> l0000000000411A4D
l0000000000411A47:
	Mem112[rax_91:byte] = 0x2F<8>
l0000000000411A4D:
	word64 r13_115 = r13_89 + rax_91
	Mem119[r13_115:word64] = 0x2E74657372616863<64>
	Mem122[r13_115 + 8<64>:word32] = 0x61696C61<32>
	Mem124[r13_115 + 0xC<64>:word16] = 0x73<16>
	word32 eax_128 = open(rax_91, 131072<i32>)
	branch eax_128 < 0<32> l0000000000411C28
l0000000000411A8A:
	word64 rax_138 = fdopen(eax_128, 0x413A21<u64>)
	branch rax_138 == 0<64> l0000000000411C20
l0000000000411C20:
	close(eax_128)
l0000000000411AA2:
	word64 qwLocD0_615 = 0<64>
l0000000000411AB0:
	word64 rdi_160
	word64 rax_152 = Mem151[rax_138 + 8<64>:word64]
	branch rax_152 >=u Mem151[rax_138 + 0x10<64>:word64] l0000000000411C01
l0000000000411ABE:
	Mem158[rax_138 + 8<64>:word64] = rax_152 + 1<64>
	rdi_160 = CONVERT(Mem158[rax_152:byte], byte, uint64)
l0000000000411AC9:
	word32 edi_161 = SLICE(rdi_160, word32, 0)
	branch edi_161 == 0x20<32> l0000000000411AB0
l0000000000411ACE:
	branch edi_161 <=u 0xA<32> l0000000000411AB0
l0000000000411AD6:
	branch edi_161 == 0x23<32> l0000000000411C75
l0000000000411C75:
	word32 eax_179
	word64 rax_175 = Mem174[rax_138 + 8<64>:word64]
	branch rax_175 >=u Mem174[rax_138 + 0x10<64>:word64] l0000000000411D1D
l0000000000411D1D:
	eax_179 = __uflow(rax_138)
l0000000000411C83:
	Mem181[rax_138 + 8<64>:word64] = rax_175 + 1<64>
	eax_179 = CONVERT(Mem181[rax_175:byte], byte, word32) (alias)
l0000000000411C8E:
	branch eax_179 != 0xA<32> l0000000000411C70
l0000000000411C70:
	branch eax_179 == 0xFFFFFFFF<32> l0000000000411C93
l0000000000411C93:
	branch eax_179 != 0xFFFFFFFF<32> l0000000000411AB0
l0000000000411ADF:
	ungetc(edi_161, rax_138)
	branch fscanf(rax_138, 0x417012<u64>, fp - 0xB8<64>, fp - 0x78<64>) <= 1<32> l0000000000411C9C
l0000000000411B07:
	word64 rdx_209 = fp - 0xB8<64>
l0000000000411B0A:
	word64 rcx_213 = CONVERT(Mem419[rdx_209:word32], word32, uint64)
	word64 rax_226 = CONVERT(SLICE(rcx_213, word32, 0) + 0xFEFEFEFF<32> & ~SLICE(rcx_213, word32, 0) & 0x80808080<32>, word32, uint64)
	rdx_209 = rdx_209 + 4<64>
	word32 eax_227 = SLICE(rax_226, word32, 0)
	byte al_248 = SLICE(rax_226, byte, 0)
	branch eax_227 == 0<32> l0000000000411B0A
l0000000000411B21:
	word64 r10_234 = fp - 0x78<64>
	branch (eax_227 & 0x8080<32>) != 0<32> l0000000000411B33
l0000000000411B30_1:
	al_248 = SLICE(eax_227 >>u 0x10<32>, byte, 0) (alias)
l0000000000411B33:
	branch (eax_227 & 0x8080<32>) != 0<32> l0000000000411B3B
l0000000000411B37_1:
	rdx_209 = rdx_209 + 2<64>
l0000000000411B3B:
	word64 rdx_259 = SLICE(SEQ(rdx_209, al_248) + SEQ(3<64>, al_248), word64, 8) - (fp - 0xB8<64>)
l0000000000411B44:
	word64 rcx_264 = CONVERT(Mem419[r10_234:word32], word32, uint64)
	word64 rax_277 = CONVERT(SLICE(rcx_264, word32, 0) + 0xFEFEFEFF<32> & ~SLICE(rcx_264, word32, 0) & 0x80808080<32>, word32, uint64)
	r10_234 = r10_234 + 4<64>
	word32 eax_278 = SLICE(rax_277, word32, 0)
	byte al_297 = SLICE(rax_277, byte, 0)
	branch eax_278 == 0<32> l0000000000411B44
l0000000000411B5C:
	branch (eax_278 & 0x8080<32>) != 0<32> l0000000000411B69
l0000000000411B66_1:
	al_297 = SLICE(eax_278 >>u 0x10<32>, byte, 0) (alias)
l0000000000411B69:
	branch (eax_278 & 0x8080<32>) != 0<32> l0000000000411B71
l0000000000411B6D_1:
	r10_234 = r10_234 + 2<64>
l0000000000411B71:
	word64 r13_337
	word64 r10_311 = SLICE(SEQ(r10_234, al_297) + SEQ(3<64>, al_297), word64, 8) - (fp - 0x78<64>)
	word64 rax_318 = r10_311 + rdx_259
	branch qwLocD0_615 != 0<64> l0000000000411CBC
l0000000000411CBC:
	word64 rax_320 = rax_318 + qwLocD0_615
	qwLocD0_615 = rax_320 + 2<64>
	r13_337 = realloc(r14_31, rax_320 + 3<64>)
l0000000000411B8F:
	qwLocD0_615 = rax_318 + 2<64>
	r13_337 = malloc(rax_318 + 3<64>)
l0000000000411BB8:
	branch r13_337 == 0<64> l0000000000411D02
l0000000000411D02:
	free(r14_31)
	fn0000000000411D30(rax_138)
	r14_31 = 0x416919<u64>
l0000000000411BC1:
	word64 r14_383 = qwLocD0_615 - r10_311
	strcpy(0xFFFFFFFFFFFFFFFE<64> - rdx_259 + r14_383 + r13_337, fp - 0xB8<64>)
	strcpy(r13_337 - 1<64> + r14_383, fp - 0x78<64>)
	r14_31 = r13_337
	rax_152 = Mem372[rax_138 + 8<64>:word64]
	branch rax_152 <u Mem372[rax_138 + 0x10<64>:word64] l0000000000411ABE
l0000000000411C01:
	word32 eax_396 = __uflow(rax_138)
	rdi_160 = CONVERT(eax_396, word32, uint64)
	branch eax_396 == 0xFFFFFFFF<32> l0000000000411C9C
l0000000000411C9C:
	fn0000000000411D30(rax_138)
	branch qwLocD0_615 == 0<64> l0000000000411C28
l0000000000411C28:
	r14_31 = 0x416919<u64>
l0000000000411CB2:
	Mem440[r14_31 + qwLocD0_615:byte] = 0<8>
l0000000000411C2E:
	free(rax_91)
l0000000000411C36:
	Mem460[0x000000000061B358<p64>:word64] = r14_31
l000000000041196A:
	word64 rbx_470 = rbx_34
	byte bpl_465 = Mem462[r14_31:byte]
	branch bpl_465 == 0<8> l000000000041199C
l0000000000411973:
	branch strcmp(rbx_34, r14_31) == 0<32> l000000000041198F
l0000000000411982:
	branch bpl_465 != 0x2A<8> l0000000000411950
l0000000000411988:
	branch Mem462[r14_31 + 1<64>:byte] != 0<8> l0000000000411950
l0000000000411950:
	word64 rbp_483 = r14_31 + 1<64> + strlen(r14_31)
	r14_31 = rbp_483 + 1<64> + strlen(rbp_483)
l000000000041198F:
	rbx_470 = r14_31 + 1<64> + strlen(r14_31)
l000000000041199C:
	branch Mem462[rbx_470:byte] != 0<8> l00000000004119A8
l00000000004119A4_1:
l00000000004119A8:
	word64 rcx_537 = rax_26 ^ Mem462[fs:0x28<32>:word64]
	branch rcx_537 != 0<64> l0000000000411CFD
l0000000000411CFD:
	__stack_chk_fail()
l00000000004119C2:
	return rcx_537
fn0000000000411900_exit:
l0000000000411C14:


word32 fn0000000000411D30(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000411880
//      fn0000000000411900
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi Top
// Preserved: r12 rbp rbx rdi rsp
fn0000000000411D30_entry:
l0000000000411D30:
	branch fileno(rdi) < 0<32> l0000000000411D9F
l0000000000411D43:
	branch __freading(rdi) != 0<32> l0000000000411D80
l0000000000411D80:
	word64 rax_32 = lseek(fileno(rdi), 0<u64>, 1<i32>)
	branch rax_32 != 0xFFFFFFFFFFFFFFFF<64> l0000000000411D4C
l0000000000411D4C:
	word64 rax_37 = CONVERT(fn0000000000411DB0(rdi), word32, uint64)
	branch SLICE(rax_37, word32, 0) == 0<32> l0000000000411D9C
l0000000000411D9C:
l0000000000411D9F:
	return fclose(rdi)
l0000000000411D58:
	word64 rax_64 = __errno_location()
	word32 r12d_70 = Mem12[rax_64:word32]
	word64 rax_121 = SEQ(SLICE(rax_64, word32, 32), fclose(rdi))
	branch r12d_70 == 0<32> l0000000000411D79
l0000000000411D70:
	Mem74[rax_64:word32] = r12d_70
	rax_121 = 0xFFFFFFFF<u64>
l0000000000411D79:
	return SLICE(rax_121, word32, 0)
fn0000000000411D30_exit:


word32 fn0000000000411DB0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000411D30
// MayUse:  rdi:[0..63]
// LiveOut: rax
// Trashed: SCZO rax rdx rsi Top
// Preserved: rbx rdi rsp
fn0000000000411DB0_entry:
l0000000000411DB0:
	branch rdi == 0<64> l0000000000411DC2
l0000000000411DB9:
	branch __freading(rdi) != 0<32> l0000000000411DD0
l0000000000411DD0:
	branch (Mem9[rdi:word32] & 0x100<32>) == 0<32> l0000000000411DC2
l0000000000411DD8:
	fn0000000000411DF0(1<32>, 0<u64>, rdi)
	return fflush(rdi)
l0000000000411DC2:
	return fflush(rdi)
fn0000000000411DB0_exit:


void fn0000000000411DF0(word32 edx, word64 rsi, word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000000000411DB0
// MayUse:  rdi:[0..63] rdx:[0..31] rsi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdi rdx Top
// Preserved: rbx rsi rsp
fn0000000000411DF0_entry:
	word32 edx = SLICE(rdx, word32, 0)
l0000000000411DF0:
	branch Mem6[rdi + 0x10<64>:word64] == Mem6[rdi + 8<64>:word64] l0000000000411E10
l0000000000411E10:
	branch Mem6[rdi + 0x28<64>:word64] != Mem6[rdi + 0x20<64>:word64] l0000000000411E02
l0000000000411E1A:
	branch Mem6[rdi + 0x48<64>:word64] != 0<64> l0000000000411E02
l0000000000411E21:
	word64 rax_28 = lseek(fileno(rdi), rsi, edx)
	branch rax_28 == 0xFFFFFFFFFFFFFFFF<64> l0000000000411E4F
l0000000000411E43:
	Mem32[rdi:word32] = Mem21[rdi:word32] & 0xFFFFFFEF<32>
	Mem34[rdi + 0x90<64>:word64] = rax_28
l0000000000411E4F:
	return
l0000000000411E02:
	fseeko(rdi, rsi, SLICE(rdx, int32, 0))
	return
fn0000000000411DF0_exit:


void fn0000000000411EE0(word64 rdi)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00000000004028C0
// MayUse:  rdi:[0..63]
// LiveOut:
// Trashed: SCZO rax rdx rsi Top
// Preserved: rsp
fn0000000000411EE0_entry:
l0000000000411EE0:
	word64 rdx_14
	branch 0x000000000061A3A8<p64> == 0<64> l0000000000411EF6
l0000000000411EF6:
	rdx_14 = 0<u64>
l0000000000411EEC:
	rdx_14 = Mem0[0x000000000061A3A8<p64>:word64]
l0000000000411EEF:
	__cxa_atexit(rdi, 0<u64>, rdx_14)
	return
fn0000000000411EE0_exit:


