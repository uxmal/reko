void fn00004000(word20 sr, word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn00004000_exit:
fn00004000_entry:
l00004000:
	Mem3[0x0120<p16>:word16] = 0x5A80<16>
	word20 r15_12 = 0x5B78<16>
	word20 r14_13 = 0x200<16>
	word20 r13_6 = 0x21C<16>
	branch r13_6 == r14_13 l00004020
l00004016:
	Mem14[r14_13:byte] = Mem10[r15_12:byte]
	r15_12 = r15_12 + 1<i16>
	r14_13 = r14_13 + 1<16>
	branch r14_13 >=u r13_6 l00004016
l00004020:
	word20 r15_19 = 0x21C<16>
	word20 r13_20 = 0x9B4<16>
	branch r13_20 == r15_19 l00004036
l0000402C:
	Mem24[r15_19:byte] = 0<8>
	r15_19 = r15_19 + 1<16>
	branch r15_19 >=u r13_20 l0000402C
l00004036:
l00004036_thunk_main:
	main(sr, r8)


void task_idle(word20 sr, word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r8:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
task_idle_exit:
task_idle_entry:
l4048:
	word20 r15_13
	word20 sr_14 = xTaskGetTickCount(sr, out r15_13)
	word20 r10_20 = r15_13 + 0x3E8<16>
l405A:
	word20 r15_27
	sr_14 = xTaskGetTickCount(sr_14, out r15_27)
	branch r10_20 - r15_27 >= 1<16> l4080
l4080:
l406A:
	printf(r8)
	r10_20 = r15_27 + 0x3E8<16>


void task_1(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_1_exit:
task_1_entry:
	struct <anonymous> tLoc02
l4096:
	word20 r15_6
	word20 sr_19 = xTaskGetTickCount(sr, out r15_6)
	Mem12[&tLoc02:word16] = r15_6
l40A0:
	Mem16[0x0031<p16>:byte] = Mem13[0x0031<p16>:byte] ^ 1<8>
	word20 r11_46
	sr_19 = vTaskDelayUntil(putchar(sr_19, 0x58<16>, out r11_46), 0x1F4<16>, &tLoc02)


void task_2(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_2_exit:
task_2_entry:
	struct <anonymous> tLoc02
l40BC:
	word20 r15_6
	word20 sr_19 = xTaskGetTickCount(sr, out r15_6)
	Mem12[&tLoc02:word16] = r15_6
l40C6:
	Mem16[0x0031<p16>:byte] = Mem13[0x0031<p16>:byte] ^ 2<8>
	word20 r11_46
	sr_19 = vTaskDelayUntil(putchar(sr_19, 0x59<16>, out r11_46), 0xFA<16>, &tLoc02)


void task_3(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
task_3_exit:
task_3_entry:
	struct <anonymous> tLoc02
l40E2:
	word20 r15_6
	word20 sr_19 = xTaskGetTickCount(sr, out r15_6)
	Mem12[&tLoc02:word16] = r15_6
l40EC:
	Mem16[0x0031<p16>:byte] = Mem13[0x0031<p16>:byte] ^ 4<8>
	word20 r11_46
	sr_19 = vTaskDelayUntil(putchar(sr_19, 0x5A<16>, out r11_46), 0x19<16>, &tLoc02)


void main(word20 sr, word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004000
// MayUse:  r8:[0..19] sr:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
main_exit:
main_entry:
l414C:
	__set_stackpointer(0xA00<16>)
	Mem3[0x0120<p16>:word16] = 0x5A80<16>
	Mem4[0x0056<p16>:byte] = 0xFFE0<16>
	Mem5[0x0057<p16>:byte] = 7<16>
	Mem6[0x0032<p16>:byte] = 7<16>
	Mem7[0x0031<p16>:byte] = 7<16>
	word20 sr_23 = init_uart_isr(0x2580<32>, sr, 0x10<16>)
	uart_putchar_isr_mode(0<8>)
	printf(r8)
	uart_putchar_isr_mode(1<8>)
	word20 r15_154
	word20 r15_155
	word20 r15_156
	word20 r15_157
	vTaskStartScheduler(xTaskCreate(xTaskCreate(xTaskCreate(xTaskCreate(sr_23, 0<16>, 0x32<16>, 0x414B<16>, 0x4096<16>, out r15_154), 0<16>, 0x32<16>, 0x414B<16>, 0x40BC<16>, out r15_155), 0<16>, 0x32<16>, 0x414B<16>, 0x40E2<16>, out r15_156), 0<16>, 0x96<16>, 0x414B<16>, 0x4048<16>, out r15_157))
l5AD8:


word20 msp430_compute_modulator_bits(ui40 r13_r12, ui40 r15_r14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      init_uart_isr
// MayUse:  Sequence r13:r12:[0..39] Sequence r15:r14:[0..39]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 r4 r5 r6 r7 r8 r9 sp sr
msp430_compute_modulator_bits_entry:
	word16 fp
	word20 r14 = SLICE(r15_r14, word20, 0)
	word20 r15 = SLICE(r15_r14, word20, 20)
l0000420E:
	word16 v16_39 = Mem26[fp + 2<32>:word16]
	word20 r12_45 = fn00005B04(r15_r14, r13_r12)
	ui40 r9_r8_209 = fn00005ADC(r14, r15, r12_45, 0<16>) - r13_r12
	branch v16_39 == 0<16> l00004274
l0000426C:
	Mem86[v16_39:word16] = r12_45
l00004274:
	word20 r7_137 = 0<8>
	word20 r6_126 = 0<8>
	ui40 r11_r10_296 = 0<32>
l0000427C:
	ui40 r11_r10_212 = r11_r10_296 + r9_r8_209
	branch SLICE(r11_r10_212 * 2<40> - ((r15_r14 ^ 0xFFFFFFFF<32>) + 1<40>), word20, 20) >= 0<20> l000042AE
l0000429A:
	r11_r10_212 = r11_r10_212 + r15_r14
	word20 r15_125 = 1<16>
	word20 r14_127 = r6_126
	branch r6_126 == 0<20> l000042AC
l000042A6:
	r15_125 = r15_125 * 2<20>
	r14_127 = r14_127 - 1<16>
	branch r14_127 != 0<20> l000042A6
l000042AC:
	r7_137 = r7_137 | r15_125
l000042AE:
	r6_126 = r6_126 + 1<8>
	r11_r10_296 = r11_r10_212 (alias)
	branch r6_126 >=u 8<8> l0000427C
l000042B4:
	return r7_137
msp430_compute_modulator_bits_exit:


word20 init_uart_isr(word40 r14_r13, word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004000
// MayUse:  r15:[0..19] Sequence r14:r13:[0..39] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 r4 r6 r7 r8 r9 sp
init_uart_isr_entry:
	word16 wLoc10
	word16 fp
	byte bLoc10 = SLICE(wLoc10, byte, 0)
l000042CC:
	word16 v15_34 = Mem23[fp + 2<32>:word16]
	word16 v16_37 = Mem23[fp + 4<32>:word16]
	byte v17_41 = Mem23[fp + 6<32>:byte]
	Mem47[0x0218<p16>:word16] = Mem23[0x0218<p16>:word16] + 1<16>
	word20 r15_52
	word20 sr_53 = xQueueCreate(sr & 0xFFF7<16>, v17_41, out r15_52)
	Mem58[0x021C<p16>:word16] = r15_52
	word20 r15_62
	word20 sr_121 = xQueueCreate(sr_53, v17_41, out r15_62)
	Mem68[0x021E<p16>:word16] = r15_62
	Mem69[0x0078<p16>:byte] = 1<8>
	Mem72[0x0078<p16>:byte] = Mem69[0x0078<p16>:byte] | 0x10<16>
	Mem76[0x0079<p16>:byte] = r15 & 0x30<16>
	word20 r15_88 = msp430_compute_modulator_bits(SEQ(v16_37, v15_34), r14_r13)
	Mem95[0x007C<p16>:byte] = bLoc10
	Mem100[0x007D<p16>:byte] = __swpb(wLoc10) & 0xFF<8>
	Mem101[0x007B<p16>:byte] = r15_88
	Mem104[0x0005<p16>:byte] = Mem101[0x0005<p16>:byte] | 0x30<16>
	Mem105[0x0078<p16>:byte] = 0x10<16>
	Mem108[0x001B<p16>:byte] = Mem105[0x001B<p16>:byte] | 0xFFC0<16>
	Mem111[0x0001<p16>:byte] = Mem108[0x0001<p16>:byte] | 0x30<16>
	branch Mem111[0x0218<p16>:word16] == 0<16> l0000436E
l00004366:
	word16 v30_116 = Mem111[0x0218<p16>:word16]
	Mem118[0x0218<p16>:word16] = v30_116 + 0xFFFF<16>
	branch v30_116 != 0xFFFF<16> l0000436E
l0000436C:
	sr_121 = sr_121 | 8<16>
l0000436E:
	return sr_121
init_uart_isr_exit:


void getchar(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: sp
getchar_entry:
	word16 fp
l4380:
	branch x_getchar(sr, 0x64<16>, fp - 2<16>) == 0<20> l4396
l4396:
l4390:
l4398:
	return
getchar_exit:


void uart_putchar_isr_mode(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004000
// MayUse:  r15:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
uart_putchar_isr_mode_entry:
l0000439C:
	Mem4[0x0200<p16>:byte] = r15
	return
uart_putchar_isr_mode_exit:


word20 putchar(word20 sr, word20 r15, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      task_1
//      task_2
//      task_3
//      putchar
// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r11 sr
// Trashed: VNZC r13 r14 r15 sr
// Preserved: r11 sp
putchar_entry:
l000043A2:
	word20 r11_12 = r15
	branch r15 == 0xA<16> l000043D6
l000043D6:
	putchar(sr, 0xD<16>, out r11_12)
l000043AC:
	word20 r15_26
	branch Mem5[0x0200<p16>:byte] != 0<8> l000043CA
l000043CA:
	sr = x_putchar(sr, 0x64<16>, r11_12, out r15_26)
l000043B2:
	branch (Mem5[0x0079<p16>:byte] & 1<8>) == 0<8> l000043B2
l000043B8:
	Mem40[0x007F<p16>:byte] = r11_12
	r15_26 = 1<16>
l000043BE:
	branch r15_26 == 0<20> l000043C6
l000043C6:
l000043C2:
l000043E0:
	r11Out = <invalid>
	return sr
putchar_exit:


word20 x_getchar(word20 sr, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      getchar
// MayUse:  r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: sp
x_getchar_entry:
l43E4:
	word20 r15_12
	xQueueReceive(sr, r14, r15, Mem0[0x021C<p16>:word16], out r15_12)
	branch r15_12 == 0<20> l43F8
l43F8:
	return 0<16>
l43F4:
	return 1<16>
x_getchar_exit:


word20 x_putchar(word20 sr, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      putchar
// MayUse:  r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r13 r15 sr
// Preserved: r12 r14 r4 r5 r6 r7 r8 sp
x_putchar_entry:
	word16 fp
l000043FC:
	Mem12[0x0218<p16>:word16] = Mem5[0x0218<p16>:word16] + 1<16>
	word20 sr_111 = sr & 0xFFF7<16>
	branch Mem12[0x0220<p16>:word16] == 1<16> l00004440
l00004410:
	word20 r15_22
	sr_111 = xQueueSend(sr & 0xFFF7<16>, r14, fp - 2<16>, Mem12[0x021E<p16>:word16], out r15_22)
	branch Mem12[0x0220<p16>:word16] == 1<16> l00004430
l00004430:
	branch r15_22 != 1<16> l00004420
l00004434:
	word20 r15_115
	sr_111 = xQueueReceive(sr_111, 0<16>, fp - 2<16>, Mem12[0x021E<p16>:word16], out r15_115)
l00004440:
	Mem56[0x0220<p16>:word16] = 0<16>
	Mem59[0x007F<p16>:byte] = r15
l00004420:
	branch Mem60[0x0218<p16>:word16] == 0<16> l0000444A
l00004426:
	word16 v14_64 = Mem60[0x0218<p16>:word16]
	Mem66[0x0218<p16>:word16] = v14_64 + 0xFFFF<16>
	branch v14_64 != 0xFFFF<16> l0000444A
l0000442C:
	sr_111 = sr_111 | 8<16>
l0000444A:
	r15Out = 1<16>
	return sr_111
x_putchar_exit:


void vRxISR(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed: VNZC r10 r11 r4 r5 r6 r7 r8 r9 sr
// Preserved: r12 r13 r14 r15 sp
vRxISR_entry:
	word16 fp
l4450:
	word20 r15_27
	word20 sr_28 = xQueueSendFromISR(sr, 0<16>, fp - 0xA<32>, Mem18[0x021C<p16>:word16], out r15_27)
	branch r15_27 == 0<20> l4474
l4470:
	word20 r11_102
	word20 r10_101
	word20 r9_100
	word20 r8_99
	vPortYield(sr_28, out r8_99, out r9_100, out r10_101, out r11_102)
l4474:
	return
vRxISR_exit:


void vTxISR(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed: VNZC sr
// Preserved: r12 r13 r14 r15 sp
vTxISR_entry:
	word16 fp
	struct <anonymous> tLoc0C
	byte bLoc0A
l4480:
	branch xQueueReceiveFromISR(sr, &tLoc0C, fp - 0xA<32>, Mem14[0x021E<p16>:word16]) == 1<16> l44A2
l44A2:
	Mem35[0x007F<p16>:byte] = bLoc0A
l449C:
	Mem36[0x0220<p16>:word16] = 1<16>
l44A8:
	return
vTxISR_exit:


word20 xTaskCreate(word20 sr, word20 r12, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004000
//      vTaskStartScheduler
// MayUse:  r12:[0..19] r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 r4 sr
// Preserved: r10 r11 r5 r6 r7 r8 r9 sp
xTaskCreate_entry:
	word16 fp
l000044B4:
	word20 r10_144
	word16 v15_35 = Mem23[fp + 2<32>:word16]
	word16 v16_37 = Mem23[fp + 4<32>:word16]
	word20 r15_45
	word20 sr_157 = prvAllocateTCBAndStack(sr, r13, out r15_45)
	branch r15_45 == 0<20> l000045A0
l000045A0:
	r10_144 = 0xFFFF<16>
l000044E2:
	prvInitialiseTCBVariables(v15_35, r14, r13, r15_45)
	Mem79[r15_45:word16] = pxPortInitialiseStack(r12, r15, Mem23[r15_45 + 36<i16>:word16] *20 2<20> + Mem23[r15_45 + 2<i16>:word16] - 2<16>)
	Mem83[0x0218<p16>:word16] = Mem79[0x0218<p16>:word16] + 1<16>
	Mem86[0x0206<p16>:word16] = Mem83[0x0206<p16>:word16] + 1<16>
	sr_157 = sr_157 & 0xFFF7<16>
	branch Mem86[0x0206<p16>:word16] == 1<16> l00004596
l00004596:
	Mem90[0x0202<p16>:word16] = r15_45
	prvInitialiseTaskLists()
l00004514:
	branch Mem86[0x020E<p16>:word16] != 0<16> l0000452A
l0000451A:
	branch v15_35 >=u Mem86[Mem86[0x0202<p16>:word16] + 6<i16>:word16] l0000452A
l00004526:
	Mem105[0x0202<p16>:word16] = r15_45
l0000452A:
	word16 v28_108 = Mem107[r15_45 + 6<i16>:word16]
	branch Mem107[0x020A<p16>:word16] <u v28_108 l00004538
l00004534:
	Mem113[0x020A<p16>:word16] = v28_108
l00004538:
	Mem117[r15_45 + 4<i16>:word16] = Mem114[0x0214<p16>:word16]
	Mem120[0x0214<p16>:word16] = Mem117[0x0214<p16>:word16] + 1<16>
	Mem121[r15_45 + 8<i16>:word16] = 0<16>
	branch Mem121[0x020C<p16>:word16] <u v28_108 l00004550
l0000454C:
	Mem126[0x020C<p16>:word16] = v28_108
l00004550:
	vListInsertEnd(r15_45 + 8<16>, v28_108 *20 0x10<20> + 0x222<16>)
	r10_144 = 1<16>
	branch Mem145[0x0218<p16>:word16] == 0<16> l00004574
l0000456C:
	word16 v44_149 = Mem145[0x0218<p16>:word16]
	Mem151[0x0218<p16>:word16] = v44_149 + 0xFFFF<16>
	branch v44_149 != 0xFFFF<16> l00004574
l00004572:
	sr_157 = sr_157 & 0xFFF7<16> | 8<16>
l00004574:
	branch r10_144 != 1<16> l000045A4
l00004578:
	branch v16_37 == 0<16> l00004580
l0000457C:
	Mem168[v16_37:word16] = r15_45
l00004580:
	branch Mem169[0x020E<p16>:word16] == 0<16> l000045A4
l00004586:
	branch Mem169[Mem169[0x0202<p16>:word16] + 6<i16>:word16] <u v15_35 l000045A4
l00004590:
	word20 r9_316
	word20 r11_317
	word20 r8_315
	sr_157 = vPortYield(sr_157, out r8_315, out r9_316, out r10_144, out r11_317)
l000045A4:
	r15Out = r10_144
	return sr_157
xTaskCreate_exit:


void vTaskDelete(word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
vTaskDelete_entry:
l45B6:
	Mem18[0x0218<p16>:word16] = Mem11[0x0218<p16>:word16] + 1<16>
	word20 sr_15 = sr & 0xFFF7<16>
	word20 r11_19 = r15
	branch r15 == 0<20> l460C
l460C:
	r11_19 = Mem18[0x0202<p16>:word16]
l45CA:
	word20 r10_26 = r11_19 + 8<16>
	vListRemove(r10_26)
	branch Mem18[r11_19 + 26<i16>:word16] != 0<16> l4600
l4600:
	vListRemove(r11_19 + 0x12<16>)
l45DA:
	vListInsertEnd(r10_26, 0x296<16>)
	Mem63[0x0204<p16>:word16] = Mem18[0x0204<p16>:word16] + 1<16>
	branch Mem63[0x0218<p16>:word16] == 0<16> l45F6
l45EE:
	word16 v15_67 = Mem63[0x0218<p16>:word16]
	Mem69[0x0218<p16>:word16] = v15_67 + 0xFFFF<16>
	branch v15_67 != 0xFFFF<16> l45F6
l45F4:
	sr_15 = sr & 0xFFF7<16> | 8<16>
l45F6:
	branch r15 != 0<20> l4612
l45FA:
	word20 r9_171
	word20 r10_172
	word20 r11_173
	word20 r8_170
	vPortYield(sr_15, out r8_170, out r9_171, out r10_172, out r11_173)
l4612:
	return
vTaskDelete_exit:


word20 vTaskDelayUntil(word20 sr, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      task_1
//      task_2
//      task_3
// MayUse:  r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
vTaskDelayUntil_entry:
l0000461A:
	word20 sr_18 = vTaskSuspendAll(sr)
	word16 v8_23 = Mem11[r15:word16]
	word20 r10_16 = 0<16>
	word20 r11_25 = r14 + v8_23
	branch Mem11[0x0208<p16>:word16] <u v8_23 l00004690
l00004690:
	branch r11_25 >=u v8_23 l0000463E
l00004694:
l00004634:
	branch r11_25 <u v8_23 l00004640
l00004638:
	branch Mem11[0x0208<p16>:word16] <u r11_25 l00004640
l0000463E:
	r10_16 = 1<16>
l00004640:
	Mem44[r15:word16] = r11_25
	branch r10_16 != 0<20> l00004656
l00004656:
	word20 r14_71
	word20 r15_73
	vListRemove(Mem44[0x0202<p16>:word16] + 8<16>)
	Mem62[Mem44[0x0202<p16>:word16] + 8<i16>:word16] = r11_25
	branch r11_25 <u Mem62[0x0208<p16>:word16] l00004682
l00004682:
	r14_71 = Mem62[0x0202<p16>:word16] + 8<16>
	r15_73 = Mem62[0x0282<p16>:word16]
l00004670:
	r14_71 = Mem62[0x0202<p16>:word16] + 8<16>
	r15_73 = Mem62[0x0284<p16>:word16]
l0000467C:
	vListInsert(r14_71, r15_73)
l00004648:
	word20 r15_95
	word20 sr_116 = xTaskResumeAll(sr_18, out r15_95)
	branch r15_95 != 0<20> l00004696
l00004650:
	word20 r10_223
	word20 r8_221
	word20 r11_224
	word20 r9_222
	sr_116 = vPortYield(sr_116, out r8_221, out r9_222, out r10_223, out r11_224)
l00004696:
	return sr_116
vTaskDelayUntil_exit:


void vTaskDelay(word20 sr, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut:
// Trashed: VNZC r10 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: r11 sp
vTaskDelay_entry:
l469E:
	word20 r15_61 = 0<16>
	branch r15 != 0<20> l46B2
l46B2:
	word20 r14_41
	word20 r15_43
	word20 sr_12 = vTaskSuspendAll(sr)
	word20 r11_18 = r15 + Mem5[0x0208<p16>:word16]
	vListRemove(Mem5[0x0202<p16>:word16] + 8<16>)
	Mem32[Mem5[0x0202<p16>:word16] + 8<i16>:word16] = r11_18
	branch r11_18 <u Mem32[0x0208<p16>:word16] l46EA
l46EA:
	r14_41 = Mem32[0x0202<p16>:word16] + 8<16>
	r15_43 = Mem32[0x0282<p16>:word16]
l46D4:
	r14_41 = Mem32[0x0202<p16>:word16] + 8<16>
	r15_43 = Mem32[0x0284<p16>:word16]
l46E0:
	vListInsert(r14_41, r15_43)
	sr = xTaskResumeAll(sr_12, out r15_61)
l46A8:
	branch r15_61 != 0<20> l46F8
l46AC:
	word20 r10_150
	word20 r11_151
	word20 r8_148
	word20 r9_149
	vPortYield(sr, out r8_148, out r9_149, out r10_150, out r11_151)
l46F8:
	return
vTaskDelay_exit:


void vTaskStartScheduler(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004000
// MayUse:  sr:[0..19]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sr
// Preserved: sp
vTaskStartScheduler_entry:
l00004702:
	branch Mem0[0x0202<p16>:word16] != 0<16> l0000470A
l0000470A:
	word20 r15_19
	xTaskCreate(sr, 0<16>, 0x32<16>, 0x46FC<16>, 0x49AC<16>, out r15_19)
	branch r15_19 != 1<16> l00004708
l00004726:
	Mem30[0x020E<p16>:word16] = 1<16>
	Mem31[0x0208<p16>:word16] = 0<16>
	xPortStartScheduler()
l00004708:
	return
vTaskStartScheduler_exit:


void vTaskEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: sr
// Preserved: sp
vTaskEndScheduler_entry:
l4736:
	Mem5[0x020E<p16>:word16] = 0<16>
	vPortEndScheduler()
	return
vTaskEndScheduler_exit:


word20 vTaskSuspendAll(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelayUntil
//      vTaskDelay
//      prvCheckTasksWaitingTermination
//      xQueueSend
//      xQueueReceive
//      pvPortMalloc
// MayUse:  sr:[0..19]
// LiveOut: sr
// Trashed: VNZC sr
// Preserved: sp
vTaskSuspendAll_entry:
l00004742:
	Mem8[0x0218<p16>:word16] = Mem0[0x0218<p16>:word16] + 1<16>
	Mem11[0x0210<p16>:word16] = Mem8[0x0210<p16>:word16] + 1<16>
	word20 sr_20 = sr & 0xFFF7<16>
	branch Mem11[0x0218<p16>:word16] == 0<16> l0000475A
l00004752:
	word16 v9_15 = Mem11[0x0218<p16>:word16]
	Mem17[0x0218<p16>:word16] = v9_15 + 0xFFFF<16>
	branch v9_15 != 0xFFFF<16> l0000475A
l00004758:
	sr_20 = sr & 0xFFF7<16> | 8<16>
l0000475A:
	return sr_20
vTaskSuspendAll_exit:


word20 xTaskResumeAll(word20 sr, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelayUntil
//      vTaskDelay
//      prvCheckTasksWaitingTermination
//      xQueueSend
//      xQueueReceive
//      pvPortMalloc
// MayUse:  sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r15 sr
// Preserved: r10 r11 r12 r13 r14 r4 r5 r6 r7 r8 r9 sp
xTaskResumeAll_entry:
l0000475C:
	Mem20[0x0218<p16>:word16] = Mem14[0x0218<p16>:word16] + 1<16>
	word16 v10_21 = Mem20[0x0210<p16>:word16]
	Mem23[0x0210<p16>:word16] = v10_21 + 0xFFFF<16>
	word20 r8_109 = 0<16>
	word20 sr_106 = sr & 0xFFF7<16>
	branch v10_21 != 0xFFFF<16> l000047EA
l00004772:
	branch Mem23[0x0206<p16>:word16] == 0<16> l000047EA
l00004778:
	word20 r9_188 = 0<16>
l0000477A:
	word20 r11_34
	branch Mem30[0x0286<p16>:word16] == 0<16> l0000480E
l0000480E:
	r11_34 = 0<16>
l00004780:
	r11_34 = Mem30[Mem30[Mem30[0x0288<p16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l0000478C:
	branch r11_34 == 0<20> l000047D8
l000047D8:
	branch Mem30[0x0212<p16>:word16] == 0<16> l000047E6
l000047DE:
	branch Mem30[0x0212<p16>:word16] != 0<16> l00004802
l00004802:
	vTaskIncrementTick()
	word16 v33_60 = Mem59[0x0212<p16>:word16]
	Mem62[0x0212<p16>:word16] = v33_60 + 0xFFFF<16>
	branch v33_60 != 0xFFFF<16> l00004802
l0000480C:
l000047E4:
	r9_188 = 1<16>
l000047E6:
	branch r9_188 == 1<16> l000047FA
l000047FA:
	word20 r10_299
	word20 r9_298
	word20 r11_300
	sr_106 = vPortYield(sr & 0xFFF7<16>, out r8_109, out r9_298, out r10_299, out r11_300)
l000047EA:
	branch Mem95[0x0218<p16>:word16] == 0<16> l00004812
l000047F0:
	word16 v22_101 = Mem95[0x0218<p16>:word16]
	Mem103[0x0218<p16>:word16] = v22_101 + 0xFFFF<16>
	branch v22_101 != 0xFFFF<16> l00004812
l000047F6:
	sr_106 = sr_106 | 8<16>
l00004812:
	r15Out = r8_109
	return sr_106
xTaskResumeAll_exit:
l00004790:
	vListRemove(r11_34 + 0x12<16>)
	word20 r10_147 = r11_34 + 8<16>
	vListRemove(r10_147)
	Mem157[r11_34 + 8<i16>:word16] = 0<16>
	word16 v18_158 = Mem157[r11_34 + 6<i16>:word16]
	branch Mem157[0x020C<p16>:word16] <u v18_158 l000047B6
l000047B2:
	Mem163[0x020C<p16>:word16] = v18_158
l000047B6:
	vListInsertEnd(r10_147, v18_158 *20 0x10<20> + 0x222<16>)
	branch Mem180[Mem180[0x0202<p16>:word16] + 6<i16>:word16] <u Mem180[r11_34 + 6<i16>:word16] l0000477A
l000047D4:
	r9_188 = 1<16>


word20 xTaskGetTickCount(word20 sr, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      task_idle
//      task_1
//      task_2
//      task_3
// MayUse:  sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r15 sr
// Preserved: sp
xTaskGetTickCount_entry:
l0000481E:
	word16 v4_6 = Mem0[0x0218<p16>:word16]
	Mem8[0x0218<p16>:word16] = v4_6 + 1<16>
	word20 sr_18 = sr & 0xFFF7<16>
	word20 r15_11 = Mem8[0x0208<p16>:word16]
	branch v4_6 == 1<16> l00004832
l0000482A:
	word16 v9_13 = Mem8[0x0218<p16>:word16]
	Mem15[0x0218<p16>:word16] = v9_13 + 0xFFFF<16>
	branch v9_13 != 0xFFFF<16> l00004832
l00004830:
	sr_18 = sr & 0xFFF7<16> | 8<16>
l00004832:
	r15Out = r15_11
	return sr_18
xTaskGetTickCount_exit:


void uxTaskGetNumberOfTasks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r15 sr
// Preserved: sp
uxTaskGetNumberOfTasks_entry:
l4834:
	word16 v4_6 = Mem0[0x0218<p16>:word16]
	Mem8[0x0218<p16>:word16] = v4_6 + 1<16>
	branch v4_6 == 1<16> l4848
l4840:
	word16 v9_13 = Mem8[0x0218<p16>:word16]
	Mem15[0x0218<p16>:word16] = v9_13 + 0xFFFF<16>
	branch v9_13 != 0xFFFF<16> l4848
l4846:
l4848:
	return
uxTaskGetNumberOfTasks_exit:


void vTaskIncrementTick()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskResumeAll
//      prvTickISR
// MayUse: 
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
vTaskIncrementTick_entry:
l0000484A:
	branch Mem8[0x0210<p16>:word16] != 0<16> l000048D0
l000048D0:
	Mem14[0x0212<p16>:word16] = Mem8[0x0212<p16>:word16] + 1<16>
l00004854:
	word16 v8_16 = Mem8[0x0208<p16>:word16]
	Mem18[0x0208<p16>:word16] = v8_16 + 1<16>
	branch v8_16 != 1<16> l00004868
l0000485A:
	word16 v9_21 = Mem18[0x0282<p16>:word16]
	Mem24[0x0282<p16>:word16] = Mem18[0x0284<p16>:word16]
	Mem25[0x0284<p16>:word16] = v9_21
l00004868:
	word20 r11_32
	word16 v15_27 = Mem26[0x0282<p16>:word16]
	branch Mem26[v15_27:word16] == 0<16> l000048CC
l000048CC:
	r11_32 = 0<16>
l00004872:
	r11_32 = Mem26[Mem26[Mem26[v15_27 + 2<i16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l0000487E:
	branch r11_32 == 0<20> l000048D4
l00004882:
	branch Mem26[0x0208<p16>:word16] >=u Mem26[r11_32 + 8<i16>:word16] l000048D4
l000048D4:
	return
vTaskIncrementTick_exit:
l0000488A:
	word20 r10_58 = r11_32 + 8<16>
	vListRemove(r10_58)
	branch Mem26[r11_32 + 26<i16>:word16] != 0<16> l000048C0
l000048C0:
	vListRemove(r11_32 + 0x12<16>)
l0000489A:
	Mem82[r11_32 + 8<i16>:word16] = 0<16>
	word16 v24_83 = Mem82[r11_32 + 6<i16>:word16]
	branch Mem82[0x020C<p16>:word16] <u v24_83 l000048AC
l000048A8:
	Mem88[0x020C<p16>:word16] = v24_83
l000048AC:
	vListInsertEnd(r10_58, v24_83 *20 0x10<20> + 0x222<16>)


void vTaskPlaceOnEventList(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSend
//      xQueueReceive
// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r11 sp
vTaskPlaceOnEventList_entry:
l000048DA:
	word20 r14_47
	word20 r15_49
	vListInsert(Mem5[0x0202<p16>:word16] + 0x12<16>, r15)
	word20 r11_24 = r14 + Mem5[0x0208<p16>:word16]
	vListRemove(Mem5[0x0202<p16>:word16] + 8<16>)
	Mem38[Mem5[0x0202<p16>:word16] + 8<i16>:word16] = r11_24
	branch r11_24 <u Mem38[0x0208<p16>:word16] l0000491C
l0000491C:
	r14_47 = Mem38[0x0202<p16>:word16] + 8<16>
	r15_49 = Mem38[0x0282<p16>:word16]
l0000490E:
	r14_47 = Mem38[0x0202<p16>:word16] + 8<16>
	r15_49 = Mem38[0x0284<p16>:word16]
l00004928:
	vListInsert(r14_47, r15_49)
	return
vTaskPlaceOnEventList_exit:


word20 xTaskRemoveFromEventList(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSendFromISR
//      xQueueReceiveFromISR
//      prvUnlockQueue
// MayUse:  r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
xTaskRemoveFromEventList_entry:
l00004930:
	word20 r10_13
	branch Mem8[r15:word16] == 0<16> l000049A2
l000049A2:
	r10_13 = 0<16>
l0000493A:
	r10_13 = Mem8[Mem8[Mem8[r15 + 2<i16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l00004946:
	word20 r14_36
	word20 r15_37
	vListRemove(r10_13 + 0x12<16>)
	branch Mem8[0x0210<p16>:word16] != 0<16> l0000499A
l0000499A:
	r14_36 = r10_13 + 0x12<16>
	r15_37 = 0x286<16>
l00004958:
	vListRemove(r10_13 + 8<16>)
	Mem48[r10_13 + 8<i16>:word16] = 0<16>
	word16 v13_49 = Mem48[r10_13 + 6<i16>:word16]
	branch Mem48[0x020C<p16>:word16] <u v13_49 l00004974
l00004970:
	Mem54[0x020C<p16>:word16] = v13_49
l00004974:
	r15_37 = v13_49 *20 0x10<20> + 0x222<16>
	r14_36 = r10_13 + 8<16>
l00004982:
	word20 r15_112
	vListInsertEnd(r14_36, r15_37)
	branch Mem73[Mem73[0x0202<p16>:word16] + 6<i16>:word16] <u Mem73[r10_13 + 6<i16>:word16] l00004996
l00004996:
	r15_112 = 0<16>
l00004992:
	r15_112 = 1<16>
l000049A6:
	return r15_112
xTaskRemoveFromEventList_exit:


void prvIdleTask(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  sr:[0..19]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
prvIdleTask_exit:
prvIdleTask_entry:
l49AC:
	sr = prvCheckTasksWaitingTermination(sr)
	branch Mem0[0x0222<p16>:word16] >=u 2<16> l49AC
l49B6:
	word20 r8_36
	word20 r9_37
	word20 r10_38
	word20 r11_39
	sr = vPortYield(sr, out r8_36, out r9_37, out r10_38, out r11_39)


void prvInitialiseTCBVariables(word20 r12, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreate
// MayUse:  r12:[0..19] r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 sp
prvInitialiseTCBVariables_entry:
l000049BE:
	Mem17[r15 + 36<i16>:word16] = r14
	strncpy(8<16>, r13, r15 + 0x1C<16>)
	Mem29[r15 + 35<i16>:byte] = 0<8>
	word20 r10_16 = r12
	branch r12 >=u 4<16> l000049E6
l000049E2:
	r10_16 = 3<16>
l000049E6:
	Mem35[r15 + 6<i16>:word16] = r10_16
	vListInitialiseItem(r15 + 8<16>)
	vListInitialiseItem(r15 + 0x12<16>)
	Mem42[r15 + 14<i16>:word16] = r15
	Mem46[r15 + 18<i16>:word16] = 4<16> - r10_16
	Mem47[r15 + 24<i16>:word16] = r15
	return
prvInitialiseTCBVariables_exit:


void prvInitialiseTaskLists()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreate
// MayUse: 
// LiveOut:
// Trashed: VNZC r15
// Preserved: r11 sp
prvInitialiseTaskLists_entry:
l00004A12:
	word20 r11_20 = 0<16>
l00004A16:
	vListInitialise(r11_20 * 0x10<20> + 0x222<16>)
	r11_20 = r11_20 + 1<16>
	branch r11_20 >=u 4<16> l00004A16
l00004A2E:
	vListInitialise(0x262<16>)
	vListInitialise(0x272<16>)
	vListInitialise(0x286<16>)
	vListInitialise(0x296<16>)
	Mem47[0x0282<p16>:word16] = 0x262<16>
	Mem48[0x0284<p16>:word16] = 0x272<16>
	return
prvInitialiseTaskLists_exit:


word20 prvCheckTasksWaitingTermination(word20 sr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvIdleTask
// MayUse:  sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r13 r14 r15 sr
// Preserved: r11 sp
prvCheckTasksWaitingTermination_entry:
l4A5E:
	branch Mem5[0x0204<p16>:word16] == 0<16> l4ABE
l4A66:
	word20 sr_10 = vTaskSuspendAll(sr)
	word20 r11_15 = 0<16>
	branch Mem5[0x0296<p16>:word16] != 0<16> l4A74
l4A72:
	r11_15 = 1<16>
l4A74:
	word20 r15_121
	sr = xTaskResumeAll(sr_10, out r15_121)
	branch r11_15 != 0<20> l4ABE
l4A7C:
	word20 r11_38
	Mem34[0x0218<p16>:word16] = Mem5[0x0218<p16>:word16] + 1<16>
	sr = sr & 0xFFF7<16>
	branch Mem34[0x0296<p16>:word16] == 0<16> l4ABA
l4ABA:
	r11_38 = 0<16>
l4A88:
	r11_38 = Mem34[Mem34[Mem34[0x0298<p16>:word16] + 2<i16>:word16] + 6<i16>:word16]
l4A94:
	vListRemove(r11_38 + 8<16>)
	Mem59[0x0206<p16>:word16] = Mem34[0x0206<p16>:word16] + 0xFFFF<16>
	Mem62[0x0204<p16>:word16] = Mem59[0x0204<p16>:word16] + 0xFFFF<16>
	branch Mem62[0x0218<p16>:word16] == 0<16> l4AB2
l4AAA:
	word16 v19_66 = Mem62[0x0218<p16>:word16]
	Mem68[0x0218<p16>:word16] = v19_66 + 0xFFFF<16>
	branch v19_66 != 0xFFFF<16> l4AB2
l4AB0:
	sr = sr & 0xFFF7<16> | 8<16>
l4AB2:
	prvDeleteTCB()
l4ABE:
	return sr
prvCheckTasksWaitingTermination_exit:


word20 prvAllocateTCBAndStack(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreate
// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
prvAllocateTCBAndStack_entry:
l00004AC2:
	word20 r15_14
	word20 sr_15 = pvPortMalloc(sr, 0x26<16>, out r15_14)
	word20 r11_20 = r15_14
	branch r15_14 == 0<20> l00004AFA
l00004AD6:
	word20 r15_27
	sr_15 = pvPortMalloc(sr_15, r15 * 2<20>, out r15_27)
	Mem33[r15_14 + 2<i16>:word16] = r15_27
	branch r15_27 != 0<20> l00004AF0
l00004AF0:
	sr_15 = memset(sr_15, r15 * 2<20>, 0xA5<16>, r15_27)
l00004AE6:
	vPortFree()
	r11_20 = 0<16>
l00004AFA:
	r15Out = r11_20
	return sr_15
prvAllocateTCBAndStack_exit:


void prvDeleteTCB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvCheckTasksWaitingTermination
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r11 r15 sp
prvDeleteTCB_entry:
l4B02:
	vPortFree()
	vPortFree()
	return
prvDeleteTCB_exit:


void vTaskSwitchContext()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vPortYield
//      prvTickISR
// MayUse: 
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vTaskSwitchContext_entry:
l00004B18:
	branch Mem0[0x0210<p16>:word16] != 0<16> l00004BAE
l00004B1E:
	branch Mem0[Mem0[0x020C<p16>:word16] *20 0x10<20> + 546<i16>:word16] != 0<16> l00004B46
l00004B30:
	Mem19[0x020C<p16>:word16] = Mem16[0x020C<p16>:word16] + 0xFFFF<16>
	branch Mem19[Mem19[0x020C<p16>:word16] *20 0x10<20> + 546<i16>:word16] == 0<16> l00004B30
l00004B46:
	word20 r13_29 = 0x222<16>
	Mem48[Mem30[0x020C<p16>:word16] *20 0x10<20> + r13_29 + 4<i16>:word16] = Mem30[Mem30[Mem30[0x020C<p16>:word16] *20 0x10<20> + r13_29 + 4<i16>:word16] + 2<i16>:word16]
	branch Mem48[Mem48[0x020C<p16>:word16] *20 0x10<20> + r13_29 + 4<i16>:word16] == Mem48[(Mem48[0x020C<p16>:word16] *20 0x10<20> + r13_29) + 2<i16>:word16] l00004BB0
l00004BB0:
	Mem85[Mem48[0x020C<p16>:word16] *20 0x10<20> + 550<i16>:word16] = Mem48[Mem48[Mem48[0x020C<p16>:word16] *20 0x10<20> + 550<i16>:word16] + 2<i16>:word16]
l00004B98:
	Mem97[0x0202<p16>:word16] = Mem86[Mem86[Mem86[0x020C<p16>:word16] *20 0x10<20> + 550<i16>:word16] + 6<i16>:word16]
l00004BAE:
	return
vTaskSwitchContext_exit:


void vListInitialise(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseTaskLists
// MayUse:  r15:[0..19]
// LiveOut:
// Trashed: VNZC r15
// Preserved: r11 sp
vListInitialise_entry:
l00004BD4:
	Mem10[r15 + 2<i16>:word16] = r15 + 6<16>
	Mem11[r15 + 4<i16>:word16] = r15 + 6<16>
	Mem12[r15 + 6<i16>:word16] = 0xFFFF<16>
	Mem13[r15 + 8<i16>:word16] = r15 + 6<16>
	Mem14[r15 + 10<i16>:word16] = r15 + 6<16>
	Mem15[r15 + 12<i16>:word16] = 0<16>
	vListInitialiseItem(r15 + 6<16>)
	Mem16[r15:word16] = 0<16>
	return
vListInitialise_exit:


void vListInitialiseItem(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseTCBVariables
//      vListInitialise
// MayUse:  r15:[0..19]
// LiveOut:
// Trashed:
// Preserved: sp
vListInitialiseItem_entry:
l00004C00:
	Mem4[r15 + 8<i16>:word16] = 0<16>
	return
vListInitialiseItem_exit:


void vListInsertEnd(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreate
//      vTaskDelete
//      xTaskResumeAll
//      vTaskIncrementTick
//      xTaskRemoveFromEventList
// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r15
// Preserved: sp
vListInsertEnd_entry:
l00004C06:
	word16 v5_6 = Mem0[r15 + 4<i16>:word16]
	Mem10[r14 + 2<i16>:word16] = Mem0[v5_6 + 2<i16>:word16]
	Mem12[r14 + 4<i16>:word16] = Mem10[r15 + 4<i16>:word16]
	Mem15[Mem12[v5_6 + 2<i16>:word16] + 4<i16>:word16] = r14
	Mem16[v5_6 + 2<i16>:word16] = r14
	Mem17[r15 + 4<i16>:word16] = r14
	Mem18[r14 + 8<i16>:word16] = r15
	Mem21[r15:word16] = Mem18[r15:word16] + 1<16>
	return
vListInsertEnd_exit:


void vListInsert(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelayUntil
//      vTaskDelay
//      vTaskPlaceOnEventList
// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r15
// Preserved: r11 sp
vListInsert_entry:
l00004C32:
	word20 r13_14
	word16 v6_9 = Mem5[r14:word16]
	branch v6_9 == 0xFFFF<16> l00004C5A
l00004C5A:
	word16 v18_13 = Mem5[r15 + 2<i16>:word16]
	r13_14 = v18_13
	branch Mem5[Mem5[v18_13 + 2<i16>:word16]:word16] <u 0xFFFF<16> l00004C76
l00004C68:
	word16 v21_22 = Mem5[r13_14 + 2<i16>:word16]
	r13_14 = v21_22
	branch Mem5[Mem5[v21_22 + 2<i16>:word16]:word16] >=u v6_9 l00004C68
l00004C3C:
	word16 v10_30 = Mem5[r15 + 2<i16>:word16]
	r13_14 = v10_30
	branch v6_9 >=u Mem5[Mem5[v10_30 + 2<i16>:word16]:word16] l00004C76
l00004C4A:
	word16 v15_40 = Mem5[r13_14 + 2<i16>:word16]
	r13_14 = v15_40
	branch v6_9 <u Mem5[Mem5[v15_40 + 2<i16>:word16]:word16] l00004C4A
l00004C58:
l00004C76:
	Mem55[r14 + 2<i16>:word16] = Mem5[r13_14 + 2<i16>:word16]
	Mem58[Mem55[r14 + 2<i16>:word16] + 4<i16>:word16] = r14
	Mem59[r14 + 4<i16>:word16] = r13_14
	Mem60[r13_14 + 2<i16>:word16] = r14
	Mem64[r14 + 8<i16>:word16] = r15
	Mem67[r15:word16] = Mem64[r15:word16] + 1<16>
	return
vListInsert_exit:


void vListRemove(word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskDelete
//      vTaskDelayUntil
//      vTaskDelay
//      xTaskResumeAll
//      vTaskIncrementTick
//      vTaskPlaceOnEventList
//      xTaskRemoveFromEventList
//      prvCheckTasksWaitingTermination
// MayUse:  r15:[0..19]
// LiveOut:
// Trashed: VNZC r13 r14 r15
// Preserved: sp
vListRemove_entry:
l00004C98:
	word16 v5_6 = Mem0[r15 + 2<i16>:word16]
	Mem9[v5_6 + 4<i16>:word16] = Mem0[r15 + 4<i16>:word16]
	word16 v7_10 = Mem9[r15 + 4<i16>:word16]
	Mem12[v7_10 + 2<i16>:word16] = v5_6
	word16 v9_13 = Mem12[r15 + 8<i16>:word16]
	branch Mem12[v9_13 + 4<i16>:word16] != r15 l00004CBA
l00004CB6:
	Mem18[v9_13 + 4<i16>:word16] = v7_10
l00004CBA:
	Mem20[r15 + 8<i16>:word16] = 0<16>
	Mem24[v9_13:word16] = Mem20[v9_13:word16] + 0xFFFF<16>
	return
vListRemove_exit:


word20 xQueueCreate(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      init_uart_isr
// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: r10 r11 r9 sp
xQueueCreate_entry:
l00004CC4:
	branch r15 != 0<20> l00004CD6
l00004CD6:
	word20 r15_21
	sr = pvPortMalloc(sr, 0x32<16>, out r15_21)
	branch r15_21 == 0<20> l00004CD2
l00004CE4:
l00004CD2:
	word20 r15_33 = 0<16>
l00004D76:
	r15Out = r15_33
	return sr
xQueueCreate_exit:


word20 xQueueSend(word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x_putchar
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
xQueueSend_entry:
l00004D7E:
	word20 sr_19 = vTaskSuspendAll(sr)
	Mem27[0x0218<p16>:word16] = Mem11[0x0218<p16>:word16] + 1<16>
	Mem30[r15 + 46<i16>:word16] = Mem27[r15 + 46<i16>:word16] + 1<16>
	Mem33[r15 + 48<i16>:word16] = Mem30[r15 + 48<i16>:word16] + 1<16>
	word20 r11_120 = r15
	word20 r9_102 = r14
	word20 sr_24 = sr_19 & 0xFFF7<16>
	branch Mem33[0x0218<p16>:word16] == 0<16> l00004DAA
l00004DA2:
	word16 v16_37 = Mem33[0x0218<p16>:word16]
	Mem39[0x0218<p16>:word16] = v16_37 + 0xFFFF<16>
	branch v16_37 != 0xFFFF<16> l00004DAA
l00004DA8:
	sr_24 = sr_19 & 0xFFF7<16> | 8<16>
l00004DAA:
	word20 r15_47
	word20 sr_115 = prvIsQueueFull(sr_24, r15, out r15_47)
	branch r15_47 == 0<20> l00004DB8
l00004DB4:
	branch r13 != 0<20> l00004E26
l00004E26:
	vTaskPlaceOnEventList(r13, r15 + 8<16>)
	Mem74[0x0218<p16>:word16] = Mem71[0x0218<p16>:word16] + 1<16>
	word20 r15_83
	word20 r15_381
	word20 sr_104 = xTaskResumeAll(prvUnlockQueue(sr_115 & 0xFFF7<16>, r15, out r15_381), out r15_83)
	branch r15_83 == 0<20> l00004E74
l00004E74:
	word20 r10_387
	word20 r8_386
	sr_104 = vPortYield(sr_104, out r8_386, out r9_102, out r10_387, out r11_120)
l00004E44:
	word20 sr_110 = vTaskSuspendAll(sr_104)
	Mem119[0x0218<p16>:word16] = Mem74[0x0218<p16>:word16] + 1<16>
	Mem123[r11_120 + 46<i16>:word16] = Mem119[r11_120 + 46<i16>:word16] + 1<16>
	Mem126[r11_120 + 48<i16>:word16] = Mem123[r11_120 + 48<i16>:word16] + 1<16>
	sr_115 = sr_110 & 0xFFF7<16>
	branch Mem126[0x0218<p16>:word16] == 0<16> l00004E64
l00004E5C:
	word16 v38_130 = Mem126[0x0218<p16>:word16]
	Mem132[0x0218<p16>:word16] = v38_130 + 0xFFFF<16>
	branch v38_130 != 0xFFFF<16> l00004E64
l00004E62:
	sr_115 = sr_110 & 0xFFF7<16> | 8<16>
l00004E64:
	branch Mem136[0x0218<p16>:word16] == 0<16> l00004DB8
l00004E6A:
	word16 v40_140 = Mem136[0x0218<p16>:word16]
	Mem142[0x0218<p16>:word16] = v40_140 + 0xFFFF<16>
	branch v40_140 != 0xFFFF<16> l00004DB8
l00004E70:
	sr_115 = sr_115 | 8<16>
l00004DB8:
	word20 r10_189
	Mem152[0x0218<p16>:word16] = Mem149[0x0218<p16>:word16] + 1<16>
	word20 sr_148 = sr_115 & 0xFFF7<16>
	branch Mem152[r11_120 + 40<i16>:word16] >=u Mem152[r11_120 + 42<i16>:word16] l00004DF6
l00004DF6:
	sr_148 = memcpy(sr_148, Mem152[r11_120 + 44<i16>:word16], r9_102, Mem152[r11_120 + 4<i16>:word16])
	Mem178[r11_120 + 40<i16>:word16] = Mem152[r11_120 + 40<i16>:word16] + 1<16>
	word20 r15_182 = Mem178[r11_120 + 4<i16>:word16] + Mem178[r11_120 + 44<i16>:word16]
	Mem183[r11_120 + 4<i16>:word16] = r15_182
	branch r15_182 >=u Mem183[r11_120 + 2<i16>:word16] l00004E1E
l00004E1A:
	Mem188[r11_120 + 4<i16>:word16] = Mem183[r11_120:word16]
l00004E1E:
	Mem194[r11_120 + 48<i16>:word16] = Mem191[r11_120 + 48<i16>:word16] + 1<16>
	r10_189 = 1<16>
l00004DC6:
	r10_189 = 0xFFFD<16>
l00004DCA:
	branch Mem197[0x0218<p16>:word16] == 0<16> l00004DD8
l00004DD0:
	word16 v22_201 = Mem197[0x0218<p16>:word16]
	Mem203[0x0218<p16>:word16] = v22_201 + 0xFFFF<16>
	branch v22_201 != 0xFFFF<16> l00004DD8
l00004DD6:
	sr_148 = sr_148 | 8<16>
l00004DD8:
	word20 sr_222
	word20 r15_213
	word20 sr_214 = prvUnlockQueue(sr_148, r11_120, out r15_213)
	branch r15_213 == 0<20> l00004DF0
l00004DF0:
	word20 r15_382
	sr_222 = xTaskResumeAll(sr_214, out r15_382)
l00004DE2:
	word20 r15_227
	sr_222 = xTaskResumeAll(sr_214, out r15_227)
	branch r15_227 != 0<20> l00004E7A
l00004DEA:
	word20 r11_385
	word20 r8_383
	word20 r9_384
	sr_222 = vPortYield(sr_222, out r8_383, out r9_384, out r10_189, out r11_385)
l00004E7A:
	r15Out = r10_189
	return sr_222
xQueueSend_exit:


word20 xQueueSendFromISR(word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vRxISR
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
xQueueSendFromISR_entry:
l4E84:
	word20 r13_69
	branch Mem8[r15 + 40<i16>:word16] >=u Mem8[r15 + 42<i16>:word16] l4E98
l4E98:
	sr = memcpy(sr, Mem8[r15 + 44<i16>:word16], r14, Mem8[r15 + 4<i16>:word16])
	Mem33[r15 + 40<i16>:word16] = Mem8[r15 + 40<i16>:word16] + 1<16>
	word20 r15_37 = Mem33[r15 + 4<i16>:word16] + Mem33[r15 + 44<i16>:word16]
	Mem38[r15 + 4<i16>:word16] = r15_37
	branch r15_37 >=u Mem38[r15 + 2<i16>:word16] l4EBE
l4EBA:
	Mem43[r15 + 4<i16>:word16] = Mem38[r15:word16]
l4EBE:
	word16 v20_46 = Mem45[r15 + 48<i16>:word16]
	branch v20_46 == 0xFFFF<16> l4ECE
l4ECE:
	branch r13 != 0<20> l4E94
l4ED2:
	branch Mem45[r15 + 24<i16>:word16] == 0<16> l4E94
l4ED8:
	branch xTaskRemoveFromEventList(r15 + 0x18<16>) == 0<20> l4E94
l4EE6:
	r13_69 = 1<16>
l4EC6:
	Mem72[r15 + 48<i16>:word16] = v20_46 + 1<16>
l4E94:
	r13_69 = r13
l4EE8:
	r15Out = r13_69
	return sr
xQueueSendFromISR_exit:


word20 xQueueReceive(word20 sr, word20 r13, word20 r14, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      x_getchar
//      x_putchar
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r12 r13 r14 r15 r4 r5 r6 r7 r8 sr
// Preserved: r10 r11 r9 sp
xQueueReceive_entry:
l00004EF0:
	word20 sr_19 = vTaskSuspendAll(sr)
	Mem27[0x0218<p16>:word16] = Mem11[0x0218<p16>:word16] + 1<16>
	Mem30[r15 + 46<i16>:word16] = Mem27[r15 + 46<i16>:word16] + 1<16>
	Mem33[r15 + 48<i16>:word16] = Mem30[r15 + 48<i16>:word16] + 1<16>
	word20 r11_120 = r15
	word20 r9_102 = r14
	word20 sr_24 = sr_19 & 0xFFF7<16>
	branch Mem33[0x0218<p16>:word16] == 0<16> l00004F1C
l00004F14:
	word16 v16_37 = Mem33[0x0218<p16>:word16]
	Mem39[0x0218<p16>:word16] = v16_37 + 0xFFFF<16>
	branch v16_37 != 0xFFFF<16> l00004F1C
l00004F1A:
	sr_24 = sr_19 & 0xFFF7<16> | 8<16>
l00004F1C:
	word20 r15_47
	word20 sr_115 = prvIsQueueEmpty(sr_24, r15, out r15_47)
	branch r15_47 == 0<20> l00004F2A
l00004F26:
	branch r13 != 0<20> l00004F96
l00004F96:
	vTaskPlaceOnEventList(r13, r15 + 0x18<16>)
	Mem74[0x0218<p16>:word16] = Mem71[0x0218<p16>:word16] + 1<16>
	word20 r15_83
	word20 r15_376
	word20 sr_104 = xTaskResumeAll(prvUnlockQueue(sr_115 & 0xFFF7<16>, r15, out r15_376), out r15_83)
	branch r15_83 == 0<20> l00004FE6
l00004FE6:
	word20 r10_382
	word20 r8_381
	sr_104 = vPortYield(sr_104, out r8_381, out r9_102, out r10_382, out r11_120)
l00004FB6:
	word20 sr_110 = vTaskSuspendAll(sr_104)
	Mem119[0x0218<p16>:word16] = Mem74[0x0218<p16>:word16] + 1<16>
	Mem123[r11_120 + 46<i16>:word16] = Mem119[r11_120 + 46<i16>:word16] + 1<16>
	Mem126[r11_120 + 48<i16>:word16] = Mem123[r11_120 + 48<i16>:word16] + 1<16>
	sr_115 = sr_110 & 0xFFF7<16>
	branch Mem126[0x0218<p16>:word16] == 0<16> l00004FD6
l00004FCE:
	word16 v33_130 = Mem126[0x0218<p16>:word16]
	Mem132[0x0218<p16>:word16] = v33_130 + 0xFFFF<16>
	branch v33_130 != 0xFFFF<16> l00004FD6
l00004FD4:
	sr_115 = sr_110 & 0xFFF7<16> | 8<16>
l00004FD6:
	branch Mem136[0x0218<p16>:word16] == 0<16> l00004F2A
l00004FDC:
	word16 v38_140 = Mem136[0x0218<p16>:word16]
	Mem142[0x0218<p16>:word16] = v38_140 + 0xFFFF<16>
	branch v38_140 != 0xFFFF<16> l00004F2A
l00004FE2:
	sr_115 = sr_115 | 8<16>
l00004F2A:
	word20 r10_159
	Mem152[0x0218<p16>:word16] = Mem149[0x0218<p16>:word16] + 1<16>
	word20 sr_148 = sr_115 & 0xFFF7<16>
	word16 v18_155 = Mem152[r11_120 + 40<i16>:word16]
	branch v18_155 == 0<16> l00004F92
l00004F92:
	r10_159 = 0<16>
l00004F38:
	word16 v19_160 = Mem152[r11_120 + 44<i16>:word16]
	word20 r15_164 = Mem152[r11_120 + 6<i16>:word16] + v19_160
	Mem165[r11_120 + 6<i16>:word16] = r15_164
	branch r15_164 >=u Mem165[r11_120 + 2<i16>:word16] l00004F50
l00004F4C:
	Mem170[r11_120 + 6<i16>:word16] = Mem165[r11_120:word16]
l00004F50:
	Mem175[r11_120 + 40<i16>:word16] = v18_155 + 0xFFFF<16>
	sr_148 = memcpy(sr_148, v19_160, Mem175[r11_120 + 6<i16>:word16], r9_102)
	Mem196[r11_120 + 46<i16>:word16] = Mem175[r11_120 + 46<i16>:word16] + 1<16>
	r10_159 = 1<16>
l00004F66:
	branch Mem199[0x0218<p16>:word16] == 0<16> l00004F74
l00004F6C:
	word16 v27_203 = Mem199[0x0218<p16>:word16]
	Mem205[0x0218<p16>:word16] = v27_203 + 0xFFFF<16>
	branch v27_203 != 0xFFFF<16> l00004F74
l00004F72:
	sr_148 = sr_148 | 8<16>
l00004F74:
	word20 sr_223
	word20 r15_214
	word20 sr_215 = prvUnlockQueue(sr_148, r11_120, out r15_214)
	branch r15_214 == 0<20> l00004F8C
l00004F8C:
	word20 r15_377
	sr_223 = xTaskResumeAll(sr_215, out r15_377)
l00004F7E:
	word20 r15_228
	sr_223 = xTaskResumeAll(sr_215, out r15_228)
	branch r15_228 != 0<20> l00004FEC
l00004F86:
	word20 r9_379
	word20 r11_380
	word20 r8_378
	sr_223 = vPortYield(sr_223, out r8_378, out r9_379, out r10_159, out r11_380)
l00004FEC:
	r15Out = r10_159
	return sr_223
xQueueReceive_exit:


word20 xQueueReceiveFromISR(word20 sr, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTxISR
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15 sr
// Preserved: r10 r11 sp
xQueueReceiveFromISR_entry:
l00004FF6:
	word20 r15_119
	word16 v9_15 = Mem8[r15 + 40<i16>:word16]
	branch v9_15 == 0<16> l00005060
l00005060:
	r15_119 = 0<16>
l00005008:
	word16 v12_20 = Mem8[r15 + 44<i16>:word16]
	word20 r15_24 = Mem8[r15 + 6<i16>:word16] + v12_20
	Mem25[r15 + 6<i16>:word16] = r15_24
	branch r15_24 >=u Mem25[r15 + 2<i16>:word16] l00005020
l0000501C:
	Mem30[r15 + 6<i16>:word16] = Mem25[r15:word16]
l00005020:
	Mem35[r15 + 40<i16>:word16] = v9_15 + 0xFFFF<16>
	memcpy(sr, v12_20, Mem35[r15 + 6<i16>:word16], r14)
	word16 v20_51 = Mem35[r15 + 46<i16>:word16]
	branch v20_51 == 0xFFFF<16> l00005042
l00005042:
	branch Mem35[r13:word16] != 0<16> l0000503E
l00005048:
	branch Mem35[r15 + 8<i16>:word16] == 0<16> l0000503E
l0000504E:
	branch xTaskRemoveFromEventList(r15 + 8<16>) == 0<20> l0000503E
l0000505A:
	Mem75[r13:word16] = 1<16>
l00005038:
	Mem78[r15 + 46<i16>:word16] = v20_51 + 1<16>
l0000503E:
	r15_119 = 1<16>
l00005062:
	return r15_119
xQueueReceiveFromISR_exit:


void uxQueueMessagesWaiting()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r15 sr
// Preserved: sp
uxQueueMessagesWaiting_entry:
l5068:
	word16 v4_6 = Mem0[0x0218<p16>:word16]
	Mem8[0x0218<p16>:word16] = v4_6 + 1<16>
	branch v4_6 == 1<16> l507C
l5074:
	word16 v9_14 = Mem8[0x0218<p16>:word16]
	Mem16[0x0218<p16>:word16] = v9_14 + 0xFFFF<16>
	branch v9_14 != 0xFFFF<16> l507C
l507A:
l507C:
	return
uxQueueMessagesWaiting_exit:


void vQueueDelete()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: r11 r15 sp
vQueueDelete_entry:
l507E:
	vPortFree()
	vPortFree()
	return
vQueueDelete_exit:


word20 prvUnlockQueue(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSend
//      xQueueReceive
// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r15 sr
// Preserved: r10 r11 r12 r13 r14 sp
prvUnlockQueue_entry:
l00005092:
	Mem16[0x0218<p16>:word16] = Mem8[0x0218<p16>:word16] + 1<16>
	word16 v9_17 = Mem16[r15 + 48<i16>:word16]
	Mem19[r15 + 48<i16>:word16] = v9_17 + 0xFFFF<16>
	word20 r10_11 = 0<16>
	word20 sr_13 = sr & 0xFFF7<16>
	branch v9_17 < 0xFFFF<16> l000050B0
l000050A6:
	Mem22[r15 + 48<i16>:word16] = 0xFFFF<16>
	branch Mem22[r15 + 24<i16>:word16] != 0<16> l000050F4
l000050F4:
	branch xTaskRemoveFromEventList(r15 + 0x18<16>) == 0<20> l000050B0
l00005100:
	r10_11 = 1<16>
l000050B0:
	branch Mem39[0x0218<p16>:word16] == 0<16> l000050BE
l000050B6:
	word16 v14_43 = Mem39[0x0218<p16>:word16]
	Mem45[0x0218<p16>:word16] = v14_43 + 0xFFFF<16>
	branch v14_43 != 0xFFFF<16> l000050BE
l000050BC:
	sr_13 = sr & 0xFFF7<16> | 8<16>
l000050BE:
	Mem55[0x0218<p16>:word16] = Mem52[0x0218<p16>:word16] + 1<16>
	word16 v16_58 = Mem55[r15 + 46<i16>:word16]
	Mem60[r15 + 46<i16>:word16] = v16_58 + 0xFFFF<16>
	word20 sr_139 = sr_13 & 0xFFF7<16>
	branch v16_58 < 0xFFFF<16> l000050D4
l000050CA:
	Mem63[r15 + 46<i16>:word16] = 0xFFFF<16>
	branch Mem63[r15 + 8<i16>:word16] != 0<16> l000050E4
l000050E4:
	branch xTaskRemoveFromEventList(r15 + 8<16>) == 0<20> l000050D4
l000050F0:
	r10_11 = 1<16>
l000050D4:
	branch Mem81[0x0218<p16>:word16] == 0<16> l00005104
l000050DA:
	word16 v19_85 = Mem81[0x0218<p16>:word16]
	Mem87[0x0218<p16>:word16] = v19_85 + 0xFFFF<16>
	branch v19_85 != 0xFFFF<16> l00005104
l000050E0:
	sr_139 = sr_139 | 8<16>
l00005104:
	r15Out = r10_11
	return sr_139
prvUnlockQueue_exit:


word20 prvIsQueueEmpty(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueReceive
// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: sp
prvIsQueueEmpty_entry:
l0000510C:
	Mem8[0x0218<p16>:word16] = Mem0[0x0218<p16>:word16] + 1<16>
	word20 sr_25 = sr & 0xFFF7<16>
	word20 r14_14 = 0<16>
	branch Mem8[r15 + 40<i16>:word16] != 0<16> l0000511C
l0000511A:
	r14_14 = 1<16>
l0000511C:
	branch Mem8[0x0218<p16>:word16] == 0<16> l0000512A
l00005122:
	word16 v11_19 = Mem8[0x0218<p16>:word16]
	Mem21[0x0218<p16>:word16] = v11_19 + 0xFFFF<16>
	branch v11_19 != 0xFFFF<16> l0000512A
l00005128:
	sr_25 = sr & 0xFFF7<16> | 8<16>
l0000512A:
	r15Out = r14_14
	return sr_25
prvIsQueueEmpty_exit:


word20 prvIsQueueFull(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSend
// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: sp
prvIsQueueFull_entry:
l0000512E:
	Mem8[0x0218<p16>:word16] = Mem0[0x0218<p16>:word16] + 1<16>
	word20 sr_26 = sr & 0xFFF7<16>
	word20 r14_15 = 0<16>
	branch Mem8[r15 + 40<i16>:word16] == Mem8[r15 + 42<i16>:word16] l0000514E
l0000514E:
	r14_15 = 1<16>
l0000513E:
	branch Mem8[0x0218<p16>:word16] == 0<16> l00005152
l00005144:
	word16 v12_20 = Mem8[0x0218<p16>:word16]
	Mem22[0x0218<p16>:word16] = v12_20 + 0xFFFF<16>
	branch v12_20 != 0xFFFF<16> l00005152
l0000514A:
	sr_26 = sr & 0xFFF7<16> | 8<16>
l00005152:
	r15Out = r14_15
	return sr_26
prvIsQueueFull_exit:


word20 pvPortMalloc(word20 sr, word20 r15, ptr16 & r15Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAllocateTCBAndStack
//      xQueueCreate
// MayUse:  r15:[0..19] sr:[0..19]
// LiveOut: r15 sr
// Trashed: VNZC r14 r15 sr
// Preserved: r10 r11 sp
pvPortMalloc_entry:
l00005156:
	word20 r11_10 = r15
	word20 r10_11 = 0<16>
	branch (r15 & 1<16>) == 0<20> l00005166
l00005162:
	r11_10 = r15 - (r15 & 1<16>) + 2<16>
l00005166:
	word20 sr_21 = vTaskSuspendAll(sr)
	word16 v10_27 = Mem8[0x0216<p16>:word16]
	word20 r15_31 = v10_27 + r11_10
	branch r15_31 <u 0x708<16> l00005186
l00005178:
	branch v10_27 <u r15_31 l00005186
l0000517C:
	Mem39[0x0216<p16>:word16] = r15_31
	r10_11 = v10_27 + 0x2AA<16>
l00005186:
	word20 r15_67
	word20 sr_42 = xTaskResumeAll(sr_21, out r15_67)
	r15Out = r10_11
	return sr_42
pvPortMalloc_exit:


void vPortFree()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAllocateTCBAndStack
//      prvDeleteTCB
//      vQueueDelete
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortFree_entry:
l00005192:
	return
vPortFree_exit:


void vPortInitialiseBlocks()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortInitialiseBlocks_entry:
l5194:
	Mem3[0x0216<p16>:word16] = 0<16>
	return
vPortInitialiseBlocks_exit:


word20 pxPortInitialiseStack(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xTaskCreate
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r15
// Preserved: sp
pxPortInitialiseStack_entry:
l0000519A:
	Mem5[r15:word16] = r14
	Mem7[r15 - 2<16>:word16] = 8<16>
	Mem9[r15 - 4<16>:word16] = 0x4444<16>
	Mem11[r15 - 6<16>:word16] = 0x5555<16>
	Mem13[r15 - 8<16>:word16] = 0x6666<16>
	Mem15[r15 - 0xA<16>:word16] = 0x7777<16>
	Mem17[r15 - 0xC<16>:word16] = 0x8888<16>
	Mem19[r15 - 0xE<16>:word16] = 0x9999<16>
	Mem21[r15 - 0x10<16>:word16] = 0xAAAA<16>
	Mem23[r15 - 0x12<16>:word16] = 0xBBBB<16>
	Mem25[r15 - 0x14<16>:word16] = 0xCCCC<16>
	Mem27[r15 - 0x16<16>:word16] = 0xDDDD<16>
	Mem29[r15 - 0x18<16>:word16] = 0xEEEE<16>
	Mem32[r15 - 0x1A<16>:word16] = r13
	Mem35[r15 - 0x1C<16>:word16] = 0<16>
	return r15 - 0x1C<16>
pxPortInitialiseStack_exit:


void xPortStartScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskStartScheduler
// MayUse: 
// LiveOut:
// Trashed: r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
xPortStartScheduler_entry:
l0000520A:
	prvSetupTimerInterrupt()
	Mem11[0x00000218<p32>:word16] = Mem0[Mem0[Mem0[0x00000202<p32>:word16]:word16]:word16]
	return
xPortStartScheduler_exit:


void vPortEndScheduler()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vTaskEndScheduler
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
vPortEndScheduler_entry:
l5238:
	return
vPortEndScheduler_exit:


word20 vPortYield(word20 sr, ptr16 & r8Out, ptr16 & r9Out, ptr16 & r10Out, ptr16 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vRxISR
//      xTaskCreate
//      vTaskDelete
//      vTaskDelayUntil
//      vTaskDelay
//      xTaskResumeAll
//      prvIdleTask
//      xQueueSend
//      xQueueReceive
// MayUse:  sr:[0..19]
// LiveOut: r10 r11 r8 r9 sr
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp sr
// Preserved:
vPortYield_entry:
	word16 fp
l0000523A:
	Mem49[Mem46[0x00000202<p32>:word16]:word16] = fp - 28<i32>
	vTaskSwitchContext()
	word16 v20_59 = Mem49[Mem49[0x00000202<p32>:word16]:word16]
	Mem64[0x00000218<p32>:word16] = Mem49[v20_59:word16]
	word20 r11_79 = Mem64[v20_59 + 10<i16>:word16]
	word20 r10_82 = Mem64[v20_59 + 12<i16>:word16]
	word20 r9_85 = Mem64[v20_59 + 14<i16>:word16]
	r8Out = Mem64[v20_59 + 16<i16>:word16]
	r9Out = r9_85
	r10Out = r10_82
	r11Out = r11_79
	return sr & 0xFFF7<16>
vPortYield_exit:


void prvSetupTimerInterrupt()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xPortStartScheduler
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
prvSetupTimerInterrupt_entry:
l0000528E:
	Mem3[0x0160<p16>:word16] = 0<16>
	Mem4[0x0160<p16>:word16] = 0x100<16>
	Mem7[0x0160<p16>:word16] = Mem4[0x0160<p16>:word16] | 4<16>
	Mem8[0x0172<p16>:word16] = 0x20<16>
	Mem9[0x0162<p16>:word16] = 0x10<16>
	Mem12[0x0160<p16>:word16] = Mem9[0x0160<p16>:word16] | 4<16>
	Mem15[0x0160<p16>:word16] = Mem12[0x0160<p16>:word16] | 0x10<16>
	return
prvSetupTimerInterrupt_exit:


void prvTickISR()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r11 r12 r13 r14 r15 r4 r5 r6 r7 r8 r9 sp
// Preserved:
prvTickISR_entry:
	word16 fp
l52B4:
	Mem45[Mem42[0x0202<p16>:word16]:word16] = fp - 26<i32>
	vTaskIncrementTick()
	vTaskSwitchContext()
	Mem68[0x0218<p16>:word16] = Mem45[Mem45[Mem45[0x0202<p16>:word16]:word16]:word16]
	return
prvTickISR_exit:


void printf(word20 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004000
//      task_idle
// MayUse:  r8:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: sp
printf_entry:
	word16 fp
l00005308:
	vuprintf(r8, fp + 4<16>, Mem0[fp + 2<16>:word16], 0x43A2<16>)
	return
printf_exit:


word20 PRINT(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vuprintf
// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r14 r15
// Preserved: r10 r11 sp
PRINT_entry:
l0000531A:
	word20 r15_35
	word20 r10_10 = r15
	word20 r11_12 = r14
	branch r14 != 0<20> l0000532A
l0000532A:
	word20 r11_28
	word20 r15_30
	call Mem16[0x09B2<p16>:word16] (retsize: 2;)
		uses: r10:r10_15 + 1<16>,r11:r11_24,r14:r14_25,r15:CONVERT(Mem16[r10_15:byte], byte, int16)
		defs: r10:r10_29,r11:r11_28,r14:r14_31,r15:r15_30
	branch r15_30 < 0<20> l00005342
l00005342:
	r15_35 = 0xFFFF<16>
l00005338:
	Mem38[0x021A<p16>:word16] = Mem16[0x021A<p16>:word16] + 1<16>
	r11_12 = r11_28 + 0xFFFF<16>
	branch r11_28 != 0xFFFFF<20> l0000532A
l00005340:
l00005326:
	r15_35 = 1<16>
l00005344:
	return r15_35
PRINT_exit:


word20 __write_pad(word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vuprintf
// MayUse:  r14:[0..19] r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r14 r15
// Preserved: r10 r11 r9 sp
__write_pad_entry:
l0000534A:
	word20 r15_40
	word20 r9_13 = r15
	word20 r11_15 = r14
	branch r14 < 1<8> l00005370
l00005358:
	word20 r10_20 = CONVERT(SLICE(r15, byte, 0), byte, int16)
l0000535C:
	word20 r11_32
	word20 r15_35
	call Mem25[0x09B2<p16>:word16] (retsize: 2;)
		uses: r10:r10_23,r11:r11_27,r14:r14_29,r15:r10_23,r9:r9_28
		defs: r10:r10_33,r11:r11_32,r14:r14_36,r15:r15_35,r9:r9_34
	branch r15_35 < 0<20> l00005374
l00005374:
	r15_40 = 0xFFFF<16>
l00005366:
	Mem43[0x021A<p16>:word16] = Mem25[0x021A<p16>:word16] + 1<16>
	r11_15 = r11_32 + 0xFF<8>
	branch r11_32 >= 2<8> l0000535C
l00005370:
	r15_40 = r9_13
l00005376:
	return r15_40
__write_pad_exit:


void vuprintf(word20 r8, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      printf
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] r8:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r10 r11 r4 r5 r6 r7 r8 r9 sp
vuprintf_entry:
	word16 fp
l0000537E:
	Mem33[0x021A<p16>:word16] = 0<16>
	Mem35[0x09B2<p16>:word16] = r15
	word20 r5_112 = r13
	word20 r6_37 = r14
	word32 dwLoc1C_2345 = 0<32>
l53A6:
	word20 r6_47
	byte v15_41 = Mem40[r6_37:byte]
	word20 r7_42 = v15_41
	r6_47 = r6_37
	branch v15_41 == 0<8> l000053C2
l000053AE:
	r6_47 = r6_37
	r6_47 = r6_37
	branch v15_41 == 0x25<16> l000053C2
l000053B4:
	r6_47 = r6_47 + 1<16>
	byte v17_50 = Mem40[r6_47:byte]
	r7_42 = v17_50
	branch v17_50 == 0<8> l000053C2
l000053BC:
	branch v17_50 != 0x25<16> l000053B4
l000053C2:
	word20 r13_60 = r6_47 - r6_37
	branch r13_60 == 0<20> l000053CC
l000053C8:
l5916:
	branch PRINT(r13_60, r6_37) < 0<20> l5924
l5920:
l000053CC:
	branch r7_42 != 0<20> l000053D4
l000053D4:
	r6_37 = r6_47 + 1<16>
	byte bLoc1E_1016 = 0<8>
	byte bLoc17_1017 = 0<8>
	byte bLoc1D_1018 = 0<8>
	word20 r11_278 = 0xFF<8>
	byte bLoc24_1019 = 0<8>
	word32 dwLoc1C_2334 = dwLoc1C_2345
l53E8:
	word20 r7_257 = Mem89[r6_37:byte]
	r6_37 = r6_37 + 1<16>
l53EC:
	branch r7_257 != 0x75<16> l000053F6
l000053F6:
	branch (r7_257 | 0x20<16>) != 0x78<16> l5406
l00005402:
l000053F2:
l58F0:
	branch (bLoc1E_1016 & 1<8>) == 0<8> l5906
l5906:
	r5_112 = r5_112 + 2<16>
	dwLoc1C_2334 = CONVERT(Mem104[r5_112:word16], word16, uint32) (alias)
l58F6:
	r5_112 = r5_112 + 4<16>
	dwLoc1C_2334 = Mem124[r5_112:word32] (alias)
l5406:
	word16 wLoc1A_1073 = SLICE(dwLoc1C_2334, word16, 16)
	word16 wLoc1C_1070 = SLICE(dwLoc1C_2334, word16, 0)
	branch r7_257 != 0x20<16> l5410
l5410:
	branch r7_257 != 0x23<16> l541A
l541A:
	branch r7_257 != 0x2A<16> l5424
l5424:
	branch r7_257 != 0x2D<16> l542E
l542E:
	branch r7_257 != 0x2B<16> l5438
l5438:
	branch r7_257 != 0x2E<16> l5442
l5442:
	branch r7_257 != 0x30<16> l544C
l544C:
	branch r7_257 <u 0xFFC6<16> l548C
l548C:
	branch r7_257 == 0x68<16> l581A
l581A:
	bLoc1E_1016 = bLoc1E_1016 | 4<8>
l5492:
	branch r7_257 != 0x6C<16> l549E
l549E:
	word16 wLoc20_1251
	word20 r9_296
	branch r7_257 == 0x63<16> l580C
l580C:
	r5_112 = r5_112 + 2<16>
l54A4:
	word32 dwLoc1C_2321
	byte bLoc18_1046
	branch r7_257 == 0x44<16> l5806
l5806:
	bLoc1E_1016 = bLoc1E_1016 | 1<8>
l54AA:
	branch r7_257 == 0x64<16> l57AE
l54B0:
	branch r7_257 == 0x69<16> l57AE
l57AE:
	word32 dwLoc1C_2338
	branch (bLoc1E_1016 & 1<8>) == 0<8> l57E6
l57E6:
	word16 v135_186 = Mem176[r5_112:word16]
	ui32 v140_v138_1003 = SEQ(v138_192, v135_186) + SEQ(v138_192, v135_186)
	r5_112 = r5_112 + 2<16>
	word16 v138_192 = SLICE(v140_v138_1003, word16, 0)
	dwLoc1C_2338 = SEQ(~SLICE(v140_v138_1003, word16, 16), v135_186) (alias)
l57B4:
	r5_112 = r5_112 + 4<16>
	dwLoc1C_2338 = Mem209[r5_112:word32] (alias)
l57C0:
	word16 wLoc1C_1040 = SLICE(dwLoc1C_2338, word16, 0)
	word16 wLoc1A_1039 = SLICE(dwLoc1C_2338, word16, 16)
	word32 dwLoc1C_2331 = dwLoc1C_2338
	branch wLoc1A_1039 < 0<16> l57CE
l57CE:
	word16 v131_219 = ~wLoc1C_1040
	bLoc24_1019 = 0x2D<16>
	dwLoc1C_2331 = SEQ(SLICE(SEQ(~wLoc1A_1039, v131_219) + 1<32>, word16, 16), v131_219 + 1<16>) (alias)
l57C6:
	bLoc18_1046 = 0xA<16>
	dwLoc1C_2321 = dwLoc1C_2331 (alias)
l54B6:
	word32 dwLoc1C_2324
	branch r7_257 == 0x4F<16> l57A8
l57A8:
	bLoc1E_1016 = bLoc1E_1016 | 1<8>
l54BC:
	branch r7_257 == 0x6F<16> l57A2
l57A2:
	bLoc18_1046 = 8<8>
	dwLoc1C_2324 = dwLoc1C_2334 (alias)
l54C2:
	branch r7_257 == 0x70<16> l5784
l5784:
	r5_112 = r5_112 + 2<16>
	bLoc18_1046 = 0x10<16>
	bLoc1E_1016 = bLoc1E_1016 | 0x40<16>
	r7_257 = 0x78<16>
	dwLoc1C_2324 = CONVERT(Mem151[r5_112:word16], word16, uint32) (alias)
l54C8:
	branch r7_257 == 0x73<16> l570C
l570C:
	word16 v115_262 = Mem151[r5_112:word16]
	r5_112 = r5_112 + 2<16>
	word16 wLoc20_1053 = v115_262
	branch v115_262 == 0<16> l5756
l5756:
	wLoc20_1053 = fp - 0x4C<32>
l571A:
	byte bLoc20_1064 = SLICE(wLoc20_1053, byte, 0)
	branch r11_278 < 0<20> l5740
l5740:
	word20 r15_285 = wLoc20_1053 - 1<16>
l5746:
	r15_285 = r15_285 + 1<16>
	branch Mem282[r15_285:byte] != 0<8> l5746
l574E:
	r9_296 = r15_285 - bLoc20_1064
l571E:
	word20 r15_308 = memchr(CONVERT(SLICE(r11_278, byte, 0), byte, int16), 0<16>, wLoc20_1053)
	branch r15_308 == 0<20> l573C
l5732:
	r9_296 = r15_308 - bLoc20_1064
	wLoc20_1251 = wLoc20_1053 (alias)
	branch r11_278 >= r9_296 l54F8
l573C:
	wLoc20_1251 = wLoc20_1053
	r9_296 = r11_278
l54CE:
	branch r7_257 == 0x55<16> l5706
l5706:
	bLoc1E_1016 = bLoc1E_1016 | 1<8>
l54D4:
	branch r7_257 == 0x75<16> l56FE
l56FE:
	bLoc18_1046 = 0xA<16>
	dwLoc1C_2324 = dwLoc1C_2334 (alias)
l54DA:
	branch r7_257 == 0x58<16> l55FE
l54E0:
	branch r7_257 == 0x78<16> l55FE
l55FE:
	bLoc18_1046 = 0x10<16>
	dwLoc1C_2324 = dwLoc1C_2334 (alias)
	branch (bLoc1E_1016 & 8<8>) == 0<8> l561C
l560A:
	branch wLoc1C_1070 != 0<16> l5616
l5610:
	dwLoc1C_2324 = dwLoc1C_2334 (alias)
	branch wLoc1A_1073 == 0<16> l561C
l5616:
	bLoc1E_1016 = bLoc1E_1016 | 0x40<16>
	dwLoc1C_2324 = dwLoc1C_2334 (alias)
l561C:
	bLoc24_1019 = 0<8>
	dwLoc1C_2321 = dwLoc1C_2324 (alias)
l5620:
	word16 wLoc1A_1095 = SLICE(dwLoc1C_2321, word16, 16)
	word16 wLoc1C_1088 = SLICE(dwLoc1C_2321, word16, 0)
	bLoc17_1017 = r11_278
	branch r11_278 < 0<20> l562E
l5628:
	bLoc1E_1016 = bLoc1E_1016 & 0xFFDF<16>
l562E:
	word16 wLoc20_1086 = fp - 0x24<32>
	byte bLoc20_1142 = SLICE(CONVERT(fp, word16, uipr32), byte, 0) - 0x24<8>
	byte bLoc1F_1253 = SLICE(fp - 0x24<32>, byte, 8)
	branch wLoc1C_1088 != 0<16> l564A
l563E:
	wLoc20_1086 = SLICE(CONVERT(fp, word16, uipr32), word16, 0) - 0x24<16> (alias)
	branch wLoc1A_1095 != 0<16> l564A
l5644:
	wLoc20_1086 = SEQ(bLoc1F_1253, bLoc20_1142) (alias)
	branch r11_278 == 0<8> l56C6
l564A:
	word16 wLoc14_1671 = CONVERT(bLoc18_1046, byte, uint16)
	word32 dwLoc1C_2318 = dwLoc1C_2321
l5658:
	word16 wLoc1A_1112 = SLICE(dwLoc1C_2318, word16, 16)
	word16 wLoc1C_1111 = SLICE(dwLoc1C_2318, word16, 0)
	byte bLoc16_1110 = 0<8>
	branch SLICE(dwLoc1C_2318 - CONVERT(wLoc14_1671, word16, uint40), word20, 20) >=u 0<20> l5672
l566E:
	bLoc16_1110 = 1<8>
l5672:
	word20 r4_436
	word20 r8_427
	ui40 r15_r14_2358
	ui40 r13_r12_2357
	fn00005B4E(CONVERT(wLoc14_1671, word16, uint40), r8, wLoc1C_1111, wLoc1A_1112, out r13_r12_2357, out r15_r14_2358, out r8_427)
	word20 r14_425 = <invalid>
	branch r14_425 <u 0xA<16> l56EE
l56EE:
	r4_436 = r14_425 + 0x57<16>
	branch r7_257 != 0x58<16> l5692
l56F8:
	r4_436 = r14_425 + 0x57<16> & 0xFFDF<16>
l568E:
	r4_436 = r14_425 + 0x30<16>
l5692:
	wLoc20_1086 = wLoc20_2361 + 0xFFFF<16>
	Mem455[wLoc20_1086:byte] = r4_436
	ui40 r13_r12_2359
	ui40 r15_r14_2360
	fn00005B4E(CONVERT(wLoc14_1671, word16, uint40), r8_427, wLoc1C_1111, wLoc1A_1112, out r13_r12_2359, out r15_r14_2360, out r8)
	word20 r13_467 = <invalid>
	word20 r12_466 = <invalid>
	dwLoc1C_2318 = SEQ(r13_467, r12_466) (alias)
	wLoc20_2361 = wLoc20_1086
	branch bLoc16_1110 != 0<8> l5658
l56C0:
	dwLoc1C_2321 = SEQ(r13_467, r12_466) (alias)
	branch bLoc18_1046 == 8<8> l56D2
l56D2:
	dwLoc1C_2321 = SEQ(r13_467, r12_466) (alias)
	branch (bLoc1E_1016 & 8<8>) == 0<8> l56C6
l56D8:
	dwLoc1C_2321 = SEQ(r13_467, r12_466) (alias)
	branch r4_436 == 0x30<16> l56C6
l56DE:
	Mem498[wLoc20_2361 + 0xFFFE<16>:byte] = 0x30<16>
	wLoc20_1086 = SEQ(SLICE(wLoc20_2361 + 0xFFFE<16>, byte, 8), SLICE(wLoc20_2361, byte, 0) + 0xFE<8>) (alias)
	dwLoc1C_2321 = SEQ(r13_467, r12_466) (alias)
l56C6:
	r9_296 = fp - 0x4C<32> - SLICE(wLoc20_1086, byte, 0) + 0x28<16>
	wLoc20_1251 = wLoc20_1086 (alias)
	dwLoc1C_2334 = dwLoc1C_2321 (alias)
l54E6:
	branch r7_257 != 0<20> l54EE
l54EE:
l54F6:
	wLoc20_1251 = fp - 0x4C<32>
	r9_296 = 1<8>
l54F8:
	bLoc24_1019 = 0<8>
l54FC:
	word20 r11_517 = r9_296
	word20 r10_522 = bLoc17_1017 - r9_296
	branch r10_522 < 0<20> l55FA
l55FA:
	r10_522 = 0<8>
l5506:
	branch bLoc24_1019 == 0<8> l55EE
l55EE:
	branch (bLoc1E_1016 & 0x40<16>) == 0<8> l5510
l55F6:
	r11_517 = r9_296 + 2<8>
l550E:
	r11_517 = r9_296 + 1<8>
l5510:
	word20 r11_546 = r11_517 + r10_522
	r8 = bLoc1E_1016 & 0x30<16>
	branch (bLoc1E_1016 & 0x30<16>) != 0<8> l5542
l551C:
	word20 r13_562 = bLoc1D_1018 - SLICE(r11_546, byte, 0)
	branch r13_562 < 1<16> l5542
l552C:
	branch __write_pad(r13_562, 0x20<16>) >= 0<20> l553E
l553E:
l5542:
	word20 r14_581
	word20 r15_584
	branch bLoc24_1019 != 0<20> l55E4
l55E4:
	r14_581 = 1<16>
	r15_584 = fp - 0x24<32>
l5546:
	branch (bLoc1E_1016 & 0x40<16>) == 0<8> l5576
l554E:
	r14_581 = 2<16>
	r15_584 = fp - 0x22<32>
l556A:
	branch PRINT(r14_581, r15_584) >= 0<20> l5576
l5576:
	branch (bLoc1E_1016 & 0x30<16>) == 0x20<16> l55C4
l55C4:
	word20 r13_653 = bLoc1D_1018 - SLICE(r11_546, byte, 0)
	branch r13_653 < 1<16> l557C
l55D4:
	branch __write_pad(r13_653, 0x30<16>) >= 0<20> l557C
l55E2:
l557C:
	branch __write_pad(r10_522, 0x30<16>) < 0<20> l5924
l558A:
	branch PRINT(CONVERT(SLICE(r9_296, byte, 0), byte, int16), wLoc20_1251) < 0<20> l5924
l559C:
	dwLoc1C_2345 = dwLoc1C_2334 (alias)
	branch (bLoc1E_1016 & 0x10<16>) == 0<8> l53A6
l55A4:
	word20 r13_718 = bLoc1D_1018 - SLICE(r11_546, byte, 0)
	dwLoc1C_2345 = dwLoc1C_2334 (alias)
	branch r13_718 < 1<16> l53A6
l55B4:
	dwLoc1C_2345 = dwLoc1C_2334 (alias)
	branch __write_pad(r13_718, 0x20<16>) >= 0<20> l53A6
l55C2:
l5572:
l553A:
l54EA:
l5498:
	bLoc1E_1016 = bLoc1E_1016 | 1<8>
l5458:
	word20 r13_734 = 0<16>
l545A:
	word20 r14_740 = r13_734 * 2<20>
	word20 r13_749 = r13_734 * 4<20> + r14_740 + r14_740 + r14_740 + CONVERT(SLICE(r7_257, byte, 0), byte, int16)
	byte v53_753 = Mem151[r6_37:byte]
	r13_734 = r13_749 + 0xFFD0<16>
	r7_257 = v53_753
	r6_37 = r6_37 + 1<16>
	branch v53_753 >=u 0xFFC6<16> l545A
l5486:
	bLoc1D_1018 = r13_749 + 0xFFD0<16>
l5448:
l5822:
	branch (bLoc1E_1016 & 0x10<16>) == 0<8> l582E
l582E:
	bLoc1E_1016 = bLoc1E_1016 | 0x20<16>
l582A:
l543E:
l5838:
	byte v46_774 = Mem151[r6_37:byte]
	r7_257 = v46_774
	r6_37 = r6_37 + 1<16>
	branch v46_774 == 0x2A<16> l588A
l588A:
	word16 v49_781 = Mem151[r5_112:word16]
	r5_112 = r5_112 + 2<16>
	word20 r15_783 = v49_781
	branch v49_781 >= 0xFFFF<16> l5898
l5896:
	r15_783 = 0xFFFF<16>
l5898:
	r11_278 = r15_783
l5842:
	word20 r13_789 = 0<16>
	branch v46_774 <u 0xFFC6<16> l587C
l5850:
	word20 r14_799 = r13_789 * 2<20>
	byte v48_812 = Mem151[r6_37:byte]
	r13_789 = r13_789 * 4<20> + r14_799 + r14_799 + r14_799 + CONVERT(SLICE(r7_257, byte, 0), byte, int16) + 0xFFD0<16>
	r7_257 = v48_812
	r6_37 = r6_37 + 1<16>
	branch v48_812 >=u 0xFFC6<16> l5850
l587C:
	word20 r15_820 = r13_789
	branch r13_789 >= 0xFFFF<16> l5884
l5882:
	r15_820 = 0xFFFF<16>
l5884:
	r11_278 = r15_820
l5434:
l589E:
	bLoc24_1019 = 0x2B<16>
l542A:
l5420:
l58B8:
	byte v39_829 = Mem151[r5_112:byte]
	r5_112 = r5_112 + 2<16>
	bLoc1D_1018 = v39_829
	branch v39_829 < 0<8> l58CA
l58CA:
	bLoc1D_1018 = -v39_829
l58A8:
	bLoc1E_1016 = (bLoc1E_1016 | 0x10<16>) & 0xFFDF<16>
l58C6:
l5416:
l58D4:
	bLoc1E_1016 = bLoc1E_1016 | 8<8>
l540C:
l58DC:
	branch bLoc24_1019 == 0<8> l58E6
l58E6:
	bLoc24_1019 = 0x20<16>
l58E2:
l000053D0:
l5924:
	return
vuprintf_exit:


word20 memchr(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vuprintf
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut: r15
// Trashed: VNZC r12 r13 r14 r15
// Preserved: r11 sp
memchr_entry:
l0000593E:
	word20 r15_23
	branch r13 == 0<20> l00005956
l00005948:
	word20 r14_13 = r15
l0000594A:
	r14_13 = r14_13 + 1<16>
	branch Mem5[r14_13:byte] == r14 l0000595A
l0000595A:
	r15_23 = r14_13 + 0xFFFF<16>
l00005952:
	r13 = r13 + 0xFFFF<16>
	branch r13 != 0<20> l0000594A
l00005956:
	r15_23 = 0<16>
l0000595E:
	return r15_23
memchr_exit:


void strncpy(word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvInitialiseTCBVariables
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19]
// LiveOut:
// Trashed: VNZC r12 r13 r14
// Preserved: r11 r15 sp
strncpy_entry:
l00005962:
	branch r13 == 0<20> l0000598E
l0000596A:
	word20 r12_11 = r15
l0000596C:
	Mem16[r12_11:byte] = Mem13[r14:byte]
	r14 = r14 + 1<16>
	r12_11 = r12_11 + 1<16>
	branch Mem16[r12_11:byte] == 0<8> l00005980
l00005980:
	word20 r13_24 = r13 + 0xFFFF<16>
	branch r13_24 == 0<20> l0000598E
l00005984:
	Mem28[r12_11:byte] = 0<8>
	r12_11 = r12_11 + 1<16>
	r13_24 = r13_24 + 0xFFFF<16>
	branch r13_24 != 0<20> l00005984
l0000597A:
	r13 = r13 + 0xFFFF<16>
	branch r13 != 0<20> l0000596C
l0000597E:
l0000598E:
	return
strncpy_exit:


word20 memcpy(word20 sr, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      xQueueSend
//      xQueueSendFromISR
//      xQueueReceive
//      xQueueReceiveFromISR
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 sr
// Preserved: r10 r11 r15 sp
memcpy_entry:
l00005994:
	word20 r11_12 = r13
	word20 r13_13 = r15
	word20 r12_130 = r14
	branch r13 == 0<20> l00005A60
l000059A4:
	branch r15 == r14 l00005A60
l000059A8:
	branch r15 <u r14 l00005A02
l00005A02:
	word20 r12_23 = r14 + r13
	word20 r13_233 = r15 + r13
	word20 r15_27 = r12_23 | r13_233
	bool C_70 = SLICE(cond(r15_27 & 1<16>), bool, 0)
	branch (r15_27 & 1<16>) == 0<20> l00005A30
l00005A12:
	word20 r14_41
	branch ((r12_23 ^ r13_233) & 1<16>) != 0<20> l00005A20
l00005A1A:
	branch r13 <u 3<16> l00005A5A
l00005A5A:
	r14_41 = r12_23 & 1<16>
l00005A20:
	r14_41 = r13
l00005A22:
	r11_12 = r13 - r14_41
l00005A24:
	r12_23 = r12_23 + 0xFFFF<16>
	r13_233 = r13_233 + 0xFFFF<16>
	Mem56[r13_233:byte] = Mem54[r12_23:byte]
	r14_41 = r14_41 + 0xFFFF<16>
	C_70 = SLICE(cond(r14_41), bool, 0) (alias)
	branch r14_41 != 0<20> l00005A24
l00005A30:
	sr = sr & 0xFFFE<16>
	word20 r14_73 = __rcr<word20,byte>(r11_12, 1<8>, C_70)
	branch r14_73 == 0<20> l00005A46
l00005A3A:
	r12_23 = r12_23 - 2<16>
	r13_233 = r13_233 - 2<16>
	Mem82[r13_233:word16] = Mem80[r12_23:word16]
	r14_73 = r14_73 + 0xFFFF<16>
	branch r14_73 != 0<20> l00005A3A
l00005A46:
	word20 r14_101 = r11_12 & 1<16>
	branch r14_101 == 0<20> l00005A60
l00005A4C:
	r12_23 = r12_23 + 0xFFFF<16>
	r13_233 = r13_233 + 0xFFFF<16>
	Mem100[r13_233:byte] = Mem98[r12_23:byte]
	r14_101 = r14_101 + 0xFFFF<16>
	branch r14_101 != 0<20> l00005A4C
l00005A58:
l000059AC:
	word20 r15_106 = r14 | r15
	bool C_149 = SLICE(cond(r15_106 & 1<16>), bool, 0)
	branch (r15_106 & 1<16>) == 0<20> l000059D0
l000059B4:
	word20 r14_122
	branch ((r14 ^ r15) & 1<16>) != 0<20> l000059C0
l000059BC:
	branch r13 <u 2<16> l000059F8
l000059F8:
	r14_122 = 2<16> - (r14 & 1<16>)
l000059C0:
	r14_122 = r13
l000059C2:
	r11_12 = r13 - r14_122
l000059C4:
	Mem134[r13_13:byte] = Mem131[r12_130:byte]
	r14_122 = r14_122 + 0xFFFF<16>
	r12_130 = r12_130 + 1<16>
	r13_13 = r13_13 + 1<16>
	C_149 = SLICE(cond(r14_122), bool, 0) (alias)
	branch r14_122 != 0<20> l000059C4
l000059D0:
	sr = sr & 0xFFFE<16>
	word20 r14_152 = __rcr<word20,byte>(r11_12, 1<8>, C_149)
	branch r14_152 == 0<20> l000059E4
l000059DA:
	Mem160[r13_13:word16] = Mem156[r12_130:word16]
	r12_130 = r12_130 + 2<i16>
	r13_13 = r13_13 + 2<16>
	r14_152 = r14_152 + 0xFFFF<16>
	branch r14_152 != 0<20> l000059DA
l000059E4:
	word20 r14_169 = r11_12 & 1<16>
	branch r14_169 == 0<20> l00005A60
l000059EA:
	Mem177[r13_13:byte] = Mem174[r12_130:byte]
	r12_130 = r12_130 + 1<16>
	r13_13 = r13_13 + 1<16>
	r14_169 = r14_169 + 0xFFFF<16>
	branch r14_169 != 0<20> l000059EA
l000059F6:
l00005A60:
	return sr
memcpy_exit:


word20 memset(word20 sr, word20 r13, word20 r14, word20 r15)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      prvAllocateTCBAndStack
// MayUse:  r13:[0..19] r14:[0..19] r15:[0..19] sr:[0..19]
// LiveOut: sr
// Trashed: VNZC r12 r13 r14 sr
// Preserved: r10 r11 r15 r9 sp
memset_entry:
l00005A68:
	word20 r14_121 = r15
	branch r13 <u 6<16> l00005A8A
l00005A8A:
	word20 r11_119 = r14
	branch r14 == 0<20> l00005A96
l00005A90:
	r11_119 = r14 | __swpb(r14)
l00005A96:
	bool C_54 = SLICE(cond(r15 & 1<16>), bool, 0)
	branch (r15 & 1<16>) == 0<20> l00005AAE
l00005A9C:
	word20 r15_33 = 2<16> - (r15 & 1<16>)
	word20 r12_34 = r15_33
	r13 = r13 - r15_33
l00005AA4:
	Mem40[r14_121:byte] = r14
	r12_34 = r12_34 + 0xFFFF<16>
	r14_121 = r14_121 + 1<16>
	C_54 = SLICE(cond(r12_34), bool, 0) (alias)
	branch r12_34 != 0<20> l00005AA4
l00005AAE:
	sr = sr & 0xFFFE<16>
	word20 r12_57 = __rcr<word20,byte>(r13, 1<8>, C_54)
l00005AB4:
	Mem62[r14_121:word16] = r11_119
	r14_121 = r14_121 + 2<16>
	r12_57 = r12_57 + 0xFFFF<16>
	branch r12_57 != 0<20> l00005AB4
l00005ABE:
	word20 r12_70 = r13 & 1<16>
	branch r12_70 == 0<20> l00005ACE
l00005AC4:
	Mem76[r14_121:byte] = r14
	r14_121 = r14_121 + 1<16>
	r12_70 = r12_70 + 0xFFFF<16>
	branch r12_70 != 0<20> l00005AC4
l00005A7A:
	branch r13 == 0<20> l00005ACE
l00005A7E:
	Mem86[r14_121:byte] = r14
	r14_121 = r14_121 + 1<16>
	r13 = r13 + 0xFFFF<16>
	branch r13 != 0<20> l00005A7E
l00005A88:
l00005ACE:
	return sr
memset_exit:


ui40 fn00005ADC(word20 r10, word20 r11, word20 r12, word20 r13)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      msp430_compute_modulator_bits
// MayUse:  r10:[0..19] r11:[0..19] r12:[0..19] r13:[0..19]
// LiveOut: r15:r14
// Trashed: r14 r15
// Preserved: sp
fn00005ADC_entry:
l00005ADC:
	Mem4[0x0130<p16>:word16] = r12
	Mem6[0x0138<p16>:word16] = r10
	Mem7[0x0134<p16>:word16] = r12
	word20 r14_9 = Mem7[0x013A<p16>:word16]
	Mem11[0x013A<p16>:word16] = Mem7[0x013C<p16>:word16]
	Mem13[0x0138<p16>:word16] = r11
	Mem15[0x0134<p16>:word16] = r13
	Mem16[0x0138<p16>:word16] = r10
	return SEQ(Mem16[0x013A<p16>:word16], r14_9)
fn00005ADC_exit:


word20 fn00005B04(ui40 r11_r10, ui40 r13_r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      msp430_compute_modulator_bits
// MayUse:  Sequence r11:r10:[0..39] Sequence r13:r12:[0..39]
// LiveOut: r12
// Trashed: VNZC r12 r13 r14 r15 r8 r9
// Preserved: r10 r11 sp
fn00005B04_entry:
	word20 r13 = SLICE(r13_r12, word20, 20)
	word20 r12 = SLICE(r13_r12, word20, 0)
	word20 r11 = SLICE(r11_r10, word20, 20)
l00005B04:
	word20 r8_18 = 0<16>
	branch (r13 & 0x8000<16>) == 0<20> l00005B16
l00005B0C:
	r12 = -SLICE(r13_r12, word20, 0) (alias)
	r13 = SLICE((r13_r12 ^ 0xFFFFFFFF<32>) + 1<40>, word20, 20) (alias)
	r8_18 = r8_18 | 4<16>
l00005B16:
	ui40 r11_r10_126 = r11_r10
	branch (r11 & 0x8000<16>) == 0<20> l00005B26
l00005B1C:
	r8_18 = r8_18 | 8<16>
	r11_r10_126 = SEQ(SLICE((r11_r10 ^ 0xFFFFFFFF<32>) + 1<40>, word20, 20), -SLICE(r11_r10, word20, 0)) (alias)
l00005B26:
	word20 r12_108 = SLICE(r13_r12_131, word20, 0)
	word20 r8_49
	ui40 r15_r14_132
	ui40 r13_r12_131
	word20 r8_55 = __rcr<word20,byte>(r8_49, 1<8>, fn00005B4E(r11_r10_126, r8_18, r12, r13, out r13_r12_131, out r15_r14_132, out r8_49))
	branch (r8_55 & 4<16>) == 0<20> l00005B40
l00005B30:
	r12_108 = -SLICE(r13_r12_131, word20, 0) (alias)
l00005B40:
	branch (r8_55 & 8<16>) == 0<20> l00005B4C
l00005B44:
	r12_108 = (r12_108 ^ 0xFFFF<16>) + 1<20> (alias)
l00005B4C:
	return r12_108
fn00005B04_exit:


bool fn00005B4E(ui40 r11_r10, word20 r8, word20 r12, word20 r13, ptr16 & r13_r12Out, ptr16 & r15_r14Out, ptr16 & r8Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      vuprintf
//      fn00005B04
// MayUse:  r12:[0..19] r13:[0..19] r8:[0..19] Sequence r11:r10:[0..39]
// LiveOut: C r13:r12 r15:r14 r8
// Trashed: VNZC r12 r13 r14 r15 r8 r9
// Preserved: sp
fn00005B4E_entry:
	word20 r11 = SLICE(r11_r10, word20, 20)
	word20 r10 = SLICE(r11_r10, word20, 0)
l00005B4E:
	word20 r15_29 = 0<20>
	word20 r14_25 = 0<20>
	word20 r9_18 = 0x21<16>
l00005B6C:
	r12 = r12 * 2<20>
	r13 = r13 * 2<20> + CONVERT(r12 <u 0<20>, bool, word20)
	r9_18 = r9_18 - 1<16>
	word20 r8_17 = r8 * 2<20> + CONVERT(r13 <u 0<20>, bool, word20)
	bool C_22 = SLICE(cond(r9_18), bool, 0)
	branch r9_18 != 0<20> l00005B58
l00005B58:
	r8 = __rcr<word20,byte>(r8_17, 1<8>, C_22)
	r14_25 = r14_25 * 2<20> + CONVERT(r8 <u 0<20>, bool, word20)
	r15_29 = r15_29 * 2<20> + CONVERT(r14_25 <u 0<20>, bool, word20)
	branch r15_29 >=u r11 l00005B6C
l00005B62:
	branch r15_29 != r11 l00005B68
l00005B64:
	branch r14_25 >=u r10 l00005B6C
l00005B68:
	ui40 r15_r14_61 = SEQ(r15_29, r14_25) - r11_r10
	r14_25 = SLICE(r15_r14_61, word20, 0) (alias)
	r15_29 = SLICE(r15_r14_61, word20, 20) (alias)
l00005B76:
	r13_r12Out = <invalid>
	r15_r14Out = <invalid>
	r8Out = r8_17
	return C_22
fn00005B4E_exit:


