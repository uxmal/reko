void _start(word32 r4, word32 r5, word32 r12, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31] r4:[0..31] r5:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r6 r7 r8 r9
// Preserved: sp
_start_entry:
l0000269C:
	r6_16 = 0x000026AA<p32> - Mem14[0x000026BC<p32>:word32]
	call Mem14[r6_16 + 480<i32>:word32] (retsize: 0;)
		uses: lr:0<32>,Mem:Mem14,r10:fp + 4<i32>,r11:dwArg00,r12:0x00005574<p32>,r4:r4,r5:r5,r6:r6_16,r7:0<32>,r8:Mem14[r6_16 + 456<i32>:word32],r9:0x00002680<p32>,Stack +0000:r12,Stack +0004:fp + 4<i32>
		defs: lr:lr_23,pc:pc_30,r7:r7_22,VNZC:VNZC_31
	branch SLICE(VNZC_31, bool, 3) l000026BC_thunk_fn000026C0
l000026BC_thunk_fn000026C0:
	fn000026C0(r4, r5, r7_22, lr_23)
	return
l000026BC_1:
	lr_43 = CONVERT(Mem14[pc_30 + 186<i32>:int8], int8, int32)
l000026BC_thunk_fn000026C0:
	fn000026C0(r4, r5, r7_22, lr_43)
	return
_start_exit:


void fn000026C0(word32 r4, word32 r5, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _start
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000026C0_entry:
l000026C0:
	r6_19 = 0x000026C4<p32> - Mem17[0x000026F6<p32>:word32]
	branch Mem17[Mem17[r6_19 + 388<i32>:word32]:byte] == 0<8> l000026DA
l000026DA:
	r10_27 = Mem26[r6_19 + 1308<i32>:word32]
	r8_28 = Mem26[r10_27:word32]
	r8_30 = Mem26[r8_28:word32]
	branch r8_30 != 0<32> l000026D6
l000026D6:
	Mem33[r10_27:word32] = r8_28 + 4<32>
	call r8_30 (retsize: 0;)
		uses: lr:lr_37,Mem:Mem33,r10:r10_47,r4:r4_34,r5:r5_35,r6:r6_25,r7:r7_36
		defs: lr:lr_44,r10:r10_47,r4:r4_40,r5:r5_41,r6:r6_42,r7:r7_43
l000026EA:
	Mem51[Mem26[r6_19 + 388<i32>:word32]:byte] = 1<8>
	return
l000026D4:
	return
fn000026C0_exit:


void fn000026F8(word32 r4, word32 r5, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r12 r8
// Preserved: r4 r5 r6 r7 sp
fn000026F8_entry:
l000026F8:
	r6_19 = 0x000026FC<p32> - Mem17[0x00002716<p32>:word32]
	branch Mem17[Mem17[r6_19 + 1312<i32>:word32]:word32] == 0<32> l00002712
l00002708:
	r8_24 = Mem17[r6_19 + 400<i32>:word32]
	branch r8_24 == 0<32> l00002712
l00002710:
	call r8_24 (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r4:r4,r5:r5,r6:r6_19,r7:r7
l00002712:
	return
fn000026F8_exit:


void fn00002718()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004968
// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r8
// Preserved: sp
fn00002718_entry:
l00002718:
	return
fn00002718_exit:


void fn0000272E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004968
// MayUse: 
// LiveOut:
// Trashed: VNZC r8
// Preserved: sp
fn0000272E_entry:
l0000272E:
	return
fn0000272E_exit:


byte fn00002744(word32 r9, word32 r11, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000027FC
//      fn00002824
//      fn0000284C
//      fn00004968
// MayUse:  r11:[0..31] r9:[0..31]
// LiveOut: VNZ lr
// Trashed: VNZC lr r12 r8
// Preserved: sp
fn00002744_entry:
l00002744:
	branch r11 >= r9 l0000274E
l0000274E:
	branch r11 > r9 l00002758
l00002754_1:
l00002758:
	branch r11 <= r9 l0000275C
l00002758_1:
l0000275C:
	lrOut = <invalid>
	return <invalid>
l0000274C:
	lrOut = <invalid>
	return <invalid>
fn00002744_exit:


word32 fn000027D8(word32 r12, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003168
// MayUse:  r12:[0..31]
// LiveOut: r8 r9
// Trashed: VNZC r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000027D8_entry:
l000027D8:
	r9_20 = Mem17[0x000027DC<p32> - Mem17[0x000027FA<p32>:word32] + 8<i32>:word32]
	branch r12 == 0<32> l000027EA
l000027EA:
	r8_24 = Mem17[r9_20 + 8<i32>:word32]
	branch r8_24 != 0<32> l000027F4
l000027F0:
	Mem28[r9_20 + 8<i32>:word32] = 1<32>
	r8_24 = 1<32>
l000027F4:
	r9Out = <invalid>
	return r8_24
l000027E4:
	Mem37[r9_20 + 8<i32>:word32] = 2<32>
	r9Out = <invalid>
	return 2<32>
fn000027D8_exit:


void fn000027FC(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000027FC_entry:
l000027FC:
	r6_31 = 0x00002800<p32> - Mem29[0x0000281E<p32>:word32]
	r2_34 = Mem29[r11 + -36<i32>:word32]
	r3_35 = Mem29[r11 + -40<i32>:word32]
	fn00002744(Mem29[r12 + -40<i32>:word32], r3_35, out lr_45)
	Z_50 = <invalid>
	branch Z_50 l0000281E
l00002818:
	call r10 (retsize: 0;)
		uses: lr:lr_45,Mem:Mem29,r0:r0,r1:r1,r10:r2_34,r11:Mem29[r11:word32],r12:Mem29[r12:word32],r2:r2_34,r3:r3_35,r4:r10,r5:r12,r6:r6_31,r7:r11
l0000281E:
	return
fn000027FC_exit:


void fn00002824(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00002824_entry:
l00002824:
	r6_31 = 0x00002828<p32> - Mem29[0x00002846<p32>:word32]
	r2_34 = Mem29[r11 + -44<i32>:word32]
	r3_35 = Mem29[r11 + -48<i32>:word32]
	fn00002744(Mem29[r12 + -48<i32>:word32], r3_35, out lr_45)
	Z_50 = <invalid>
	branch Z_50 l00002846
l00002840:
	call r10 (retsize: 0;)
		uses: lr:lr_45,Mem:Mem29,r0:r0,r1:r1,r10:r2_34,r11:Mem29[r11:word32],r12:Mem29[r12:word32],r2:r2_34,r3:r3_35,r4:r10,r5:r12,r6:r6_31,r7:r11
l00002846:
	return
fn00002824_exit:


void fn0000284C(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000284C_entry:
l0000284C:
	r6_31 = 0x00002850<p32> - Mem29[0x0000286E<p32>:word32]
	r2_34 = Mem29[r11 + -52<i32>:word32]
	r3_35 = Mem29[r11 + -56<i32>:word32]
	fn00002744(Mem29[r12 + -56<i32>:word32], r3_35, out lr_45)
	Z_50 = <invalid>
	branch Z_50 l0000286E
l00002868:
	call r10 (retsize: 0;)
		uses: lr:lr_45,Mem:Mem29,r0:r0,r1:r1,r10:r2_34,r11:Mem29[r11:word32],r12:Mem29[r12:word32],r2:r2_34,r3:r3_35,r4:r10,r5:r12,r6:r6_31,r7:r11
l0000286E:
	return
fn0000284C_exit:


void fn00002874(word32 r6, word32 r7, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002874_entry:
l00002874:
	r5_r4_19 = Mem17[r11 + 52<i32>:word64]
	r9_r8_22 = Mem17[r12 + 52<i32>:word64]
	r4_23 = SLICE(r5_r4_19, word32, 0) (alias)
	r8_24 = SLICE(r9_r8_22, word32, 0) (alias)
	r5_26 = SLICE(r5_r4_19, word32, 32) (alias)
	r9_27 = SLICE(r9_r8_22, word32, 32) (alias)
	branch r5_26 - r9_27 >= SLICE(cond(r4_23 - r8_24), bool, 0) l0000288A
l0000288A:
	branch CONVERT(r5_26 - r9_27 > SLICE(cond(r4_23 - r8_24), bool, 0), bool, word32) != 0<32> l0000289C
l00002896:
	call r10 (retsize: 0;)
		uses: lr:r12,Mem:Mem17,r10:r10,r11:Mem17[r11:word32],r12:Mem17[r12:word32],r4:r4_23,r5:r5_26,r6:r6,r7:r7
l0000289C:
	return
l00002888:
	return
fn00002874_exit:


void fn0000289E(word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: lr r10 r11 r12
// Preserved: sp
fn0000289E_entry:
l0000289E:
	call r10 (retsize: 0;)
		uses: lr:lr,Mem:Mem5,r10:r10,r11:Mem5[r11:word32],r12:Mem5[r12:word32],Stack +0000:lr
	return
fn0000289E_exit:


word32 fn00002A4C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000393C
// MayUse: 
// LiveOut: r10
// Trashed: VNZC r10 r11 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002A4C_entry:
l00002A4C:
	r8_21 = Mem17[0x00002A50<p32> - Mem17[0x00002A6A<p32>:word32] + 8<i32>:word32]
	r10_22 = 0<32>
	r9_23 = Mem17[r8_21 + 20<i32>:word32]
	r11_24 = Mem17[r8_21 + 12<i32>:word32]
	r8_25 = Mem17[r8_21 + 16<i32>:word32]
l00002A64:
	branch r10_22 != r11_24 l00002A5E
l00002A5E:
	Mem32[r8_25:word32] = r9_23
	r8_25 = r8_25 + 4<i32>
	r10_22 = r10_22 + 1<32>
	r9_23 = r9_23 + 0x7C<32>
l00002A68:
	return r10_22
fn00002A4C_exit:


word32 fn00002A70(word32 r10, word32 r11, word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002DB4
//      fn00004374
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r11 r12
// Trashed: VNZC r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002A70_entry:
l00002A70:
	r6_19 = 0x00002A74<p32> - Mem17[0x00002B2E<p32>:word32]
	branch r12 == 0<32> l00002A88
l00002A88:
	r8_26 = CONVERT(r10 == 5<32>, bool, word32)
l00002A7A:
	r8_26 = CONVERT((r11 & 0xF000<32>) == 0x8000<32>, bool, word32)
l00002A8C:
	branch r8_26 == 0<32> l00002AA6
l00002AA6:
	branch r12 == 0<32> l00002AB8
l00002AB8:
	r9_46 = CONVERT(r10 == 3<32>, bool, word32) | CONVERT(r10 == 9<32>, bool, word32)
l00002AAA:
	r9_46 = CONVERT((r11 & 0xF000<32>) == 0x4000<32>, bool, word32)
l00002AC2:
	branch r9_46 == 0<32> l00002ACA
l00002ACA:
	branch Mem17[Mem17[r6_19 + 8<i32>:word32] + 24<i32>:word32] == 1<32> l00002B2A
l00002AD2:
	branch r12 == 0<32> l00002AE4
l00002AE4:
	r8_71 = CONVERT(r10 == 6<32>, bool, word32)
l00002AD6:
	r8_71 = CONVERT((r11 & 0xF000<32>) == 0xA000<32>, bool, word32)
l00002AE8:
	branch r8_71 == 0<32> l00002AF0
l00002AF0:
	branch r12 == 0<32> l00002B02
l00002B02:
	r8_87 = CONVERT(r10 == 1<32>, bool, word32)
l00002AF4:
	r8_87 = CONVERT((r11 & 0xF000<32>) == 0x1000<32>, bool, word32)
l00002B06:
	branch r8_87 == 0<32> l00002B0E
l00002B0E:
	branch r12 == 0<32> l00002B1E
l00002B1E:
	r8_103 = CONVERT(r10 == 7<32>, bool, word32)
l00002B12:
	r11 = r11 & 0xF000<32>
	r8_103 = CONVERT((r11 & 0xF000<32>) == 0xC000<32>, bool, word32)
l00002B22:
	branch r8_103 == 0<32> l00002B2A
l00002B26:
	r12Out = 0x3D<32>
	return r11
l00002B0A:
	r12Out = 0x7C<32>
	return r11
l00002AEC:
	r12Out = 0x40<32>
	return r11
l00002AC6:
	r12Out = 0x2F<32>
	return r11
l00002A90:
	branch r12 == 0<32> l00002B2A
l00002A94:
	branch Mem17[Mem17[r6_19 + 8<i32>:word32] + 24<i32>:word32] != 3<32> l00002B2A
l00002A9C:
	r11 = r11 & 0x49<32>
	branch (r11 & 0x49<32>) == 0<32> l00002B2A
l00002B2A:
	r12Out = r12
	return r11
l00002AA2:
	r12Out = 0x2A<32>
	return r11 & 0x49<32>
fn00002A70_exit:


word32 fn00002B30(word32 r5, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006CAC
// MayUse:  lr:[0..31] r12:[0..31] r5:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00002B30_entry:
l00002B30:
	r6_19 = 0x00002B34<p32> - Mem17[0x00002B56<p32>:word32]
	r7_22 = Mem17[r6_19 + 328<i32>:word32]
	branch r12 == 0<32> l00002B58
l00002B58:
	r8_26 = Mem17[r7_22:word32]
	call Mem28[r6_19 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem28,r12:Mem17[r6_19 + 1300<i32>:word32],r4:r12,r5:r5,r6:r6_19,r7:r7_22,r8:r8_26,Stack +0000:r8_26
		defs: lr:lr_34,r4:r4_30,r6:r6_32,r7:r7_33
	r5_39 = Mem28[r6_32 + 40<i32>:word32]
	call Mem28[r6_32 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_34,Mem:Mem28,r11:Mem28[r5_39:word32],r12:Mem28[r6_32 + 1296<i32>:word32],r4:r4_30,r5:r5_39,r6:r6_32,r7:r7_33
		defs: lr:lr_47,r4:r4_43,r5:r5_44,r6:r6_45,r7:r7_46
	call Mem28[r6_45 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_47,Mem:Mem28,r11:Mem28[r5_44:word32],r12:Mem28[r6_45 + 1292<i32>:word32],r4:r4_43,r5:r5_44,r6:r6_45,r7:r7_46
		defs: lr:lr_59,r4:r4_55,r5:r5_56,r6:r6_57,r7:r7_58
	call Mem28[r6_57 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_59,Mem:Mem28,r11:Mem28[r5_56:word32],r12:Mem28[r6_57 + 1288<i32>:word32],r4:r4_55,r5:r5_56,r6:r6_57,r7:r7_58
		defs: lr:lr_71,r4:r4_67,r5:r5_68,r6:r6_69,r7:r7_70
	call Mem28[r6_69 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_71,Mem:Mem28,r11:Mem28[r5_68:word32],r12:Mem28[r6_69 + 1284<i32>:word32],r4:r4_67,r5:r5_68,r6:r6_69,r7:r7_70
		defs: lr:lr_83,r4:r4_79,r5:r5_80,r6:r6_81,r7:r7_82
	call Mem28[r6_81 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_83,Mem:Mem28,r11:Mem28[r5_80:word32],r12:Mem28[r6_81 + 1280<i32>:word32],r4:r4_79,r5:r5_80,r6:r6_81,r7:r7_82
		defs: lr:lr_95,r4:r4_91,r5:r5_92,r6:r6_93,r7:r7_94
	call Mem28[r6_93 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_95,Mem:Mem28,r11:Mem28[r5_92:word32],r12:Mem28[r6_93 + 1276<i32>:word32],r4:r4_91,r5:r5_92,r6:r6_93,r7:r7_94
		defs: lr:lr_107,r4:r4_103,r5:r5_104,r6:r6_105,r7:r7_106
	call Mem28[r6_105 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_107,Mem:Mem28,r11:Mem28[r5_104:word32],r12:Mem28[r6_105 + 1272<i32>:word32],r4:r4_103,r5:r5_104,r6:r6_105,r7:r7_106
		defs: lr:lr_119,r4:r4_115,r5:r5_116,r6:r6_117,r7:r7_118
	call Mem28[r6_117 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_119,Mem:Mem28,r11:Mem28[r5_116:word32],r12:Mem28[r6_117 + 1268<i32>:word32],r4:r4_115,r5:r5_116,r6:r6_117,r7:r7_118
		defs: lr:lr_131,r4:r4_127,r5:r5_128,r6:r6_129,r7:r7_130
	call Mem28[r6_129 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_131,Mem:Mem28,r11:Mem28[r5_128:word32],r12:Mem28[r6_129 + 1264<i32>:word32],r4:r4_127,r5:r5_128,r6:r6_129,r7:r7_130
		defs: lr:lr_143,r4:r4_139,r5:r5_140,r6:r6_141,r7:r7_142
	call Mem28[r6_141 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_143,Mem:Mem28,r11:Mem28[r5_140:word32],r12:Mem28[r6_141 + 1260<i32>:word32],r4:r4_139,r5:r5_140,r6:r6_141,r7:r7_142
		defs: lr:lr_155,r4:r4_151,r5:r5_152,r6:r6_153,r7:r7_154
	call Mem28[r6_153 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_155,Mem:Mem28,r11:Mem28[r5_152:word32],r12:Mem28[r6_153 + 1256<i32>:word32],r4:r4_151,r5:r5_152,r6:r6_153,r7:r7_154
		defs: lr:lr_167,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166
	call Mem28[r6_165 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_167,Mem:Mem28,r11:Mem28[r5_164:word32],r12:Mem28[r6_165 + 1252<i32>:word32],r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166
		defs: lr:lr_179,r4:r4_175,r5:r5_176,r6:r6_177,r7:r7_178
	call Mem28[r6_177 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_179,Mem:Mem28,r11:Mem28[r5_176:word32],r12:Mem28[r6_177 + 1248<i32>:word32],r4:r4_175,r5:r5_176,r6:r6_177,r7:r7_178
		defs: lr:lr_191,r4:r4_187,r5:r5_188,r6:r6_189,r7:r7_190
	call Mem28[r6_189 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_191,Mem:Mem28,r11:Mem28[r5_188:word32],r12:Mem28[r6_189 + 1244<i32>:word32],r4:r4_187,r5:r5_188,r6:r6_189,r7:r7_190
		defs: lr:lr_203,r4:r4_199,r5:r5_200,r6:r6_201,r7:r7_202
	call Mem28[r6_201 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_203,Mem:Mem28,r11:Mem28[r5_200:word32],r12:Mem28[r6_201 + 1240<i32>:word32],r4:r4_199,r5:r5_200,r6:r6_201,r7:r7_202
		defs: lr:lr_215,r4:r4_211,r5:r5_212,r6:r6_213,r7:r7_214
	call Mem28[r6_213 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_215,Mem:Mem28,r11:Mem28[r5_212:word32],r12:Mem28[r6_213 + 1236<i32>:word32],r4:r4_211,r5:r5_212,r6:r6_213,r7:r7_214
		defs: lr:lr_227,r4:r4_223,r5:r5_224,r6:r6_225,r7:r7_226
	call Mem28[r6_225 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_227,Mem:Mem28,r11:Mem28[r5_224:word32],r12:Mem28[r6_225 + 1232<i32>:word32],r4:r4_223,r5:r5_224,r6:r6_225,r7:r7_226
		defs: lr:lr_239,r4:r4_235,r5:r5_236,r6:r6_237,r7:r7_238
	call Mem28[r6_237 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_239,Mem:Mem28,r11:Mem28[r5_236:word32],r12:Mem28[r6_237 + 1228<i32>:word32],r4:r4_235,r5:r5_236,r6:r6_237,r7:r7_238
		defs: lr:lr_251,r4:r4_247,r5:r5_248,r6:r6_249,r7:r7_250
	call Mem28[r6_249 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_251,Mem:Mem28,r11:Mem28[r5_248:word32],r12:Mem28[r6_249 + 1224<i32>:word32],r4:r4_247,r5:r5_248,r6:r6_249,r7:r7_250
		defs: lr:lr_263,r4:r4_259,r5:r5_260,r6:r6_261,r7:r7_262
	call Mem28[r6_261 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_263,Mem:Mem28,r11:Mem28[r5_260:word32],r12:Mem28[r6_261 + 1220<i32>:word32],r4:r4_259,r5:r5_260,r6:r6_261,r7:r7_262
		defs: lr:lr_275,r4:r4_271,r5:r5_272,r6:r6_273,r7:r7_274
	call Mem28[r6_273 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_275,Mem:Mem28,r11:Mem28[r5_272:word32],r12:Mem28[r6_273 + 1216<i32>:word32],r4:r4_271,r5:r5_272,r6:r6_273,r7:r7_274
		defs: lr:lr_287,r4:r4_283,r5:r5_284,r6:r6_285,r7:r7_286
	r12_293 = Mem28[r6_285 + 1212<i32>:word32]
l00002C40:
	call Mem28[r6_285 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_287,Mem:Mem28,r12:r12_293,r4:r4_283,r5:r5_284,r6:r6_285,r7:r7_286
		defs: lr:lr_299,r4:r4_295,r5:r5_296,r6:r6_297,r7:r7_298
	call Mem28[r6_297 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_299,Mem:Mem28,r11:Mem28[r5_296:word32],r12:Mem28[r6_297 + 1208<i32>:word32],r4:r4_295,r5:r5_296,r6:r6_297,r7:r7_298
		defs: lr:lr_311,r4:r4_307,r5:r5_308,r6:r6_309,r7:r7_310
	call Mem28[r6_309 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_311,Mem:Mem28,r11:Mem28[r5_308:word32],r12:Mem28[r6_309 + 1204<i32>:word32],r4:r4_307,r5:r5_308,r6:r6_309,r7:r7_310
		defs: lr:lr_323,r4:r4_319,r5:r5_320,r6:r6_321,r7:r7_322
	call Mem28[r6_321 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_323,Mem:Mem28,r11:Mem28[r5_320:word32],r12:Mem28[r6_321 + 1200<i32>:word32],r4:r4_319,r5:r5_320,r6:r6_321,r7:r7_322
		defs: lr:lr_335,r4:r4_331,r5:r5_332,r6:r6_333,r7:r7_334,sp:sp_330
	fn00006E94(Mem28[r7_334:word32], out r11_559, out r12_343)
	r8_350 = Mem28[r6_333 + 1196<i32>:word32]
	Mem352[sp_330 - 4<i32>:word32] = r8_350
	Mem354[sp_330 - 8<i32>:word32] = r12_343
	call Mem354[r6_333 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_335,Mem:Mem354,r12:Mem354[r6_333 + 1192<i32>:word32],r4:r4_331,r5:r5_332,r6:r6_333,r7:r7_334,r8:r8_350
		defs: lr:lr_361,r4:r4_357,r5:r5_358,r6:r6_359,r7:r7_360,sp:sp_356
	r12_369 = Mem354[r6_359 + 1184<i32>:word32]
	Mem371[sp_356 - 4<i32>:word32] = Mem354[r6_359 + 1188<i32>:word32]
	r8_372 = Mem371[r6_359 + 384<i32>:word32]
	Mem374[sp_356 - 8<i32>:word32] = r8_372
	call Mem374[r6_359 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_361,Mem:Mem374,r12:r12_369,r4:r4_357,r5:r5_358,r6:r6_359,r7:r7_360,r8:r8_372
		defs: lr:lr_380,r4:r4_376,r5:r5_377,r6:r6_378,r7:r7_379
	call Mem374[r6_378 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_380,Mem:Mem374,r11:Mem374[r5_377:word32],r12:Mem374[r6_378 + 1180<i32>:word32],r4:r4_376,r5:r5_377,r6:r6_378,r7:r7_379
		defs: lr:lr_394,r4:r4_390,r5:r5_391,r6:r6_392,r7:r7_393,sp:sp_389
	branch CONVERT(SLICE(fn00008A8C(r4_390, r5_391, r6_392, r7_393, lr_394, out lr_402), byte, 0), byte, word32) == 0<32> l00002CB4
l00002CA2:
	fn00006E94(Mem374[r7_393:word32], out r11_560, out r12_417)
	Mem425[sp_389 + 0x10<32>:word32] = r12_417
	call Mem425[r6_392 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_402,Mem:Mem425,r12:Mem425[r6_392 + 1176<i32>:word32],r4:r4_390,r5:r5_391,r6:r6_392,r7:r7_393
		defs: lr:lr_432,r4:r4_428,r5:r5_429,r6:r6_430,r7:r7_431
l00002B40:
	r8_442 = Mem17[r7_22:word32]
	call Mem444[r6_19 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem444,r11:Mem17[r6_19 + 1304<i32>:word32],r12:Mem17[Mem17[r6_19 + 148<i32>:word32]:word32],r4:r12,r5:r5,r6:r6_19,r7:r7_22,r8:r8_442,Stack +0000:r8_442
		defs: lr:lr_450,r4:r4_446,r5:r5_447,r6:r6_448,r7:r7_449
l00002CB2:
l00002CB4:
	call Mem465[r6_392 + 276<i32>:word32] (retsize: 0;)
		uses: lr:lr_471,Mem:Mem465,r12:r4_460,r4:r4_460,r5:r5_467,r6:r6_463,r7:r7_469
		defs: lr:lr_479,r10:r10_483,r11:r11_482,r4:r4_475
l00002CBA_thunk_fn00002CBC:
	r8_488 = fn00002CBC(r4_475, lr_479, out r9_489, out r12_487, out lr_486)
	r9Out = r9_489
	r10Out = r10_483
	r11Out = r11_482
	r12Out = r12_487
	lrOut = lr_486
	return r8_488
fn00002B30_exit:


word32 fn00002CBC(word32 r4, word32 lr, ptr32 & r9Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002B30
//      fn0000511C
// MayUse:  lr:[0..31] r4:[0..31]
// LiveOut: lr r12 r8 r9
// Trashed: VNZC lr r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002CBC_entry:
l00002CBC:
	r6_19 = 0x00002CC0<p32> - Mem17[0x00002D02<p32>:word32]
	r7_21 = 0<32>
l00002CDA:
	r9_24 = Mem17[r6_19 + 8<i32>:word32]
	branch r7_21 <u Mem17[r9_24 + 12<i32>:word32] l00002CC6
l00002CC6:
	r8_29 = Mem17[r9_24 + 16<i32>:word32]
	r5_30 = Mem17[r8_29 + r7_21 * 4<32>:word32]
	call Mem17[r6_19 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_35,Mem:Mem17,r12:Mem17[r5_30:word32],r4:r4_34,r5:r5_30,r6:r6_22,r7:r7_26 + 1<32>,r8:r8_29
		defs: lr:lr_42,r4:r4_38,r5:r5_39,r6:r6_40,r7:r7_41
	call Mem17[r6_40 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_42,Mem:Mem17,r12:Mem17[r5_39 + 4<i32>:word32],r4:r4_38,r5:r5_39,r6:r6_40,r7:r7_41
		defs: lr:lr_53,r12:r12_56,r4:r4_49,r6:r6_51,r7:r7_52
l00002CE2:
	Mem59[r9_24 + 68<i32>:word32] = 0<32>
	Mem60[r9_24 + 12<i32>:word32] = 0<32>
	Mem61[r9_24 + 28<i32>:byte] = 0<8>
	Mem62[r9_24 + -32<i32>:word32] = 0<32>
	Mem63[r9_24 + -28<i32>:word32] = 0<32>
	Mem64[r9_24 + -24<i32>:word32] = 0<32>
	Mem65[r9_24 + -20<i32>:word32] = 0<32>
	Mem66[r9_24 + -16<i32>:word32] = 0<32>
	Mem67[r9_24 + -12<i32>:word32] = 0<32>
	Mem68[r9_24 + -8<i32>:word32] = 0<32>
	Mem69[r9_24 + -4<i32>:word32] = 0<32>
	Mem70[r9_24 + 64<i32>:word32] = 0<32>
	r9Out = r9_24
	r12Out = r12
	lrOut = lr
	return 0<32>
fn00002CBC_exit:


void fn00002D08(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r12
// Preserved: r4 r5 r6 r7 sp
fn00002D08_entry:
l00002D08:
	r6_19 = 0x00002D0C<p32> - Mem17[0x00002D26<p32>:word32]
	call Mem17[r6_19 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r12:Mem17[r12:word32],r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_29,r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_28
	call Mem17[r6_27 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_29,Mem:Mem17,r12:Mem17[r5_26 + 4<i32>:word32],r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_28
		defs: lr:lr_38,r4:r4_34,r5:r5_35,r6:r6_36,r7:r7_37
	call Mem17[r6_36 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_38,Mem:Mem17,r12:r5_35,r4:r4_34,r5:r5_35,r6:r6_36,r7:r7_37
	return
fn00002D08_exit:


void fn00002D28(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr
// Preserved: r4 r5 r6 r7 sp
fn00002D28_entry:
l00002D28:
	r6_19 = 0x00002D2C<p32> - Mem17[0x00002D36<p32>:word32]
	call Mem17[r6_19 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
	return
fn00002D28_exit:


word32 fn00002D38(word32 r4, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r4:[0..31]
// LiveOut: lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002D38_entry:
l00002D38:
	r6_100 = 0x00002D3C<p32> - Mem17[0x00002DB2<p32>:word32]
	r7_104 = r12
	r5_115 = r11
l00002DA8:
	branch r7_104 <u r5_115 l00002D44
l00002D44:
	r10_32 = Mem30[Mem30[r6_100 + 8<i32>:word32] + -56<i32>:word32]
	branch r10_32 == 0<32> l00002D8C
l00002D4C:
	branch r5_115 /u r10_32 <=u (r7_104 + 1<32>) /u r10_32 l00002D8C
l00002D8C:
	r11_44 = Mem30[Mem30[r6_100 + -64<i32>:word32]:word32]
	r9_45 = Mem30[r11_44 + 16<i32>:word32]
	branch r9_45 >=u Mem30[r11_44 + 28<i32>:word32] l00002DA0
l00002DA0:
	call Mem30[r6_100 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_55,Mem:Mem30,r10:r10_67,r11:r11_44,r12:0x20<32>,r4:r4_51,r5:r5_26,r6:r6_29,r7:r7_25,r8:r8_66,r9:r9_68
		defs: lr:lr_63,r10:r10_67,r4:r4_59,r5:r5_60,r6:r6_61,r7:r7_62,r8:r8_66,r9:r9_68
l00002D98:
	Mem71[r9_45:byte] = 0x20<8>
	Mem73[r11_44 + 16<i32>:word32] = r9_45 + 1<i32>
l00002DA6:
	r7_104 = r7_104 + 1<32>
l00002D60:
	r11_107 = Mem30[Mem30[r6_100 + -64<i32>:word32]:word32]
	r9_79 = Mem30[r11_107 + 16<i32>:word32]
	branch r9_79 >=u Mem30[r11_107 + 28<i32>:word32] l00002D74
l00002D74:
	call Mem30[r6_100 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_55,Mem:Mem30,r10:r10_93,r11:r11_78,r12:9<32>,r4:r4_51,r5:r5_26,r6:r6_29,r7:r7_25,r8:r8_92,r9:r9_94
		defs: lr:lr_89,r10:r10_93,r11:r11_91,r4:r4_85,r5:r5_86,r6:r6_87,r7:r7_88,r8:r8_92,r9:r9_94
l00002D6C:
	Mem97[r9_79:byte] = 9<8>
	Mem99[r11_107 + 16<i32>:word32] = r9_79 + 1<i32>
l00002D7A:
	r7_104 = r7_104 + Mem101[Mem101[r6_100 + 8<i32>:word32] + -56<i32>:word32] + r11_107
l00002DAC:
	return lr
fn00002D38_exit:


word32 fn00002DB4(word32 r4, word32 r5, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004864
//      fn00004968
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r10 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002DB4_entry:
l00002DB4:
	r6_19 = 0x00002DB8<p32> - Mem17[0x00002DEA<p32>:word32]
	fn00002A70(r10, r11, r12, out r12_26)
	r7_33 = CONVERT(SLICE(r12_26, byte, 0), byte, word32)
	branch r7_33 == 0<32> l00002DE4
l00002DC2:
	r11_37 = Mem17[Mem17[r6_19 + -64<i32>:word32]:word32]
	r9_38 = Mem17[r11_37 + 16<i32>:word32]
	branch r9_38 >=u Mem17[r11_37 + 28<i32>:word32] l00002DD4
l00002DD4:
	call Mem17[r6_19 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r10:r10,r11:r11_37,r12:r7_33,r4:r4,r5:r5,r6:r6_19,r7:r7_33
		defs: lr:lr_48,r10:r10_53,r6:r6_46,r7:r7_47
l00002DCE:
	Mem55[r9_38:byte] = SLICE(r7_33, byte, 0)
	Mem57[r11_37 + 16<i32>:word32] = r9_38 + 1<i32>
l00002DDA:
	r9_60 = Mem59[r6_19 + 8<i32>:word32]
	Mem64[r9_60 + 76<i32>:word32] = Mem59[r9_60 + -52<i32>:word32] + 1<32>
l00002DE4:
	r12Out = CONVERT(r7_33 != 0<32>, bool, word32)
	lrOut = lr
	return r10
fn00002DB4_exit:


void fn00002DF0(word32 r0, word32 r1, word32 r2, word32 r7, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r11:[0..31] r2:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00002DF0_entry:
l00002DF0:
	r9_33 = Mem29[r11 + 12<i32>:word32]
	r5_34 = Mem29[r11 + 8<i32>:word32]
	r6_31 = 0x00002DF4<p32> - Mem29[0x00002E76<p32>:word32]
	r8_35 = r9_33 + r5_34
	branch r8_35 >>u 2<32> == 0<32> l00002E72
l00002E04:
	branch r9_33 != r5_34 l00002E12
l00002E08:
	Mem47[r11 + -24<i32>:word32] = Mem29[r11 + 40<i32>:word32]
l00002E12:
	r8_51 = Mem49[r11 + 24<i32>:word32]
	lr_52 = Mem49[r11 + 16<i32>:word32]
	r9_55 = Mem49[r11 + 4<i32>:word32]
	r8_56 = r8_51 + Mem49[r11 + 12<i32>:word32] & 0xFFFFFFFF<32> - r8_51
	Mem57[r11 + 12<i32>:word32] = r8_56
	branch r8_56 + r9_55 <= lr_52 + r9_55 l00002E32
l00002E30:
	Mem62[r11 + 12<i32>:word32] = lr_52
l00002E32:
	Mem66[r11 + 8<i32>:word32] = Mem64[r11 + 12<i32>:word32]
	r8_69 = Mem66[r6_31 + 40<i32>:word32]
	call Mem66[r6_31 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_52,Mem:Mem66,r0:r0,r1:r1,r10:r10_100,r11:Mem66[r8_69:word32],r12:r12_101,r2:r2,r3:r8_35 >>u 2<32>,r4:Mem66[r6_31 + 1172<i32>:word32],r5:r5_34,r6:r6_31,r7:r7,r8:r8_69
		defs: lr:lr_96,r0:r0_88,r1:r1_89,r10:r10_100,r11:r11_97,r12:r12_101,r2:r2_90,r3:r3_91,r4:r4_92,r5:r5_93,r6:r6_94,sp:sp_87
	r7_103 = 0<32>
l00002E44:
	r8_107 = Mem106[r5_104 + r7_103 * 4<32>:word32]
	Mem114[sp_112 - 4<i32>:word32] = r8_107
	call Mem114[r6_115 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_120,Mem:Mem114,r0:r0_116,r1:r1_117,r10:r10_135,r11:r11_121,r12:r4_108,r2:r2_118,r3:r3_119,r4:r4_108,r5:r5_104,r6:r6_115,r7:r7_105 + 1<32>,r8:r8_107
		defs: lr:lr_131,r0:r0_123,r1:r1_124,r10:r10_135,r11:r11_132,r2:r2_125,r3:r3_126,r4:r4_127,r5:r5_128,r6:r6_129,r7:r7_130
	sp_112 = fp - 0x24<32>
	branch r7_103 != r3_119 l00002E44
l00002E58:
	r11_142 = Mem114[Mem114[r6_115 + -64<i32>:word32]:word32]
	r9_143 = Mem114[r11_142 + 16<i32>:word32]
	branch r9_143 >=u Mem114[r11_142 + 28<i32>:word32] l00002E6C
l00002E6C:
	call Mem114[r6_115 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_131,Mem:Mem114,r0:r0_123,r1:r1_124,r10:r10_161,r11:r11_142,r12:0xA<32>,r2:r2_125,r3:r3_126,r4:r4_127,r5:r5_128,r6:r6_129,r7:r7_130
		defs: r10:r10_161
l00002E72:
	return
l00002E64:
	Mem176[r9_143:byte] = 0xA<8>
	Mem178[r11_142 + 16<i32>:word32] = r9_143 + 1<i32>
	return
fn00002DF0_exit:


void fn00002E78(word32 r0, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00002E78_entry:
l00002E78:
	r6_31 = 0x00002E7C<p32> - Mem29[0x00002FD6<p32>:word32]
	r5_137 = 0<32>
	r3_276 = r11
	r7_104 = Mem29[r12:word32]
	r11_154 = Mem29[r11:word32]
	r4_265 = r12
	r2_397 = r10
	r1_295 = r9
	r10_151 = 0<32>
	r12_139 = 0<32>
l00002E94:
	branch r12_139 >u 4<32> l0000306E
l0000306E:
	call Mem51[r6_31 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_59,Mem:Mem51,r0:r0_52,r1:r1_53,r10:r10_61,r11:r11_60,r12:r12_46,r2:r2_54,r3:r3_55,r4:r4_56,r5:r5_57,r6:r6_50,r7:r7_58,r9:r9_62
		defs: lr:lr_73,r0:r0_65,r1:r1_66,r10:r10_76,r11:r11_74,r2:r2_67,r3:r3_68,r4:r4_69,r5:r5_70,r6:r6_71,r7:r7_72
l00002E9A:
	lr = CONVERT(Mem51[r11_154:byte], byte, word32)
	switch (r12_139) { l00002EA4 l00002EA8 l00002EAC l00002EB0 l00002EB4 }
l00002EB4:
l0000303E:
	branch SLICE(lr, byte, 0) >u 0x7E<8> || SLICE(lr, byte, 0) <u 0x40<8> l00003058
l00003058:
	branch SLICE(lr, byte, 0) == 0x3F<8> l00003064
l00003064:
	r5_137 = r5_137 + 1<32>
	r8_101 = 0x7F<32>
l00003060:
l0000304C:
	r8_101 = CONVERT(SLICE(lr, word5, 0), word5, word32)
	r11_154 = r11_154 + 1<32>
	r5_137 = r5_137 + 1<32>
l0000306A:
	Mem103[r7_104:byte] = SLICE(r8_101, byte, 0)
	r12_139 = 0<32>
	r7_104 = r7_104 + 1<i32>
l00002EB0:
l00002FD8:
	branch SLICE(lr, byte, 0) <u 0x30<8> l00003036
l00002FE0:
	branch SLICE(lr, byte, 0) <=u 0x39<8> l0000300C
l0000300C:
	r8_112 = lr + (r10_151 << 4<32>)
l00002FEA:
	branch SLICE(lr, byte, 0) <u 0x41<8> l00003036
l00002FF2:
	branch SLICE(lr, byte, 0) <=u 0x46<8> l00003024
l00003024:
	r8_122 = lr + (r10_151 << 4<32>) - 0x37<32>
l00002FFC:
	branch SLICE(lr, byte, 0) >u 0x66<8> || SLICE(lr, byte, 0) <u 0x61<8> l00003036
l0000300A:
l00003018:
	r8_122 = lr + (r10_151 << 4<32>) - 0x57<32>
l00002EAC:
l00002FC0:
	branch SLICE(lr, byte, 0) >u 0x37<8> || SLICE(lr, byte, 0) <u 0x30<8> l00003036
l00003036:
	Mem142[r7_104:byte] = SLICE(r10_151, byte, 0)
	r5_137 = r5_137 + 1<32>
	r12_139 = 0<32>
	r7_104 = r7_104 + 1<i32>
l00002FCE:
	r8_112 = lr + (r10_151 << 3<8>)
l00003014:
	r8_122 = r8_112 - 0x30<32>
l0000302E:
	r10_151 = CONVERT(SLICE(r8_122, byte, 0), byte, word32)
	r11_154 = r11_154 + 1<32>
l00002EA8:
l00002EFC:
	r9 = lr
	branch lr == 0<32> l00003072
l00003072:
	r12_139 = 6<32>
l00002F04:
	branch SLICE(lr, byte, 0) <u 0x30<8> l00002FAC
l00002F0C:
	branch SLICE(lr, byte, 0) <=u 0x37<8> l00002F84
l00002F84:
	r10_151 = CONVERT(SLICE(lr, byte, 0) - 0x30<8>, byte, word32)
	r12_139 = 2<32>
l00002F16:
	branch SLICE(lr, byte, 0) == 0x3F<8> l00002FAA
l00002FAA:
	r9 = 0x7F<32>
l00002F1E:
	branch SLICE(lr, byte, 0) == 0x58<8> l00002F90
l00002F26:
	branch SLICE(lr, byte, 0) == 0x5F<8> l00003080
l00003080:
	r9 = 0x20<32>
l00002F30:
	branch SLICE(lr, byte, 0) == 0x61<8> l00002F80
l00002F80:
	r9 = 7<32>
l00002F38:
	branch SLICE(lr, byte, 0) == 0x62<8> l00002F7C
l00002F7C:
	r9 = 8<32>
l00002F40:
	branch SLICE(lr, byte, 0) == 0x65<8> l00003084
l00003084:
	r9 = 0x1B<32>
l00002F4A:
	branch SLICE(lr, byte, 0) == 0x66<8> l00002F96
l00002F96:
	r9 = 0xC<32>
l00002F52:
	branch SLICE(lr, byte, 0) == 0x6E<8> l00002F9A
l00002F9A:
	r9 = 0xA<32>
l00002F5A:
	branch SLICE(lr, byte, 0) == 0x72<8> l00002F9E
l00002F9E:
	r9 = 0xD<32>
l00002F62:
	branch SLICE(lr, byte, 0) == 0x74<8> l00002FA2
l00002FA2:
	r9 = 9<32>
l00002F6A:
	branch SLICE(lr, byte, 0) == 0x76<8> l00002FA6
l00002FA6:
	r9 = 0xB<32>
l00002F72:
	branch SLICE(lr, byte, 0) != 0x78<8> l00002FAC
l00002FAC:
	branch r12_139 != 1<32> l00002FB6
l00002FB0:
	Mem230[r7_104:byte] = SLICE(r9, byte, 0)
	r5_137 = r5_137 + 1<32>
	r12_139 = 0<32>
	r7_104 = r7_104 + 1<i32>
l00002F7A:
l00002F90:
	r10_151 = 0<32>
	r12_139 = 3<32>
l00003074:
	r9 = r10_151
l00002FB6:
	r11_154 = r11_154 + 1<32>
	branch r12_139 <=u 4<32> l00002E92
l00002FBE:
l00002EA4:
l00002EB8:
	branch lr == 0<32> l00003078
l00002EBE:
	branch SLICE(lr, byte, 0) == 0x3A<8> l00003078
l00002EC8:
	branch SLICE(lr, byte, 0) == 0x3D<8> l00002EEE
l00002EEE:
	branch r2_397 != 0<32> l00003078
l00003078:
l00003088:
	Mem273[r4_265:word32] = r7_104
	Mem284[r3_276:word32] = r11_154
	Mem303[r1_295:word32] = r5_137
	return
fn00002E78_exit:
l00002ED0:
	branch SLICE(lr, byte, 0) == 0x5C<8> l00002EE2
l00002EE2:
	r11_154 = r11_154 + 1<32>
	r12_139 = 1<32>
l00002ED8:
	branch SLICE(lr, byte, 0) != 0x5E<8> l00002EF4
l00002EF4:
	Mem337[r7_104:byte] = SLICE(lr, byte, 0)
	r11_154 = r11_154 + 1<32>
	r5_137 = r5_137 + 1<32>
	r7_104 = r7_104 + 1<i32>
l00002EE0:
l00002EE8:
	r11_154 = r11_154 + 1<32>
	r12_139 = 4<32>
l0000307C:
	r9 = r10_151
l00002E92:
	r10_151 = r9


void fn00003094(word32 r4, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003094_entry:
l00003094:
	r6_19 = 0x00003098<p32> - Mem17[0x000030AE<p32>:word32]
	fn0000B95C(r4, r12, r6_19, r7, 8<32>, lr, out r9_50, out r11_51, out r12_28, out lr_52)
	r8_35 = Mem17[r6_19 + 8<i32>:word32]
	r9_36 = Mem17[r8_35 + -48<i32>:word32]
	Mem37[r12_28:word32] = r12
	Mem38[r8_35 + 80<i32>:word32] = r12_28
	Mem39[r12_28 + 4<i32>:word32] = r9_36
	return
fn00003094_exit:


word32 fn000030B4(word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000393C
//      fn00004458
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000030B4_entry:
l000030B4:
	r6_19 = 0x000030B8<p32> - Mem17[0x000030D2<p32>:word32]
	branch 0xFFFFFFFF<32> /u r11 >=u r12 l000030C8
l000030C4:
	r4 = fn00006CAC(r4, r5, r6_19, r7, lr, out r5, out r6_19, out r7, out r8_80, out r9_81, out r10_82, out r11, out r12, out lr)
l000030C8:
	fn0000B95C(r4, r5, r6_19, r7, r11 * r12, lr, out r9_78, out r11_79, out r12_54, out lr_50)
	lrOut = lr_50
	return r12_54
fn000030B4_exit:


word32 fn000030D8(word32 r4, word32 r5, word32 r7, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn000045F0
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000030D8_entry:
l000030D8:
	r6_19 = 0x000030DC<p32> - Mem17[0x0000311E<p32>:word32]
	r8_20 = Mem17[r6_19 + -56<i32>:word32]
	r10_22 = Mem17[r8_20 + r12 * 8<32>:word32]
	r12_24 = Mem17[r8_20 + (r12 << 3<8>) + 4<i32>:word32]
	branch r10_22 == 0<32> l00003114
l000030EE:
	branch r10_22 != 1<32> l00003102
l00003102:
	branch r10_22 == 2<32> l0000310A
l0000310A:
	call Mem17[r6_19 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r11:Mem17[r6_19 + 1164<i32>:word32],r12:r12_24,r4:r4,r5:r5,r6:r6_19,r7:r7,r9:r9_41
		defs: lr:lr_37,r11:r11_42,r8:r8_38,r9:r9_41,VNZC:VNZC_43
	r10_22 = CONVERT(SLICE(VNZC_43, bool, 1), bool, word32)
l00003106:
	r10_22 = 1<32>
l000030F2:
	r8_20 = CONVERT(Mem17[r12_24:byte], byte, word32)
	r9 = CONVERT(Mem17[Mem17[r6_19 + 1168<i32>:word32]:byte], byte, word32)
	r10_22 = CONVERT(SLICE(r8_20, byte, 0) != SLICE(r9, byte, 0), bool, word32)
l00003114:
	r9Out = r9
	r10Out = r10_22
	r11Out = r11
	r12Out = CONVERT(SLICE(r10_22, byte, 0), byte, word32)
	lrOut = lr
	return r8_20
fn000030D8_exit:


word32 fn00003120(word32 r0, word32 r1, word32 r2, word32 r5, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A44
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..7] r11:[0..31] r12:[0..31] r2:[0..31] r5:[0..31]
// LiveOut: lr r11
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003120_entry:
l00003120:
	r6_31 = 0x00003124<p32> - Mem29[0x00003166<p32>:word32]
	fn0000B95C(r12, r5, r6_31, r11, 0x10<32>, lr, out r9_161, out r11_155, out r12_44, out lr_148)
	branch r11 != 0<32> l0000313C
l0000313C:
	r0 = fn0000B994(r0, r1, r2, r12, r12_44, r6_31, r11, r11, lr_148, out r1, out r2, out r8_162, out r9_163, out r10_164, out r11_155, out r12_61, out lr_148)
l00003138:
	r12_61 = r11
l00003142:
	Mem72[r12_44 + 4<i32>:word32] = r12_61
	branch r12 != 0<32> l0000314C
l0000314C:
	fn0000B994(r0, r1, r2, r12, r12_44, r6_31, r11, r12, lr_148, out r1_165, out r2_166, out r8_167, out r9_168, out r10_169, out r11_155, out r12_101, out lr_148)
l00003148:
	r12_101 = r12
l00003152:
	r8_100 = Mem72[r6_31 + 8<i32>:word32]
	Mem103[r12_44:word32] = r12_101
	r9_104 = Mem103[r8_100 + -44<i32>:word32]
	Mem105[r8_100 + 84<i32>:word32] = r12_44
	Mem108[r12_44 + 8<i32>:byte] = SLICE(r10, byte, 0)
	Mem109[r12_44 + 12<i32>:word32] = r9_104
	lrOut = lr_148
	return r11_155
fn00003120_exit:


word32 fn00003168(word32 r0, word32 r1, word32 r4, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003168_entry:
l00003168:
	r6_31 = 0x0000316C<p32> - Mem29[0x00003196<p32>:word32]
	fn0000A778(r10, lr, out r9_126, out r10_41, out r11_42, out r12_43, out lr_39)
	call Mem29[r6_31 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_39,Mem:Mem29,r0:r0,r1:r1,r10:r10_41,r11:r11_42,r12:r12_43,r2:r12,r3:r11,r4:r4,r5:r12_43,r6:r6_31,r7:r7
		defs: lr:lr_60,r0:r0_52,r1:r1_53,r12:r12_61,r2:r2_54,r3:r3_55,r4:r4_56,r5:r5_57,r6:r6_58,r7:r7_59,sp:sp_51
	Mem69[sp_51 - 4<i32>:word32] = r5_57
	call Mem69[r6_58 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_60,Mem:Mem69,r0:r0_52,r1:r1_53,r10:r3_55,r11:Mem69[r12_61:word32],r12:0<32>,r2:r2_54,r3:r3_55,r4:r4_56,r5:r5_57,r6:r6_58,r7:r7_59
		defs: lr:lr_82,r10:r10_84,r11:r11_85,r2:r2_76
	r8_91 = fn000027D8(r2_76, out r9_92)
	r9Out = r9_92
	r10Out = r10_84
	r11Out = r11_85
	lrOut = lr_82
	return r8_91
fn00003168_exit:


word32 fn00003198(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003904
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003198_entry:
l00003198:
	r6_19 = 0x0000319C<p32> - Mem17[0x0000320E<p32>:word32]
	branch r12 == 0<32> l000031EE
l000031EE:
	call Mem31[r6_19 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem31,r0:r0,r1:r1,r10:r10,r11:r11,r12:Mem17[r6_19 + 1160<i32>:word32],r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_19,r7:r10,Stack +0000:r10,Stack +0004:r11
		defs: lr:lr_37,r0:r0_182,r1:r1_183,r12:r12_38,r2:r2_184,r3:r3_185,r6:r6_35,r7:r7_36
	r10_149 = r7_36
l000031A6:
	call Mem17[r6_19 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_52,Mem:Mem17,r0:r0,r1:r1,r10:fn00006AA8(r0, r1, r2, r3, r4, r12, r6_19, r10, 0<32>, r12, lr, out r11_217, out r12_55, out lr_52),r11:Mem17[Mem17[r6_19 + 40<i32>:word32]:word32],r12:r12,r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_19,r7:max<int32>(r10 + r12_55, 0<32>),r8:0<32>
		defs: lr:lr_74,r0:r0_80,r1:r1_81,r10:r10_76,r11:r11_77,r2:r2_82,r3:r3_83,r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73
	call Mem17[r6_72 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_74,Mem:Mem17,r0:r0_80,r1:r1_81,r10:r10_76,r11:r11_77,r12:r5_71,r2:r2_82,r3:r3_83,r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73
		defs: lr:lr_91,r0:r0_97,r1:r1_98,r10:r10_93,r12:r12_92,r2:r2_99,r3:r3_100,r6:r6_89,r7:r7_90
	r5_102 = r7_115
	r4_103 = r12_129
l000031C8:
	r11_107 = Mem105[Mem105[r6_104 + -64<i32>:word32]:word32]
	r9_108 = Mem105[r11_107 + 16<i32>:word32]
	branch r9_108 >=u Mem105[r11_107 + 28<i32>:word32] l000031DC
l000031DC:
	call Mem105[r6_104 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_116,Mem:Mem105,r0:r0_118,r1:r1_119,r10:r10_117,r11:r11_107,r12:0x20<32>,r2:r2_120,r3:r3_121,r4:r4_113,r5:r5_114,r6:r6_104,r7:r7_115
		defs: lr:lr_128,r0:r0_134,r1:r1_135,r10:r10_130,r12:r12_129,r2:r2_136,r3:r3_137,r4:r4_124,r5:r5_125,r6:r6_126,r7:r7_127
l000031D4:
	Mem140[r9_108:byte] = 0x20<8>
	Mem142[r11_107 + 16<i32>:word32] = r9_108 + 1<i32>
l000031E2:
	r7_115 = r7_115 - 1<32>
	branch r7_115 != 0xFFFFFFFF<32> l000031C8
l000031E8:
	r10_149 = r5_102 + r4_103
l000031FE:
	r9_155 = Mem153[r6_104 + 8<i32>:word32]
	Mem161[r9_155 + 76<i32>:word32] = Mem153[r9_155 + -52<i32>:word32] + 1<32> + r10_149
	r1Out = r1_119
	r2Out = r2_120
	r3Out = r3_100
	r12Out = r12_129
	lrOut = lr_116
	return r0_118
fn00003198_exit:


word32 fn00003210(word32 r4, word32 r5, word32 r7, word32 r10, word32 r11, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004458
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003210_entry:
l00003210:
	r6_19 = 0x00003214<p32> - Mem17[0x00003232<p32>:word32]
	branch 0xFFFFFFFF<32> /u r10 >=u r11 l00003224
l00003220:
	r4 = fn00006CAC(r4, r5, r6_19, r7, lr, out r5, out r6_19, out r7, out r8_78, out r9_79, out r10, out r11, out r12_80, out lr)
l00003224:
	fn0000B904(r4, r5, r6_19, r7, r10 * r11, lr, out r12_54, out lr_50)
	lrOut = lr_50
	return r12_54
fn00003210_exit:


void fn00003234(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003234_entry:
l00003234:
	r6_31 = 0x00003238<p32> - Mem29[0x00003276<p32>:word32]
	call Mem29[r6_31 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r10:r10,r11:0x2E<32>,r12:Mem29[r12:word32],r2:r2,r3:r12,r4:r10,r5:r5,r6:r6_31,r7:r11,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_50,r0:r0_42,r1:r1_43,r10:r10_53,r12:r12_51,r2:r2_44,r3:r3_45,r4:r4_46,r6:r6_48,r7:r7_49
	call Mem29[r6_48 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,Mem:Mem29,r0:r0_42,r1:r1_43,r10:r10_53,r11:0x2E<32>,r12:Mem29[r7_49:word32],r2:r2_44,r3:r3_45,r4:r4_46,r5:r12_51,r6:r6_48,r7:r7_49
		defs: lr:lr_68,r0:r0_60,r1:r1_61,r10:r10_71,r11:r11_70,r12:r12_69,r2:r2_62,r3:r3_63,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
	r8_74 = Mem29[r6_66 + 224<i32>:word32]
	branch r12_124 == 0<32> l0000325C
l00003258_1:
	r11_130 = r12_124
l0000325C:
	branch r12_124 != 0<32> l00003260
l0000325C_1:
	r11_130 = r8_74
l00003260:
	branch r5_65 == 0<32> l00003266
l00003262_1:
	r12_124 = r5_65
l00003266:
	branch r5_65 != 0<32> l0000326A
l00003266_1:
	r12_124 = r8_74
l0000326A:
	call r4_64 (retsize: 0;)
		uses: lr:lr_68,Mem:Mem29,r0:r0_60,r1:r1_61,r10:r10_71,r11:r11_130,r12:r12_124,r2:r2_62,r3:r3_63,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
		defs: lr:lr_153,r0:r0_145,r1:r1_146,r10:r10_156,r2:r2_147,r3:r3_148,r4:r4_149,r5:r5_150,r6:r6_151,r7:r7_152,VNZC:VNZC_158
	branch SLICE(VNZC_158, bool, 1) l00003274
l0000326E:
	call r4_149 (retsize: 0;)
		uses: lr:lr_153,Mem:Mem29,r0:r0_145,r1:r1_146,r10:r10_156,r11:Mem29[r7_152:word32],r12:Mem29[r3_148:word32],r2:r2_147,r3:r3_148,r4:r4_149,r5:r5_150,r6:r6_151,r7:r7_152
l00003274:
	return
fn00003234_exit:


word32 fn000032D0(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000330C
//      fn00003334
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000032D0_entry:
l000032D0:
	r6_20 = 0x000032D6<p32> - Mem17[0x00003304<p32>:word32]
	branch r12 == 0<32> l000032EC
l000032EC:
	call Mem30[r6_20 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem30,r0:r0,r1:r1,r11:Mem17[r6_20 + 1156<i32>:word32],r12:fp - 0x20<32>,r2:r2,r3:r3,r4:r4,r5:fp - 0x20<32>,r6:r6_20,r7:r7,Stack +0000:r11
		defs: lr:lr_36,r0:r0_86,r1:r1_87,r11:r11_37,r2:r2_88,r3:r3_89,r4:r4_32,r5:r5_33,r6:r6_34,r7:r7_35
	call Mem30[r6_34 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_36,Mem:Mem30,r0:r0_86,r1:r1_87,r11:r11_37,r12:r5_33,r2:r2_88,r3:r3_89,r4:r4_32,r5:r5_33,r6:r6_34,r7:r7_35
		defs: lr:lr_47,r0:r0_92,r1:r1_93,r10:r10_96,r11:r11_48,r12:r12_50,r2:r2_94,r3:r3_95
l000032DE:
	r10_103 = fn00006AA8(r0, r1, r2, r3, r4, r5, r6_20, r7, 0<32>, r12, lr, out r11_104, out r12_62, out lr_47)
	r12_105 = max<int32>(r12_62, 0<32>)
l00003302:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r10Out = r10_103
	r11Out = r11_104
	r12Out = r12_105
	lrOut = lr_47
	return r0
fn000032D0_exit:


word32 fn0000330C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000330C_entry:
l0000330C:
	branch Mem17[Mem17[0x00003310<p32> - Mem17[0x0000332E<p32>:word32] + 8<i32>:word32] + 88<i32>:byte] == 0<8> l00003326
l00003326:
	r12_27 = fn00009B5C(r5, r12, r12, lr)
l00003322:
	r12_27 = 0<32>
l0000332A:
	r0_50 = fn000032D0(r0, r1, r2, r3, r4, r5, r12, r12, r12_27, lr, out r1_51, out r2_55, out r3_56, out r10_52, out r11_53, out r12_54, out lr_49)
	r1Out = r1_51
	r2Out = r2_55
	r3Out = r3_56
	r10Out = r10_52
	r11Out = r11_53
	r12Out = r12_54
	lrOut = lr_49
	return r0_50
fn0000330C_exit:


word64 fn00003334(word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 lr, word32 dwArg00, ptr32 & r11_r10Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31]
// LiveOut: lr r1:r0 r11:r10 r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00003334_entry:
l00003334:
	r7_30 = fp - 36<i32>
	r6_33 = 0x0000333E<p32> - Mem29[0x00003468<p32>:word32]
	r0_116 = r10
	r5_40 = r11
	r2_120 = r8
	r3_122 = r9
	r1_118 = dwArg00
	branch r10 == 0<32> l00003370
l00003356:
	branch r9 == SLICE(cond(r8 - 0<32>), bool, 0) l00003370
l0000335C:
	call Mem36[r6_33 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem36,r0:r10,r1:dwArg00,r10:0xA20<32>,r11:Mem36[r6_33 + 220<i32>:word32],r12:Mem36[r6_33 + 1152<i32>:word32],r2:r8,r3:r9,r4:r4,r5:r11,r6:r6_33,r7:fp - 36<i32>,r8:r8,r9:0x000065AC<p32>,Stack +02D4:dwArg00
		defs: lr:lr_66,r0:r0_58,r1:r1_59,r2:r2_60,r3:r3_61,r4:r4_62,r5:r5_63,r6:r6_64,r7:r7_65
l00003370:
	r10_75 = Mem36[r6_33 + 8<i32>:word32]
	r11_76 = Mem36[r10_75 + 12<i32>:word32]
	branch r11_76 != Mem36[r10_75 + -36<i32>:word32] l0000338E
l0000337A:
	r12_90 = fn00003210(r4, r5_40, r7_30, 0xF8<32>, r11_76, lr, out lr)
	r9_97 = Mem36[r6_33 + 8<i32>:word32]
	r8_98 = Mem36[r9_97 + -36<i32>:word32]
	Mem99[r9_97 + 20<i32>:word32] = r12_90
	Mem102[r9_97 + 92<i32>:word32] = r8_98 << 1<i32>
l0000338E:
	r10_105 = Mem104[r6_33 + 8<i32>:word32]
	r8_107 = Mem104[r10_105 + 12<i32>:word32]
	r4_111 = Mem104[r10_105 + 20<i32>:word32] + r8_107 * 0x84<32>
	call Mem104[r6_33 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,Mem:Mem104,r0:r0_116,r1:r1_118,r10:0x7C<32>,r11:0<32>,r12:r4_111,r2:r2_120,r3:r3_122,r4:r4_111,r5:r5_83,r6:r6_73,r7:r7_84,r8:r8_107,r9:r8_107 * 0x21<32>
		defs: lr:lr_137,r0:r0_129,r1:r1_130,r10:r10_139,r11:r11_140,r4:r4_133,r5:r5_134,r6:r6_135,r7:r7_136,Sequence r3:r2:r3_r2_1833
	Mem146[r4_1004 + 96<i32>:word64] = r3_r2_1833
	Mem147[r4_1004 + 104<i32>:word32] = r5_134
	r3_1088 = SLICE(r3_r2_1833, word32, 32) (alias)
	r2_1002 = SLICE(r3_r2_1833, word32, 0) (alias)
	branch r0_1017 != 0<32> l0000344A
l000033B4:
	r9_150 = Mem147[r6_1023 + 8<i32>:word32]
	r10_1095 = CONVERT(Mem147[r9_150 + 96<i32>:byte], byte, word32)
	branch SLICE(r10_1095, byte, 0) != SLICE(r0_1017, byte, 0) l0000344A
l000033C0:
	branch r5_134 != 3<32> l000033CE
l000033C4:
	branch Mem147[r9_150 + 97<i32>:byte] != SLICE(r10_1095, byte, 0) l0000344A
l000033CE:
	r8_161 = Mem147[r6_1023 + 8<i32>:word32]
	r11_140 = CONVERT(Mem147[r8_161 + 98<i32>:byte], byte, word32)
	branch r11_140 != 0<32> l000033E2
l000033D8:
	branch Mem147[r8_161 + 99<i32>:byte] == SLICE(r10_1095, byte, 0) l00003412
l000033E2:
	branch r5_134 == 6<32> l000033EA
l000033E6:
	branch r5_134 != 0<32> l00003408
l000033EA:
	r9_179 = Mem147[r6_1023 + 8<i32>:word32]
	branch Mem147[r9_179 + -28<i32>:word32] == 5<32> l0000344A
l000033F2:
	r9_183 = CONVERT(Mem147[r9_179 + 104<i32>:byte], byte, word32)
	branch SLICE(r9_183, byte, 0) != SLICE(r10_1095, byte, 0) l0000344A
l000033FC:
	r10_1095 = Mem147[r6_1023 + 8<i32>:word32]
	branch Mem147[r10_1095 + 105<i32>:byte] != SLICE(r9_183, byte, 0) l0000344A
l00003408:
	branch r11_140 == 0<32> l00003412
l0000340C:
	branch r3_1088 == SLICE(cond(r2_1002 - 0<32>), bool, 0) l0000344A
l00003412:
	r9_213 = Mem147[r6_1023 + 8<i32>:word32]
	r3_1088 = 0<32>
	branch Mem147[r9_213 + 99<i32>:byte] == 0<8> l000038B0
l00003422:
	branch r5_134 == 0<32> l0000344A
l00003426:
	branch r5_134 != 5<32> l000038B0
l0000342C:
	branch Mem147[r9_213 + 24<i32>:word32] == 3<32> l0000344A
l00003432:
	branch Mem147[r9_213 + 97<i32>:byte] == 0<8> l000038B0
l0000343E:
	fn000030D8(r4_1004, r5_134, r7_1024, 0xE<32>, lr_1093, out r9_1841, out r10_1095, out r11_140, out r12_248, out lr_1093)
	branch SLICE(r12_248, byte, 0) == 0<8> l000038B0
l000038B0:
	r0_1154 = 0<32>
	r1_1170 = 0<32>
l0000344A:
	r9_264 = CONVERT(Mem147[Mem147[r7_1024 + -680<i32>:word32]:byte], byte, word32)
	branch SLICE(r9_264, byte, 0) == 0x2F<8> l00003466
l00003458:
	r10_1095 = CONVERT(Mem147[r1_130:byte], byte, word32)
	Mem276[r7_1024 + -685<i32>:byte] = SLICE(r10_1095, byte, 0)
	r3_1088 = 0<32>
	branch SLICE(r10_1095, byte, 0) != 0<8> l00003470
l00003470:
	call Mem276[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_291,Mem:Mem276,r0:r0_129,r1:r1_130,r10:r10_274,r11:r11_292,r12:Mem276[r7_136 + -680<i32>:word32],r2:r2_131,r3:0<32>,r4:r4_133,r5:r5_134,r6:r6_135,r7:r7_136,r8:0x2F<32>,r9:r9_264
		defs: lr:lr_309,r0:r0_301,r1:r1_302,r10:r10_311,r11:r11_312,r12:r12_310,r2:r2_303,r3:r3_304,r4:r4_305,r6:r6_307,r7:r7_308,r8:r8_313,r9:r9_314
	call Mem276[r6_307 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_309,Mem:Mem276,r0:r0_301,r1:r1_302,r10:r10_311,r11:r11_312,r12:r1_302,r2:r2_303,r3:r3_304,r4:r4_305,r5:r12_310,r6:r6_307,r7:r7_308,r8:r8_313,r9:r9_314
		defs: lr:lr_328,r0:r0_320,r1:r1_321,r12:r12_329,r3:r3_323,r4:r4_324,r5:r5_325,r6:r6_326,r7:r7_327,sp:sp_319
	sp_341 = sp_319 + ((r5_325 + r12_329) + 8<32> & 0xFFFFFFFC<32>)
	r2_1002 = sp_341
	branch Mem276[r7_1024 + -685<i32>:byte] != 0x2E<8> l000034AA
l00003498:
	branch Mem276[r1_130 + 1<i32>:byte] != SLICE(r3_1088, byte, 0) l000034AA
l000034AA:
	r10_1095 = sp_341
	r8_351 = r1_130
l000034AE:
	r9_354 = CONVERT(Mem353[r8_351:byte], byte, word32)
	branch r9_354 != 0<32> l000034A4
l000034A4:
	Mem360[r10_1095:byte] = SLICE(r9_354, byte, 0)
	r8_351 = r8_351 + 1<32>
	r10_1095 = r10_1095 + 1<i32>
l000034B4:
	branch r8_351 <=u r1_130 l000034C8
l000034BA:
	branch Mem353[r8_351 + -1<i32>:byte] == 0x2F<8> l000034C8
l000034C6:
	Mem369[r10_1095:byte] = 0x2F<8>
	r10_1095 = r10_1095 + 1<i32>
l000034A0:
	r10_1095 = sp_341
l000034C8:
	r9_264 = Mem375[r7_1024 + -680<i32>:word32]
l000034D0:
	r8_379 = CONVERT(Mem378[r9_264:byte], byte, word32)
	r9_264 = r9_264 + 1<32>
	branch r8_379 != 0<32> l000034CE
l000034CE:
	Mem384[r10_1095:byte] = SLICE(r8_379, byte, 0)
	r10_1095 = r10_1095 + 1<i32>
l000034D8:
	Mem386[r10_1095:byte] = SLICE(r8_379, byte, 0)
l00003466:
	r2_1002 = Mem388[r7_1024 + -680<i32>:word32]
l000034DA:
	r5_1758 = Mem396[r6_1023 + 8<i32>:word32]
	r8_398 = Mem396[r5_1758 + -28<i32>:word32]
	branch r8_398 <u 3<32> l0000352E
l000034E2:
	branch r8_398 <=u 4<32> l000034F8
l000034F8:
	branch r0_1017 == 0<32> l0000352E
l000034FC:
	call Mem396[r6_1023 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_437,Mem:Mem396,r0:r0_403,r1:r1_424,r10:r10_443,r11:r4_411 + 8<32>,r12:r2_419,r2:r2_419,r3:r3_428,r4:r4_411,r5:r5_397,r6:r6_390,r7:r7_435,r8:r8_398,r9:r9_448
		defs: lr:lr_465,r0:r0_457,r10:r10_467,r11:r11_468,r12:r12_466,r2:r2_459,r3:r3_460,r4:r4_461,r5:r5_462,r6:r6_463,r7:r7_464,r9:r9_470,sp:sp_456
	r8_473 = Mem396[r5_1758 + -28<i32>:word32]
	r1_130 = r12_466
	branch r8_473 == 3<32> l0000353A
l0000350E:
	branch r12_466 >= 0<32> l0000351E
l0000351E:
	r8_398 = CONVERT((Mem396[r4_1004 + 24<i32>:word32] & 0xF000<32>) != 0x4000<32>, bool, word32)
l00003512:
	call Mem396[r6_1023 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_465,Mem:Mem396,r0:r0_457,r1:r12_466,r10:r10_467,r11:r11_468,r12:r12_466,r2:r2_459,r3:r3_460,r4:r4_461,r5:r5_462,r6:r6_463,r7:r7_464,r8:r8_473,r9:r9_470
		defs: lr:lr_493,r0:r0_485,r1:r1_486,r10:r10_495,r11:r11_496,r12:r12_494,r2:r2_487,r3:r3_488,r4:r4_489,r5:r5_490,r6:r6_491,r7:r7_492,r9:r9_498,sp:sp_484
	r8_398 = CONVERT(Mem396[r12_466:word32] == 2<32>, bool, word32)
l0000352A:
	branch r8_398 == 0<32> l0000353A
l000034E8:
	branch r8_398 != 5<32> l0000352E
l0000352E:
	call Mem396[r6_1023 + 484<i32>:word32] (retsize: 0;)
		uses: lr:lr_531,Mem:Mem396,r0:r0_521,r1:r1_523,r10:r10_533,r11:r4_510 + 8<32>,r12:r2_514,r2:r2_514,r3:r3_525,r4:r4_510,r5:r5_527,r6:r6_517,r7:r7_529,r8:r8_535,r9:r9_536
		defs: lr:lr_549,r0:r0_541,r10:r10_551,r11:r11_552,r12:r12_550,r2:r2_543,r3:r3_544,r4:r4_545,r5:r5_546,r6:r6_547,r7:r7_548,sp:sp_540
l000034EC:
	call Mem396[r6_1023 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_437,Mem:Mem396,r0:r0_403,r1:r1_424,r10:r10_443,r11:r4_411 + 8<32>,r12:r2_419,r2:r2_419,r3:r3_428,r4:r4_411,r5:r5_397,r6:r6_390,r7:r7_435,r8:r8_398,r9:r9_448
		defs: lr:lr_569,r0:r0_561,r10:r10_571,r11:r11_572,r12:r12_570,r2:r2_563,r3:r3_564,r4:r4_565,r5:r5_566,r6:r6_567,r7:r7_568,sp:sp_560
l00003538:
	r1_130 = r12_466
l0000353A:
	branch r1_130 == 0<32> l00003566
l00003566:
	r9_586 = Mem396[r6_1023 + 8<i32>:word32]
	Mem590[r4_1004 + 116<i32>:byte] = 1<8>
	r5_1022 = Mem590[r9_586 + -20<i32>:word32]
	branch r5_1022 == 0<32> l0000357E
l00003574:
	r9_586 = CONVERT(Mem590[r9_586 + 112<i32>:byte], byte, word32)
	branch SLICE(r9_586, byte, 0) == SLICE(r1_130, byte, 0) l000035F2
l0000357E:
	call Mem590[r6_1023 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_615,Mem:Mem590,r0:r0_600,r1:r1_579,r10:r10_621,r11:r11_624,r12:r12_618,r2:r2_604,r3:r3_607,r4:r4_588,r5:r5_591,r6:r6_582,r7:r7_612,r8:1<32>,r9:r9_628
		defs: lr:lr_641,r0:r0_633,r1:r1_634,r10:r10_643,r11:r11_644,r12:r12_642,r2:r2_635,r3:r3_636,r4:r4_637,r5:r5_638,r6:r6_639,r7:r7_640,r9:r9_646
	Mem650[r12_642:word32] = 0x5F<32>
	r8_651 = Mem650[r6_639 + 48<i32>:word32]
	Mem652[r4_637 + 112<i32>:word32] = r8_651
	call Mem652[r6_639 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_641,Mem:Mem652,r0:r0_633,r1:r1_634,r10:r10_643,r11:r11_644,r12:r12_642,r2:r2_635,r3:r3_636,r4:r4_637,r5:r5_638,r6:r6_639,r7:r7_640,r8:r8_651,r9:r9_646
		defs: lr:lr_662,r0:r0_654,r1:r1_655,r11:r11_665,r12:r12_663,r2:r2_656,r4:r4_658,r5:r5_659,r6:r6_660,r7:r7_661,sp:sp_653
	r8_670 = Mem652[r12_663:word32]
	r3_1088 = r12_663
	branch r8_670 == 0x5F<32> l000035A2
l0000359A:
	branch r8_670 != 0x3D<32> l000038EE
l000038EE:
	r1_130 = 1<32>
l000035A2:
	branch r5_1022 != 0<32> l000035C0
l000035A6:
	r12_685 = fn000066CC()
	r11_1096 = r4_1004 + 8<32>
	r1_130 = r12_685 >>u 0x1F<32>
	branch r12_685 <= 0<32> l000035C0
l000035C0:
	r8_693 = 0<32>
l000035BA:
	r8_693 = 2<32>
l000035C2:
	r10_1095 = Mem652[r6_1023 + 8<i32>:word32]
	Mem705[r4_1004 + 120<i32>:word32] = r8_693
	Mem714[r10_1095 + 28<i32>:byte] = CONVERT((CONVERT(r8_693 != 0<32>, bool, word32) | CONVERT(Mem705[r10_1095 + 28<i32>:byte], byte, word32)) != 0<32>, bool, byte)
	branch r1_130 == 0<32> l000035F2
l000035DC:
	r8_731 = fn0000A778(r2_1002, lr_1093, out r9_732, out r10_1851, out r11_1852, out r12_730, out lr_726)
	r10_737 = Mem714[r6_1023 + 1144<i32>:word32]
	Mem742[sp_1084 - 4<i32>:word32] = r12_730
	call Mem742[r6_1023 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_726,Mem:Mem742,r0:r0_654,r1:r1_715,r10:r10_737,r11:Mem742[r12_663:word32],r12:0<32>,r2:r2_656,r3:r12_663,r4:r4_658,r5:r5_659,r6:r6_660,r7:r7_661,r8:r8_731,r9:r9_732
		defs: lr:lr_765,r0:r0_757,r1:r1_758,r10:r10_767,r11:r11_768,r2:r2_759,r3:r3_760,r4:r4_761,r5:r5_762,r6:r6_763,r7:r7_764,sp:sp_756
	sp_1084 = sp_756 + 4<32>
l000035F2:
	branch (Mem776[r4_1004 + 24<i32>:word32] & 0xF000<32>) != 0xA000<32> l000036CE
l000035FE:
	r9_782 = Mem776[r6_1023 + 8<i32>:word32]
	branch Mem776[r9_782 + -20<i32>:word32] == 0<32> l00003612
l00003606:
	branch Mem776[r9_782 + 105<i32>:byte] == 0<8> l000036CE
l00003612:
	Z_814 = fn000066D0(r1_130, r2_1002, r3_1088, r4_1004, r5_1022, r7_1024, Mem776[r4_1004 + 56<i32>:word32], r2_1002, lr_1093, out r8_1010, out r9_1011, out r10_1009, out r11_1028, out r12_811, out lr_1007)
	Mem816[r4_1004 + 4<i32>:word32] = r12_811
	branch Z_814 l0000362C
l0000361E:
	r8_1010 = fn00003168(r0_1017, r1_130, r4_1004, r7_1024, r2_1002, Mem816[r6_1023 + 1140<i32>:word32], CONVERT(r0_1017 != 0<32>, bool, word32), lr_1007, out r9_1011, out r10_1009, out r11_1028, out lr_1007)
l0000362C:
	r1_1000 = Mem816[r4_1004 + 4<i32>:word32]
	branch r1_1000 != 0<32> l00003636
l00003636:
	r9_841 = CONVERT(Mem816[r1_1000:byte], byte, word32)
	branch SLICE(r9_841, byte, 0) == 0x2F<8> l0000364A
l00003640:
	call Mem816[r6_1023 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr_853,Mem:Mem816,r0:r0_820,r1:r1_838,r10:r10_854,r11:0x2F<32>,r12:r2_794,r2:r2_794,r3:r3_799,r4:r4_775,r5:r5_801,r6:r6_781,r7:r7_803,r8:0x2F<32>,r9:r9_841
		defs: lr:lr_867,r0:r0_859,r1:r1_860,r10:r10_869,r11:r11_870,r12:r12_868,r2:r2_861,r3:r3_862,r4:r4_863,r5:r5_864,r6:r6_865,r7:r7_866,r8:r8_871,r9:r9_872,VNZC:VNZC_874
	branch SLICE(VNZC_874, bool, 1) l00003654
l00003654:
	call Mem816[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_867,Mem:Mem816,r0:r0_859,r1:r1_860,r10:r10_869,r11:r11_870,r12:r1_860,r2:r2_861,r3:r3_862,r4:r4_863,r5:r12_868 + 1<32>,r6:r6_865,r7:r7_866,r8:r8_871,r9:r9_872
		defs: lr:lr_888,r0:r0_880,r1:r1_881,r12:r12_889,r2:r2_882,r4:r4_884,r5:r5_885,r6:r6_886,r7:r7_887
	r5_896 = r5_885 + r2_882
	call Mem816[r6_886 + 496<i32>:word32] (retsize: 0;)
		uses: lr:lr_900,Mem:Mem816,r0:r0_880,r1:r1_881,r10:r5_896,r11:r2_882,r12:r12_904,r2:r2_882,r3:r12_904,r4:r4_884,r5:r5_896,r6:r6_886,r7:r7_887,r8:fn0000B95C(r4_884, r5_896, r6_886, r7_887, r12_889 + 1<32> + r5_896, lr_888, out r9_906, out r11_1853, out r12_904, out lr_900),r9:r9_906
		defs: lr:lr_923,r0:r0_915,r1:r1_916,r10:r10_925,r2:r2_917,r3:r3_918,r4:r4_919,r5:r5_920,r6:r6_921,r7:r7_922,r8:r8_927,r9:r9_928
	call Mem816[r6_921 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_923,Mem:Mem816,r0:r0_915,r1:r1_916,r10:r10_925,r11:r1_916,r12:r3_918 + r5_920,r2:r2_917,r3:r3_918,r4:r4_919,r5:r5_920,r6:r6_921,r7:r7_922,r8:r8_927,r9:r9_928
		defs: lr:lr_943,r0:r0_935,r1:r1_936,r10:r10_945,r11:r11_946,r2:r2_937,r3:r3_938,r4:r4_939,r5:r5_940,r6:r6_941,r7:r7_942,r8:r8_947,r9:r9_948
l0000364A:
	r0_1017 = fn0000B994(r0_1017, r1_1000, r2_1002, r4_1004, r5_1022, r6_1023, r7_1024, r1_1000, lr_1007, out r1_1000, out r2_1002, out r8_1010, out r9_1011, out r10_1009, out r11_1028, out r12_966, out lr_1007)
	r3_1020 = r12_966
l0000367C:
	branch r3_1020 == 0<32> l000036C8
l00003680:
	r5_1022 = Mem816[r6_1023 + 8<i32>:word32]
	r8_1010 = Mem816[r5_1022 + 24<i32>:word32]
	branch r8_1010 >u 1<32> l00003696
l0000368A:
	r9_1011 = CONVERT(Mem816[r5_1022 + 105<i32>:byte], byte, word32)
	r8_1010 = 0<32>
	branch SLICE(r9_1011, byte, 0) == 0<8> l000036C8
l00003696:
	call Mem816[r6_1023 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_1007,Mem:Mem816,r0:r0_998,r1:r1_1000,r10:r10_1009,r11:r7_990 - 0x2A4<32>,r12:r3_975,r2:r2_1002,r3:r3_975,r4:r4_1004,r5:r5_981,r6:r6_978,r7:r7_990,r8:r8_1010,r9:r9_1011
		defs: lr:lr_1025,r0:r0_1017,r1:r1_1018,r10:r10_1027,r11:r11_1028,r2:r2_1019,r3:r3_1020,r4:r4_1021,r5:r5_1022,r6:r6_1023,r7:r7_1024,r8:r8_1029,r9:r9_1030,VNZC:VNZC_1032
	branch SLICE(VNZC_1032, bool, 1) l000036C8
l000036A2:
	Mem1035[r4_1004 + 117<i32>:byte] = 1<8>
	branch r0_1017 == 0<32> l000036C0
l000036AC:
	branch Mem1035[r5_1022 + -20<i32>:word32] == 0<32> l000036C0
l000036B2:
	r8_1041 = Mem1035[r7_1024 + -660<i32>:word32]
	r8_1010 = r8_1041 & 0xF000<32>
	branch (r8_1041 & 0xF000<32>) == 0x4000<32> l000036C8
l000036C0:
	r8_1010 = Mem1035[r7_1024 + -660<i32>:word32]
	Mem1049[r4_1004 + 108<i32>:word32] = r8_1010
l00003632:
	r3_1020 = r1_1000
l000036C8:
	call Mem1056[r6_1023 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1068,Mem:Mem1056,r0:r0_1057,r1:r1_1059,r10:r10_1070,r11:r11_1072,r12:r3_1051,r2:r2_1061,r3:r3_1051,r4:r4_1063,r5:r5_1064,r6:r6_1054,r7:r7_1067,r8:r8_1076,r9:r9_1079
		defs: lr:lr_1093,r0:r0_1085,r10:r10_1095,r11:r11_1096,r2:r2_1087,r3:r3_1088,r4:r4_1089,r6:r6_1091,r7:r7_1092,sp:sp_1084
l000036CE:
	branch (Mem1102[r4_1004 + 24<i32>:word32] & 0xF000<32>) != 0xA000<32> l000036EE
l000036DA:
	branch Mem1102[Mem1102[r6_1023 + 8<i32>:word32] + 105<i32>:byte] != 0<8> l000036EE
l000036E8:
	Mem1114[r4_1004 + 117<i32>:byte] = 1<8>
l000036EE:
	r8_1117 = Mem1116[r4_1004 + 24<i32>:word32]
	branch (r8_1117 & 0xF000<32>) != 0xA000<32> l00003700
l00003700:
	branch (r8_1117 & 0xF000<32>) != 0x4000<32> l0000371E
l0000371E:
	r8_1123 = 5<32>
l00003706:
	branch (r0_1017 & (CONVERT(Mem1116[Mem1116[r6_1023 + 8<i32>:word32] + 113<i32>:byte], byte, word32) ^ 0x10000<32>)) == 0<32> l0000371A
l0000371A:
	r8_1123 = 3<32>
l00003716:
	r8_1123 = 9<32>
l000036FA:
	r8_1123 = 6<32>
l00003720:
	r5_1138 = Mem1116[r6_1023 + 8<i32>:word32]
	Mem1141[r4_1004 + 104<i32>:word32] = r8_1123
	r1_r0_1143 = Mem1141[r4_1004 + 64<i32>:word64]
	r0_1154 = SLICE(r1_r0_1143, word32, 0) (alias)
	r1_1170 = SLICE(r1_r0_1143, word32, 32) (alias)
	branch Mem1141[r5_1138 + -20<i32>:word32] == 0<32> l0000373C
l00003730:
	branch Mem1141[r5_1138 + 114<i32>:byte] == 0<8> l00003768
l0000373C:
	sp_1160 = sp_1084 - 8<i32>
	Mem1163[sp_1160:word64] = Mem1141[r5_1138 + 120<i32>:word64]
	Mem1168[sp_1160 - 8<i32>:word64] = 0x200<64>
	r0_1154 = fn000093B8(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1138, Mem1168[r5_1138 + -12<i32>:word32], r7_1024 - 0x2A4<32>, Mem1168[sp_1160 - 8<i32>:word64], Mem1168[sp_1160:word64], Mem1168[sp_1160 + 8<i32>:word32], Mem1168[sp_1160 + 12<i32>:word32], Mem1168[sp_1160 + 16<i32>:word64], Mem1168[sp_1160 + 28<i32>:word32], Mem1168[sp_1160 + 32<i32>:word32], Mem1168[sp_1160 + 48<i32>:word32], Mem1168[sp_1160 + 52<i32>:word32], Mem1168[sp_1160 + 56<i32>:word32], out r1_1170, out r2_1002, out r3_1088, out r4_1004, out r5_1198, out r6_1023, out r7_1024, out r10_1859, out r11_1860, out r12_1194, out lr_1188)
	r10_1095 = fn00006AA8(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1198, r6_1023, r7_1024, 0<32>, r12_1194, lr_1188, out r11_1096, out r12_1211, out lr_1093)
	branch Mem1168[r5_1198 + 36<i32>:word32] >= r12_1211 l00003768
l00003766:
	Mem1222[r5_1198 + -28<i32>:word32] = r12_1211
l00003768:
	r5_1225 = Mem1224[r6_1023 + 8<i32>:word32]
	r8_1226 = Mem1224[r5_1225 + -20<i32>:word32]
	branch r8_1226 != 0<32> l000037DA
l00003770:
	branch Mem1224[Mem1224[r6_1023 + 48<i32>:word32] + 2<i32>:byte] == SLICE(r8_1226, byte, 0) l00003788
l0000377A:
	r0_1154 = fn0000330C(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1225, Mem1224[r4_1004 + 32<i32>:word32], lr_1093, out r1_1170, out r2_1002, out r3_1088, out r10_1095, out r11_1096, out r12_1248, out lr_1093)
	branch Mem1224[r5_1225 + 44<i32>:word32] >= r12_1248 l00003788
l00003786:
	Mem1260[r5_1225 + -20<i32>:word32] = r12_1248
l00003788:
	branch Mem1262[Mem1262[r6_1023 + 48<i32>:word32] + 3<i32>:byte] == 0<8> l000037BE
l00003794:
	r5_1270 = Mem1262[r4_1004 + 36<i32>:word32]
	branch Mem1262[Mem1262[r6_1023 + 8<i32>:word32] + 88<i32>:byte] == 0<8> l000037A8
l000037A8:
	r12_1278 = fn00009A5C(r5_1270, r7_1024, r5_1270, lr_1093)
l000037A2:
	r12_1278 = 0<32>
l000037AE:
	r0_1154 = fn000032D0(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1270, r7_1024, r5_1270, r12_1278, lr_1093, out r1_1170, out r2_1002, out r3_1088, out r10_1095, out r11_1096, out r12_1305, out lr_1093)
	r9_1316 = Mem1262[r6_1023 + 8<i32>:word32]
	branch Mem1262[r9_1316 + 48<i32>:word32] >= r12_1305 l000037BE
l000037BC:
	Mem1320[r9_1316 + -16<i32>:word32] = r12_1305
l000037BE:
	r5_1323 = Mem1322[r6_1023 + 8<i32>:word32]
	branch Mem1322[r5_1323 + 128<i32>:byte] == 0<8> l000037DA
l000037CC:
	r0_1154 = fn0000330C(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1323, Mem1322[r4_1004 + 32<i32>:word32], lr_1093, out r1_1170, out r2_1002, out r3_1088, out r10_1095, out r11_1096, out r12_1340, out lr_1093)
	branch Mem1322[r5_1323 + 52<i32>:word32] >= r12_1340 l000037DA
l000037D8:
	Mem1352[r5_1323 + -12<i32>:word32] = r12_1340
l000037DA:
	r5_1355 = Mem1354[r6_1023 + 8<i32>:word32]
	r9_1357 = CONVERT(Mem1354[r5_1355 + 112<i32>:byte], byte, word32)
	branch SLICE(r9_1357, byte, 0) == 0<8> l000037F6
l000037E8:
	call Mem1354[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1368,Mem:Mem1354,r0:r0_1362,r1:r1_1363,r10:r10_1369,r11:r11_1377,r12:Mem1354[r4_1233 + -16<i32>:word32],r2:r2_1364,r3:r3_1365,r4:r4_1233,r5:r5_1355,r6:r6_1223,r7:r7_1276,r8:0<32>,r9:r9_1357
		defs: lr:lr_1402,r0:r0_1394,r1:r1_1395,r12:r12_1403,r2:r2_1396,r4:r4_1398,r5:r5_1399,r6:r6_1400,r7:r7_1401
	branch Mem1354[r5_1399 + 56<i32>:word32] >= r12_1403 l000037F6
l000037F4:
	Mem1413[r5_1399 + -8<i32>:word32] = r12_1403
l000037F6:
	r5_1416 = Mem1415[r6_1023 + 8<i32>:word32]
	r3_1088 = Mem1415[r5_1416 + -20<i32>:word32]
	branch r3_1088 != 0<32> l000038B4
l000037FE:
	call Mem1415[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1426,Mem:Mem1415,r0:r0_1436,r1:r1_1437,r10:r10_1427,r11:r11_1428,r12:r12_1429,r2:r2_1438,r3:r3_1417,r4:r4_1420,r5:r5_1416,r6:r6_1414,r7:r7_1423,r8:fn0000B7D4(Mem1415[r4_1420 + 28<i32>:word32], r3_1417, r7_1423 - 0x18<32>, out r9_1431, out r10_1427, out r11_1428, out r12_1429, out lr_1426),r9:r9_1431
		defs: r0:r0_1441,r1:r1_1442,r12:r12_1450,r2:r2_1443,r3:r3_1444,r4:r4_1445,r5:r5_1446,r6:r6_1447,r7:r7_1448,sp:sp_1440
	branch Mem1415[r5_1446 + 40<i32>:word32] >= r12_1450 l00003816
l00003814:
	Mem1460[r5_1446 + -24<i32>:word32] = r12_1450
l00003816:
	r8_1463 = Mem1462[r4_1445 + 24<i32>:word32]
	branch (r8_1463 & 0xF000<32>) == 0x2000<32> l00003828
l00003822:
	branch (r8_1463 & 0xF000<32>) != 0x6000<32> l0000387E
l0000387E:
	Mem1479[sp_1440 - 8<i32>:word64] = Mem1462[Mem1462[r6_1447 + 48<i32>:word32] + 4<i32>:word64]
	Mem1484[sp_1440 - 16<i32>:word64] = 1<64>
	r0_1154 = fn000093B8(r0_1441, r1_1442, r2_1443, r3_1444, r4_1445, r5_1446, Mem1484[r5_1446 + -12<i32>:word32], r7_1448 - 0x2A4<32>, Mem1484[sp_1440 - 16<i32>:word64], Mem1484[sp_1440 - 8<i32>:word64], Mem1484[sp_1440:word32], Mem1484[sp_1440 + 4<i32>:word32], Mem1484[sp_1440 + 8<i32>:word64], Mem1484[sp_1440 + 20<i32>:word32], Mem1484[sp_1440 + 24<i32>:word32], Mem1484[sp_1440 + 40<i32>:word32], Mem1484[sp_1440 + 44<i32>:word32], Mem1484[sp_1440 + 48<i32>:word32], out r1_1170, out r2_1002, out r3_1088, out r4_1004, out r5_1502, out r6_1023, out r7_1024, out r10_1861, out r11_1862, out r12_1498, out lr_1492)
	fn00006AA8(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1502, r6_1023, r7_1024, r3_1088, r12_1498, lr_1492, out r11_1863, out r12_1515, out lr_1093)
	branch Mem1484[r5_1502 + -60<i32>:word32] >= r12_1515 l000038B4
l000038A8:
	Mem1526[r5_1502 + 68<i32>:word32] = r12_1515
l00003828:
	fn00002718()
	call Mem1462[r6_1447 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1547,Mem:Mem1462,r0:r0_1441,r1:r1_1442,r10:r10_1548,r11:r11_1549,r12:r12_1550,r2:r7_1448 - 0x2A4<32>,r3:r3_1444,r4:r4_1445,r5:r5_1446,r6:r6_1447,r7:r7_1448,r8:fn0000B7D4(r12_1450, r3_1444, r7_1448 - 0x2A4<32>, out r9_1552, out r10_1548, out r11_1549, out r12_1550, out lr_1547),r9:r9_1552
		defs: r0:r0_1563,r1:r1_1564,r12:r12_1572,r2:r2_1565,r3:r3_1566,r4:r4_1567,r5:r5_1568,r6:r6_1569,r7:r7_1570
	branch Mem1462[r5_1568 + 60<i32>:word32] >= r12_1572 l0000384A
l00003848:
	Mem1582[r5_1568 + -4<i32>:word32] = r12_1572
l0000384A:
	fn0000272E()
	call Mem1584[r6_1569 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1599,Mem:Mem1584,r0:r0_1563,r1:r1_1564,r10:r10_1600,r11:r11_1601,r12:r12_1602,r2:r2_1565,r3:r3_1566,r4:r4_1567,r5:r5_1568,r6:r6_1569,r7:r7_1570,r8:fn0000B7D4(r12_1572, r3_1566, r2_1565, out r9_1604, out r10_1600, out r11_1601, out r12_1602, out lr_1599),r9:r9_1604
		defs: lr:lr_1624,r0:r0_1616,r1:r1_1617,r12:r12_1625,r2:r2_1618,r3:r3_1619,r4:r4_1620,r5:r5_1621,r6:r6_1622,r7:r7_1623
	branch Mem1584[r5_1621 + -64<i32>:word32] >= r12_1625 l0000386A
l00003866:
	Mem1635[r5_1621 + 64<i32>:word32] = r12_1625
l0000386A:
	r8_1641 = Mem1637[r5_1621 + 60<i32>:word32] + Mem1637[r5_1621 + -64<i32>:word32]
	branch Mem1637[r5_1621 + -60<i32>:word32] >= r8_1641 + 2<32> l000038B4
l00003878:
	Mem1645[r5_1621 + 68<i32>:word32] = r8_1641 + 2<32>
l000038B4:
	r5_1651 = Mem1649[r6_1023 + 8<i32>:word32]
	branch Mem1649[r5_1651 + 98<i32>:byte] == 0<8> l000038DA
l000038C2:
	r11_r10_1659 = Mem1649[r4_1004 + 96<i32>:word64]
	call Mem1649[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1667,Mem:Mem1649,r0:r0_1677,r1:r1_1679,r10:r10_1668,r11:r11_1669,r12:r12_1670,r2:r2_1681,r3:r3_1684,r4:r4_1656,r5:r5_1651,r6:r6_1646,r7:r7_1660,r8:fn0000B7D4(SLICE(r11_r10_1659, word32, 0), SLICE(r11_r10_1659, word32, 32), r7_1660 - 0x2A4<32>, out r9_1672, out r10_1668, out r11_1669, out r12_1670, out lr_1667),r9:r9_1672
		defs: lr:lr_1699,r0:r0_1691,r1:r1_1692,r12:r12_1700,r2:r2_1693,r4:r4_1695,r5:r5_1696,r6:r6_1697,r7:r7_1698
	branch Mem1649[r5_1651 + 32<i32>:word32] >= r12_1700 l000038DA
l000038D8:
	Mem1710[r5_1651 + -32<i32>:word32] = r12_1700
l000038DA:
	fn0000B994(r0_1154, r1_1170, r2_1002, r4_1004, r5_1651, r6_1023, r7_1024, Mem1712[r7_1024 + -680<i32>:word32], lr_1093, out r1_1728, out r2_1854, out r8_1855, out r9_1856, out r10_1857, out r11_1858, out r12_1731, out lr_1725)
	r9_1739 = Mem1712[r6_1023 + 8<i32>:word32]
l0000353E:
	fn00003168(r0_1017, r1_130, r4_1004, r7_1024, r2_1002, Mem396[r6_1023 + 1148<i32>:word32], r0_1017, lr_1093, out r9_1842, out r10_1843, out r11_1844, out lr_1725)
	branch r0_1017 == 0<32> l00003554
l00003554:
	fn0000B994(0<32>, r1_130, r2_1002, r4_1004, r5_1758, r6_1023, r7_1024, Mem396[r7_1024 + -680<i32>:word32], lr_1725, out r1_1845, out r2_1846, out r8_1847, out r9_1848, out r10_1849, out r11_1850, out r12_1731, out lr_1725)
	r9_1739 = Mem396[r6_1023 + 8<i32>:word32]
l000038E4:
	Mem1778[r4_1004:word32] = r12_1731
	Mem1783[r9_1739 + 12<i32>:word32] = Mem1778[r9_1739 + 12<i32>:word32] + 1<32>
l0000354C:
l000038F4:
	sp_1789 = Mem1788[r7_1024 + -684<i32>:word32]
	r7_1798 = Mem1788[sp_1789 + 0x2B4<32>:word32]
	r6_1799 = Mem1788[sp_1789 + 0x2B8<32>:word32]
	r5_1800 = Mem1788[sp_1789 + 0x2BC<32>:word32]
	r4_1801 = Mem1788[sp_1789 + 0x2C0<32>:word32]
	r3_1802 = Mem1788[sp_1789 + 0x2C4<32>:word32]
	r2_1803 = Mem1788[sp_1789 + 0x2C8<32>:word32]
	r1_1804 = Mem1788[sp_1789 + 0x2CC<32>:word32]
	r0_1805 = Mem1788[sp_1789 + 0x2D0<32>:word32]
	r11_r10Out = <invalid>
	r2Out = r2_1803
	r3Out = r3_1802
	r4Out = r4_1801
	r5Out = r5_1800
	r6Out = r6_1799
	r7Out = r7_1798
	lrOut = lr_1725
	return SEQ(r1_1804, r0_1805)
fn00003334_exit:


word32 fn00003904(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003904_entry:
l00003904:
	r6_19 = 0x00003908<p32> - Mem17[0x00003936<p32>:word32]
	branch r10 != 0<32> l00003918
l00003918:
	branch Mem17[Mem17[r6_19 + 8<i32>:word32] + 88<i32>:byte] == 0<8> l0000392A
l0000392A:
	r12_32 = fn00009B5C(r11, r12, r12, lr)
l00003926:
	r12_32 = 0<32>
l00003912:
	r12_32 = Mem17[r6_19 + 140<i32>:word32]
l0000392E:
	r0_57 = fn00003198(r0, r1, r2, r3, r4, r11, r12, r12_32, lr, out r1_58, out r2_62, out r3_63, out r12_61, out lr_56)
	r1Out = r1_58
	r2Out = r2_62
	r3Out = r3_63
	r12Out = r12_61
	lrOut = lr_56
	return r0_57
fn00003904_exit:


word32 fn0000393C(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000393C_entry:
l0000393C:
	r6_19 = 0x00003940<p32> - Mem17[0x000039E6<p32>:word32]
	r7_20 = Mem17[r6_19 + 8<i32>:word32]
	r8_21 = Mem17[r7_20 + 12<i32>:word32]
	branch Mem17[r7_20 + 132<i32>:word32] >=u (r8_21 >>u 1<32>) + r8_21 l0000396E
l00003954:
	call Mem17[r6_19 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,pc:pc_195,r0:r0,r1:r1,r12:Mem17[r7_20 + 16<i32>:word32],r2:r2,r4:r4,r5:r5,r6:r6_19,r7:r7_20
		defs: lr:lr_33,pc:pc_195,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_32
	r12_46 = fn000030B4(r4, r5, r7_20, 0xC<32>, Mem17[r7_20 + 12<i32>:word32], lr_33, out lr)
	Mem56[r7_20 + 132<i32>:word32] = Mem17[r7_20 + 12<i32>:word32] * 3<32>
	Mem57[r7_20 + 16<i32>:word32] = r12_46
l0000396E:
	r10_171 = fn00002A4C()
	branch Mem67[r7_20 + 136<i32>:word32] == 0xFFFFFFFF<32> l000039E4
l0000397A:
	call Mem67[r6_19 + 420<i32>:word32] (retsize: 0;)
		uses: lr:lr_76,Mem:Mem67,pc:pc_89,r0:r0,r1:r1,r12:r7_66 + 0x8C<32>,r2:r2,r4:r4_74,r5:r5_75,r6:r6_73,r7:r7_66
		defs: lr:lr_83,pc:pc_89,r12:r12_87,r4:r4_79,r5:r5_80,r6:r6_81,r7:r7_82,VNZC:VNZC_90
	branch SLICE(VNZC_90, bool, 1) l000039AA
l00003984:
	branch Mem67[Mem67[r6_105 + 8<i32>:word32] + 136<i32>:word32] != 3<32> l000039A4
l0000398E:
	call Mem67[r6_105 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_83,Mem:Mem67,pc:pc_113,r0:r0,r1:r1,r10:0xCC6<32>,r11:Mem67[r6_81 + 220<i32>:word32],r12:Mem67[r6_81 + 1136<i32>:word32],r2:r2,r4:r4_79,r5:r5_80,r6:r6_81,r7:r7_82,r9:0x000065B8<p32>
		defs: lr:lr_107,pc:pc_113,r6:r6_105
l000039A4:
	fn00002A4C()
	r12_123 = 1<32>
l000039AA:
	r9_128 = Mem67[r6_105 + 8<i32>:word32]
	r8_129 = Mem67[r9_128 + 136<i32>:word32]
	branch r8_129 == 4<32> l000039B8
l000039B8:
	r9_132 = Mem67[r9_128 + 316<i32>:word32]
l000039B4:
	r9_132 = 0<32>
l000039BC:
	r11_136 = Mem67[r6_105 + 8<i32>:word32]
	r10_171 = fn00009D6C(r0, r1, r2, Mem67[Mem67[r6_105 + -16<i32>:word32] + (CONVERT(Mem67[r11_136 + 320<i32>:byte], byte, word32) + (CONVERT(Mem67[r11_136 + 321<i32>:byte], byte, word32) + (r12_123 + (r9_132 + r8_129 << 1<8>) << 1<8>) << 1<8>)) * 4<32>:word32], Mem67[r11_136 + 12<i32>:word32], Mem67[r11_136 + 16<i32>:word32], lr_107, out lr)
l000039E4:
	lrOut = lr
	return r10_171
fn0000393C_exit:


void fn00003A0C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003A0C_entry:
l00003A0C:
	fn00006814(r0, r1, r2, r3, r4, r5, 0x00003A10<p32> - Mem17[0x00003A1A<p32>:word32], r7, Mem17[r11:word32], Mem17[r12:word32], lr)
	return
fn00003A0C_exit:


word32 fn00003A44(word32 r0, word32 r2, word32 r5, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r5:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003A44_entry:
l00003A44:
	r6_200 = 0x00003A48<p32> - Mem29[0x00003B26<p32>:word32]
	r3_197 = r12
	r1_158 = r11
	branch r12 == 0<32> l00003A66
l00003A52:
	branch Mem29[Mem29[r6_200 + 8<i32>:word32] + 324<i32>:word32] == 0<32> l00003A66
l00003A5C:
	fn00003120(r0, r11, r2, r5, 0<32>, r12, 0<32>, lr, out lr)
l00003A66:
	r4_198 = Mem29[Mem29[r6_200 + 8<i32>:word32] + 12<i32>:word32]
	r2_196 = (r4_198 << 2<32>) - 4<32>
l00003AEA:
	r4_198 = r4_198 - 1<32>
	r8_67 = Mem29[r6_200 + 8<i32>:word32]
	branch r4_198 != 0xFFFFFFFF<32> l00003A74
l00003A74:
	r7_201 = Mem29[Mem29[r8_67 + 16<i32>:word32] + r2_196:word32]
	r8_73 = Mem29[r7_201 + -24<i32>:word32]
	branch r8_73 == 3<32> l00003A84
l00003A80:
	branch r8_73 != 9<32> l00003AE8
l00003A84:
	branch r3_197 == 0<32> l00003AB8
l00003A88:
	fn00006E94(Mem29[r7_201:word32], out r11_422, out r12_87)
	r9_95 = CONVERT(Mem29[r12_87:byte], byte, word32)
	branch SLICE(r9_95, byte, 0) != 0x2E<8> l00003B18
l00003A98:
	r8_98 = CONVERT(Mem29[r12_87 + 1<i32>:byte], byte, word32)
	r8_101 = r8_98
	branch SLICE(r8_98, byte, 0) == SLICE(r9_95, byte, 0) l00003AA2
l00003A9E_1:
	r8_101 = 1<32>
l00003AA2:
	branch SLICE(r8_98, byte, 0) != SLICE(r9_95, byte, 0) l00003AA6
l00003AA2_1:
	r8_101 = 2<32>
l00003AA6:
	r12_110 = CONVERT(Mem29[r12_87 + r8_101:byte], byte, word32)
	branch r12_110 == 0<32> l00003AE8
l00003AAE:
	branch SLICE(r12_110, byte, 0) != 0x2F<8> l00003B18
l00003B18:
	r11_120 = Mem29[r7_201:word32]
	branch Mem29[r11_120:byte] != 0x2F<8> l00003AC4
l00003AC4:
	r12_147 = fn000071D4(r3_197, r4_198, r5, r7_201, r11_120, r3_197, lr, out lr_144)
	call Mem29[r6_200 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_172,Mem:Mem29,pc:pc_208,r0:r0_165,r1:r1_158,r11:fn00003120(r0_165, r1_158, r2_71, r12_147, r1_158, Mem29[r7_72 + 4<i32>:word32], r12_147, lr_144, out lr_172),r12:r12_147,r2:r2_71,r3:r3_79,r4:r4_64,r5:r12_147,r6:r6_65,r7:r7_72
		defs: lr:lr_202,pc:pc_208,r0:r0_194,r1:r1_195,r11:r11_204,r2:r2_196,r3:r3_197,r4:r4_198,r5:r5_199,r6:r6_200,r7:r7_201
l00003B24:
l00003AB8:
	r11_204 = fn00003120(r0, r1_158, r2_196, r5, r1_158, Mem29[r7_201 + 4<i32>:word32], Mem29[r7_201:word32], lr, out lr)
l00003ADC:
	branch Mem29[r7_201 + -24<i32>:word32] != 9<32> l00003AE8
l00003AE2:
	call Mem29[r6_200 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_247,Mem:Mem29,pc:pc_266,r0:r0_239,r1:r1_240,r11:r11_248,r12:Mem29[r7_231:word32],r2:r2_241,r3:r3_242,r4:r4_244,r5:r5_246,r6:r6_237,r7:r7_231
		defs: lr:lr_260,pc:pc_266,r0:r0_252,r1:r1_253,r2:r2_254,r3:r3_255,r4:r4_256,r5:r5_257,r6:r6_258
l00003AB6:
l00003AE8:
	r2_196 = r2_196 - 4<32>
l00003AF2:
	r10_271 = 0<32>
	r11_272 = Mem29[r8_67 + 16<i32>:word32]
	r12_273 = Mem29[r8_67 + 12<i32>:word32]
	r9_274 = 0<32>
l00003B0E:
	branch r9_274 != r12_273 l00003AFC
l00003AFC:
	r8_281 = Mem280[r11_272 + r9_274 * 4<32>:word32]
	Mem283[r10_271 * 4<32>:word32] = r8_281
	r9_274 = r9_274 + 1<32>
	r10_271 = r10_271 + CONVERT(Mem283[r8_281 + -24<i32>:word32] != 9<32>, bool, word32)
l00003B12:
	Mem293[Mem280[r6_200 + 8<i32>:word32] + 12<i32>:word32] = r10_271
	lrOut = lr
	return r10_271
fn00003A44_exit:


word32 fn00003B2C(word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003B60
//      fn00003B8C
//      fn000045F0
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r10 r11 r4 r5 r7 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003B2C_entry:
l00003B2C:
	r6_19 = 0x00003B30<p32> - Mem17[0x00003B5A<p32>:word32]
	r10_20 = Mem17[r6_19 + 8<i32>:word32]
	r7_24 = r12
	branch Mem17[r10_20 + 328<i32>:byte] != 0<8> l00003B4A
l00003B42:
	Mem28[r10_20 + 328<i32>:byte] = 1<8>
	r4 = fn00003B60(out r5, out r6_19, out r7_24, out lr)
l00003B4A:
	r8_43 = Mem42[r6_19 + 40<i32>:word32]
	call Mem42[r6_19 + 280<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,Mem:Mem42,r10:1<32>,r11:Mem42[r7_44:word32],r12:Mem42[r7_44 + 4<i32>:word32],r4:r4_49,r5:r5_50,r6:r6_41,r7:r7_44,r8:r8_43,r9:Mem42[r8_43:word32]
		defs: lr:lr_58,r10:r10_59,r11:r11_63,r9:r9_61
	r5Out = <invalid>
	r7Out = <invalid>
	r9Out = r9_61
	r10Out = r10_59
	r11Out = r11_63
	lrOut = lr_58
	return <invalid>
fn00003B2C_exit:


word32 fn00003B60(ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003B2C
//      fn000045F0
// MayUse: 
// LiveOut: lr r4 r5 r6 r7
// Trashed: VNZC lr r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00003B60_entry:
l00003B60:
	r7_20 = Mem17[0x00003B64<p32> - Mem17[0x00003B8A<p32>:word32] + -56<i32>:word32]
	branch Mem17[r7_20 + 20<i32>:word32] == 0<32> l00003B74
l00003B74:
	r4 = fn00003B2C(fn00003B2C(r4, r5, r7_20, lr, out r5_27, out r7_29, out r9_91, out r10_92, out r11_93, out lr_30), r5_27, r7_29 + 0x18<32>, lr_30, out r5, out r7_94, out r9_95, out r10_96, out r11_97, out lr)
l00003B6E:
l00003B82:
	fn00003B2C(r4, r5, r12, lr, out r5_99, out r7_100, out r9_101, out r10_102, out r11_103, out lr_61)
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	lrOut = lr_61
	return <invalid>
fn00003B60_exit:


word32 fn00003B8C(word32 r4, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000045F0
// MayUse:  lr:[0..31] r4:[0..31]
// LiveOut: lr r10 r11 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003B8C_entry:
l00003B8C:
	r5_21 = Mem17[0x00003B90<p32> - Mem17[0x00003B9E<p32>:word32] + -56<i32>:word32]
	fn00003B2C(r4, r5_21, r5_21, lr, out r5_58, out r7_59, out r9_60, out r10_61, out r11_62, out lr_23)
	fn00003B2C(r4, r5_21, r5_21 + 8<32>, lr_23, out r5_63, out r7_64, out r9_40, out r10_36, out r11_37, out lr_35)
	r10Out = r10_36
	r11Out = r11_37
	lrOut = lr_35
	return r9_40
fn00003B8C_exit:


word32 fn00003BA4(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 sp
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00003BA4_entry:
l00003BA4:
	r6_19 = 0x00003BA8<p32> - Mem17[0x00003BC6<p32>:word32]
	r5_22 = r11
	r7_24 = r12
	r4_37 = r4
l00003BBC:
	branch r7_24 != 0<32> l00003BB0
l00003BB0:
	branch fn000087C0(r0, r1, r2, r3, r4_37, r5_22, r6_19, r7_24, 4<32>, r5_22, Mem17[r7_24:word32], lr, out r0, out r1, out r2, out r3, out r4_37, out r5_22, out r6_19, out r7_50, out r10_43, out r11_44, out lr) l00003BBA
l00003BBA:
	r7_24 = Mem17[r7_50 + 4<i32>:word32]
l00003BB8:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = dwArg00
	r5Out = r4
	r6Out = r5
	r7Out = r6
	r10Out = r10_43
	r11Out = r11_44
	r12Out = r7
	lrOut = lr
	return r0
l00003BC4:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r10Out = 4<32>
	r11Out = r5_22
	r12Out = r7_24
	lrOut = lr
	return r0
fn00003BA4_exit:


word32 fn0000418C(word32 r1, word32 r5, word32 r9, word32 r10, word32 r11, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004374
//      fn000045F0
//      fn0000511C
// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r5:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000418C_entry:
l0000418C:
	r6_111 = 0x00004196<p32> - Mem29[0x000042E8<p32>:word32]
	r7_112 = fp - 36<i32>
	r2_107 = fp - 0x1030<32>
	r3_127 = r11
	r4_109 = r10
	r0_105 = r9
	r10_101 = fn0000A8DC(r1, r11, r5, r10, 0xFFFFFFFF<32>, r11, 0x1000<32>, fp - 0x1030<32>, lr, out r11_102, out r12_52, out lr_113)
	r5_110 = r12_52
	r12_100 = r12_52
	branch r12_52 <=u 0xFFF<32> l000041E0
l000041C4:
	sp_65 = fp - 0x103C<32> + (r12_52 + 7<32> & 0xFFFFFFFC<32>)
	r2_107 = sp_65
	r10_101 = fn0000A8DC(r1, r11, r12_52, r10, 0xFFFFFFFF<32>, r11, r12_52 + 1<32>, sp_65, lr_113, out r11_102, out r12_100, out lr_113)
l000041E0:
	r9_86 = CONVERT(Mem59[Mem59[r6_111 + 8<i32>:word32] + 329<i32>:byte], byte, word32)
	branch SLICE(r9_86, byte, 0) == 0<8> l0000430A
l0000430A:
	branch r9 == 0<32> l0000434E
l0000430E:
	call Mem59[r6_111 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,Mem:Mem59,r0:r9,r1:r1,r10:r10_101,r11:r11_102,r12:r12_100,r2:r2_94,r3:r11,r4:r10,r5:r12_52,r6:r6_33,r7:fp - 36<i32>,r9:r9_86
		defs: lr:lr_113,r0:r0_105,r1:r1_106,r12:r12_114,r2:r2_107,r3:r3_108,r4:r4_109,r5:r5_110,r6:r6_111,r7:r7_112
	branch r12_114 <=u 1<32> l00004326
l00004326:
	r9_123 = r2_107
	r12_124 = Mem59[Mem59[r6_111 + 156<i32>:word32]:word32]
	r11_102 = r2_107 + r5_110
	r3_127 = 0<32>
l00004346:
	r10_101 = r3_127 + 1<32>
	branch r9_564 <u r11_102 l00004336
l00004336:
	r9_123 = r9_564 + 1<32>
	r9_564 = r9_123
	branch (CONVERT(Mem59[r12_124 + CONVERT(Mem59[r9_564:byte], byte, word32) * 2<32>:word16], word16, word32) & 0x40<32>) == 0<32> l00004346
l00004342_1:
	r3_127 = r10_101
l00004318:
	r10_101 = fn00006998(r0_105, r1, r2_107, r3_108, r4_109, r5_110, r6_111, r7_112, 0<32>, r5_110, r2_107, lr_113, out r11_102, out r12_150, out lr_113)
	r3_127 = r12_150
l000041F0:
	call Mem59[r6_111 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,Mem:Mem59,r0:r9,r1:r1,r10:r10_101,r11:r11_102,r12:r12_100,r2:r2_94,r3:r11,r4:r10,r5:r12_52,r6:r6_33,r7:fp - 36<i32>,r9:r9_86
		defs: lr:lr_167,r0:r0_159,r10:r10_169,r11:r11_171,r12:r12_168,r2:r2_161,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166
	r1 = r2_107 + r5_110
	branch r12_168 <=u 1<32> l000042E2
l000042E2:
	r9_178 = r2_107
	r10_101 = Mem59[Mem59[r6_111 + 156<i32>:word32]:word32]
l00004302:
	branch r9_178 <u r1 l000042F0
l000042F0:
	branch Test(EQ,SLICE(CONVERT(Mem184[r10_101 + CONVERT(Mem184[r9_178:byte], byte, word32) * 2<32>:word16], word16, word32), bool, 6)) l00004300
l000042FC:
	Mem192[r9_178:byte] = 0x3F<8>
l00004300:
	r9_178 = r9_178 + 1<32>
l00004306:
	r3_127 = r5_110
l000041FE:
	r5_199 = r2_107
	r4_109 = r2_107
	r3_127 = 0<32>
l000042D8:
	branch r5_199 <u r1 l00004206
l00004206:
	r10_101 = CONVERT(Mem206[r5_199:byte], byte, word32)
	branch SLICE(r10_101, byte, 0) <u 0x20<8> l00004254
l00004210:
	branch SLICE(r10_101, byte, 0) <=u 0x23<8> l0000424C
l0000421A:
	branch SLICE(r10_101, byte, 0) <u 0x25<8> l00004254
l00004222:
	branch SLICE(r10_101, byte, 0) <=u 0x3F<8> l0000424C
l0000422C:
	branch SLICE(r10_101, byte, 0) <u 0x41<8> l00004254
l00004234:
	branch SLICE(r10_101, byte, 0) <=u 0x5F<8> l0000424C
l0000423E:
	branch SLICE(r10_101, byte, 0) >u 0x7E<8> || SLICE(r10_101, byte, 0) <u 0x61<8> l00004254
l00004254:
	Mem235[r7_112 + -12<i32>:word64] = 0<64>
l0000425C:
	call Mem245[r6_111 + 248<i32>:word32] (retsize: 0;)
		uses: lr:lr_250,Mem:Mem245,r0:r0_246,r1:r1_238,r10:r1_238 + r5_239,r11:r5_239,r12:r7_236 - 4<32>,r2:r2_247,r3:r3_248,r4:r4_249,r5:r5_239,r6:r6_244,r7:r7_236,r9:r7_236 - 0xC<32>
		defs: lr:lr_261,r0:r0_253,r1:r1_254,r10:r10_263,r11:r11_265,r12:r12_262,r2:r2_255,r3:r3_256,r4:r4_257,r5:r5_258,r6:r6_259,r7:r7_260
	Mem268[r7_112 + -4120<i32>:word32] = r12_262
	branch r12_262 != 0xFFFFFFFF<32> l0000427C
l0000427C:
	branch Mem268[r7_112 + -4120<i32>:word32] != 0xFFFFFFFE<32> l0000428E
l0000428E:
	r8_274 = Mem268[r7_112 + -4120<i32>:word32]
	r12_275 = Mem268[r7_112 + -4<i32>:word32]
	branch r8_274 != 0<32> l0000429C
l00004298_1:
	r8_274 = 1<32>
l0000429C:
	Mem281[r7_112 + -4120<i32>:word32] = r8_274
	fn0000B88C(r0_105, r1, r2_107, r3_256, r4_257, r5_258, r12_275, lr_113, out r0_291, out r1_292, out r2_296, out r3_297, out r10_293, out r11_294, out r12_295, out lr_290)
	N_301 = <invalid>
	V_300 = <invalid>
	branch N_301 | V_300 l000042C2
l000042C2:
	r9_305 = Mem281[r7_112 + -4120<i32>:word32]
	Mem310[r4_257:byte] = 0x3F<8>
	r5_307 = r5_258 + r9_305
	r3_308 = r3_297 + 1<32>
	r4_311 = r4_257 + 1<i32>
l000042A6:
	r9_305 = Mem281[r7_112 + -4120<i32>:word32]
	r11_294 = r5_258
	r10_293 = r4_257
l000042AE:
	Mem324[r10_293:byte] = Mem316[r11_294:byte]
	r11_294 = r11_294 + 1<i32>
	r9_305 = r9_305 - 1<32>
	r10_293 = r10_293 + 1<i32>
	branch r9_305 != 0<32> l000042AE
l000042B6:
	r8_328 = Mem324[r7_112 + -4120<i32>:word32]
	r3_308 = r3_297 + r12_295
	r4_311 = r4_257 + r8_328
	r5_307 = r5_258 + r8_328
l000042CE:
	call Mem343[r6_111 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_290,Mem:Mem343,r0:r0_291,r1:r1_292,r10:r10_355,r11:r11_356,r12:r7_260 - 0xC<32>,r2:r2_296,r3:r3_350,r4:r4_351,r5:r5_352,r6:r6_259,r7:r7_260,r9:r9_357
		defs: lr:lr_370,r0:r0_362,r1:r1_363,r10:r10_372,r11:r11_374,r2:r2_364,r3:r3_365,r4:r4_366,r5:r5_367,r6:r6_368,r7:r7_369,VNZC:VNZC_376
	branch SLICE(VNZC_376, bool, 1) l0000425C
l00004284:
	r5_199 = r1
l00004276:
	r5_199 = r5_258 + 1<32>
l00004288:
	Mem386[r4_257:byte] = 0x3F<8>
	r3_127 = r3_256 + 1<32>
	r4_109 = r4_257 + 1<i32>
l0000424C:
	Mem397[r4_109:byte] = SLICE(r10_101, byte, 0)
	r5_199 = r5_199 + 1<32>
	r3_127 = r3_127 + 1<32>
	r4_109 = r4_109 + 1<i32>
l000042DC:
	r5_110 = r4_109 + r2_107
l0000434E:
	r8_409 = Mem408[r7_112 + -4112<i32>:word32]
	branch r8_409 == 0<32> l00004362
l00004356:
	call Mem408[r6_111 + 280<i32>:word32] (retsize: 0;)
		uses: lr:lr_443,Mem:Mem408,r0:r0_429,r1:r1_436,r10:r5_418,r11:1<32>,r12:r2_413,r2:r2_413,r3:r3_438,r4:r4_439,r5:r5_418,r6:r6_422,r7:r7_404,r9:r8_409
		defs: lr:lr_466,r0:r0_458,r10:r10_468,r11:r11_470,r3:r3_461,r5:r5_463,r7:r7_465
l00004362:
	branch r0_105 == 0<32> l00004368
l00004366:
	Mem477[r0_105:word32] = r3_127
l00004368:
	sp_482 = Mem480[r7_112 + -4116<i32>:word32]
	r7_488 = Mem480[sp_482 + 0x101C<32>:word32]
	r6_489 = Mem480[sp_482 + 0x1020<32>:word32]
	r5_490 = Mem480[sp_482 + 0x1024<32>:word32]
	r4_491 = Mem480[sp_482 + 0x1028<32>:word32]
	r3_492 = Mem480[sp_482 + 0x102C<32>:word32]
	r2_493 = Mem480[sp_482 + 0x1030<32>:word32]
	r0_495 = Mem480[sp_482 + 0x1038<32>:word32]
	r1Out = Mem480[sp_482 + 0x1034<32>:word32]
	r2Out = r2_493
	r3Out = r3_492
	r4Out = r4_491
	r5Out = r5_490
	r6Out = r6_489
	r7Out = r7_488
	r10Out = r10_101
	r11Out = r11_102
	r12Out = r5_110
	lrOut = lr_113
	return r0_495
fn0000418C_exit:


word32 fn00004374(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004458
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: pc r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004374_entry:
l00004374:
	r6_137 = 0x0000437C<p32> - Mem29[0x00004456<p32>:word32]
	r10_33 = Mem29[r6_137 + 8<i32>:word32]
	sp_30 = &tLoc02B4
	r7_138 = r12
	branch Mem29[r10_33 + 98<i32>:byte] != 0<8> l00004392
l00004392:
	branch Mem29[r10_33 + -20<i32>:word32] != 4<32> l000043AC
l000043AC:
	r4_109 = Mem29[r10_33 + 32<i32>:word32] + 1<32>
l00004398:
	r11_r10_46 = Mem29[r12 + 96<i32>:word64]
	fn0000B7D4(SLICE(r11_r10_46, word32, 0), SLICE(r11_r10_46, word32, 32), &tLoc02B4, out r9_369, out r10_370, out r11_371, out r12_53, out lr_50)
	call Mem29[r6_137 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,Mem:Mem29,pc:pc_296,r0:r0,r1:r1,r12:r12_53,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r12
		defs: lr:lr_69,pc:pc_296,r0:r0_61,r1:r1_62,r12:r12_73,r2:r2_63,r3:r3_64,r5:r5_66,r6:r6_67,r7:r7_68,sp:sp_60
	r4_109 = r12_73 + 1<32>
l0000438E:
	r4_109 = 0<32>
l000043B2:
	r12_81 = Mem29[r6_137 + 8<i32>:word32]
	branch Mem29[r12_81 + 114<i32>:byte] == 0<8> l000043F2
l000043C0:
	branch Mem29[r12_81 + -20<i32>:word32] != 4<32> l000043EA
l000043EA:
	r12_148 = Mem29[r12_81 + 36<i32>:word32] + 1<32>
l000043C6:
	r9_95 = Mem29[r12_81 + -12<i32>:word32]
	sp_98 = sp_30 - 8<i32>
	Mem101[sp_98:word64] = Mem29[r12_81 + 120<i32>:word64]
	Mem106[sp_98 - 8<i32>:word64] = 0x200<64>
	call Mem106[r6_122 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_111,Mem:Mem106,pc:pc_145,r0:fn000093B8(r0_107, r1_108, 0x200<32>, 0<32>, r4_109, r5_110, r9_95, sp_96, Mem106[sp_98 - 8<i32>:word64], Mem106[sp_98:word64], Mem106[sp_98 + 8<i32>:word32], Mem106[sp_98 + 12<i32>:word32], Mem106[sp_98 + 16<i32>:word64], Mem106[sp_98 + 28<i32>:word32], Mem106[sp_98 + 32<i32>:word32], Mem106[sp_98 + 48<i32>:word32], Mem106[sp_98 + 52<i32>:word32], Mem106[sp_98 + 56<i32>:word32], out r1_114, out r2_118, out r3_119, out r4_120, out r5_121, out r6_122, out r7_123, out r10_372, out r11_373, out r12_117, out lr_111),r1:r1_114,r12:r12_117,r2:r2_118,r3:r3_119,r4:r4_120,r5:r5_121,r6:r6_122,r7:r7_123
		defs: lr:lr_139,pc:pc_145,r0:r0_131,r1:r1_132,r12:r12_143,r2:r2_133,r3:r3_134,r4:r4_135,r5:r5_136,r6:r6_137,r7:r7_138
	r12_148 = r12_143 + 1<32>
l000043F0:
	r4_109 = r4_109 + r12_148
l000043F2:
	r10_158 = Mem156[r6_137 + 8<i32>:word32]
	branch Mem156[r10_158 + 112<i32>:byte] == 0<8> l00004418
l00004400:
	branch Mem156[r10_158 + -20<i32>:word32] != 4<32> l00004410
l00004410:
l00004406:
	call Mem156[r6_137 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_185,Mem:Mem156,pc:pc_205,r0:r0_172,r1:r1_174,r12:Mem156[r7_169 + -16<i32>:word32],r2:r2_176,r3:r3_179,r4:r4_182,r5:r5_183,r6:r6_154,r7:r7_169
		defs: lr:lr_199,pc:pc_205,r1:r1_192,r6:r6_197,r7:r7_198
l00004416:
l00004418:
	r5_217 = Mem156[r6_137 + 8<i32>:word32]
	fn0000418C(r1, r5_217, fp - 0x28<32>, Mem156[r5_217 + 332<i32>:word32], Mem156[r7_138:word32], lr, out r1_374, out r2_375, out r3_376, out r4_238, out r5_239, out r6_377, out r7_241, out r10_378, out r11_235, out r12_379, out lr_231)
	r5_251 = r4_238 + dwLoc28
	branch Mem156[r5_239 + 24<i32>:word32] == 0<32> l0000444C
l00004436:
	r11_235 = fn00002A70(Mem156[r7_241 + -24<i32>:word32], Mem156[r7_241 + 24<i32>:word32], CONVERT(Mem156[r7_241 + 116<i32>:byte], byte, word32), out r12_259)
	r5_251 = r5_251 + CONVERT(SLICE(r12_259, byte, 0) != 0<8>, bool, word32)
l0000444C:
	r12Out = r5_251
	lrOut = lr_231
	return r11_235
fn00004374_exit:


word32 fn00004458(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: pc r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004458_entry:
l00004458:
	r6_129 = 0x0000445E<p32> - Mem29[0x00004578<p32>:word32]
	r7_33 = Mem29[r6_129 + 8<i32>:word32]
	r11_163 = Mem35[r7_33 + 336<i32>:word32]
	r8_37 = Mem35[r7_33 + 12<i32>:word32]
	r9_38 = Mem35[r7_33 + 340<i32>:word32]
	branch r11_163 >u r8_37 l00004474
l00004470_1:
	r3 = r11_163
l00004474:
	branch r11_163 <=u r8_37 l00004478
l00004474_1:
	r3 = r8_37
l00004478:
	branch r9_38 >=u r3 l0000450A
l0000447C:
	branch r3 >=u r11_163 >>u 1<32> l00004496
l00004496:
	r12_73 = fn00003210(r4, r5, r7_33, 0xC<32>, r11_163, lr, out lr_121)
	r5_106 = Mem35[r7_33 + 336<i32>:word32]
l00004484:
	r12_73 = fn00003210(r4, r5, r7_33, 0x18<32>, r3, lr, out lr_121)
	r5_106 = r3 << 1<32>
l000044A4:
	Mem99[r7_33 + 344<i32>:word32] = r12_73
	r7_103 = Mem99[r6_129 + 8<i32>:word32]
	r9_104 = Mem99[r7_103 + 340<i32>:word32]
	r10_107 = r9_104 + 1<32> + r5_106
	branch r10_107 <u r5_106 l000044CA
l000044BA:
	r9_110 = r5_106 + r9_104
	r12_111 = r10_107 * r9_110
	branch r12_111 /u r9_110 == r10_107 l000044CE
l000044CA:
	r4 = fn00006CAC(r4, r5_106, r6_129, r7_103, lr_121, out r5_106, out r6_129, out r7_103, out r8_636, out r9_637, out r10_638, out r11_639, out r12_111, out lr_121)
l000044CE:
	r12_150 = fn000030B4(r4, r5_106, r7_103, 4<32>, r12_111 >>u 1<i32>, lr_121, out lr)
	r10_159 = Mem99[r7_103 + 340<i32>:word32]
	r11_163 = Mem99[r7_103 + 344<i32>:word32] + r10_159 * 0xC<32> + 8<32>
	r9_165 = r10_159 << 2<32>
l00004500:
	branch r10_159 <u r5_106 l000044F0
l000044F0:
	Mem175[r11_163:word32] = r12_150
	r10_159 = r10_159 + 1<32>
	r12_150 = r12_150 + r9_165 + 4<32>
	r11_163 = r11_163 + 0xC<32>
	r9_165 = r9_165 + 4<32>
l00004504:
	Mem185[Mem183[r6_129 + 8<i32>:word32] + 340<i32>:word32] = r5_106
l0000450A:
	r5_189 = 0<32>
	r10_190 = Mem187[Mem187[r6_129 + 8<i32>:word32] + 344<i32>:word32]
	r12_191 = 3<32>
l00004532:
	branch r5_189 != r3 l00004516
l00004516:
	Mem201[r10_190:byte] = 1<8>
	Mem203[r10_190 + 4<i32>:word32] = r12_191
	r5_189 = r5_189 + 1<32>
	r11_163 = 0<32>
l00004520:
	Mem209[r11_163 * 4<32>:word32] = 3<32>
	r11_163 = r11_163 + 1<32>
	branch r11_163 != r5_189 l00004520
l0000452E:
	r10_190 = r10_190 + 0xC<32>
	r12_191 = r12_191 + 3<32>
l00004536:
	r4_218 = 0<32>
l000045C0:
	r7_221 = Mem220[r6_129 + 8<i32>:word32]
	branch r4_218 <u Mem220[r7_221 + 12<i32>:word32] l0000453A
l0000453A:
	r11_163 = fn00004374(r0, r1, r2, r3, r4_218, r5_189, Mem220[Mem220[r7_221 + 16<i32>:word32] + r4_218 * 4<32>:word32], lr, out r12_237, out lr)
	r1 = Mem220[r7_221 + 12<i32>:word32]
	r2 = Mem220[r7_221 + 348<i32>:word32]
	r0 = r12_237
	r10_248 = Mem220[r7_221 + 344<i32>:word32] + 4<32>
	r12_250 = 0<32>
l000045BA:
	branch r12_250 != r3 l00004556
l00004556:
	branch Mem256[r10_248 + -4<i32>:byte] == 0<8> l000045B6
l00004562:
	r9_262 = r12
	r8_263 = r12_250 + 1<32>
	branch r12 == 0<32> l00004580
l00004580:
	r8_267 = r4_218 /u r8_263
l0000456C:
	r8_267 = r4_218 /u ((r12_250 + r1) /u r8_263)
	r9_262 = r8_267
l00004584:
	r7_276 = Mem256[r10_248 + 4<i32>:word32]
	lr = r9_262 << 2<32>
	branch r9_262 == r12_250 l00004590
l0000458C_1:
	r8_267 = 2<32>
l00004590:
	branch r9_262 != r12_250 l00004594
l00004590_1:
	r8_267 = 0<32>
l00004594:
	r11_163 = Mem256[r7_276 + (r9_262 << 2<32>):word32]
	r9_299 = r8_267 + r12_237
	branch r11_163 >=u r9_299 l000045B6
l000045A0:
	Mem307[r10_248:word32] = Mem256[r10_248:word32] + r11_163 + r9_299
	Mem308[r9_262 << 2<32>:word32] = r9_299
	Mem317[r10_248 + -4<i32>:byte] = CONVERT(Mem308[r10_248:word32] <u r2, bool, byte)
l000045B6:
	r12_250 = r12_250 + 1<32>
	r10_248 = r10_248 + 0xC<32>
l000045BE:
	r4_218 = r4_218 + 1<32>
l000045C8:
	r9_330 = Mem220[r7_221 + 344<i32>:word32] + r5_189 * 0xC<32> - 0xC<32>
l000045E4:
	branch r5_189 >u 1<32> l000045DA
l000045DA:
	r9_330 = r9_330 - 0xC<32>
	branch CONVERT(Mem220[r9_330:byte], byte, word32) != 0<32> l000045EA
l000045E2:
	r5_189 = r5_189 - 1<32>
l000045EA:
	r12Out = r5_189
	lrOut = lr
	return r11_163
fn00004458_exit:


word32 fn000045F0(word32 r2, word32 r3, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004864
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: lr r10 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000045F0_entry:
l000045F0:
	r6_195 = 0x000045F8<p32> - Mem29[0x00004706<p32>:word32]
	lr_127 = CONVERT(Mem29[Mem29[r6_195 + 8<i32>:word32] + 97<i32>:byte], byte, word32)
	r11_141 = r8
	r0_189 = dwArg08
	r4_193 = dwArg00
	r1_190 = r12
	r5_205 = dwArg04
	branch SLICE(lr_127, byte, 0) == 0<8> l0000474E
l0000461A:
	branch r10 != 0xFFFFFFFF<32> l0000462A
l0000461E:
	branch Mem29[Mem29[r6_195 + -56<i32>:word32] + -28<i32>:word32] == 0<32> l0000462A
l0000462A:
	branch r9 == 0<32> l000046E2
l000046E2:
	r8_139 = 0x000065AC<p32> + (r8 << 2<8>)
	r7_104 = Mem29[r8_139 + 24<i32>:word32]
	branch r7_104 != 5<32> l00004728
l000046F0:
l0000462E:
	branch (r11 & 0xF000<32>) != 0x8000<32> l00004674
l00004674:
	branch (r11 & 0xF000<32>) != 0x4000<32> l000046A2
l000046A2:
	branch (r11 & 0xF000<32>) != 0xA000<32> l000046B8
l000046B8:
	branch (r11 & 0xF000<32>) != 0x1000<32> l000046C2
l000046C2:
	branch (r11 & 0xF000<32>) != 0xC000<32> l000046CC
l000046CC:
	branch (r11 & 0xF000<32>) != 0x6000<32> l000046D6
l000046D6:
	branch (r11 & 0xF000<32>) == 0x2000<32> l00004854
l00004854:
	r7_104 = 0xB<32>
l000046D2:
	r7_104 = 0xA<32>
l000046C8:
	r7_104 = 9<32>
l000046BE:
	r7_104 = 8<32>
l000046A8:
	branch r10 != 0<32> l000046B4
l000046AC:
	branch Mem29[Mem29[r6_195 + -56<i32>:word32] + -20<i32>:word32] != 0<32> l000046DE
l000046DE:
	r7_104 = 0xD<32>
l000046B4:
	r7_104 = 7<32>
l0000467A:
	branch (r11 & 0x202<32>) != 0x202<32> l0000468A
l0000468A:
	branch Test(NE,SLICE(r11, bool, 1)) l00004694
l00004694:
	r7_104 = r11 & 0x200<32>
	branch (r11 & 0x200<32>) != 0<32> l0000469C
l00004698_1:
	r7_104 = 6<32>
l0000469C:
	branch (r11 & 0x200<32>) == 0<32> l000046A0
l0000469C_1:
	r7_104 = 0x12<32>
l000046A0:
l00004690:
	r7_104 = 0x13<32>
l00004686:
	r7_104 = 0x14<32>
l0000463A:
	branch Test(NE,SLICE(r11, bool, 11)) l00004644
l00004644:
	branch Test(NE,SLICE(r11, bool, 10)) l0000464E
l0000464E:
	fn000030D8(dwArg00, dwArg04, r11 & 0x49<32>, 0x15<32>, lr_127, out r9_958, out r10, out r11_959, out r12_960, out lr_127)
	branch (r11 & 0x49<32>) == 0<32> l00004660
l00004660:
	r8_139 = fn000030D8(dwArg00, dwArg04, r11 & 0x49<32>, 0x16<32>, lr_127, out r9, out r10, out r11_141, out r12_138, out lr_127)
	branch CONVERT(SLICE(r12_138, byte, 0), byte, word32) == 0<32> l000046F2
l0000466A:
	branch dwArg04 <=u 1<32> l000046F2
l000046F2:
	r7_104 = 5<32>
l000046F4:
	call Mem29[r6_195 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_175,Mem:Mem29,r0:dwArg08,r1:r12,r10:r10_181,r11:r11_177,r12:r12,r2:r2,r3:r3,r4:dwArg00,r5:dwArg04,r6:r6_32,r7:r7_174,r8:r8_179,r9:r9_183,Stack +00A4:dwArg00,Stack +00A8:dwArg04,Stack +00AC:dwArg08
		defs: lr:lr_197,r0:r0_189,r1:r1_190,r10:r10_201,r12:r12_200,r4:r4_193,r6:r6_195,r7:r7_196,r9:r9_202
	r8_204 = Mem29[r6_195 + 8<i32>:word32]
	r5_205 = Mem29[r8_204 + 352<i32>:word32]
	r3 = r12_200
	r2_207 = r1_190 + r12_200
l00004724:
	branch r5_205 != 0<32> l0000470C
l0000470C:
	r10 = Mem29[r5_205:word32]
	branch r10 >u r3 l00004722
l00004714:
	call Mem29[r6_195 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_226,Mem:Mem29,r0:r0_222,r1:r1_223,r10:r10_213,r11:Mem29[r5_209 + 4<i32>:word32],r12:r2_218 + r10_213,r2:r2_218,r3:r3_214,r4:r4_224,r5:r5_209,r6:r6_221,r7:r7_225,r8:r8_227,r9:r9_228
		defs: lr:lr_239,r0:r0_231,r1:r1_232,r10:r10_243,r2:r2_233,r3:r3_234,r4:r4_235,r5:r5_236,r6:r6_237,r7:r7_238,r8:r8_241,r9:r9_244,VNZC:VNZC_245
	branch SLICE(VNZC_245, bool, 1) l00004858
l00004858:
	r7_247 = r5_205 + 8<32>
l00004722:
	r5_205 = Mem29[r5_205 + 16<i32>:word32]
l00004670:
	r7_104 = 0x16<32>
l0000465C:
	r7_104 = 0xE<32>
l0000464A:
	r7_104 = 0x11<32>
l00004640:
	r7_104 = 0x10<32>
l00004626:
	r7_104 = 0xC<32>
l00004728:
	r7_247 = Mem29[r6_195 + -56<i32>:word32] + (r7_104 << 3<8>)
l0000472E:
	branch Mem29[r7_247 + 4<i32>:word32] == 0<32> l0000474E
l0000474E:
	r2_278 = 0<32>
l00004734:
	r5_205 = Mem29[r6_195 + -56<i32>:word32]
	fn00003B2C(r4_193, r5_205, r5_205, lr_127, out r5_944, out r7_945, out r9_946, out r10_947, out r11_948, out lr_295)
	fn00003B2C(r4_193, r5_205, r7_247, lr_295, out r5_949, out r7_950, out r9_951, out r10_952, out r11_953, out lr_306)
	fn00003B2C(r4_193, r5_205, r5_205 + 8<32>, lr_306, out r5_954, out r7_955, out r9_956, out r10, out r11_957, out lr_127)
	r2_278 = 1<32>
l00004750:
	branch r4_193 == 0<32> l00004782
l00004754:
	r7_336 = Mem29[r6_195 + 8<i32>:word32]
	branch Mem29[r7_336 + 356<i32>:byte] == 0<8> l00004782
l00004762:
	r8_341 = Mem29[r4_193 + 12<i32>:word32]
	r9_342 = Mem29[r4_193 + 16<i32>:word32]
	branch r8_341 + 4<32> <=u r9_342 l00004776
l0000476E:
	call Mem29[r6_195 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_381,Mem:Mem29,r0:r0_348,r1:r1_356,r10:r10_383,r11:4<32>,r12:r4_328,r2:r2_364,r3:r3_365,r4:r4_328,r5:r5_373,r6:r6_332,r7:r7_336,r8:r8_341 + 4<32>,r9:r9_342
		defs: lr:lr_410,r1:r1_403,r4:r4_406,r5:r5_407,r6:r6_408,r7:r7_409
l00004776:
	Mem422[Mem29[r4_193 + 12<i32>:word32]:word32] = Mem29[r7_336 + -52<i32>:word32]
	Mem426[r4_193 + 12<i32>:word32] = Mem422[r4_193 + 12<i32>:word32] + 4<32>
l00004782:
	r0_443 = fn0000418C(r1_190, r5_205, 0<32>, Mem429[Mem429[r6_195 + 8<i32>:word32] + 332<i32>:word32], r1_190, lr_127, out r1_444, out r2_447, out r3_943, out r4_449, out r5_450, out r6_451, out r7_452, out r10_445, out r11_446, out r12_455, out lr_442)
	Mem462[r7_452 + 76<i32>:word32] = r12_455 + Mem429[r7_452 + -52<i32>:word32]
	r3_463 = r12_455
	branch r4_449 == 0<32> l000047D0
l000047A4:
	branch Mem462[r7_452 + 356<i32>:byte] == 0<8> l000047D0
l000047B0:
	r8_470 = Mem462[r4_449 + 12<i32>:word32]
	r9_471 = Mem462[r4_449 + 16<i32>:word32]
	branch r8_470 + 4<32> <=u r9_471 l000047C4
l000047BC:
	call Mem462[r6_451 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_442,Mem:Mem462,r0:r0_443,r1:r1_444,r10:r10_445,r11:4<32>,r12:r4_449,r2:r2_447,r3:r12_455,r4:r4_449,r5:r5_450,r6:r6_451,r7:r7_452,r8:r8_470 + 4<32>,r9:r9_471
		defs: lr:lr_488,r0:r0_480,r1:r1_481,r10:r10_492,r11:r11_489,r2:r2_482,r3:r3_483,r4:r4_484,r6:r6_486,r7:r7_487
l000047C4:
	Mem500[Mem462[r4_449 + 12<i32>:word32]:word32] = Mem462[r7_452 + -52<i32>:word32]
	Mem504[r4_449 + 12<i32>:word32] = Mem500[r4_449 + 12<i32>:word32] + 4<32>
l000047D0:
	branch r2_447 != 0<32> l00004822
l00004822:
	r5_511 = Mem510[r6_451 + 8<i32>:word32]
	branch (Mem510[r5_511 + 4<i32>:word32] | Mem510[r5_511:word32]) != 0<32> l000047D6
l000047D6:
	r9_517 = CONVERT(Mem510[r5_511 + 328<i32>:byte], byte, word32)
	branch SLICE(r9_517, byte, 0) == 0<8> l000047E6
l000047E2:
	r9_517 = fn00003B8C(r4_449, lr_442, out r10_445, out r11_446, out lr_442)
l000047E6:
	r8_535 = Mem510[r6_451 + 40<i32>:word32]
	call Mem510[r6_451 + 284<i32>:word32] (retsize: 0;)
		uses: lr:lr_549,Mem:Mem510,r0:r0_538,r1:r1_540,r10:r10_552,r11:r11_550,r12:Mem510[r8_535:word32],r2:r2_542,r3:r3_544,r4:r4_521,r5:r5_511,r6:r6_509,r7:r7_548,r8:r8_535,r9:r9_554
		defs: lr:lr_566,r0:r0_558,r1:r1_559,r2:r2_560,r3:r3_561,r4:r4_562,r5:r5_563,r6:r6_564,r7:r7_565,r8:r8_568,r9:r9_571,sp:sp_557
	call Mem510[r6_564 + 272<i32>:word32] (retsize: 0;)
		uses: lr:lr_566,Mem:Mem510,r0:r0_558,r1:r1_559,r10:sp_557,r11:r5_563 + 0x168<32>,r12:0<32>,r2:r2_560,r3:r3_561,r4:r4_562,r5:r5_563,r6:r6_564,r7:r7_565,r8:r8_568,r9:r9_571
		defs: lr:lr_586,r0:r0_578,r1:r1_579,r10:r10_590,r2:r2_580,r3:r3_581,r4:r4_582,r5:r5_583,r6:r6_584,r9:r9_591
	r11_594 = Mem510[r5_583 + 4<i32>:word32]
	r7_593 = Mem510[r5_583:word32]
	r8_595 = r11_594 - 1<32>
	branch r11_594 == 0<32> l0000480C
l0000480C:
	call Mem510[r6_584 + 312<i32>:word32] (retsize: 0;)
		uses: lr:lr_586,Mem:Mem510,r0:r0_578,r1:r1_579,r10:r10_590,r11:r11_594,r12:r7_593,r2:r2_580,r3:r3_581,r4:r4_582,r5:r5_583,r6:r6_584,r7:r7_593,r8:r11_594 - 1<32>,r9:r9_591
		defs: lr:lr_608,r0:r0_600,r1:r1_601,r10:r10_612,r11:r11_609,r2:r2_602,r3:r3_603,r4:r4_604,r5:r5_605,r6:r6_606,r7:r7_607,r8:r8_610,r9:r9_613
l00004806:
	Mem616[r5_583 + 4<i32>:word32] = r11_594 - 1<32>
	r7_607 = 0x13<32>
l00004812:
	call Mem620[r6_584 + 228<i32>:word32] (retsize: 0;)
		uses: lr:lr_627,Mem:Mem620,r0:r0_621,r1:r1_622,r10:r10_630,r11:r11_628,r12:r7_617,r2:r2_623,r3:r3_624,r4:r4_625,r5:r5_626,r6:r6_619,r7:r7_617,r8:r8_629,r9:r9_631
		defs: lr:lr_642,r0:r0_634,r1:r1_635,r2:r2_636,r3:r3_637,r4:r4_638,r5:r5_639,r6:r6_640,r7:r7_641,r8:r8_644,r9:r9_647,sp:sp_633
	call Mem620[r6_640 + 272<i32>:word32] (retsize: 0;)
		uses: lr:lr_642,Mem:Mem620,r0:r0_634,r1:r1_635,r10:0<32>,r11:sp_633,r12:2<32>,r2:r2_636,r3:r3_637,r4:r4_638,r5:r5_639,r6:r6_640,r7:r7_641,r8:r8_644,r9:r9_647
		defs: lr:lr_661,r0:r0_653,r1:r1_654,r10:r10_665,r11:r11_662,r2:r2_655,r3:r3_656,r4:r4_657,r6:r6_659,r7:r7_660
l0000482C:
	fn00003B60(out r5_961, out r6_962, out r7_963, out lr_442)
	r11_675 = Mem510[r5_511 + 348<i32>:word32]
	r10_445 = r0_443 /u r11_675
	branch r10_445 == ((r0_443 - 1<32>) + r3_463) /u r11_675 l0000485E
l00004848:
	fn00003B2C(r4_449, r5_511, Mem510[r6_451 + -56<i32>:word32] + 0xB8<32>, lr_442, out r5_964, out r7_965, out r9_966, out r10_445, out r11_967, out lr_442)
l000047D4:
l0000485E:
	r12Out = r3_463
	lrOut = lr_442
	return r10_445
fn000045F0_exit:


word32 fn00004864(word32 r0, word32 r1, word32 r2, word32 r3, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: pc r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004864_entry:
l00004864:
	r6_176 = 0x0000486C<p32> - Mem29[0x00004966<p32>:word32]
	r5_33 = Mem29[r6_176 + 8<i32>:word32]
	sp_107 = &tLoc02B0
	r7_109 = r12
	r4_123 = r11
	branch Mem29[r5_33 + 98<i32>:byte] == 0<8> l000048A6
l00004880:
	r11_r10_42 = Mem29[r12 + 96<i32>:word64]
	fn0000B7D4(SLICE(r11_r10_42, word32, 0), SLICE(r11_r10_42, word32, 32), &tLoc02B0, out r9_436, out r10_437, out r11_48, out r12_49, out lr_46)
	branch Mem29[r5_33 + -20<i32>:word32] != 4<32> l00004896
l00004896:
	r8_60 = Mem29[r5_33 + 32<i32>:word32]
l00004892:
	r8_60 = 0<32>
l00004898:
	call Mem71[r6_176 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_46,Mem:Mem71,pc:pc_352,r0:r0,r1:r1,r11:r11_48,r12:Mem29[r6_32 + 184<i32>:word32],r2:r2,r3:r3,r4:r11,r5:r5_33,r6:r6_32,r7:r12,Stack +0000:r8_70,Stack +0004:r12_49,Stack +0008:tLoc02B0
		defs: lr:lr_90,pc:pc_352,r0:r0_82,r1:r1_83,r11:r11_94,r2:r2_84,r3:r3_85,r4:r4_86,r6:r6_88,r7:r7_89,sp:sp_81
	sp_107 = sp_81 + 8<32>
l000048A6:
	r5_101 = Mem100[r6_176 + 8<i32>:word32]
	branch Mem100[r5_101 + 114<i32>:byte] == 0<8> l000048EC
l000048B4:
	r9_111 = Mem100[r5_101 + -12<i32>:word32]
	sp_112 = sp_107 - 8<i32>
	Mem115[sp_112:word64] = Mem100[r5_101 + 120<i32>:word64]
	Mem120[sp_112 - 8<i32>:word64] = 0x200<64>
	r0_126 = fn000093B8(r0, r1, 0x200<32>, 0<32>, r4_123, r5_101, r9_111, sp_107, Mem120[sp_112 - 8<i32>:word64], Mem120[sp_112:word64], Mem120[sp_112 + 8<i32>:word32], Mem120[sp_112 + 12<i32>:word32], Mem120[sp_112 + 16<i32>:word64], Mem120[sp_112 + 28<i32>:word32], Mem120[sp_112 + 32<i32>:word32], Mem120[sp_112 + 48<i32>:word32], Mem120[sp_112 + 52<i32>:word32], Mem120[sp_112 + 56<i32>:word32], out r1_127, out r2_131, out r3_132, out r4_133, out r5_134, out r6_135, out r7_136, out r10_438, out r11_129, out r12_130, out lr_124)
	branch Mem120[r5_134 + -20<i32>:word32] != 4<32> l000048DC
l000048DC:
	r8_148 = Mem120[r5_134 + 36<i32>:word32]
l000048D8:
	r8_148 = 0<32>
l000048DE:
	r12_152 = Mem120[r6_135 + 184<i32>:word32]
	Mem156[sp_112 + 4<32>:word32] = r12_130
	Mem159[sp_112:word32] = r8_148
	call Mem159[r6_135 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_124,Mem:Mem159,pc:pc_184,r0:r0_126,r1:r1_127,r11:r11_129,r12:r12_152,r2:r2_131,r3:r3_132,r4:r4_133,r5:r5_134,r6:r6_135,r7:r7_136
		defs: lr:lr_178,pc:pc_184,r0:r0_170,r1:r1_171,r11:r11_182,r2:r2_172,r3:r3_173,r4:r4_174,r5:r5_175,r6:r6_176,r7:r7_177,sp:sp_169
	sp_107 = sp_169 + 8<32>
l000048EC:
	r10_190 = Mem189[r6_176 + 8<i32>:word32]
	branch Mem189[r10_190 + 112<i32>:byte] == 0<8> l00004916
l000048FA:
	r9_197 = Mem189[r7_109 + -16<i32>:word32]
	branch Mem189[r10_190 + -20<i32>:word32] != 4<32> l00004906
l00004906:
	r8_200 = Mem189[r10_190 + 56<i32>:word32]
l00004902:
	r8_200 = 0<32>
l00004908:
	r12_204 = Mem189[r6_176 + 184<i32>:word32]
	sp_207 = sp_107 - 4<i32>
	Mem209[sp_207:word32] = r9_197
	Mem212[sp_207 - 4<i32>:word32] = r8_200
	call Mem212[r6_176 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_229,Mem:Mem212,pc:pc_249,r0:r0_214,r1:r1_216,r11:r11_232,r12:r12_204,r2:r2_218,r3:r3_221,r4:r4_224,r5:r5_226,r6:r6_188,r7:r7_196
		defs: pc:pc_249,r2:r2_237,r3:r3_238,r4:r4_239,r6:r6_241,r7:r7_242
l00004916:
	r10_257 = CONVERT(Mem254[r7_109 + 117<i32>:byte], byte, word32)
	r5_259 = Mem254[r7_109 + 28<i32>:word32]
	lr_260 = Mem254[r7_109 + -24<i32>:word32]
	r9_263 = CONVERT(Mem254[r7_109 + 116<i32>:byte], byte, word32)
	branch (CONVERT(Mem254[Mem254[r6_176 + 8<i32>:word32] + 104<i32>:byte], byte, word32) & r10_257) == 0<32> l00004930
l00004930:
	r11_265 = Mem254[r7_109 + 24<i32>:word32]
l0000492C:
	r11_265 = Mem254[r7_109 + -20<i32>:word32]
l00004932:
	r10_292 = fn000045F0(r2, r3, lr_260, r9_263, r10_257, r11_265, Mem254[r7_109:word32], 0<32>, r5_259, r4_123, out r12_439, out lr_291)
	branch Mem283[Mem283[r6_176 + 8<i32>:word32] + 24<i32>:word32] == 0<32> l0000495C
l0000494C:
	r10_292 = fn00002DB4(r4_123, r5_259, Mem283[r7_109 + -24<i32>:word32], Mem283[r7_109 + 24<i32>:word32], CONVERT(Mem283[r7_109 + 116<i32>:byte], byte, word32), lr_291, out r12_440, out lr_291)
l0000495C:
	lrOut = lr_291
	return r10_292
fn00004864_exit:


word32 fn00004968(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 lr, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r10 r11
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004968_entry:
l00004968:
	r6_125 = 0x00004970<p32> - Mem29[0x00004A8A<p32>:word32]
	r8_33 = Mem29[r6_125 + 8<i32>:word32]
	sp_1897 = fp - 0x1518<32>
	r10_186 = 0<32>
	r11_1990 = 0<32>
	r9_36 = Mem29[r8_33 + -20<i32>:word32]
	branch r9_36 >u 4<32> l00005114
l00004984:
	switch (r9_36) { l00004990 l00004994 l00004998 l0000499C l000049A0 }
l000049A0:
l000049AA:
	r4_123 = 0<32>
	r5_109 = 0<32>
l00004B96:
	r7_111 = Mem48[r6_125 + 8<i32>:word32]
	branch r4_123 <u Mem48[r7_111 + 12<i32>:word32] l00004B30
l00004B30:
	r3 = Mem48[Mem48[r7_111 + 16<i32>:word32] + r4_123 * 4<32>:word32]
	fn00004374(r0, r1, r2, r3, r4_123, r5_109, r3, lr, out r12_65, out lr_127)
	r2 = r12_65
	branch r4_123 == 0<32> l00004B8C
l00004B42:
	r11_77 = Mem48[Mem48[r6_125 + -64<i32>:word32]:word32]
	r5_109 = r5_109 + 2<32>
	r9_78 = Mem48[r7_111 + 348<i32>:word32]
	r12_79 = Mem48[r11_77 + 16<i32>:word32]
	r10_80 = Mem48[r11_77 + 28<i32>:word32]
	r8_81 = r5_109 + r12_65
	branch r8_81 >=u r9_78 l00004B5A
l00004B56_1:
	r7_111 = 0x20<32>
l00004B5A:
	branch r8_81 <u r9_78 l00004B62
l00004B5A_1:
	r7_111 = 0xA<32>
l00004B5E_1:
	r5_109 = 0<32>
l00004B62:
	branch r12_79 >=u r10_80 l00004B6E
l00004B6E:
	call Mem48[r6_125 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_62,Mem:Mem48,pc:pc_2096,r0:r0_57,r1:r1_58,r12:0x2C<32>,r2:r12_65,r3:r3_55,r4:r4_51,r5:r5_109,r6:r6_47,r7:r7_111
		defs: lr:lr_127,pc:pc_2096,r0:r0_119,r1:r1_120,r2:r2_121,r3:r3_122,r4:r4_123,r5:r5_124,r6:r6_125,r7:r7_126
l00004B66:
	Mem135[r12_79:byte] = 0x2C<8>
	Mem139[r11_77 + 16<i32>:word32] = r12_79 + 1<i32>
l00004B74:
	r11_143 = Mem141[Mem141[r6_125 + -64<i32>:word32]:word32]
	r9_144 = Mem141[r11_143 + 16<i32>:word32]
	branch r9_144 >=u Mem141[r11_143 + 28<i32>:word32] l00004B86
l00004B86:
	call Mem141[r6_125 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_156,Mem:Mem141,pc:pc_2097,r0:r0_150,r1:r1_151,r12:r7_148,r2:r2_152,r3:r3_153,r4:r4_154,r5:r5_155,r6:r6_140,r7:r7_148
		defs: lr:lr_167,pc:pc_2097,r0:r0_159,r1:r1_160,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165
l00004B80:
	Mem174[r9_144:byte] = SLICE(r7_111, byte, 0)
	Mem176[r11_143 + 16<i32>:word32] = r9_144 + 1<i32>
l00004B8C:
	r10_186 = fn00004864(r0, r1, r2, r3, r5_109, r3, lr_127, out lr)
	r5_109 = r5_109 + r2
	r4_123 = r4_123 + 1<32>
l0000499C:
l00004A90:
	fn00004458(r0, r1, r2, r3, r4, r5, 0<32>, lr, out r12_203, out lr_200)
	r5_109 = Mem38[Mem38[r8_33 + 16<i32>:word32]:word32]
	r8_215 = Mem38[r8_33 + 344<i32>:word32] + r12_203 * 0xC<32>
	fn00004374(1<32>, r12_203, r2, r3, r4, r5_109, r5_109, lr_200, out r12_224, out lr_221)
	r7_111 = Mem234[Mem220[r8_215 - 4<32>:word32]:word32]
	r0 = 1<32>
	r1 = r12_203
	r4_123 = r12_224
	r10_186 = fn00004864(1<32>, r12_203, r2, r3, 0<32>, r5_109, lr_221, out lr)
l00004B26:
	branch r0 <u Mem250[Mem250[r6_125 + 8<i32>:word32] + 12<i32>:word32] l00004AC8
l00004AC8:
	Mem260[sp_1897 + 20<i32>:word32] = r3
	r2 = r0 /u r1
	branch r3 != 0<32> l00004AF2
l00004AF2:
	r9_263 = Mem260[sp_1897 + 28<i32>:word32]
	r5_265 = r7_111 + r9_263
	lr = fn00002D38(r4_123, r5_265, r4_123 + r9_263, lr)
	Mem281[sp_1897 + 28<i32>:word32] = r5_265
l00004AD2:
	r11_283 = Mem260[Mem260[r6_125 + -64<i32>:word32]:word32]
	r9_284 = Mem260[r11_283 + 16<i32>:word32]
	branch r9_284 >=u Mem260[r11_283 + 28<i32>:word32] l00004AE8
l00004AE8:
	call Mem260[r6_125 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_270,Mem:Mem260,pc:pc_2100,r0:r0_253,r1:r1_256,r12:0xA<32>,r2:r2_257,r3:r3_258,r4:r4_266,r5:r5_289,r6:r6_249,r7:r7_264
		defs: lr:lr_299,pc:pc_2100,r0:r0_291,r1:r1_292,r2:r2_293,r3:r3_294,r4:r4_295,r6:r6_297,sp:sp_290
	Mem306[sp_1897 + 28<i32>:word32] = r3
l00004ADE:
	Mem307[sp_1897 + 28<i32>:word32] = r3
	Mem309[r9_284:byte] = 0xA<8>
	Mem311[r11_283 + 16<i32>:word32] = r9_284 + 1<i32>
l00004B04:
	r5_109 = Mem313[Mem313[Mem313[r6_125 + 8<i32>:word32] + 16<i32>:word32] + r0 * 4<32>:word32]
	r0 = r0 + 1<32>
	fn00004864(r0, r1, r2, r3, Mem313[sp_1897 + 28<i32>:word32], r5_109, lr, out lr_327)
	fn00004374(r0, r1, r2, r3, r4_123, r5_109, r5_109, lr_327, out r12_342, out lr)
	r10_186 = Mem313[sp_1897 + 20<i32>:word32]
	r4_123 = r12_342
	r7_111 = Mem313[Mem313[Mem313[sp_1897 + 24<i32>:word32] + 8<i32>:word32] + r10_186 * 4<32>:word32]
l00004B2E:
l00004B9E:
	r11_1990 = Mem355[Mem355[r6_125 + -64<i32>:word32]:word32]
	r9_358 = Mem355[r11_1990 + 16<i32>:word32]
	branch r9_358 >=u Mem355[r11_1990 + 28<i32>:word32] l00004BB4
l00004BB4:
	call Mem355[r6_125 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_372,Mem:Mem355,pc:pc_2101,r0:r0_363,r1:r1_364,r12:0xA<32>,r2:r2_365,r3:r3_367,r4:r4_369,r5:r5_370,r6:r6_354,r7:r7_371
		defs: lr:lr_383,pc:pc_2101,r10:r10_385,r11:r11_386
l00004BAA:
	Mem391[r9_358:byte] = 0xA<8>
	Mem393[r11_1990 + 16<i32>:word32] = r9_358 + 1<i32>
l00004998:
l000049E6:
	r11_1990 = fn00004458(r0, r1, r2, r3, r4, r5, 1<32>, lr, out r12_398, out lr)
	r9_405 = Mem38[r8_33 + 12<i32>:word32]
	r10_186 = CONVERT(r9_405 != 0<32>, bool, word32)
	r0_2057 = r10_186 + r9_405 /u r12_398
l00004A82:
	branch Mem420[sp_1897 + 12<i32>:word32] != r0_2057 l00004A10
l00004A10:
	r7_426 = Mem420[sp_1897 + 12<i32>:word32]
	r4_429 = Mem420[sp_1897 + 12<i32>:word32] << 2<i32>
	Mem431[sp_1897 + 32<i32>:word32] = r0_2057 << 2<32>
	Mem432[sp_1897 + 36<i32>:word32] = 0<32>
	r2_427 = 0<32>
l00004A20:
	r3_435 = Mem434[r6_125 + 8<i32>:word32]
	r5_441 = Mem434[Mem434[r3_435 + 16<i32>:word32] + r4_429:word32]
	r4_429 = r4_429 + Mem434[sp_1897 + 32<i32>:word32]
	fn00004374(r0_2057, r1, r2_427, r3_435, r4_429, r5_441, r5_441, lr, out r12_453, out lr_450)
	r11_460 = Mem434[sp_1897 + 16<i32>:word32]
	r10_461 = Mem434[sp_1897 + 36<i32>:word32]
	Mem462[sp_1897 + 8<i32>:word32] = r12_453
	r1 = Mem462[Mem462[r11_460 + 8<i32>:word32] + r10_461:word32]
	Mem469[sp_1897 + 36<i32>:word32] = r10_461 + 4<32>
	r10_186 = fn00004864(r0_2057, r1, r2_427, r3_435, r2_427, r5_441, lr_450, out lr)
	r7_426 = r7_426 + r0_2057
	branch r7_426 >=u Mem469[r3_435 + 12<i32>:word32] l00004A62
l00004A62:
	r11_1990 = Mem469[Mem469[r6_125 + -64<i32>:word32]:word32]
	r9_485 = Mem469[r11_1990 + 16<i32>:word32]
	branch r9_485 >=u Mem469[r11_1990 + 28<i32>:word32] l00004A76
l00004A76:
	call Mem469[r6_125 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_470,Mem:Mem469,pc:pc_2104,r0:r0_422,r1:r1_465,r12:0xA<32>,r2:r2_448,r3:r3_435,r4:r4_445,r5:r5_441,r6:r6_2058,r7:r7_438
		defs: lr:lr_499,pc:pc_2104,r0:r0_491,r1:r1_492,r10:r10_501,r11:r11_502,r6:r6_497,sp:sp_490
l00004A6E:
	Mem507[r9_485:byte] = 0xA<8>
	Mem509[r11_1990 + 16<i32>:word32] = r9_485 + 1<i32>
l00004A7C:
	Mem515[sp_1897 + 12<i32>:word32] = Mem511[sp_1897 + 12<i32>:word32] + 1<32>
l00004A50:
	r5_517 = r1 + r2_427
	lr = fn00002D38(r4_429, r5_517, Mem469[sp_1897 + 8<i32>:word32] + r2_427, lr)
	r2_427 = r5_517
l00004A88:
l00004994:
l000049B0:
	r7_532 = 0<32>
l000049DA:
	r9_535 = Mem534[r6_125 + 8<i32>:word32]
	branch r7_532 <u Mem534[r9_535 + 12<i32>:word32] l000049B4
l000049B4:
	r10_186 = fn00004864(r0, r1, r2, r3, 0<32>, Mem534[Mem534[r9_535 + 16<i32>:word32] + r7_532 * 4<32>:word32], lr, out lr)
	r11_1990 = Mem534[Mem534[r6_125 + -64<i32>:word32]:word32]
	r9_560 = Mem534[r11_1990 + 16<i32>:word32]
	branch r9_560 >=u Mem534[r11_1990 + 28<i32>:word32] l000049D2
l000049D2:
	call Mem534[r6_125 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,Mem:Mem534,pc:pc_2105,r0:r0_543,r1:r1_544,r12:0xA<32>,r2:r2_545,r3:r3_546,r4:r4_565,r5:r5_566,r6:r6_533,r7:r7_537
		defs: lr:lr_577,pc:pc_2105,r0:r0_569,r1:r1_570,r10:r10_579,r11:r11_580,r2:r2_571,r3:r3_572,r4:r4_573,r5:r5_574,r6:r6_575,r7:r7_576
l000049CA:
	Mem585[r9_560:byte] = 0xA<8>
	Mem587[r11_1990 + 16<i32>:word32] = r9_560 + 1<i32>
l000049D8:
	r7_532 = r7_532 + 1<32>
l000049E2:
l00004990:
l000049A4:
	r0_2036 = 0<32>
l0000510A:
	r9_594 = Mem593[r6_125 + 8<i32>:word32]
	branch r0_2036 <u Mem593[r9_594 + 12<i32>:word32] l00004BC0
l00004BC0:
	r7_600 = Mem593[Mem593[r9_594 + 16<i32>:word32] + r0_2036 * 4<32>:word32]
	r5_601 = CONVERT(Mem593[r7_600 + 116<i32>:byte], byte, word32)
	branch r5_601 == 0<32> l00004BDC
l00004BDC:
	r8_608 = CONVERT(Mem593[Mem593[r7_600 + -24<i32>:word32] + 0x000065AC<p32> + 64<i32>:byte], byte, word32)
	Mem613[sp_1897 + 5340<i32>:byte] = SLICE(r8_608, byte, 0)
	call Mem613[r6_125 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_618,Mem:Mem613,pc:pc_2106,r0:r0_596,r1:r1_614,r10:0xA<32>,r11:0x3F<32>,r12:sp_610 + 0x14DD<32>,r2:r2_615,r3:r3_616,r4:r4_617,r5:r5_601,r6:r6_592,r7:r7_600,r8:r8_608,r9:0x000065AC<p32>
		defs: lr:lr_628,pc:pc_2106,r0:r0_620,r1:r1_621,r2:r2_622,r3:r3_623,r4:r4_624,r5:r5_625,r6:r6_626,r7:r7_627,sp:sp_619
	Mem635[sp_1897 + 5351<i32>:byte] = SLICE(r5_601, byte, 0)
l00004BCE:
	fn00007130(r10_186, sp_1897 + 0x14DC<32>, r7_600 + 8<32>)
l00004BFC:
	r8_650 = CONVERT(Mem648[Mem648[r6_125 + 8<i32>:word32] + 28<i32>:byte], byte, word32)
	branch r8_650 == 0<32> l00004C16
l00004C06:
	r8_654 = Mem648[r7_600 + -8<i32>:word32]
	branch r8_654 != 1<32> l00004C10
l00004C10:
	branch r8_654 != 2<32> l00004C1A
l00004C14:
	r8_650 = 0x2B<32>
l00004C0C:
	r8_650 = 0x2E<32>
l00004C16:
	Mem664[sp_1897 + 5350<i32>:byte] = SLICE(r8_650, byte, 0)
l00004C1A:
	r8_669 = Mem667[Mem667[r6_125 + 8<i32>:word32] + 316<i32>:word32]
	branch r8_669 == 0<32> l00004C34
l00004C34:
	r9_674 = Mem667[r7_600 + -48<i32>:word32]
	r8_675 = Mem667[r7_600 + -44<i32>:word32]
l00004C24:
	branch r8_669 == 1<32> l00004C2E
l00004C2E:
	r9_674 = Mem667[r7_600 + -40<i32>:word32]
	r8_675 = Mem667[r7_600 + -36<i32>:word32]
l00004C28:
	branch r8_669 != 2<32> l00004C40
l00004C40:
	call Mem667[r6_125 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_702,Mem:Mem667,pc:pc_2107,r0:r0_684,r1:r1_687,r12:r12_718,r2:r2_690,r3:r3_693,r4:r4_696,r5:r5_699,r6:r6_647,r7:r7_653
		defs: lr:lr_713,pc:pc_2107,r0:r0_705,r1:r1_706,r12:r12_718,r2:r2_707,r3:r3_708,r4:r4_709,r5:r5_710,r6:r6_711,r7:r7_712,r8:r8_714,r9:r9_717,sp:sp_704
l00004C2C:
l00004C3A:
	r9_674 = Mem667[r7_600 + -56<i32>:word32]
	r8_675 = Mem667[r7_600 + -52<i32>:word32]
l00004C44:
	Mem724[sp_1897 + 5356<i32>:word32] = r8_675
	r8_726 = Mem724[r6_125 + 8<i32>:word32]
	Mem728[sp_1897 + 5352<i32>:word32] = r9_674
	branch Mem728[r8_726 + 98<i32>:byte] != 0<8> l00004C60
l00004C60:
	r11_r10_734 = Mem728[r7_600 + 96<i32>:word64]
	r10_735 = SLICE(r11_r10_734, word32, 0) (alias)
	r11_737 = SLICE(r11_r10_734, word32, 32) (alias)
	branch r11_737 != SLICE(cond(r10_735 - 0<32>), bool, 0) l00004C70
l00004C70:
	fn0000B7D4(r10_735, r11_737, sp_1897 + 0xE64<32>, out r9_2572, out r10_2573, out r11_2574, out r12_746, out lr)
	r9_753 = r12_746
l00004C6A:
	r9_753 = Mem728[r6_125 + 140<i32>:word32]
l00004C7A:
	r11_761 = Mem728[r6_125 + 184<i32>:word32]
	r8_762 = Mem728[Mem728[r6_125 + 8<i32>:word32] + 32<i32>:word32]
	sp_764 = sp_1897 - 4<i32>
	Mem766[sp_764:word32] = r9_753
	Mem768[sp_764 - 4<i32>:word32] = r8_762
	r5_759 = sp_1897 + 0x28<32>
	call Mem768[r6_125 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_780,Mem:Mem768,pc:pc_2109,r0:r0_770,r1:r1_772,r11:r11_761,r12:r5_759,r2:r2_774,r3:r3_776,r4:r4_778,r5:r5_759,r6:r6_725,r7:r7_733,r8:r8_762
		defs: lr:lr_791,r0:r0_783,r1:r1_784,r2:r2_785,r3:r3_786,r4:r4_787,r5:r5_788,r6:r6_789,r7:r7_790
	call Mem768[r6_789 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_791,Mem:Mem768,pc:pc_2109,r0:r0_783,r1:r1_784,r12:r5_788,r2:r2_785,r3:r3_786,r4:r4_787,r5:r5_788,r6:r6_789,r7:r7_790
		defs: pc:pc_2109,r0:r0_800,r1:r1_801,r12:r12_813,r2:r2_802,r3:r3_803,r5:r5_805,r6:r6_806,r7:r7_807,sp:sp_799
	sp_1897 = sp_799 + 8<32>
	r4_816 = r5_601 + r12_813
l00004C5A:
	r4_816 = sp_1897 + 0x28<32>
l00004C9C:
	lr_822 = Mem821[r6_125 + 8<i32>:word32]
	branch Mem821[lr_822 + 114<i32>:byte] == 0<8> l00004D02
l00004CAA:
	branch Mem821[r7_600 + 116<i32>:byte] != 0<8> l00004CBA
l00004CBA:
	sp_833 = sp_1897 - 8<i32>
	Mem836[sp_833:word64] = Mem821[lr_822 + 120<i32>:word64]
	Mem843[sp_833 - 8<i32>:word64] = 0x200<64>
	r0_2036 = fn000093B8(r0_2036, r1, r2, r3, r4_816, r5_601, Mem843[lr_822 + -12<i32>:word32], sp_833 + 0x1258<32>, Mem843[sp_833 - 8<i32>:word64], Mem843[sp_833:word64], Mem843[sp_833 + 8<i32>:word32], Mem843[sp_833 + 12<i32>:word32], Mem843[sp_833 + 16<i32>:word64], Mem843[sp_833 + 28<i32>:word32], Mem843[sp_833 + 32<i32>:word32], Mem843[sp_833 + 48<i32>:word32], Mem843[sp_833 + 52<i32>:word32], Mem843[sp_833 + 56<i32>:word32], out r1, out r2, out r3_2567, out r4_816, out r5_2568, out r6_125, out r7_600, out r10_2569, out r11_2570, out r12_859, out lr_822)
l00004CB4:
	r12_859 = Mem821[r6_125 + 140<i32>:word32]
l00004CD8:
	r5_879 = Mem876[Mem876[r6_125 + 8<i32>:word32] + 36<i32>:word32]
	fn00006AA8(r0_2036, r1, r2, r12_859, r4_816, r5_879, r6_125, r7_600, 0<32>, r12_859, lr_822, out r11_2571, out r12_891, out lr_822)
	r3_881 = r12_859
	r5_601 = r5_879 + r12_891
l00004CEE:
	branch r5_601 > 0<32> l00004CE8
l00004CE8:
	Mem907[r4_816:byte] = 0x20<8>
	r5_601 = r5_601 - 1<32>
	r4_816 = r4_816 + 1<i32>
l00004CF4:
	r8_913 = CONVERT(Mem910[r3_881:byte], byte, word32)
	Mem915[r4_816:byte] = SLICE(r8_913, byte, 0)
	r3_881 = r3_881 + 1<i32>
	r4_816 = r4_816 + 1<i32>
	branch r8_913 != 0<32> l00004CF4
l00004CFC:
	Mem920[r4_816 + -1<i32>:byte] = 0x20<8>
l00004D02:
	branch Mem924[r7_600 + 116<i32>:byte] != 0<8> l00004D14
l00004D14:
	fn0000B7D4(Mem924[r7_600 + 28<i32>:word32], 0<32>, sp_1897 + 0xE64<32>, out r9_2575, out r10_2576, out r11_2577, out r12_940, out lr_822)
	r9_947 = r12_940
l00004D0E:
	r9_947 = Mem924[r6_125 + 140<i32>:word32]
l00004D22:
	r3_954 = Mem924[r6_125 + 8<i32>:word32]
	r11_955 = Mem924[r6_125 + 1132<i32>:word32]
	r8_956 = Mem924[r3_954 + 40<i32>:word32]
	sp_961 = sp_1897 - 4<i32>
	Mem963[sp_961:word32] = r9_947
	Mem965[sp_961 - 4<i32>:word32] = r8_956
	Mem969[sp_961 - 8<i32>:word32] = sp_961 + 0x14E0<32>
	call Mem969[r6_125 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_986,Mem:Mem969,pc:pc_1024,r0:r0_971,r1:r1_975,r11:r11_955,r12:r4_958,r2:r2_979,r3:r3_954,r4:r4_958,r5:r5_983,r6:r6_948,r7:r7_921,r8:sp_961 + 0x14E0<32>
		defs: lr:lr_999,r0:r0_991,r2:r2_993,r3:r3_994,r4:r4_995,r5:r5_996,r6:r6_997,r7:r7_998
	call Mem969[r6_997 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_999,Mem:Mem969,pc:pc_1024,r0:r0_991,r1:0<32>,r12:r4_995,r2:r2_993,r3:r3_994,r4:r4_995,r5:r5_996,r6:r6_997,r7:r7_998
		defs: lr:lr_1018,pc:pc_1024,r0:r0_1010,r1:r1_1011,r12:r12_1023,r2:r2_1012,r3:r3_1013,r4:r4_1014,r5:r5_1015,r6:r6_1016,r7:r7_1017,sp:sp_1009
	sp_1026 = sp_1009 + 0xC<32>
	r4_1028 = r4_1014 + r12_1023
	branch Mem969[r3_1013 + 356<i32>:byte] == SLICE(r1_1011, byte, 0) l00004D64
l00004D50:
	r8_1031 = Mem969[r6_1016 + 40<i32>:word32]
	call Mem969[r6_1016 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1018,Mem:Mem969,pc:pc_1049,r0:r0_1010,r1:r1_1011,r11:Mem969[r8_1031:word32],r12:Mem969[r6_1016 + 268<i32>:word32],r2:r2_1012,r3:r3_1013,r4:r4_1028,r5:r5_1015,r6:r6_1016,r7:r7_1017,r8:r8_1031
		defs: lr:lr_1043,pc:pc_1049,r0:r0_1035,r1:r1_1036,r12:r12_1048,r3:r3_1038,r4:r4_1039,r5:r5_1040,r6:r6_1041,r7:r7_1042,sp:sp_1034
	Mem1054[r3_1013 + 76<i32>:word32] = Mem969[r3_1013 + -52<i32>:word32] + 2<32>
l00004D64:
	r2_1057 = Mem1056[r6_1016 + 48<i32>:word32]
	branch (CONVERT(Mem1056[r2_1057 + 3<i32>:byte], byte, word32) | CONVERT(Mem1056[r2_1057 + 2<i32>:byte], byte, word32) | CONVERT(Mem1056[r3_1013 + 128<i32>:byte], byte, word32) | CONVERT(Mem1056[r3_1013 + 112<i32>:byte], byte, word32)) == 0<32> l00004E14
l00004D7A:
	r8_1068 = Mem1056[r6_1016 + 40<i32>:word32]
	r5_1070 = sp_1026 + 0x28<32>
	call Mem1056[r6_1016 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1078,Mem:Mem1056,pc:pc_1094,r0:r0_1074,r1:r1_1075,r11:Mem1056[r8_1068:word32],r12:r5_1070,r2:r2_1057,r3:r3_1058,r4:r4_1076,r5:r5_1070,r6:r6_1055,r7:r7_1077,r8:r8_1068
		defs: lr:lr_1088,pc:pc_1094,r0:r0_1080,r1:r1_1081,r12:r12_1093,r2:r2_1082,r3:r3_1083,r4:r4_1084,r5:r5_1085,r6:r6_1086,r7:r7_1087,sp:sp_1079
	r9_1097 = CONVERT(Mem1056[r2_1057 + 2<i32>:byte], byte, word32)
	Mem1100[r3_1083 + 76<i32>:word32] = r4_1084 + r5_1085 + Mem1056[r3_1083 + -52<i32>:word32]
	branch SLICE(r9_1097, byte, 0) == SLICE(r1_1011, byte, 0) l00004DA8
l00004D9C:
	r0_1010 = fn00003904(r0_1010, r1_1011, r2_1057, r3_1083, r4_1084, CONVERT(Mem1100[r7_1017 + 116<i32>:byte], byte, word32), Mem1100[r3_1083 + 44<i32>:word32], Mem1100[r7_1017 + 32<i32>:word32], lr_1018, out r1_1011, out r2_1057, out r3_1083, out r12_1023, out lr_1018)
l00004DA8:
	branch Mem1100[r2_1057 + 3<i32>:byte] == SLICE(r1_1011, byte, 0) l00004DE0
l00004DB0:
	r4_1129 = Mem1100[r3_1083 + 48<i32>:word32]
	r5_1130 = Mem1100[r7_1017 + 36<i32>:word32]
	branch Mem1100[r7_1017 + 116<i32>:byte] != SLICE(r1_1011, byte, 0) l00004DC4
l00004DC4:
	branch Mem1100[r3_1083 + 88<i32>:byte] == SLICE(r1_1011, byte, 0) l00004DD2
l00004DD2:
	r12_1138 = fn00009A5C(r5_1130, r7_1017, r5_1130, lr_1018)
l00004DCE:
	r12_1138 = 0<32>
l00004DBE:
	r12_1138 = Mem1100[r6_1016 + 140<i32>:word32]
l00004DD8:
	r0_1010 = fn00003198(r0_1010, r1_1011, r2_1057, r3_1083, r4_1129, r4_1129, r5_1130, r12_1138, lr_1018, out r1_1011, out r2_1057, out r3_2578, out r12_1023, out lr_1018)
l00004DE0:
	r3_1013 = Mem1100[r6_1016 + 8<i32>:word32]
	branch Mem1100[r3_1013 + 128<i32>:byte] == 0<8> l00004DFA
l00004DEE:
	r0_1010 = fn00003904(r0_1010, r1_1011, r2_1057, r3_1013, 0<32>, CONVERT(Mem1100[r7_1017 + 116<i32>:byte], byte, word32), Mem1100[r3_1013 + 52<i32>:word32], Mem1100[r7_1017 + 32<i32>:word32], lr_1018, out r1_1011, out r2_1057, out r3_1013, out r12_1023, out lr_1018)
l00004DFA:
	r5_1015 = sp_1026 + 0x28<32>
	branch Mem1100[r3_1013 + 112<i32>:byte] == 0<8> l00004E12
l00004E08:
	r0_1010 = fn00003198(r0_1010, r1_1011, r2_1057, r3_1013, 0<32>, Mem1100[r3_1013 + 56<i32>:word32], 0<32>, Mem1100[r7_1017 + -16<i32>:word32], lr_1018, out r1_1011, out r2_1057, out r3_1013, out r12_1023, out lr_1018)
l00004E12:
	r4_1028 = sp_1026 + 0x28<32>
l00004E14:
	branch Mem1242[r7_1017 + 116<i32>:byte] != 0<8> l00004E28
l00004E28:
	r8_1248 = Mem1242[r7_1017 + 24<i32>:word32]
	branch (r8_1248 & 0xF000<32>) == 0x2000<32> l00004E3A
l00004E34:
	branch (r8_1248 & 0xF000<32>) != 0x6000<32> l00004E9E
l00004E9E:
	sp_1261 = sp_1026 - 8<i32>
	Mem1264[sp_1261:word64] = Mem1242[Mem1242[r6_1016 + 48<i32>:word32] + 4<i32>:word64]
	Mem1271[sp_1261 - 8<i32>:word64] = 1<64>
	r0_1010 = fn000093B8(r0_1010, r1_1011, r2_1057, r3_1013, r4_1028, r5_1015, Mem1271[Mem1271[r6_1016 + 8<i32>:word32] + -12<i32>:word32], sp_1261 + 0x1258<32>, Mem1271[sp_1261 - 8<i32>:word64], Mem1271[sp_1261:word64], Mem1271[sp_1261 + 8<i32>:word32], Mem1271[sp_1261 + 12<i32>:word32], Mem1271[sp_1261 + 16<i32>:word64], Mem1271[sp_1261 + 28<i32>:word32], Mem1271[sp_1261 + 32<i32>:word32], Mem1271[sp_1261 + 48<i32>:word32], Mem1271[sp_1261 + 52<i32>:word32], Mem1271[sp_1261 + 56<i32>:word32], out r1_1011, out r2_1057, out r3_2587, out r4_1028, out r5_2588, out r6_1016, out r7_1017, out r10_2589, out r11_2590, out r12_1292, out lr_1018)
l00004E3A:
	r3_1309 = Mem1242[r6_1016 + 8<i32>:word32]
	r5_1317 = Mem1242[r3_1309 + -60<i32>:word32] - 2<32> + Mem1242[r3_1309 + -64<i32>:word32] + Mem1242[r3_1309 + 60<i32>:word32]
	fn0000272E()
	fn0000B7D4(r12_1023, 0<32>, sp_1026 + 0x1250<32>, out r9_2580, out r10_2581, out r11_2582, out r12_1341, out lr_2583)
	r1_1348 = Mem1242[r3_1309 + -64<i32>:word32]
	fn00002718()
	fn0000B7D4(r12_1341, 0<32>, sp_1026 + 0xE64<32>, out r9_2584, out r10_2585, out r11_2586, out r12_1366, out lr_1363)
	r9_1373 = Mem1242[r3_1309 + 60<i32>:word32]
	r5_1375 = max<int32>(r5_1317, 0<32>)
	r11_1376 = Mem1242[r6_1016 + 1128<i32>:word32]
	sp_1377 = sp_1026 - 4<i32>
	Mem1378[sp_1377:word32] = r12_1341
	Mem1382[sp_1377 - 4<i32>:word32] = r1_1348
	Mem1384[sp_1377 - 8<i32>:word32] = r12_1366
	r5_1379 = r5_1375 + r9_1373
	Mem1388[sp_1377 - 12<i32>:word32] = r5_1379
	call Mem1388[r6_1016 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_1363,Mem:Mem1388,pc:pc_1405,r0:r0_1275,r1:r1_1348,r11:r11_1376,r12:r4_1283,r2:r12_1341,r3:r3_1309,r4:r4_1283,r5:r5_1379,r6:r6_1254,r7:r7_1240,r8:0<32>,r9:r9_1373
		defs: lr:lr_1399,pc:pc_1405,r0:r0_1391,r2:r2_1393,r3:r3_1394,r4:r4_1395,r5:r5_1396,r6:r6_1397,r7:r7_1398,sp:sp_1390
	sp_1407 = sp_1390 + 0x10<32>
	r4_1028 = r4_1395 + Mem1388[r3_1394 + -60<i32>:word32] + 1<32>
l00004E20:
	r12_1292 = Mem1242[r6_1016 + 140<i32>:word32]
l00004EBE:
	r5_1417 = Mem1414[Mem1414[r6_1016 + 8<i32>:word32] + -60<i32>:word32]
	fn00006AA8(r0_1010, r1_1011, r2_1057, r12_1292, r4_1028, r5_1417, r6_1016, r7_1017, 0<32>, r12_1292, lr_1018, out r11_2579, out r12_1431, out lr_1399)
	sp_1407 = sp_1026
	r3_1394 = r12_1292
	r5_1396 = r5_1417 + r12_1431
l00004ED4:
	branch r5_1396 > 0<32> l00004ECE
l00004ECE:
	Mem1447[r4_1028:byte] = 0x20<8>
	r5_1396 = r5_1396 - 1<32>
	r4_1028 = r4_1028 + 1<i32>
l00004EDA:
	r8_1453 = CONVERT(Mem1450[r3_1394:byte], byte, word32)
	Mem1455[r4_1028:byte] = SLICE(r8_1453, byte, 0)
	r3_1394 = r3_1394 + 1<i32>
	r4_1028 = r4_1028 + 1<i32>
	branch r8_1453 != 0<32> l00004EDA
l00004EE2:
	Mem1460[r4_1028 + -1<i32>:byte] = 0x20<8>
l00004EE8:
	fn00008A6C(r4_1028, r5_1396, r6_1016, r7_1017, lr_1399, out r12_1481, out lr_1479)
	Mem1489[r4_1028:byte] = 1<8>
	r1_1492 = r12_1481
	branch Mem1489[r7_1017 + 116<i32>:byte] == 0<8> l00004F80
l00004F02:
	branch r12_1481 == 0<32> l00004F80
l00004F06:
	r5_1396 = Mem1489[r6_1016 + 8<i32>:word32]
	fn00002744(Mem1489[sp_1407 + 0x14EC<32>:word32], Mem1489[r5_1396 + 0x1EC<32>:word32], out lr_1504)
	N_1508 = <invalid>
	V_1507 = <invalid>
	branch N_1508 | V_1507 l00004F1E
l00004F16:
	r1_1492 = fn0000895C(r0_1010, r12_1481, r2_1057, r3_1394, r4_1028, r5_1396, r6_1016, r7_1017, r5_1396 + 0x1E8<32>, lr_1504)
l00004F1E:
	r3_1549 = Mem1489[sp_1407 + 0x14EC<32>:word32] (alias)
	Mem1543[sp_1407:word32] = Mem1489[r5_1396 + 488<i32>:word32] + Mem1489[0x00004F42<p32>:word32]
	Mem1545[sp_1407 + 4<i32>:word32] = Mem1543[r5_1396 + 492<i32>:word32]
	fn00002744(r3_1549, Mem1545[sp_1407 + 4<32>:word32], out lr_2591)
	N_1557 = <invalid>
	V_1556 = <invalid>
	branch N_1557 | V_1556 l00004F48
l00004F48:
	fn00002744(Mem1545[r5_1396 + 0x1EC<32>:word32], r3_1549, out lr_2592)
l00004F40:
l00004F5C:
	Mem1598[sp_1407 - 4<i32>:word32] = Mem1545[sp_1407 + 5356<i32>:word32]
	r0_1010 = fn0000B7B2(r1_1492, out r1_1492, out r2_1057, out r3_1394, out r12_1604, out lr_1479)
	branch r12_1604 != 0<32> l00004F8C
l00004F80:
	branch Mem1617[r4_1028:byte] != 0<8> l00004F9C
l00004F9C:
	branch Mem1617[r7_1017 + 116<i32>:byte] != 0<8> l00004FAC
l00004FAC:
	r8_1629 = Mem1617[sp_1407 + 5352<i32>:word32]
	r1_1645 = fn00009BC8(r8_1629, r8_1629 >> 0x1F<32>, sp_1407 + 0x1250<32>, out lr_1479)
l00004FA6:
	r1_1645 = Mem1617[r6_1016 + 140<i32>:word32]
l00004FC0:
	r2_1650 = Mem1617[r6_1016 + 48<i32>:word32]
	branch Mem1617[r2_1650 + 12<i32>:word32] >= 0<32> l0000500E
l00004FC8:
	Mem1659[sp_1407 + 0x14F0<32>:word32] = 0<32>
	r5_1396 = 0<32>
	branch fn00008A6C(r4_1028, 0<32>, r6_1016, r7_1017, lr_1479, out r12_1666, out lr_1479) l00005002
l00004FD6:
	Mem1682[sp_1407 - 4<i32>:word32] = 0<32>
	r0_1010 = fn0000B7B2(r12_1666, out r1_1645, out r2_1650, out r3_1394, out r12_1688, out lr_1479)
	branch r12_1688 == 0<32> l00005002
l00004FF6:
	fn00006998(r0_1010, r1_1645, r2_1650, r3_1394, r4_1028, 0<32>, r6_1016, r7_1017, 0<32>, r12_1688, r3_1394, lr_1479, out r11_2593, out r12_1706, out lr_1479)
	Mem1713[r2_1650 + 12<i32>:word32] = r12_1706
l00005002:
	r9_1716 = Mem1715[r6_1016 + 48<i32>:word32]
	branch Mem1715[r9_1716 + 12<i32>:word32] >= 0<32> l0000500E
l0000500A:
	Mem1721[r9_1716 + 12<i32>:word32] = 0<32>
l0000500E:
	r11_1725 = Mem1723[r6_1016 + 184<i32>:word32]
	r8_1726 = Mem1723[Mem1723[r6_1016 + 48<i32>:word32] + 12<i32>:word32]
	sp_1732 = sp_1407 - 4<i32>
	Mem1736[sp_1732:word32] = r1_1645
	Mem1738[sp_1732 - 4<i32>:word32] = r8_1726
	call Mem1738[r6_1016 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_1756,Mem:Mem1738,pc:pc_1791,r0:r0_1739,r1:r1_1733,r11:r11_1725,r12:r4_1467,r2:r2_1743,r3:r3_1745,r4:r4_1467,r5:r5_1749,r6:r6_1470,r7:r7_1473,r8:r8_1726
		defs: lr:lr_1767,r0:r0_1759,r1:r1_1760,r2:r2_1761,r3:r3_1762,r4:r4_1763,r5:r5_1764,r6:r6_1765,r7:r7_1766
	call Mem1738[r6_1765 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1767,Mem:Mem1738,pc:pc_1791,r0:r0_1759,r1:r1_1760,r12:r4_1763,r2:r2_1761,r3:r3_1762,r4:r4_1763,r5:r5_1764,r6:r6_1765,r7:r7_1766
		defs: lr:lr_1785,pc:pc_1791,r0:r0_1777,r1:r1_1778,r12:r12_1790,r2:r2_1779,r4:r4_1781,r6:r6_1783,r7:r7_1784,sp:sp_1776
	sp_1793 = sp_1776 + 8<32>
	r3_1794 = r4_1028 + r12_1790
l00004F8A:
	r12_1604 = 0<32>
l00004F8C:
	r8_1799 = r4_1028 + r12_1604
	Mem1802[r8_1799:byte] = 0x20<8>
	Mem1806[r8_1799 + 1<i32>:byte] = 0<8>
	sp_1793 = sp_1407
	r3_1794 = r8_1799 + 1<i32>
l0000502C:
	r8_1810 = Mem1809[r6_1016 + 40<i32>:word32]
	r5_1813 = sp_1793 + 0x28<32>
	call Mem1809[r6_1016 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1829,Mem:Mem1809,pc:pc_1846,r0:r0_1817,r1:r1_1819,r11:Mem1809[r8_1810:word32],r12:r5_1813,r2:r2_1822,r3:r3_1825,r4:r4_1826,r5:r5_1813,r6:r6_1807,r7:r7_1827,r8:r8_1810
		defs: pc:pc_1846,r0:r0_1832,r1:r1_1833,r2:r2_1834,r3:r3_1835,r5:r5_1837,r6:r6_1838,r7:r7_1839,sp:sp_1831
	r9_1849 = Mem1809[r6_125 + 8<i32>:word32]
	r5_1848 = r3_1835 + r5_1837
	r10_1851 = CONVERT(Mem1809[r9_1849 + 104<i32>:byte], byte, word32)
	Mem1854[r9_1849 + 76<i32>:word32] = r5_1848 + Mem1809[r9_1849 + -52<i32>:word32]
	lr_1855 = CONVERT(Mem1854[r7_1839 + 117<i32>:byte], byte, word32)
	r12_1856 = Mem1854[r7_1839 + 28<i32>:word32]
	r3_1857 = Mem1854[r7_1839 + -24<i32>:word32]
	r9_1860 = CONVERT(Mem1854[r7_1839 + 116<i32>:byte], byte, word32)
	branch (r10_1851 & lr_1855) == 0<32> l00005064
l00005064:
	r11_1862 = Mem1854[r7_1839 + 24<i32>:word32]
l0000505E:
	r11_1862 = Mem1854[r7_1839 + -20<i32>:word32]
l00005066:
	r4 = Mem1854[r6_125 + 8<i32>:word32]
	Mem1870[sp_1831 - 4<i32>:word32] = r5_1848
	Mem1875[sp_1831 - 8<i32>:word32] = r12_1856
	Mem1877[sp_1831 - 12<i32>:word32] = r4 + 0x1F0<32>
	fn000045F0(r2, r3_1857, r3_1857, r9_1860, lr_1855, r11_1862, Mem1877[r7_1839:word32], Mem1877[sp_1831 - 12<i32>:word32], Mem1877[sp_1831 - 8<i32>:word32], Mem1877[sp_1831 - 4<i32>:word32], out r12_1890, out lr)
	sp_1897 = sp_1831
	r10_186 = Mem1877[r7_1839 + -24<i32>:word32]
	r3 = r12_1890
	branch r10_186 != 6<32> l000050D4
l000050D4:
	branch Mem1877[r4 + 24<i32>:word32] == 0<32> l000050E4
l000050DA:
	r12_1905 = CONVERT(Mem1877[r7_1839 + 116<i32>:byte], byte, word32)
	r11_1906 = Mem1877[r7_1839 + 24<i32>:word32]
l00005086:
	branch Mem1877[r7_1839 + 4<i32>:word32] == 0<32> l000050E4
l0000508C:
	r8_1910 = Mem1877[r6_125 + 40<i32>:word32]
	call Mem1877[r6_125 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1887,Mem:Mem1877,pc:pc_1931,r0:r0_1832,r1:r1_1833,r11:Mem1877[r8_1910:word32],r12:Mem1877[r6_1838 + 1124<i32>:word32],r2:0<32>,r3:r12_1890,r4:r4_1866,r5:r5_1848,r6:r6_1838,r7:r7_1839,r8:r8_1910
		defs: pc:pc_1931,r0:r0_1917,r1:r1_1918,r2:r2_1919,r3:r3_1920,r4:r4_1921,r5:r5_1922,r6:r6_1923,r7:r7_1924,sp:sp_1916
	Mem1936[r4 + 76<i32>:word32] = Mem1877[r4 + -52<i32>:word32] + 4<32>
	r10_1938 = CONVERT(Mem1936[r7_1839 + 117<i32>:byte], byte, word32)
	Mem1940[sp_1916 - 4<i32>:word32] = r5_1848 + 4<32> + r3
	Mem1943[sp_1916 - 8<i32>:word32] = Mem1940[r7_1839 + 28<i32>:word32]
	Mem1945[sp_1916 - 12<i32>:word32] = r2
	r10_186 = fn000045F0(r2, r3, Mem1945[r7_1839 + -24<i32>:word32], CONVERT(Mem1945[r7_1839 + 116<i32>:byte], byte, word32), r10_1938 - 1<32>, Mem1945[r7_1839 + -20<i32>:word32], Mem1945[r7_1839 + 4<i32>:word32], Mem1945[sp_1916 - 12<i32>:word32], Mem1945[sp_1916 - 8<i32>:word32], Mem1945[sp_1916 - 4<i32>:word32], out r12_2594, out lr)
	sp_1897 = sp_1916
	branch Mem1945[r4 + 24<i32>:word32] == 0<32> l000050E4
l000050CC:
	r11_1906 = Mem1945[r7_1839 + -20<i32>:word32]
	r10_186 = r2
	r12_1905 = 1<32>
l000050E0:
	r10_186 = fn00002DB4(r4, r5_1848, r10_186, r11_1906, r12_1905, lr, out r12_2595, out lr)
l000050E4:
	r11_1990 = Mem1987[Mem1987[r6_125 + -64<i32>:word32]:word32]
	r9_1991 = Mem1987[r11_1990 + 16<i32>:word32]
	branch r9_1991 >=u Mem1987[r11_1990 + 28<i32>:word32] l000050F8
l000050F8:
	call Mem1987[r6_125 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_2008,Mem:Mem1987,pc:pc_2026,r0:r0_1996,r1:r1_1998,r12:0xA<32>,r2:r2_2000,r3:r3_2002,r4:r4_2004,r5:r5_2005,r6:r6_1985,r7:r7_2006
		defs: lr:lr_2020,pc:pc_2026,r0:r0_2012,r1:r1_2013,r10:r10_2022,r11:r11_2023,r2:r2_2014,r3:r3_2015,r4:r4_2016,r6:r6_2018,sp:sp_2011
l000050F0:
	Mem2029[r9_1991:byte] = 0xA<8>
	Mem2031[r11_1990 + 16<i32>:word32] = r9_1991 + 1<i32>
l000050FE:
	r9_2034 = Mem2033[r6_125 + 8<i32>:word32]
	Mem2040[r9_2034 + 76<i32>:word32] = Mem2033[r9_2034 + -52<i32>:word32] + 1<32>
	r0_2036 = r0_1832 + 1<32>
l00005114:
	r11Out = r11_1990
	lrOut = lr
	return r10_186
fn00004968_exit:


void fn0000511C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000511C_entry:
l0000511C:
	r6_32 = 0x00005124<p32> - Mem29[0x000051E6<p32>:word32]
	call Mem39[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem39,r0:r0,r1:r1,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r7,Stack +0000:r10,Stack +0004:r11,Stack +0008:r12,Stack +02A0:lr,Stack +02A4:r7,Stack +02A8:r6,Stack +02AC:r5,Stack +02B0:r4,Stack +02B4:r3,Stack +02B8:r2,Stack +02BC:r1,Stack +02C0:r0
		defs: lr:lr_49,r0:r0_41,r1:r1_42,r10:r10_51,r11:r11_50,r12:r12_52,r2:r2_43,r3:r3_44,r4:r4_45,r5:r5_46,r6:r6_47,r7:r7_48,sp:sp_40
	Mem57[sp_40 + 12<i32>:word32] = r12_52
	Mem58[r12_52:word32] = 0<32>
	call Mem58[r6_47 + 468<i32>:word32] (retsize: 0;)
		uses: lr:lr_49,Mem:Mem58,r0:r0_41,r1:r1_42,r10:r10_51,r11:r11_50,r12:Mem58[sp_40 + 8<i32>:word32],r2:r2_43,r3:r3_44,r4:r4_45,r5:r5_46,r6:r6_47,r7:r7_48,r8:0<32>
		defs: lr:lr_69,r0:r0_61,r1:r1_62,r10:r10_71,r11:r11_70,r12:r12_72,r2:r2_63,r3:r3_64,r4:r4_65,r5:r5_66,r6:r6_67,r7:r7_68,sp:sp_60,VNZC:VNZC_75
	Mem76[sp_102 + 16<i32>:word32] = r12_72
	branch SLICE(VNZC_75, bool, 1) l00005150
l00005150:
	branch Mem76[Mem76[r6_1022 + 8<i32>:word32] + 324<i32>:word32] == 0<32> l0000521E
l0000515A:
	call Mem76[r6_1022 + 504<i32>:word32] (retsize: 0;)
		uses: lr:lr_69,Mem:Mem76,r0:r0_61,r1:r1_62,r10:r10_71,r11:r11_70,r12:r12_72,r2:r2_63,r3:r3_64,r4:r4_65,r5:r5_66,r6:r6_67,r7:r7_68
		defs: lr:lr_91,r0:r0_83,r1:r1_84,r10:r10_93,r12:r12_94,r2:r2_85,r3:r3_86,r4:r4_87,r5:r5_88,r6:r6_89,r7:r7_90,sp:sp_82
	branch r12_94 < 0<32> l0000516C
l0000516C:
	call Mem76[r6_89 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_91,Mem:Mem76,r0:r0_83,r1:r1_84,r10:r10_93,r11:sp_82 + 0x14<32>,r12:Mem76[sp_82 + 8<i32>:word32],r2:r2_85,r3:r3_86,r4:r4_87,r5:r5_88,r6:r6_89,r7:r7_90
		defs: lr:lr_111,r0:r0_103,r1:r1_104,r12:r12_114,r2:r2_105,r3:r3_106,r5:r5_108,r6:r6_109,r7:r7_110,sp:sp_102
l00005166:
	call Mem76[r6_89 + 524<i32>:word32] (retsize: 0;)
		uses: lr:lr_91,Mem:Mem76,r0:r0_83,r1:r1_84,r10:r10_93,r11:sp_82 + 0x14<32>,r12:r12_94,r2:r2_85,r3:r3_86,r4:r4_87,r5:r5_88,r6:r6_89,r7:r7_90
		defs: lr:lr_127,r0:r0_119,r1:r1_120,r12:r12_130,r2:r2_121,r3:r3_122,r5:r5_124,r6:r6_125,r7:r7_126,sp:sp_118
l00005172:
	r4_135 = r12_114 >>u 0x1F<32>
	branch r4_135 == 0<32> l0000518E
l0000518E:
	r3_r2_141 = Mem76[sp_102 + 108<i32>:word64]
	r1_r0_142 = Mem76[sp_102 + 20<i32>:word64]
	fn0000B95C(r4_135, r5_108, r6_1022, r7_110, 0x10<32>, lr_111, out r9_1596, out r11_1597, out r12_151, out lr_147)
	r7_1057 = Mem76[r6_1022 + 8<i32>:word32]
	Mem162[r12_151:word64] = r3_r2_141
	Mem166[r12_151 + 8<i32>:word64] = r1_r0_142
	r3_160 = SLICE(r3_r2_141, word32, 32) (alias)
	r1_164 = SLICE(r1_r0_142, word32, 32) (alias)
	r0_165 = SLICE(r1_r0_142, word32, 0) (alias)
	r2_1040 = SLICE(r3_r2_141, word32, 0) (alias)
	r5_1027 = r12_151
	branch fn000090C0(r0_165, r1_164, r3_160, r4_135, r12_151, r12_151, Mem166[r7_1057 + 324<i32>:word32], lr_147, out r10_169, out r11_1050, out r12_173, out lr_168) l000051B8
l000051B4:
	r4_135 = fn00006CAC(r4_135, r12_151, r6_1022, r7_1057, lr_168, out r5_1027, out r6_1022, out r7_1057, out r8_1599, out r9_1600, out r10_169, out r11_1050, out r12_173, out lr_168)
	sp_102 = <invalid>
l000051B8:
	branch r12_173 == r5_1027 l000051E8
l000051E8:
	branch Mem166[r7_1057 + 556<i32>:word32] + Mem166[r7_1057 + 552<i32>:word32] > 0xF<32> l00005202
l000051F8:
	call Mem166[r6_1022 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_214,Mem:Mem166,r0:r0_165,r1:r1_164,r10:r10_215,r11:0x10<32>,r12:r7_198 + 0x21C<32>,r2:r2_161,r3:r3_160,r4:r4_213,r5:r5_195,r6:r6_208,r7:r7_198
		defs: lr:lr_226,r11:r11_227,r2:r2_220,r4:r4_222,r5:r5_223,r6:r6_224,r7:r7_225,sp:sp_217
l00005202:
	r10_1049 = Mem166[r7_1057 + 552<i32>:word32]
	Mem239[r7_1057 + 552<i32>:word32] = r10_1049 + 0x10<32>
	Mem244[r10_1049 + 8<i32>:word64] = Mem239[sp_102 + 20<i32>:word64]
	Mem248[r10_1049:word64] = Mem244[sp_102 + 108<i32>:word64]
l0000521E:
	fn00002CBC(r4_135, lr_168, out r9_1593, out r12_1594, out lr_1595)
	r3_1043 = Mem263[r6_1022 + 1108<i32>:word32]
	r0_1034 = 0<32>
	r1_1037 = 0<32>
l0000522A:
	r12_269 = Mem268[sp_102 + 16<i32>:word32]
	lr_270 = Mem268[sp_102 + 12<i32>:word32]
	Mem272[lr_270:word32] = 0<32>
	call Mem272[r6_1022 + 488<i32>:word32] (retsize: 0;)
		uses: lr:lr_270,Mem:Mem272,r0:r0_274,r1:r1_275,r10:r10_281,r11:r11_280,r12:r12_269,r2:r2_276,r3:r3_277,r4:0<32>,r5:r5_278,r6:r6_273,r7:r7_279
		defs: lr:lr_291,r0:r0_283,r1:r1_284,r10:r10_293,r11:r11_292,r12:r12_294,r2:r2_285,r3:r3_286,r4:r4_287,r5:r5_288,r6:r6_289,sp:sp_282,VNZC:VNZC_298
	r7_1057 = r12_294
	branch SLICE(VNZC_298, bool, 1) l000052EC
l000052EC:
	branch Mem272[Mem272[sp_102 + 12<i32>:word32]:word32] == 0<32> l00005308
l000052F4:
	fn00003168(r0_1034, r1_1037, r4_1030, r12_294, Mem272[sp_102 + 8<i32>:word32], r3_1043, Mem272[sp_102:word32], lr_1031, out r9_1608, out r10_1049, out r11_1050, out lr_1609)
	lr_1031 = Mem272[sp_102 + 12<i32>:word32]
	branch Mem272[lr_1031:word32] == 0x4B<32> l0000522A
l00005308:
	call Mem272[r6_1022 + 232<i32>:word32] (retsize: 0;)
		uses: lr:lr_334,Mem:Mem272,r0:r0_283,r1:r1_284,r10:r10_336,r11:r11_335,r12:Mem272[sp_282 + 16<i32>:word32],r2:r2_285,r3:r3_286,r4:r4_287,r5:r5_288,r6:r6_289,r7:r12_294
		defs: lr:lr_346,r0:r0_338,r1:r1_339,r2:r2_340,r3:r3_341,r4:r4_342,r5:r5_343,r6:r6_344,r7:r7_345,sp:sp_337,VNZC:VNZC_353
	branch SLICE(VNZC_353, bool, 1) l0000531C
l00005310:
	fn00003168(r0_338, r1_339, r4_342, r7_345, Mem272[sp_337 + 8<i32>:word32], Mem272[r6_344 + 1104<i32>:word32], Mem272[sp_337:word32], lr_346, out r9_1610, out r10_1611, out r11_1612, out lr_346)
l0000531C:
	r10_375 = fn0000393C(r0_338, r1_339, r2_340, r4_342, r5_343, lr_346, out lr_379)
	r5_388 = Mem272[r6_344 + 8<i32>:word32]
	branch Mem272[r5_388 + 592<i32>:byte] == SLICE(r7_345, byte, 0) l00005334
l0000532C:
	r10_375 = fn00003A44(r0_338, r2_340, r5_388, Mem272[sp_337:word32], Mem272[sp_337 + 8<i32>:word32], lr_379, out lr_379)
l00005334:
	branch (CONVERT(Mem272[r5_388 + 593<i32>:byte], byte, word32) | CONVERT(Mem272[r5_388 + 592<i32>:byte], byte, word32)) == 0<32> l00005442
l00005342:
	branch Mem272[Mem272[r6_344 + 48<i32>:word32] + 16<i32>:byte] != SLICE(r7_345, byte, 0) l00005374
l0000534E:
	r11_421 = Mem272[Mem272[r6_344 + -64<i32>:word32]:word32]
	r9_422 = Mem272[r11_421 + 16<i32>:word32]
	branch r9_422 >=u Mem272[r11_421 + 28<i32>:word32] l00005364
l00005364:
	call Mem272[r6_344 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_433,Mem:Mem272,r0:r0_338,r1:r1_339,r10:r10_434,r11:r11_421,r12:0xA<32>,r2:r2_340,r3:r3_341,r4:r4_342,r5:r5_388,r6:r6_344,r7:r7_345
		defs: lr:lr_445,r0:r0_437,r1:r1_438,r10:r10_447,r2:r2_439,r4:r4_441,r6:r6_443,r7:r7_444,sp:sp_436
l0000535A:
	Mem454[r9_422:byte] = 0xA<8>
	Mem456[r11_421 + 16<i32>:word32] = r9_422 + 1<i32>
l0000536A:
	r9_459 = Mem458[r6_344 + 8<i32>:word32]
	Mem463[r9_459 + 76<i32>:word32] = Mem458[r9_459 + -52<i32>:word32] + 1<32>
l00005374:
	r5_466 = Mem465[r6_344 + 8<i32>:word32]
	r9_468 = CONVERT(Mem465[r5_466 + 356<i32>:byte], byte, word32)
	Mem470[Mem465[r6_344 + 48<i32>:word32] + 16<i32>:byte] = 0<8>
	r3_469 = 0<32>
	branch SLICE(r9_468, byte, 0) == 0<8> l0000539C
l00005388:
	r8_473 = Mem470[r6_344 + 40<i32>:word32]
	call Mem470[r6_344 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_486,Mem:Mem470,r0:r0_476,r1:r1_478,r10:r10_488,r11:Mem470[r8_473:word32],r12:Mem470[r6_464 + 268<i32>:word32],r2:r2_480,r3:0<32>,r4:r4_482,r5:r5_466,r6:r6_464,r7:r7_484,r8:r8_473
		defs: lr:lr_501,r0:r0_493,r1:r1_494,r10:r10_503,r2:r2_495,r3:r3_496,r4:r4_497,r5:r5_498,r6:r6_499,r7:r7_500,sp:sp_492
	Mem512[r5_466 + 76<i32>:word32] = Mem470[r5_466 + -52<i32>:word32] + 2<32>
l0000539C:
	branch Mem514[r5_466 + 356<i32>:byte] == SLICE(r3_469, byte, 0) l000053D2
l000053A6:
	branch Mem514[r5_466 + 608<i32>:word32] + 4<32> <=u Mem514[r5_466 + 612<i32>:word32] l000053C0
l000053B6:
	call Mem514[r6_344 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_533,Mem:Mem514,r0:r0_528,r1:r1_529,r10:r10_534,r11:4<32>,r12:r5_513 + 0x254<32>,r2:r2_530,r3:r3_516,r4:r4_531,r5:r5_513,r6:r6_527,r7:r7_532
		defs: lr:lr_545,r1:r1_538,r5:r5_542,r6:r6_543,sp:sp_536
l000053C0:
	Mem557[Mem514[r5_466 + 608<i32>:word32]:word32] = Mem514[r5_466 + -52<i32>:word32]
	Mem561[r5_466 + 608<i32>:word32] = Mem557[r5_466 + 608<i32>:word32] + 4<32>
l000053D2:
	r3_565 = Mem564[r6_344 + 8<i32>:word32]
	r9_569 = Mem564[sp_337 + 8<i32>:word32]
	r11_570 = Mem564[sp_337 + 4<i32>:word32]
	r10_572 = Mem564[r3_565 + 640<i32>:word32]
	branch r11_570 != 0<32> l000053E6
l000053E2_1:
	r11_570 = r9_569
l000053E6:
	r0_589 = fn0000418C(r1_339, Mem564[r3_565 + -52<i32>:word32], 0<32>, r10_572, r11_570, lr_379, out r1_590, out r2_593, out r3_594, out r4_595, out r5_596, out r6_597, out r7_598, out r10_591, out r11_1617, out r12_601, out lr_588)
	r9_606 = CONVERT(Mem564[r3_594 + 356<i32>:byte], byte, word32)
	Mem609[r3_594 + 76<i32>:word32] = r12_601 + r5_596
	branch SLICE(r9_606, byte, 0) == 0<8> l0000542C
l00005400:
	branch Mem609[r3_594 + 608<i32>:word32] + 4<32> <=u Mem609[r3_594 + 612<i32>:word32] l0000541A
l00005410:
	call Mem609[r6_597 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_588,Mem:Mem609,r0:r0_589,r1:r1_590,r10:r10_591,r11:4<32>,r12:r3_594 + 0x254<32>,r2:r2_593,r3:r3_594,r4:r4_595,r5:r5_596,r6:r6_597,r7:r7_598
		defs: lr:lr_630,r0:r0_622,r1:r1_623,r10:r10_632,r2:r2_624,r3:r3_625,r4:r4_626,r5:r5_627,r6:r6_628,r7:r7_629
l0000541A:
	Mem642[Mem609[r3_594 + 608<i32>:word32]:word32] = Mem609[r3_594 + -52<i32>:word32]
	Mem646[r3_594 + 608<i32>:word32] = Mem642[r3_594 + 608<i32>:word32] + 4<32>
l0000542C:
	r8_650 = Mem649[r6_597 + 40<i32>:word32]
	call Mem649[r6_597 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_666,Mem:Mem649,r0:r0_653,r1:r1_655,r10:r10_668,r11:Mem649[r8_650:word32],r12:Mem649[r6_647 + 1100<i32>:word32],r2:r2_657,r3:r3_659,r4:r4_660,r5:r5_662,r6:r6_647,r7:r7_664,r8:r8_650
		defs: lr:lr_681,r0:r0_673,r1:r1_674,r10:r10_683,r2:r2_675,r3:r3_676,r4:r4_677,r6:r6_679,r7:r7_680
	r9_689 = Mem649[r6_344 + 8<i32>:word32]
	Mem693[r9_689 + 76<i32>:word32] = Mem649[r9_689 + -52<i32>:word32] + 2<32>
l00005442:
	r5_696 = Mem695[r6_344 + 8<i32>:word32]
	branch Mem695[r5_696 + -20<i32>:word32] == 0<32> l00005456
l0000544A:
	branch Mem695[r5_696 + 114<i32>:byte] == 0<8> l0000550A
l00005456:
	branch Mem695[r5_696 + 356<i32>:byte] == 0<8> l00005476
l00005462:
	r8_711 = Mem695[r6_344 + 40<i32>:word32]
	call Mem695[r6_344 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_727,Mem:Mem695,r0:r0_715,r1:r1_717,r10:r10_729,r11:Mem695[r8_711:word32],r12:Mem695[r6_694 + 268<i32>:word32],r2:r2_719,r3:r3_721,r4:r4_723,r5:r5_696,r6:r6_694,r7:r7_725,r8:r8_711
		defs: lr:lr_741,r0:r0_733,r1:r1_734,r10:r10_743,r2:r2_735,r3:r3_736,r4:r4_737,r5:r5_738,r6:r6_739,r7:r7_740
	Mem752[r5_696 + 76<i32>:word32] = Mem695[r5_696 + -52<i32>:word32] + 2<32>
l00005476:
	r8_755 = Mem754[r6_344 + 40<i32>:word32]
	call Mem754[r6_344 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_765,Mem:Mem754,r0:r0_758,r1:r1_759,r10:r10_766,r11:Mem754[r8_755:word32],r12:Mem754[r6_753 + 1096<i32>:word32],r2:r2_760,r3:r3_761,r4:r4_762,r5:r5_763,r6:r6_753,r7:r7_764,r8:r8_755
		defs: lr:lr_777,r0:r0_769,r1:r1_770,r2:r2_771,r3:r3_772,r4:r4_773,r5:r5_774,r6:r6_775,r7:r7_776,sp:sp_768
	r11_787 = Mem754[Mem754[r6_775 + -64<i32>:word32]:word32]
	Mem789[r5_774 + 76<i32>:word32] = Mem754[r5_774 + -52<i32>:word32] + 5<32>
	r10_790 = Mem789[r11_787 + 16<i32>:word32]
	branch r10_790 >=u Mem789[r11_787 + 28<i32>:word32] l000054A0
l000054A0:
	call Mem789[r6_775 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_777,Mem:Mem789,r0:r0_769,r1:r1_770,r10:r10_790,r11:r11_787,r12:0x20<32>,r2:r2_771,r3:r3_772,r4:r4_773,r5:r5_774,r6:r6_775,r7:r7_776
		defs: r0:r0_796,r1:r1_797,r4:r4_800,r6:r6_802,sp:sp_795
l00005496:
l00005498:
	Mem813[r10_790:byte] = 0x20<8>
	Mem815[r11_787 + 16<i32>:word32] = r10_790 + 1<i32>
l000054A6:
	r5_818 = Mem817[r6_775 + 8<i32>:word32]
	r8_821 = Mem817[r5_818 + -52<i32>:word32]
	r9_825 = Mem817[r5_818 + -12<i32>:word32]
	sp_826 = sp_768 - 8<i32>
	Mem829[sp_826:word64] = Mem817[r5_818 + 120<i32>:word64]
	Mem832[r5_818 + 76<i32>:word32] = r8_821 + 1<32>
	Mem839[sp_826 - 8<i32>:word64] = 0x200<64>
	r0_843 = fn000093B8(r0_769, r1_770, 0x200<32>, 0<32>, r4_773, r5_818, r9_825, sp_768 + 0x14<32>, Mem839[sp_826 - 8<i32>:word64], Mem839[sp_826:word64], Mem839[sp_826 + 8<i32>:word32], Mem839[sp_826 + 12<i32>:word32], Mem839[sp_826 + 16<i32>:word64], Mem839[sp_826 + 28<i32>:word32], Mem839[sp_826 + 32<i32>:word32], Mem839[sp_826 + 48<i32>:word32], Mem839[sp_826 + 52<i32>:word32], Mem839[sp_826 + 56<i32>:word32], out r1_844, out r2_848, out r3_1615, out r4_850, out r5_851, out r6_852, out r7_853, out r10_845, out r11_1616, out r12_847, out lr_841)
	r8_860 = Mem839[r6_852 + 40<i32>:word32]
	call Mem839[r6_852 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_841,Mem:Mem839,r0:r0_843,r1:r1_844,r10:r10_845,r11:Mem839[r8_860:word32],r12:r12_847,r2:r2_848,r3:r12_847,r4:r4_850,r5:r5_851,r6:r6_852,r7:r7_853,r8:r8_860
		defs: lr:lr_872,r0:r0_864,r1:r1_865,r10:r10_874,r11:r11_873,r2:r2_866,r3:r3_867,r4:r4_868,r5:r5_869,r6:r6_870,r7:r7_871
	call Mem839[r6_870 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_872,Mem:Mem839,r0:r0_864,r1:r1_865,r10:r10_874,r11:r11_873,r12:r3_867,r2:r2_866,r3:r3_867,r4:r4_868,r5:r5_869,r6:r6_870,r7:r7_871
		defs: lr:lr_890,r0:r0_882,r1:r1_883,r10:r10_892,r12:r12_893,r2:r2_884,r3:r3_885,r4:r4_886,r5:r5_887,r6:r6_888,r7:r7_889
	r11_901 = Mem839[Mem839[r6_344 + -64<i32>:word32]:word32]
	Mem903[r5_696 + 76<i32>:word32] = r12_893 + Mem839[r5_696 + -52<i32>:word32]
	r9_904 = Mem903[r11_901 + 16<i32>:word32]
	branch r9_904 >=u Mem903[r11_901 + 28<i32>:word32] l000054FA
l000054FA:
	call Mem903[r6_344 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_890,Mem:Mem903,r0:r0_882,r1:r1_883,r10:r10_892,r11:r11_901,r12:0xA<32>,r2:r2_884,r3:r3_885,r4:r4_886,r5:r5_887,r6:r6_888,r7:r7_889
		defs: lr:lr_918,r0:r0_910,r1:r1_911,r2:r2_912,r3:r3_913,r4:r4_914,r5:r5_915,r6:r6_916
l000054F2:
	Mem927[r9_904:byte] = 0xA<8>
	Mem929[r11_901 + 16<i32>:word32] = r9_904 + 1<i32>
l00005500:
	r9_932 = Mem931[r6_344 + 8<i32>:word32]
	Mem936[r9_932 + 76<i32>:word32] = Mem931[r9_932 + -52<i32>:word32] + 1<32>
l0000550A:
	branch Mem938[Mem938[r6_344 + 8<i32>:word32] + 12<i32>:word32] == 0<32> l0000556E
l00005512:
	fn00004968(r0_338, r1_339, r2_340, r3_341, r4_342, r5_696, lr_379, out r11_1613, out lr_1614)
l0000523A:
	r11_1050 = Mem272[r6_1022 + 8<i32>:word32]
	r5_1027 = r12_294 + 0x13<32>
	r9_970 = Mem272[r11_1050 + 584<i32>:word32]
	branch r9_970 == 2<32> l00005284
l00005248:
	r10_1049 = CONVERT(Mem272[r12_294 + 0x13<32>:byte], byte, word32)
	branch SLICE(r10_1049, byte, 0) != 0x2E<8> l00005272
l00005272:
	branch r9_970 != 0<32> l00005284
l00005276:
	r0_1034 = fn00003BA4(r0_1034, r1_1037, r2_1040, r3_1043, r4_1030, r12_294 + 0x13<32>, Mem272[r11_1050 + 588<i32>:word32], lr_1031, out r1_1037, out r2_1040, out r3_1043, out r4_1030, out r5_1027, out r6_1022, out r7_1057, out r10_1049, out r11_1050, out r12_986, out lr_1031)
	sp_102 = <invalid>
	branch CONVERT(SLICE(r12_986, byte, 0), byte, word32) != 0<32> l0000522A
l00005252:
	branch r9_970 == 0<32> l0000522A
l00005256:
	r8_1005 = CONVERT(Mem272[r12_294 + 20<i32>:byte], byte, word32)
	r8_1008 = r8_1005
	branch SLICE(r8_1005, byte, 0) == SLICE(r10_1049, byte, 0) l00005262
l0000525E_1:
	r8_1008 = 1<32>
l00005262:
	branch SLICE(r8_1005, byte, 0) != SLICE(r10_1049, byte, 0) l00005266
l00005262_1:
	r8_1008 = 2<32>
l00005266:
	branch Mem272[r12_294 + 0x13<32> + r8_1008:byte] == SLICE(r4_1030, byte, 0) l0000522A
l00005270:
l00005284:
	r0_1034 = fn00003BA4(r0_1034, r1_1037, r2_1040, r3_1043, r4_1030, r5_1027, Mem272[Mem272[r6_1022 + 8<i32>:word32] + -48<i32>:word32], lr_1031, out r1_1037, out r2_1040, out r3_1043, out r4_1054, out r5_1027, out r6_1022, out r7_1057, out r10_1049, out r11_1050, out r12_1051, out lr_1601)
	sp_102 = <invalid>
	branch CONVERT(SLICE(r12_1051, byte, 0), byte, word32) != 0<32> l0000522A
l00005292:
l00005518:
	r8_1068 = CONVERT(Mem272[r7_1057 + 18<i32>:byte], byte, word32)
	branch r8_1068 >u 0xE<32> || r8_1068 <u 1<32> l00005296
l00005526:
	switch (r8_1068 - 1<32>) { l00005530 l00005534 l00005538 l0000553C l00005540 l00005544 l00005548 l0000554C l00005550 l00005554 l00005558 l0000555C l00005560 l00005564 }
l00005564:
l00005568:
	r11_1075 = 8<32>
l00005560:
l0000555C:
l000052B2:
	r11_1075 = 7<32>
l00005558:
l00005554:
l000052AA:
	r11_1075 = 6<32>
l00005550:
l0000554C:
l000052AE:
	r11_1075 = 5<32>
l00005548:
l00005544:
l0000529A:
	r11_1075 = 4<32>
l00005540:
l0000553C:
l000052A2:
	r11_1075 = 3<32>
l00005538:
l00005296:
	r11_1075 = 0<32>
l00005534:
l0000529E:
	r11_1075 = 2<32>
l00005530:
l000052A6:
	r11_1075 = 1<32>
l000052B4:
	lr_1088 = Mem272[sp_102 + 8<i32>:word32]
	Mem1097[sp_102 - 4<i32>:word32] = lr_1088
	r1_r0_1587 = fn00003334(r4_1054, 0<32>, 0<32>, 0<32>, r11_1075, lr_1088, Mem1097[sp_102 - 4<i32>:word32], out r11_r10_1588, out r2_1040, out r3_1043, out r4_1110, out r5_1027, out r6_1022, out r7_1057, out lr_1101)
	r1_r0_1319 = r1_r0_1587 + r11_r10_1588
	r9_1121 = Mem1097[r6_1022 + 8<i32>:word32]
	r11_1050 = SLICE(r11_r10_1588, word32, 32) (alias)
	r10_1049 = SLICE(r11_r10_1588, word32, 0) (alias)
	r0_1034 = SLICE(r1_r0_1319, word32, 0) (alias)
	r1_1037 = SLICE(r1_r0_1319, word32, 32) (alias)
	branch Mem1097[r9_1121 + -20<i32>:word32] != 1<32> l0000522A
l000052D6:
	branch Mem1097[r9_1121 + 136<i32>:word32] != 0xFFFFFFFF<32> l0000522A
l000052DE:
	fn0000393C(r0_1034, r1_1037, r2_1040, r4_1110, r5_1027, lr_1101, out lr_1136)
	r10_1049 = fn00004968(r0_1034, r1_1037, r2_1040, r3_1043, r4_1110, r5_1027, lr_1136, out r11_1050, out lr_1147)
	fn00002CBC(r4_1110, lr_1147, out r9_1605, out r12_1606, out lr_1607)
l000051BC:
	call Mem166[r6_1022 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_214,Mem:Mem166,r0:r0_165,r1:r1_164,r10:r10_215,r11:r11_1163,r12:r5_195,r2:r2_161,r3:r3_160,r4:r4_213,r5:r5_195,r6:r6_208,r7:r7_198
		defs: lr:lr_1173,r0:r0_1165,r1:r1_1166,r2:r2_1167,r3:r3_1168,r4:r4_1169,r5:r5_1170,r6:r6_1171,r7:r7_1172,sp:sp_1164
	fn0000A778(Mem166[sp_1164 + 8<i32>:word32], lr_1173, out r9_1602, out r10_1603, out r11_1604, out r12_1186, out lr_1182)
	r10_1193 = Mem166[r6_1171 + 1112<i32>:word32]
	Mem1196[sp_1164 - 4<i32>:word32] = r12_1186
	call Mem1196[r6_1171 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_1182,Mem:Mem1196,r0:r0_1165,r1:r1_1166,r10:r10_1193,r11:r4_1169,r12:r4_1169,r2:r2_1167,r3:r3_1168,r4:r4_1169,r5:r5_1170,r6:r6_1171,r7:r7_1172
		defs: lr:lr_1207,r0:r0_1199,r1:r1_1200,r10:r10_1209,r11:r11_1208,r2:r2_1201,r3:r3_1202,r4:r4_1203,r5:r5_1204,r6:r6_1205,r7:r7_1206,sp:sp_1198
	call Mem1196[r6_1205 + 232<i32>:word32] (retsize: 0;)
		uses: lr:lr_1207,Mem:Mem1196,r0:r0_1199,r1:r1_1200,r10:r10_1209,r11:r11_1208,r12:Mem1196[sp_1198 + 20<i32>:word32],r2:r2_1201,r3:r3_1202,r4:r4_1203,r5:r5_1204,r6:r6_1205,r7:r7_1206
l00005178:
	fn00003168(r0_103, r1_104, r4_135, r7_110, Mem76[sp_102 + 8<i32>:word32], Mem76[r6_1022 + 1116<i32>:word32], Mem76[sp_102:word32], lr_111, out r9_1598, out r10_1242, out r11_1243, out lr_1240)
	call Mem76[r6_1022 + 232<i32>:word32] (retsize: 0;)
		uses: lr:lr_1240,Mem:Mem76,r0:r0_1238,r1:r1_1239,r10:r10_1242,r11:r11_1243,r12:Mem76[sp_139 + 16<i32>:word32],r2:r2_1252,r3:r3_1253,r4:r4_135,r5:r5_143,r6:r6_144,r7:r7_145
l00005140:
	fn00003168(r0_61, r1_62, r4_135, r7_1057, Mem76[sp_102 + 8<i32>:word32], Mem76[r6_1022 + 1120<i32>:word32], Mem76[sp_102:word32], lr_168, out r9_1589, out r10_1590, out r11_1591, out lr_1592)
l0000556E:
	return
fn0000511C_exit:


word32 fn000066CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
// MayUse: 
// LiveOut: r12
// Trashed: VNZC r12
// Preserved: sp
fn000066CC_entry:
l000066CC:
	return 0<32>
fn000066CC_exit:


bool fn000066D0(word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
// MayUse:  lr:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: Z lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000066D0_entry:
l000066D0:
	r6_140 = 0x000066D4<p32> - Mem29[0x0000675A<p32>:word32]
	branch r11 >=u 0x401<32> l000066E4
l000066E0_1:
	r7 = r11 + 1<32>
l000066E4:
	branch r11 <u 0x401<32> l000066E8
l000066E4_1:
	r7 = 0x401<32>
l000066E8:
	r0_134 = r12
l000066EE:
	call Mem29[r6_140 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_55,Mem:Mem29,r0:r0_49,r1:r1_50,r11:r11_56,r12:r7_45,r2:r2_51,r3:r3_52,r4:r4_53,r5:r5_54,r6:r6_47,r7:r7_45
		defs: lr:lr_67,r0:r0_59,r1:r1_60,r10:r10_72,r11:r11_68,r12:r12_71,r2:r2_61,r5:r5_64,r6:r6_65,r7:r7_66,r8:r8_70,r9:r9_69,VNZC:VNZC_73
	Z_263 = SLICE(VNZC_73, bool, 1) (alias)
	r3_102 = r12_71
	branch Z_263 l00006752
l000066FA:
	call Mem29[r6_65 + 548<i32>:word32] (retsize: 0;)
		uses: lr:lr_67,Mem:Mem29,r0:r0_59,r1:r1_60,r10:r7_66,r11:r12_71,r12:r0_59,r2:r2_61,r3:r12_71,r4:r12_71,r5:r5_64,r6:r6_65,r7:r7_66
		defs: lr:lr_89,r0:r0_81,r1:r1_82,r10:r10_94,r11:r11_90,r12:r12_93,r2:r2_83,r3:r3_84,r4:r4_85,r6:r6_87,r7:r7_88,r9:r9_91,VNZC:VNZC_95
	r5_104 = r12_93
	branch SLICE(VNZC_95, bool, 3) & 0xC<8> l00006722
l00006708:
	call Mem29[r6_105 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_89,Mem:Mem29,r0:r0_81,r1:r1_82,r11:r11_90,r12:r12_93,r2:r2_83,r3:r3_84,r4:r4_85,r5:r12_93,r6:r6_87,r7:r7_88
		defs: lr:lr_107,r0:r0_99,r10:r10_112,r11:r11_108,r12:r12_111,r3:r3_102,r4:r4_103,r5:r5_104,r6:r6_105,r7:r7_106,r9:r9_109
	r2_114 = Mem29[r12_111:word32]
	r1_115 = r12_111
	branch r2_114 == 0x22<32> l00006722
l00006722:
	Z_263 = SLICE(cond(r5_104 - r7_106), bool, 1) (alias)
	branch r5_104 >=u r7_106 l0000672E
l0000672E:
	call Mem29[r6_105 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_130,Mem:Mem29,r0:r0_126,r1:r1_127,r11:r11_131,r12:r4_122,r2:r2_128,r3:r3_129,r4:r4_122,r5:r5_118,r6:r6_124,r7:r7_119
		defs: lr:lr_142,r0:r0_134,r1:r1_135,r11:r11_143,r12:r12_146,r2:r2_136,r3:r3_137,r4:r4_138,r5:r5_139,r6:r6_140,r7:r7_141
	branch r7_141 >u Mem29[0x0000675C<p32>:word32] l00006740
l00006740:
	branch r7_141 <=u Mem29[0x00006764<p32>:word32] l000066EC
l000066EC:
	r7 = Mem29[0x00006758<p32>:word32]
l00006748:
	call Mem29[r6_140 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_142,Mem:Mem29,r0:r0_134,r1:r1_135,r11:r11_143,r12:r12_146,r2:r2_136,r3:r3_137,r4:r4_138,r5:r5_139,r6:r6_140,r7:r7_141
		defs: lr:lr_165,r10:r10_170,r11:r11_166,r12:r12_169,r9:r9_167,VNZC:VNZC_171
	Mem174[r12_169:word32] = 0xC<32>
	Z_263 = SLICE(VNZC_171, bool, 1) (alias)
	r3_102 = 0<32>
	r8_173 = 0xC<32>
l0000673C:
	r7 = r7_141 << 1<i32>
l00006726:
	Mem178[r5_104:byte] = 0<8>
	r8_173 = 0<32>
l00006716:
	call Mem29[r6_105 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_107,Mem:Mem29,r0:r0_99,r1:r12_111,r11:r11_108,r12:r4_103,r2:r2_114,r3:r3_102,r4:r4_103,r5:r5_104,r6:r6_105,r7:r7_106
		defs: lr:lr_189,r1:r1_182,r10:r10_194,r11:r11_190,r2:r2_183,r8:r8_192,r9:r9_191,VNZC:VNZC_195
	Mem197[r1_182:word32] = r2_183
	Z_263 = SLICE(VNZC_195, bool, 1) (alias)
	r3_102 = 0<32>
l00006752:
	r8Out = r8_173
	r9Out = r9_109
	r10Out = r10_112
	r11Out = r11_108
	r12Out = r3_102
	lrOut = lr_107
	return Z_263
fn000066D0_exit:


word32 fn00006768(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006814
// MayUse:  r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r10 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006768_entry:
l00006768:
	r5_21 = 0<32>
	r4_24 = 0<32>
l000067CC:
	r10_27 = Mem26[r12:word32]
	r12_28 = CONVERT(Mem26[r10_27:byte], byte, word32)
	branch r12_28 != 0<32> l00006776
l00006776:
	branch r4_24 == 0<32> l00006794
l00006794:
	branch SLICE(r12_28, byte, 0) != 0x2E<8> l000067AC
l000067AC:
	branch CONVERT(SLICE(fn0000BC98(r12_28), byte, 0), byte, word32) != 0<32> l000067C6
l000067B4:
	branch Mem26[Mem26[r12:word32]:byte] == 0x7E<8> l000067C6
l000067C0:
	r5_21 = r4_24
l0000679C:
	branch r5_21 != 0<32> l000067A8
l000067A8:
	r4_24 = 1<32>
l000067A2:
	r5_21 = r10_27
	r4_24 = 1<32>
l0000677A:
	fn0000BCB0()
	r12_63 = CONVERT(SLICE(r12_28, byte, 0), byte, word32)
	branch r12_63 != 0<32> l000067C4
l00006782:
	branch Mem26[Mem26[r12:word32]:byte] == 0x7E<8> l000067C4
l000067C4:
	r4_24 = 0<32>
l0000678E:
	r5_21 = r12_63
	r4_24 = r12_63
l000067C6:
	Mem81[r12:word32] = Mem26[r12:word32] + 1<32>
l000067D4:
	return r5_21
fn00006768_exit:


word32 fn000067DC(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006814
// MayUse:  r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000067DC_entry:
l000067DC:
	fn0000BCDC()
	r7_22 = r12
	branch CONVERT(SLICE(r12, byte, 0), byte, word32) == 0<32> l000067F0
l000067F0:
	fn0000BCB0()
	branch CONVERT(SLICE(r12, byte, 0), byte, word32) != 0<32> l0000680C
l000067FA:
	branch SLICE(r12, byte, 0) == 0x7E<8> l00006808
l00006804_1:
	r7_22 = r12 + 0x100<32>
l00006808:
	branch SLICE(r12, byte, 0) != 0x7E<8> l0000680C
l00006808_1:
	r7_22 = 0xFFFFFFFF<32>
l000067EC:
	r7_22 = 0<32>
l0000680C:
	return r7_22
fn000067DC_exit:


void fn00006814(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A0C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006814_entry:
l00006814:
	r6_32 = 0x0000681A<p32> - Mem29[0x0000692C<p32>:word32]
	call Mem29[r6_32 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r11:r11,r12:r12,r2:r12,r3:r3,r4:r11,r5:r5,r6:r6_32,r7:r7,Stack +0008:dwLoc30,Stack +0014:lr,Stack +0018:r7,Stack +001C:r6,Stack +0020:r5,Stack +0024:r4,Stack +0028:r3,Stack +002C:r2,Stack +0030:r1,Stack +0034:r0
		defs: lr:lr_47,r0:r0_39,r1:r1_40,r12:r12_48,r2:r2_41,r3:r3_42,r4:r4_43,r5:r5_44,r6:r6_45,sp:sp_38,VNZC:VNZC_53
	Mem54[sp_160 + 8<i32>:word32] = r12_48
	branch SLICE(VNZC_53, bool, 1) l0000683C
l0000683C:
	r9_58 = CONVERT(Mem54[r2_163:byte], byte, word32)
	branch SLICE(r9_58, byte, 0) == 0x2E<8> l0000682A
l00006846:
	branch Mem54[r4_165:byte] == 0x2E<8> l0000682A
l0000682A:
	r8_68 = CONVERT(Mem54[r4_165:byte], byte, word32)
	r2_163 = r2_163 + 1<32>
	r4_165 = r4_165 + 1<32>
	branch SLICE(r9_58, byte, 0) == SLICE(r8_68, byte, 0) l0000683C
l00006836:
	Mem79[sp_160 + 8<i32>:word32] = r9_58 + r8_68
l0000684E:
	Mem82[sp_160 + 16<i32>:word32] = r2_163
	Mem83[sp_160 + 12<i32>:word32] = r4_165
	r12_85 = fn00006768(sp_160 + 0x10<32>)
	r12_96 = fn00006768(sp_160 + 0xC<32>)
	branch r12_85 == 0<32> l00006868
l00006868:
	r8_105 = Mem83[sp_160 + 16<i32>:word32]
l00006864:
	r8_105 = r12_85
l0000686A:
	Mem111[sp_160:word32] = r8_105 + r2_163
	branch r12_96 == 0<32> l00006876
l00006876:
	r10_115 = Mem111[sp_160 + 12<i32>:word32]
l00006872:
	r10_115 = r12_96
l00006878:
	r10_120 = r10_115 + r4_165
	Mem128[sp_160 + 4<i32>:word32] = r10_120
	branch (r12_85 | r12_96) == 0<32> l0000689E
l00006882:
	branch Mem128[sp_160:word32] != r10_120 l0000689E
l00006888:
	call Mem128[r6_45 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_47,Mem:Mem128,r0:r0_39,r1:r1_40,r11:r4_62,r12:r2_56,r2:r2_56,r3:r3_42,r4:r4_62,r5:r5_44,r6:r6_45,r7:r12_85
		defs: r2:r2_163,r4:r4_165,sp:sp_160,VNZC:VNZC_175
	branch SLICE(VNZC_175, bool, 1) l0000689E
l00006892:
	Mem179[sp_160:word32] = Mem128[sp_160 + 16<i32>:word32] + r2_163
	Mem183[sp_160 + 4<i32>:word32] = Mem179[sp_160 + 12<i32>:word32] + r4_165
l0000689E:
	r0_184 = 0<32>
	r1_185 = 0<32>
l00006976:
	branch r0_184 <u Mem432[sp_160:word32] l00006982
l0000697C:
	branch r1_185 >=u Mem432[sp_160 + 4<i32>:word32] l00006990
l00006982:
	r3_199 = r4_165 + r1_185
	r7_203 = r2_163 + r0_184
l000068D8:
	branch r0_184 >=u Mem432[sp_160:word32] l000068E8
l000068DE:
	r12_212 = CONVERT(Mem432[r7_203:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_212, byte, 0), byte, word32) == 0<32> l000068AE
l000068E8:
	branch r1_185 <u Mem432[sp_160 + 4<i32>:word32] l000068F4
l000068F4:
	r12_229 = CONVERT(Mem432[r3_199:byte], byte, word32)
	fn0000BCDC()
	r12_234 = CONVERT(SLICE(r12_229, byte, 0), byte, word32)
	branch r12_234 == 0<32> l000068A4
l000068A4:
	branch r0_184 != Mem432[sp_160:word32] l000068AE
l000068AE:
	r5_254 = fn000067DC(CONVERT(Mem432[r7_203:byte], byte, word32))
	branch r1_185 != Mem432[sp_160 + 4<i32>:word32] l000068BE
l000068BA:
	r12_258 = 0<32>
l000068AA:
	r5_254 = r12_234
l000068BE:
	r12_258 = fn000067DC(CONVERT(Mem432[r3_199:byte], byte, word32))
l000068C2:
	r3_199 = r3_199 + 1<32>
	r7_203 = r7_203 + 1<32>
	branch r5_254 == r12_258 l000068D4
l000068D4:
	r0_184 = r0_184 + 1<32>
	r1_185 = r1_185 + 1<32>
l000068CA:
	r12_289 = r5_254 + r12_258
	branch r12_289 == 0<32> l00006990
l000068D0:
	Mem294[sp_160 + 8<i32>:word32] = r12_289
l000068FE:
l000068EE:
	r10_302 = r2_163 + r0_184
l00006902:
	r10_302 = r10_302 + 1<i32>
	branch Mem432[r10_302:byte] == 0x30<8> l00006900
l00006900:
	r0_184 = r0_184 + 1<32>
l0000690C:
	r10_324 = r4_165 + r1_185
l00006914:
	r10_324 = r10_324 + 1<i32>
	branch Mem432[r10_324:byte] == 0x30<8> l00006912
l00006912:
	r1_185 = r1_185 + 1<32>
l0000691E:
	r7_340 = r2_163 + r0_184
	r5_342 = r4_165 + r1_185
	r3_344 = 0<32>
l00006944:
	r12_347 = CONVERT(Mem432[r7_340:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_347, byte, 0), byte, word32) == 0<32> l00006958
l0000694E:
	r12_356 = CONVERT(Mem432[r5_342:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_356, byte, 0), byte, word32) != 0<32> l00006930
l00006930:
	r0_184 = r0_184 + 1<32>
	r1_185 = r1_185 + 1<32>
	branch r3_344 != 0<32> l00006940
l00006938:
	r3_344 = Mem432[r7_340:byte] + Mem432[r5_342:byte]
l00006940:
	r7_340 = r7_340 + 1<32>
	r5_342 = r5_342 + 1<32>
l00006958:
	r12_382 = CONVERT(Mem432[r7_340:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_382, byte, 0), byte, word32) == 0<32> l00006966
l00006966:
	r12_394 = CONVERT(Mem432[r4_165 + r1_185:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_394, byte, 0), byte, word32) != 0<32> l0000698C
l0000698C:
	r3_344 = 0xFFFFFFFF<32>
l00006972:
	branch r3_344 != 0<32> l0000698E
l00006962:
	r3_344 = 1<32>
l0000698E:
	Mem415[sp_160 + 8<i32>:word32] = r3_344
l00006828:
l00006990:
	return
fn00006814_exit:


word32 fn00006998(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000418C
//      fn00004968
//      fn00006AA8
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006998_entry:
l00006998:
	r6_32 = 0x0000699E<p32> - Mem29[0x00006AA0<p32>:word32]
	call Mem29[r6_32 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r10:r10,r11:r11,r12:r12,r2:r10,r3:r12 + r11,r4:r4,r5:r5,r6:r6_32,r7:r12,Stack +000C:lr,Stack +0010:r7,Stack +0014:r6,Stack +0018:r5,Stack +001C:r4,Stack +0020:r3,Stack +0024:r2,Stack +0028:r1,Stack +002C:r0
		defs: lr:lr_49,r0:r0_41,r1:r1_42,r10:r10_51,r11:r11_52,r12:r12_50,r2:r2_43,r3:r3_44,r6:r6_47,r7:r7_48,sp:sp_40
	branch r12_50 <=u 1<32> l000069B8
l000069B8:
	r12_59 = r7_138
	r10_151 = Mem29[Mem29[r6_132 + 156<i32>:word32]:word32]
	r4_137 = 0<32>
l00006A96:
	branch r12_59 <u r3_124 l00006A74
l00006A74:
	r9_69 = CONVERT(Mem29[r10_151 + CONVERT(Mem29[r12_59:byte], byte, word32) * 2<32>:word16], word16, word32)
	branch Test(NE,SLICE(r9_69, bool, 6)) l00006A84
l00006A84:
	r4_137 = r4_137 + CONVERT(SLICE(r9_69, bool, 9), bool, word32)
	branch Test(EQ,SLICE(r2_136, bool, 1)) l00006A9C
l00006A80:
	r4_137 = r4_137 + 1<32>
l00006A94:
	r12_59 = r12_59 + 1<32>
l00006A9A:
l000069B2:
	r5_125 = r7_138
	r4_137 = 0<32>
l00006A6E:
	branch r5_125 <u r3_124 l000069C4
l000069C4:
	r9_95 = CONVERT(Mem94[r5_125:byte], byte, word32)
	branch SLICE(r9_95, byte, 0) <u 0x20<8> l00006A08
l000069CE:
	branch SLICE(r9_95, byte, 0) <=u 0x23<8> l00006A2C
l000069D8:
	branch SLICE(r9_95, byte, 0) <u 0x25<8> l00006A08
l000069E0:
	branch SLICE(r9_95, byte, 0) <=u 0x3F<8> l00006A2C
l000069EA:
	branch SLICE(r9_95, byte, 0) <u 0x41<8> l00006A08
l000069F2:
	branch SLICE(r9_95, byte, 0) <=u 0x5F<8> l00006A2C
l000069FC:
	branch SLICE(r9_95, byte, 0) <=u 0x7E<8> l00006A2C
l00006A08:
	Mem123[sp_122:word64] = 0<64>
l00006A10:
	call Mem123[r6_132 + 248<i32>:word32] (retsize: 0;)
		uses: lr:lr_139,Mem:Mem123,r0:r0_134,r1:r1_135,r10:r3_124 + r5_125,r11:r5_125,r12:sp_128 + 8<32>,r2:r2_136,r3:r3_124,r4:r4_137,r5:r5_125,r6:r6_132,r7:r7_138,r9:sp_128
		defs: lr:lr_149,r0:r0_141,r1:r1_142,r10:r10_151,r11:r11_152,r12:r12_150,r2:r2_143,r3:r3_144,r4:r4_145,r5:r5_146,r6:r6_147,sp:sp_140
	r7_138 = r12_150
	branch r12_150 != 0xFFFFFFFF<32> l00006A32
l00006A32:
	branch r12_150 != 0xFFFFFFFE<32> l00006A42
l00006A42:
	branch r12_150 != 0<32> l00006A48
l00006A44_1:
	r7_138 = 1<32>
l00006A48:
	fn0000B88C(r0_134, r1_135, r2_136, r3_124, r4_137, r5_125, Mem123[sp_122 + 8<i32>:word32], lr_139, out r0_175, out r1_176, out r2_180, out r3_181, out r10_151, out r11_152, out r12_179, out lr_139)
	N_185 = <invalid>
	V_184 = <invalid>
	branch N_185 | V_184 l00006A54
l00006A54:
	branch Test(EQ,SLICE(r2_180, bool, 1)) l00006A9C
l00006A5A:
	call Mem123[r6_132 + 556<i32>:word32] (retsize: 0;)
		uses: lr:lr_174,Mem:Mem123,r0:r0_175,r1:r1_176,r10:r10_177,r11:r11_178,r12:Mem123[sp_140 + 8<i32>:word32],r2:r2_180,r3:r3_181,r4:r4_145,r5:r5_146,r6:r6_147,r7:r7_194
		defs: lr:lr_204,r0:r0_196,r1:r1_197,r10:r10_206,r11:r11_207,r2:r2_198,r3:r3_199,r4:r4_200,r5:r5_201,r6:r6_202,r7:r7_203,sp:sp_195,VNZC:VNZC_210
	r4_213 = r4_200 + CONVERT(SLICE(VNZC_210, bool, 1), bool, word32)
l00006A50:
	r4_213 = r4_137 + r12_179
l00006A64:
	call Mem123[r6_132 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_230,Mem:Mem123,r0:r0_225,r1:r1_226,r10:r10_231,r11:r11_232,r12:sp_217,r2:r2_227,r3:r3_228,r4:r4_229,r5:r5_219 + r7_220,r6:r6_223,r7:r7_220
		defs: lr:lr_242,r0:r0_234,r1:r1_235,r10:r10_244,r11:r11_245,r2:r2_236,r3:r3_237,r4:r4_238,r5:r5_239,r6:r6_240,r7:r7_241,sp:sp_233,VNZC:VNZC_248
	branch SLICE(VNZC_248, bool, 1) l00006A10
l00006A36:
	branch Test(EQ,SLICE(r2_136, bool, 0)) l00006A9C
l00006A3C:
	r4_137 = r4_137 + 1<32>
	r5_125 = r3_124
l00006A26:
	branch Test(EQ,SLICE(r2_136, bool, 0)) l00006A9C
l00006A9C:
	r4_137 = 0xFFFFFFFF<32>
l00006A2C:
	r5_125 = r5_125 + 1<32>
	r4_137 = r4_137 + 1<32>
l00006A72:
l00006A9E:
	r11Out = r11_152
	r12Out = r4_137
	lrOut = lr_139
	return r10_151
fn00006998_exit:


word32 fn00006AA8(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003198
//      fn000032D0
//      fn00003334
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006AA8_entry:
l00006AA8:
	r6_31 = 0x00006AAC<p32> - Mem29[0x00006AC2<p32>:word32]
	call Mem29[r6_31 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r11:r11,r12:r12,r2:r2,r3:r12,r4:r4,r5:r11,r6:r6_31,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_46,r0:r0_38,r1:r1_39,r12:r12_48,r2:r2_40,r3:r3_41,r4:r4_42,r5:r5_43,r6:r6_44,r7:r7_45
	r10_55 = fn00006998(r0_38, r1_39, r2_40, r3_41, r4_42, r5_43, r6_44, r7_45, r5_43, r12_48, r3_41, lr_46, out r11_56, out r12_57, out lr_54)
	r11Out = r11_56
	r12Out = r12_57
	lrOut = lr_54
	return r10_55
fn00006AA8_exit:


void fn00006AC4(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00006AC4_entry:
l00006AC4:
	r6_19 = 0x00006AC8<p32> - Mem17[0x00006B1A<p32>:word32]
	call Mem17[r6_19 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r11:0x2F<32>,r12:r12,r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_29,r12:r12_31,r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_28
	branch r12_31 == 0<32> l00006ADC
l00006AD8_1:
	r7_28 = r12_31 + 1<32>
l00006ADC:
	branch r12_31 != 0<32> l00006AE0
l00006ADC_1:
	r7_28 = r5_100
l00006AE0:
	branch r7_28 + r5_100 <= 6<32> l00006B14
l00006AEA:
	call Mem17[r6_27 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_29,Mem:Mem17,r10:7<32>,r11:Mem17[r6_27 + 912<i32>:word32],r12:r7_42 - 7<32>,r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_42
		defs: lr:lr_67,r4:r4_63,r5:r5_64,r6:r6_65,r7:r7_66,VNZC:VNZC_72
	branch SLICE(VNZC_72, bool, 1) l00006B14
l00006AFA:
	call Mem17[r6_27 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_67,Mem:Mem17,r10:3<32>,r11:Mem17[r6_65 + 908<i32>:word32],r12:r7_66,r4:r4_63,r5:r5_64,r6:r6_65,r7:r7_66
		defs: r12:r12_84,r5:r5_79,r6:r6_80,r7:r7_81
	branch r12_84 != 0<32> l00006B10
l00006B0C_1:
	r5_100 = r7_81 + 3<32>
l00006B10:
	branch r12_84 == 0<32> l00006B14
l00006B10_1:
	r5_100 = r7_81
l00006B14:
	Mem102[Mem17[r6_27 + 328<i32>:word32]:word32] = r5_100
	return
fn00006AC4_exit:


void fn00006B5C(word32 r0, word32 r1, word32 r2, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006C64
// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006B5C_entry:
l00006B5C:
	r6_20 = 0x00006B62<p32> - Mem17[0x00006C60<p32>:word32]
	r4_28 = 0<32>
	dwLoc18_227 = r8
l00006B74:
	dwLoc18_227 = dwLoc18_227 + 4<32>
	r8_37 = Mem36[dwLoc18_227:word32]
	branch r8_37 != 0<32> l00006B72
l00006B72:
	r4_28 = r4_28 + 1<32>
l00006B82:
	branch r11 == 0<32> l00006B9A
l00006B9A:
	call Mem56[r6_20 + 104<i32>:word32] (retsize: 0;)
		uses: lr:r9,Mem:Mem56,pc:pc,r0:r0,r1:r1,r10:r10,r11:Mem36[r6_20 + 876<i32>:word32],r12:r12,r2:r2,r4:r4_40,r5:r11,r6:r6_20,r7:r12,r8:r8_37,r9:dwLoc18_229 + 4<32>,Stack +0000:r10,Stack +0004:r9
		defs: lr:lr_62,r10:r10_67,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,r9:r9_65,sp:sp_57
	sp_69 = sp_57 + 8<32>
l00006B86:
	call Mem78[r6_20 + 104<i32>:word32] (retsize: 0;)
		uses: lr:r9,Mem:Mem78,pc:pc,r0:r0,r1:r1,r10:r10,r11:Mem36[r6_20 + 880<i32>:word32],r12:r12,r2:r2,r4:r4_40,r5:r11,r6:r6_20,r7:r12,r8:r8_37,r9:dwLoc18_229 + 4<32>,Stack +0000:r11,Stack +0004:r10,Stack +0008:r9
		defs: lr:lr_84,r10:r10_89,r4:r4_80,r5:r5_81,r6:r6_82,r7:r7_83,r9:r9_87,sp:sp_79
	sp_69 = sp_79 + 0xC<32>
l00006BAA:
	sp_97 = sp_69 - 4<i32>
	Mem98[sp_97:word32] = 0x7D9<32>
	r8_102 = Mem98[r6_101 + 872<i32>:word32]
	Mem104[sp_97 - 4<i32>:word32] = r8_102
	call Mem104[r6_101 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr_107,Mem:Mem104,pc:pc,r0:r0,r1:r1,r10:r10_109,r11:0x00006C7C<p32>,r12:r7_99,r2:r2,r4:r4_105,r5:r5_106,r6:r6_101,r7:r7_99,r8:r8_102,r9:r9_108
		defs: lr:lr_115,pc:pc_247,r0:r0_244,r1:r1_245,r10:r10_120,r2:r2_246,r4:r4_111,r5:r5_112,r6:r6_113,r7:r7_114,r8:r8_119,r9:r9_118
	call Mem104[r6_113 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_115,Mem:Mem104,pc:pc_247,r0:r0_244,r1:r1_245,r10:r10_120,r11:r7_114,r12:Mem104[r6_113 + 868<i32>:word32],r2:r2_246,r4:r4_111,r5:r5_112,r6:r6_113,r7:r7_114,r8:r8_119,r9:r9_118
		defs: lr:lr_129,r10:r10_134,r11:r11_131,r12:r12_130,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128,r9:r9_132,sp:sp_124
	sp_136 = sp_124 + 8<32>
	branch r4_125 >u 9<32> l00006C50
l00006C50:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 828<i32>:word32]
l00006BD2:
	switch (r4_125) { l00006BDC l00006BE0 l00006BE4 l00006BE8 l00006BEC l00006BF0 l00006BF4 l00006BF8 l00006BFC l00006C00 }
l00006C00:
l00006C48:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 832<i32>:word32]
l00006BFC:
l00006C40:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 836<i32>:word32]
l00006BF8:
l00006C38:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 840<i32>:word32]
l00006BF4:
l00006C30:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 844<i32>:word32]
l00006BF0:
l00006C28:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 848<i32>:word32]
l00006BEC:
l00006C20:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 852<i32>:word32]
l00006BE8:
l00006C18:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 856<i32>:word32]
l00006BE4:
l00006C10:
	r10_140 = Mem104[sp_124 + 8<32>:word32]
	r11_141 = Mem104[r6_127 + 860<i32>:word32]
l00006BE0:
l00006BDC:
l00006C04:
	call Mem104[r6_127 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_129,Mem:Mem104,pc:pc,r0:r0,r1:r1,r10:r10_134,r11:r11_131,r12:r12_130,r2:r2,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128,r8:0x00006BDC<p32>,r9:r9_132
		defs: r6:r6_163,sp:sp_160
l00006C08:
	r10_140 = Mem104[sp_136:word32]
	r11_141 = Mem104[r6_127 + 864<i32>:word32]
l00006C56:
	fn0000B818(r0, r1, r2, r10_140, r11_141, pc)
	return
fn00006B5C_exit:


void fn00006C64(word32 r0, word32 r1, word32 r2, word32 r9, word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006C64_entry:
l00006C64:
	fn00006B5C(r0, r1, r2, fp, r9, r10, r11, r12, pc)
	return
fn00006C64_exit:


word32 fn00006CAC(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030B4
//      fn00003210
//      fn00004458
//      fn0000511C
//      fn000071D4
//      fn0000A614
//      fn0000B904
//      fn0000B95C
//      fn0000CA50
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r4 r5 r6 r7 r8 r9 sp
// Trashed: VNZC lr pc r10 r11 r12 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00006CAC_entry:
l00006CAC:
	r6_19 = 0x00006CB0<p32> - Mem17[0x00006CCA<p32>:word32]
	r8_25 = Mem17[r6_19 + 820<i32>:word32]
	call Mem27[r6_19 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem27,r10:Mem17[r6_19 + 824<i32>:word32],r11:0<32>,r12:Mem17[Mem17[r6_19 + 192<i32>:word32]:word32],r4:r4,r5:r5,r6:r6_19,r7:r7,r8:r8_25,Stack +0000:r8_25,Stack +0004:lr,Stack +0008:r7,Stack +000C:r6,Stack +0010:r5,Stack +0014:r4
		defs: lr:lr_33,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_32
	call Mem27[r6_31 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_33,Mem:Mem27,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_32
		defs: lr:lr_45,pc:pc_50,r4:r4_41,r5:r5_42,r6:r6_43,r7:r7_44,sp:sp_40,VNZC:VNZC_51
	branch SLICE(VNZC_51, bool, 1) l00006CD0
l00006CCC_1:
	Mem53[pc_50 + 384<i32>:word16] = SLICE(0x00006CCC<p32>, word16, 0)
l00006CD0:
	Mem57[sp_40 - 4<i32>:word32] = r4_41
	Mem60[sp_40 - 8<i32>:word32] = r5_42
	Mem63[sp_40 - 12<i32>:word32] = r6_43
	Mem66[sp_40 - 16<i32>:word32] = r7_44
	Mem69[sp_40 - 20<i32>:word32] = lr_45
	r8_82 = fn00002B30(r5_42, 1<32>, lr_45, out r9_83, out r10_75, out r11_76, out r12_77, out lr_74)
	r7_88 = Mem69[sp_40 - 16<i32>:word32]
	r6_89 = Mem69[sp_40 - 12<i32>:word32]
	r4_91 = Mem69[sp_40 - 4<i32>:word32]
	r5Out = Mem69[sp_40 - 8<i32>:word32]
	r6Out = r6_89
	r7Out = r7_88
	r8Out = r8_82
	r9Out = r9_83
	r10Out = r10_75
	r11Out = r11_76
	r12Out = r12_77
	lrOut = lr_74
	return r4_91
fn00006CAC_exit:


word32 fn00006D14(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006E5C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006D14_entry:
l00006D14:
	r6_31 = 0x00006D18<p32> - Mem29[0x00006D96<p32>:word32]
	r8_33 = Mem29[r6_31 + 148<i32>:word32]
	call Mem29[r6_31 + 404<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r10:r10,r11:Mem29[r8_33:word32],r12:Mem29[r6_31 + 816<i32>:word32],r2:r10,r3:r11,r4:r4,r5:r12,r6:r6_31,r7:r7,r8:r8_33,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_51,r2:r2_45,r3:r3_46,r5:r5_48,r6:r6_49
	r4_132 = 0<32>
	r0_102 = Mem29[r6_108 + 812<i32>:word32]
	r1_103 = 0<32>
l00006D6E:
	sp_124 = fp - 36<i32>
	r7_126 = Mem62[r5_133:word32]
	r10_135 = r2_104
	branch r7_126 != 0<32> l00006D38
l00006D38:
	branch r4_132 == 0<32> l00006D42
l00006D3C:
	call Mem62[r6_108 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_77,Mem:Mem62,r0:r0_76,r1:r1_68,r10:r2_66,r11:r3_64,r12:r1_68,r2:r2_66,r3:r3_64,r4:r4_72,r5:r5_61,r6:r6_75,r7:r7_63
		defs: lr:lr_88,r0:r0_80,r1:r1_81,r10:r10_92,r2:r2_82,r3:r3_83,r4:r4_84,r5:r5_85,r6:r6_86,r7:r7_87,sp:sp_79,VNZC:VNZC_94
	branch SLICE(VNZC_94, bool, 1) l00006D58
l00006D58:
	r8_96 = Mem62[r6_108 + 148<i32>:word32]
	r12_98 = Mem62[r8_96:word32]
	Mem100[sp_124 - 4<i32>:word32] = r7_126
	call Mem100[r6_108 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr_88,Mem:Mem100,r0:r0_80,r1:r1_81,r10:r10_92,r11:r0_80,r12:r12_98,r2:r2_82,r3:r3_83,r4:r4_84,r5:r5_85,r6:r6_86,r7:r7_87,r8:r8_96
		defs: lr:lr_110,r0:r0_102,r1:r1_103,r2:r2_104,r3:r3_105,r4:r4_106,r5:r5_107,r6:r6_108
l00006D42:
	r8_121 = Mem62[r6_108 + 148<i32>:word32]
	r11_122 = Mem62[r6_108 + 808<i32>:word32]
	r12_123 = Mem62[r8_121:word32]
	Mem127[sp_124 - 4<i32>:word32] = r7_126
	call Mem127[r6_108 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr_134,Mem:Mem127,r0:r0_128,r1:r1_129,r10:r10_135,r11:r11_122,r12:r12_123,r2:r2_130,r3:r3_131,r4:r4_132,r5:r5_133,r6:r6_119,r7:r7_126,r8:r8_121
		defs: lr:lr_145,r0:r0_137,r2:r2_139,r3:r3_140,r4:r4_141,r5:r5_142,r6:r6_143
	r1_103 = r3_105
l00006D68:
	r4_132 = r4_106 + 1<32>
	r5_133 = r5_107 + 4<32>
	r3_131 = r3_105 + r2_104
l00006D7A:
	r11_164 = Mem62[Mem62[r6_108 + 148<i32>:word32]:word32]
	r9_165 = Mem62[r11_164 + 16<i32>:word32]
	branch r9_165 >=u Mem62[r11_164 + 28<i32>:word32] l00006D90
l00006D90:
	call Mem62[r6_108 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_77,Mem:Mem62,r0:r0_76,r1:r1_68,r10:r2_66,r11:r11_164,r12:0xA<32>,r2:r2_66,r3:r3_64,r4:r4_72,r5:r5_61,r6:r6_75,r7:r7_63
		defs: lr:lr_179,r10:r10_183,r11:r11_182,r12:r12_181,r8:r8_180,r9:r9_184
	r9Out = r9_184
	r10Out = r10_183
	r11Out = r11_182
	r12Out = r12_181
	lrOut = lr_179
	return r8_180
l00006D88:
	Mem196[r9_165:byte] = 0xA<8>
	Mem198[r11_164 + 16<i32>:word32] = r9_165 + 1<i32>
	r9Out = r9_165 + 1<i32>
	r10Out = r2_104
	r11Out = r11_164
	r12Out = r1_103
	lrOut = lr_110
	return 0xA<32>
fn00006D14_exit:


word32 fn00006D9C(word32 r0, word32 r1, word32 r4, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006E5C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r7:[0..31]
// LiveOut: lr
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006D9C_entry:
l00006D9C:
	r6_31 = 0x00006DA0<p32> - Mem29[0x00006DD6<p32>:word32]
	r8_32 = Mem29[r6_31 + 804<i32>:word32]
	r5_33 = Mem29[r6_31 + 800<i32>:word32]
	branch r10 != 0xFFFFFFFF<32> l00006DB6
l00006DB2_1:
	r5_33 = r8_32
l00006DB6:
	r12_55 = fn00009D80(r0, r1, r4, r5_33, r7, r12, 1<32>, lr, out lr_51)
	call Mem83[r6_31 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_67,Mem:Mem83,r0:r0,r1:r1,r10:r5_44,r11:0<32>,r12:0<32>,r2:r11,r3:r12_55,r4:r4,r5:r5_44,r6:r6_31,r7:r7,Stack +0000:fn0000A7C8(r0, r1, r4, r5_44, r7, r11, 6<32>, 0<32>, lr_51, out lr_67),Stack +0004:r12_55
		defs: lr:lr_96
	return lr_96
fn00006D9C_exit:


byte fn00006DDC(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006E5C
//      fn000092D8
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: VN lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006DDC_entry:
l00006DDC:
	r6_32 = 0x00006DE2<p32> - Mem29[0x00006E58<p32>:word32]
	call Mem41[r6_32 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem41,r0:r0,r1:r10,r10:r10,r11:r11,r12:r12,r2:r9,r3:r3,r4:r4,r5:r11,r6:r6_32,r7:r7,r9:r9,Stack +0000:r12,Stack +000C:lr,Stack +0010:r7,Stack +0014:r6,Stack +0018:r5,Stack +001C:r4,Stack +0020:r3,Stack +0024:r2,Stack +0028:r1,Stack +002C:r0
		defs: lr:lr_51,r1:r1_44,r12:r12_55,r2:r2_45,r5:r5_48,r6:r6_49,r9:r9_54,sp:sp_42
	Mem62[sp_127 + 8<i32>:word32] = 0<32>
	Mem63[sp_127 + 4<i32>:word32] = r12_55
	r0_150 = 0<32>
	r3_153 = r5_48
	r4_158 = r1_101
	r5_105 = 0xFFFFFFFF<32>
l00006E3C:
	r7_66 = Mem65[r3_153:word32]
	r10_68 = Mem65[sp_127 + 4<i32>:word32]
	r11_69 = Mem65[sp_127:word32]
	branch r7_66 != 0<32> l00006DFE
l00006DFE:
	call Mem65[r6_106 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_79,Mem:Mem65,r0:r0_74,r1:r1_75,r10:r10_68,r11:r11_69,r12:r7_66,r2:r2_76,r3:r3_64,r4:r4_77,r5:r5_78,r6:r6_73,r7:r7_66,r9:r9_80
		defs: lr:lr_90,r0:r0_82,r1:r1_83,r10:r10_92,r11:r11_91,r2:r2_84,r3:r3_85,r4:r4_86,r5:r5_87,r6:r6_88,r7:r7_89,r9:r9_93,sp:sp_81,VNZC:VNZC_96
	branch SLICE(VNZC_96, bool, 1) l00006E36
l00006E04:
	call Mem65[r6_106 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_90,Mem:Mem65,r0:r0_82,r1:r1_83,r10:r10_92,r11:r11_91,r12:r7_89,r2:r2_84,r3:r3_85,r4:r4_86,r5:r5_87,r6:r6_88,r7:r7_89,r9:r9_93
		defs: lr:lr_108,r0:r0_100,r1:r1_101,r12:r12_112,r2:r2_102,r3:r3_103,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107,sp:sp_99
	r8_115 = r5_105 * r2_102
	r9_116 = Mem65[sp_127 + 4<i32>:word32]
	branch r12_112 != r9_116 l00006E18
l00006E18:
	branch r5_105 != 0xFFFFFFFF<32> l00006E20
l00006E20:
	branch r1_101 == 0<32> l00006E32
l00006E24:
	call Mem65[r6_106 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_108,Mem:Mem65,r0:r0_100,r1:r1_101,r10:r2_102,r11:r4_104,r12:r1_101 + r8_115,r2:r2_102,r3:r3_103,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107,r9:r9_116
		defs: lr:lr_136,r0:r0_128,r1:r1_129,r2:r2_130,r3:r3_131,r4:r4_132,r5:r5_133,r6:r6_134,r9:r9_139,sp:sp_127,VNZC:VNZC_142
	branch SLICE(VNZC_142, bool, 1) l00006E36
l00006E32:
	Mem146[sp_127 + 8<i32>:word32] = 1<32>
l00006E1C:
	r5_105 = r0_100
l00006E36:
	r0_150 = r0_100 + 1<32>
	r3_153 = r3_103 + 4<32>
	r4_158 = r4_104 + r2_102
l00006E14:
	r5_105 = r0_100
l00006E48:
	branch Mem65[sp_127 + 8<i32>:word32] == 0<32> l00006E50
l00006E4C_1:
	r5_105 = 0xFFFFFFFE<32>
l00006E50:
	r12Out = r5_105
	lrOut = lr_108
	return <invalid>
fn00006DDC_exit:


void fn00006E5C(word32 r0, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006E5C_entry:
l00006E5C:
	r6_31 = 0x00006E60<p32> - Mem29[0x00006E8E<p32>:word32]
	fn00006DDC(r0, dwArg00, r10, r12, r9, r8, r6_31, r11, r8, r9, r10, r11, lr, out r12_51, out lr_48)
	N_55 = <invalid>
	V_54 = <invalid>
	branch N_55 | V_54 l00006E8E
l00006E7A:
	call dwArg00 (retsize: 0;)
		uses: lr:lr_76,Mem:Mem29,pc:pc_101,r0:r0,r1:dwArg00,r10:r10_77,r11:r11_78,r12:r12_79,r2:r10,r3:r12,r4:r9,r5:r8,r6:r6_31,r7:r11,r8:fn00006D14(r0, dwArg00, r10, r12, r9, r8, r6_31, r11, r8, r9, r10, fn00006D9C(r0, dwArg00, r9, r11, r12_51, r11, r12, lr_48), out r9_81, out r10_77, out r11_78, out r12_79, out lr_76),r9:r9_81,Stack +0024:dwArg00
		defs: pc:pc_101
l00006E8E:
	return
fn00006E5C_exit:


word32 fn00006E94(word32 r12, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002B30
//      fn00003A44
//      fn00007140
// MayUse:  r12:[0..31]
// LiveOut: r10 r11 r12
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006E94_entry:
l00006E94:
l00006E9E:
	branch Mem17[r12:byte] == 0x2F<8> l00006E9C
l00006E9C:
	r12 = r12 + 1<32>
l00006EA8:
	r9_29 = r12
	r11_30 = 0<32>
l00006EC6:
	r10_33 = CONVERT(Mem17[r9_29:byte], byte, word32)
	branch r10_33 != 0<32> l00006EAE
l00006EAE:
	branch SLICE(r10_33, byte, 0) != 0x2F<8> l00006EBA
l00006EBA:
	branch r11_30 == 0<32> l00006EC4
l00006EC0:
	r12 = r9_29
	r11_30 = 0<32>
l00006EB6:
	r11_30 = 1<32>
l00006EC4:
	r9_29 = r9_29 + 1<32>
l00006ECC:
	r11Out = r11_30
	r12Out = r12
	return r10_33
fn00006E94_exit:


word32 fn00006ED4(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007140
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006ED4_entry:
l00006ED4:
	r6_19 = 0x00006ED8<p32> - Mem17[0x00006EFA<p32>:word32]
	call Mem17[r6_19 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r12:r12,r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r12:r12_29,r5:r5_25
	r5_34 = r5_25 + r12_29 - 1<32>
l00006EE8:
	branch r12_29 <=u 1<32> l00006EFA
l00006EEE:
	r5_34 = r5_34 - 1<32>
	branch Mem17[r5_34:byte] == 0x2F<8> l00006EE6
l00006EE6:
	r12_29 = r12_29 - 1<32>
l00006EFA:
	lrOut = lr_28
	return r12_29
fn00006ED4_exit:


void fn00006FF8(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007130
// MayUse:  r10:[0..7] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC r8 r9
// Preserved: r10 r12 sp
fn00006FF8_entry:
l00006FF8:
	branch (r12 & 0xF000<32>) != 0x8000<32> l00007008
l00007008:
	branch (r12 & 0xF000<32>) != 0x4000<32> l00007012
l00007012:
	branch (r12 & 0xF000<32>) != 0x6000<32> l0000701C
l0000701C:
	branch (r12 & 0xF000<32>) != 0x2000<32> l00007026
l00007026:
	branch (r12 & 0xF000<32>) != 0xA000<32> l00007030
l00007030:
	branch (r12 & 0xF000<32>) != 0x1000<32> l0000703A
l0000703A:
	branch (r12 & 0xF000<32>) == 0xC000<32> l00007042
l0000703E_1:
	r10 = 0x3F<32>
l00007042:
	branch (r12 & 0xF000<32>) != 0xC000<32> l00007046
l00007042_1:
	r10 = 0x73<32>
l00007036:
	r10 = 0x70<32>
l0000702C:
	r10 = 0x6C<32>
l00007022:
	r10 = 0x63<32>
l00007018:
	r10 = 0x62<32>
l0000700E:
	r10 = 0x64<32>
l00007004:
	r10 = 0x2D<32>
l00007046:
	r8_32 = r12 & 0x100<32>
	branch (r12 & 0x100<32>) != 0<32> l00007052
l0000704E_1:
	r8_32 = 0x2D<32>
l00007052:
	branch (r12 & 0x100<32>) == 0<32> l00007056
l00007052_1:
	r8_32 = 0x72<32>
l00007056:
	r9_41 = r12 & 0x80<32>
	branch (r12 & 0x80<32>) != 0<32> l0000705E
l0000705A_1:
	r9_41 = 0x2D<32>
l0000705E:
	branch (r12 & 0x80<32>) == 0<32> l00007062
l0000705E_1:
	r9_41 = 0x77<32>
l00007062:
	Mem58[r11 + 1<i32>:byte] = SLICE(r8_32, byte, 0)
	Mem66[r11 + 2<i32>:byte] = SLICE(r9_41, byte, 0)
	Mem74[r11:byte] = SLICE(r10, byte, 0)
	branch (r12 & 0x800<32>) == 0<32> l00007084
l00007084:
	branch (r12 & 0x40<32>) != 0<32> l0000708A
l00007086_1:
	r10 = 0x2D<32>
l0000708A:
	branch (r12 & 0x40<32>) == 0<32> l0000708E
l0000708A_1:
	r10 = 0x78<32>
l00007078:
	branch (r12 & 0x40<32>) != 0<32> l0000707E
l0000707A_1:
	r10 = 0x53<32>
l0000707E:
	branch (r12 & 0x40<32>) == 0<32> l00007082
l0000707E_1:
	r10 = 0x73<32>
l00007082:
l0000708E:
	r8_101 = r12 & 0x20<32>
	branch (r12 & 0x20<32>) != 0<32> l0000709A
l00007096_1:
	r8_101 = 0x2D<32>
l0000709A:
	branch (r12 & 0x20<32>) == 0<32> l0000709E
l0000709A_1:
	r8_101 = 0x72<32>
l0000709E:
	r9_104 = r12 & 0x10<32>
	branch (r12 & 0x10<32>) != 0<32> l000070A6
l000070A2_1:
	r9_104 = 0x2D<32>
l000070A6:
	branch (r12 & 0x10<32>) == 0<32> l000070AA
l000070A6_1:
	r9_104 = 0x77<32>
l000070AA:
	Mem122[r11 + -4<i32>:byte] = SLICE(r8_101, byte, 0)
	Mem130[r11 + -3<i32>:byte] = SLICE(r9_104, byte, 0)
	Mem139[r11 + 3<i32>:byte] = SLICE(r10, byte, 0)
	branch (r12 & 0x400<32>) == 0<32> l000070CC
l000070CC:
	branch (r12 & 8<32>) != 0<32> l000070D2
l000070CE_1:
	r10 = 0x2D<32>
l000070D2:
	branch (r12 & 8<32>) == 0<32> l000070D6
l000070D2_1:
	r10 = 0x78<32>
l000070C0:
	branch (r12 & 8<32>) != 0<32> l000070C6
l000070C2_1:
	r10 = 0x53<32>
l000070C6:
	branch (r12 & 8<32>) == 0<32> l000070CA
l000070C6_1:
	r10 = 0x73<32>
l000070CA:
l000070D6:
	r8_161 = r12 & 4<32>
	r9_162 = r12 & 2<32>
	branch (r12 & 4<32>) != 0<32> l000070E8
l000070E4_1:
	r8_161 = 0x2D<32>
l000070E8:
	branch (r12 & 4<32>) == 0<32> l000070EC
l000070E8_1:
	r8_161 = 0x72<32>
l000070EC:
	branch (r12 & 2<32>) != 0<32> l000070F2
l000070EE_1:
	r9_162 = 0x2D<32>
l000070F2:
	branch (r12 & 2<32>) == 0<32> l000070F6
l000070F2_1:
	r9_162 = 0x77<32>
l000070F6:
	Mem187[r11 + -1<i32>:byte] = SLICE(r8_161, byte, 0)
	Mem196[r11 + -2<i32>:byte] = SLICE(r10, byte, 0)
	Mem199[r11 + 8<i32>:byte] = SLICE(r9_162, byte, 0)
	r8_205 = CONVERT(SLICE(r12, bool, 0), bool, word32)
	branch Test(NE,SLICE(r12, bool, 9)) l00007114
l00007114:
	branch r8_205 != 0<32> l0000711A
l00007116_1:
	r9_162 = 0x2D<32>
l0000711A:
	branch r8_205 == 0<32> l0000711E
l0000711A_1:
	r9_162 = 0x78<32>
l00007108:
	branch r8_205 != 0<32> l0000710E
l0000710A_1:
	r9_162 = 0x54<32>
l0000710E:
	branch r8_205 == 0<32> l00007112
l0000710E_1:
	r9_162 = 0x74<32>
l00007112:
l0000711E:
	Mem225[r11 + 11<i32>:byte] = 0<8>
	Mem231[r11 + 9<i32>:byte] = SLICE(r9_162, byte, 0)
	Mem232[r11 + 10<i32>:byte] = 0x20<8>
	return
fn00006FF8_exit:


void fn00007130(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00007130_entry:
l00007130:
	fn00006FF8(r10, r11, Mem17[r12 + 16<i32>:word32])
	return
fn00007130_exit:


bool fn00007140(word32 r3, word32 r4, word32 r5, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000071D4
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00007140_entry:
l00007140:
	r6_32 = 0x00007146<p32> - Mem29[0x000071CC<p32>:word32]
	r10_40 = fn00006E94(r12, out r11_41, out r12_42)
	r12_51 = fn00006ED4(r4, r5, r6_32, r12_42, r12_42, lr, out lr_50)
	r2_59 = r12_42 + r12 + r12_51
	branch r12_51 != 0<32> l00007164
l00007164:
	r4_67 = CONVERT(Mem37[r12_51 + r12_42 + -1<i32>:byte] != 0x2F<8>, bool, word32)
l00007160:
	r4_67 = r12_51
l00007174:
	r7_70 = r11
l0000717A:
	branch Mem37[r7_70:byte] == 0x2F<8> l00007178
l00007178:
	r7_70 = r7_70 + 1<32>
l00007184:
	call Mem37[r6_32 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,Mem:Mem37,r0:r11,r1:r12,r10:r10_40,r11:r11_41,r12:r7_71,r2:r2_59,r3:r3,r4:r4_90,r5:0x2F<32>,r6:r6_32,r7:r7_71
		defs: lr:lr_108,r0:r0_100,r1:r1_101,r10:r10_110,r11:r11_109,r12:r12_111,r2:r2_102,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107
	call Mem37[r6_106 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_108,Mem:Mem37,r0:r0_100,r1:r1_101,r10:r10_110,r11:r11_109,r12:r12_111 + 1<32> + r2_102 + r4_104,r2:r2_102,r3:r12_111,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107
		defs: lr:lr_129,r0:r0_121,r1:r1_122,r12:r12_132,r2:r2_123,r3:r3_124,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128,VNZC:VNZC_135
	branch SLICE(VNZC_135, bool, 1) l0000719C
l0000719C:
	call Mem37[r6_127 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_129,Mem:Mem37,r0:r0_121,r1:r1_122,r10:r2_123,r11:r1_122,r12:r12_132,r2:r12_132,r3:r3_124,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128
		defs: lr:lr_149,r0:r0_141,r1:r1_142,r12:r12_152,r2:r2_143,r3:r3_144,r4:r4_145,r5:r5_146,r6:r6_147,r7:r7_148,sp:sp_140
	Mem156[r12_152:byte] = SLICE(r5_146, byte, 0)
	r10_157 = Mem156[sp_140:word32]
	r12_158 = r12_152 + r4_145
	branch r10_157 == 0<32> l000071BE
l000071B0:
	Mem167[r10_157:word32] = r12_158 + CONVERT(Mem156[r0_141:byte] == SLICE(r5_146, byte, 0), bool, word32)
l000071BE:
	call Mem173[r6_147 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_149,Mem:Mem173,r0:r0_141,r1:r1_142,r10:r3_144,r11:r7_148,r12:r12_158,r2:r2_143,r3:r3_144,r4:r4_145,r5:r5_146,r6:r6_147,r7:r7_148
		defs: lr:lr_191,r12:r12_194,r2:r2_185
	Mem199[r12_194:byte] = 0<8>
l00007198:
	r2_185 = r12_132
l000071CA:
	r12Out = r2_185
	lrOut = lr_129
	return SLICE(cond(fp - 36<i32>), bool, 1)
fn00007140_exit:


word32 fn000071D4(word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A44
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000071D4_entry:
l000071D4:
	r6_19 = 0x000071D8<p32> - Mem17[0x000071E2<p32>:word32]
	branch fn00007140(r3, r4, r5, r11, r12, lr, out r12_27, out lr_24) l000071E2
l000071DE:
	fn00006CAC(r4, r5, r6_19, r7, lr_24, out r5_79, out r6_80, out r7_81, out r8_82, out r9_83, out r10_84, out r11_85, out r12_27, out lr_24)
l000071E2:
	lrOut = lr_24
	return r12_27
fn000071D4_exit:


word32 fn000071E8(word32 r0, word32 r1, word32 r2, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000071E8
//      fn00007754
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3 r4 r6 r9
// Trashed: VNZC r12 r8 r9
// Preserved: lr r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000071E8_entry:
l000071E8:
	r6_113 = 0x000071EC<p32> - Mem29[0x00007292<p32>:word32]
	r3_110 = Mem29[r6_113 + 164<i32>:word32]
	r4_111 = r12
	r7_100 = r12
l000071F6:
	r7_100 = r7_100 + 4<32> + 4<32>
	r9_134 = Mem39[r7_100:word32]
	branch r9_134 == 0<32> l0000728C
l000071FE:
	branch r9_134 != 0x5B<32> l00007252
l00007252:
	branch r9_134 == 0x3F<32> l00007270
l00007258:
	branch r9_134 == 0x2A<32> l00007270
l0000725E:
	branch r9_134 == 0x2B<32> l00007270
l00007264:
	branch r9_134 == 0x40<32> l00007270
l0000726A:
	branch r9_134 != 0x21<32> l00007282
l00007270:
	branch Mem39[r7_100 + 4<i32>:word32] != 0x28<32> l00007282
l00007282:
	branch r9_134 != 0x29<32> l000071F6
l00007288:
	r4_111 = r7_100 + 4<32>
l0000727C:
	r0 = fn000071E8(r0, r1, r2, r7_100 + 4<32>, lr, out r1, out r2, out r3_110, out r4_111, out r6_113, out r9_357, out r12_96, out lr)
	r7_100 = r12_96
l00007204:
	r5_101 = Mem39[r6_113 + 132<i32>:word32]
	branch Mem39[r5_101:word32] != 0<32> l0000721E
l0000720E:
	call Mem39[r6_113 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_83,Mem:Mem39,r0:r0_69,r1:r1_71,r12:r3_75,r2:r2_73,r3:r3_75,r4:r4_77,r5:r5_101,r6:r6_81,r7:r7_38,r8:r8_118
		defs: lr:lr_115,r0:r0_107,r1:r1_108,r12:r12_116,r2:r2_109,r3:r3_110,r4:r4_111,r5:r5_112,r6:r6_113,r7:r7_114,r8:r8_118,VNZC:VNZC_119
	Z_120 = SLICE(VNZC_119, bool, 1) (alias)
	branch Z_120 l00007218
l00007214_1:
	r12_116 = 0xFFFFFFFF<32>
l00007218:
	branch Z_120 l0000721C
l00007218_1:
	r12_116 = 1<32>
l0000721C:
	Mem128[r5_101:word32] = r12_116
l0000721E:
	r7_100 = r7_100 + 0<32>
	r9_134 = Mem133[r7_100:word32]
	branch r9_134 == 0x21<32> l00007234
l00007228:
	branch Mem133[r5_101:word32] >= 0<32> l00007236
l0000722E:
	branch r9_134 != 0x5E<32> l00007236
l00007234:
	r7_100 = r7_100 + 4<32>
l00007236:
	branch Mem133[r7_100:word32] != 0x5D<32> l00007248
l0000723E:
	r7_100 = r7_100 + 4<32>
l00007248:
	r8_156 = Mem133[r7_100:word32]
	branch r8_156 != 0x5D<32> l00007242
l00007242:
	r7_100 = r7_100 + 4<32>
	branch r8_156 == 0<32> l0000728C
l0000728C:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r6Out = <invalid>
	r9Out = r9_134
	r12Out = r4_111
	lrOut = <invalid>
	return <invalid>
fn000071E8_exit:
l00007250:


word32 fn00007294(word32 r0, word32 r1, word32 r2, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007294
//      fn00008144
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31]
// LiveOut: lr r0 r1 r10 r12 r2 r3 r4 r6 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: lr r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00007294_entry:
l00007294:
	r6_101 = 0x00007298<p32> - Mem29[0x00007352<p32>:word32]
	r3_119 = Mem29[r6_101 + 164<i32>:word32]
	r4_120 = r12
	r7_109 = r12
l000072A2:
	r7_109 = r7_109 + 1<32> + 1<32>
	r10_126 = CONVERT(Mem39[r7_109:byte], byte, word32)
	branch r10_126 == 0<32> l00007350
l000072AA:
	branch SLICE(r10_126, byte, 0) != 0x5B<8> l00007308
l00007308:
	branch SLICE(r10_126, byte, 0) == 0x3F<8> l00007330
l00007310:
	branch SLICE(r10_126, byte, 0) == 0x2A<8> l00007330
l00007318:
	branch SLICE(r10_126, byte, 0) == 0x2B<8> l00007330
l00007320:
	branch SLICE(r10_126, byte, 0) == 0x40<8> l00007330
l00007328:
	branch SLICE(r10_126, byte, 0) != 0x21<8> l00007344
l00007330:
	r9 = CONVERT(Mem39[r7_109 + 1<32>:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x28<8> l00007344
l00007344:
	branch SLICE(r10_126, byte, 0) != 0x29<8> l000072A2
l0000734C:
	r4_120 = r7_109 + 1<32>
l0000733E:
	r0 = fn00007294(r0, r1, r2, r7_109 + 1<32>, lr, out r1, out r2, out r3_119, out r4_120, out r6_101, out r9, out r10_378, out r12_104, out lr)
	r7_109 = r12_104
l000072B2:
	r5_110 = Mem39[r6_101 + 132<i32>:word32]
	branch Mem39[r5_110:word32] != 0<32> l000072CC
l000072BC:
	call Mem39[r6_101 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_91,Mem:Mem39,r0:r0_77,r1:r1_79,r12:r3_83,r2:r2_81,r3:r3_83,r4:r4_85,r5:r5_110,r6:r6_89,r7:r7_38,r8:r8_127,r9:r9_128
		defs: lr:lr_124,r0:r0_116,r1:r1_117,r10:r10_126,r12:r12_125,r2:r2_118,r3:r3_119,r4:r4_120,r5:r5_121,r6:r6_122,r7:r7_123,r8:r8_127,r9:r9_128,VNZC:VNZC_129
	Z_130 = SLICE(VNZC_129, bool, 1) (alias)
	branch Z_130 l000072C6
l000072C2_1:
	r12_125 = 0xFFFFFFFF<32>
l000072C6:
	branch Z_130 l000072CA
l000072C6_1:
	r12_125 = 1<32>
l000072CA:
	Mem138[r5_110:word32] = r12_125
l000072CC:
	r7_109 = r7_109 + 0<32>
	r9_144 = CONVERT(Mem143[r7_109:byte], byte, word32)
	branch SLICE(r9_144, byte, 0) == 0x21<8> l000072E6
l000072D8:
	branch Mem143[r5_110:word32] >= 0<32> l000072E8
l000072DE:
	branch SLICE(r9_144, byte, 0) != 0x5E<8> l000072E8
l000072E6:
	r7_109 = r7_109 + 1<32>
l000072E8:
	branch Mem143[r7_109:byte] != 0x5D<8> l000072FC
l000072F2:
	r7_109 = r7_109 + 1<32>
l000072FC:
	r9 = CONVERT(Mem143[r7_109:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x5D<8> l000072F6
l000072F6:
	r7_109 = r7_109 + 1<32>
	branch r9 == 0<32> l00007350
l00007350:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r6Out = <invalid>
	r9Out = r9
	r10Out = r10_126
	r12Out = r4_120
	lrOut = <invalid>
	return <invalid>
fn00007294_exit:
l00007306:


word32 fn00007358(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007754
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r9
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00007358_entry:
l00007358:
	r6_33 = 0x00007360<p32> - Mem29[0x000074CA<p32>:word32]
	call Mem52[r6_33 + 560<i32>:word32] (retsize: 0;)
		uses: lr:fp - 40<i32>,Mem:Mem52,r0:r9,r1:r10,r10:r10,r11:0<32>,r12:r11,r2:r12,r3:r3,r4:r11,r5:r5,r6:r6_33,r7:fp - 36<i32>,r8:r8,r9:r9,Stack +0008:r8,Stack +000C:r11,Stack +0010:0<32>,Stack +0014:fp - 40<i32>,Stack +001C:0<32>,Stack +0020:lr,Stack +0024:r7,Stack +0028:r6,Stack +002C:r5,Stack +0030:r4,Stack +0034:r3,Stack +0038:r2,Stack +003C:r1,Stack +0040:r0
		defs: lr:lr_62,r0:r0_54,r1:r1_55,r10:r10_65,r11:r11_63,r12:r12_64,r2:r2_56,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,sp:sp_53
	r3_1035 = Mem52[r7_104 + 36<i32>:word32]
	Mem72[r7_104 + -28<i32>:word32] = sp_1007
	Mem73[r7_104 + -32<i32>:word32] = r4_58 + 4<32>
	Mem74[r7_104 + -8<i32>:word32] = r12_64
	r4_176 = r4_58 + 4<32>
l00007398:
	r9_1092 = Mem76[r4_176:word32]
	branch r9_1092 == 0<32> l00007736
l000073A0:
	branch r9_1092 != 0x5B<32> l000073F8
l000073F8:
	branch r9_1092 == 0x3F<32> l00007416
l000073FE:
	branch r9_1092 == 0x2A<32> l00007416
l00007404:
	branch r9_1092 == 0x2B<32> l00007416
l0000740A:
	branch r9_1092 == 0x40<32> l00007416
l00007410:
	branch r9_1092 != 0x21<32> l0000742A
l00007416:
	branch Mem76[r4_176 + 4<i32>:word32] != 0x28<32> l0000742A
l0000742A:
	branch r9_1092 != 0x29<32> l000074AC
l000074AC:
	branch r9_1092 != 0x7C<32> l00007534
l000074B2:
	lr_1046 = Mem76[r7_104 + -16<i32>:word32]
	branch lr_1046 != 0<32> l00007534
l000074BA:
	branch r2_1000 >u 0x40<32> || r2_1000 <u 0x3F<32> l000074D4
l000074D4:
	r9_1092 = (r4_176 + Mem76[r7_104 + -32<i32>:word32] >> 2<i32>) + 1<32>
l000074C4:
	r9_1092 = Mem76[r7_104 + -8<i32>:word32]
l000074E2:
	r11_1096 = r9_1092 << 2<32>
	r10_1089 = r11_1096 + 4<32>
	branch r9_1092 >u Mem76[0x0000762E<p32>:word32] l00007736
l000074F2:
	branch r11_1096 <=u 0xFFFFFFFF<32> l00007736
l000074F8:
	branch r11_1096 >u 0x1F3B<32> l00007736
l00007500:
	r8_141 = Mem76[r7_104 + -32<i32>:word32]
	call Mem76[r6_1014 + 340<i32>:word32] (retsize: 0;)
		uses: lr:lr_107,Mem:Mem76,r0:r0_155,r1:r1_159,r10:r4_75 + r8_141 >> 2<i32>,r11:r8_141,r12:sp_137 + (r11_126 + 8<32>) + 4<32>,r2:r2_111,r3:r3_164,r4:r4_75,r5:r5_168,r6:r6_151,r7:r7_104,r8:r8_141,r9:r9_125
		defs: r0:r0_172,r1:r1_173,r10:r10_183,r11:r11_181,r12:r12_182,r2:r2_174,r3:r3_175,r4:r4_176,r6:r6_178,r7:r7_179,sp:sp_171
	Mem191[r7_104 + -32<i32>:word32] = r4_176 + 4<32>
	Mem192[r12_182:word32] = 0<32>
	r9_193 = Mem192[r7_104 + -12<i32>:word32]
	Mem194[sp_1007:word32] = 0<32>
	Mem195[r9_193:word32] = sp_1007
	Mem196[r7_104 + -12<i32>:word32] = sp_1007
	r5_1042 = sp_1007
	lr_1046 = r4_176 + 4<32>
l00007430:
	r8_197 = Mem76[r7_104 + -16<i32>:word32]
	Mem199[r7_104 + -16<i32>:word32] = r8_197 - 1<32>
	branch r8_197 != 0<32> l00007534
l0000743E:
	branch r2_1000 >u 0x40<32> || r2_1000 <u 0x3F<32> l0000744E
l0000744E:
	lr_1046 = Mem199[r7_104 + -32<i32>:word32]
	r12_208 = (r4_176 + lr_1046 >> 2<i32>) + 1<32>
l00007448:
	r12_208 = Mem199[r7_104 + -8<i32>:word32]
l0000745C:
	r10_1089 = r12_208 << 2<32>
	r9_1092 = r10_1089 + 4<32>
	branch r12_208 >u Mem199[0x000074CC<p32>:word32] l00007736
l0000746C:
	branch r10_1089 <=u 0xFFFFFFFF<32> l00007736
l00007472:
	branch r10_1089 >u 0x1F3B<32> l00007736
l0000747A:
	r9_223 = Mem199[r7_104 + -32<i32>:word32]
	call Mem199[r6_1014 + 340<i32>:word32] (retsize: 0;)
		uses: lr:lr_239,Mem:Mem199,r0:r0_155,r1:r1_159,r10:r4_75 + r9_223 >> 2<i32>,r11:r9_223,r12:sp_137 + (r10_214 + 8<32>) + 4<32>,r2:r2_111,r3:r3_164,r4:r4_75,r5:r5_168,r6:r6_151,r7:r7_104,r8:r10_214 + 8<32>,r9:r9_223
		defs: lr:lr_252,r0:r0_244,r1:r1_245,r10:r10_255,r11:r11_253,r12:r12_254,r2:r2_246,r3:r3_247,r4:r4_248,r6:r6_250,r7:r7_251,r9:r9_256,sp:sp_243
	Mem261[r12_254:word32] = 0<32>
	Mem262[sp_243:word32] = 0<32>
	Mem264[Mem262[r7_104 + -12<i32>:word32]:word32] = sp_243
	r5_259 = sp_243
	r8_265 = Mem264[r7_104 + -4<i32>:word32]
	branch r8_265 != 0<32> l0000754C
l000074AA:
l00007538:
	call Mem264[r6_1086 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_252,Mem:Mem264,r0:r0_244,r1:r1_245,r10:0x44A<32>,r11:Mem264[r6_250 + 160<i32>:word32],r12:Mem264[r6_250 + 376<i32>:word32],r2:r2_246,r3:r3_247,r4:r4_248,r5:sp_243,r6:r6_250,r7:r7_251,r8:r8_265,r9:0x00008938<p32>
		defs: lr:lr_282,r0:r0_274,r1:r1_275,r10:r10_285,r11:r11_283,r2:r2_276,r3:r3_277,r4:r4_278,r5:r5_279,r6:r6_280,r7:r7_281,r9:r9_286
l0000754C:
	r8_291 = Mem264[r4_1060 + -4<i32>:word32]
	branch r8_291 == 0x29<32> l0000756A
l00007556:
	call Mem264[r6_1086 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_306,Mem:Mem264,r0:r0_300,r1:r1_301,r10:0x44B<32>,r11:Mem264[r6_296 + 160<i32>:word32],r12:Mem264[r6_296 + 784<i32>:word32],r2:r2_302,r3:r3_303,r4:r4_289,r5:r5_304,r6:r6_296,r7:r7_305,r8:r8_291,r9:0x00008938<p32>
		defs: lr:lr_317,r0:r0_309,r1:r1_310,r10:r10_320,r11:r11_318,r2:r2_311,r3:r3_312,r4:r4_313,r5:r5_314,r6:r6_315,r7:r7_316,r8:r8_322,r9:r9_321
l0000756A:
	branch r2_246 == 0x21<32> l0000758C
l0000758C:
	r2_328 = r1_1058
l0000771A:
	branch r2_328 <=u r0_1053 l000076B8
l000076B8:
	r5_335 = Mem264[r7_104 + -4<i32>:word32]
l000076C4:
	r8_340 = r3_1056 & 0xFFFFFFFB<u32>
	branch CONVERT(SLICE(r3_1056, bool, 0), bool, word32) == 0<32> l000076D2
l000076CE_1:
	r8_340 = r3_1056
l000076D2:
	r12_346 = r5_335 + 4<32>
	r9_351 = Mem264[r7_104 + -24<i32>:word32]
	branch r5_335 != 0<32> l000076BE
l000076BE:
	branch SLICE(fn00007754(r2_328, r3_1056, r8_340, r9_351, r2_328, r1_1058, r12_346, out r0_1053, out r1_1058, out r2_328, out r3_1056, out r4_1060, out r5_378, out r6_1214, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1215, out lr_1046), bool, 1) l00007718
l000076C2:
	r5_335 = Mem264[r5_378:word32]
l000076E2:
l00007742:
	branch Test(NE,SLICE(r3_1056, bool, 0)) l000076E4
l000076E4:
	r10_394 = r3_1056 & 0xFFFFFFFB<u32>
l00007748:
	r10_394 = r3_1056
l000076E8:
	branch r2_328 != r1_1058 l000076F2
l000076F2:
	branch Mem264[r2_328 + -4<i32>:word32] == 0x2F<32> l00007700
l00007700:
	r9_410 = CONVERT((r3_1056 & 5<32>) == 5<32>, bool, word32)
l000076FC:
	r9_410 = 0<32>
l0000770A:
	r9_413 = CONVERT(SLICE(r9_410, byte, 0), byte, word32)
l000076EC:
	r9_413 = Mem264[r7_104 + -24<i32>:word32]
l0000770C:
	branch SLICE(fn00007754(r2_328, r3_1056, r10_394, r9_413, r0_1053, r2_328, r4_1060, out r0_1053, out r1_1058, out r2_328, out r3_1056, out r4_1060, out r5_1216, out r6_1217, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1218, out lr_1046), bool, 1) l0000773A
l00007718:
	r2_328 = r2_328 + 4<32>
l00007720:
l00007570:
	branch r2_246 == 0x2A<32> l00007590
l00007590:
	branch SLICE(fn00007754(r2_246, r3_1056, r3_1056, Mem264[r7_104 + -24<i32>:word32], r0_1053, r1_1058, r4_1060, out r0_1053, out r1_1058, out r2_1199, out r3_1056, out r4_1200, out r5_1201, out r6_1202, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1203, out lr_1046), bool, 1) l0000773A
l00007576:
	branch r2_246 == 0x2B<32> l000075A2
l000075A2:
	r5_509 = r1_1058
l0000764C:
	branch r5_509 <=u r0_1053 l000075A6
l000075A6:
	r12_518 = Mem517[r7_104 + -4<i32>:word32]
	r2_520 = CONVERT(SLICE(r3_1056, bool, 0), bool, word32)
	r8_521 = r3_1056 & 0xFFFFFFFB<u32>
	r9_522 = Mem517[r7_104 + -24<i32>:word32]
	branch r2_520 == 0<32> l000075BC
l000075B8_1:
	r8_521 = r3_1056
l000075BC:
	Mem536[r7_104 + -32<i32>:word32] = r9_522
	branch SLICE(fn00007754(r2_520, r3_1056, r8_521, r9_522, r5_509, r1_1058, r12_518 + 4<32>, out r0_1053, out r1_1058, out r2_552, out r3_1056, out r4_554, out r5_555, out r6_1209, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1210, out lr_1046), bool, 1) l0000764A
l000075CA:
	branch r2_552 != 0<32> l000075D4
l000075D0_1:
	r10_1089 = r3_1056 & 0xFFFFFFFB<u32>
l000075D4:
	branch r2_552 == 0<32> l000075D8
l000075D4_1:
	r10_1089 = r3_1056
l000075D8:
	branch r5_555 == r1_1058 l000075FA
l000075DC:
	branch Mem536[r5_555 + -4<i32>:word32] == 0x2F<32> l000075EA
l000075EA:
	r9_590 = CONVERT((r3_1056 & 5<32>) == 5<32>, bool, word32)
l000075E6:
	r9_590 = 0<32>
l000075F4:
	Mem598[r7_104 + -32<i32>:word32] = CONVERT(SLICE(r9_590, byte, 0), byte, word32)
l000075FA:
	branch SLICE(fn00007754(r2_552, r3_1056, r10_1089, Mem600[r7_104 + -32<i32>:word32], r0_1053, r5_555, r4_554, out r0_1053, out r1_1058, out r2_643, out r3_1056, out r4_1211, out r5_555, out r6_1212, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1213, out lr_1046), bool, 1) l0000773A
l0000760C:
	branch r5_555 == r1_1058 l0000764A
l00007610:
	r9_660 = Mem600[r5_555 + -4<i32>:word32]
	branch r2_643 != 0<32> l0000761E
l0000761A_1:
	r10_1089 = r3_1056 & 0xFFFFFFFB<u32>
l0000761E:
	branch r2_643 == 0<32> l00007622
l0000761E_1:
	r10_1089 = r3_1056
l00007622:
	branch r9_660 == 0x2F<32> l00007630
l00007630:
	r9_677 = CONVERT((r3_1056 & 5<32>) == 5<32>, bool, word32)
l00007628:
	r9_677 = 0<32>
l0000763A:
	branch SLICE(fn00007754(r2_643, r3_1056, r10_1089, r9_677, r0_1053, r5_555, Mem600[r7_104 + -20<i32>:word32] - 4<32>, out r0_1053, out r1_1058, out r2_1219, out r3_1056, out r4_1220, out r5_555, out r6_1221, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1222, out lr_1046), bool, 1) l0000773A
l0000764A:
	r5_509 = r5_555 + 4<32>
l00007652:
	r8_741 = Mem517[Mem517[r7_104 + -4<i32>:word32]:word32]
	branch r8_741 == 0<32> l0000773E
l0000765C:
	Mem744[r7_104 + -4<i32>:word32] = r8_741
l0000757C:
	branch r2_246 == 0x3F<32> l00007662
l00007662:
	branch SLICE(fn00007754(r2_246, r3_1056, r3_1056, Mem264[r7_104 + -24<i32>:word32], r0_1053, r1_1058, r4_1060, out r0_1053, out r1_1058, out r2_1204, out r3_1056, out r4_1060, out r5_1205, out r6_1086, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1206, out lr_1046), bool, 1) l0000773A
l00007582:
	branch r2_246 != 0x40<32> l00007722
l00007722:
	call Mem264[r6_1086 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_487,Mem:Mem264,r0:r0_480,r1:r1_327,r10:0x4A5<32>,r11:Mem264[r6_486 + 160<i32>:word32],r12:Mem264[r6_486 + 372<i32>:word32],r2:r2_324,r3:r3_478,r4:r4_483,r5:r5_485,r6:r6_486,r7:r7_475,r8:r8_776,r9:0x00008938<p32>
		defs: lr:lr_786,r10:r10_789,r11:r11_787,r7:r7_785,r9:r9_790
l0000758A:
l00007672:
	r8_795 = r3_1056 & 0xFFFFFFFB<u32>
	Mem799[r7_104 + -32<i32>:word32] = r8_795
	r2_797 = r3_1056
l0000767C:
	r12_802 = Mem801[r7_104 + -4<i32>:word32]
	lr_803 = Mem801[r7_104 + -32<i32>:word32]
	r5_808 = CONVERT(SLICE(r3_1056, bool, 0), bool, word32)
	r5_812 = r5_808
	branch r5_808 != 0<32> l00007692
l0000768E_1:
	r5_812 = lr_803
l00007692:
	branch r5_808 == 0<32> l00007696
l00007692_1:
	r5_812 = r2_797
l00007696:
	call Mem801[r6_1086 + 412<i32>:word32] (retsize: 0;)
		uses: lr:lr_803,Mem:Mem801,r0:r0_824,r1:r1_827,r10:r10_845,r11:r4_804,r12:r12_802 + 4<32>,r2:r2_815,r3:r3_806,r4:r4_804,r5:r5_833,r6:r6_819,r7:r7_800,r8:r8_851,r9:r9_848
		defs: r0:r0_856,r1:r1_857,r12:r12_866,r2:r2_858,r3:r3_859,r5:r5_861,r7:r7_863
	branch SLICE(fn00007754(r2_858, r3_859, r5_861, Mem801[r7_863 + -24<i32>:word32], r0_856, r1_857, r12_866, out r0_1053, out r1_1058, out r2_797, out r3_1056, out r4_1060, out r5_1207, out r6_1086, out r7_104, out r9_1092, out r10_1089, out r11_1096, out r12_1208, out lr_1046), bool, 1) l0000773A
l0000773A:
	r12_1155 = 0<32>
l000076A8:
	r8_795 = Mem801[Mem801[r7_104 + -4<i32>:word32]:word32]
	branch r8_795 == 0<32> l0000773E
l0000773E:
	r12_1155 = 1<32>
l000076B2:
	Mem898[r7_104 + -4<i32>:word32] = r8_795
l0000741E:
	Mem902[r7_104 + -16<i32>:word32] = Mem76[r7_104 + -16<i32>:word32] + 1<32>
l000073A6:
	r5_1042 = Mem76[r6_1014 + 132<i32>:word32]
	r8_904 = Mem76[r5_1042:word32]
	branch r8_904 != 0<32> l000073C2
l000073B0:
	call Mem76[r6_1014 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_241,Mem:Mem76,r0:r0_155,r1:r1_159,r10:r10_909,r11:r11_908,r12:Mem76[r6_151 + 164<i32>:word32],r2:r2_111,r3:r3_164,r4:r4_75,r5:r5_903,r6:r6_151,r7:r7_104,r8:r8_904,r9:r9_77
		defs: lr:lr_919,r0:r0_911,r1:r1_912,r10:r10_922,r11:r11_920,r12:r12_921,r2:r2_913,r3:r3_914,r4:r4_915,r5:r5_916,r6:r6_917,r7:r7_918,sp:sp_910,VNZC:VNZC_925
	Z_926 = SLICE(VNZC_925, bool, 1) (alias)
	branch Z_926 l000073BC
l000073B8_1:
	r12_921 = 0xFFFFFFFF<32>
l000073BC:
	branch Z_926 l000073C0
l000073BC_1:
	r12_921 = 1<32>
l000073C0:
	Mem934[r5_1042:word32] = r12_921
l000073C2:
	r4_176 = r4_176 + 4<32>
	r9_1092 = Mem939[r4_176:word32]
	branch r9_1092 == 0x21<32> l000073D8
l000073CC:
	branch Mem939[r5_1042:word32] >= 0<32> l000073DA
l000073D2:
	branch r9_1092 != 0x5E<32> l000073DA
l000073D8:
	r4_176 = r4_176 + 4<32>
l000073DA:
	branch Mem939[r4_176:word32] != 0x5D<32> l000073EE
l000073E2:
	r4_176 = r4_176 + 4<32>
l000073EE:
	r8_962 = Mem939[r4_176:word32]
	branch r8_962 != 0x5D<32> l000073E6
l000073E6:
	r4_176 = r4_176 + 4<32>
	branch r8_962 == 0<32> l00007736
l00007736:
	r12_1155 = 0xFFFFFFFF<32>
l0000774C:
	sp_983 = Mem979[r7_104 + -28<i32>:word32]
	r7_986 = Mem979[sp_983 + 0x24<32>:word32]
	r6_987 = Mem979[sp_983 + 0x28<32>:word32]
	r5_988 = Mem979[sp_983 + 0x2C<32>:word32]
	r4_989 = Mem979[sp_983 + 0x30<32>:word32]
	r3_990 = Mem979[sp_983 + 0x34<32>:word32]
	r2_991 = Mem979[sp_983 + 0x38<32>:word32]
	r0_993 = Mem979[sp_983 + 0x40<32>:word32]
	r1Out = Mem979[sp_983 + 0x3C<32>:word32]
	r2Out = r2_991
	r3Out = r3_990
	r4Out = r4_989
	r5Out = r5_988
	r6Out = r6_987
	r7Out = r7_986
	r9Out = r9_1092
	r10Out = r10_1089
	r11Out = r11_1096
	r12Out = r12_1155
	lrOut = lr_1046
	return r0_993
fn00007358_exit:
l000073F6:
l00007534:
	r4_176 = r4_176 + 4<32>


byte fn00007754(word32 r2, word32 r3, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007358
//      fn00007754
//      fn000087C0
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00007754_entry:
l00007754:
	sp_1004 = fp - 0x544<32>
	r6_1011 = 0x0000775C<p32> - Mem29[0x000078B2<p32>:word32]
	r0_102 = r9
	r1_1006 = r8
	r5_1010 = r12
	r4_1009 = r11
l00007D22:
	r12_46 = Mem45[r5_1010:word32]
	branch r12_46 != 0<32> l0000776C
l0000776C:
	lr = r1_1006 & 0x10<32>
	Mem54[sp_1004 + 4<i32>:word32] = lr
	r7_1383 = r12_46
	branch lr == 0<32> l0000777E
l00007778:
	call Mem54[r6_1011 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,Mem:Mem54,r0:r0_58,r1:r1_49,r10:r10_65,r11:r11_64,r12:r12_46,r2:r2_59,r3:r3_60,r4:r4_61,r5:r5_44,r6:r6_57,r7:r12_46,r8:r8_63,r9:r9_62
		defs: lr:lr_75,r0:r0_67,r1:r1_68,r10:r10_80,r11:r11_79,r12:r12_78,r2:r2_69,r3:r3_70,r4:r4_71,r5:r5_72,r6:r6_73,r8:r8_77,r9:r9_76,sp:sp_66
	r7_1383 = r12_78
l0000777E:
	r5_1010 = r5_1010 + 4<32>
	branch r7_1383 == 0x21<32> l00007CC4
l00007788:
	branch r7_1383 == 0x2A<32> l0000784E
l0000784E:
	r8_92 = r1_1006 & 0x20<32>
	Mem95[sp_1004 + 20<i32>:word32] = r8_92
	branch r8_92 == 0<32> l00007878
l00007858:
	branch Mem95[r5_1010:word32] != 0x28<32> l00007878
l00007860:
	r9_100 = Mem95[sp_1004:word32]
	Mem108[sp_1004 - 4<i32>:word32] = r1_1006
	r0_102 = fn00007358(r0_102, r1_1006, r2, r3, r4_1009, r5_1010, r6_1011, r7_1383, r0_102, r9_100, r4_1009, r5_1010, r7_1383, lr, out r1_1006, out r2_2411, out r3, out r4_1009, out r5_1010, out r6_1011, out r7_2412, out r9, out r10, out r11, out r12_125, out lr)
	branch r12_125 != 0xFFFFFFFF<32> l00007D50
l00007878:
	lr = Mem133[sp_1004:word32]
	branch r4_1009 == lr l0000788C
l0000787E:
	branch Mem133[r4_1009:word32] != 0x2E<32> l0000788C
l00007886:
	branch r0_102 != 0<32> l00007D40
l0000788C:
	r7_149 = Mem133[r5_1010:word32]
	r2_150 = r5_1010 + 4<i32>
l000078D4:
	r5_154 = CONVERT(r7_149 == 0x3F<32>, bool, word32)
	branch r5_154 != 0<32> l00007892
l000078DE:
	branch r7_149 == 0x2A<32> l00007892
l00007892:
	branch Mem133[r2_150:word32] != 0x28<32> l000078B4
l0000789A:
	branch Test(NE,SLICE(r1_1006, bool, 5)) l000078B4
l000078A0:
	fn000071E8(r0_102, r1_1006, r2_150, r2_150, lr, out r1_2413, out r2_2414, out r3_2415, out r4_2416, out r6_2417, out r9, out r12_178, out lr_2418)
	branch r12_178 == r2_150 l000078B4
l000078B4:
	branch r5_154 == 0<32> l000078D2
l000078B8:
	r9 = Mem133[sp_1004:word32]
	branch r4_1009 == r9 l00007D40
l000078C0:
	branch Mem133[r4_1009:word32] != 0x2F<32> l000078D0
l000078C8:
	branch Test(EQ,SLICE(r1_1006, bool, 0)) l00007D40
l000078D0:
	r4_1009 = r4_1009 + 4<32>
l000078AA:
	r2_150 = r12_178
l000078D2:
	r2_150 = r2_150 + 4<i32>
	r7_149 = Mem133[r2_150:word32]
l000078E4:
	r8_220 = CONVERT(SLICE(r1_1006, bool, 0), bool, word32)
	branch r7_149 != 0<32> l00007912
l00007912:
	r3_225 = CONVERT(SLICE(r8_220, byte, 0), byte, word32)
	r10_226 = Mem133[sp_1004:word32] + r4_1009
	branch r3_225 == 0<32> l00007922
l0000791E_1:
	r11 = 0x2F<32>
l00007922:
	branch r3_225 != 0<32> l00007926
l00007922_1:
	r11 = 0<32>
l00007926:
	call Mem133[r6_1011 + 324<i32>:word32] (retsize: 0;)
		uses: lr:lr_134,Mem:Mem133,r0:r0_141,r1:r1_1669,r10:r10_226 >> 2<i32>,r11:r11_273,r12:r4_196,r2:r2_160,r3:r3_225,r4:r4_196,r5:r7_151,r6:r6_240,r7:r7_151,r8:r8_220,r9:r9_263
		defs: r0:r0_288,r1:r1_289,r10:r10_301,r11:r11_300,r12:r12_299,r2:r2_290,r3:r3_291,r4:r4_292,r5:r5_293,r6:r6_294,r7:r7_295,r9:r9_297,sp:sp_287,VNZC:VNZC_302
	r8_303 = Mem133[sp_1685:word32]
	branch SLICE(VNZC_302, bool, 1) l00007932
l0000792E_1:
	r8_303 = r12_299
l00007932:
	Mem308[sp_1685 + 12<i32>:word32] = r8_303
	branch r7_295 == 0x5B<32> l0000795A
l0000793A:
	lr = Mem308[sp_1685 + 20<i32>:word32]
	branch lr == 0<32> l0000798E
l00007940:
	branch r7_295 == 0x40<32> l00007952
l00007946:
	branch r7_295 == 0x2B<32> l00007952
l0000794C:
	branch r7_295 != 0x21<32> l0000798E
l00007952:
	r8_303 = Mem308[r2_1695:word32]
	branch r8_303 != 0x28<32> l0000798E
l0000798E:
	branch r7_295 != 0x2F<32> l000079BE
l000079BE:
	branch r3_291 == 0<32> l000079C6
l000079C2:
	Mem341[sp_1685 + 16<i32>:word32] = r1_1693
l00007994:
	branch r3_291 == 0<32> l000079C6
l000079C6:
	Mem349[sp_1685 + 16<i32>:word32] = r1_1693 & 0xFFFFFFFB<u32>
	r8_303 = r1_1693 & 0xFFFFFFFB<u32>
l000079CC:
	branch r7_295 == 0x5C<32> l000079D6
l000079D6:
	r1_1693 = r1_1693 & 2<32>
	branch (r1_1693 & 2<32>) != 0<32> l000079DE
l000079DC:
	r5_1697 = Mem361[r2_1695:word32]
l000079D2:
	r5_1697 = r7_295
l000079DE:
	lr = Mem361[sp_1685 + 4<i32>:word32]
	branch lr == 0<32> l000079EC
l000079E4:
	call Mem361[r6_1690 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_367,Mem:Mem361,r0:r0_288,r1:r1_389,r10:r10_301,r11:r11_300,r12:r5_370,r2:r2_290,r3:r3_291,r4:r4_292,r5:r5_370,r6:r6_294,r7:r7_295,r8:r8_408,r9:r9_297
		defs: lr:lr_431,r0:r0_423,r1:r1_424,r10:r10_436,r11:r11_435,r12:r12_434,r2:r2_425,r4:r4_427,r6:r6_429,r9:r9_432,sp:sp_422
	r5_1697 = r12_434
l000079EC:
	r7_440 = r0_1692
	r3_1696 = r2_1695 - 4<32>
l00007A1A:
	r8_446 = Mem361[sp_1685 + 12<i32>:word32]
	branch r4_1689 <u r8_446 l000079F4
l000079F4:
	r9 = Mem361[sp_1685 + 4<i32>:word32]
	r12_451 = Mem361[r4_1689:word32]
	branch r9 == 0<32> l00007A00
l000079FC:
	call Mem361[r6_1690 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_461,Mem:Mem361,r0:r0_455,r1:r1_456,r10:r10_463,r11:r11_462,r12:r12_451,r2:r2_457,r3:r3_458,r4:r4_447,r5:r5_459,r6:r6_454,r7:r7_460,r8:r8_446,r9:r9_450
		defs: lr:lr_473,r0:r0_465,r1:r1_466,r10:r10_478,r11:r11_477,r12:r12_476,r2:r2_467,r3:r3_468,r4:r4_469,r5:r5_470,r6:r6_471,r7:r7_472,r9:r9_474,sp:sp_464
l00007A00:
	branch r12_451 != r5_1697 l00007A16
l00007A04:
	branch SLICE(fn00007754(r2_1695, r3_1696, Mem361[sp_1685 + 16<i32>:word32], CONVERT(r7_440 != 0<32>, bool, word32), Mem361[sp_1685:word32], r4_1689, r3_1696, out r0_1692, out r1_1693, out r2_1695, out r3_1696, out r4_1689, out r5_1697, out r6_1690, out r7_2431, out r9, out r10, out r11, out r12_2432, out lr), bool, 1) l00007D44
l00007A16:
	r4_1689 = r4_1689 + 4<32>
	r7_440 = 0<32>
l00007A20:
l00007998:
	r9 = Mem308[sp_1685:word32]
	branch r4_2433 >=u r9 l00007D40
l000079A0:
	r4_1689 = r4_2433 + 4<i32>
	r11 = r4_1689
	r4_2433 = r4_1689
	branch Mem308[r4_2433:word32] != 0x2F<32> l00007998
l000079AA:
	fn00007754(r2_1695, r3_291, r1_1693, CONVERT(SLICE(r1_1693, bool, 2), bool, word32), r9, r4_1689, r2_1695, out r0_2419, out r1_2420, out r2_2421, out r3_2422, out r4_2423, out r5_2424, out r6_2425, out r7_2426, out r9, out r10, out r11, out r12_562, out lr)
l0000795A:
	branch r3_291 != 0<32> l00007964
l00007960_1:
	r5_1697 = r1_1693 & 0xFFFFFFFB<u32>
l00007964:
	branch r3_291 == 0<32> l00007968
l00007964_1:
	r5_1697 = r1_1693
l00007968:
	r7_579 = r2_1695 - 4<32>
	r9 = r0_1692
l0000797C:
	lr = Mem308[sp_1685 + 12<i32>:word32]
	r11 = r4_1689
	r10 = Mem308[sp_1685:word32]
	branch r4_1689 <u lr l00007970
l00007970:
	fn00007754(r2_1695, r3_291, r5_1697, r9, r10, r4_1689, r7_579, out r0_2427, out r1_2428, out r2_1695, out r3_291, out r4_608, out r5_1697, out r6_2429, out r7_579, out r9_2430, out r10, out r11, out r12_615, out lr)
	r4_1689 = r4_608 + 4<32>
	r9 = 0<32>
	branch r12_615 == 0<32> l00007D44
l0000798A:
l000078EE:
	r12_125 = r8_220
	branch r8_220 == 0<32> l00007D50
l000078F6:
	r1_626 = r1_1006 & 8<32>
	branch r1_626 == 0<32> l00007902
l00007902:
	call Mem133[r6_1011 + 324<i32>:word32] (retsize: 0;)
		uses: lr:lr_134,Mem:Mem133,r0:r0_141,r1:r1_626,r10:Mem133[sp_94:word32] + r4_196 >> 2<i32>,r11:0x2F<32>,r12:r4_196,r2:r2_160,r3:r3_638,r4:r4_196,r5:r7_151,r6:r6_240,r7:r7_151,r8:r8_220,r9:r9_263
		defs: lr:lr_652,r10:r10_657,r11:r11_656,r12:r12_655,r9:r9_653
l000079B6:
	r12_125 = CONVERT(r12_562 != 0<32>, bool, word32)
l000078FC:
	r12_125 = r7_149
l0000778E:
	branch r7_1383 == 0x2B<32> l00007CC4
l00007796:
	branch r7_1383 == 0x2F<32> l00007CEA
l00007CEA:
	branch (r1_1006 & 5<32>) != 5<32> l00007D06
l00007CF4:
	r9 = Mem54[sp_1004:word32]
	branch r4_1009 == r9 l00007D40
l00007CFA:
	r8 = Mem54[r4_1009:word32]
	branch r8 != 0x2F<32> l00007D40
l00007D02:
	r9 = 1<32>
l0000779E:
	branch r7_1383 == 0x3F<32> l000077BE
l000077BE:
	branch Test(NE,SLICE(r1_1006, bool, 5)) l000077E4
l000077C4:
	branch Mem54[r5_1010:word32] != 0x28<32> l000077E4
l000077CC:
	r9_688 = Mem54[sp_1004:word32]
	Mem694[sp_1004 - 4<i32>:word32] = r1_1006
	r0_102 = fn00007358(r0_102, r1_1006, r2, r3, r4_1009, r5_1010, r6_1011, r7_1383, r0_102, r9_688, r4_1009, r5_1010, r7_1383, lr, out r1_1006, out r2, out r3, out r4_1009, out r5_1010, out r6_1011, out r7_2410, out r9, out r10, out r11, out r12_125, out lr)
	branch r12_125 != 0xFFFFFFFF<32> l00007D50
l000077E4:
	r9 = Mem715[sp_1004:word32]
	branch r4_1009 == r9 l00007D40
l000077EC:
	r8 = Mem715[r4_1009:word32]
	branch r8 != 0x2F<32> l00007800
l00007800:
	branch r8 != 0x2E<32> l00007D1C
l00007808:
	branch r0_102 == 0<32> l00007D1C
l0000780E:
l000077F4:
	branch Test(NE,SLICE(r1_1006, bool, 0)) l00007D1C
l000077FC:
l000077A4:
	branch r7_1383 == 0x40<32> l00007CC4
l00007CC4:
	branch Test(NE,SLICE(r1_1006, bool, 5)) l00007D06
l00007CCA:
	branch Mem54[r5_1010:word32] != 0x28<32> l00007D06
l00007CD2:
	r9_744 = Mem54[sp_1004:word32]
	Mem753[sp_1004 - 4<i32>:word32] = r1_1006
	r0_102 = fn00007358(r0_102, r1_1006, r2, r3, r4_1009, r5_1010, r6_1011, r7_1383, r0_102, r9_744, r4_1009, r5_1010, r7_1383, lr, out r1_1006, out r2, out r3, out r4_1009, out r5_1010, out r6_1011, out r7_1383, out r9, out r10, out r11, out r12_125, out lr)
	branch r12_125 == 0xFFFFFFFF<32> l00007D06
l00007CE8:
l000077AC:
	branch r7_1383 == 0x5B<32> l00007A22
l00007A22:
	r7_779 = Mem54[r6_1011 + 132<i32>:word32]
	r8_780 = Mem54[r7_779:word32]
	branch r8_780 != 0<32> l00007A3E
l00007A2C:
	call Mem54[r6_1011 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_112,Mem:Mem54,r0:r0_102,r1:r1_90,r10:r10_784,r11:r11_278,r12:Mem54[r6_111 + 164<i32>:word32],r2:r2_109,r3:r3_110,r4:r4_104,r5:r5_84,r6:r6_111,r7:r7_779,r8:r8_780,r9:r9_266
		defs: r0:r0_786,r1:r1_787,r10:r10_799,r11:r11_798,r12:r12_797,r3:r3_789,r4:r4_790,r5:r5_791,r6:r6_792,r7:r7_793,r9:r9_795,sp:sp_785,VNZC:VNZC_800
	Z_801 = SLICE(VNZC_800, bool, 1) (alias)
	branch Z_801 l00007A38
l00007A34_1:
	r12_797 = 0xFFFFFFFF<32>
l00007A38:
	branch Z_801 l00007A3C
l00007A38_1:
	r12_797 = 1<32>
l00007A3C:
	Mem809[r7_779:word32] = r12_797
l00007A3E:
	lr = Mem813[sp_1004:word32]
	branch r4_1009 == lr l00007D40
l00007A46:
	r12_820 = Mem813[r4_1009:word32]
	branch r12_820 != 0x2E<32> l00007A54
l00007A54:
	branch r12_820 != 0x2F<32> l00007A62
l00007A5A:
	branch Test(EQ,SLICE(r1_1006, bool, 0)) l00007D40
l00007A4E:
	branch r0_102 == 0<32> l00007A62
l00007A62:
	r9_841 = Mem813[r5_1010:word32]
	branch r9_841 != 0x21<32> l00007A6E
l00007A6E:
	branch Mem813[Mem813[r6_1011 + 132<i32>:word32]:word32] < 0<32> l00007A7C
l00007A7C:
	r8_854 = CONVERT(r9_841 == 0x5E<32>, bool, word32)
l00007A78:
	r8_854 = 0<32>
l00007A6A:
	r8_854 = 1<32>
l00007A82:
	r9 = Mem813[sp_1004 + 4<i32>:word32]
	r2 = CONVERT(SLICE(r8_854, byte, 0), byte, word32)
	r8_865 = r5_1010 + 4<32>
	branch r2 == 0<32> l00007A92
l00007A8E_1:
	r5_1010 = r8_865
l00007A92:
	branch r9 == 0<32> l00007A9A
l00007A96:
	call Mem813[r6_1011 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_814,Mem:Mem813,r0:r0_831,r1:r1_825,r10:r10_912,r11:r11_906,r12:r12_820,r2:r2_863,r3:r3_885,r4:r4_815,r5:r5_891,r6:r6_845,r7:r7_895,r8:r8_865,r9:r9_860
		defs: lr:lr_925,r1:r1_918,r10:r10_930,r11:r11_929,r12:r12_928,r2:r2_919,r3:r3_920,r4:r4_921,r5:r5_922,r6:r6_923,r9:r9_926,sp:sp_916
l00007A9A:
	r8 = r1_1006 ^ 0x20000<32>
	r7_1012 = r12_820
	r5_1010 = r5_1010 + 4<i32>
	r12_1016 = Mem813[r5_1010:word32]
	r0_1005 = CONVERT(SLICE(r8, bool, 1), bool, word32)
l00007AA8:
	Mem947[sp_1004 + 8<i32>:word32] = r0_1005
	branch r0_1005 == 0<32> l00007ACA
l00007AAE:
	branch r12_1016 != 0x5C<32> l00007ACA
l00007ACA:
	branch r12_1016 != 0x5B<32> l00007B94
l00007B94:
	branch r12_1016 == 0<32> l00007D40
l00007AD0:
	r8 = Mem947[r5_1010:word32]
	branch r8 != 0x3A<32> l00007B9A
l00007B9A:
	r9_967 = Mem947[sp_1004 + 4<i32>:word32]
	branch r9_967 == 0<32> l00007BA4
l00007BA0:
	call Mem947[r6_1011 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_993,Mem:Mem947,r0:r0_945,r1:r1_977,r10:r10_1003,r11:r11_1000,r12:r12_950,r2:r2_980,r3:r3_983,r4:r4_986,r5:r5_959,r6:r6_972,r7:r7_990,r8:r8_994,r9:r9_967
		defs: lr:lr_1013,r0:r0_1005,r1:r1_1006,r10:r10_1018,r11:r11_1017,r12:r12_1016,r2:r2_1007,r3:r3_1008,r4:r4_1009,r5:r5_1010,r6:r6_1011,r7:r7_1012,sp:sp_1004
l00007AD8:
	lr = sp_1004 + 0x18<32>
	r3 = r5_1010
	r10 = 0<32>
l00007AE0:
	r3 = r3 + 4<32>
	r9 = Mem1026[r3:word32]
	r11 = r9 - 0x61<32>
	branch r9 != 0x3A<32> l00007B6C
l00007AEE:
	branch Mem1026[r3 + 4<i32>:word32] != 0x5D<32> l00007B6C
l00007B6C:
	r10 = r10 + 1<32>
	branch r9 >u 0x79<32> || r9 <u 0x61<32> l00007BA4
l00007B74:
	branch r10 == 0x100<32> l00007D40
l00007B7C:
	Mem1045[lr:word32] = r9
	lr = lr + 4<i32>
l00007AF6:
	lr = sp_1004 + 0x520<32>
	Mem1055[lr + (r10 << 2<8>) + -1288<i32>:word32] = 0<32>
	r10 = sp_1004 + 0x18<32>
	r11 = sp_1004 + 0x41C<32>
l00007B0C:
	r9 = Mem1057[r10:word32]
	branch r9 < 0x20<32> l00007D40
l00007B16:
	branch r9 <= 0x23<32> l00007B48
l00007B1E:
	branch r9 < 0x25<32> l00007D40
l00007B26:
	branch r9 <= 0x3F<32> l00007B48
l00007B2E:
	branch r9 < 0x41<32> l00007D40
l00007B36:
	branch r9 <= 0x5F<32> l00007B48
l00007B42:
	branch r9 >u 0x7E<32> || r9 <u 0x61<32> l00007D40
l00007B48:
	branch r10 == sp_1004 + 0x418<32> l00007D40
l00007B52:
	Mem1084[r11:byte] = SLICE(r9, byte, 0)
	r10 = r10 + 4<32>
	r11 = r11 + 1<i32>
	r8_1086 = Mem1084[r10:word32]
	branch r8_1086 != 0<32> l00007B0C
l00007B5C:
	Mem1091[r11:byte] = SLICE(r8_1086, byte, 0)
	call Mem1091[r6_1011 + 300<i32>:word32] (retsize: 0;)
		uses: lr:lr_1049,Mem:Mem1091,r0:r0_945,r1:r1_977,r10:r10_1080,r11:r11_1085,r12:sp_946 + 0x41C<32>,r2:r2_980,r3:r3_1025,r4:r4_986,r5:r5_959,r6:r6_972,r7:r7_990,r8:r8_1086,r9:r9_1058
		defs: lr:lr_1133,r0:r0_1125,r1:r1_1126,r10:r10_1138,r12:r12_1136,r2:r2_1127,r3:r3_1128,r4:r4_1129,r6:r6_1131,r7:r7_1132,r8:r8_1135,r9:r9_1134,VNZC:VNZC_1139
	r11 = r12_1136
	branch SLICE(VNZC_1139, bool, 1) l00007B80
l00007B80:
	call Mem1091[r6_1131 + 308<i32>:word32] (retsize: 0;)
		uses: lr:lr_1133,Mem:Mem1091,r0:r0_1125,r1:r1_1126,r10:r10_1138,r11:r12_1136,r12:Mem1091[r4_1129:word32],r2:r2_1127,r3:r3_1128,r4:r4_1129,r5:r3_1128 + 8<32>,r6:r6_1131,r7:r7_1132,r8:r8_1135,r9:r9_1134
		defs: lr:lr_1154,r0:r0_1146,r1:r1_1147,r10:r10_1159,r11:r11_1158,r2:r2_1148,r3:r3_1149,r4:r4_1150,r5:r5_1151,r6:r6_1152,r7:r7_1153,r9:r9_1155,sp:sp_1145,VNZC:VNZC_1160
	branch SLICE(VNZC_1160, bool, 1) l00007C06
l00007B8C:
	r8 = Mem1091[r5_1010:word32]
	r5_1010 = r3 + 0xC<32>
l00007B6A:
l00007AB4:
	r12_1016 = Mem947[r5_1010:word32]
	branch r12_1016 == 0<32> l00007D40
l00007ABC:
	r8_1168 = Mem947[sp_1004 + 4<i32>:word32]
	branch r8_1168 == 0<32> l00007AC6
l00007AC2:
	call Mem947[r6_1011 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_993,Mem:Mem947,r0:r0_945,r1:r1_977,r10:r10_1003,r11:r11_1000,r12:r12_1165,r2:r2_980,r3:r3_983,r4:r4_986,r5:r5_959,r6:r6_972,r7:r7_990,r8:r8_1168,r9:r9_1171
		defs: lr:lr_1181,r0:r0_1173,r1:r1_1174,r10:r10_1186,r11:r11_1185,r12:r12_1184,r2:r2_1175,r3:r3_1176,r4:r4_1177,r5:r5_1178,r6:r6_1179,r7:r7_1180,sp:sp_1172
l00007AC6:
	r5_1010 = r5_1010 + 4<32>
l00007BA4:
	r9 = Mem1192[r5_1010:word32]
	branch r9 != 0x2D<32> l00007D48
l00007BAE:
	r8_1198 = Mem1192[r5_1010 + 4<i32>:word32]
	branch r8_1198 == 0<32> l00007D48
l00007BB6:
	branch r8_1198 == 0x5D<32> l00007D48
l00007D48:
	branch r12_1016 != r7_1012 l00007BBE
l00007D4E:
l00007BBE:
	r8 = r9
	r5_1010 = r5_1010 + 4<32>
	branch r9 != 0x2D<32> l00007BF4
l00007BC8:
	r9 = Mem1192[r5_1010:word32]
	branch r9 == 0x5D<32> l00007BFA
l00007BD0:
	r8_1226 = r9
	r5_1010 = r5_1010 + 4<32>
	branch r0_1005 == 0<32> l00007BE0
l00007BD8:
	branch r9 != 0x5C<32> l00007BE0
l00007BDE:
	r5_1010 = r5_1010 + 8<32>
	r8_1226 = Mem1192[r5_1010 + 4<32>:word32]
l00007BE0:
	branch r8_1226 == 0<32> l00007D40
l00007BE6:
	branch r12_1016 >u r7_1012 l00007BF2
l00007BEC:
	branch r7_1012 <=u r8_1226 l00007C06
l00007C06:
	r8 = Mem1251[r5_2434:word32]
	branch r8 == 0<32> l00007D40
l00007C10:
	lr = Mem1251[sp_1004 + 8<i32>:word32]
	r5_1010 = r5_2434 + 4<32>
	r10 = r8
	branch lr == 0<32> l00007C2C
l00007C1A:
	branch r8 != 0x5C<32> l00007C2C
l00007C2C:
	branch r8 != 0x5B<32> l00007CB8
l00007C32:
	r8_1269 = Mem1251[r5_1010:word32]
	branch r8_1269 != 0x3A<32> l00007C6A
l00007C6A:
	branch r8_1269 != 0x3D<32> l00007C92
l00007C92:
	branch r8_1269 != 0x2E<32> l00007C06
l00007C98:
	r12_1276 = r5_1010 + 4<32>
l00007C9C:
	r12_1276 = r12_1276 + 4<32>
	r8_1281 = Mem1251[r12_1276:word32]
	branch r8_1281 == 0<32> l00007D40
l00007CA4:
	branch r8_1281 != 0x2E<32> l00007C9C
l00007CAA:
	r8 = Mem1251[r12_1276 + 4<i32>:word32]
	branch r8 != 0x5D<32> l00007C9C
l00007CB2:
	r10 = Mem1251[r12_1276 + 8<i32>:word32]
	r5_1010 = r12_1276 + 0xC<32>
l00007C70:
	r9 = r5_1010 + 4<32>
	branch Mem1251[r5_1010 + 4<i32>:word32] == 0<32> l00007D40
l00007C7A:
	r9 = r5_1010 + 8<32>
	branch Mem1251[r5_1010 + 8<32>:word32] != 0x3D<32> l00007D40
l00007C84:
	r8 = Mem1251[r5_1010 + 0xC<32>:word32]
	branch r8 != 0x5D<32> l00007D40
l00007C8C:
	r10 = Mem1251[r5_1010 + 16<i32>:word32]
	r5_1010 = r5_1010 + 0x14<32>
l00007C3A:
	r9 = r5_1010
l00007C3C:
	r9 = r9 + 4<32>
	r10 = Mem1251[r9:word32]
	branch r9 == r5_2434 + 0x404<32> l00007D40
l00007C48:
	r11 = r10 - 0x61<32>
	branch r10 != 0x3A<32> l00007C5A
l00007C52:
	r8 = Mem1251[r9 + 4<i32>:word32]
	branch r8 == 0x5D<32> l00007C62
l00007C62:
	r10 = Mem1251[r9 + 8<i32>:word32]
	r5_1010 = r9 + 0xC<32>
l00007C5A:
	r5_2434 = r5_1010
	branch r10 >u 0x79<32> || r10 <u 0x61<32> l00007C06
l00007C60:
l00007C20:
	r8 = Mem1251[r5_1010:word32]
	branch r8 == 0<32> l00007D40
l00007C28:
	r5_1010 = r5_1010 + 4<32>
l00007CB8:
	branch r10 != 0x5D<32> l00007C06
l00007CBE:
	branch r2 == 0<32> l00007D1C
l00007CC2:
l00007BF2:
	r5_1010 = r5_1010 + 4<i32>
	r8 = Mem1192[r5_1010:word32]
l00007BF4:
	branch r8 == 0x5D<32> l00007BFE
l00007BFE:
	branch r2 != 0<32> l00007D1C
l00007C04:
l00007BFA:
	r12_1016 = r8
l00007A52:
l000077B4:
	branch r7_1383 != 0x5C<32> l00007D06
l00007D06:
	r8 = Mem1368[sp_1004:word32]
	branch r4_1009 == r8 l00007D40
l00007D0C:
	lr = Mem1368[sp_1004 + 4<i32>:word32]
	r12_1374 = Mem1368[r4_1009:word32]
	branch lr == 0<32> l00007D18
l00007D14:
	call Mem1368[r6_1011 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_1373,Mem:Mem1368,r0:r0_1378,r1:r1_1379,r10:r10_1388,r11:r11_1386,r12:r12_1374,r2:r2_1380,r3:r3_1381,r4:r4_1370,r5:r5_1382,r6:r6_1377,r7:r7_1383,r8:r8_1369,r9:r9_1384
		defs: lr:lr_1399,r1:r1_1392,r10:r10_1404,r11:r11_1403,r12:r12_1402,r2:r2_1393,r3:r3_1394,r4:r4_1395,r5:r5_1396,r6:r6_1397,r7:r7_1398,r8:r8_1401,r9:r9_1400,sp:sp_1390
l00007D18:
	branch r7_1383 != r12_1374 l00007D40
l000077BC:
l00007812:
	branch Test(EQ,SLICE(r1_1006, bool, 1)) l00007830
l00007818:
	r12_1413 = Mem54[r5_1010:word32]
	branch r12_1413 == 0<32> l00007D40
l00007820:
	r8 = Mem54[sp_1004 + 4<i32>:word32]
	r7_1383 = r12_1413
	branch r8 == 0<32> l0000782E
l00007828:
	call Mem54[r6_1011 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_112,Mem:Mem54,r0:r0_102,r1:r1_90,r10:r10_784,r11:r11_278,r12:r12_1413,r2:r2_109,r3:r3_110,r4:r4_104,r5:r5_84,r6:r6_111,r7:r12_1413,r8:r8_1416,r9:r9_266
		defs: r0:r0_1421,r1:r1_1422,r10:r10_1434,r11:r11_1433,r12:r12_1432,r2:r2_1423,r3:r3_1424,r4:r4_1425,r5:r5_1426,r6:r6_1427,r8:r8_1431,r9:r9_1430,sp:sp_1420
	r7_1383 = r12_1432
l0000782E:
	r5_1010 = r5_1010 + 4<32>
l00007830:
	lr = Mem54[sp_1004:word32]
	branch r4_1009 == lr l00007D40
l00007838:
	r9 = Mem54[sp_1004 + 4<i32>:word32]
	r12_1450 = Mem54[r4_1009:word32]
	branch r9 == 0<32> l00007844
l00007840:
	call Mem54[r6_1011 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_1444,Mem:Mem54,r0:r0_1455,r1:r1_1457,r10:r10_1471,r11:r11_1469,r12:r12_1450,r2:r2_1459,r3:r3_1461,r4:r4_1445,r5:r5_1463,r6:r6_1453,r7:r7_1464,r8:r8_1466,r9:r9_1449
		defs: lr:lr_1482,r1:r1_1475,r10:r10_1487,r11:r11_1486,r12:r12_1485,r2:r2_1476,r3:r3_1477,r4:r4_1478,r5:r5_1479,r6:r6_1480,r7:r7_1481,r8:r8_1484,r9:r9_1483,sp:sp_1473
l00007844:
	branch r12_1450 == r7_1383 l00007D1C
l00007D1C:
	r9 = 0<32>
l00007D1E:
	r4_1009 = r4_1009 + 4<32>
	r0_102 = r9
l0000784A:
l00007D2A:
	r9 = Mem45[sp_1004:word32]
	branch r4_1009 == r9 l00007D44
l00007D44:
	r12_125 = 0<32>
l00007D30:
	branch (r1_1006 & 8<32>) == 0<32> l00007D40
l00007D40:
	r12_125 = 1<32>
l00007D36:
	r12_125 = CONVERT(Mem45[r4_1009:word32] != 0x2F<32>, bool, word32)
l00007D50:
	r0Out = <invalid>
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12_125
	lrOut = lr
	return <invalid>
fn00007754_exit:


word32 fn00007D56(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008144
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00007D56_entry:
l00007D56:
	r6_33 = 0x00007D5E<p32> - Mem29[0x00007EC8<p32>:word32]
	call Mem52[r6_33 + 16<i32>:word32] (retsize: 0;)
		uses: lr:fp - 40<i32>,Mem:Mem52,r0:r9,r1:r10,r10:r10,r11:0<32>,r12:r11,r2:r12,r3:r3,r4:r11,r5:r5,r6:r6_33,r7:fp - 36<i32>,r8:r8,r9:r9,Stack +0008:r8,Stack +000C:r11,Stack +0010:0<32>,Stack +0014:fp - 40<i32>,Stack +001C:0<32>,Stack +0020:lr,Stack +0024:r7,Stack +0028:r6,Stack +002C:r5,Stack +0030:r4,Stack +0034:r3,Stack +0038:r2,Stack +003C:r1,Stack +0040:r0
		defs: lr:lr_62,r0:r0_54,r1:r1_55,r11:r11_63,r12:r12_64,r2:r2_56,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,r8:r8_67,r9:r9_66,sp:sp_53
	r3_1041 = Mem52[r7_1005 + 36<i32>:word32]
	Mem72[r7_1005 + -28<i32>:word32] = sp_1013
	Mem73[r7_1005 + -32<i32>:word32] = r4_58 + 1<32>
	Mem74[r7_1005 + -8<i32>:word32] = r12_64
	r4_1001 = r4_58 + 1<32>
l00007D96:
	r10_1096 = CONVERT(Mem76[r4_1001:byte], byte, word32)
	branch r10_1096 == 0<32> l00008124
l00007D9E:
	branch SLICE(r10_1096, byte, 0) != 0x5B<8> l00007E00
l00007E00:
	branch SLICE(r10_1096, byte, 0) == 0x3F<8> l00007E28
l00007E08:
	branch SLICE(r10_1096, byte, 0) == 0x2A<8> l00007E28
l00007E10:
	branch SLICE(r10_1096, byte, 0) == 0x2B<8> l00007E28
l00007E18:
	branch SLICE(r10_1096, byte, 0) == 0x40<8> l00007E28
l00007E20:
	branch SLICE(r10_1096, byte, 0) != 0x21<8> l00007E3E
l00007E28:
	r9_100 = CONVERT(Mem76[r4_1001 + 1<i32>:byte], byte, word32)
	r8_101 = 0x28<32>
	branch SLICE(r9_100, byte, 0) != 0x28<8> l00007E3E
l00007E3E:
	branch SLICE(r10_1096, byte, 0) != 0x29<8> l00007EAC
l00007EAC:
	r8_101 = 0x7C<32>
	branch SLICE(r10_1096, byte, 0) != 0x7C<8> l00007F16
l00007EB4:
	r8_101 = Mem76[r7_1005 + -16<i32>:word32]
	branch r8_101 != 0<32> l00007F16
l00007EBC:
	branch r2_1006 >u 0x40<32> || r2_1006 <u 0x3F<32> l00007ED0
l00007ED0:
	lr_1052 = Mem76[r7_1005 + -32<i32>:word32]
	r8_101 = r4_1001 + 1<32> + lr_1052
l00007EC6:
	r8_101 = Mem76[r7_1005 + -8<i32>:word32]
l00007EDA:
	branch r8_101 >u 0x1F3B<32> l00008124
l00007EE2:
	r8_134 = r8_101 + 0xA<32>
	r11_138 = Mem76[r7_1005 + -32<i32>:word32]
	call Mem76[r6_1020 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_169,Mem:Mem76,r0:r0_154,r1:r1_158,r10:r4_75 + r11_138,r11:r11_138,r12:sp_141 + (r8_134 & 0xFFFFFFFC<32>) + 4<32>,r2:r2_120,r3:r3_163,r4:r4_75,r5:r5_167,r6:r6_150,r7:r7_113,r8:r8_134 & 0xFFFFFFFC<32>,r9:r9_174
		defs: lr:lr_185,r0:r0_177,r1:r1_178,r11:r11_186,r12:r12_187,r2:r2_179,r3:r3_180,r4:r4_181,r6:r6_183,r7:r7_184,sp:sp_176
	Mem195[r7_1005 + -32<i32>:word32] = r4_1001 + 1<32>
	Mem197[r12_187:byte] = 0<8>
	Mem199[sp_1013:word32] = 0<32>
	r8_101 = Mem199[r7_1005 + -12<i32>:word32]
	Mem201[r8_101:word32] = sp_1013
	Mem202[r7_1005 + -12<i32>:word32] = sp_1013
	r5_1048 = sp_1013
	r9_100 = r4_1001 + 1<32>
l00007E46:
	r8_203 = Mem76[r7_1005 + -16<i32>:word32]
	Mem205[r7_1005 + -16<i32>:word32] = r8_203 - 1<32>
	r8_101 = r8_203 - 1<32>
	branch r8_203 != 0<32> l00007F16
l00007E54:
	r8_101 = r2_1006 - 0x3F<32>
	branch r8_101 >u 1<32> l00007E64
l00007E64:
	lr_1052 = Mem205[r7_1005 + -32<i32>:word32]
	r8_101 = r4_1001 + 1<32>
	r12_213 = r8_101 + lr_1052
l00007E5E:
	r12_213 = Mem205[r7_1005 + -8<i32>:word32]
l00007E70:
	branch r12_213 >u 0x1F3B<32> l00008124
l00007E78:
	r8_219 = r12_213 + 0xA<32>
	r11_223 = Mem205[r7_1005 + -32<i32>:word32]
	call Mem205[r6_1020 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_236,Mem:Mem205,r0:r0_154,r1:r1_158,r10:r4_75 + r11_223,r11:r11_223,r12:sp_141 + (r8_219 & 0xFFFFFFFC<32>) + 4<32>,r2:r2_120,r3:r3_163,r4:r4_75,r5:r5_167,r6:r6_150,r7:r7_113,r8:r8_219 & 0xFFFFFFFC<32>,r9:r9_174
		defs: lr:lr_247,r0:r0_239,r1:r1_240,r10:r10_250,r11:r11_248,r12:r12_249,r2:r2_241,r3:r3_242,r4:r4_243,r6:r6_245,r7:r7_246,sp:sp_238
	Mem256[r12_249:byte] = 0<8>
	r9_258 = Mem256[r7_1005 + -12<i32>:word32]
	Mem259[sp_238:word32] = 0<32>
	Mem260[r9_258:word32] = sp_238
	r5_254 = sp_238
	r8_261 = Mem260[r7_1005 + -4<i32>:word32]
	branch r8_261 != 0<32> l00007F30
l00007EAA:
l00007F1A:
	call Mem260[r6_1093 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_247,Mem:Mem260,r0:r0_239,r1:r1_240,r10:0x44A<32>,r11:Mem260[r6_245 + 160<i32>:word32],r12:Mem260[r6_245 + 376<i32>:word32],r2:r2_241,r3:r3_242,r4:r4_243,r5:sp_238,r6:r6_245,r7:r7_246,r8:r8_261,r9:0x00008944<p32>
		defs: lr:lr_279,r0:r0_271,r1:r1_272,r10:r10_282,r11:r11_280,r2:r2_273,r3:r3_274,r4:r4_275,r5:r5_276,r6:r6_277,r7:r7_278
l00007F30:
	r9_100 = CONVERT(Mem260[r4_1067 + -1<i32>:byte], byte, word32)
	r8_101 = 0x29<32>
	branch SLICE(r9_100, byte, 0) == 0x29<8> l00007F52
l00007F3C:
	call Mem260[r6_1093 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_305,Mem:Mem260,r0:r0_299,r1:r1_300,r10:0x44B<32>,r11:Mem260[r6_293 + 160<i32>:word32],r12:Mem260[r6_293 + 780<i32>:word32],r2:r2_301,r3:r3_302,r4:r4_286,r5:r5_303,r6:r6_293,r7:r7_304,r8:0x29<32>,r9:0x00008944<p32>
		defs: lr:lr_316,r0:r0_308,r1:r1_309,r10:r10_319,r11:r11_317,r2:r2_310,r3:r3_311,r4:r4_312,r5:r5_313,r6:r6_314,r7:r7_315,r8:r8_321,r9:r9_320
l00007F52:
	branch r2_241 == 0x21<32> l00007F74
l00007F74:
	r2_327 = r1_1065
l00008106:
	branch r2_327 <=u r0_1060 l000080A2
l000080A2:
	r5_334 = Mem260[r7_1005 + -4<i32>:word32]
l000080AE:
	r8_339 = r3_1063 & 0xFFFFFFFB<u32>
	branch CONVERT(SLICE(r3_1063, bool, 0), bool, word32) == 0<32> l000080BC
l000080B8_1:
	r8_339 = r3_1063
l000080BC:
	r12_345 = r5_334 + 4<32>
	r9_350 = Mem260[r7_1005 + -24<i32>:word32]
	branch r5_334 != 0<32> l000080A8
l000080A8:
	branch SLICE(fn00008144(r2_327, r8_339, r9_350, r2_327, r1_1065, r12_345, out r0_1060, out r1_1065, out r2_327, out r3_1063, out r4_1067, out r5_377, out r6_1216, out r7_1005, out r8_101, out r9_100, out r10_1096, out r11_1101, out r12_1217, out lr_1052), bool, 1) l00008104
l000080AC:
	r5_334 = Mem260[r5_377:word32]
l000080CC:
l00008130:
	branch Test(NE,SLICE(r3_1063, bool, 0)) l000080CE
l000080CE:
	r10_393 = r3_1063 & 0xFFFFFFFB<u32>
l00008136:
	r10_393 = r3_1063
l000080D2:
	branch r2_327 != r1_1065 l000080DC
l000080DC:
	branch Mem260[r2_327 + -1<i32>:byte] == 0x2F<8> l000080EC
l000080EC:
	r9_410 = CONVERT((r3_1063 & 5<32>) == 5<32>, bool, word32)
l000080E8:
	r9_410 = 0<32>
l000080F6:
	r9_413 = CONVERT(SLICE(r9_410, byte, 0), byte, word32)
l000080D6:
	r9_413 = Mem260[r7_1005 + -24<i32>:word32]
l000080F8:
	branch SLICE(fn00008144(r2_327, r10_393, r9_413, r0_1060, r2_327, r4_1067, out r0_1060, out r1_1065, out r2_327, out r3_1063, out r4_1067, out r5_1221, out r6_1222, out r7_1005, out r8_101, out r9_100, out r10_1096, out r11_1101, out r12_1223, out lr_1052), bool, 1) l00008128
l00008104:
	r2_327 = r2_327 + 1<32>
l0000810C:
l00007F58:
	branch r2_241 == 0x2A<32> l00007F78
l00007F78:
	branch SLICE(fn00008144(r2_241, r3_1063, Mem260[r7_1005 + -24<i32>:word32], r0_1060, r1_1065, r4_1067, out r0_1060, out r1_1065, out r2_1203, out r3_1063, out r4_1204, out r5_1205, out r6_1206, out r7_1005, out r8_101, out r9_100, out r10_1096, out r11_1101, out r12_1207, out lr_1052), bool, 1) l00008128
l00007F5E:
	branch r2_241 == 0x2B<32> l00007F8A
l00007F8A:
	r5_509 = r1_1065
l00008034:
	branch r5_509 <=u r0_1060 l00007F8E
l00007F8E:
	r12_518 = Mem517[r7_1005 + -4<i32>:word32]
	r2_520 = CONVERT(SLICE(r3_1063, bool, 0), bool, word32)
	r8_521 = r3_1063 & 0xFFFFFFFB<u32>
	r9_522 = Mem517[r7_1005 + -24<i32>:word32]
	branch r2_520 == 0<32> l00007FA4
l00007FA0_1:
	r8_521 = r3_1063
l00007FA4:
	Mem536[r7_1005 + -32<i32>:word32] = r9_522
	branch SLICE(fn00008144(r2_520, r8_521, r9_522, r5_509, r1_1065, r12_518 + 4<32>, out r0_1060, out r1_1065, out r2_552, out r3_1063, out r4_554, out r5_555, out r6_1213, out r7_1005, out r8_1214, out r9_100, out r10_1096, out r11_1101, out r12_1215, out lr_1052), bool, 1) l00008032
l00007FB2:
	branch r2_552 != 0<32> l00007FBC
l00007FB8_1:
	r10_1096 = r3_1063 & 0xFFFFFFFB<u32>
l00007FBC:
	branch r2_552 == 0<32> l00007FC0
l00007FBC_1:
	r10_1096 = r3_1063
l00007FC0:
	branch r5_555 == r1_1065 l00007FE4
l00007FC4:
	branch Mem536[r5_555 + -1<i32>:byte] == 0x2F<8> l00007FD4
l00007FD4:
	r9_591 = CONVERT((r3_1063 & 5<32>) == 5<32>, bool, word32)
l00007FD0:
	r9_591 = 0<32>
l00007FDE:
	Mem599[r7_1005 + -32<i32>:word32] = CONVERT(SLICE(r9_591, byte, 0), byte, word32)
l00007FE4:
	branch SLICE(fn00008144(r2_552, r10_1096, Mem601[r7_1005 + -32<i32>:word32], r0_1060, r5_555, r4_554, out r0_1060, out r1_1065, out r2_644, out r3_1063, out r4_1218, out r5_555, out r6_1219, out r7_1005, out r8_101, out r9_100, out r10_1096, out r11_1101, out r12_1220, out lr_1052), bool, 1) l00008128
l00007FF6:
	branch r5_555 == r1_1065 l00008032
l00007FFA:
	r8_661 = CONVERT(Mem601[r5_555 + -1<i32>:byte], byte, word32)
	branch r2_644 != 0<32> l00008008
l00008004_1:
	r10_1096 = r3_1063 & 0xFFFFFFFB<u32>
l00008008:
	branch r2_644 == 0<32> l0000800C
l00008008_1:
	r10_1096 = r3_1063
l0000800C:
	branch SLICE(r8_661, byte, 0) == 0x2F<8> l00008018
l00008018:
	r9_679 = CONVERT((r3_1063 & 5<32>) == 5<32>, bool, word32)
l00008014:
	r9_679 = 0<32>
l00008022:
	branch SLICE(fn00008144(r2_644, r10_1096, r9_679, r0_1060, r5_555, Mem601[r7_1005 + -20<i32>:word32] - 1<32>, out r0_1060, out r1_1065, out r2_1224, out r3_1063, out r4_1225, out r5_555, out r6_1226, out r7_1005, out r8_101, out r9_100, out r10_1096, out r11_1101, out r12_1227, out lr_1052), bool, 1) l00008128
l00008032:
	r5_509 = r5_555 + 1<32>
l0000803A:
	r8_101 = Mem517[Mem517[r7_1005 + -4<i32>:word32]:word32]
	branch r8_101 == 0<32> l0000812C
l00008044:
	Mem746[r7_1005 + -4<i32>:word32] = r8_101
l00007F64:
	branch r2_241 == 0x3F<32> l0000804C
l0000804C:
	branch SLICE(fn00008144(r2_241, r3_1063, Mem260[r7_1005 + -24<i32>:word32], r0_1060, r1_1065, r4_1067, out r0_1060, out r1_1065, out r2_1208, out r3_1063, out r4_1067, out r5_1209, out r6_1093, out r7_1005, out r8_101, out r9_100, out r10_1096, out r11_1101, out r12_1210, out lr_1052), bool, 1) l00008128
l00007F6A:
	branch r2_241 != 0x40<32> l0000810E
l0000810E:
	call Mem260[r6_1093 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_487,Mem:Mem260,r0:r0_480,r1:r1_326,r10:0x4A5<32>,r11:Mem260[r6_486 + 160<i32>:word32],r12:Mem260[r6_486 + 372<i32>:word32],r2:r2_323,r3:r3_478,r4:r4_483,r5:r5_485,r6:r6_486,r7:r7_475,r8:r8_779,r9:0x00008944<p32>
		defs: lr:lr_789,r10:r10_792,r11:r11_790,r7:r7_788,r8:r8_794,r9:r9_793
l00007F72:
l0000805C:
	lr_1052 = r3_1063 & 0xFFFFFFFB<u32>
	Mem802[r7_1005 + -32<i32>:word32] = lr_1052
	r2_800 = r3_1063
l00008066:
	r12_805 = Mem804[r7_1005 + -4<i32>:word32]
	r9_806 = Mem804[r7_1005 + -32<i32>:word32]
	r5_811 = CONVERT(SLICE(r3_1063, bool, 0), bool, word32)
	r5_815 = r5_811
	branch r5_811 != 0<32> l0000807C
l00008078_1:
	r5_815 = r9_806
l0000807C:
	branch r5_811 == 0<32> l00008080
l0000807C_1:
	r5_815 = r2_800
l00008080:
	call Mem804[r6_1093 + 512<i32>:word32] (retsize: 0;)
		uses: lr:lr_842,Mem:Mem804,r0:r0_827,r1:r1_830,r10:r10_849,r11:r4_807,r12:r12_805 + 4<32>,r2:r2_818,r3:r3_809,r4:r4_807,r5:r5_836,r6:r6_822,r7:r7_803,r8:r8_854,r9:r9_806
		defs: r0:r0_859,r1:r1_860,r12:r12_869,r2:r2_861,r5:r5_864,r7:r7_866
	branch SLICE(fn00008144(r2_861, r5_864, Mem804[r7_866 + -24<i32>:word32], r0_859, r1_860, r12_869, out r0_1060, out r1_1065, out r2_800, out r3_1063, out r4_1067, out r5_1211, out r6_1093, out r7_1005, out r8_101, out r9_100, out r10_1096, out r11_1101, out r12_1212, out lr_1052), bool, 1) l00008128
l00008128:
	r12_1160 = 0<32>
l00008092:
	r8_101 = Mem804[Mem804[r7_1005 + -4<i32>:word32]:word32]
	branch r8_101 == 0<32> l0000812C
l0000812C:
	r12_1160 = 1<32>
l0000809C:
	Mem901[r7_1005 + -4<i32>:word32] = r8_101
l00007E32:
	r9_902 = Mem76[r7_1005 + -16<i32>:word32]
	Mem905[r7_1005 + -16<i32>:word32] = r9_902 + 1<32>
	r9_100 = r9_902 + 1<32>
l00007DA6:
	r5_1048 = Mem76[r6_1020 + 132<i32>:word32]
	r8_907 = Mem76[r5_1048:word32]
	branch r8_907 != 0<32> l00007DC2
l00007DB0:
	call Mem76[r6_1020 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_171,Mem:Mem76,r0:r0_154,r1:r1_158,r10:r10_77,r11:r11_911,r12:Mem76[r6_150 + 164<i32>:word32],r2:r2_120,r3:r3_163,r4:r4_75,r5:r5_906,r6:r6_150,r7:r7_113,r8:r8_907,r9:r9_175
		defs: lr:lr_921,r0:r0_913,r1:r1_914,r10:r10_924,r11:r11_922,r12:r12_923,r2:r2_915,r3:r3_916,r4:r4_917,r5:r5_918,r6:r6_919,r7:r7_920,sp:sp_912,VNZC:VNZC_927
	Z_928 = SLICE(VNZC_927, bool, 1) (alias)
	branch Z_928 l00007DBC
l00007DB8_1:
	r12_923 = 0xFFFFFFFF<32>
l00007DBC:
	branch Z_928 l00007DC0
l00007DBC_1:
	r12_923 = 1<32>
l00007DC0:
	Mem936[r5_1048:word32] = r12_923
l00007DC2:
	r4_1001 = r4_1001 + 1<32>
	r9_942 = CONVERT(Mem941[r4_1001:byte], byte, word32)
	branch SLICE(r9_942, byte, 0) == 0x21<8> l00007DDC
l00007DCE:
	branch Mem941[r5_1048:word32] >= 0<32> l00007DDE
l00007DD4:
	branch SLICE(r9_942, byte, 0) != 0x5E<8> l00007DDE
l00007DDC:
	r4_1001 = r4_1001 + 1<32>
l00007DDE:
	branch Mem941[r4_1001:byte] != 0x5D<8> l00007DF4
l00007DE8:
	r4_1001 = r4_1001 + 1<32>
l00007DF4:
	r9_100 = CONVERT(Mem941[r4_1001:byte], byte, word32)
	r8_101 = 0x5D<32>
	branch SLICE(r9_100, byte, 0) != 0x5D<8> l00007DEC
l00007DEC:
	r4_1001 = r4_1001 + 1<32>
	branch r9_100 == 0<32> l00008124
l00008124:
	r12_1160 = 0xFFFFFFFF<32>
l0000813A:
	sp_989 = Mem985[r7_1005 + -28<i32>:word32]
	r7_992 = Mem985[sp_989 + 0x24<32>:word32]
	r6_993 = Mem985[sp_989 + 0x28<32>:word32]
	r5_994 = Mem985[sp_989 + 0x2C<32>:word32]
	r4_995 = Mem985[sp_989 + 0x30<32>:word32]
	r3_996 = Mem985[sp_989 + 0x34<32>:word32]
	r2_997 = Mem985[sp_989 + 0x38<32>:word32]
	r0_999 = Mem985[sp_989 + 0x40<32>:word32]
	r1Out = Mem985[sp_989 + 0x3C<32>:word32]
	r2Out = r2_997
	r3Out = r3_996
	r4Out = r4_995
	r5Out = r5_994
	r6Out = r6_993
	r7Out = r7_992
	r8Out = r8_101
	r9Out = r9_100
	r10Out = r10_1096
	r11Out = r11_1101
	r12Out = r12_1160
	lrOut = lr_1052
	return r0_999
fn00007D56_exit:
l00007DFE:
l00007F16:
	r4_1001 = r4_1001 + 1<32>


byte fn00008144(word32 r2, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007D56
//      fn00008144
//      fn000087C0
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00008144_entry:
l00008144:
	sp_1102 = fp - 0x140<32>
	r6_1000 = 0x0000814C<p32> - Mem29[0x000082AA<p32>:word32]
	r0_101 = r9
	r1_102 = r8
	r5_1011 = r12
	r4_105 = r11
l00008788:
	r7_1255 = CONVERT(Mem45[r5_1011:byte], byte, word32)
	branch r7_1255 != 0<32> l0000815C
l0000815C:
	lr = r1_102 & 0x10<32>
	Mem54[sp_1102 + 8<i32>:word32] = lr
	branch lr == 0<32> l00008172
l00008166:
	r7_1255 = CONVERT(Mem54[Mem54[Mem54[r6_1000 + -32<i32>:word32]:word32] + r7_1255 * 2<32>:byte], byte, word32)
l00008172:
	r5_1011 = r5_1011 + 1<32>
	branch SLICE(r7_1255, byte, 0) == 0x21<8> l00008720
l0000817E:
	branch SLICE(r7_1255, byte, 0) == 0x2A<8> l0000825E
l0000825E:
	r8_74 = r1_102 & 0x20<32>
	Mem77[sp_1102 + 20<i32>:word32] = r8_74
	branch r8_74 == 0<32> l0000828A
l00008268:
	r9 = CONVERT(Mem77[r5_1011:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x28<8> l0000828A
l00008272:
	r9_83 = Mem77[sp_1102 + 4<i32>:word32]
	Mem93[sp_1102 - 4<i32>:word32] = r1_102
	r0_101 = fn00007D56(r0_101, r1_102, r2, r3, r4_105, r5_1011, r6_1000, r7_1255, r0_101, r9_83, r4_105, r5_1011, r7_1255, lr, out r1_102, out r2, out r3_2302, out r4_105, out r5_1011, out r6_1000, out r7_2303, out r8_1004, out r9, out r10, out r11, out r12_112, out lr)
	branch r12_112 != 0xFFFFFFFF<32> l000087BA
l0000828A:
	lr = Mem120[sp_1102 + 4<i32>:word32]
	branch r4_105 == lr l000082A0
l00008290:
	r9 = CONVERT(Mem120[r4_105:byte], byte, word32)
	r8_1004 = 0x2E<32>
	branch SLICE(r9, byte, 0) != 0x2E<8> l000082A0
l0000829A:
	branch r0_101 != 0<32> l000087A8
l000082A0:
	r7_137 = CONVERT(Mem120[r5_1011:byte], byte, word32)
	r3_138 = r5_1011 + 1<i32>
l000082EC:
	r5_143 = CONVERT(SLICE(r7_137, byte, 0) == 0x3F<8>, bool, word32)
	branch r5_143 != 0<32> l000082AC
l000082F8:
	branch SLICE(r7_137, byte, 0) == 0x2A<8> l000082AC
l000082AC:
	r9 = CONVERT(Mem120[r3_138:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x28<8> l000082CA
l000082B6:
	branch Test(NE,SLICE(r1_102, bool, 5)) l000082CA
l000082BC:
	fn00007294(r0_101, r1_102, r2, r3_138, lr, out r1_2304, out r2_2305, out r3_2306, out r4_2307, out r6_2308, out r9, out r10, out r12_172, out lr_2309)
	branch r12_172 == r3_138 l000082CA
l000082CA:
	branch r5_143 == 0<32> l000082EA
l000082CE:
	r8_1004 = Mem120[sp_1102 + 4<i32>:word32]
	branch r4_105 == r8_1004 l000087A8
l000082D6:
	r9 = CONVERT(Mem120[r4_105:byte], byte, word32)
	r8_1004 = 0x2F<32>
	branch SLICE(r9, byte, 0) != 0x2F<8> l000082E8
l000082E0:
	branch Test(EQ,SLICE(r1_102, bool, 0)) l000087A8
l000082E8:
	r4_105 = r4_105 + 1<32>
l000082C6:
	r3_138 = r12_172
l000082EA:
	r3_138 = r3_138 + 1<i32>
	r7_137 = CONVERT(Mem120[r3_138:byte], byte, word32)
l00008300:
	r8_1004 = CONVERT(SLICE(r1_102, bool, 0), bool, word32)
	branch r7_137 != 0<32> l0000832C
l0000832C:
	r2_220 = CONVERT(SLICE(r8_1004, byte, 0), byte, word32)
	r10_221 = Mem120[sp_1102 + 4<i32>:word32] + r4_105
	branch r2_220 == 0<32> l0000833A
l00008336_1:
	r11 = 0x2F<32>
l0000833A:
	branch r2_220 != 0<32> l0000833E
l0000833A_1:
	r11 = 0<32>
l0000833E:
	call Mem120[r6_1000 + 316<i32>:word32] (retsize: 0;)
		uses: lr:lr_121,Mem:Mem120,r0:r0_129,r1:r1_1486,r10:r10_221,r11:r11_267,r12:r4_190,r2:r2_220,r3:r3_150,r4:r4_190,r5:r7_140,r6:r6_234,r7:r7_140,r8:r8_215,r9:r9_257
		defs: r0:r0_283,r1:r1_284,r10:r10_296,r11:r11_295,r12:r12_294,r2:r2_285,r3:r3_286,r4:r4_287,r5:r5_288,r6:r6_289,r7:r7_290,r9:r9_292,sp:sp_282,VNZC:VNZC_297
	lr = Mem120[sp_282 + 4<i32>:word32]
	branch SLICE(VNZC_297, bool, 1) l0000834C
l00008348_1:
	lr = r12_294
l0000834C:
	Mem304[sp_282 + 16<i32>:word32] = lr
	branch SLICE(r7_290, byte, 0) == 0x5B<8> l0000837C
l00008354:
	branch Mem304[sp_282 + 20<i32>:word32] == 0<32> l000083B0
l0000835A:
	branch SLICE(r7_290, byte, 0) == 0x40<8> l00008372
l00008362:
	branch SLICE(r7_290, byte, 0) == 0x2B<8> l00008372
l0000836A:
	branch SLICE(r7_290, byte, 0) != 0x21<8> l000083B0
l00008372:
	r9 = CONVERT(Mem304[r3_286:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x28<8> l000083B0
l000083B0:
	branch SLICE(r7_290, byte, 0) != 0x2F<8> l000083E4
l000083E4:
	branch r2_285 == 0<32> l000083EC
l000083E8:
	r2_1534 = r1_284
l000083B8:
	branch r2_285 == 0<32> l000083EC
l000083EC:
	r2_1534 = r1_284 & 0xFFFFFFFB<u32>
l000083F0:
	r8_1004 = 0x5C<32>
	branch SLICE(r7_290, byte, 0) == 0x5C<8> l000083FC
l000083FC:
	branch (r1_284 & 2<32>) != 0<32> l00008404
l00008402:
	r5_1530 = CONVERT(Mem304[r3_286:byte], byte, word32)
l000083F8:
	r5_1530 = r7_290
l00008404:
	branch Mem304[sp_282 + 8<i32>:word32] == 0<32> l00008416
l0000840A:
	r8_1004 = CONVERT(Mem304[Mem304[Mem304[r6_1529 + -32<i32>:word32]:word32] + r5_1530 * 2<32>:int16], int16, int32)
	r5_1530 = CONVERT(SLICE(r8_1004, byte, 0), byte, word32)
l00008416:
	r9 = r0_283
	r7_1536 = r3_286 - 1<32>
l0000844C:
	lr = Mem304[sp_282 + 16<i32>:word32]
	branch r4_287 <u lr l0000841E
l0000841E:
	r10 = CONVERT(Mem304[r4_287:byte], byte, word32)
	branch Mem304[sp_282 + 8<i32>:word32] == 0<32> l00008430
l00008430:
	r8_1004 = r10
l00008426:
	r8_1004 = CONVERT(Mem304[Mem304[Mem304[r6_1529 + -32<i32>:word32]:word32] + r10 * 2<32>:int16], int16, int32)
l00008432:
	branch r8_1004 != r5_1530 l00008448
l00008436:
	branch SLICE(fn00008144(r2_1534, r2_1534, CONVERT(r9 != 0<32>, bool, word32), Mem304[sp_282 + 4<i32>:word32], r4_287, r7_1536, out r0_449, out r1_450, out r2_1534, out r3_452, out r4_287, out r5_1530, out r6_1529, out r7_1536, out r8_1004, out r9, out r10, out r11, out r12_2319, out lr), bool, 1) l000087AC
l00008448:
	r4_287 = r4_287 + 1<32>
	r9 = 0<32>
l00008452:
l000083BC:
	r8_1004 = Mem304[sp_282 + 4<i32>:word32]
	branch r4_287 >=u r8_1004 l000087A8
l000083C4:
	r4_287 = r4_287 + 1<i32>
	r9 = CONVERT(Mem304[r4_287:byte], byte, word32)
	r11 = r4_287
	branch SLICE(r9, byte, 0) != 0x2F<8> l000083BC
l000083D0:
	fn00008144(r2_285, r1_284, CONVERT(SLICE(r1_284, bool, 2), bool, word32), Mem304[sp_282 + 4<i32>:word32], r4_287, r3_286, out r0_2310, out r1_2311, out r2_2312, out r3_2313, out r4_2314, out r5_2315, out r6_2316, out r7_2317, out r8_1004, out r9, out r10, out r11, out r12_510, out lr)
l0000837C:
	branch r2_285 != 0<32> l00008386
l00008382_1:
	r5_1530 = r1_284 & 0xFFFFFFFB<u32>
l00008386:
	branch r2_285 == 0<32> l0000838A
l00008386_1:
	r5_1530 = r1_284
l0000838A:
	r7_527 = r3_286 - 1<32>
	r9 = r0_283
l0000839E:
	lr = Mem304[sp_282 + 16<i32>:word32]
	r11 = r4_287
	r8_1004 = r5_1530
	r10 = Mem304[sp_282 + 4<i32>:word32]
	branch r4_287 <u lr l00008392
l00008392:
	fn00008144(r2_285, r5_1530, r9, r10, r4_287, r7_527, out r0_552, out r1_553, out r2_285, out r3_555, out r4_556, out r5_1530, out r6_558, out r7_527, out r8_1004, out r9_2318, out r10, out r11, out r12_563, out lr)
	r4_287 = r4_556 + 1<32>
	r9 = 0<32>
	branch r12_563 == 0<32> l000087AC
l000083AC:
l0000830A:
	r12_112 = r8_1004
	branch r8_1004 == 0<32> l000087BA
l00008312:
	r1_574 = r1_102 & 8<32>
	branch r1_574 == 0<32> l0000831E
l0000831E:
	call Mem120[r6_1000 + 316<i32>:word32] (retsize: 0;)
		uses: lr:lr_121,Mem:Mem120,r0:r0_129,r1:r1_574,r10:Mem120[sp_53 + 4<i32>:word32] + r4_190,r11:0x2F<32>,r12:r4_190,r2:r2_1494,r3:r3_150,r4:r4_190,r5:r7_140,r6:r6_234,r7:r7_140,r8:r8_215,r9:r9_257
		defs: lr:lr_591,r10:r10_596,r11:r11_595,r12:r12_594,r8:r8_593,r9:r9_592
l000083DC:
	r12_112 = CONVERT(r12_510 != 0<32>, bool, word32)
l00008318:
	r12_112 = r7_137
l00008186:
	branch SLICE(r7_1255, byte, 0) == 0x2B<8> l00008720
l00008190:
	r3 = 0x2F<32>
	branch SLICE(r7_1255, byte, 0) == 0x2F<8> l00008748
l00008748:
	r8_1004 = r1_102 & 5<32>
	branch r8_1004 != 5<32> l00008764
l00008752:
	lr = Mem54[sp_1102 + 4<i32>:word32]
	branch r4_105 == lr l000087A8
l00008758:
	r8_1004 = CONVERT(Mem54[r4_105:byte], byte, word32)
	branch SLICE(r8_1004, byte, 0) != 0x2F<8> l000087A8
l00008760:
	r9 = 1<32>
l0000819A:
	branch SLICE(r7_1255, byte, 0) == 0x3F<8> l000081C2
l000081C2:
	branch Test(NE,SLICE(r1_102, bool, 5)) l000081EA
l000081C8:
	r9 = CONVERT(Mem54[r5_1011:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x28<8> l000081EA
l000081D2:
	r9_631 = Mem54[sp_1102 + 4<i32>:word32]
	Mem637[sp_1102 - 4<i32>:word32] = r1_102
	r0_101 = fn00007D56(r0_101, r1_102, r2, 0x2F<32>, r4_105, r5_1011, r6_1000, r7_1255, r0_101, r9_631, r4_105, r5_1011, r7_1255, lr, out r1_102, out r2, out r3, out r4_105, out r5_1011, out r6_1000, out r7_2301, out r8_1004, out r9, out r10, out r11, out r12_112, out lr)
	branch r12_112 != 0xFFFFFFFF<32> l000087BA
l000081EA:
	r8_1004 = Mem658[sp_1102 + 4<i32>:word32]
	branch r4_105 == r8_1004 l000087A8
l000081F2:
	r9 = CONVERT(Mem658[r4_105:byte], byte, word32)
	r8_1004 = 0x2F<32>
	branch SLICE(r9, byte, 0) != 0x2F<8> l00008208
l00008208:
	r8_1004 = 0x2E<32>
	branch SLICE(r9, byte, 0) != 0x2E<8> l00008782
l00008212:
l000081FC:
	branch Test(NE,SLICE(r1_102, bool, 0)) l00008782
l00008204:
l000081A2:
	branch SLICE(r7_1255, byte, 0) == 0x40<8> l00008720
l00008720:
	branch Test(NE,SLICE(r1_102, bool, 5)) l00008764
l00008726:
	r9 = CONVERT(Mem54[r5_1011:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x28<8> l00008764
l00008730:
	r9_688 = Mem54[sp_1102 + 4<i32>:word32]
	Mem697[sp_1102 - 4<i32>:word32] = r1_102
	fn00007D56(r0_101, r1_102, r2, r3, r4_105, r5_1011, r6_1000, r7_1255, r0_101, r9_688, r4_105, r5_1011, r7_1255, lr, out r1_102, out r2, out r3, out r4_105, out r5_1011, out r6_1000, out r7_1255, out r8_1004, out r9, out r10, out r11, out r12_112, out lr)
	branch r12_112 == 0xFFFFFFFF<32> l00008764
l00008746:
l000081AC:
	branch SLICE(r7_1255, byte, 0) == 0x5B<8> l00008454
l00008454:
	r7_724 = Mem54[r6_1000 + 132<i32>:word32]
	r8_725 = Mem54[r7_724:word32]
	branch r8_725 != 0<32> l00008470
l0000845E:
	call Mem54[r6_1000 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,Mem:Mem54,r0:r0_86,r1:r1_49,r10:r10_730,r11:r11_273,r12:Mem54[r6_56 + 164<i32>:word32],r2:r2_95,r3:0x2F<32>,r4:r4_89,r5:r5_65,r6:r6_56,r7:r7_724,r8:r8_725,r9:r9_261
		defs: lr:lr_740,r0:r0_732,r1:r1_733,r10:r10_745,r11:r11_744,r12:r12_743,r3:r3_735,r4:r4_736,r5:r5_737,r6:r6_738,r7:r7_739,r9:r9_741,sp:sp_731,VNZC:VNZC_746
	Z_747 = SLICE(VNZC_746, bool, 1) (alias)
	branch Z_747 l0000846A
l00008466_1:
	r12_743 = 0xFFFFFFFF<32>
l0000846A:
	branch Z_747 l0000846E
l0000846A_1:
	r12_743 = 1<32>
l0000846E:
	Mem755[r7_739:word32] = r12_743
l00008470:
	r8_1004 = Mem759[sp_1102 + 4<i32>:word32]
	branch r4_105 == r8_1004 l000087A8
l00008478:
	r10 = CONVERT(Mem759[r4_105:byte], byte, word32)
	r8_1004 = 0x2E<32>
	branch SLICE(r10, byte, 0) != 0x2E<8> l00008488
l00008488:
	branch SLICE(r10, byte, 0) != SLICE(r3, byte, 0) l00008496
l0000848E:
	branch Test(EQ,SLICE(r1_102, bool, 0)) l000087A8
l00008482:
	branch r0_101 == 0<32> l00008496
l00008496:
	r9 = CONVERT(Mem759[r5_1011:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x21<8> l000084A4
l000084A4:
	branch Mem759[Mem759[r6_1000 + 132<i32>:word32]:word32] < 0<32> l000084B2
l000084B2:
	r8_806 = CONVERT(SLICE(r9, byte, 0) == 0x5E<8>, bool, word32)
l000084AE:
	r8_806 = 0<32>
l000084A0:
	r8_806 = 1<32>
l000084BA:
	lr = Mem759[sp_1102 + 8<i32>:word32]
	r0_101 = CONVERT(SLICE(r8_806, byte, 0), byte, word32)
	r8_817 = r5_1011 + 1<32>
	branch r0_101 == 0<32> l000084CA
l000084C6_1:
	r5_1011 = r8_817
l000084CA:
	branch lr != 0<32> l000084D2
l000084D2:
	r2 = CONVERT(Mem759[Mem759[Mem759[r6_1000 + -32<i32>:word32]:word32] + r10 * 2<32>:byte], byte, word32)
l000084CE:
	r2 = r10
l000084DE:
	r11 = CONVERT(Mem759[r5_1011:byte], byte, word32)
	Mem854[sp_1102:word32] = CONVERT(SLICE(r1_102, bool, 1), bool, word32)
	r5_1011 = r5_1011 + 1<i32>
l000084F0:
	r8_857 = Mem856[sp_1102:word32]
	Mem858[sp_1102 + 12<i32>:word32] = r8_857
	r7_1001 = r5_1011
	branch r8_857 == 0<32> l00008524
l000084FA:
	r8_1004 = 0x5C<32>
	branch SLICE(r11, byte, 0) != 0x5C<8> l00008524
l00008524:
	r8_1004 = 0x5B<32>
	branch SLICE(r11, byte, 0) != 0x5B<8> l000085A6
l0000852C:
	r9 = CONVERT(Mem858[r5_1011:byte], byte, word32)
	r8_1004 = 0x3A<32>
	branch SLICE(r9, byte, 0) != 0x3A<8> l000085A6
l000085A6:
	branch r11 == 0<32> l000087A8
l000085AC:
	branch Mem858[sp_1102 + 8<i32>:word32] == 0<32> l000085BE
l000085B2:
	r11 = CONVERT(Mem858[Mem858[Mem858[r6_1000 + -32<i32>:word32]:word32] + r11 * 2<32>:byte], byte, word32)
l00008536:
	r3 = r5_1011
	r12_896 = 0<32>
l0000853A:
	r3 = r3 + 1<32>
	r10 = CONVERT(Mem899[r3:byte], byte, word32)
	lr = r10 - 0x61<32>
	branch SLICE(r10, byte, 0) != 0x3A<8> l0000856E
l0000854A:
	r9 = CONVERT(Mem899[r3 + 1<i32>:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x5D<8> l0000856E
l0000856E:
	r8_1004 = 0x18<32>
	branch SLICE(r10, byte, 0) >u 0x79<8> || SLICE(r10, byte, 0) <u 0x61<8> l000085BE
l00008578:
	branch r12_896 == 0xFF<32> l000087A8
l00008580:
	Mem921[sp_1102 + 0x18<32>:byte] = SLICE(r10, byte, 0)
	r12_896 = r12_896 + 1<32>
l00008554:
	r9_925 = sp_1102 + 0x11C<32> + r12_896
	Mem929[r9_925 + -260<i32>:byte] = 0<8>
	call Mem929[r6_1000 + 300<i32>:word32] (retsize: 0;)
		uses: lr:r10_900 - 0x61<32>,Mem:Mem929,r0:r0_934,r1:r1_938,r10:r10_900,r11:r11_864,r12:sp_855 + 0x18<32>,r2:r2_942,r3:r3_898,r4:r4_946,r5:r5_859,r6:r6_888,r7:r5_859,r8:0<32>,r9:r9_925
		defs: lr:lr_964,r0:r0_956,r1:r1_957,r10:r10_969,r11:r11_968,r12:r12_967,r2:r2_958,r3:r3_959,r4:r4_960,r6:r6_962,r8:r8_966,r9:r9_965,VNZC:VNZC_970
	branch SLICE(VNZC_970, bool, 1) l0000858C
l0000858C:
	call Mem929[r6_962 + 544<i32>:word32] (retsize: 0;)
		uses: lr:lr_964,Mem:Mem929,r0:r0_956,r1:r1_957,r10:r10_969,r11:r11_968,r12:CONVERT(Mem929[r4_960:byte], byte, word32),r2:r2_958,r3:r3_959,r4:r4_960,r5:r12_967,r6:r6_962,r7:r3_959 + 2<32>,r8:r8_966,r9:r9_965
		defs: lr:lr_985,r0:r0_977,r1:r1_978,r10:r10_990,r12:r12_988,r2:r2_979,r3:r3_980,r4:r4_981,r5:r5_982,r6:r6_983,r7:r7_984,r8:r8_987,r9:r9_986
	call Mem929[r6_983 + 308<i32>:word32] (retsize: 0;)
		uses: lr:lr_985,Mem:Mem929,r0:r0_977,r1:r1_978,r10:r10_990,r11:r5_982,r12:r12_988,r2:r2_979,r3:r3_980,r4:r4_981,r5:r5_982,r6:r6_983,r7:r7_984,r8:r8_987,r9:r9_986
		defs: lr:lr_1002,r0:r0_994,r1:r1_995,r10:r10_1007,r2:r2_996,r3:r3_997,r4:r4_998,r6:r6_1000,r7:r7_1001,r8:r8_1004,r9:r9_1003,sp:sp_993,VNZC:VNZC_1008
	branch SLICE(VNZC_1008, bool, 1) l0000863E
l0000859E:
	r11 = CONVERT(Mem929[r7_1001:byte], byte, word32)
	r5_1011 = r3 + 3<32>
l0000856C:
l00008502:
	r9 = CONVERT(Mem858[r5_1011:byte], byte, word32)
	branch r9 == 0<32> l000087A8
l0000850A:
	lr = Mem858[sp_1102 + 8<i32>:word32]
	branch lr != 0<32> l00008514
l00008514:
	r11 = CONVERT(Mem858[Mem858[Mem858[r6_1000 + -32<i32>:word32]:word32] + r9 * 2<32>:byte], byte, word32)
l00008510:
	r11 = r9
l00008520:
	r7_1001 = r5_1011 + 1<32>
l000085BE:
	r10 = CONVERT(Mem1031[r7_1001:byte], byte, word32)
	r8_1004 = 0x2D<32>
	branch SLICE(r10, byte, 0) != 0x2D<8> l000087B0
l000085CA:
	r9 = CONVERT(Mem1031[r7_1001 + 1<i32>:byte], byte, word32)
	branch r9 == 0<32> l000087B0
l000085D2:
	r8_1004 = 0x5D<32>
	branch SLICE(r9, byte, 0) == 0x5D<8> l000087B0
l000087B0:
	branch SLICE(r11, byte, 0) != SLICE(r2, byte, 0) l000085DC
l000087B8:
l000085DC:
	r5_1011 = r7_1001 + 1<32>
	branch SLICE(r10, byte, 0) == 0x2D<8> l000085EC
l000085EC:
	r9 = CONVERT(Mem1031[r5_1011:byte], byte, word32)
	branch SLICE(r9, byte, 0) == 0x5D<8> l000084EE
l000084EE:
	r11 = 0x2D<32>
l000085F8:
	lr = Mem1031[sp_1102:word32]
	r7_1001 = r5_1011 + 1<32>
	branch lr == 0<32> l0000860A
l00008602:
	branch SLICE(r9, byte, 0) == 0x5C<8> l0000860E
l0000860E:
	r7_1001 = r5_1011 + 2<32>
	r8_1004 = CONVERT(Mem1031[r5_1011 + 1<32>:byte], byte, word32)
l0000860A:
	r8_1004 = r9
l00008610:
	branch r8_1004 == 0<32> l000087A8
l00008616:
	branch SLICE(r11, byte, 0) >u SLICE(r2, byte, 0) l00008626
l0000861E:
	branch SLICE(r2, byte, 0) <=u SLICE(r8_1004, byte, 0) l0000863E
l0000863E:
	r11 = CONVERT(Mem1098[r7_1001:byte], byte, word32)
	branch r11 == 0<32> l000087A8
l00008646:
	r5_1011 = r7_1001 + 1<32>
	branch Mem1098[sp_1102 + 12<i32>:word32] == 0<32> l00008668
l00008650:
	branch SLICE(r11, byte, 0) != 0x5C<8> l00008668
l00008668:
	branch SLICE(r11, byte, 0) != 0x5B<8> l00008712
l00008670:
	r9 = CONVERT(Mem1098[r5_1011:byte], byte, word32)
	branch SLICE(r9, byte, 0) != 0x3A<8> l000086B4
l000086B4:
	r11 = 0x3D<32>
	branch SLICE(r9, byte, 0) != 0x3D<8> l000086E6
l000086E6:
	r8_1004 = 0x2E<32>
	branch SLICE(r9, byte, 0) != 0x2E<8> l0000863C
l000086EE:
	r12_1126 = r5_1011 + 1<32>
l000086F2:
	r12_1126 = r12_1126 + 1<32>
	r9 = CONVERT(Mem1098[r12_1126:byte], byte, word32)
	branch r9 == 0<32> l000087A8
l000086FA:
	r8_1004 = 0x2E<32>
	branch SLICE(r9, byte, 0) != 0x2E<8> l000086F2
l00008702:
	r9 = CONVERT(Mem1098[r12_1126 + 1<i32>:byte], byte, word32)
	r8_1004 = 0x5D<32>
	branch SLICE(r9, byte, 0) != 0x5D<8> l000086F2
l0000870C:
	r11 = CONVERT(Mem1098[r12_1126 + 2<i32>:byte], byte, word32)
	r5_1011 = r12_1126 + 3<32>
l000086BC:
	r10 = r5_1011 + 1<32>
	r9 = CONVERT(Mem1098[r5_1011 + 1<32>:byte], byte, word32)
	r8_1004 = 0<32>
	branch SLICE(r9, byte, 0) == 0<8> l000087A8
l000086CA:
	r9 = r5_1011 + 2<32>
	r8_1004 = CONVERT(Mem1098[r5_1011 + 2<32>:byte], byte, word32)
	branch SLICE(r8_1004, byte, 0) != 0x3D<8> l000087A8
l000086D6:
	r9 = CONVERT(Mem1098[r5_1011 + 3<32>:byte], byte, word32)
	r8_1004 = 0x5D<32>
	branch SLICE(r9, byte, 0) != 0x5D<8> l000087A8
l000086E0:
	r11 = CONVERT(Mem1098[r5_1011 + -4<i32>:byte], byte, word32)
	r5_1011 = r5_1011 + 5<32>
l0000867A:
	r10 = r5_1011
l0000867C:
	r10 = r10 + 1<32>
	r8_1004 = r7_1001 + 0x101<32>
	r9 = CONVERT(Mem1098[r10:byte], byte, word32)
	branch r10 == r8_1004 l000087A8
l0000868A:
	r11 = r9 - 0x61<32>
	branch SLICE(r9, byte, 0) != 0x3A<8> l000086A0
l00008696:
	r9 = CONVERT(Mem1098[r10 + 1<i32>:byte], byte, word32)
	branch SLICE(r9, byte, 0) == 0x5D<8> l000086AC
l000086AC:
	r11 = CONVERT(Mem1098[r10 + 2<i32>:byte], byte, word32)
	r5_1011 = r10 + 3<32>
l000086A0:
	r8_1004 = 0x18<32>
	branch SLICE(r9, byte, 0) >u 0x79<8> || SLICE(r9, byte, 0) <u 0x61<8> l0000863C
l000086AA:
l00008658:
	r9 = CONVERT(Mem1098[r5_1011:byte], byte, word32)
	r8_1004 = 0<32>
	branch SLICE(r9, byte, 0) == 0<8> l000087A8
l00008664:
	r5_1011 = r5_1011 + 1<32>
l00008712:
	r8_1004 = 0x5D<32>
	branch SLICE(r11, byte, 0) != 0x5D<8> l0000863C
l0000863C:
	r7_1001 = r5_1011
l0000871A:
	branch r0_101 == 0<32> l00008782
l0000871E:
l00008626:
	r11 = CONVERT(Mem1031[r7_1001:byte], byte, word32)
	r5_1011 = r7_1001 + 1<i32>
l000085E8:
	r11 = r10
l0000862A:
	r8_1004 = 0x5D<32>
	branch SLICE(r11, byte, 0) != 0x5D<8> l000084F0
l00008634:
	branch r0_101 != 0<32> l00008782
l0000863A:
l00008486:
l000081B6:
	r8_1004 = 0x5C<32>
	branch SLICE(r7_1255, byte, 0) != 0x5C<8> l00008764
l00008764:
	r8_1004 = Mem1240[sp_1102 + 4<i32>:word32]
	branch r4_105 == r8_1004 l000087A8
l0000876A:
	lr = Mem1240[sp_1102 + 8<i32>:word32]
	r10 = CONVERT(Mem1240[r4_105:byte], byte, word32)
	branch lr == 0<32> l0000877C
l0000877C:
	r8_1004 = r10
l00008772:
	r8_1004 = CONVERT(Mem1240[Mem1240[Mem1240[r6_1000 + -32<i32>:word32]:word32] + r10 * 2<32>:int16], int16, int32)
l0000877E:
	branch r7_1255 != r8_1004 l000087A8
l000081C0:
l00008216:
	branch Test(EQ,SLICE(r1_102, bool, 1)) l00008238
l0000821C:
	r7_1255 = CONVERT(Mem54[r5_1011:byte], byte, word32)
	branch r7_1255 == 0<32> l000087A8
l00008224:
	lr = Mem54[sp_1102 + 8<i32>:word32]
	branch lr == 0<32> l00008236
l0000822A:
	r7_1255 = CONVERT(Mem54[Mem54[Mem54[r6_1000 + -32<i32>:word32]:word32] + r7_1255 * 2<32>:byte], byte, word32)
l00008236:
	r5_1011 = r5_1011 + 1<32>
l00008238:
	r8_1004 = Mem54[sp_1102 + 4<i32>:word32]
	branch r4_105 == r8_1004 l000087A8
l00008240:
	lr = Mem54[sp_1102 + 8<i32>:word32]
	r10 = CONVERT(Mem54[r4_105:byte], byte, word32)
	branch lr == 0<32> l00008252
l00008252:
	r8_1004 = r10
l00008248:
	r8_1004 = CONVERT(Mem54[Mem54[Mem54[r6_1000 + -32<i32>:word32]:word32] + r10 * 2<32>:int16], int16, int32)
l00008254:
	branch r8_1004 == r7_1255 l00008782
l00008782:
	r9 = 0<32>
l00008784:
	r4_105 = r4_105 + 1<32>
	r0_101 = r9
l0000825A:
l00008790:
	r8_1004 = Mem45[sp_1102 + 4<i32>:word32]
	branch r4_105 == r8_1004 l000087AC
l000087AC:
	r12_112 = 0<32>
l00008796:
	branch (r1_102 & 8<32>) == 0<32> l000087A8
l000087A8:
	r12_112 = 1<32>
l0000879C:
	r9 = CONVERT(Mem45[r4_105:byte], byte, word32)
	r8_1004 = 0x2F<32>
	r12_112 = CONVERT(SLICE(r9, byte, 0) != 0x2F<8>, bool, word32)
l000087BA:
	r0Out = <invalid>
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = r8_1004
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12_112
	lrOut = lr
	return <invalid>
fn00008144_exit:


bool fn000087C0(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003BA4
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: Z lr r0 r1 r10 r11 r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000087C0_entry:
l000087C0:
	r6_33 = 0x000087C8<p32> - Mem29[0x00008902<p32>:word32]
	call Mem38[r6_33 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem38,r0:r0,r1:r10,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_33,r7:fp - 36<i32>,Stack +0004:r11,Stack +0008:r12,Stack +0014:lr,Stack +0018:r7,Stack +001C:r6,Stack +0020:r5,Stack +0024:r4,Stack +0028:r3,Stack +002C:r2,Stack +0030:r1,Stack +0034:r0
		defs: lr:lr_50,r1:r1_43,r10:r10_53,r11:r11_52,r12:r12_51,r2:r2_44,r4:r4_46,r5:r5_47,r6:r6_48,r7:r7_49,sp:sp_41
	r0_146 = sp_41
	branch r12_51 == 1<32> l0000890C
l000087E0:
	Mem69[r7_153 - 8<32>:word64] = 0<64>
	call Mem69[r6_152 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,Mem:Mem69,r0:sp_41,r1:r1_43,r10:0<32>,r11:r7_49 - 0xC<32>,r12:0<32>,r2:0<32>,r3:0<32>,r4:r7_49 - 8<32>,r5:r5_47,r6:r6_48,r7:r7_49,r9:r7_49 - 8<32>
		defs: lr:lr_79,r0:r0_71,r1:r1_72,r10:r10_82,r11:r11_81,r12:r12_80,r2:r2_73,r3:r3_74,r4:r4_75,r6:r6_77,r7:r7_78
	branch r12_80 == 0xFFFFFFFF<32> l0000890C
l00008802:
	call Mem69[r6_152 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_79,Mem:Mem69,r0:r0_71,r1:r1_72,r10:r10_82,r11:r11_81,r12:r4_75,r2:r2_73,r3:r3_74,r4:r4_75,r5:r12_80 + 1<32>,r6:r6_77,r7:r7_78
		defs: lr:lr_99,r0:r0_91,r1:r1_92,r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_96,r6:r6_97,r7:r7_98,VNZC:VNZC_105
	branch SLICE(VNZC_105, bool, 1) l00008820
l0000880A:
	call Mem69[r6_120 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,Mem:Mem69,r0:r0_91,r1:r1_92,r10:0x127<32>,r11:Mem69[r6_97 + 260<i32>:word32],r12:Mem69[r6_97 + 256<i32>:word32],r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_96,r6:r6_97,r7:r7_98,r9:0x00008950<p32>
		defs: lr:lr_122,r0:r0_114,r1:r1_115,r2:r2_116,r3:r3_117,r4:r4_118,r5:r5_119,r6:r6_120,r7:r7_121
l00008820:
	call Mem69[r6_120 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_143,Mem:Mem69,r0:r0_138,r1:r1_139,r10:0<32>,r11:r7_132 - 0x10<32>,r12:0<32>,r2:r2_140,r3:r3_141,r4:r4_130,r5:r5_142,r6:r6_136,r7:r7_132,r9:r4_130
		defs: lr:lr_154,r0:r0_146,r1:r1_147,r10:r10_157,r11:r11_156,r12:r12_155,r3:r3_149,r4:r4_150,r5:r5_151,r6:r6_152,r7:r7_153
	r2_161 = r12_155 + 1<32>
	branch r12_155 == 0xFFFFFFFF<32> l0000890C
l0000890C:
	r5_166 = Mem165[r7_153 + -16<i32>:word32]
	call Mem165[r6_152 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_176,Mem:Mem165,r0:r0_173,r1:r1_167,r10:r10_178,r11:r11_177,r12:r5_166,r2:r2_174,r3:CONVERT(SLICE(r1_167, bool, 2), bool, word32),r4:r4_175,r5:r5_166,r6:r6_172,r7:r7_164
		defs: r0:r0_181,r1:r1_182,r12:r12_190,r2:r2_183,r3:r3_184,r5:r5_186,r7:r7_188
	fn00008144(r2_183, r1_182, r3_184, r5_186 + r12_190, r5_186, Mem165[r7_188 + -12<i32>:word32], out r0_525, out r1_526, out r2_527, out r3_528, out r4_529, out r5_530, out r6_531, out r7_532, out r8_533, out r9_534, out r10_205, out r11_207, out r12_535, out lr_202)
l00008834:
	call Mem69[r6_152 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_154,Mem:Mem69,r0:r0_146,r1:r1_147,r10:r10_157,r11:r11_156,r12:r4_150,r2:r12_155 + 1<32>,r3:r3_149,r4:r4_150,r5:r5_151,r6:r6_152,r7:r7_153
		defs: lr:lr_223,r0:r0_215,r1:r1_216,r10:r10_226,r11:r11_225,r12:r12_224,r2:r2_217,r3:r3_218,r4:r4_219,r5:r5_220,r6:r6_221,r7:r7_222,sp:sp_214,VNZC:VNZC_229
	branch SLICE(VNZC_229, bool, 1) l00008852
l0000883C:
	call Mem69[r6_221 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_223,Mem:Mem69,r0:r0_215,r1:r1_216,r10:0x12B<32>,r11:Mem69[r6_221 + 260<i32>:word32],r12:Mem69[r6_221 + 256<i32>:word32],r2:r2_217,r3:r3_218,r4:r4_219,r5:r5_220,r6:r6_221,r7:r7_222,r9:0x00008950<p32>
		defs: lr:lr_246,r0:r0_238,r1:r1_239,r10:r10_249,r11:r11_248,r12:r12_247,r2:r2_240,r3:r3_241,r4:r4_242,r5:r5_243,r6:r6_244,r7:r7_245,sp:sp_237
l00008852:
	r9_255 = r2_217 + r5_220
	Mem257[r7_222 + -20<i32>:word32] = r9_255
	branch r5_220 >u r9_255 l0000888A
l00008860:
	branch r9_255 >u Mem257[0x00008908<p32>:word32] l0000888A
l00008868:
	r12_263 = Mem257[r7_222 + -20<i32>:word32]
	branch Mem257[r7_222 + -20<i32>:word32] >u 0x7CF<32> l00008884
l00008884:
	call Mem257[r6_221 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_273,Mem:Mem257,r0:r0_269,r1:r1_270,r10:r10_275,r11:r11_274,r12:r12_263 << 2<i32>,r2:r2_253,r3:r3_271,r4:r4_272,r5:r5_254,r6:r6_268,r7:r7_256
		defs: lr:lr_286,r0:r0_278,r1:r1_279,r10:r10_289,r11:r11_288,r12:r12_287,r2:r2_280,r3:r3_281,r4:r4_282,r5:r5_283,r6:r6_284,r7:r7_285,VNZC:VNZC_292
	branch SLICE(VNZC_292, bool, 1) l00008896
l00008896:
	r3_294 = r12_224
l0000888A:
	call Mem257[r6_221 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_304,Mem:Mem257,r0:r0_297,r1:r1_298,r10:r10_308,r11:r11_307,r12:r12_305,r2:r2_299,r3:r3_300,r4:r4_301,r5:r5_302,r6:r6_295,r7:r7_303
		defs: lr:lr_319,r0:r0_311,r10:r10_322,r11:r11_321,r12:r12_320
	Mem328[r12_320:word32] = 0xC<32>
l0000887A:
	r3_294 = sp_214 + ((r12_263 << 2<i32>) + 4<32>)
l00008898:
	r4_334 = r7_222 - 8<32>
	call Mem257[r6_221 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_347,Mem:Mem257,r0:r0_344,r1:r1_345,r10:r5_335,r11:r7_333 - 0xC<32>,r12:r3_340,r2:r2_346,r3:r3_340,r4:r4_334,r5:r5_335,r6:r6_342,r7:r7_333,r9:r4_334
		defs: lr:lr_358,r0:r0_350,r1:r1_351,r10:r10_361,r11:r11_360,r2:r2_352,r3:r3_353,r4:r4_354,r5:r5_355,r6:r6_356,r7:r7_357
	call Mem257[r6_356 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_358,Mem:Mem257,r0:r0_350,r1:r1_351,r10:r10_361,r11:r11_360,r12:r4_354,r2:r2_352,r3:r3_353,r4:r4_354,r5:r3_353 + (r5_355 << 2<8>),r6:r6_356,r7:r7_357
		defs: lr:lr_377,r0:r0_369,r1:r1_370,r2:r2_371,r3:r3_372,r4:r4_373,r5:r5_374,r6:r6_375,r7:r7_376,VNZC:VNZC_383
	branch SLICE(VNZC_383, bool, 1) l000088CC
l000088B6:
	call Mem257[r6_375 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_377,Mem:Mem257,r0:r0_369,r1:r1_370,r10:0x145<32>,r11:Mem257[r6_375 + 260<i32>:word32],r12:Mem257[r6_375 + 256<i32>:word32],r2:r2_371,r3:r3_372,r4:r4_373,r5:r5_374,r6:r6_375,r7:r7_376,r9:0x00008950<p32>
		defs: lr:lr_400,r0:r0_392,r1:r1_393,r2:r2_394,r3:r3_395,r4:r4_396,r5:r5_397,r6:r6_398,r7:r7_399
l000088CC:
	call Mem257[r6_375 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_421,Mem:Mem257,r0:r0_418,r1:r1_419,r10:r2_409,r11:r7_411 - 0x10<32>,r12:r5_414,r2:r2_409,r3:r3_420,r4:r4_407,r5:r5_414,r6:r6_416,r7:r7_411,r9:r4_407
		defs: r0:r0_424,r1:r1_425,r2:r2_426,r3:r3_427,r4:r4_428,r5:r5_429,r6:r6_430,r7:r7_431
	fn00007754(r2_426, r3_427, r1_425, CONVERT(SLICE(r1_425, bool, 2), bool, word32), r5_429 + (r2_426 << 2<8>) - 4<32>, r5_429, r3_427, out r0_536, out r1_537, out r2_538, out r3_539, out r4_540, out r5_541, out r6_542, out r7_543, out r9_544, out r10_205, out r11_207, out r12_448, out lr_202)
	branch Mem257[r7_431 + -20<i32>:word32] <=u 0x7CF<32> l0000892E
l000088FC:
	call Mem257[r6_430 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_447,Mem:Mem257,r0:r0_424,r1:r1_425,r10:r10_450,r11:r11_451,r12:r3_427,r2:r2_426,r3:r3_427,r4:r4_428,r5:r12_448,r6:r6_430,r7:r7_431
		defs: lr:lr_471,r0:r0_463,r10:r10_474,r11:r11_473
l0000892E:
	sp_482 = r0_181 + 0x14<32>
	r7_485 = Mem484[sp_482 + 4<i32>:word32]
	r6_486 = Mem484[sp_482 + 8<i32>:word32]
	r5_487 = Mem484[sp_482 + 12<i32>:word32]
	r4_488 = Mem484[sp_482 + 16<i32>:word32]
	r3_489 = Mem484[sp_482 + 20<i32>:word32]
	r2_490 = Mem484[sp_482 + 24<i32>:word32]
	r1_491 = Mem484[sp_482 + 28<i32>:word32]
	r0Out = Mem484[sp_482 + 32<i32>:word32]
	r1Out = r1_491
	r2Out = r2_490
	r3Out = r3_489
	r4Out = r4_488
	r5Out = r5_487
	r6Out = r6_486
	r7Out = r7_485
	r10Out = r10_205
	r11Out = r11_207
	lrOut = lr_202
	return SLICE(cond(sp_482), bool, 1)
fn000087C0_exit:


word32 fn0000895C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r1
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000895C_entry:
l0000895C:
	r6_20 = 0x00008962<p32> - Mem17[0x00008988<p32>:word32]
	call Mem17[r6_20 + 596<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r0:r0,r1:r1,r11:r12,r12:0<32>,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_20,r7:r12,Stack +0000:dwLoc1C,Stack +0004:dwLoc18,Stack +0008:lr,Stack +000C:r7,Stack +0010:r6,Stack +0014:r5,Stack +0018:r4
		defs: lr:lr_31,r1:r1_72,r4:r4_27,r5:r5_28,r6:r6_29,r7:r7_30,VNZC:VNZC_36
	branch SLICE(VNZC_36, bool, 1) l00008984
l00008970:
	fn0000898C(r0, r1, r2, r3, r4_27, r5_28, r6_29, r7_30, lr_31)
	Mem55[r7_30:word32] = dwLoc1C
	Mem56[r7_30 + 4<i32>:word32] = dwLoc18 * 0x3E8<32>
l00008984:
	return r1
fn0000895C_exit:


void fn0000898C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000895C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000898C_entry:
l0000898C:
	r6_32 = 0x00008992<p32> - Mem29[0x000089E8<p32>:word32]
	r5_33 = Mem29[r6_32 + 216<i32>:word32]
	r10_36 = Mem29[r5_33:word32]
	r9_r8_56 = Mem55[r10_36 + 32<i32>:word64]
	r3_48 = Mem47[r10_36 + 16<i32>:word32]
	r2_49 = Mem47[r10_36 + 20<i32>:word32]
	r1_50 = Mem47[r10_36 + 24<i32>:word32]
	r0_51 = Mem47[r10_36 + 28<i32>:word32]
	r8_60 = Mem59[r10_36 + 40<i32>:word32]
	call Mem61[r6_32 + 476<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem61,r0:r0_51,r1:r1_50,r10:r10_36,r2:r2_49,r3:r3_48,r4:fp - 0x40<32>,r5:r5_33,r6:r6_32,r7:fp - 0x50<32>,r8:r8_60,r9:SLICE(r9_r8_56, word32, 32),Stack +0000:r3_48,Stack +0004:r2_49,Stack +0008:r1_50,Stack +000C:r0_51,Stack +0020:r9_r8_56,Stack +0028:r8_60,Stack +002C:lr,Stack +0030:r7,Stack +0034:r6,Stack +0038:r5,Stack +003C:r4,Stack +0040:r3,Stack +0044:r2,Stack +0048:r1,Stack +004C:r0
		defs: r4:r4_67,r5:r5_68
	r10_80 = Mem61[r5_68:word32]
	Mem81[r10_80 + -4<i32>:word32] = r0_51
	Mem82[r10_80 + -8<i32>:word32] = r1_50
	Mem83[r10_80 + -12<i32>:word32] = r2_49
	Mem84[r10_80 + -16<i32>:word32] = r3_48
	r3_86 = Mem84[r4_67:word32]
	r2_87 = Mem84[r4_67 + 4<i32>:word32]
	r1_88 = Mem84[r4_67 + 8<i32>:word32]
	Mem90[r10_80 + 0xC<32>:word32] = Mem84[r4_67 + 12<i32>:word32]
	Mem91[r10_80 + 8<32>:word32] = r1_88
	Mem92[r10_80 + 4<32>:word32] = r2_87
	Mem93[r10_80:word32] = r3_86
	Mem97[r10_80 + 32<i32>:word64] = r9_r8_56
	Mem99[r10_80 + -24<i32>:word32] = r8_60
	return
fn0000898C_exit:


bool fn00008A6C(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00008A6C_entry:
l00008A6C:
	r6_19 = 0x00008A70<p32> - Mem17[0x00008A86<p32>:word32]
	call Mem17[r6_19 + 472<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_26,r12:r12_30,r6:r6_24
	r11_32 = Mem17[r6_24 + 216<i32>:word32]
	r8_33 = Mem17[r6_24 + 368<i32>:word32]
	r9_34 = Mem17[r11_32:word32]
	Z_36 = SLICE(cond(r9_34 - r8_33), bool, 1) (alias)
	branch r9_34 != r8_33 l00008A86
l00008A84:
	Mem37[r11_32:word32] = r12_30
l00008A86:
	r12Out = r12_30
	lrOut = lr_26
	return Z_36
fn00008A6C_exit:


word32 fn00008A8C(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002B30
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r11 r12
// Preserved: r4 r5 r6 r7 sp
fn00008A8C_entry:
l00008A8C:
	r6_19 = 0x00008A90<p32> - Mem17[0x00008AB6<p32>:word32]
	call Mem17[r6_19 + 292<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r11:0<32>,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_27,r12:r12_29,r4:r4_23,r5:r5_24,r6:r6_25,VNZC:VNZC_30
	branch SLICE(VNZC_30, bool, 1) l00008A9E
l00008A9E:
	call Mem17[r6_25 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_27,Mem:Mem17,r11:Mem17[r6_25 + 776<i32>:word32],r4:r4_23,r5:r5_24,r6:r6_25,r7:r12_29
		defs: lr:lr_39,r12:r12_41,r4:r4_35,r5:r5_36,r6:r6_37,r7:r7_38,VNZC:VNZC_42
	branch SLICE(VNZC_42, bool, 1) l00008AB4
l00008AA8:
	call Mem17[r6_37 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_39,Mem:Mem17,r11:Mem17[r6_37 + 772<i32>:word32],r12:r7_38,r4:r4_35,r5:r5_36,r6:r6_37,r7:r7_38
		defs: lr:lr_51,VNZC:VNZC_54
	r12_41 = CONVERT(SLICE(VNZC_54, bool, 1), bool, word32)
l00008AB4:
	lrOut = lr_39
	return r12_41
l00008A9C:
	lrOut = lr_27
	return lr
fn00008A8C_exit:


void fn00008ABC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn00008ABC_entry:
l00008ABC:
	return
fn00008ABC_exit:


void fn00008AC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn00008AC0_entry:
l00008AC0:
	return
fn00008AC0_exit:


void fn00008AC4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn00008AC4_entry:
l00008AC4:
	return
fn00008AC4_exit:


void fn00008AC8(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00008AC8_entry:
l00008AC8:
	r11_22 = Mem17[r12 + 4<i32>:word32]
	r12_23 = Mem17[r12:word32]
	r10_24 = 0<32>
l00008AF2:
	branch r12_23 <u r11_22 l00008AD6
l00008AD6:
	branch Mem17[r12_23:word32] == 0<32> l00008AF0
l00008ADC:
	r8_33 = r12_23
	r9_34 = 1<32>
l00008AE4:
	r8_33 = Mem17[r8_33 + 4<i32>:word32]
	branch r8_33 != 0<32> l00008AE2
l00008AE2:
	r9_34 = r9_34 + 1<32>
l00008AEA:
	branch r10_24 >=u r9_34 l00008AF0
l00008AEC_1:
	r10_24 = r9_34
l00008AF0:
	r12_23 = r12_23 + 8<32>
l00008AF6:
	return
fn00008AC8_exit:


word32 fn00008BE0(word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
//      fn0000901C
//      fn000090C0
// MayUse:  r12:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00008BE0_entry:
l00008BE0:
	r5_34 = Mem29[r12 + 20<i32>:word32]
	r4_36 = Mem29[r5_34 + 8<i32>:word32]
	r11_101 = r4_36
	branch fn0000FA0E(r4_36, Mem29[0x00008C4C<p32>:word32], out r8_200, out r9_104, out r10_102) l00008C40
l00008BF6:
	r11_101 = Mem29[0x00008C52<p32>:word32]
	branch fn0000FA0E(r11_101, r4_36, out r8_201, out r9_104, out r10_102) l00008C40
l00008C00:
	r11_101 = Mem29[r5_34 + 12<i32>:word32]
	branch fn0000FA0E(r11_101, Mem29[0x00008C5A<p32>:word32], out r8_202, out r9_104, out r10_102) l00008C40
l00008C0A:
	r7_67 = Mem29[r5_34:word32]
	r11_101 = 0<32>
	branch fn0000F9D0(0<32>, r7_67, out r8_203, out r9_104, out r10_102) l00008C40
l00008C16:
	r12_82 = fn0000FF9C(Mem29[0x00008C4E<p32>:word32], r7_67)
	r7_89 = Mem29[r5_34 + 4<i32>:word32]
	r11_101 = r7_89
	branch fn0000FA0E(r7_89, r12_82, out r8_204, out r9_104, out r10_102) l00008C40
l00008C2A:
	r11_101 = r7_89
	branch fn0000F9D0(r7_89, Mem29[0x00008C5E<p32>:word32], out r8_205, out r9_104, out r10_102) l00008C40
l00008C34:
	r11_101 = r4_36
	branch fn0000FA0E(r4_36, r12_82, out r8_113, out r9_104, out r10_102) l00008C40
l00008C40:
	Mem124[r12 + 20<i32>:word32] = 0x00009234<p32>
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = 0x00009234<p32>
	r9Out = r9_104
	r10Out = r10_102
	r11Out = r11_101
	r12Out = 0<32>
	return r0
l00008C3E:
	r1Out = r0
	r2Out = r1
	r3Out = r2
	r4Out = r3
	r5Out = r4
	r6Out = r5
	r7Out = r6
	r8Out = r8_113
	r9Out = r9_104
	r10Out = r10_102
	r11Out = r4_36
	r12Out = r7
	return dwArg00
fn00008BE0_exit:


bool fn00008CAA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000901C
//      fn000090C0
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: Z lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00008CAA_entry:
l00008CAA:
	call Mem29[r12 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r10:r10,r11:Mem29[r12 + 8<i32>:word32],r12:r11,r2:r9,r3:r11,r4:r10,r5:Mem29[r12:word32],r6:0x00008CAE<p32> - Mem29[0x00008D24<p32>:word32],r7:r12,r9:r9,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_54,r0:r0_46,r1:r1_47,r10:r10_58,r11:r11_57,r12:r12_55,r2:r2_48,r3:r3_49,r4:r4_50,r5:r5_51,r6:r6_52,r7:r7_53,r9:r9_59
	r5_62 = r5_51 + (r12_55 << 3<8>)
	branch r5_62 <u Mem29[r7_53 + 4<i32>:word32] l00008CD0
l00008CCC:
	call Mem29[r6_52 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_54,Mem:Mem29,r0:r0_46,r1:r1_47,r10:r10_58,r11:r11_57,r12:r12_55,r2:r2_48,r3:r3_49,r4:r4_50,r5:r5_62,r6:r6_52,r7:r7_53,r9:r9_59
		defs: lr:lr_74,r0:r0_66,r1:r1_67,r10:r10_78,r2:r2_68,r3:r3_69,r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73,r9:r9_79
l00008CD0:
	Mem83[r4_50:word32] = r5_62
	r11_111 = Mem83[r5_62:word32]
	Z_122 = SLICE(cond(r11_111 - 0<32>), bool, 1) (alias)
	branch r11_111 == 0<32> l00008D24
l00008CD8:
	call Mem83[r7_53 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_95,Mem:Mem83,r0:r0_91,r1:r1_92,r10:r10_96,r11:r11_84,r12:r3_89,r2:r2_93,r3:r3_89,r4:r4_82,r5:r5_81,r6:r6_94,r7:r7_87,r9:r9_97
		defs: lr:lr_108,r0:r0_100,r1:r1_101,r10:r10_112,r11:r11_111,r12:r12_109,r2:r2_102,r3:r3_103,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107,r9:r9_113
	branch CONVERT(SLICE(r12_109, byte, 0), byte, word32) == 0<32> l00008D1E
l00008D1E:
	r11_111 = Mem83[r5_105 + 4<i32>:word32]
	Z_122 = SLICE(cond(r11_111 - 0<32>), bool, 1) (alias)
	branch r11_111 != 0<32> l00008CF8
l00008CF8:
	call Mem83[r7_107 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_133,Mem:Mem83,r0:r0_128,r1:r1_129,r10:r10_134,r11:Mem83[r11_120:word32],r12:r3_126,r2:r2_130,r3:r3_126,r4:r4_131,r5:r5_118,r6:r6_132,r7:r7_124,r9:r9_135
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r10:r10_150,r11:r11_149,r12:r12_147,r2:r2_140,r3:r3_141,r4:r4_142,r5:r5_143,r6:r6_144,r7:r7_145
	r9_113 = Mem83[r5_105 + 4<i32>:word32]
	branch CONVERT(SLICE(r12_147, byte, 0), byte, word32) == 0<32> l00008D1C
l00008D1C:
	r5_105 = r9_113
l00008D06:
	r12_158 = Mem83[r9_113:word32]
	Z_122 = SLICE(cond(r2_102 - 0<32>), bool, 1) (alias)
	branch r2_102 == 0<32> l00008D26
l00008D24:
	r12_158 = 0<32>
l00008CE2:
	r12_158 = Mem83[r5_105:word32]
	Z_122 = SLICE(cond(r2_102 - 0<32>), bool, 1) (alias)
	branch r2_102 == 0<32> l00008D26
l00008D26:
	r10Out = r10_112
	r11Out = r11_111
	r12Out = r12_158
	lrOut = lr_108
	return Z_122
l00008CE8:
	r9_113 = Mem83[r5_105 + 4<i32>:word32]
	Z_122 = SLICE(cond(r9_113 - 0<32>), bool, 1) (alias)
	branch r9_113 == 0<32> l00008CF4
l00008CF4:
	Mem181[r5_105:word32] = r9_113
	r10Out = r10_112
	r11Out = r11_111
	r12Out = r12_158
	lrOut = lr_108
	return Z_122
l00008CEE:
	Mem192[r5_105:word32] = Mem83[r9_113:word32]
l00008D0C:
	Mem197[r5_105 + 4<i32>:word32] = Mem194[r9_113 + 4<i32>:word32]
	Mem199[r9_113:word32] = 0<32>
	Mem202[r9_113 + 4<i32>:word32] = Mem199[r7_107 + 36<i32>:word32]
	Mem203[r7_107 + -28<i32>:word32] = r9_113
	r10Out = r10_112
	r11Out = r11_111
	r12Out = r12_158
	lrOut = lr_108
	return Z_122
fn00008CAA_exit:


bool fn00008DF4(word32 r4, word32 r5, word32 r7, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
//      fn000090C0
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00008DF4_entry:
l00008DF4:
	r12_22 = Mem17[r12 + 36<i32>:word32]
	r6_19 = 0x00008DF8<p32> - Mem17[0x00008E0E<p32>:word32]
	Z_24 = SLICE(cond(r12_22 - 0<32>), bool, 1) (alias)
	branch r12_22 == 0<32> l00008E08
l00008E08:
	call Mem17[r6_19 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r12:8<32>,r4:r4,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_31,r12:r12_32,VNZC:VNZC_35
	r12Out = r12_32
	lrOut = lr_31
	return SLICE(VNZC_35, bool, 1)
l00008E02:
	Mem42[r12 + -28<i32>:word32] = Mem17[r12_22 + 4<i32>:word32]
	r12Out = r12_22
	lrOut = lr
	return Z_24
fn00008DF4_exit:


void fn00008E14(word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00008E14_entry:
l00008E14:
	r6_102 = 0x00008E18<p32> - Mem17[0x00008E82<p32>:word32]
	r7_104 = r12
	branch Mem17[r12 + 32<i32>:word32] == 0<32> l00008E4A
l00008E22:
	branch Mem17[r12 + 16<i32>:word32] == 0<32> l00008E4A
l00008E28:
	r4_28 = Mem17[r12:word32]
l00008E44:
	branch r4_28 <u Mem17[r7_104 + 4<i32>:word32] l00008E2C
l00008E2C:
	branch Mem17[r4_28:word32] == 0<32> l00008E42
l00008E32:
	r5_38 = r4_28
l00008E3E:
	branch r5_38 != 0<32> l00008E36
l00008E36:
	call Mem17[r7_104 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_48,Mem:Mem17,r12:Mem17[r5_39:word32],r4:r4_46,r5:r5_39,r6:r6_47,r7:r7_44
		defs: lr:lr_55,r4:r4_51,r5:r5_52,r6:r6_53,r7:r7_54
	r5_38 = Mem17[r5_52 + 4<i32>:word32]
l00008E42:
	r4_28 = r4_28 + 8<32>
l00008E4A:
	r4_103 = Mem17[r7_104:word32]
l00008E60:
	branch r4_103 <u Mem17[r7_104 + 4<i32>:word32] l00008E4E
l00008E4E:
	r5_72 = Mem17[r4_103 + 4<i32>:word32]
l00008E58:
	branch r5_72 != 0<32> l00008E52
l00008E52:
	call Mem17[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_82,Mem:Mem17,r12:r5_73,r4:r4_80,r5:Mem17[r5_73 + 4<i32>:word32],r6:r6_79,r7:r7_81
		defs: lr:lr_89,r4:r4_85,r5:r5_86,r6:r6_87,r7:r7_88
l00008E5E:
	r4_103 = r4_103 + 8<32>
l00008E66:
	r5_109 = Mem17[r7_104 + 36<i32>:word32]
l00008E70:
	branch r5_109 != 0<32> l00008E6A
l00008E6A:
	call Mem17[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_105,Mem:Mem17,r12:r5_96,r4:r4_103,r5:Mem17[r5_96 + 4<i32>:word32],r6:r6_102,r7:r7_104
		defs: lr:lr_112,r4:r4_108,r5:r5_109,r6:r6_110,r7:r7_111
l00008E76:
	call Mem17[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_105,Mem:Mem17,r12:Mem17[r7_104:word32],r4:r4_103,r5:r5_96,r6:r6_102,r7:r7_104
		defs: lr:lr_122,r4:r4_118,r5:r5_119,r6:r6_120,r7:r7_121
	call Mem17[r6_120 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_122,Mem:Mem17,r12:r7_121,r4:r4_118,r5:r5_119,r6:r6_120,r7:r7_121
	return
fn00008E14_exit:


bool fn00008E88(word32 r3, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00008E88_entry:
l00008E88:
	r6_31 = 0x00008E8C<p32> - Mem29[0x00008F5E<p32>:word32]
	Z_357 = SLICE(cond(r10 - 0<32>), bool, 1) (alias)
	branch r10 == 0<32> l00008F56
l00008E9C:
	Z_357 = SLICE(cond(r9 - 0<32>), bool, 1) (alias)
	branch r9 == 0<32> l00008F56
l00008EA0:
	call Mem29[r6_31 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r8,r1:r10,r10:r10,r11:r11,r12:0x28<32>,r2:r9,r3:r3,r4:r12,r5:r11,r6:r6_31,r7:r7,r8:r8,r9:r9
		defs: lr:lr_56,r12:r12_58,r5:r5_53,VNZC:VNZC_62
	Z_357 = SLICE(VNZC_62, bool, 1) (alias)
	branch Z_357 l00008F56
l00008EAA:
	branch r5_53 != 0<32> l00008EB6
l00008EB2_1:
	r5_53 = 0x00009234<p32>
l00008EB6:
	Mem72[r12_58 + 20<i32>:word32] = r5_53
	r0_78 = fn00008BE0(r12_58, out r1_79, out r2_80, out r3_286, out r4_134, out r5_118, out r6_84, out r7_85, out r8_120, out r9_121, out r10_119, out r11_117, out r12_75)
	r12_129 = CONVERT(SLICE(r12_75, byte, 0), byte, word32)
	branch r12_129 == 0<32> l00008F50
l00008EBE:
	r9_121 = CONVERT(Mem72[r5_118 + 16<i32>:byte], byte, word32)
	branch SLICE(r9_121, byte, 0) != 0<8> l00008EE8
l00008ECA:
	fn0001013A(r4_134, out r12_102)
	r12_110 = fn0000FD70(Mem72[r5_118 + 8<i32>:word32], r12_102)
	r11_117 = Mem72[0x00008F5E<p32>:word32]
	r5_118 = r12_110
	branch fn0000F9D0(r11_117, r12_110, out r8_120, out r9_121, out r10_119) l00008F50
l00008EE0:
	r11_117 = fn000101B2(r12_110, out r12_129)
	r4_134 = r12_129
l00008EE8:
	r8_120 = Mem72[0x00008F64<p32>:word32]
	branch r4_134 >u r8_120 l00008F50
l00008EF0:
	branch r4_134 <=u 9<32> l00008EF6
l00008EF2_1:
	r12_129 = r4_134
l00008EF6:
	branch r4_134 >u 9<32> l00008EFA
l00008EF6_1:
	r12_129 = 0xA<32>
l00008EFA:
	r12_149 = r12_129 | 1<u32>
l00008F00:
	r10_119 = 3<32>
	lr = 9<32>
l00008F08:
	r11_117 = r10_119 + 1<32>
	branch lr >=u r12_149 l00008F1C
l00008F10:
	lr = lr + (r11_117 << 2<8>)
	branch r9_121 != 0<32> l00008F06
l00008F06:
	r10_119 = r10_119 + 2<32>
l00008F1C:
	branch r9_121 == 0<32> l00008EFE
l00008EFE:
	r12_149 = r12_149 + 2<32>
l00008F24:
	r8_120 = Mem72[0x00008F60<p32>:word32]
	Mem186[r7_85 + 8<i32>:word32] = r12_149
	branch r12_149 >u r8_120 l00008F50
l00008F2E:
	Z_209 = fn0000CCF0(r4_134, r5_118, r7_85, 8<32>, r12_149, lr, out r8_120, out r9_121, out r11_117, out r12_206, out lr)
	Mem211[r7_85:word32] = r12_206
	branch Z_209 l00008F50
l00008F50:
	call Mem221[r6_84 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_252,Mem:Mem221,r0:r0_78,r1:r1_79,r10:r10_255,r11:r11_257,r12:r7_85,r2:r2_80,r3:r3_81,r4:r4_250,r5:r5_251,r6:r6_84,r7:r7_85,r8:r8_262,r9:r9_260
		defs: lr:lr_279,VNZC:VNZC_285
	Z_357 = SLICE(VNZC_285, bool, 1) (alias)
l00008F56:
	r3_286 = 0<32>
l00008F38:
	r8_289 = r12_206 + (Mem211[r7_85 + 8<i32>:word32] << 3<8>)
	Mem291[r7_85 + -28<i32>:word32] = 0<32>
	Mem292[r7_85 + 4<i32>:word32] = r8_289
	Mem293[r7_85 + 24<i32>:word32] = r1_79
	Mem294[r7_85 + 28<i32>:word32] = r2_80
	Mem295[r7_85 + -32<i32>:word32] = r0_78
	Mem296[r7_85 + 12<i32>:word32] = 0<32>
	Mem297[r7_85 + 16<i32>:word32] = 0<32>
	Z_357 = SLICE(cond(r8_289), bool, 1) (alias)
l00008F58:
	r12Out = r3_286
	lrOut = lr
	return Z_357
fn00008E88_exit:


word32 fn00008F68(word32 r2, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000901C
//      fn000090C0
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r2
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00008F68_entry:
l00008F68:
	r6_31 = 0x00008F6C<p32> - Mem29[0x0000901A<p32>:word32]
	branch fn00008E88(r12, r7, Mem29[r12 + 32<i32>:word32], Mem29[r12 + 28<i32>:word32], Mem29[r12 + 24<i32>:word32], Mem29[r12 + 20<i32>:word32], r11, lr, out r12_41, out lr_42) l00009014
l00008F7E_thunk_fn00008FEC:
	r2_52 = fn00008FEC(r2, r12, r12_41, r6_31, lr_42, out r10_57, out r11_58, out r12_59, out lr_54)
	r10Out = r10_57
	r11Out = r11_58
	r12Out = r12_59
	lrOut = lr_54
	return r2_52
l00008F80:
	r2_71 = Mem29[r12:word32]
	Mem72[r12_41 + -28<i32>:word32] = Mem29[r12 + 36<i32>:word32]
l00008F86_thunk_fn00008FEC:
	r2_73 = fn00008FEC(r2_71, r12, r12_41, r6_31, lr_42, out r10_78, out r11_79, out r12_80, out lr_75)
	r10Out = r10_78
	r11Out = r11_79
	r12Out = r12_80
	lrOut = lr_75
	return r2_73
fn00008F68_exit:


word32 fn00008FEA(word32 r2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008FEC
// MayUse:  r2:[0..31]
// LiveOut: r2
// Trashed: VNZC r2
// Preserved: sp
fn00008FEA_entry:
l00008FEA:
l00008FEA_thunk_fn00008FEC:
	fn00008FEC(r2, r3, r4, r6, lr, out r10_14, out r11_15, out r12_16, out lr_17)
	return r2 + 8<32>
fn00008FEA_exit:


word32 fn00008FEC(word32 r2, word32 r3, word32 r4, word32 r6, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
// MayUse:  lr:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r6:[0..31]
// LiveOut: lr r10 r11 r12 r2
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00008FEC_entry:
l00008FEC:
	branch r2 <u Mem0[r3 + 4<i32>:word32] l00008F88
l00008F88:
	branch Mem0[r2:word32] == 0<32> l00008FEA
l00008F8C_thunk_fn00008FEA:
	r2_12 = fn00008FEA(r2)
	r10Out = r10
	r11Out = r11
	r12Out = r12
	lrOut = lr
	return r2_12
l00008F8E:
	r7_114 = r2
l00008FE6:
	branch r7_114 != 0<32> l00008F92
l00008F92:
	r1_22 = Mem21[r7_114:word32]
	call Mem21[r4 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_90,Mem:Mem21,r0:r0_43,r1:r1_22,r10:r10_145,r11:Mem21[r4_23 + 8<i32>:word32],r12:r1_22,r2:r2_29,r3:r3_28,r4:r4_37,r5:Mem21[r4_23:word32],r6:r6_41,r7:r7_35,r9:r9_42
		defs: r0:r0_43,r1:r1_36,r10:r10_145,r11:r11_38,r12:r12_39,r2:r2_34,r3:r3_32,r4:r4_37,r5:r5_40,r6:r6_41,r7:r7_35,r9:r9_42
	r5_46 = r5_40 + (r12 << 3<8>)
	r7_66 = r7_35
	r4 = r4_37
	r10 = r10_145
	branch r5_46 <u Mem21[r4_37 + 4<i32>:word32] l00008FAC
l00008FA8:
	call Mem21[r6_41 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_90,Mem:Mem21,r0:r0_61,r1:r1_54,r10:r10_147,r11:r11_56,r12:r12_57,r2:r2_34,r3:r3_32,r4:r4_55,r5:r5_58,r6:r6_59,r7:r7_53,r9:r9_60
		defs: r0:r0_61,r1:r1_54,r10:r10_147,r11:r11_56,r12:r12_57,r2:r2_52,r3:r3_50,r4:r4_55,r5:r5_58,r6:r6_59,r7:r7_53,r9:r9_60
	r5_46 = r5_58
	r7_66 = r7_53
	r1_36 = r1_54
	r4 = r4_55
	r10 = r10_147
	r11 = r11_56
	r12 = r12_57
l00008FAC:
	r9_65 = Mem21[r5_46:word32]
	r0_67 = Mem21[r7_66 + 4<i32>:word32]
	branch r9_65 == 0<32> l00008FD0
l00008FD0:
	Mem71[r5_46:word32] = r1_36
	Mem75[r4 + 12<i32>:word32] = Mem71[r4 + 12<i32>:word32] + 1<32>
	branch r7_66 == r2 l00008FE4
l00008FDC:
	Mem79[r7_66:word32] = r9_65
	Mem81[r7_66 + 4<i32>:word32] = Mem79[r4 + 36<i32>:word32]
	Mem82[r4 + -28<i32>:word32] = r7_66
l00008FB4:
	branch r7_66 != r2 l00008FC8
l00008FC8:
	Mem86[r7_66 + 4<i32>:word32] = Mem21[r5_46 + 4<i32>:word32]
	Mem87[r5_46 + 4<i32>:word32] = r7_66
l00008FB8:
	branch fn00008DF4(r4, r5_46, r7_66, r4, lr, out r12, out lr) l00009014
l00009014:
	r10Out = r10
	r11Out = r11
	r12Out = r12
	lrOut = lr
	return dwLoc0C
l00008FBE:
	Mem110[r12 + 4<i32>:word32] = Mem21[r5_46 + 4<i32>:word32]
	Mem111[r5_46 + 4<i32>:word32] = r12
	Mem112[r12:word32] = r1_36
l00008FE4:
	r7_114 = r0_67
l00008FE8_thunk_fn00008FEA:
	r2_115 = fn00008FEA(r2)
	r10Out = r10
	r11Out = r11
	r12Out = r12
	lrOut = lr
	return r2_115
l00008FF0_thunk_fn00008FF2:
	r12_126 = fn00008FF2(r3, r6)
	r10Out = r10_124
	r11Out = r11_125
	r12Out = r12_126
	lrOut = lr_121
	return r2_127
fn00008FEC_exit:


word32 fn00008FF2(word32 r3, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
// MayUse:  r3:[0..31] r6:[0..31]
// LiveOut: r12
// Trashed: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00008FF2_entry:
l00008FF2:
	call Mem0[r6 + 12<i32>:word32] (retsize: 0;)
		uses: Mem:Mem0,r12:Mem0[r3:word32],r3:r3,r6:r6
		defs: r3:r3_8,r4:r4_11,r6:r6_10
	r9_22 = Mem0[r4_11:word32]
	r10_23 = Mem0[r4_11 + 4<i32>:word32]
	r11_24 = Mem0[r4_11 + 8<i32>:word32]
	lr_25 = Mem0[r4_11 + 12<i32>:word32]
	r8_26 = Mem0[r4_11 + 36<i32>:word32]
	Mem28[r3_8 + -28<i32>:word32] = r8_26
	Mem29[r3_8:word32] = r9_22
	Mem30[r3_8 + 4<i32>:word32] = r10_23
	Mem31[r3_8 + 8<i32>:word32] = r11_24
	Mem32[r3_8 + 12<i32>:word32] = lr_25
	call Mem32[r6_10 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_25,Mem:Mem32,r10:r10_23,r11:r11_24,r12:r4_11,r3:r3_8,r6:r6_10,r8:r8_26,r9:r9_22
	return dwLoc24
l00008FF0_thunk_fn00008FF2:
	return fn00008FF2(dwLoc10, dwLoc1C)
fn00008FF2_exit:


void fn0000901C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000901C_entry:
l0000901C:
	branch fn00008CAA(r0, r1, r2, r3, r4, r5, 0x00009022<p32> - Mem29[0x000090BC<p32>:word32], r12, 1<32>, fp - 0x28<32>, r11, r12, lr, out r10_272, out r11_273, out r12_274, out lr_39) l000090B6
l00009030:
	Mem53[r12 + 16<i32>:word32] = Mem29[r12 + 16<i32>:word32] - 1<32>
	branch Mem53[dwLoc28:word32] != 0<32> l000090B6
l0000903E:
	r8_57 = Mem53[r12 + 12<i32>:word32]
	Mem61[r12 + 12<i32>:word32] = r8_57 - 1<32>
	fn0001013A(r8_57 - 1<32>, out r12_65)
	fn00010050(fn0001013A(Mem61[r12 + 8<i32>:word32], out r12_76), Mem61[Mem61[r12 + 20<i32>:word32]:word32], r12_76, out r12_83)
	branch fn0000FA0E(r12_83, r12_65, out r8_275, out r9_276, out r10_277) l000090B6
l00009064:
	fn00008BE0(r12, out r1_278, out r2_109, out r3_279, out r4_280, out r5_281, out r6_282, out r7_114, out r8_283, out r9_284, out r10_285, out r11_286, out r12_287)
	r3_120 = Mem61[r7_114 + 20<i32>:word32]
	fn0001013A(Mem61[r7_114 + 8<i32>:word32], out r12_125)
	fn00010050(fn0001013A(Mem61[r7_114 + 12<i32>:word32], out r12_135), Mem61[r3_120:word32], r12_125, out r12_144)
	branch fn0000FA0E(r12_144, r12_135, out r8_288, out r9_289, out r10_290) l000090B6
l0000908E:
	r9_162 = CONVERT(Mem61[r3_120 + 16<i32>:byte], byte, word32)
	branch SLICE(r9_162, byte, 0) == SLICE(r2_109, byte, 0) l0000909E
l0000909E:
	r9_162 = fn00010050(r9_162, Mem61[r3_120 + 4<i32>:word32], r12_125, out r12_168)
	r11_176 = Mem61[r3_120 + 8<i32>:word32]
l00009098:
	r11_176 = Mem61[r3_120 + 4<i32>:word32]
	r12_168 = r12_125
l000090A8:
	fn00010050(r9_162, r11_176, r12_168, out r12_183)
	fn000101B2(r12_183, out r12_192)
	fn00008F68(r2_109, r7_114, r12_192, r7_114, lr_39, out r10_291, out r11_292, out r12_293, out lr_294)
l000090B6:
	return
fn0000901C_exit:


bool fn000090C0(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r11, word32 r12, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: Z lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000090C0_entry:
l000090C0:
	sp_30 = fp - 0x28<32>
	r6_32 = 0x000090C6<p32> - Mem29[0x00009198<p32>:word32]
	r2_140 = r11
	r7_36 = r12
	branch r11 != 0<32> l000090D4
l000090D0:
	call Mem29[r6_32 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r11:r11,r12:r12,r2:r11,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r12
		defs: lr:lr_48,r0:r0_40,r1:r1_41,r11:r11_49,r12:r12_50,r2:r2_42,r3:r3_43,r4:r4_44,r5:r5_45,r6:r6_46,r7:r7_47,sp:sp_39
l000090D4:
	r1_139 = r12_72
	branch fn00008CAA(r0, r1, r2_140, r3, r4, r5, r6_32, r7_36, 0<32>, sp_30, r11, r12, lr, out r10_124, out r11_123, out r12_72, out lr_245) l00009196
l000090E0:
	r9_81 = Mem29[sp_30:word32]
	branch Mem29[r9_81:word32] == 0<32> l00009104
l00009104:
	Mem85[r9_81:word32] = r2_140
	r9_86 = Mem85[r7_36 + 12<i32>:word32]
	Mem92[r7_36 + 16<i32>:word32] = Mem85[r7_36 + 16<i32>:word32] + 1<32>
	Mem93[r7_36 + 12<i32>:word32] = r9_86 + 1<32>
	fn0001013A(r9_86 + 1<32>, out r12_97)
	fn00010050(fn0001013A(Mem93[r7_36 + 8<i32>:word32], out r12_108), Mem93[Mem93[r7_36 + 20<i32>:word32] + 8<i32>:word32], r12_108, out r12_115)
	r11_123 = r12_97
	branch fn0000FA0E(r12_97, r12_115, out r8_368, out r9_369, out r10_124) l00009194
l00009130:
	fn00008BE0(r7_36, out r1_139, out r2_140, out r3_370, out r4_371, out r5_372, out r6_373, out r7_145, out r8_374, out r9_375, out r10_376, out r11_377, out r12_378)
	r3_151 = Mem93[r7_145 + 20<i32>:word32]
	r0_152 = Mem93[r3_151 + 8<i32>:word32]
	fn0001013A(Mem93[r7_145 + 8<i32>:word32], out r12_157)
	fn00010050(fn0001013A(Mem93[r7_145 + 12<i32>:word32], out r12_167), r12_157, r0_152, out r12_176)
	r11_123 = r12_167
	branch fn0000FA0E(r12_167, r12_176, out r8_379, out r9_380, out r10_124) l00009194
l0000915A:
	r9_193 = CONVERT(Mem93[r3_151 + 16<i32>:byte], byte, word32)
	branch SLICE(r9_193, byte, 0) == SLICE(r1_139, byte, 0) l0000916A
l0000916A:
	r9_193 = fn00010050(r9_193, Mem93[r3_151 + 12<i32>:word32], r12_157, out r12_199)
	r11_207 = r0_152
l00009164:
	r11_207 = Mem93[r3_151 + 12<i32>:word32]
	r12_199 = r12_157
l00009174:
	fn00010050(r9_193, r11_207, r12_199, out r12_214)
	r11_123 = Mem93[0x000091A0<p32>:word32]
	branch fn0000F9D0(r11_123, r12_214, out r8_381, out r9_382, out r10_124) l00009196
l00009182:
	fn000101B2(r12_214, out r12_235)
	r2_140 = fn00008F68(r2_140, r7_145, r12_235, r7_145, lr_245, out r10_124, out r11_123, out r12_250, out lr_245)
	r12_264 = CONVERT(SLICE(r12_250, byte, 0), byte, word32)
	branch r12_264 != 0<32> l00009194
l00009190_1:
	r2_140 = r12_264
l00009194:
	r1_139 = r2_140
l000090E8:
	branch fn00008DF4(r4, r5, r7_36, r7_36, lr_245, out r12_272, out lr_245) l00009196
l000090EE:
	Mem279[r12_272:word32] = r2_140
	Mem283[r12_272 + 4<i32>:word32] = Mem279[Mem279[sp_30:word32] + 4<i32>:word32]
	Mem285[Mem283[sp_30:word32] + 4<i32>:word32] = r12_272
	Mem289[r7_36 + 16<i32>:word32] = Mem285[r7_36 + 16<i32>:word32] + 1<32>
	r1_139 = r2_140
l00009196:
	r10Out = r10_124
	r11Out = r11_123
	r12Out = r1_139
	lrOut = lr_245
	return SLICE(cond(fp - 36<i32>), bool, 1)
fn000090C0_exit:


ui64 fn00009248(word32 r10, word32 r11, word32 r12, word32 pc, ptr32 & r8Out, ptr32 & r9Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r11:r10 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009248_entry:
l00009248:
	r4_119 = r10
	r5_120 = r11
	branch r12 == 1<32> l000092A2
l00009258:
	r9_r8_41 = Mem29[pc + 84<i32>:word64]
	r8 = SLICE(r9_r8_41, word32, 0) (alias)
	branch __avr32_f64_cmp_lt(r8, SLICE(r9_r8_41, word32, 32), r10, r11, out r9, out r12_192, out lr) l000092A2
l00009262:
	r11_r10_188 = fn0000F792(r10, r11)
	r11_55 = SLICE(r11_r10_188, word32, 32) (alias)
	r10_54 = SLICE(r11_r10_188, word32, 0) (alias)
	branch r12 == 0<32> l00009276
l00009276:
	fn000101CC(r10_54, r11_55, pc, out r9_193, out r10_69, out r11_70, out lr_194)
	r5_87 = r12
	branch __avr32_f64_cmp_eq(r10, r11, r10_69, r11_70, out r12_195) l0000928A
l00009286_1:
	r5_87 = 1<32>
l0000928A:
	r8_93 = CONVERT(SLICE(r5_87, byte, 0) != SLICE(r12, byte, 0), bool, word32)
l00009272:
	r8_93 = 0<32>
l00009290:
	r11_r10_141 = CONVERT(r8_93, word32, uint64) + r11_r10_188
	r8 = fn000101CC(SLICE(r11_r10_141, word32, 0), SLICE(r11_r10_141, word32, 32), pc, out r9, out r10_110, out r11_111, out lr)
	r4_119 = r10_110
	r5_120 = r11_111
l000092A2:
	r8Out = r8
	r9Out = r9
	lrOut = lr
	return SEQ(r5_120, r4_119)
fn00009248_exit:


word64 fn000092B4(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000092D8
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r11:r10
// Trashed: VNZC lr r10 r11 r12
// Preserved: r4 r5 r6 r7 sp
fn000092B4_entry:
l000092B4:
	r6_19 = 0x000092B8<p32> - Mem17[0x000092D2<p32>:word32]
	call Mem17[r6_19 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r12:Mem17[r6_19 + 748<i32>:word32],r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: VNZC:VNZC_31
	branch SLICE(VNZC_31, bool, 1) l000092CC
l000092CC:
	lrOut = <invalid>
	return 0xBADDCAFE00000400<64>
l000092C4:
	lrOut = <invalid>
	return 0xBADDCAFE00000200<64>
fn000092B4_exit:


void fn000092D8(word32 r0, word32 r1, word32 r4, word32 r5, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000092D8_entry:
l000092D8:
	sp_130 = fp - 0x28<32>
	r6_213 = 0x000092DE<p32> - Mem29[0x000093B0<p32>:word32]
	r7_102 = r12
	r2_109 = r11
	r3_111 = r10
	branch r12 != 0<32> l0000930C
l000092EA:
	call Mem29[r6_213 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r10:r10,r11:r11,r12:Mem29[r6_32 + 744<i32>:word32],r2:r11,r3:r10,r4:r4,r5:r5,r6:r6_32,r7:r12
		defs: lr:lr_51,r0:r0_43,r1:r1_44,r10:r10_54,r11:r11_53,r12:r12_52,r2:r2_45,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,sp:sp_42,VNZC:VNZC_57
	r7_102 = r12_52
	branch SLICE(VNZC_57, bool, 1) l0000930C
l000092F6:
	call Mem29[r6_213 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,Mem:Mem29,r0:r0_43,r1:r1_44,r10:r10_54,r11:r11_53,r12:Mem29[r6_49 + 740<i32>:word32],r2:r2_45,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,r7:r12_52
		defs: lr:lr_70,r0:r0_62,r1:r1_63,r12:r12_71,r2:r2_64,r3:r3_65,r4:r4_66,r5:r5_67,r6:r6_68,sp:sp_61,VNZC:VNZC_76
	r7_102 = r12_71
	branch SLICE(VNZC_76, bool, 1) l0000930C
l0000930C:
	r8_83 = r7_102 + 1<i32>
	branch Mem29[r7_102:byte] == 0x27<8> l00009322
l00009322:
	r7_102 = r8_83
	r5_112 = 4<32>
l0000931E:
	r5_112 = 0<32>
l00009326:
	fn00006DDC(r0, r1, r2_109, r3_111, 0x000099B4<p32>, r5_112, r6_213, r7_102, 4<32>, 0x000099B4<p32>, Mem29[r6_213 + 752<i32>:word32], r7_102, lr, out r12_118, out lr_115)
	r4_208 = 0x000099B4<p32>
	N_122 = <invalid>
	V_121 = <invalid>
	branch N_122 | V_121 l0000934A
l0000934A:
	branch fn0000CAE0(r1, 0x000099B4<p32>, Mem29[r6_213 + 736<i32>:word32], r3_111, 0<32>, sp_130, r7_102, lr_115, out lr_115) l00009360
l00009360:
	Mem144[r2_109:word32] = 0<32>
l0000935C:
	r10_145 = Mem29[sp_130:word32]
l0000938C:
	r8_148 = CONVERT(Mem29[r7_102:byte], byte, word32)
	branch SLICE(r8_148, byte, 0) >u 0x39<8> || SLICE(r8_148, byte, 0) <u 0x30<8> l00009366
l00009366:
	branch r7_102 != r10_145 l0000938A
l0000938A:
	r7_102 = r7_102 + 1<32>
l0000936A:
	r5_112 = r5_112 | 0x80<u32>
	branch Mem29[r7_102 + -1<i32>:byte] != 0x42<8> l00009386
l00009378:
	r5_112 = r5_112 | 0x100<u32>
	branch Mem29[r7_102 + -2<i32>:byte] != 0x69<8> l0000939A
l00009386:
	r5_112 = r5_112 | 0x20<u32>
l0000933A:
	r5_112 = r5_112 | Mem29[0x000099B4<p32> + r12_118 * 4<32>:word32]
	Mem178[r3_111:word64] = 1<64>
l00009302:
	Mem189[r3_111:word64] = fn000092B4(r4_208, r5_67, r6_213, r12_71, lr, out lr_115)
	r5_112 = r12_71
l0000939A:
	Mem195[r2_109:word32] = r5_112
l0000939E:
	r9_r8_201 = Mem200[r3_111:word64]
	branch SLICE(r9_r8_201, word32, 32) != SLICE(cond(SLICE(r9_r8_201, word32, 0) - 0<32>), bool, 0) l000093B0
l000093A8:
	Mem234[r3_111:word64] = fn000092B4(r4_208, r5_112, r6_213, r7_102, lr_115, out lr_337)
l000093B0:
	return
fn000092D8_exit:


word32 fn000093B8(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r9, word32 r12, word64 qwArg00, word64 qwArg08, word32 dwArg10, word32 dwArg14, word64 qwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg40, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004374
//      fn00004864
//      fn00004968
//      fn0000511C
// MayUse:  r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31] Stack +0000:[0..63] Stack +0008:[0..63] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..63] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000093B8_entry:
	dwArg0C_1184 = SLICE(qwArg08, word32, 0) (alias)
	dwArg08_1192 = SLICE(qwArg08, word32, 32) (alias)
	dwArg04_1191 = SLICE(qwArg00, word32, 0) (alias)
	dwArg00_1225 = SLICE(qwArg00, word32, 32) (alias)
	dwArg1C_1208 = SLICE(qwArg18, word32, 0) (alias)
	dwArg18_1210 = SLICE(qwArg18, word32, 32) (alias)
l000093B8:
	r6_32 = 0x000093BE<p32> - Mem29[0x00009510<p32>:word32]
	r11_46 = SLICE(qwArg08, word32, 32) (alias)
	r9_44 = 0x3E8<32>
	branch (r9 & 0x20<32>) == 0<32> l000093E8
l000093E4_1:
	r9_44 = 0x400<32>
l000093E8:
	r10_60 = CONVERT(SLICE(r9, word2, 0), word2, word32)
	call Mem68[r6_32 + 436<i32>:word32] (retsize: 0;)
		uses: lr:fp,Mem:Mem68,r0:r0,r1:r1,r10:r10_60,r11:r11_46,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r12,r8:SLICE(qwArg00, word32, 0),r9:SLICE(qwArg00, word32, 32),Stack +000C:qwArg00,Stack +0024:r10_60,Stack +0028:r9_55,Stack +009C:qwArg00,Stack +00A4:qwArg08,Stack +00AC:dwArg10,Stack +00B0:dwArg14,Stack +00B4:qwArg18,Stack +00C0:dwArg24,Stack +00C4:dwArg28,Stack +00D4:dwArg38,Stack +00D8:dwArg3C,Stack +00DC:dwArg40
		defs: lr:lr_86,r0:r0_78,r1:r1_79,r10:r10_89,r12:r12_90,r2:r2_80,r4:r4_82,r6:r6_84,r7:r7_85,r9:r9_87,sp:sp_77
	r11_94 = Mem68[sp_77 + 20<i32>:word32]
	r3_97 = Mem68[r12_90:word32]
	Mem102[sp_77:word32] = r11_94 & 0x10<32>
	Mem103[sp_77 + 56<i32>:word32] = r7_85 + 0x288<32>
	call Mem103[r6_84 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_86,Mem:Mem103,r0:r0_78,r1:r1_79,r10:r10_89,r11:r11_94 & 0x10<32>,r12:r3_97,r2:r2_80,r3:r3_97,r4:r4_82,r5:r12_90,r6:r6_84,r7:r7_85,r8:r7_85 + 0x288<32>,r9:r9_87
		defs: lr:lr_113,r0:r0_105,r1:r1_106,r10:r10_116,r11:r11_118,r12:r12_117,r3:r3_108,r4:r4_109,r5:r5_110,r6:r6_111,r7:r7_112,sp:sp_104
	r2_121 = Mem103[r5_110 + 4<i32>:word32]
	r8_122 = Mem103[r6_111 + 732<i32>:word32]
	r9_123 = r12_117 - 1<32>
	qwArg0C_1185 = SEQ(dwArg0C_1184, dwArg10) (alias)
	qwArg04_1190 = SEQ(dwArg04_1191, dwArg08_1192) (alias)
	qwArg04_1190 = SEQ(dwArg04_1191, dwArg08_1192) (alias)
	branch r12_117 <u 0x11<32> l00009428
l00009424_1:
	r3_108 = r8_122
l00009428:
	dwArg08_1245 = SLICE(qwArg04_1190, word32, 0) (alias)
	dwArg04_1248 = SLICE(qwArg04_1190, word32, 32) (alias)
	branch r12_117 >=u 0x11<32> l0000942C
l00009428_1:
	r9_123 = r12_117
l0000942C:
	branch r12_117 <u 0x11<32> l00009430
l0000942C_1:
	r9_123 = 1<32>
l00009430:
	Mem138[sp_104 + 64<i32>:word32] = r9_123
	Mem142[sp_104 + 60<i32>:word32] = r3_108
	r5_150 = Mem142[r5_110 + 8<i32>:word32]
	Mem151[sp_104 + 68<i32>:word32] = r5_150
	call Mem151[r6_111 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_113,Mem:Mem151,r0:r0_105,r1:r1_106,r10:r10_116,r11:r11_118,r12:r2_121,r2:r2_121,r3:r3_141,r4:r4_109,r5:r5_150,r6:r6_111,r7:r7_112,r9:r9_132
		defs: pc:pc_191,r0:r0_177,r1:r1_178,r12:r12_189,r2:r2_179,r4:r4_181,r5:r5_182,r6:r6_183,r7:r7_184
	sp_1018 = fp
	r8_194 = Mem151[r6_1025 + 728<i32>:word32]
	r12_197 = r12_189
	branch r12_189 >u 0x10<32> l0000944C
l00009448_1:
	r12_197 = r2_179
l0000944C:
	branch r12_189 <=u 0x10<32> l00009450
l0000944C_1:
	r12_197 = r8_194
l00009450:
	r8_210 = SLICE(qwArg04_1190, word32, 0) (alias)
	r9_215 = SLICE(qwArg04_1190, word32, 32) (alias)
	branch r9_215 - dwArg0C_1184 >u SLICE(cond(r8_210 - dwArg10), bool, 0) l000094AE
l000094AE:
	branch dwArg0C_1184 == SLICE(cond(dwArg10 - 0<32>), bool, 0) l00009546
l000094B8:
	r11_r10_1497 = fn00010A4C(qwArg04_1190, dwArg10, dwArg0C_1184)
	branch SLICE(r11_r10_1497, word32, 32) != SLICE(cond(SLICE(r11_r10_1497, word32, 0) - 0<32>), bool, 0) l00009546
l000094CA:
	r11_r10_1498 = fn000107C0(dwArg10, dwArg0C_1184, SLICE(qwArg04_1190, word32, 0), SLICE(qwArg04_1190, word32, 32), out r8_1499, out r9_1500, out lr_1501)
	r11_256 = SLICE(r11_r10_1498, word32, 32) (alias)
	r10_255 = SLICE(r11_r10_1498, word32, 0) (alias)
	r11_r10_1502 = fn00010A4C(qwArg18, r10_255, r11_256)
	r10_272 = SLICE(r11_r10_1502, word32, 0) (alias)
	r3_285 = SLICE(r10_272 *u 0xA<32>, word32, 32) + SLICE(r11_r10_1502, word32, 32) * 0xA<32>
	r11_r10_1459 = fn00010A4C(SEQ(r3_285, r10_272 *u 0xA<32>), r10_255, r11_256)
	r10_301 = SLICE(r11_r10_1459, word32, 0) * 2<32> (alias)
	r1_1002 = r11_256
	r0_177 = r10_255
	r11_304 = SLICE(r11_r10_1459 * 2<64>, word32, 32) (alias)
	qwArg08_1364 = SEQ(dwArg08_1245, dwArg0C_1184) (alias)
	qwArg08_1364 = SEQ(dwArg08_1245, dwArg0C_1184) (alias)
	branch r11_304 - r11_256 >=u SLICE(cond(r10_301 - r10_255), bool, 0) l00009518
l00009518:
	C_310 = SLICE(cond(r10_255 - r10_301), bool, 0) (alias)
	branch r11_256 - r11_304 <u C_310 l00009522
l0000951E_1:
	r4_181 = 2<32>
l00009522:
	branch r11_256 - r11_304 >=u C_310 l00009526
l00009522_1:
	r4_181 = 3<32>
l0000950A:
	r4_181 = CONVERT((r11_304 | r10_301) != 0<32>, bool, word32)
l00009526:
	qwArg2C_1207 = fn000107C0(r10_255, r11_256, SLICE(qwArg18, word32, 0), SLICE(qwArg18, word32, 32), out r8_1503, out r9_1504, out lr_1505)
	r3_363 = SLICE(fn000107C0(r10_255, r11_256, r10_272 *u 0xA<32>, r3_285, out r8_1507, out r9_1508, out lr_1014), word32, 0)
l00009460:
	r11_r10_1479 = fn00010A4C(qwArg0C_1185, r8_210, r9_215)
	branch SLICE(r11_r10_1479, word32, 32) != SLICE(cond(SLICE(r11_r10_1479, word32, 0) - 0<32>), bool, 0) l00009546
l0000946A:
	r11_r10_1490 = fn000107C0(SLICE(qwArg04_1190, word32, 0), SLICE(qwArg04_1190, word32, 32), dwArg10, dwArg0C_1184, out r8_1491, out r9_1492, out lr_1493)
	r10_385 = SLICE(r11_r10_1490, word32, 0) (alias)
	r11_r10_397 = r10_385 *u dwArg1C_1208
	r11_386 = SLICE(r11_r10_1490, word32, 32) (alias)
	dwArg30_1213 = SLICE(r11_r10_397, word32, 0) (alias)
	r11_406 = r11_386 * dwArg1C_1208 + dwArg18_1210 * r10_385 + SLICE(r11_r10_397, word32, 32)
	r11_r10_1494 = fn000107C0(r10_385, r11_386, dwArg30_1213, r11_406, out r8_1495, out r9_1496, out lr_1014)
	qwArg2C_1207 = SEQ(r11_406, dwArg30_1213) (alias)
	qwArg08_1364 = SEQ(dwArg08_1245, dwArg0C_1184) (alias)
	branch SLICE(r11_r10_1494 - qwArg18, word32, 32) != SLICE(cond(SLICE(r11_r10_1494, word32, 0) - SLICE(qwArg18, word32, 0)), bool, 0) l00009546
l00009546:
	fn000101CC(SLICE(qwArg18, word32, 0), SLICE(qwArg18, word32, 32), pc_191, out r9_1480, out r10_438, out r11_439, out lr_1481)
	fn000101CC(dwArg10, dwArg0C_1184, pc_191, out r9_1482, out r10_453, out r11_454, out lr_1483)
	fn000101CC(SLICE(qwArg04_1190, word32, 0), SLICE(qwArg04_1190, word32, 32), pc_191, out r9_1484, out r10_468, out r11_469, out lr_1485)
	r11_r10_1486 = __avr32_f64_div(r10_453, r10_468, r11_469, r10_453, r11_454, out r8_1487, out r9_1488)
	r11_r10_1489 = __avr32_f64_mul(SLICE(r11_r10_1486, word32, 0), SLICE(r11_r10_1486, word32, 32), r10_438, r11_439)
	r10_495 = SLICE(r11_r10_1489, word32, 0) (alias)
	r11_496 = SLICE(r11_r10_1489, word32, 32) (alias)
	qwArg08_1247 = SEQ(dwArg08_1245, dwArg0C_1184) (alias)
	branch dwArg00_1225 != 0<32> l000095AA
l000095AA:
	r5_r4_510 = Mem430[pc_191 + 278<i32>:word64]
	r4_513 = SLICE(r5_r4_510, word32, 0) (alias)
	r5_514 = SLICE(r5_r4_510, word32, 32) (alias)
l000095B0_thunk_fn000095B2:
	r2_519 = fn000095B2(r4_513, r5_514, dwArg28, out r3_520, out r4_521, out r5_522, out r10_516, out r11_517, out r12_518, out lr_515)
	r1Out = r11_496
	r2Out = r2_519
	r3Out = r3_520
	r4Out = r4_521
	r5Out = r5_522
	r6Out = r6_1025
	r7Out = r7_1007
	r10Out = r10_516
	r11Out = r11_517
	r12Out = r12_518
	lrOut = lr_515
	return r10_495
l00009588:
	r11_r10_1466 = fn00009248(r10_495, r11_496, dwArg24, pc_191, out r8_1515, out r9_1516, out lr_532)
	qwArg00_1249 = SEQ(dwArg00_1225, dwArg04_1248) (alias)
	call Mem547[r6_1025 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_532,Mem:Mem547,r0:r10_495,r1:r11_496,r10:SLICE(r11_r10_1466, word32, 0),r11:Mem547[r6_183 + 364<i32>:word32],r12:r7_184,r2:r10_453,r3:r11_454,r4:dwArg00_1225,r5:r5_182,r6:r6_183,r7:r7_184,r9:0xFFFFFFFF<32>,Stack +0000:r11_r10_1466,Stack +0008:qwArg00_1249,Stack +0010:qwArg08_1247,Stack +0018:dwArg10,Stack +001C:dwArg14,Stack +0020:qwArg18,Stack +002C:dwArg24,Stack +0030:dwArg28,Stack +003C:0xFFFFFFFF<32>,Stack +0040:dwArg38,Stack +0044:dwArg3C,Stack +0048:dwArg40
		defs: lr:lr_568,r0:r0_560,r1:r1_561,r10:r10_571,r11:r11_573,r2:r2_562,r3:r3_563,r4:r4_564,r5:r5_565,r6:r6_566,r7:r7_567,r9:r9_569
	call Mem547[r6_566 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_568,Mem:Mem547,r0:r0_560,r1:r1_561,r10:r10_571,r11:r11_573,r12:r7_567,r2:r2_562,r3:r3_563,r4:r4_564,r5:r5_565,r6:r6_566,r7:r7_567,r9:r9_569
		defs: lr:lr_586,r12:r12_590,r6:r6_584,r7:r7_585,sp:sp_577
l000095A8_thunk_fn0000967A:
	r0_594 = fn0000967A(r6_584, r7_585, r12_590, Mem547[sp_577 + 28<i32>:word32], Mem547[sp_577 + 64<i32>:word32], Mem547[sp_577 + 80<i32>:word32], out r1_595, out r2_599, out r3_600, out r4_601, out r5_602, out r6_603, out r7_604, out r10_596, out r11_597, out r12_598)
	r1Out = r1_595
	r2Out = r2_599
	r3Out = r3_600
	r4Out = r4_601
	r5Out = r5_602
	r6Out = r6_603
	r7Out = r7_604
	r10Out = r10_596
	r11Out = r11_597
	r12Out = r12_598
	lrOut = lr_586
	return r0_594
l000094AC:
l00009696:
	r3_363 = 0<32>
	r4_181 = 0<32>
l0000969A:
	branch dwArg00_1225 != 0<32> l000096A8
l000096A8:
	r1_1002 = 0<32>
	r0_177 = dwArg28
	branch 0<32> - SLICE(qwArg2C_1207, word32, 32) <=u SLICE(cond(dwArg28 - SLICE(qwArg2C_1207, word32, 0)), bool, 0) l000096D0
l000096D0:
	dwArg34_1258 = 0<32>
l000096D4:
	r3_657 = r3_363 + SLICE(fn00010A4C(qwArg2C_1207, dwArg28, 0<32>), word32, 0) *u 0xA<32>
	r11_r10_1465 = fn000107C0(dwArg28, 0<32>, SLICE(qwArg2C_1207, word32, 0), SLICE(qwArg2C_1207, word32, 32), out r8_1513, out r9_1514, out lr_1014)
	r5_677 = (r4_181 >> 1<32>) + (r3_657 << 1<8>)
	r2_660 = r3_657 /u dwArg28
	r11_666 = SLICE(r11_r10_1465, word32, 32) (alias)
	r10_665 = SLICE(r11_r10_1465, word32, 0) (alias)
	r7_1007 = dwArg28
	qwArg2C_1207 = r11_r10_1465
	r8_678 = r5_677 + r4_181
	r3_363 = r2_660
	branch dwArg28 <u r8_678 l00009714
l00009710_1:
	r4_181 = 2<32>
l00009714:
	branch dwArg28 >=u r8_678 l00009718
l00009714_1:
	r4_181 = 3<32>
l00009718:
	branch r5_677 >=u dwArg28 l00009720
l0000971C:
	r4_181 = CONVERT(r8_678 != 0<32>, bool, word32)
l00009720:
	dwArg34_1258 = dwArg34_1517 + 1<32>
	branch 0<32> - r11_666 >u SLICE(cond(dwArg28 - r10_665), bool, 0) l0000973A
l00009734:
	dwArg34_1517 = dwArg34_1258
	branch dwArg34_1517 <= 6<32> l000096D4
l0000973A:
	branch r11_666 <=u SLICE(cond(r10_665 - 9<32>), bool, 0) l0000974A
l0000974A:
	branch dwArg24 != 1<32> l0000975C
l0000975C:
	r9_743 = CONVERT(dwArg24 == 0<32>, bool, word32) & CONVERT(r4_181 > 0<32>, bool, word32)
l00009750:
	r9_743 = CONVERT(CONVERT(SLICE(r2_660, bool, 0), bool, word32) + r4_181 > 2<32>, bool, word32)
l00009768:
	branch r9_743 == 0<32> l0000999E
l0000976E:
	r3_363 = r2_660 + 1<32>
	branch r2_660 != 9<32> l0000999C
l0000999C:
	r4_181 = 0<32>
l0000999E:
	branch r3_363 != 0<32> l000097A6
l000099A4:
l00009776:
	qwArg2C_1207 = r11_r10_1465 + 1<u64>
	branch SLICE(r11_r10_1465 + 1<u64>, word32, 32) != SLICE(cond((r10_665 + 1<32>) - 0xA<32>), bool, 0) l00009794
l00009794:
	r3_363 = 0<32>
	r4_181 = 0<32>
l00009798:
	branch Test(NE,SLICE(dwArg14, bool, 3)) l000097A6
l000097A6:
	r9_802 = r3_363 + 0x30<32>
	Mem805[dwArg38 - 1<32>:byte] = SLICE(r9_802, byte, 0)
	r5_798 = dwArg38 - 1<32> + dwArg40
	call Mem805[r6_1025 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_664,Mem:Mem805,r0:dwArg28,r1:0<32>,r10:dwArg40,r11:dwArg3C,r12:r5_798,r2:r2_660,r3:r3_800,r4:r4_836,r5:r5_798,r6:r6_183,r7:dwArg28,r8:dwArg38 - 1<32>,r9:r9_802,Stack +0000:qwArg00_1249,Stack +0008:qwArg08_1364,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:qwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +003C:dwArg3C,Stack +0040:dwArg40
		defs: lr:lr_863,r0:r0_855,r1:r1_856,r5:r5_860,r6:r6_861,r7:r7_862,sp:sp_854
l000097A0:
	r5_1024 = dwArg38
	r3_363 = 0<32>
l0000978E:
	r5_1024 = dwArg38
l000097C0:
	r3_363 = 0<32>
	r4_181 = 0<32>
l00009746:
	r5_1024 = dwArg38
l000096BA:
	r5_1024 = dwArg38
l000096A0:
	r5_1024 = dwArg38
	r7_1007 = 0xFFFFFFFF<32>
l000097C2:
	branch Mem886[sp_1018 + 36<i32>:word32] != 1<32> l000097EA
l000097EA:
	branch Mem886[sp_1018 + 36<i32>:word32] == 0<32> l000097F4
l000097F4:
	r8_906 = CONVERT(r4_181 + r3_363 <= 0<32>, bool, word32) ^ 0x10000<32>
l000097F0:
	r8_906 = 0<32>
l00009800:
	r8_910 = CONVERT(SLICE(r8_906, byte, 0), byte, word32)
l000097C8:
	r11_r10_1114 = (Mem886[sp_1018 + 0x2C<32>:word32] & 1<32>) + r4_181
	r8_910 = CONVERT(CONVERT(r11_r10_1114 != 0<32>, bool, word32) + r3_363 > 5<32>, bool, word32)
l00009802:
	branch r8_910 == 0<32> l0000985E
l00009806:
	Mem950[sp_1018 + 44<i32>:word64] = Mem886[sp_1018 + 44<i32>:word64] + 1<u64>
	branch Mem950[sp_1018:word32] == 0<32> l0000985E
l0000981E:
	r11_r10_954 = Mem950[sp_1018 + 44<i32>:word64]
	branch SLICE(r11_r10_954, word32, 32) != SLICE(cond(SLICE(r11_r10_954, word32, 0) - Mem950[sp_1018 + 40<i32>:word32]), bool, 0) l0000985E
l0000982E:
	r10_963 = Mem950[sp_1018 + 52<i32>:word32]
	branch r10_963 > 7<32> l0000985E
l00009836:
	r8_966 = Mem950[sp_1018 + 20<i32>:word32]
	Mem971[sp_1018 + 52<i32>:word32] = r10_963 + 1<32>
	r3_r2_1461 = 1<64> (alias)
	branch (r8_966 & 8<32>) != 0<32> l0000985A
l00009842:
	r8_973 = Mem971[sp_1018 + 64<i32>:word32]
	r9_978 = r5_1024 - 1<32>
	r11_981 = Mem971[sp_1018 + 60<i32>:word32]
	Mem985[r9_978:byte] = 0x30<8>
	r5_979 = r9_978 + r8_973
	call Mem985[r6_1025 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_1014,Mem:Mem985,r0:r0_991,r1:r1_998,r10:r8_973,r11:r11_981,r12:r5_979,r2:1<32>,r3:0<32>,r4:r4_894,r5:r5_979,r6:r6_987,r7:r7_1007,r8:0x30<32>,r9:r9_978
		defs: r5:r5_1024,r6:r6_1025,Sequence r3:r2:r3_r2_1467,sp:sp_1018
	r3_r2_1461 = r3_r2_1467 (alias)
l0000985A:
	Mem1039[sp_1018 + 44<i32>:word64] = r3_r2_1461
l0000985E:
	r1_1042 = r5_1024
l00009860:
	r1_1042 = r1_1042 - 1<i32>
	Mem1067[r1_1042:byte] = SLICE(fn00010A4C(qwArg2C_1207, 0xA<32>, 0<32>), byte, 0) + 0x30<8>
	r11_r10_1464 = fn000107C0(0xA<32>, 0<32>, SLICE(qwArg2C_1207, word32, 0), SLICE(qwArg2C_1207, word32, 32), out r8_1510, out r9_1511, out lr_1070)
	qwArg2C_1207 = r11_r10_1464
	branch SLICE(r11_r10_1464, word32, 32) != SLICE(cond(SLICE(r11_r10_1464, word32, 0) - 0<32>), bool, 0) l00009860
l00009888:
l00009888_thunk_fn0000988A:
	r0_1091 = fn0000988A(r1_1042, r6_1025, r5_1024, dwArg14, r12_197, out r1_1092, out r2_1095, out r3_1096, out r4_1097, out r5_1098, out r6_1099, out r7_1100, out r10_1093, out r11_1102, out r12_1094)
	r1Out = r1_1092
	r2Out = r2_1095
	r3Out = r3_1096
	r4Out = r4_1097
	r5Out = r5_1098
	r6Out = r6_1099
	r7Out = r7_1100
	r10Out = r10_1093
	r11Out = r11_1102
	r12Out = r12_1094
	lrOut = lr_1070
	return r0_1091
fn000093B8_exit:


word32 fn000095B2(word32 r4, word32 r5, word32 dwArg28, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  r4:[0..31] r5:[0..31] Stack +0028:[0..31]
// LiveOut: lr r10 r11 r12 r2 r3 r4 r5
// Trashed: VNZC lr r10 r11 r12 r2 r3 r4 r5 r8 r9
// Preserved: sp
fn000095B2_entry:
l000095B2:
	r11_24 = SLICE(__avr32_f64_mul(__avr32_u32_to_f64(dwArg28, out r11_7), r11_7, r4, r5), word32, 32) (alias)
l000095D4_thunk_fn000095D6:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg20 = <invalid>
	stackArg32 = <invalid>
	stackArg36 = <invalid>
	stackArg56 = <invalid>
	stackArg64 = <invalid>
	stackArg72 = <invalid>
	r2_47 = fn000095D6(r0, r1, r2, r11_24, r6, r7, r8, r9, r10, r11, pc, stackArg20, stackArg32, stackArg36, dwArg34 + 1<32>, stackArg56, stackArg64, stackArg72, out r3_44, out r4_49, out r5_50, out r10_45, out r11_43, out r12_42, out lr_51)
	r3Out = r3_44
	r4Out = r4_49
	r5Out = r5_50
	r10Out = r10_45
	r11Out = r11_43
	r12Out = r12_42
	lrOut = lr_51
	return r2_47
fn000095B2_exit:


word32 fn000095D6(word32 r0, word32 r1, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 pc, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg48, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095B2
// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0048:[0..31]
// LiveOut: lr r10 r11 r12 r2 r3 r4 r5
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000095D6_entry:
l000095D6:
	r11_r10_400 = __avr32_f64_mul(r8, r9, r10, r11)
	branch __avr32_f64_cmp_ge(SLICE(r11_r10_400, word32, 0), SLICE(r11_r10_400, word32, 32), r0, r1, out r12_401, out lr_402) l000095F2
l000095EA:
	branch dwArg34 <= 7<32> l000095B2
l000095EE_thunk_fn000095B2:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg40 = <invalid>
	r2_47 = fn000095B2(r4, r5_44, stackArg40, out r3_46, out r4_38, out r5_44, out r10_37, out r11_40, out r12_45, out lr_51)
	r3Out = r3_46
	r4Out = r4_38
	r5Out = r5_44
	r10Out = r10_37
	r11Out = r11_40
	r12Out = r12_45
	lrOut = lr_51
	return r2_47
l000095F2:
	r11_r10_403 = __avr32_f64_div(r2, r10, r5, r0, r1, out r8_404, out r9_405)
	r10_65 = SLICE(r11_r10_403, word32, 0) (alias)
	r11_r10_391 = fn00009248(r10_65, SLICE(r11_r10_403, word32, 32), dwArg24, pc, out r8_84, out r9_85, out lr_406)
	call Mem100[r6 + 100<i32>:word32] (retsize: 0;)
		uses: Mem:Mem100,pc:pc,r0:r0,r1:r1,r10:SLICE(r11_r10_391, word32, 0),r11:Mem100[r6 + 724<i32>:word32],r12:r7,r2:r10_65,r4:dwArg40 + 1<32>,r5:r5,r6:r6,r7:r7,r8:r8_84,r9:r9_85,Stack +0000:r11_r10_391,Stack +001C:dwArg14,Stack +0028:dwArg20,Stack +002C:dwArg24,Stack +003C:dwArg34,Stack +0040:dwArg38,Stack +0048:dwArg40,Stack +0050:dwArg48
		defs: pc:pc_118,r0:r0_110,r1:r1_111,r10:r10_105,r11:r11_108,r2:r2_115,r5:r5_112,r6:r6_117,r7:r7_116,r8:r8_107,r9:r9_109
	call Mem100[r6_117 + 16<i32>:word32] (retsize: 0;)
		uses: Mem:Mem100,pc:pc_118,r0:r0_110,r1:r1_111,r10:r10_105,r11:r11_108,r12:r7_116,r2:r2_115,r5:r5_112,r6:r6_117,r7:r7_116,r8:r8_107,r9:r9_109
		defs: lr:lr_137,pc:pc_136,r0:r0_128,r1:r1_129,r12:r12_131,r2:r2_133,r3:r3_132,r4:r4_124,r6:r6_135,r7:r7_134,r8:r8_125
	branch dwArg20 == 0<32> l00009628
l00009624_1:
	r8_125 = 1<32>
l00009628:
	branch dwArg20 != 0<32> l0000962C
l00009628_1:
	r8_125 = 2<32>
l0000962C:
	branch r8_125 + r4_124 <u r12_131 l0000964C
l00009634:
	branch Test(NE,SLICE(dwArg14, bool, 3)) l0000963A_thunk_fn0000967E
l0000963A_thunk_fn0000967E:
	fn0000967E(r12_131, r6_135, r7_134, dwArg14, dwArg38, dwArg48, out r1_412, out r2_173, out r3_174, out r4_175, out r5_176, out r6_413, out r7_414, out r10_170, out r11_171, out r12_172)
	r3Out = r3_174
	r4Out = r4_175
	r5Out = r5_176
	r10Out = r10_170
	r11Out = r11_171
	r12Out = r12_172
	lrOut = lr_137
	return r2_173
l0000963C:
	branch Mem100[r12_131 + r7_134 + -1<i32>:byte] != 0x30<8> l0000964A_thunk_fn0000967E
l0000964A_thunk_fn0000967E:
	fn0000967E(r12_131, r6_135, r7_134, dwArg14, dwArg38, dwArg48, out r1_415, out r2_195, out r3_196, out r4_197, out r5_198, out r6_416, out r7_417, out r10_192, out r11_193, out r12_194)
	r3Out = r3_196
	r4Out = r4_197
	r5Out = r5_198
	r10Out = r10_192
	r11Out = r11_193
	r12Out = r12_194
	lrOut = lr_137
	return r2_195
l0000964C:
	r9_r8_211 = Mem100[pc_136 + 124<i32>:word64]
	r11_r10_407 = __avr32_f64_mul(SLICE(r9_r8_211, word32, 0), SLICE(r9_r8_211, word32, 32), r2_133, r3_132)
	r11_r10_408 = fn00009248(SLICE(r11_r10_407, word32, 0), SLICE(r11_r10_407, word32, 32), dwArg24, pc_136, out r8_409, out r9_410, out lr_411)
	r9_r8_245 = Mem100[pc_136 + 104<i32>:word64]
	r11_r10_392 = __avr32_f64_div(r2_133, SLICE(r9_r8_245, word32, 0), SLICE(r9_r8_245, word32, 32), SLICE(r11_r10_408, word32, 0), SLICE(r11_r10_408, word32, 32), out r8_251, out r9_252)
	call Mem262[r6_135 + 100<i32>:word32] (retsize: 0;)
		uses: Mem:Mem262,pc:pc_136,r0:r0_128,r1:r1_129,r10:SLICE(r11_r10_392, word32, 0),r11:Mem262[r6_135 + 364<i32>:word32],r12:r7_134,r2:r2_133,r5:r12_131,r6:r6_135,r7:r7_134,r8:r8_251,r9:r9_252,Stack +0000:r11_r10_392,Stack +001C:dwArg14,Stack +0028:dwArg20,Stack +002C:dwArg24,Stack +003C:dwArg34,Stack +0040:dwArg38,Stack +0048:dwArg40,Stack +0050:dwArg48
		defs: pc:pc_286,r0:r0_278,r1:r1_279,r10:r10_273,r11:r11_276,r2:r2_283,r5:r5_280,r6:r6_285,r7:r7_284,r8:r8_275,r9:r9_277
	call Mem262[r6_285 + 16<i32>:word32] (retsize: 0;)
		uses: Mem:Mem262,pc:pc_286,r0:r0_278,r1:r1_279,r10:r10_273,r11:r11_276,r12:r7_284,r2:r2_283,r5:r5_280,r6:r6_285,r7:r7_284,r8:r8_275,r9:r9_277
		defs: lr:lr_305,r12:r12_299,r6:r6_303,r7:r7_302,sp:sp_290
l00009676_thunk_fn0000967A:
	fn0000967A(r6_303, r7_302, r12_299, Mem262[sp_290 + 28<i32>:word32], Mem262[sp_290 + 64<i32>:word32], Mem262[sp_290 + 80<i32>:word32], out r1_418, out r2_312, out r3_313, out r4_314, out r5_315, out r6_419, out r7_420, out r10_309, out r11_310, out r12_311)
	r3Out = r3_313
	r4Out = r4_314
	r5Out = r5_315
	r10Out = r10_309
	r11Out = r11_310
	r12Out = r12_311
	lrOut = lr_305
	return r2_312
fn000095D6_exit:


word32 fn0000967A(word32 r6, word32 r7, word32 r12, word32 dwArg1C, word32 dwArg40, word32 dwArg50, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  r12:[0..31] r6:[0..31] r7:[0..31] Stack +001C:[0..31] Stack +0040:[0..31] Stack +0050:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000967A_entry:
l0000967A:
l0000967C_thunk_fn0000967E:
	r0_10 = fn0000967E(r12, r6, r7, dwArg1C, dwArg40, dwArg50, out r1_11, out r2_15, out r3_16, out r4_17, out r5_18, out r6_19, out r7_20, out r10_12, out r11_13, out r12_14)
	r1Out = r1_11
	r2Out = r2_15
	r3Out = r3_16
	r4Out = r4_17
	r5Out = r5_18
	r6Out = r6_19
	r7Out = r7_20
	r10Out = r10_12
	r11Out = r11_13
	r12Out = r12_14
	return r0_10
fn0000967A_exit:


word32 fn0000967E(word32 r5, word32 r6, word32 r7, word32 dwArg14, word32 dwArg38, word32 dwArg48, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095D6
//      fn0000967A
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000967E_entry:
l0000967E:
	r1_8 = dwArg38 + r5
	call Mem0[r6 + 576<i32>:word32] (retsize: 0;)
		uses: Mem:Mem0,r1:r1_8,r10:r5,r11:r7,r12:r1_8,r5:r5,r6:r6,r7:r7,Stack +0014:dwArg14,Stack +0038:dwArg38,Stack +0048:dwArg48
		defs: r1:r1_14,r4:r4_22,r5:r5_17,r6:r6_20
	r12_25 = r1_14 + r5_17 + r4_22
l00009694_thunk_fn0000988A:
	r0_27 = fn0000988A(r1_14, r6_20, r12_25, dwArg14, dwArg48, out r1_28, out r2_31, out r3_32, out r4_33, out r5_34, out r6_35, out r7_36, out r10_29, out r11_38, out r12_30)
	r1Out = r1_28
	r2Out = r2_31
	r3Out = r3_32
	r4Out = r4_33
	r5Out = r5_34
	r6Out = r6_35
	r7Out = r7_36
	r10Out = r10_29
	r11Out = r11_38
	r12Out = r12_30
	return r0_27
fn0000967E_exit:


word32 fn0000988A(word32 r1, word32 r6, word32 r12, word32 dwArg14, word32 dwArg48, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn0000967E
// MayUse:  r1:[0..31] r12:[0..31] r6:[0..31] Stack +0014:[0..31] Stack +0048:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000988A_entry:
l0000988A:
	branch Test(NE,SLICE(dwArg14, bool, 2)) l000098F4
l00009892:
	r5_10 = r12 + r1
	call Mem0[r6 + 16<i32>:word32] (retsize: 0;)
		uses: Mem:Mem0,r1:r1,r11:r1_18,r12:dwArg48,r3:r1 + r5_10,r5:r5_10,r6:r6,r9:r9_26,Stack +0014:dwArg14,Stack +0048:dwArg48
		defs: r1:r1_18,r6:r6_21,r9:r9_26,sp:sp_15
	r12_257 = sp_15 + 0x4C<32>
l000098AC:
	call Mem37[r6_113 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem37,r1:r1_39,r11:r11_56,r12:r12_38,r6:r6_36,r9:r9_57
		defs: r3:r3_46,r4:r4_48,r5:r5_45,r6:r6_47,r7:r7_50,sp:sp_41
	r11_56 = Mem37[sp_41 + 68<i32>:word32]
	r9_57 = CONVERT(Mem37[r11_56:byte], byte, word32)
	branch r9_57 == 0<32> l000098CA
l000098B8:
	branch SLICE(r9_57, byte, 0) == 0xFF<8> l000098C4
l000098C0_1:
	r4_48 = r9_57
l000098C4:
	branch SLICE(r9_57, byte, 0) != 0xFF<8> l000098C8
l000098C4_1:
	r4_48 = r5_45
l000098C8:
	Mem72[sp_41 + 68<i32>:word32] = r11_56 + 1<32>
l000098CA:
	branch r4_48 <=u r5_45 l000098D0
l000098CC_1:
	r4_48 = r5_45
l000098D0:
	r5_88 = r5_45 + r4_48
	r1_86 = r3_46 + r4_48
	call Mem106[r6_47 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem106,r1:r1_86,r10:r4_85,r11:sp_41 + 0x4C<32> + r5_88,r12:r1_86,r3:r1_86 + r7_50,r5:r5_88,r6:r6_47,r9:r9_118
		defs: r1:r1_110,r11:r11_117,r3:r3_112,r5:r5_111,r6:r6_113,r9:r9_118
	branch r5_111 == 0<32> l000098F4
l000098F4:
	branch Test(NE,SLICE(dwLoc88, bool, 7)) l000099A6
l000098FC:
	branch dwLoc68 >= 0<32> l00009936
l00009902:
	r2_134 = 1<32>
	r3_135 = 0<32>
	dwLoc68 = 0<32>
l0000992A:
	branch r3_135 - SLICE(qwLoc98, word32, 32) <u SLICE(cond(r2_134 - SLICE(qwLoc98, word32, 0)), bool, 0) l0000990C
l0000990C:
	dwLoc68 = dwLoc68 + 1<32>
	branch dwLoc68 == 7<32> l00009936
l00009916:
	r3_r2_157 = r2_134 *u dwLoc74
	r2_134 = SLICE(r3_r2_157, word32, 0) (alias)
	r3_135 = r3_135 * dwLoc74 + r2_134 * 0<32> + SLICE(r3_r2_157, word32, 32)
l00009936:
	branch (dwLoc68 | dwLoc88 & 0x100<32>) == 0<32> l00009952
l00009942:
	branch Test(NE,SLICE(dwLoc88, bool, 6)) l00009952
l0000994A:
	Mem175[dwLoc64:byte] = 0x20<8>
	dwLoc64 = dwLoc64 + 1<i32>
l00009952:
	r11 = dwLoc68
	branch dwLoc68 == 0<32> l0000997A
l00009958:
	branch dwLoc7C != 0<32> l00009966
l0000995E:
	branch dwLoc68 != 1<32> l00009966
l00009966:
	r8_194 = CONVERT(Mem179[dwLoc68 + 0x000099B4<p32> + 8<i32>:byte], byte, word32)
l00009962:
	r8_194 = 0x6B<32>
l00009974:
	Mem200[dwLoc64:byte] = SLICE(r8_194, byte, 0)
	r11 = dwLoc64 + 1<i32>
	dwLoc64 = dwLoc64 + 1<i32>
l0000997A:
	branch (dwLoc88 & 0x100<32>) == 0<32> l000099A6
l0000997E:
	branch dwLoc7C == 0<32> l00009992
l00009984:
	branch dwLoc68 == 0<32> l00009992
l0000998A:
	Mem219[dwLoc64:byte] = 0x69<8>
	dwLoc64 = dwLoc64 + 1<i32>
l00009992:
	Mem226[dwLoc64:byte] = 0x42<8>
	r11 = dwLoc64 + 1<i32>
	dwLoc64 = dwLoc64 + 1<i32>
l000099A6:
	Mem243[dwLoc64:byte] = 0<8>
	r1Out = dwLoc08
	r2Out = dwLoc0C
	r3Out = dwLoc10
	r4Out = dwLoc14
	r5Out = dwLoc18
	r6Out = dwLoc1C
	r7Out = dwLoc20
	r10Out = dwLoc64
	r11Out = r11
	r12Out = r1
	return dwLoc04
fn0000988A_exit:
l000098EC:
	r12_257 = r3_112


word32 fn00009A5C(word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004968
// MayUse:  lr:[0..31] r12:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8 r9
// Preserved: lr pc r10 r11 r4 r5 r6 r7 sp
fn00009A5C_entry:
l00009A5C:
	r6_19 = 0x00009A60<p32> - Mem17[0x00009AC2<p32>:word32]
	r12_24 = Mem17[Mem17[r6_19 + -20<i32>:word32]:word32]
l00009A76:
	branch r12_24 != 0<32> l00009A6A
l00009A6A:
	branch Mem17[r12_24:word32] != r12 l00009A74
l00009A74:
	r12_24 = Mem17[r12_24 + 4<i32>:word32]
l00009A70:
	r7_109 = r12_24
l00009A7A:
l00009AA0:
	call Mem17[r6_19 + 564<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12,r4:r12,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_46,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12_48,r4:r4_42,r6:r6_44,r7:r7_45,VNZC:VNZC_51
	branch SLICE(VNZC_51, bool, 1) l00009A7C
l00009A7C:
	r5_53 = Mem17[r12_48:word32]
l00009AA8:
	r5_53 = Mem17[r6_44 + 360<i32>:word32]
l00009A7E:
	call Mem17[r6_44 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_46,Mem:Mem17,pc:pc_132,r10:r10_133,r11:r11_101,r12:r5_55,r4:r4_42,r5:r5_55,r6:r6_44,r7:r7_45
		defs: lr:lr_68,pc:pc_132,r10:r10_133,r12:r12_70,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
	fn0000B95C(r4_64, r5_65, r6_66, r7_67, r12_70 + 9<32>, lr_68, out r9_174, out r11_175, out r12_80, out lr_76)
	Mem89[r12_80:word32] = r4_64
	call Mem89[r6_66 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_76,Mem:Mem89,pc:pc_132,r10:r10_133,r11:r5_65,r12:r12_80 + 8<32>,r4:r4_64,r5:r5_65,r6:r6_66,r7:r12_80
		defs: r11:r11_101,r6:r6_95,r7:r7_96
	r9_105 = Mem89[r6_95 + -20<i32>:word32]
	Mem107[r7_109 + 4<i32>:word32] = Mem89[r9_105:word32]
	Mem108[r9_105:word32] = r7_109
l00009AAE:
	r12_112 = r7_109 + 8<32>
	branch Mem110[r7_109 + 8<i32>:byte] != 0<8> l00009AC0
l00009ABC_1:
	r12_112 = 0<32>
l00009AC0:
	return r12_112
fn00009A5C_exit:


word32 fn00009B5C(word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000330C
//      fn00003904
// MayUse:  lr:[0..31] r12:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8 r9
// Preserved: lr pc r10 r11 r4 r5 r6 r7 sp
fn00009B5C_entry:
l00009B5C:
	r6_19 = 0x00009B60<p32> - Mem17[0x00009BC2<p32>:word32]
	r12_24 = Mem17[Mem17[r6_19 + -20<i32>:word32] + 8<i32>:word32]
l00009B76:
	branch r12_24 != 0<32> l00009B6A
l00009B6A:
	branch Mem17[r12_24:word32] != r12 l00009B74
l00009B74:
	r12_24 = Mem17[r12_24 + 4<i32>:word32]
l00009B70:
	r7_109 = r12_24
l00009B7A:
l00009BA0:
	call Mem17[r6_19 + 464<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12,r4:r12,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_46,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12_48,r4:r4_42,r6:r6_44,r7:r7_45,VNZC:VNZC_51
	branch SLICE(VNZC_51, bool, 1) l00009B7C
l00009B7C:
	r5_53 = Mem17[r12_48:word32]
l00009BA8:
	r5_53 = Mem17[r6_44 + 360<i32>:word32]
l00009B7E:
	call Mem17[r6_44 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_46,Mem:Mem17,pc:pc_132,r10:r10_133,r11:r11_101,r12:r5_55,r4:r4_42,r5:r5_55,r6:r6_44,r7:r7_45
		defs: lr:lr_68,pc:pc_132,r10:r10_133,r12:r12_70,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
	fn0000B95C(r4_64, r5_65, r6_66, r7_67, r12_70 + 9<32>, lr_68, out r9_174, out r11_175, out r12_80, out lr_76)
	Mem89[r12_80:word32] = r4_64
	call Mem89[r6_66 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_76,Mem:Mem89,pc:pc_132,r10:r10_133,r11:r5_65,r12:r12_80 + 8<32>,r4:r4_64,r5:r5_65,r6:r6_66,r7:r12_80
		defs: r11:r11_101,r6:r6_95,r7:r7_96
	r9_105 = Mem89[r6_95 + -20<i32>:word32]
	Mem107[r7_109 + 4<i32>:word32] = Mem89[r9_105 + 8<i32>:word32]
	Mem108[r9_105 + 8<i32>:word32] = r7_109
l00009BAE:
	r12_112 = r7_109 + 8<32>
	branch Mem110[r7_109 + 8<i32>:byte] != 0<8> l00009BC0
l00009BBC_1:
	r12_112 = 0<32>
l00009BC0:
	return r12_112
fn00009B5C_exit:


word32 fn00009BC8(word32 r10, word32 r11, word32 r12, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009BC8_entry:
l00009BC8:
	Mem23[r12 + 0x14<32>:byte] = 0<8>
	r7_115 = r12 + 0x14<32>
	r4_108 = r10
	r5_109 = r11
	branch r11 >= SLICE(cond(r10 - 0<32>), bool, 0) l00009C0E
l00009C0E:
	r7_115 = r7_115 - 1<i32>
	Mem56[r7_115:byte] = SLICE(__moddi3(0xA<32>, 0<32>, r4_108, r5_109), byte, 0) + 0x30<8>
	r10_57 = __avr32_sdiv64(0xA<32>, 0<32>, r4_108, r5_109, out r11_58, out lr_103)
	r4_108 = r10_57
	r5_109 = r11_58
	branch r11_58 != SLICE(cond(r10_57 - 0<32>), bool, 0) l00009C0E
l00009BE0:
	r7_115 = r7_115 - 1<i32>
	Mem94[r7_115:byte] = 0x30<8> - SLICE(__moddi3(0xA<32>, 0<32>, r4_108, r5_109), byte, 0)
	r10_98 = __avr32_sdiv64(0xA<32>, 0<32>, r4_108, r5_109, out r11_99, out lr_103)
	r4_108 = r10_98
	r5_109 = r11_99
	branch r11_99 != SLICE(cond(r10_98 - 0<32>), bool, 0) l00009BE0
l00009C08:
	Mem116[r7_115 - 1<i32>:byte] = 0x2D<8>
	r7_115 = r7_115 - 1<i32>
l00009C36:
	lrOut = lr_103
	return r7_115
fn00009BC8_exit:


word32 fn00009C40(word32 r0, word32 r1, word32 r2, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r10Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C40
//      fn00009D6C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r2 r3 r4 r5 r6
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009C40_entry:
l00009C40:
	r6_32 = 0x00009C46<p32> - Mem29[0x00009D64<p32>:word32]
	branch r11 >u 2<32> l00009C70
l00009C70:
	r0_184 = fn00009C40(r11 >>u 1<i32>, r1, r2, r9, r10, r11 + (r11 >>u 1<i32>), r12 + ((r11 >>u 1<i32>) << 2<8>), lr, out r1_53, out r2_54, out r3_187, out r4_451, out r5_452, out r6_190, out r10, out lr)
	sp_183 = fp - 0x3C<32>
	branch r0_184 != 1<32> l00009C8E
l00009C8E:
	r0_129 = fn00009C40(fn00009C40(r0_184, r1_53, r2_54, r9, r10, r0_184 + (r11 >>u 2<i32>), r3_187 + __align(r11, 4<i32>), lr, out r1_79, out r2_80, out r3_81, out r4_82, out r5_453, out r6_454, out r10_455, out lr_86), r1_79, r2_80, r9, r10, r4_82, r3_81, lr_86, out r1_456, out r2_457, out r3_101, out r4_102, out r5_103, out r6_104, out r10_108, out lr_106)
	sp_120 = fp - 0x3C<32>
	r1_113 = Mem50[r5_103:word32]
	r2_115 = Mem50[r3_101:word32]
	r5_116 = r10 + 4<32>
	r7_118 = r4_102
	r8_119 = 0<32>
l00009CBC:
	r9_122 = Mem121[sp_120 + 4<i32>:word32]
	Mem128[sp_120:word32] = r8_119
	call r9_122 (retsize: 0;)
		uses: lr:lr_135,Mem:Mem128,r0:r0_129,r1:r1_123,r10:r10_136,r11:r1_123,r12:r2_125,r2:r2_125,r3:r3_130,r4:r4_131,r5:r5_132,r6:r6_133,r7:r7_134,r8:r8_153,r9:r9_122
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r10:r10_148,r2:r2_140,r3:r3_141,r4:r4_142,r5:r5_143,r6:r6_144,r7:r7_145,r9:r9_149,sp:sp_137,VNZC:VNZC_152
	r8_153 = Mem128[sp_120:word32]
	branch SLICE(VNZC_152, bool, 3) & 0xE<8> l00009CDC
l00009CDC:
	Mem155[r5_143 + -4<i32>:word32] = r1_113
	r7_118 = r7_118 + 1<32>
	branch r7_118 + 1<32> != r0_129 l00009CEA
l00009CEA:
	r1_113 = Mem155[r3_101 + (r7_118 + 1<32>) * 4<32>:word32]
	r8_119 = r8_153
l00009CE6:
	r7_118 = r8_153
l00009CCC:
	Mem161[r5_143 + -4<i32>:word32] = r2_115
	r8_119 = r8_153 + 1<32>
	branch r8_153 + 1<32> == r4_102 l00009CF0
l00009CF0:
	r4_102 = r0_129
l00009CF2:
	call Mem176[r6_104 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_146,Mem:Mem176,r0:r0_138,r1:r1_139,r10:r4_166 + r7_167 << 2<i32>,r11:r3_141 + (r7_167 << 2<8>),r12:r5_143,r2:r2_140,r3:r3_141,r4:r4_166,r5:r5_143,r6:r6_144,r7:r7_167,r8:r8_197,r9:r9_149
		defs: lr:lr_192,r0:r0_184,r10:r10_194,r3:r3_187,r6:r6_190,r8:r8_197,sp:sp_183
l00009CD6:
	r2_115 = Mem161[r3_101 + (r8_153 + 1<32>) * 4<32>:word32]
l00009CBA:
	r5_116 = r5_143 + 4<32>
l00009C86:
	Mem205[r10:word32] = Mem50[r3_187:word32]
l00009D02:
	r9_209 = Mem207[sp_183 + 8<i32>:word32]
	r2_210 = Mem207[Mem207[sp_183 + 16<i32>:word32]:word32]
	r4_211 = Mem207[r9_209:word32]
	Mem218[sp_183 + 20<i32>:word32] = 1<32>
	r5_214 = r3_187
	r7_216 = r0_184
	r1_217 = 0<32>
l00009D1E:
	call Mem220[sp_183 + 4<i32>:word32] (retsize: 0;)
		uses: lr:lr_232,Mem:Mem220,r0:r0_226,r1:r1_227,r10:r10_233,r11:r2_222,r12:r4_224,r2:r2_222,r3:r3_228,r4:r4_224,r5:r5_229,r6:r6_230,r7:r7_231,r8:r8_249,r9:r9_234
		defs: lr:lr_244,r0:r0_236,r1:r1_237,r10:r10_246,r2:r2_238,r3:r3_239,r4:r4_240,r5:r5_241,r6:r6_242,r7:r7_243,r8:r8_249,sp:sp_235,VNZC:VNZC_250
	branch SLICE(VNZC_250, bool, 3) & 0xE<8> l00009D3A
l00009D3A:
	Mem252[r5_241:word32] = r2_210
	r7_216 = r7_216 + 1<32>
	branch r7_216 + 1<32> != Mem252[sp_183 + 12<i32>:word32] l00009D5C
l00009D5C:
	r2_210 = Mem252[r3_187 + (r7_216 + 1<32>) * 4<32>:word32]
l00009D44:
	r9_258 = Mem252[sp_183 + 8<i32>:word32]
	r8_259 = Mem252[sp_183 + 20<i32>:word32]
	call Mem252[r6_190 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_244,Mem:Mem252,r0:r0_236,r1:r1_237,r10:r0_236 + r1_237 << 2<i32>,r11:r9_258 + (r1_237 << 2<8>),r12:r3_239 + (r8_259 << 2<8>),r2:r2_238,r3:r3_239,r4:r4_240,r5:r5_241,r6:r6_242,r7:r7_243 + 1<32>,r8:r8_259,r9:r9_258
		defs: lr:lr_275,r10:r10_277
l00009D2A:
	Mem282[r5_241:word32] = r4_211
	r1_217 = r1_217 + 1<32>
	branch r1_217 + 1<32> == r0_184 l00009D62
l00009D32:
	r4_211 = Mem282[Mem282[sp_183 + 8<i32>:word32] + (r1_217 + 1<32>) * 4<32>:word32]
l00009D16:
	r9_290 = Mem289[sp_183 + 20<i32>:word32]
	Mem295[sp_183 + 20<i32>:word32] = r9_290 + 1<32>
	r5_214 = r5_241 + 4<32>
	r9_209 = r9_290 + 1<32>
l00009C56:
	branch r11 != 2<32> l00009D62
l00009C5A:
	v20_298 = Mem38[r12:word32]
	r7_301 = Mem38[r12 + 4<i32>:word32]
	call r9 (retsize: 0;)
		uses: lr:lr,Mem:Mem38,r0:r0,r1:r1,r10:r10,r11:r7_301,r12:v20_298,r2:r2,r3:r12,r4:v20_298,r5:r12 + 4<i32>,r6:r6_32,r7:r7_301,r8:r8_318,r9:r9
		defs: lr:lr_313,r10:r10_315,r3:r3_308,r4:r4_309,r5:r5_310,r7:r7_312,r8:r8_318,VNZC:VNZC_319
	branch SLICE(VNZC_319, bool, 3) & 0xE<8> l00009D62
l00009C6A:
	Mem321[r3_308:word32] = r7_312
	Mem322[r5_310:word32] = r4_309
l00009D62:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r10Out = r10
	lrOut = lr
	return <invalid>
fn00009C40_exit:


word32 fn00009D6C(word32 r0, word32 r1, word32 r2, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000393C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009D6C_entry:
l00009D6C:
	fn00009C40(r0, r1, r2, r10, r12 + (r11 << 2<8>), r11, r12, lr, out r1_50, out r2_51, out r3_52, out r4_53, out r5_54, out r6_55, out r10_30, out lr_29)
	lrOut = lr_29
	return r10_30
fn00009D6C_exit:


word32 fn00009D80(word32 r0, word32 r1, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006D9C
//      fn00009D94
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009D80_entry:
l00009D80:
	r12_31 = fn0000A7C8(r0, r1, r4, r5, r7, r11, 6<32>, r12, lr, out lr_27)
	lrOut = lr_27
	return r12_31
fn00009D80_exit:


void fn00009D94(word32 r0, word32 r1, word32 r4, word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009D94_entry:
l00009D94:
	fn00009D80(r0, r1, r4, r5, r7, r12, 0<32>, lr, out lr_47)
	return
fn00009D94_exit:


void fn00009DA8(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31]
// LiveOut:
// Trashed: VNZC r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00009DA8_entry:
l00009DA8:
	branch r12 != 0<32> l00009DB6
l00009DB2_1:
l00009DB6:
	return
fn00009DA8_exit:


void fn00009DC0(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00009DC0_entry:
l00009DC0:
	r8_20 = Mem17[0x00009DC4<p32> - Mem17[0x00009DD6<p32>:word32] + -36<i32>:word32]
	branch r12 != 0<32> l00009DCE
l00009DCA_1:
	r12 = r8_20
l00009DCE:
	Mem28[r12:word32] = r11
	return
fn00009DC0_exit:


void fn00009DD8(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A708
// MayUse:  r10:[0..0] r11:[0..12] r12:[0..31]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009DD8_entry:
l00009DD8:
	r8_20 = Mem17[0x00009DDC<p32> - Mem17[0x00009E12<p32>:word32] + -36<i32>:word32]
	r10_23 = CONVERT(SLICE(r10, bool, 0), bool, word32)
	branch r12 != 0<32> l00009DEA
l00009DE6_1:
	r12 = r8_20
l00009DEA:
	r8_33 = r12 + (CONVERT(SLICE(r11, byte, 5), byte, word32) << 2<8>)
	r9_36 = Mem17[r8_33 + 8<i32>:word32]
	r11_38 = CONVERT(SLICE(r11, word5, 0), word5, word32)
	Mem48[r8_33 + 8<i32>:word32] = (CONVERT(SLICE(r9_36 >>u r11_38, bool, 0), bool, word32) ^ r10_23) << r11_38 ^ r9_36
	return
fn00009DD8_exit:


word32 fn00009E30(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A788
//      fn0000A7C8
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009E30_entry:
l00009E30:
	r6_32 = 0x00009E36<p32> - Mem29[0x00009E70<p32>:word32]
	call Mem42[r6_32 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem42,r0:r0,r1:r1,r10:0x20<32>,r11:0<32>,r12:fp - 0x44<32>,r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_32,r7:r7,r8:0<32>,Stack +0000:r11,Stack +0004:0<32>,Stack +0008:dwLoc44,Stack +000C:dwLoc40,Stack +0010:dwLoc3C,Stack +0014:dwLoc38,Stack +0018:dwLoc34,Stack +001C:dwLoc30,Stack +0020:qwLoc2C,Stack +0028:lr,Stack +002C:r7,Stack +0030:r6,Stack +0034:r5,Stack +0038:r4,Stack +003C:r3,Stack +0040:r2,Stack +0044:r1,Stack +0048:r0
		defs: lr:lr_52,r5:r5_49
	Mem62[r5_49 + -4<i32>:word32] = dwLoc40
	Mem63[r5_49 + -8<i32>:word32] = dwLoc44
	Mem64[r5_49 + -12<i32>:word32] = 0<32>
	Mem65[r5_49 + -16<i32>:word32] = r11
	Mem73[r5_49 + 0xC<32>:word32] = dwLoc30
	Mem74[r5_49 + 8<32>:word32] = dwLoc34
	Mem75[r5_49 + 4<32>:word32] = dwLoc38
	Mem76[r5_49:word32] = dwLoc3C
	Mem80[r5_49 + 32<i32>:word64] = qwLoc2C
	return lr_52
fn00009E30_exit:


word32 fn00009EDC(word32 r4, word32 r5, word32 r7, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A614
//      fn0000A850
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009EDC_entry:
l00009EDC:
	fn0000B95C(r4, r5, 0x00009EE0<p32> - Mem17[0x00009EE6<p32>:word32], r7, r12, lr, out r9_44, out r11_45, out r12_26, out lr_22)
	lrOut = lr_22
	return r12_26
fn00009EDC_exit:


word32 fn00009EEC(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, word32 dwArg00, word32 dwArg04, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009EEC
//      fn0000A614
//      fn0000A850
//      fn0000A8DC
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: lr r10 r11 r12 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009EEC_entry:
l00009EEC:
	r6_32 = 0x00009EF2<p32> - Mem29[0x0000A010<p32>:word32]
	call Mem48[r6_32 + 172<i32>:word32] (retsize: 0;)
		uses: lr:dwArg04,Mem:Mem48,r0:r11,r1:r1,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:dwArg00,r8:r8,r9:r9,Stack +0000:dwArg04,Stack +0004:dwArg00,Stack +0008:r8,Stack +000C:r9,Stack +0010:r10,Stack +0014:r12,Stack +003C:lr,Stack +0040:r7,Stack +0044:r6,Stack +0048:r5,Stack +004C:r4,Stack +0050:r3,Stack +0054:r2,Stack +0058:r1,Stack +005C:r0,Stack +0060:dwArg00,Stack +0064:dwArg04
		defs: r0:r0_50,r1:r1_51,r10:r10_62,r11:r11_61,r12:r12_60,r3:r3_53,r4:r4_54,r5:r5_55,r6:r6_56,r7:r7_57,r8:r8_59,r9:r9_63,sp:sp_49
	lr_67 = Mem48[sp_1072 + 8<i32>:word32]
	Mem68[sp_1072 + 24<i32>:word32] = r12_60
	r2_1056 = CONVERT(SLICE(r7_57, bool, 1), bool, word32)
	branch lr_67 >u 7<32> l0000A028
l0000A028:
	call Mem68[r6_1317 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_67,Mem:Mem68,r0:r0_50,r1:r1_51,r10:r10_62,r11:r11_61,r12:r12_60,r2:r2_66,r3:r3_53,r4:r4_54,r5:r5_55,r6:r6_56,r7:r7_57,r8:r8_59,r9:r9_63
		defs: r0:r0_73,r1:r1_74,r11:r11_84,r4:r4_77,r5:r5_78,r6:r6_79,sp:sp_72
l00009F1C:
	switch (lr_67) { l00009F28 l00009F2C l00009F30 l00009F34 l00009F38 l00009F3C l00009F40 l00009F44 }
l00009F44:
l00009F40:
l00009FA2:
	r8_92 = Mem68[r6_1317 + 176<i32>:word32]
	r9_93 = Mem68[r6_1317 + 180<i32>:word32]
	r7_95 = Mem68[sp_1072 + 8<i32>:word32]
	branch r7_95 != 7<32> l00009FB2
l00009FAE_1:
	r11_101 = r8_92
l00009FB2:
	branch r7_95 == 7<32> l00009FB6
l00009FB2_1:
	r11_101 = r9_93
l00009FB6:
	r9_106 = Mem68[r6_1317 + 720<i32>:word32]
	branch r7_95 != 7<32> l00009FC0
l00009FBC_1:
	r9_106 = r8_92
l00009FC0:
	branch r2_1056 == 0<32> l00009FC8
l00009FC8:
	r3_1004 = r2_1056
l00009FD8:
	r8_124 = CONVERT(Mem123[r3_1004 + r9_106:byte], byte, word32)
	branch r8_124 != 0<32> l00009FCC
l00009FCC:
	branch r3_1004 >=u r0_1135 l00009FD6
l00009FD0:
	Mem132[Mem123[sp_1072 + 20<i32>:word32]:byte] = SLICE(r8_124, byte, 0)
l00009FD6:
	r3_1004 = r3_1004 + 1<32>
l00009FC4:
	r3_1004 = 0<32>
l00009FE0:
	Mem142[sp_1072 + 40<i32>:word32] = 1<32>
	Mem150[sp_1072 + 32<i32>:word32] = r11_101
	Mem151[sp_1072 + 36<i32>:word32] = 1<32>
l00009F3C:
l00009F96:
	Mem154[sp_1072 + 32<i32>:word32] = 0<32>
	Mem155[sp_1072 + 36<i32>:word32] = 0<32>
	Mem156[sp_1072 + 40<i32>:word32] = 1<32>
l00009F38:
l0000A5F6:
	r11_101 = Mem68[r6_1317 + 176<i32>:word32]
	Mem162[sp_1072 + 40<i32>:word32] = 1<32>
	Mem163[sp_1072 + 32<i32>:word32] = r11_101
	Mem164[sp_1072 + 36<i32>:word32] = 1<32>
	Mem165[sp_1072 + 8<i32>:word32] = 3<32>
	r3_1004 = 0<32>
	r2_1056 = 1<32>
l00009F34:
l00009F5E:
	branch r2_1056 == 0<32> l00009F72
l00009F72:
	branch r0_1135 != 0<32> l00009F82
l00009F82:
	r11_101 = Mem68[r6_1317 + 176<i32>:word32]
	r10_172 = Mem68[sp_1072 + 20<i32>:word32]
	Mem173[sp_1072 + 32<i32>:word32] = r11_101
	Mem174[sp_1072 + 36<i32>:word32] = 1<32>
	Mem175[sp_1072 + 40<i32>:word32] = 1<32>
	Mem177[r10_172:byte] = 0x22<8>
	r3_1004 = 1<32>
l00009F76:
	Mem180[sp_1072 + 32<i32>:word32] = Mem68[r6_1317 + 176<i32>:word32]
	Mem181[sp_1072 + 36<i32>:word32] = 1<32>
	r3_1004 = 1<32>
l00009F62:
	r7_182 = Mem68[r6_1317 + 176<i32>:word32]
	Mem185[sp_1072 + 40<i32>:word32] = 1<32>
	Mem186[sp_1072 + 32<i32>:word32] = r7_182
	Mem187[sp_1072 + 36<i32>:word32] = 1<32>
	r3_1004 = 0<32>
l00009F30:
l00009FEA:
	branch r2_1056 == 0<32> l00009FFE
l00009FFE:
	branch r0_1135 != 0<32> l0000A014
l0000A014:
	r11_101 = Mem68[sp_1072 + 20<i32>:word32]
	Mem195[sp_1072 + 32<i32>:word32] = Mem68[r6_1317 + 180<i32>:word32]
	Mem196[sp_1072 + 36<i32>:word32] = 1<32>
	Mem197[sp_1072 + 40<i32>:word32] = r2_1056
	Mem199[r11_101:byte] = 0x27<8>
	r3_1004 = 1<32>
l0000A002:
	Mem202[sp_1072 + 32<i32>:word32] = Mem68[r6_1317 + 180<i32>:word32]
	Mem203[sp_1072 + 36<i32>:word32] = 1<32>
	Mem204[sp_1072 + 40<i32>:word32] = r2_1056
	r3_1004 = 1<32>
l00009FEE:
	Mem208[sp_1072 + 32<i32>:word32] = Mem68[r6_1317 + 180<i32>:word32]
	Mem209[sp_1072 + 36<i32>:word32] = 1<32>
	r3_1004 = 0<32>
l00009FFA:
	Mem212[sp_1072 + 40<i32>:word32] = r3_1004
l00009F2C:
l00009F48:
	r10_214 = Mem68[r6_1317 + 180<i32>:word32]
	Mem218[sp_1072 + 36<i32>:word32] = 1<32>
	Mem219[sp_1072 + 32<i32>:word32] = r10_214
	Mem220[sp_1072 + 40<i32>:word32] = 0<32>
	Mem221[sp_1072 + 8<i32>:word32] = 2<32>
	r11_101 = 1<32>
	r3_1004 = 0<32>
	r2_1056 = 1<32>
l00009F28:
l0000A02C:
	Mem224[sp_1072 + 32<i32>:word32] = 0<32>
	Mem225[sp_1072 + 36<i32>:word32] = 0<32>
	Mem226[sp_1072 + 40<i32>:word32] = 0<32>
l0000A034:
	r3_1004 = 0<32>
	r2_1056 = 0<32>
l0000A036:
	Mem232[sp_1072 + 28<i32>:word32] = 0<32>
	r10_1032 = 0<32>
l0000A56A:
	branch Mem234[sp_1072 + 12<i32>:word32] != 0xFFFFFFFF<32> l0000A582
l0000A582:
	r9_1366 = Mem234[sp_1072 + 28<i32>:word32]
	r8_242 = CONVERT(r9_1366 != Mem234[sp_1072 + 12<i32>:word32], bool, word32)
l0000A570:
	r11_101 = Mem234[sp_1072 + 16<i32>:word32]
	r10_1032 = Mem234[sp_1072 + 28<i32>:word32]
	r9_1366 = CONVERT(Mem234[r11_101 + r10_1032:byte], byte, word32)
	r8_242 = CONVERT(SLICE(r9_1366, byte, 0) != 0<8>, bool, word32)
l0000A58A:
	branch r8_242 != 0<32> l0000A040
l0000A040:
	branch Mem234[sp_1072 + 40<i32>:word32] == 0<32> l0000A07E
l0000A046:
	branch Mem234[sp_1072 + 36<i32>:word32] == 0<32> l0000A07E
l0000A04C:
	r7_262 = Mem234[sp_1072 + 36<i32>:word32]
	lr_263 = Mem234[sp_1072 + 12<i32>:word32]
	r8_264 = Mem234[sp_1072 + 28<i32>:word32] + r7_262
	branch r8_264 >u lr_263 l0000A07E
l0000A05A:
	r9_268 = Mem234[sp_1072 + 28<i32>:word32]
	call Mem234[r6_1317 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_263,Mem:Mem234,r0:r0_276,r1:r1_278,r10:r7_262,r11:Mem234[sp_233 + 32<i32>:word32],r12:Mem234[sp_233 + 16<i32>:word32] + r9_268,r2:r2_280,r3:r3_282,r4:r4_284,r5:r5_286,r6:r6_274,r7:r7_262,r8:r8_264,r9:r9_268
		defs: r0:r0_288,r1:r1_289,r10:r10_300,r2:r2_290,r3:r3_291,r4:r4_292,r5:r5_293,r6:r6_294,sp:sp_287,VNZC:VNZC_302
	branch SLICE(VNZC_302, bool, 1) l0000A07E
l0000A06A:
	branch r2_1056 != 0<32> l0000A5D4
l0000A070:
	branch r3_1004 >=u r0_1135 l0000A07C
l0000A074:
	Mem310[r3_1004:byte] = 0x5C<8>
l0000A07C:
	r3_1004 = r3_1004 + 1<32>
l0000A07E:
	lr_318 = Mem316[sp_1072 + 16<i32>:word32]
	r11_101 = Mem316[sp_1072 + 28<i32>:word32]
	r7_1010 = CONVERT(Mem316[lr_318 + r11_101:byte], byte, word32)
	branch r7_1010 == 0<32> l0000A1FC
l0000A1FC:
	r10_1032 = Mem316[sp_1072 + 40<i32>:word32]
	branch r10_1032 == 0<32> l0000A260
l0000A260:
	branch Test(EQ,Mem316[sp_1072 + 4<32>:bool]) l0000A564
l0000A26A:
l0000A202:
	branch r2_1056 != 0<32> l0000A5D4
l0000A208:
	branch r3_1004 >=u r0_1135 l0000A214
l0000A20C:
	Mem341[r3_1004:byte] = 0x5C<8>
l0000A214:
	r3_1004 = r3_1004 + 1<32>
	branch Mem343[sp_1072 + 28<i32>:word32] + 1<32> >=u Mem343[sp_1072 + 12<i32>:word32] l0000A52C
l0000A222:
	r9_354 = CONVERT(Mem343[Mem343[sp_1072 + 28<i32>:word32] + Mem343[sp_1072 + 16<i32>:word32] + 1<i32>:byte], byte, word32)
	branch SLICE(r9_354, byte, 0) <=u 0x2F<8> l0000A52C
l0000A234:
	branch SLICE(r9_354, byte, 0) >u 0x39<8> l0000A52C
l0000A23E:
	branch r3_1004 >=u r0_1135 l0000A24A
l0000A242:
	r11_101 = Mem343[sp_1072 + 20<i32>:word32]
	Mem366[r3_1004:byte] = 0x30<8>
l0000A24A:
	branch r3_1004 + 1<32> >=u r0_1135 l0000A25A
l0000A252:
	Mem376[r3_1004 + 1<32>:byte] = 0x30<8>
l0000A25A:
	r3_1004 = r3_1004 + 2<32>
l0000A52C:
	r7_1010 = 0x30<32>
l0000A08C:
	branch SLICE(r7_1010, byte, 0) == 7<8> l0000A302
l0000A302:
	r8_384 = 0x61<32>
l0000A096:
	branch SLICE(r7_1010, byte, 0) == 8<8> l0000A306
l0000A306:
	r8_384 = 0x62<32>
l0000A0A0:
	branch SLICE(r7_1010, byte, 0) == 9<8> l0000A1F8
l0000A1F8:
	r8_384 = 0x74<32>
l0000A0AA:
	branch SLICE(r7_1010, byte, 0) == 0xA<8> l0000A30A
l0000A30A:
	r8_384 = 0x6E<32>
l0000A0B4:
	branch SLICE(r7_1010, byte, 0) == 0xB<8> l0000A1F4
l0000A1F4:
	r8_384 = 0x76<32>
l0000A0BE:
	branch SLICE(r7_1010, byte, 0) == 0xC<8> l0000A1EC
l0000A1EC:
	r8_384 = 0x66<32>
l0000A0C8:
	branch SLICE(r7_1010, byte, 0) == 0xD<8> l0000A1F0
l0000A1F0:
	r8_384 = 0x72<32>
l0000A0D2:
	branch SLICE(r7_1010, byte, 0) <u 0x20<8> l0000A3AE
l0000A0DC:
	branch SLICE(r7_1010, byte, 0) <=u 0x22<8> l0000A362
l0000A0E6:
	branch SLICE(r7_1010, byte, 0) == 0x23<8> l0000A35A
l0000A0F0:
	branch SLICE(r7_1010, byte, 0) == 0x24<8> l0000A362
l0000A0FA:
	branch SLICE(r7_1010, byte, 0) == 0x25<8> l0000A520
l0000A104:
	branch SLICE(r7_1010, byte, 0) == 0x26<8> l0000A362
l0000A10E:
	branch SLICE(r7_1010, byte, 0) == 0x27<8> l0000A372
l0000A372:
	branch Mem316[sp_1072 + 8<i32>:word32] != 2<32> l0000A520
l0000A37A:
	branch r2_1056 != 0<32> l0000A5D4
l0000A380:
	branch r3_1004 >=u r0_1135 l0000A38A
l0000A384:
	Mem438[r3_1004:byte] = SLICE(r7_1010, byte, 0)
l0000A38A:
	r12_440 = r3_1004 + 1<32>
	branch r12_440 >=u r0_1135 l0000A39A
l0000A392:
	Mem448[r12_440:byte] = 0x5C<8>
l0000A39A:
	branch r12_440 + 1<32> >=u r0_1135 l0000A3A8
l0000A3A0:
	r10_1032 = Mem455[sp_1072 + 20<i32>:word32]
	Mem458[r12_440 + 1<32>:byte] = 0x27<8>
l0000A3A8:
	r3_1004 = r12_440 + 2<32>
l0000A118:
	branch SLICE(r7_1010, byte, 0) <u 0x28<8> l0000A3AE
l0000A122:
	branch SLICE(r7_1010, byte, 0) <=u 0x2A<8> l0000A362
l0000A12C:
	branch SLICE(r7_1010, byte, 0) <u 0x2B<8> l0000A3AE
l0000A136:
	branch SLICE(r7_1010, byte, 0) <=u 0x3A<8> l0000A520
l0000A140:
	branch SLICE(r7_1010, byte, 0) <u 0x3B<8> l0000A3AE
l0000A14A:
	branch SLICE(r7_1010, byte, 0) <=u 0x3E<8> l0000A362
l0000A154:
	branch SLICE(r7_1010, byte, 0) == 0x3F<8> l0000A26C
l0000A26C:
	r8_483 = Mem316[sp_1072 + 8<i32>:word32]
	branch r8_483 == 2<32> l0000A36A
l0000A272:
	branch r8_483 != 3<32> l0000A520
l0000A278:
	branch Test(NE,Mem316[sp_1072 + 4<32>:bool]) l0000A520
l0000A282:
	lr_492 = Mem316[sp_1072 + 28<i32>:word32]
	branch lr_492 + 2<32> >=u Mem316[sp_1072 + 12<i32>:word32] l0000A520
l0000A28E:
	r10_1032 = Mem316[sp_1072 + 16<i32>:word32] + Mem316[sp_1072 + 28<i32>:word32]
	r11_501 = CONVERT(Mem316[r10_1032 + 1<i32>:byte], byte, word32)
	branch SLICE(r11_501, byte, 0) != 0x3F<8> l0000A520
l0000A2A0:
	r10_1032 = CONVERT(Mem316[r10_1032 + 2<i32>:byte], byte, word32)
	branch SLICE(r10_1032, byte, 0) >u 0x3E<8> || SLICE(r10_1032, byte, 0) <u 0x21<8> l0000A520
l0000A2B0:
	branch (1<32> << r10_1032 - 0x21<32> & Mem316[0x0000A3C6<p32>:word32]) == 0<32> l0000A520
l0000A2BE:
	branch r2_1056 != 0<32> l0000A5D4
l0000A2C4:
	branch r3_1004 >=u r0_1135 l0000A2CE
l0000A2C8:
	Mem521[r3_1004:byte] = SLICE(r11_501, byte, 0)
l0000A2CE:
	r12_523 = r3_1004 + 1<32>
	branch r12_523 >=u r0_1135 l0000A2DE
l0000A2D6:
	Mem531[r12_523:byte] = 0x22<8>
l0000A2DE:
	branch r12_523 + 1<32> >=u r0_1135 l0000A2EC
l0000A2E4:
	Mem541[r12_523 + 1<32>:byte] = 0x22<8>
l0000A2EC:
	branch r12_523 + 2<32> >=u r0_1135 l0000A2F8
l0000A2F2:
	Mem553[r12_523 + 2<32>:byte] = SLICE(r11_501, byte, 0)
l0000A2F8:
	Mem567[sp_1072 + 28<i32>:word32] = lr_492 + 2<32>
	r3_1004 = r12_523 + 3<32>
	r7_1010 = r10_1032
l0000A15E:
	branch SLICE(r7_1010, byte, 0) <u 0x41<8> l0000A3AE
l0000A168:
	branch SLICE(r7_1010, byte, 0) <=u 0x5A<8> l0000A520
l0000A172:
	branch SLICE(r7_1010, byte, 0) == 0x5B<8> l0000A362
l0000A17C:
	branch SLICE(r7_1010, byte, 0) == 0x5C<8> l0000A30E
l0000A30E:
	branch Mem316[sp_1072 + 40<i32>:word32] == 0<32> l0000A320
l0000A314:
	branch r2_1056 == 0<32> l0000A320
l0000A318:
	r11_101 = Mem316[sp_1072 + 36<i32>:word32]
	branch r11_101 != 0<32> l0000A558
l0000A320:
	r8_384 = 0x5C<32>
l0000A322:
	r10_1032 = Mem316[sp_1072 + 8<i32>:word32]
	branch r10_1032 != 2<32> l0000A32E
l0000A328:
	branch r2_1056 != 0<32> l0000A5D4
l0000A32E:
	branch Mem316[sp_1072 + 40<i32>:word32] == 0<32> l0000A526
l0000A336:
	r7_1010 = r8_384
l0000A186:
	branch SLICE(r7_1010, byte, 0) == 0x5D<8> l0000A520
l0000A190:
	branch SLICE(r7_1010, byte, 0) == 0x5E<8> l0000A362
l0000A19A:
	branch SLICE(r7_1010, byte, 0) == 0x5F<8> l0000A520
l0000A1A4:
	branch SLICE(r7_1010, byte, 0) == 0x60<8> l0000A362
l0000A1AE:
	branch SLICE(r7_1010, byte, 0) <u 0x61<8> l0000A3AE
l0000A1B8:
	branch SLICE(r7_1010, byte, 0) <=u 0x7A<8> l0000A520
l0000A1C2:
	branch SLICE(r7_1010, byte, 0) == 0x7B<8> l0000A33A
l0000A1CC:
	branch SLICE(r7_1010, byte, 0) == 0x7C<8> l0000A362
l0000A1D6:
	branch SLICE(r7_1010, byte, 0) == 0x7D<8> l0000A33A
l0000A33A:
	branch Mem316[sp_1072 + 12<i32>:word32] != 0xFFFFFFFF<32> l0000A34E
l0000A34E:
	r8_643 = CONVERT(Mem316[sp_1072 + 12<i32>:word32] != 1<32>, bool, word32)
l0000A340:
	r8_643 = CONVERT(Mem316[Mem316[sp_1072 + 16<i32>:word32] + 1<i32>:byte] != 0<8>, bool, word32)
l0000A354:
	branch r8_643 != 0<32> l0000A520
l0000A1E0:
	branch SLICE(r7_1010, byte, 0) != 0x7E<8> l0000A3AE
l0000A3AE:
	r9_658 = Mem316[sp_1072 + 24<i32>:word32]
	branch r9_658 != 1<32> l0000A3CC
l0000A3CC:
	Mem664[sp_1072 + 48<i32>:word64] = 0<64>
	r8_1543 = Mem664[sp_1072 + 12<i32>:word32]
	branch r8_1543 != 0xFFFFFFFF<32> l0000A3E2
l0000A3DA:
	call Mem664[r6_1317 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_318,Mem:Mem664,r0:r0_335,r1:r1_674,r10:r10_688,r11:r11_319,r12:Mem664[sp_314 + 16<i32>:word32],r2:r2_330,r3:r3_334,r4:r4_679,r5:r5_682,r6:r6_670,r7:r7_320,r8:r8_665,r9:0<32>
		defs: r0:r0_693,r12:r12_703,r2:r2_695,r3:r3_696,r6:r6_699,r7:r7_700,r8:r8_702,sp:sp_692
	Mem708[sp_1072 + 12<i32>:word32] = r12_703
l0000A3E2:
	Mem712[sp_1072 + 44<i32>:word32] = 1<32>
	lr_709 = 1<32>
	r1_1215 = 0<32>
l0000A3E8:
	r5_718 = r1_1215 + Mem714[sp_1072 + 28<i32>:word32]
	r4_720 = Mem714[sp_1072 + 16<i32>:word32] + r5_718
	call Mem714[r6_1317 + 248<i32>:word32] (retsize: 0;)
		uses: lr:lr_731,Mem:Mem714,r0:r0_727,r1:r1_717,r10:Mem714[sp_713 + 12<i32>:word32] + r5_718,r11:r4_720,r12:sp_713 + 0x38<32>,r2:r2_728,r3:r3_729,r4:r4_720,r5:r5_718,r6:r6_726,r7:r7_730,r8:r8_732,r9:sp_713 + 0x30<32>
		defs: lr:lr_742,r0:r0_734,r1:r1_735,r11:r11_745,r12:r12_744,r2:r2_736,r3:r3_737,r4:r4_738,r5:r5_739,r6:r6_740,r7:r7_741,r8:r8_743,r9:r9_747,sp:sp_733,VNZC:VNZC_748
	r10_1032 = r12_744
	branch SLICE(VNZC_748, bool, 1) l0000A494
l0000A408:
	branch r12_744 == 0xFFFFFFFF<32> l0000A490
l0000A40C:
	branch r12_744 != 0xFFFFFFFE<32> l0000A428
l0000A428:
	branch r2_1056 == 0<32> l0000A474
l0000A42C:
	r9_747 = Mem714[sp_1072 + 8<i32>:word32]
	branch r9_747 != 2<32> l0000A474
l0000A432:
	r11_101 = r4_1247 + 1<32>
	r12_762 = 1<32>
l0000A470:
	branch r12_762 != r12_744 l0000A43A
l0000A43A:
	r9_747 = CONVERT(Mem714[r11_101:byte], byte, word32)
	r8_743 = 0x5B<32>
	branch SLICE(r9_747, byte, 0) <u 0x5B<8> l0000A46C
l0000A444:
	branch SLICE(r9_747, byte, 0) <=u 0x5C<8> l0000A5D4
l0000A44E:
	branch SLICE(r9_747, byte, 0) == 0x5E<8> l0000A5D4
l0000A458:
	branch SLICE(r9_747, byte, 0) == 0x60<8> l0000A5D4
l0000A462:
	r8_743 = 0x7C<32>
	branch SLICE(r9_747, byte, 0) == 0x7C<8> l0000A5D4
l0000A46C:
	r12_762 = r12_762 + 1<32>
	r11_101 = r11_101 + 1<32>
l0000A474:
	call Mem714[r6_1317 + 520<i32>:word32] (retsize: 0;)
		uses: lr:lr_742,Mem:Mem714,r0:r0_734,r1:r1_735 + r12_744,r10:r12_744,r11:r11_828,r12:Mem714[sp_733 + 56<i32>:word32],r2:r2_736,r3:r3_737,r4:r4_738,r5:r5_739,r6:r6_740,r7:r7_741,r8:r8_825,r9:r9_829
		defs: lr:lr_841,r0:r0_833,r1:r1_834,r10:r10_845,r11:r11_844,r2:r2_835,r3:r3_836,r4:r4_837,r5:r5_838,r6:r6_839,r7:r7_840,r9:r9_846,sp:sp_832,VNZC:VNZC_847
	r8_848 = Mem714[sp_832 + 44<i32>:word32]
	branch SLICE(VNZC_847, bool, 1) l0000A482
l0000A47E_1:
	r8_848 = 0<32>
l0000A482:
	Mem855[sp_832 + 44<i32>:word32] = r8_848
	call Mem855[r6_839 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_841,Mem:Mem855,r0:r0_833,r1:r1_834,r10:r10_845,r11:r11_844,r12:sp_832 + 0x30<32>,r2:r2_835,r3:r3_836,r4:r4_837,r5:r5_838,r6:r6_839,r7:r7_840,r8:r8_854,r9:r9_846
		defs: lr:lr_877,r0:r0_869,r1:r1_870,r10:r10_881,r11:r11_880,r2:r2_871,r3:r3_872,r4:r4_873,r5:r5_874,r6:r6_875,r7:r7_876,r8:r8_878,sp:sp_868,VNZC:VNZC_883
	branch SLICE(VNZC_883, bool, 1) l0000A494
l0000A48E:
l0000A410:
	r9_885 = r5_1282
	r11_101 = r4_1247
l0000A418:
	r10_1032 = Mem714[sp_1072 + 12<i32>:word32]
	branch r9_885 >=u r10_1032 l0000A490
l0000A41E:
	r11_101 = r11_101 + 1<i32>
	r9_885 = r9_885 + 1<32>
	branch CONVERT(Mem714[r11_101:byte], byte, word32) != 0<32> l0000A416
l0000A416:
	r1_1215 = r1_1215 + 1<32>
l0000A426:
l0000A490:
	Mem905[sp_1072 + 44<i32>:word32] = 0<32>
l0000A494:
	branch r1_1215 >u 1<32> l0000A4A6
l0000A3B4:
	Mem917[sp_1072 + 44<i32>:word32] = CONVERT(SLICE(CONVERT(Mem316[Mem316[Mem316[r6_1317 + 156<i32>:word32]:word32] + r7_1010 * 2<32>:word16], word16, word32), bool, 6), bool, word32)
	r1_1215 = r9_658
l0000A49A:
	r11_101 = Mem920[sp_1072 + 40<i32>:word32]
	branch r11_101 == 0<32> l0000A526
l0000A4A0:
	branch Mem920[sp_1072 + 44<i32>:word32] != 0<32> l0000A52E
l0000A4A6:
	r9_930 = Mem929[sp_1072 + 28<i32>:word32]
	r10_1032 = r1_1215 + r9_930
	r9_1014 = Mem929[sp_1072 + 16<i32>:word32] + r9_930 + 1<32>
l0000A4B4:
	branch Mem939[sp_1072 + 40<i32>:word32] == 0<32> l0000A504
l0000A4BA:
	branch Mem939[sp_1072 + 44<i32>:word32] != 0<32> l0000A504
l0000A4C0:
	branch r2_1056 != 0<32> l0000A5D4
l0000A4C6:
	branch r3_1004 >=u r0_1135 l0000A4D2
l0000A4CA:
	r11_101 = Mem939[sp_1072 + 20<i32>:word32]
	Mem955[r3_1004:byte] = 0x5C<8>
l0000A4D2:
	r12_957 = r3_1004 + 1<32>
	branch r12_957 >=u r0_1135 l0000A4E6
l0000A4DA:
	Mem969[r12_957:byte] = SLICE(r7_1010 >>u 6<32>, byte, 0) + 0x30<8>
l0000A4E6:
	branch r12_957 + 1<32> >=u r0_1135 l0000A4F8
l0000A4EC:
	r11_101 = Mem979[sp_1072 + 20<i32>:word32]
	Mem983[r12_957 + 1<32>:byte] = CONVERT(SLICE(r7_1010, word3, 3), word3, byte) + 0x30<8>
l0000A4F8:
	r3_1004 = r12_957 + 2<32>
	r7_1010 = CONVERT(SLICE(r7_1010, word3, 0), word3, word32) + 0x30<32>
l0000A504:
	r8_995 = Mem993[sp_1072 + 28<i32>:word32]
	branch r10_1032 <=u r8_995 + 1<32> l0000A558
l0000A50E:
	branch r3_1004 >=u r0_1135 l0000A518
l0000A512:
	Mem1011[r3_1004:byte] = SLICE(r7_1010, byte, 0)
l0000A518:
	r7_1010 = CONVERT(Mem1018[r9_1014:byte], byte, word32)
	Mem1027[sp_1072 + 28<i32>:word32] = r8_995 + 1<32>
	r9_1014 = r9_1014 + 1<i32>
	r3_1004 = r3_1004 + 1<32>
l0000A1EA:
l0000A35A:
	r10_1032 = Mem316[sp_1072 + 28<i32>:word32]
	branch r10_1032 != 0<32> l0000A520
l0000A362:
	branch Mem316[sp_1072 + 8<i32>:word32] != 2<32> l0000A520
l0000A36A:
	branch r2_1056 == 0<32> l0000A520
l0000A520:
	r11_101 = Mem1050[sp_1072 + 40<i32>:word32]
	branch r11_101 != 0<32> l0000A52E
l0000A526:
	branch r2_1056 == 0<32> l0000A558
l0000A52A:
l0000A52E:
	r10_1032 = Mem1076[sp_1072:word32]
	branch r10_1032 == 0<32> l0000A558
l0000A534:
	branch (1<32> << r7_1010 & Mem1076[r10_1032 + CONVERT(SLICE(r7_1010, byte, 5), byte, word32) * 4<32>:word32]) == 0<32> l0000A558
l0000A546:
	branch r2_1056 != 0<32> l0000A5D4
l0000A54A:
	branch r3_1004 >=u r0_1135 l0000A556
l0000A54E:
	Mem1161[r3_1004:byte] = 0x5C<8>
l0000A556:
	r3_1004 = r3_1004 + 1<32>
l0000A558:
	branch r3_1004 >=u r0_1135 l0000A562
l0000A55C:
	Mem1178[r3_1004:byte] = SLICE(r7_1010, byte, 0)
l0000A562:
	r3_1004 = r3_1004 + 1<32>
l0000A564:
	Mem1189[sp_1072 + 28<i32>:word32] = Mem1184[sp_1072 + 28<i32>:word32] + 1<32>
l0000A370:
l0000A590:
	branch r3_1004 != 0<32> l0000A59E
l0000A594:
	branch Mem234[sp_1072 + 8<i32>:word32] != 2<32> l0000A59E
l0000A59A:
	branch r2_1056 != 0<32> l0000A5D4
l0000A5D4:
	Mem1203[sp_1072 + 4<i32>:word32] = Mem1198[sp_1072 + 4<i32>:word32] & 0xFFFFFFFD<u32>
	r9_1204 = Mem1203[sp_1072 + 12<i32>:word32]
	r8_1205 = Mem1203[sp_1072 + 8<i32>:word32]
	r10_1206 = Mem1203[sp_1072 + 16<i32>:word32]
	r12_1207 = Mem1203[sp_1072 + 20<i32>:word32]
	sp_1208 = sp_1072 - 4<i32>
	Mem1209[sp_1208:word32] = 0<32>
	r7_1210 = Mem1209[sp_1208 + 8<i32>:word32]
	Mem1214[sp_1208 - 4<i32>:word32] = r7_1210
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	stackArg4 = <invalid>
	r9_1366 = fn00009EEC(r0_1135, r1_1215, r2_1056, r3_1004, r4_1247, r5_1282, r6_1317, r7_1210, r8_1205, r9_1204, r10_1206, r0_1135, r12_1207, 0<32>, stackArg0, stackArg4, out r10_1032, out r11_101, out r12_1363, out lr_1361)
	r3_1004 = r12_1363
l0000A59E:
	lr_1361 = Mem234[sp_1072 + 32<i32>:word32]
	branch lr_1361 == 0<32> l0000A5C6
l0000A5A4:
	branch r2_1056 != 0<32> l0000A5C6
l0000A5A8:
	r8_1381 = Mem234[sp_1072 + 20<i32>:word32] + r3_1004
l0000A5BE:
	r10_1032 = Mem1384[sp_1072 + 32<i32>:word32]
	r9_1366 = CONVERT(Mem1384[r10_1032:byte], byte, word32)
	branch r9_1366 != 0<32> l0000A5AE
l0000A5AE:
	branch r3_1004 >=u r0_1135 l0000A5B4
l0000A5B2:
	Mem1394[r8_1381:byte] = SLICE(r9_1366, byte, 0)
l0000A5B4:
	r11_1397 = Mem1396[sp_1072 + 32<i32>:word32]
	Mem1404[sp_1072 + 32<i32>:word32] = r11_1397 + 1<32>
	r3_1004 = r3_1004 + 1<32>
	r11_101 = r11_1397 + 1<32>
	r8_1381 = r8_1381 + 1<32>
l0000A5C6:
	branch r3_1004 >=u r0_1135 l0000A60E
l0000A5CA:
	r9_1366 = Mem1411[sp_1072 + 20<i32>:word32]
	Mem1414[r3_1004:byte] = 0<8>
l0000A60E:
	r10Out = r10_1032
	r11Out = r11_101
	r12Out = r3_1004
	lrOut = lr_1361
	return r9_1366
fn00009EEC_exit:


word32 fn0000A614(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A708
//      fn0000A788
//      fn0000A7C8
//      fn0000A804
//      fn0000A828
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A614_entry:
l0000A614:
	r6_32 = 0x0000A61A<p32> - Mem29[0x0000A700<p32>:word32]
	call Mem39[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem39,r0:r0,r1:r9,r10:r10,r11:r11,r12:r12,r2:r2,r3:r12,r4:r4,r5:r5,r6:r6_32,r7:r7,r9:r9,Stack +0004:r10,Stack +0008:r11,Stack +000C:dwLoc2C,Stack +0010:dwLoc28,Stack +0014:lr,Stack +0018:r7,Stack +001C:r6,Stack +0020:r5,Stack +0024:r4,Stack +0028:r3,Stack +002C:r2,Stack +0030:r1,Stack +0034:r0
		defs: lr:lr_51,r0:r0_43,r1:r1_44,r11:r11_54,r12:r12_53,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,r9:r9_55,sp:sp_42
	r2_112 = Mem39[r6_102 + 212<i32>:word32]
	r7_103 = Mem39[r2_112:word32]
	Mem60[sp_106 + 12<i32>:word32] = r12_53
	r10_61 = Mem60[r12_53:word32]
	Mem62[sp_106 + 16<i32>:word32] = r10_61
	branch r3_199 >= 0<32> l0000A63C
l0000A638:
	call Mem62[r6_102 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,Mem:Mem62,r0:r0_43,r1:r1_44,r10:r10_61,r11:r11_54,r12:r12_53,r2:r2_58,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,r7:r7_59,r9:r9_55
		defs: lr:lr_74,r1:r1_67,r2:r2_68,r3:r3_69,r5:r5_71,r6:r6_72,r7:r7_73,sp:sp_65
l0000A63C:
	r0_83 = Mem62[r6_102 + 356<i32>:word32]
	branch Mem62[r0_83:word32] >u r3_199 l0000A69A
l0000A648:
	r4_100 = r3_199 + 1<32>
	branch r4_100 <=u Mem62[0x0000A704<p32>:word32] l0000A658
l0000A654:
	r4_100 = fn00006CAC(r4_100, r5_48, r6_102, r7_103, lr_144, out r5_445, out r6_102, out r7_103, out r8_446, out r9_447, out r10_448, out r11_449, out r12_450, out lr_144)
	sp_106 = <invalid>
l0000A658:
	r9_113 = r2_112 + 4<32>
	r5_117 = CONVERT(r7_103 == r9_113, bool, word32)
	branch r5_117 != 0<32> l0000A666
l0000A662_1:
l0000A666:
	branch r5_117 == 0<32> l0000A66A
l0000A666_1:
l0000A66A:
	Mem134[sp_106:word32] = r9_113
	r9_151 = fn0000B904(r4_100, r5_117, r6_102, r7_103, r4_100 << 3<32>, lr_144, out r12_149, out lr_145)
	Mem158[r2_112:word32] = r12_149
	branch r5_117 == 0<32> l0000A686
l0000A67C:
	r9_r8_163 = Mem158[Mem158[sp_106:word32]:word64]
	Mem166[r12_149:word64] = r9_r8_163
	r9_151 = SLICE(r9_r8_163, word32, 32) (alias)
l0000A686:
	r12_172 = Mem171[r0_83:word32]
	call Mem171[r6_102 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_145,Mem:Mem171,r0:r0_83,r1:r1_185,r10:r4_125 + r12_172 << 3<i32>,r11:0<32>,r12:r12_149 + (r12_172 << 3<8>),r2:r2_112,r3:r3_85,r4:r4_125,r5:r5_117,r6:r6_139,r7:r12_149,r9:r9_193
		defs: lr:lr_204,r0:r0_196,r1:r1_197,r3:r3_199,r4:r4_200,r6:r6_202,r7:r7_203,sp:sp_195
	Mem212[r0_196:word32] = r4_200
l0000A69A:
	r2_215 = r7_103 + (r3_199 << 3<8>)
	r3_220 = Mem216[r1_185 + 4<i32>:word32]
	r5_217 = Mem216[r2_215:word32]
	r4_218 = Mem216[r2_215 + 4<i32>:word32]
	r9_222 = Mem216[sp_106 + 4<i32>:word32]
	r10_223 = Mem216[sp_106 + 8<i32>:word32]
	r8_224 = Mem216[r1_185:word32]
	r0_226 = r1_185 + 8<32>
	sp_230 = sp_106 - 4<i32>
	Mem231[sp_230:word32] = r0_226
	Mem233[sp_230 - 4<i32>:word32] = r3_220 | 1<u32>
	r3_225 = r3_220 | 1<u32>
	r9_240 = fn00009EEC(r0_226, r1_185, r2_215, r3_220 | 1<u32>, r4_218, r5_217, r6_102, r7_103, r8_224, r9_222, r10_223, r5_217, r4_218, lr_144, Mem233[sp_230 - 4<i32>:word32], Mem233[sp_230:word32], out r10_237, out r11_238, out r12_241, out lr_236)
	sp_246 = sp_230 + 4<32>
	branch r5_217 >u r12_241 l0000A6F4
l0000A6C4:
	r8_249 = Mem233[r6_102 + -36<i32>:word32]
	Mem251[r2_215:word32] = r12_241 + 1<32>
	r7_250 = r12_241 + 1<32>
	branch r4_218 == r8_249 + 0x28<32> l0000A6D8
l0000A6D2:
	call Mem251[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_236,Mem:Mem251,r0:r0_226,r1:r1_219,r10:r10_237,r11:r11_238,r12:r4_218,r2:r2_215,r3:r3_220 | 1<u32>,r4:r4_218,r5:r5_217,r6:r6_234,r7:r12_241 + 1<32>,r9:r9_240
		defs: lr:lr_265,r0:r0_257,r1:r1_258,r2:r2_259,r3:r3_260,r4:r4_261,r5:r5_262,r6:r6_263,r7:r7_264,sp:sp_256
l0000A6D8:
	r12_282 = fn00009EDC(r4_218, r5_217, r7_250, r7_250, lr_236, out lr_278)
	Mem291[r2_215 + 4<i32>:word32] = r12_282
	sp_293 = sp_246 - 4<i32>
	Mem295[sp_293:word32] = r0_226
	Mem298[sp_293 - 4<i32>:word32] = r3_225
	fn00009EEC(r0_226, r1_185, r2_215, r3_225, r12_282, r5_217, r6_102, r7_250, Mem298[r1_185:word32], Mem298[sp_293 + 8<i32>:word32], Mem298[sp_293 + 12<i32>:word32], r7_250, r12_282, lr_278, Mem298[sp_293 - 4<i32>:word32], Mem298[sp_293:word32], out r10_237, out r11_238, out r12_451, out lr_236)
	r4_218 = r12_282
l0000A6F4:
	Mem323[dwLoc2C:word32] = dwLoc28
	r9Out = dwLoc2C
	r10Out = r10_237
	r11Out = r11_238
	r12Out = r4_218
	lrOut = lr_236
	return dwLoc28
fn0000A614_exit:


word32 fn0000A708(word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A764
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A708_entry:
l0000A708:
	r6_32 = 0x0000A70E<p32> - Mem29[0x0000A74C<p32>:word32]
	r9_33 = Mem29[r6_32 + -36<i32>:word32]
	r3_52 = Mem49[r9_33 + 16<i32>:word32]
	r2_53 = Mem49[r9_33 + 20<i32>:word32]
	r1_54 = Mem49[r9_33 + 24<i32>:word32]
	r0_55 = Mem49[r9_33 + 28<i32>:word32]
	fn00009DD8(1<32>, r10, fp - 0x4C<32>)
	r8_85 = fn0000A614(r0_55, r1_54, r2_53, r3_52, r12, fp - 0x4C<32>, r6_32, r11, fp - 0x4C<32>, r11, r12, 0<32>, lr, out r9_86, out r10_82, out r11_83, out r12_84, out lr_80)
	r9Out = r9_86
	r10Out = r10_82
	r11Out = r11_83
	r12Out = r12_84
	lrOut = lr_80
	return r8_85
fn0000A708_exit:


word32 fn0000A764(word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A778
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A764_entry:
l0000A764:
	r8_30 = fn0000A708(r11, 0xFFFFFFFF<32>, r12, lr, out r9_31, out r10_27, out r11_28, out r12_29, out lr_25)
	r9Out = r9_31
	r10Out = r10_27
	r11Out = r11_28
	r12Out = r12_29
	lrOut = lr_25
	return r8_30
fn0000A764_exit:


word32 fn0000A778(word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003168
//      fn00003334
//      fn0000511C
// MayUse:  lr:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A778_entry:
l0000A778:
	r8_28 = fn0000A764(0x3A<32>, r12, lr, out r9_29, out r10_25, out r11_26, out r12_27, out lr_23)
	r9Out = r9_29
	r10Out = r10_25
	r11Out = r11_26
	r12Out = r12_27
	lrOut = lr_23
	return r8_28
fn0000A778_exit:


void fn0000A788(word32 r0, word32 r4, word32 r5, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A788_entry:
l0000A788:
	r6_32 = 0x0000A78E<p32> - Mem29[0x0000A7A8<p32>:word32]
	fn0000A614(r0, r12, r10, r9, r4, fp - 0x4C<32>, r6_32, r7, fp - 0x4C<32>, r9, r10, r12, fn00009E30(r0, r12, r10, r9, r4, r5, r6_32, r7, r11, fp - 0x4C<32>, lr), out r9_92, out r10_93, out r11_94, out r12_95, out lr_96)
	return
fn0000A788_exit:


word32 fn0000A7C8(word32 r0, word32 r1, word32 r4, word32 r5, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006D9C
//      fn00009D80
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A7C8_entry:
l0000A7C8:
	r6_32 = 0x0000A7CE<p32> - Mem29[0x0000A7E8<p32>:word32]
	fn0000A614(r0, r1, r12, r10, r4, fp - 0x4C<32>, r6_32, r7, fp - 0x4C<32>, 0xFFFFFFFF<32>, r10, r12, fn00009E30(r0, r1, r12, r10, r4, r5, r6_32, r7, r11, fp - 0x4C<32>, lr), out r9_91, out r10_92, out r11_93, out r12_59, out lr_55)
	lrOut = lr_55
	return r12_59
fn0000A7C8_exit:


void fn0000A804(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A804_entry:
l0000A804:
	r6_19 = 0x0000A808<p32> - Mem17[0x0000A80E<p32>:word32]
	fn0000A614(r0, r1, r2, r3, r4, r5, r6_19, r7, Mem17[r6_19 + -36<i32>:word32], r10, r11, r12, lr, out r9_50, out r10_51, out r11_52, out r12_53, out lr_54)
	return
fn0000A804_exit:


void fn0000A828(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A83C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A828_entry:
l0000A828:
	r6_19 = 0x0000A82C<p32> - Mem17[0x0000A83A<p32>:word32]
	fn0000A614(r0, r1, r2, r3, r4, r5, r6_19, r7, Mem17[r6_19 + -36<i32>:word32], 0xFFFFFFFF<32>, r11, r12, lr, out r9_50, out r10_51, out r11_52, out r12_53, out lr_54)
	return
fn0000A828_exit:


void fn0000A83C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A83C_entry:
l0000A83C:
	fn0000A828(r0, r1, r2, r3, r4, r5, r7, r12, 0<32>, lr)
	return
fn0000A83C_exit:


void fn0000A850(word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r8
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A850_entry:
l0000A850:
	r6_32 = 0x0000A856<p32> - Mem29[0x0000A8C0<p32>:word32]
	r8_33 = Mem29[r6_32 + -36<i32>:word32]
	branch r9 == 0<32> l0000A864
l0000A860_1:
	r3 = r9
l0000A864:
	branch r9 != 0<32> l0000A868
l0000A864_1:
	r3 = r8_33
l0000A868:
	call Mem37[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem37,r0:r12,r1:r1,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3_57,r4:r4,r5:r5,r6:r6_32,r7:r10,r9:r9
		defs: lr:lr_84,r0:r0_76,r12:r12_89,r2:r2_78,r3:r3_79,r4:r4_80,r6:r6_82,r7:r7_83
	r9_99 = Mem97[r12_89:word32]
	r5_100 = CONVERT(r7_83 == 0<32>, bool, word32) | Mem97[r3_79 + 4<i32>:word32]
	fn00009EEC(r0_76, r3_79 + 8<32>, r2_78, r3_79, r4_80, r5_100, r6_82, r7_83, Mem106[r3_79:word32], r11, r0_76, 0<32>, 0<32>, lr_84, r5_100, r3_79 + 8<32>, out r10_232, out r11_233, out r12_116, out lr_111)
	fn00009EEC(r0_76, r3_79 + 8<32>, r12_116 + 1<32>, r3_79, r12_116, r5_100, r6_82, r7_83, Mem141[r3_79:word32], r11, r0_76, r12_116 + 1<32>, fn00009EDC(r12_116, r5_100, r7_83, r12_116 + 1<32>, lr_111, out lr_125), lr_125, r5_100, r3_79 + 8<32>, out r10_234, out r11_235, out r12_236, out lr_237)
	Mem157[r12_89:word32] = r9_99
	branch r7_83 == 0<32> l0000A8BE
l0000A8BC:
	Mem161[r7_83:word32] = r12_116
l0000A8BE:
	return
fn0000A850_exit:


word32 fn0000A8DC(word32 r1, word32 r3, word32 r5, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000418C
// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r5:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A8DC_entry:
l0000A8DC:
	r6_31 = 0x0000A8E0<p32> - Mem29[0x0000A91A<p32>:word32]
	r12_34 = Mem29[r6_31 + -36<i32>:word32]
	branch r8 == 0<32> l0000A8EE
l0000A8EA_1:
	r5 = r8
l0000A8EE:
	branch r8 != 0<32> l0000A8F2
l0000A8EE_1:
	r5 = r12_34
l0000A8F2:
	call Mem29[r6_31 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r10,r1:r1,r10:r10,r11:r11,r12:r12_34,r2:r9,r3:r3,r4:r12,r5:r5_62,r6:r6_31,r7:r11,r8:r8,r9:r9
		defs: lr:lr_84,r0:r0_76,r12:r12_85,r2:r2_78,r4:r4_80,r5:r5_81,r6:r6_82,r7:r7_83
	r1_93 = Mem29[r12_85:word32]
	fn00009EEC(r0_76, r1_93, r2_78, r12_85, r4_80, r5_81, r6_82, r7_83, Mem98[r5_81:word32], r2_78, r0_76, r7_83, r4_80, lr_84, Mem95[r5_81 + 4<i32>:word32], r5_81 + 8<32>, out r10_106, out r11_107, out r12_110, out lr_105)
	Mem117[r12_85:word32] = r1_93
	r11Out = r11_107
	r12Out = r12_110
	lrOut = lr_105
	return r10_106
fn0000A8DC_exit:


void fn0000A920(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A920_entry:
l0000A920:
	r6_31 = 0x0000A924<p32> - Mem29[0x0000A946<p32>:word32]
	call Mem29[r6_31 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r12:r12,r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_31,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_44,r0:r0_36,r1:r1_37,r12:r12_45,r4:r4_40,r5:r5_41,r6:r6_42,r7:r7_43
	r2_49 = Mem29[r12_45:word32]
	r12_51 = Mem29[r6_42 + -36<i32>:word32]
	branch r5_41 == 0<32> l0000A93A
l0000A936_1:
	r12_51 = r5_41
l0000A93A:
	fn0000B978(r0_36, r1_37, r2_49, r4_40, r7_43, 0x28<32>, r12_51, lr_44, out r12_108, out lr_109)
	Mem75[r12_45:word32] = r2_49
	return
fn0000A920_exit:


void fn0000A968(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r8 r9
// Preserved: r12 r4 r5 r6 r7 sp
fn0000A968_entry:
l0000A968:
	r6_19 = 0x0000A96C<p32> - Mem17[0x0000A996<p32>:word32]
	r12_24 = r11 + r10
	r11_25 = r12 + r10
l0000A986:
	r10 = r10 - 1<32>
	r12_24 = r12_24 - 1<32>
	r11_25 = r11_25 - 1<32>
	branch r10 != 0xFFFFFFFF<32> l0000A97A
l0000A97A:
	Mem41[r11_25:byte] = Mem36[Mem36[Mem36[r6_19 + -32<i32>:word32]:word32] + CONVERT(Mem36[r12_24:byte], byte, word32) * 2<32>:byte]
l0000A990:
	return
fn0000A968_exit:


void fn0000A998(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r8 r9
// Preserved: r12 r4 r5 r6 r7 sp
fn0000A998_entry:
l0000A998:
	r6_19 = 0x0000A99C<p32> - Mem17[0x0000A9CA<p32>:word32]
	r12_24 = r11 + r10
	r11_25 = r12 + r10
l0000A9B8:
	r10 = r10 - 1<32>
	r12_24 = r12_24 - 1<32>
	r11_25 = r11_25 - 1<32>
	branch r10 != 0xFFFFFFFF<32> l0000A9AA
l0000A9AA:
	Mem41[r11_25:byte] = Mem36[Mem36[Mem36[r6_19 + 532<i32>:word32]:word32] + CONVERT(Mem36[r12_24:byte], byte, word32) * 2<32>:byte]
l0000A9C2:
	return
fn0000A998_exit:


void fn0000A9CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r8 r9
// Preserved: sp
fn0000A9CC_entry:
l0000A9CC:
	return
fn0000A9CC_exit:


word32 fn0000A9DE(word32 r8, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
//      fn0000B7B2
// MayUse:  r8:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000A9DE_entry:
l0000A9DE:
	lr_35 = Mem34[r8 + 8<i32>:word32]
	branch lr_35 <= 0xC<32> l0000AA12
l0000AA12:
	branch lr_35 != 0<32> l0000AA1C
l0000AA18_1:
l0000AA1C:
l0000AA0C:
l0000AA1E:
l0000AA26_thunk_fn0000AF76:
	r0_75 = fn0000AF76(out r1_76, out r2_80, out r3_81, out r6_119, out r12_79, out lr_74)
	r1Out = r1_76
	r2Out = r2_80
	r3Out = r3_81
	r12Out = r12_79
	lrOut = lr_74
	return r0_75
fn0000A9DE_exit:


void fn0000ACAE(word32 r2, word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r2:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000ACAE_entry:
l0000ACAE:
	sp_7 = CONVERT(Mem0[r2:word16], word16, word32)
l0000ACAE_thunk_fn0000ACB0:
	fn0000ACB0(r6, r7, Mem0[sp_7:word32], Mem0[sp_7 + 4<i32>:word32], Mem0[sp_7 + 8<i32>:word32], Mem0[sp_7 + 12<i32>:word32], Mem0[sp_7 + 16<i32>:word32], Mem0[sp_7 + 20<i32>:word32], Mem0[sp_7 + 24<i32>:word32], Mem0[sp_7 + 28<i32>:word32], Mem0[sp_7 + 32<i32>:word32], Mem0[sp_7 + 36<i32>:word32], Mem0[sp_7 + 40<i32>:word32], Mem0[sp_7 + 44<i32>:word32], Mem0[sp_7 + 48<i32>:word32], Mem0[sp_7 + 52<i32>:word32], Mem0[sp_7 + 56<i32>:word32], out r1_28, out r2_29, out r3_30, out r6_31, out r12_32, out lr_33)
	return
fn0000ACAE_exit:


word32 fn0000ACB0(word32 r6, word32 r7, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, word32 dwArg18, word32 dwArg1C, word32 dwArg20, word32 dwArg24, word32 dwArg28, word32 dwArg2C, word32 dwArg30, word32 dwArg34, word32 dwArg38, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000ACAE
//      fn0000AE42
// MayUse:  r6:[0..31] r7:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..31] Stack +001C:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0028:[0..31] Stack +002C:[0..31] Stack +0030:[0..31] Stack +0034:[0..31] Stack +0038:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000ACB0_entry:
	r12_1024 = r12
l0000ACB0:
l0000B706:
	sp_100 = fp
	r10_12 = dwArg30
	r3_15 = 1<32>
l0000B70E:
	r5_11 = r10_12
	r10_12 = r10_12 - 1<32>
	branch Mem4[r10_12:byte] != 0x25<8> l0000B70C
l0000B70C:
	r3_15 = r3_15 + 1<32>
l0000B71C:
	r10_21 = dwArg38 + r3_15
	r2_105 = max<int32>(r10_21, 0<32>) + r3_15
	branch r2_105 >=u dwArg1C + dwArg2C l0000B79C
l0000B734:
	branch r7 == 0<32> l0000B778
l0000B738:
	branch r10_21 <= 0<32> l0000B75A
l0000B73E:
	branch dwArg34 != 0x30<32> l0000B750
l0000B750:
l0000B74A:
l0000B754:
	call Mem4[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_57,Mem:Mem4,r11:r11_59,r12:r12_58,r6:r6_60,r7:r4_55,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4075,Stack +002C:dwArg2C,Stack +0030:dwArg30_2310,Stack +0034:dwArg34_2318,Stack +0038:dwArg38_2312
		defs: lr:lr_57,r11:r11_59,r12:r12_58,r2:r2_54,r3:r3_50,r4:r4_55,r5:r5_53,r6:r6_60,sp:sp_48
	r7 = r4_55
	r6 = r6_60
	lr = lr_57
l0000B75A:
	branch Mem4[sp_100 + 60<i32>:word32] == 0<32> l0000B76C
l0000B76C:
	call Mem4[r6 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_86,Mem:Mem4,r10:r3_72,r11:r5_70,r12:r7_74,r6:r6_89,r7:r7_85
		defs: lr:lr_86,r12:r12_87,r2:r2_83,r3:r3_79,r6:r6_89,r7:r7_85,sp:sp_77
	r7 = r7_85
	lr = lr_86
	r6 = r6_89
l0000B760:
	fn0000A998(r10, r11, r12)
	r12_1024 = r7
l0000B776:
	r7 = r7 + r3_15
l0000B778:
	r11_108 = Mem4[sp_100 + 44<i32>:word32] + r2_105
l0000B77C:
	Mem112[sp_100 + 44<i32>:word32] = r11_108
l0000B77E:
	sp_100 = fp
	dwArg30_2320 = dwArg30 + 1<32>
l0000B784:
	r9_120 = CONVERT(Mem118[dwArg30_2320:byte], byte, word32)
	branch r9_120 != 0<32> l0000AA2A
l0000AA2A:
	branch SLICE(r9_120, byte, 0) != 0x25<8> l0000AA3E
l0000AA3E:
	lr = dwArg2C
	branch dwArg1C + dwArg2C <=u 1<32> l0000B79C
l0000AA4A:
	branch r7 == 0<32> l0000AA50
l0000AA4E:
	Mem134[r7:byte] = SLICE(r9_120, byte, 0)
l0000AA50:
l0000AA54_thunk_fn0000AEFA:
	r0_155 = fn0000AEFA(out r1_154, out r2_147, out r3_143, out r6_153, out r12_151, out lr_150)
	r1Out = r1_154
	r2Out = r2_147
	r3Out = r3_143
	r6Out = r6_153
	r12Out = r12_151
	lrOut = lr_150
	return r0_155
l0000AA32:
	r2_158 = dwArg20
	r10_159 = 0<32>
	dwArg34 = 0<32>
	dwArg3C_2327 = dwArg20
l0000AA5A:
	dwArg30_2320 = dwArg30_2320 + 1<32>
	r9_168 = CONVERT(Mem167[dwArg30_2320 + 1<32>:byte], byte, word32)
	branch SLICE(r9_168, byte, 0) == 0x23<8> l0000AA58
l0000AA58:
	r10_159 = 1<32>
l0000AA6A:
	branch SLICE(r9_168, byte, 0) == 0x2D<8> l0000AA92
l0000AA72:
	branch SLICE(r9_168, byte, 0) == 0x30<8> l0000AA92
l0000AA7A:
	branch SLICE(r9_168, byte, 0) == 0x5E<8> l0000AA8C
l0000AA8C:
	dwArg3C_2327 = 1<32>
l0000AA82:
	branch SLICE(r9_168, byte, 0) != 0x5F<8> l0000AA96
l0000AA96:
	branch r9_168 <=u 0x39<32> l0000AAA6
l0000AAA6:
	dwArg38 = 0<32>
l0000AABC:
	r2_158 = dwArg38
	branch dwArg38 != Mem191[0x0000AB10<p32>:word32] l0000AAD6
l0000AAC4:
	branch CONVERT(Mem191[dwArg30_2320:byte], byte, word32) <= 0x37<32> l0000AAD6
l0000AAD6:
	dwArg38 = dwArg38 * 0xA<32> - 0x30<32> + CONVERT(Mem191[dwArg30_2320:byte], byte, word32)
l0000AAD0:
	r12_1024 = Mem191[0x0000AB18<p32>:word32]
	dwArg38 = r12_1024
l0000AAE8:
	dwArg30_2320 = dwArg30_2320 + 1<32>
	branch CONVERT(Mem219[dwArg30_2320 + 1<32>:byte], byte, word32) <=u 0x39<32> l0000AAAC
l0000AAAC:
	branch dwArg38 <= Mem219[0x0000AB10<p32>:word32] l0000AABC
l0000AAB6:
	dwArg38 = Mem219[0x0000AB16<p32>:word32]
l0000AAA0:
	dwArg38 = 0xFFFFFFFF<32>
l0000AAF8:
	r9_236 = CONVERT(Mem233[dwArg30_2320:byte], byte, word32)
	branch SLICE(r9_236, byte, 0) == 0x45<8> l0000AB1C
l0000AB04:
	branch SLICE(r9_236, byte, 0) == 0x4F<8> l0000AB1C
l0000AB1C:
	r4_246 = r9_236
	r2_158 = dwArg30_2320 + 1<32>
	dwArg30 = dwArg30_2320 + 1<32>
l0000AB0C:
	r4_246 = 0<32>
	dwArg30 = dwArg30_2320
l0000AB24:
	lr = dwArg30
	r0_254 = CONVERT(Mem252[dwArg30:byte], byte, word32)
	branch r0_254 >u 0x7A<32> l0000B706
l0000AB32:
	switch (r0_254) { l0000AB3C l0000AB40 l0000AB44 l0000AB48 l0000AB4C l0000AB50 l0000AB54 l0000AB58 l0000AB5C l0000AB60 l0000AB64 l0000AB68 l0000AB6C l0000AB70 l0000AB74 l0000AB78 l0000AB7C l0000AB80 l0000AB84 l0000AB88 l0000AB8C l0000AB90 l0000AB94 l0000AB98 l0000AB9C l0000ABA0 l0000ABA4 l0000ABA8 l0000ABAC l0000ABB0 l0000ABB4 l0000ABB8 l0000ABBC l0000ABC0 l0000ABC4 l0000ABC8 l0000ABCC l0000ABD0 l0000ABD4 l0000ABD8 l0000ABDC l0000ABE0 l0000ABE4 l0000ABE8 l0000ABEC l0000ABF0 l0000ABF4 l0000ABF8 l0000ABFC l0000AC00 l0000AC04 l0000AC08 l0000AC0C l0000AC10 l0000AC14 l0000AC18 l0000AC1C l0000AC20 l0000AC24 l0000AC28 l0000AC2C l0000AC30 l0000AC34 l0000AC38 l0000AC3C l0000AC40 l0000AC44 l0000AC48 l0000AC4C l0000AC50 l0000AC54 l0000AC58 l0000AC5C l0000AC60 l0000AC64 l0000AC68 l0000AC6C l0000AC70 l0000AC74 l0000AC78 l0000AC7C l0000AC80 l0000AC84 l0000AC88 l0000AC8C l0000AC90 l0000AC94 l0000AC98 l0000AC9C l0000ACA0 l0000ACA4 l0000ACA8 l0000ACAC l0000ACB0 l0000ACB4 l0000ACB8 l0000ACBC l0000ACC0 l0000ACC4 l0000ACC8 l0000ACCC l0000ACD0 l0000ACD4 l0000ACD8 l0000ACDC l0000ACE0 l0000ACE4 l0000ACE8 l0000ACEC l0000ACF0 l0000ACF4 l0000ACF8 l0000ACFC l0000AD00 l0000AD04 l0000AD08 l0000AD0C l0000AD10 l0000AD14 l0000AD18 l0000AD1C l0000AD20 l0000AD24 }
l0000AD24:
l0000AD28:
	r5_1162 = 0<32>
l0000AD20:
l0000B56C:
	branch r4_246 == 0x45<32> l0000AE3E
l0000B570_thunk_fn0000AE3E:
	fn0000AE3E()
	r1Out = r1_265
	r2Out = r2_158
	r3Out = r3_266
	r6Out = r6
	r12Out = r12_1024
	lrOut = dwArg30
	return r0_254
l0000B574:
	r10_269 = Mem255[dwArg18 + 20<i32>:word32]
	branch true l0000AF6C
l0000B582_thunk_fn0000AF6C:
	fn0000AF6C()
l0000B586:
	branch r10_269 <= 0xFFFFF893<32> l0000B596
l0000B592_1:
l0000B596:
	branch r10_269 > 0xFFFFF893<32> l0000B59A
l0000B596_1:
l0000B59A:
l0000B59A_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AD1C:
l0000AD18:
l0000B538:
	branch r4_246 == 0x45<32> l0000B706
l0000B540:
l0000B546_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AD14:
l0000AD10:
l0000B3CA:
l0000B3DC_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AD0C:
l0000B37C:
	r8_298 = max<int32>(dwArg38 - 1<32>, 0<32>)
	r4_299 = r8_298 + 1<32>
	branch r8_298 + 1<32> >=u dwArg1C + dwArg2C l0000B79C
l0000B396:
	branch r7 == 0<32> l0000B3C0
l0000B39A:
	branch dwArg38 <= 1<32> l0000B3BC
l0000B3A0:
	branch dwArg34 != 0x30<32> l0000B3B2
l0000B3B2:
l0000B3AC:
l0000B3B6:
	call Mem255[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_343,Mem:Mem255,r11:r11_345,r12:r12_344,r6:r6_346,r7:r5_339,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_2346,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_343,r11:r11_345,r12:r12_344,r4:r4_341,r5:r5_339,r6:r6_346,sp:sp_334
	r7 = r5_339
	r12_1024 = r12_344
	r6 = r6_346
l0000B3BC:
	Mem353[r7:byte] = 9<8>
	r7 = r7 + 1<i32>
l0000B3C0:
	lr = Mem357[sp_100 + 44<i32>:word32] + r4_299
	Mem363[sp_100 + 44<i32>:word32] = lr
l0000AD08:
l0000B308:
	dwLoc04 = Mem255[dwArg18 + 12<i32>:word32]
	dwLoc08 = Mem255[dwArg18 + 8<i32>:word32]
	dwLoc0C = Mem255[dwArg18 + 4<i32>:word32]
	dwLoc10 = Mem255[dwArg18:word32]
	r12_405 = fn0000D1B8(fp + 0x482<32>, Mem374[dwArg18 + 24<i32>:word32], fp + 0x448<32>)
	r0_1279 = fp + 0x482<32>
	r5_1122 = r12_405 >>u 0x1F<32>
	r12_1024 = r12_405
l0000B348:
	r8_416 = r12_1024 / 0xA<32>
	r0_1279 = r0_1279 - 1<32>
	r12_1024 = r8_416
	branch r12_405 >>u 0x1F<32> == 0<32> l0000B35C
l0000B35C:
	r8_423 = 0x3A<32>
l0000B356:
	r8_423 = 0x26<32>
l0000B360:
	Mem431[r0_1279:byte] = SLICE(r8_423, byte, 0)
	branch r8_416 != 0<32> l0000B348
l0000B36A:
	r3_1116 = 1<32>
l0000AD04:
l0000AD04_thunk_fn0000AE3E:
	fn0000AE3E()
	r1Out = r1_436
	r2Out = r2_158
	r3Out = r3_437
	r6Out = r6
	r12Out = r12_1024
	lrOut = dwArg30
	return r0_254
l0000AD00:
l0000ACFC:
l0000AD34:
l0000ACF8:
l0000ACF4:
l0000B290:
	r8_442 = max<int32>(dwArg38 - 1<32>, 0<32>)
	r4_443 = r8_442 + 1<32>
	branch r8_442 + 1<32> >=u dwArg1C + dwArg2C l0000B79C
l0000B2AA:
	branch r7 == 0<32> l0000B2D4
l0000B2AE:
	branch dwArg38 <= 1<32> l0000B2D0
l0000B2B4:
	branch dwArg34 != 0x30<32> l0000B2C6
l0000B2C6:
l0000B2C0:
l0000B2CA:
	call Mem255[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_473,Mem:Mem255,r11:r11_475,r12:r12_474,r6:r6_476,r7:r5_469,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_2346,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_473,r11:r11_475,r12:r12_474,r4:r4_471,r5:r5_469,r6:r6_476,sp:sp_464
	r7 = r5_469
	r12_1024 = r12_474
	lr = lr_473
	r6 = r6_476
l0000B2D0:
	Mem483[r7:byte] = 0xA<8>
	r7 = r7 + 1<i32>
l0000B2D4:
	Mem493[sp_100 + 44<i32>:word32] = Mem487[sp_100 + 44<i32>:word32] + r4_443
l0000ACF0:
l0000B246:
	branch r4_246 == 0x45<32> l0000B706
l0000B24E:
l0000B25E_thunk_fn0000AF76:
	r0_519 = fn0000AF76(out r1_518, out r2_511, out r3_507, out r6_517, out r12_515, out lr_514)
	r1Out = r1_518
	r2Out = r2_511
	r3Out = r3_507
	r6Out = r6_517
	r12Out = r12_515
	lrOut = lr_514
	return r0_519
l0000ACEC:
l0000B212:
	branch r4_246 == 0x45<32> l0000B706
l0000B21A:
l0000ACE8:
l0000B204:
	branch r4_246 == 0x45<32> l0000B706
l0000B20C:
l0000ACE4:
l0000B21E:
	branch r4_246 == 0x45<32> l0000B706
l0000B226:
l0000B236_thunk_fn0000AF76:
	r0_553 = fn0000AF76(out r1_552, out r2_545, out r3_541, out r6_551, out r12_549, out lr_548)
	r1Out = r1_552
	r2Out = r2_545
	r3Out = r3_541
	r6Out = r6_551
	r12Out = r12_549
	lrOut = lr_548
	return r0_553
l0000ACE0:
l0000ACDC:
l0000ACD8:
l0000ACD4:
l0000ACD0:
l0000AF4E:
	branch r4_246 == 0x45<32> l0000B706
l0000AF56:
l0000AF5A:
	branch dwArg34 == 0x30<32> l0000AF6C
l0000AF60_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AF62:
	branch dwArg34 == 0x2D<32> l0000AF6C
l0000AF66_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AF68:
l0000AF6A_thunk_fn0000AF6C:
	fn0000AF6C()
l0000ACCC:
l0000AF40:
	branch r4_246 == 0x45<32> l0000B706
l0000AF48:
l0000AF4C_thunk_fn0000AF6C:
	fn0000AF6C()
l0000ACC8:
l0000ACC4:
l0000AD96:
	branch r10_159 == 0<32> l0000AD9E
l0000AD9A_1:
l0000AD9E:
	branch r4_246 != 0<32> l0000B706
l0000ADA6:
l0000ADA6_thunk_fn0000AE3E:
	fn0000AE3E()
	r1Out = r1_593
	r2Out = r2_158
	r3Out = r3_594
	r6Out = r6
	r12Out = r12_1024
	lrOut = dwArg30
	return r0_254
l0000ACC0:
l0000ACBC:
l0000ACB8:
l0000ACB4:
l0000ACAC:
l0000ACA8:
l0000ACA4:
l0000B59E:
	r8_595 = Mem255[r6 + 700<i32>:word32]
	r11_597 = dwArg28
	branch r10_159 == 0<32> l0000B5AC
l0000B5A8_1:
l0000B5AC:
	branch dwArg28 != 0<32> l0000B5B2
l0000B5AE_1:
	r11_597 = r8_595
l0000B5B2:
	branch r10_159 != 0<32> l0000B5BC
l0000B5B8_1:
l0000B5BC:
	branch r10_159 == 0<32> l0000B5C0
l0000B5BC_1:
l0000B5C0:
	call Mem624[r6 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_638,Mem:Mem624,r11:r11_640,r12:r12_639,r6:r6_641,r7:r7_637,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:r11_611,Stack +002C:dwArg2C,Stack +0030:dwArg30_2346,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_638,r11:r11_640,r12:r12_639,r2:r2_635,r6:r6_641,r7:r7_637,sp:sp_629
	r4_645 = Mem624[sp_100 + 44<i32>:word32]
	r10_648 = Mem624[sp_100 + 56<i32>:word32] + r12_639
	r3_650 = max<int32>(r10_648, 0<32>) + r12_639
	dwArg28 = r11_597
	r5_652 = r12_639
	branch r3_650 >=u Mem624[sp_100 + 28<i32>:word32] + r4_645 l0000B79C
l0000B5E2:
	r12_1024 = r12_639
	r7 = r7_637
	r6 = r6_641
	branch r7_637 == 0<32> l0000B636
l0000B5E6:
	r7_687 = r7_637
	r6 = r6_641
	branch r10_648 <= 0<32> l0000B608
l0000B5EC:
	branch Mem624[sp_100 + 52<i32>:word32] != 0x30<32> l0000B5FE
l0000B5FE:
l0000B5F8:
l0000B602:
	call Mem624[r6_641 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_680,Mem:Mem624,r11:r11_682,r12:r12_681,r6:r6_683,r7:r4_678
		defs: lr:lr_680,r11:r11_682,r12:r12_681,r2:r2_677,r3:r3_673,r4:r4_678,r5:r5_676,r6:r6_683,sp:sp_671
	r7_687 = r4_678
	r6 = r6_683
	lr = lr_680
l0000B608:
	branch r2_635 == 0<32> l0000B618
l0000B618:
	branch Mem624[sp_100 + 60<i32>:word32] == 0<32> l0000B62A
l0000B62A:
	call Mem624[r6 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_711,Mem:Mem624,r10:r5_697,r11:Mem624[sp_691 + 40<i32>:word32],r12:r7_699,r6:r6_714,r7:r7_710
		defs: lr:lr_711,r12:r12_712,r3:r3_704,r5:r5_707,r6:r6_714,r7:r7_710,sp:sp_702
	r7_687 = r7_710
	lr = lr_711
	r6 = r6_714
l0000B61E:
	fn0000A998(r10, r11, r12)
	r12_1024 = r7_687
l0000B60C:
	fn0000A968(r10, r11, r12)
	r12_1024 = r7_687
l0000B634:
	r7 = r7_687 + r5_652
l0000B636:
	r11_108 = Mem624[sp_100 + 44<i32>:word32] + r3_650
l0000ACA0:
l0000B54A:
	branch r4_246 == 0x45<32> l0000AE3E
l0000B54E_thunk_fn0000AE3E:
	fn0000AE3E()
	r1Out = r1_740
	r2Out = r2_158
	r3Out = r3_741
	r6Out = r6
	r12Out = r12_1024
	lrOut = dwArg30
	return r0_254
l0000B552:
	branch r4_246 == 0x4F<32> l0000B706
l0000B55A:
	r8_746 = Mem255[dwArg18 + 20<i32>:word32]
	r3_1116 = 4<32>
	r5_1122 = CONVERT(r8_746 < 0xFFFFF894<32>, bool, word32)
	r11_1128 = r8_746 + 0x76C<32>
l0000AC9C:
l0000B370:
	branch r4_246 != 0x4F<32> l0000AE3E
l0000B374_thunk_fn0000AE3E:
	fn0000AE3E()
	r1Out = r1_755
	r2Out = r2_158
	r3Out = r3_756
	r6Out = r6
	r12Out = r12_1024
	lrOut = dwArg30
	return r0_254
l0000B378:
l0000AC98:
l0000B510:
	branch r4_246 == 0x45<32> l0000B706
l0000B518:
l0000B534_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC94:
l0000AC90:
l0000B3E0:
	branch r4_246 == 0x45<32> l0000B706
l0000B3E8:
l0000B3FC_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC8C:
l0000ADB4:
l0000AC88:
l0000B2F8:
	branch r4_246 == 0x45<32> l0000B706
l0000B300:
l0000B304_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC84:
l0000AD2E:
l0000AC80:
l0000AC7C:
l0000B2DE:
l0000B2E4:
	branch r10_159 == 0<32> l0000B2F0
l0000B2E8_1:
l0000B2EC_1:
l0000B2F0:
l0000B2F4_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg64 = <invalid>
	r0_819 = fn0000AE42(r4, r6_817, dwArg18, stackArg64, out r1_818, out r2_811, out r3_807, out r6_817, out r12_815, out lr_814)
	r1Out = r1_818
	r2Out = r2_811
	r3Out = r3_807
	r6Out = r6_817
	r12Out = r12_815
	lrOut = lr_814
	return r0_819
l0000AC78:
l0000AC74:
l0000B260:
	branch r4_246 == 0x45<32> l0000B706
l0000B268:
	branch dwArg38 != 0xFFFFFFFF<32> l0000B276
l0000B276:
	r10_826 = dwArg38
l0000B286:
	branch r10_826 <= 8<32> l0000B27C
l0000B27C:
	r10_826 = r10_826 + 1<32>
l0000B26E:
l0000B28C:
l0000B28E_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC70:
l0000B238:
	branch r4_246 == 0x45<32> l0000B706
l0000B240:
l0000B244_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC6C:
l0000AC68:
l0000AC64:
l0000AC60:
l0000B1F8:
	branch r4_246 == 0x45<32> l0000B706
l0000B200:
l0000B202_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC5C:
l0000B1EA:
	branch r4_246 == 0x45<32> l0000B706
l0000B1F2:
l0000B1F6_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC58:
l0000B400:
	branch r4_246 == 0x45<32> l0000B706
l0000B408:
	r8_862 = 0x12C<32>
	r9_863 = Mem255[dwArg18 + 24<i32>:word32]
	r1_864 = Mem255[dwArg18 + 20<i32>:word32]
	r2_866 = Mem865[dwArg18 + 28<i32>:word32]
	branch r1_864 < 0<32> l0000B41C
l0000B418_1:
	r8_862 = 0xFFFFFF9C<32>
l0000B41C:
	fn0000A9CC()
	r3_876 = r8_862 + r1_864
	branch r3_876 >= 0<32> l0000B466
l0000B466:
	branch CONVERT(SLICE(r3_876, word2, 0), word2, word32) == 0<32> l0000B470
l0000B470:
	branch false l0000B47E
l0000B47E:
	r8_891 = 0<32>
l0000B47A:
	r8_891 = 1<32>
l0000B46C:
	r8_891 = 0<32>
l0000B48A:
	fn0000A9CC()
	r12_902 = r2_866 - 0x16D<32> + r8_891
	r12_906 = r12_902
	branch r12_902 < 0<32> l0000B49E
l0000B496_1:
l0000B49A_1:
	r12_906 = 1<32>
l0000B49E:
	branch r12_902 >= 0<32> l0000B4A2
l0000B49E_1:
	r12_906 = 0<32>
l0000B42C:
	branch CONVERT(SLICE(r3_876, word2, 0) - 1<2>, word2, word32) == 0<32> l0000B43A
l0000B43A:
	branch false l0000B448
l0000B448:
l0000B444:
l0000B436:
l0000B454:
	fn0000A9CC()
	r12_906 = 0xFFFFFFFF<32>
l0000B4A2:
	branch SLICE(r0_254, byte, 0) == 0x47<8> l0000B4E6
l0000B4E6:
l0000B4FC_thunk_fn0000AF76:
	r0_978 = fn0000AF76(out r1_977, out r2_970, out r3_966, out r6_976, out r12_974, out lr_973)
	r1Out = r1_977
	r2Out = r2_970
	r3Out = r3_966
	r6Out = r6_976
	r12Out = r12_974
	lrOut = lr_973
	return r0_978
l0000B4AA:
	branch SLICE(r0_254, byte, 0) != 0x67<8> l0000B500
l0000B500:
l0000B50C_thunk_fn0000AF6C:
	fn0000AF6C()
l0000B4B2:
	branch r9_863 < 0<32> l0000B4CC
l0000B4CC:
	r10_1005 = r12_906 + 0xFFFFF894<32>
	branch r1_864 < r10_1005 l0000B4DE
l0000B4DA_1:
l0000B4DE:
	branch r1_864 >= r10_1005 l0000B4E2
l0000B4DE_1:
l0000B4E2:
l0000B4E2_thunk_fn0000AF6C:
	fn0000AF6C()
l0000B4C6:
l0000B4C8_thunk_fn0000AF6C:
	fn0000AF6C()
l0000AC54:
l0000B1DC:
	branch r4_246 != 0<32> l0000B706
l0000B1E2:
l0000AC50:
l0000AC4C:
l0000AF34:
	branch r4_246 != 0<32> l0000B706
l0000AF3A:
l0000ADB8:
	fn0000A9DE(r8, out r1_4465, out r2_4466, out r3_4467, out r12_4468, out lr_4469)
	r10_1037 = dwArg38 + dwArg3C_2327
	r12_1024 = dwArg3C_2327
	dwLoc04 = dwArg10
	dwLoc08 = dwArg14
	lr = dwArg2C
	r1_1040 = max<int32>(r10_1037, 0<32>) + dwArg3C_2327
	r5_1042 = dwArg3C_2327
	sp_100 = fp
	branch r1_1040 >=u dwArg1C + dwArg2C l0000B79C
l0000ADEA:
	branch r7 == 0<32> l0000AE2A
l0000ADEE:
	branch r10_1037 <= 0<32> l0000AE10
l0000ADF4:
	branch dwArg34 != 0x30<32> l0000AE06
l0000AE06:
l0000AE00:
l0000AE0A:
	call Mem1033[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1072,Mem:Mem1033,r11:r11_1074,r12:r12_1073,r6:r6_1075,r7:r4_1070,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_2346,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_1072,r1:r1_1076,r11:r11_1074,r12:r12_1073,r4:r4_1070,r5:r5_1068,r6:r6_1075,sp:sp_1063
	r7 = r4_1070
	lr = lr_1072
	r6 = r6_1075
l0000AE10:
	r12_1024 = Mem1033[sp_100 + 60<i32>:word32]
	sp_1090 = sp_100 - 4<i32>
	Mem1091[sp_1090:word32] = Mem1033[sp_100 + 16<i32>:word32]
	Mem1098[sp_1090 - 4<i32>:word32] = Mem1091[sp_1090 + 24<i32>:word32]
	fn0000A9DE(r8, out r1_4470, out r2_4471, out r3_4472, out r12_4473, out lr_4474)
	r7 = r7 + r5_1042
	sp_100 = sp_1090 + 4<32>
l0000AE2A:
	Mem1108[sp_100 + 44<i32>:word32] = Mem1102[sp_100 + 44<i32>:word32] + r1_1040
l0000AC48:
l0000AF00:
	branch r4_246 == 0x4F<32> l0000B706
l0000AF08:
	branch r4_246 == 0x45<32> l0000AE3E
l0000AF0C_thunk_fn0000AE3E:
	fn0000AE3E()
	r1Out = r1_1113
	r2Out = r2_158
	r3Out = r3_1114
	r6Out = r6
	r12Out = r12_1024
	lrOut = dwArg30
	return r0_254
l0000AF0E:
	r8_1117 = Mem255[dwArg18 + 20<i32>:word32]
	r3_1116 = 2<32>
	r5_1122 = CONVERT(r8_1117 < 0xFFFFF894<32>, bool, word32)
	r11_1128 = r8_1117 / 0x64<32> + 0x13<32>
l0000B7A2:
	lr_1130 = 0<32>
	r12_1024 = 0<32>
l0000AC44:
l0000AC40:
l0000ADA8:
	branch r4_246 != 0<32> l0000B706
l0000ADAE:
	branch r10_159 != 0<32> l0000AE34
l0000AE34:
l0000AE3C_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg64 = <invalid>
	r0_1157 = fn0000AE42(r4, r6_1155, dwArg18, stackArg64, out r1_1156, out r2_1149, out r3_1145, out r6_1155, out r12_1153, out lr_1152)
	r1Out = r1_1156
	r2Out = r2_1149
	r3Out = r3_1145
	r6Out = r6_1155
	r12Out = r12_1153
	lrOut = lr_1152
	return r0_1157
l0000ADB2:
l0000ADB2_thunk_fn0000AE3E:
	fn0000AE3E()
	r1Out = r1_1159
	r2Out = r2_158
	r3Out = r3_1160
	r6Out = r6
	r12Out = r12_1024
	lrOut = dwArg30
	return r0_254
l0000AC3C:
l0000AC38:
l0000AC34:
l0000AC30:
l0000AC2C:
l0000AC28:
l0000AC24:
l0000AD3A:
	r5_1162 = 1<32>
	r9_1163 = dwArg30 + 1<32>
l0000B63E:
	r9_1163 = r9_1163 + 1<i32>
	r10_1170 = CONVERT(Mem255[r9_1163:byte], byte, word32)
	branch SLICE(r10_1170, byte, 0) == 0x3A<8> l0000B63C
l0000B63C:
	r5_1162 = r5_1162 + 1<32>
l0000B64A:
	branch SLICE(r10_1170, byte, 0) != 0x7A<8> l0000B706
l0000B652:
	dwArg30 = r9_1163
l0000B654:
	branch Mem1183[dwArg18 + 32<i32>:word32] < 0<32> l0000B77E
l0000B65E:
	r12_1024 = Mem1183[dwArg18 + 36<i32>:word32]
	lr = dwArg30_2320
	branch r5_1162 >u 3<32> l0000B706
l0000B67C:
	switch (r5_1162) { l0000B68C l0000B690 l0000B694 l0000B698 }
l0000B698:
l0000B6E8:
	branch dwArg30_2320 != 0<32> l0000B6C8
l0000B6EC:
	branch true l0000B6B2
l0000B6F0:
	r5_1122 = r12_1024 >>u 0x1F<32>
	r11_1128 = r12_1024 / 0xE10<32>
	lr_1130 = 0x3C<32>
	r3_1116 = 3<32>
l0000B694:
l0000B6C8:
	r5_1122 = CONVERT(SLICE(r12_1024 >>u 0x1F<32>, byte, 0), byte, word32)
	r3_1116 = 9<32>
	r11_1128 = r12_1024 / 0xE10<32> * 0x2710<32> + dwArg30_2320 + 0x1770<32>
	lr_1130 = 0x14<32>
l0000B690:
l0000B6B2:
	r5_1122 = CONVERT(SLICE(r12_1024 >>u 0x1F<32>, byte, 0), byte, word32)
	r3_1116 = 6<32>
	r11_1128 = r12_1024 / 0xE10<32> * 0x64<32> + 0x3C<32>
	lr_1130 = 4<32>
l0000B68C:
l0000B69C:
	r5_1122 = CONVERT(SLICE(r12_1024 >>u 0x1F<32>, byte, 0), byte, word32)
	r3_1116 = 5<32>
	r11_1128 = r12_1024 / 0xE10<32> * 0x64<32> + 0x3C<32>
	lr_1130 = 0<32>
l0000AF78:
	r12_1024 = 1<32>
	branch r4_246 != 0x4F<32> l0000AF86
l0000AF86:
	branch r5_1122 == 0<32> l0000AF8C
l0000AF7E:
	branch r5_1122 != 0<32> l0000AF8A
l0000AF8A:
	r11_1128 = -r11_1128
l0000AF8C:
	r0_1279 = fp + 0x482<32>
l0000AF90:
	branch Test(NE,SLICE(lr_1130, bool, 0)) l0000AF9A
l0000AF96:
	r0_1279 = r0_1279 - 1<i32>
	Mem1288[r0_1279:byte] = 0x3A<8>
l0000AF9A:
	r0_1279 = r0_1279 - 1<i32>
	Mem1298[r0_1279:byte] = 0x3A<8>
	r8_1292 = r11_1128 /u 0xA<32>
	lr_1130 = lr_1130 >> 1<i32>
	r11_1128 = r8_1292
	branch r8_1292 != 0<32> l0000AF90
l0000AFAE:
	branch lr_1130 != 0<32> l0000AF90
l0000AFB2:
	r2_1310 = dwArg38
	r4_1319 = max<int32>(dwArg38, r3_1116)
	branch r5_1122 == 0<32> l0000AFC0
l0000AFC0:
	branch r12_1024 != 0<32> l0000AFC6
l0000AFC2_1:
	r2_1310 = r12_1024
l0000AFC6:
	branch r12_1024 == 0<32> l0000AFCA
l0000AFC6_1:
	r2_1310 = 0x2B<32>
l0000AFBC:
	r2_1310 = 0x2D<32>
l0000AFCA:
	lr = dwArg34
	branch dwArg34 != 0x2D<32> l0000B018
l0000B018:
	r3_1362 = r4_1319 + ((fp + 0x482<32>) + r0_1279) + CONVERT(SLICE(r2_1310, byte, 0) != 0<8>, bool, word32)
	branch r3_1362 <= 0<32> l0000B118
l0000B118:
	branch r2_1310 == 0<32> l0000B168
l0000B11C:
	r8_1370 = max<int32>(dwArg38 - 1<32>, 0<32>)
	r3_1371 = r8_1370 + 1<32>
	branch r8_1370 + 1<32> >=u dwArg1C + dwArg2C l0000B79C
l0000B136:
	branch r7 == 0<32> l0000B162
l0000B13A:
	branch r4_1319 != 0<32> l0000B160
l0000B13E:
	branch dwArg38 <= 1<32> l0000B160
l0000B144:
	branch dwArg34 != 0x30<32> l0000B156
l0000B156:
l0000B150:
l0000B15A:
	call Mem1309[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1435,Mem:Mem1309,r11:r11_1437,r12:r12_1436,r6:r6_1438,r7:r5_1431,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_3345,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_1435,r0:r0_1440,r11:r11_1437,r12:r12_1436,r2:r2_1432,r3:r3_1428,r4:r4_1433,r5:r5_1431,r6:r6_1438,sp:sp_1426
	r7 = r5_1431
	r6 = r6_1438
	lr = lr_1435
l0000B160:
	Mem1445[r7:byte] = SLICE(r2_1310, byte, 0)
	r7 = r7 + 1<i32>
l0000B162:
	r12_1024 = Mem1449[sp_100 + 44<i32>:word32] + r3_1371
l0000B034:
	r9_1458 = dwArg1C + dwArg2C
	branch dwArg34 != 0x5F<32> l0000B0AE
l0000B0AE:
	branch r4_1319 >=u r9_1458 l0000B79C
l0000B0B4:
	branch r2_1310 == 0<32> l0000B0FC
l0000B0B8:
	r8_1468 = max<int32>(dwArg38 - 1<32>, 0<32>)
	r1_1469 = r8_1468 + 1<32>
	branch r8_1468 + 1<32> >=u r9_1458 l0000B79C
l0000B0CC:
	branch r7 == 0<32> l0000B0F6
l0000B0D0:
	branch r4_1319 != 0<32> l0000B0F4
l0000B0D4:
	branch dwArg38 <= 1<32> l0000B0F4
l0000B0DA:
	branch dwArg34 != 0x30<32> l0000B0EA
l0000B0EA:
l0000B0E6:
l0000B0EE:
	call Mem1309[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1497,Mem:Mem1309,r11:r11_1499,r12:r12_1498,r6:r6_1500,r7:r5_1493,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_3345,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_1497,r0:r0_1502,r1:r1_1501,r11:r11_1499,r12:r12_1498,r2:r2_1494,r3:r3_1490,r4:r4_1495,r5:r5_1493,r6:r6_1500,sp:sp_1488
	r7 = r5_1493
	r12_1024 = r12_1498
	r6 = r6_1500
	lr = lr_1497
l0000B0F4:
	Mem1507[r7:byte] = SLICE(r2_1310, byte, 0)
	r7 = r7 + 1<i32>
l0000B0F6:
	Mem1517[sp_100 + 44<i32>:word32] = Mem1511[sp_100 + 44<i32>:word32] + r1_1469
l0000B0FC:
	branch r7 == 0<32> l0000B10C
l0000B100:
	call Mem1531[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1542,Mem:Mem1531,r10:r3_1523,r11:0x30<32>,r12:r7_1518,r6:r6_1545,r7:r7_1549
		defs: lr:lr_1542,r0:r0_1547,r12:r12_1543,r3:r3_1535,r4:r4_1540,r6:r6_1545,r7:r7_1541,sp:sp_1533
	r7_1549 = r7_1541 + r3_1362
	r7 = r7_1549
	r6 = r6_1545
	lr = lr_1542
l0000B10C:
	Mem1558[sp_100 + 44<i32>:word32] = Mem1531[sp_100 + 44<i32>:word32] + r3_1362
	Mem1559[sp_100 + 56<i32>:word32] = 0<32>
l0000B042:
	branch r3_1362 >=u r9_1458 l0000B79C
l0000B048:
	branch r7 == 0<32> l0000B058
l0000B04C:
	call Mem1309[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1576,Mem:Mem1309,r10:r3_1362,r11:0x20<32>,r12:r7_131,r6:r6_1579,r7:r7_1583,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_3345,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_1576,r0:r0_1581,r12:r12_1577,r2:r2_1573,r3:r3_1569,r4:r4_1574,r6:r6_1579,r7:r7_1575,sp:sp_1567
	r7_1583 = r7_1575 + r3_1362
	r7 = r7_1583
	r6 = r6_1579
l0000B058:
	r5_1588 = Mem1309[sp_100 + 56<i32>:word32]
	lr_1589 = Mem1309[sp_100 + 44<i32>:word32]
	r8_1591 = Mem1309[sp_100 + 56<i32>:word32] + r3_1362
	r5_1594 = r5_1588
	branch r5_1588 <= r3_1362 l0000B066
l0000B062_1:
	r5_1594 = r8_1591
l0000B066:
	branch r5_1588 > r3_1362 l0000B06A
l0000B066_1:
	r5_1594 = 0<32>
l0000B06A:
	Mem1606[sp_100 + 56<i32>:word32] = r5_1594
	lr = lr_1589 + r3_1362
	Mem1607[sp_100 + 44<i32>:word32] = lr
	branch r2_1310 == 0<32> l0000B168
l0000B074:
	r3_1614 = r5_1594 - 1<32>
	r8_1616 = max<int32>(r3_1614, 0<32>)
	r5_1617 = r8_1616 + 1<32>
	branch r8_1616 + 1<32> >=u Mem1607[sp_100 + 28<i32>:word32] + lr l0000B79C
l0000B08C:
	branch r7 == 0<32> l0000B0A8
l0000B090:
	branch r4_1319 != 0<32> l0000B0A6
l0000B094:
	branch r3_1614 <= 0<32> l0000B0A6
l0000B09A:
	call Mem1607[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1649,Mem:Mem1607,r10:r3_1614,r11:0x20<32>,r12:r7_1624,r6:r6_1652,r7:r7_1656
		defs: lr:lr_1649,r0:r0_1654,r2:r2_1646,r3:r3_1642,r4:r4_1647,r5:r5_1645,r6:r6_1652,r7:r7_1648,sp:sp_1640
	r7_1656 = r7_1648 + r3_1642
	r7 = r7_1656
	r6 = r6_1652
	lr = lr_1649
l0000B0A6:
	Mem1660[r7:byte] = SLICE(r2_1310, byte, 0)
	r7 = r7 + 1<i32>
l0000B0A8:
	r12_1024 = Mem1664[sp_100 + 44<i32>:word32] + r5_1617
l0000B166:
	Mem1672[sp_100 + 44<i32>:word32] = r12_1024
l0000AFD2:
	branch r2_1310 == 0<32> l0000B168
l0000AFD8:
	r8_1678 = max<int32>(dwArg38 - 1<32>, 0<32>)
	r5_1679 = r8_1678 + 1<32>
	r12_1024 = dwArg2C
	branch r8_1678 + 1<32> >=u dwArg1C + dwArg2C l0000B79C
l0000AFF2:
	branch r7 == 0<32> l0000B00E
l0000AFF6:
	branch r4_1319 != 0<32> l0000B00C
l0000AFFA:
	branch dwArg38 <= 1<32> l0000B00C
l0000B000:
	call Mem1309[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1703,Mem:Mem1309,r10:dwArg38_2356 - 1<32>,r11:0x20<32>,r12:r7_131,r6:r6_1706,r7:r7_1710,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_3345,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_1703,r0:r0_1708,r12:r12_1704,r2:r2_1700,r3:r3_1696,r4:r4_1701,r5:r5_1699,r6:r6_1706,r7:r7_1702,sp:sp_1694
	r7_1710 = r7_1702 + r3_1696
	r7 = r7_1710
	r6 = r6_1706
	lr = lr_1703
l0000B00C:
	Mem1714[r7:byte] = SLICE(r2_1310, byte, 0)
	r7 = r7 + 1<i32>
l0000B00E:
	Mem1724[sp_100 + 44<i32>:word32] = Mem1718[sp_100 + 44<i32>:word32] + r5_1679
l0000B168:
	r5_1744 = sp_100 + 0x482<32> + r0_1279
	r10_1745 = Mem1727[sp_100 + 56<i32>:word32] + r5_1744
	r3_1748 = max<int32>(r10_1745, 0<32>) + r5_1744
	branch r3_1748 >=u Mem1727[sp_100 + 28<i32>:word32] + Mem1727[sp_100 + 44<i32>:word32] l0000B79C
l0000B18A:
	branch r7 == 0<32> l0000B1D2
l0000B18E:
	branch r4_1319 != 0<32> l0000B1B4
l0000B192:
	branch r10_1745 <= 0<32> l0000B1B4
l0000B198:
	branch Mem1727[sp_100 + 52<i32>:word32] != 0x30<32> l0000B1AA
l0000B1AA:
l0000B1A4:
l0000B1AE:
	call Mem1727[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1807,Mem:Mem1727,r11:r11_1809,r12:r12_1808,r6:r6_1810,r7:r4_1805
		defs: lr:lr_1807,r0:r0_1812,r11:r11_1809,r12:r12_1808,r3:r3_1800,r4:r4_1805,r5:r5_1803,r6:r6_1810,sp:sp_1798
	r7 = r4_1805
	lr = lr_1807
	r6 = r6_1810
l0000B1B4:
	branch Mem1727[sp_100 + 60<i32>:word32] == 0<32> l0000B1C6
l0000B1C6:
	call Mem1727[r6 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_1836,Mem:Mem1727,r10:r5_1822,r11:r0_1820,r12:r7_1824,r6:r6_1839,r7:r7_1835
		defs: lr:lr_1836,r12:r12_1837,r3:r3_1829,r5:r5_1832,r6:r6_1839,r7:r7_1835,sp:sp_1827
	r7 = r7_1835
	lr = lr_1836
	r6 = r6_1839
l0000B1BA:
	fn0000A998(r10, r11, r12)
	r12_1024 = r7
l0000B1D0:
	r7 = r7 + r5_1744
l0000B1D2:
	Mem1860[sp_100 + 44<i32>:word32] = Mem1727[sp_100 + 44<i32>:word32] + r3_1748
l0000AF82:
l0000AF84_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg64 = <invalid>
	r0_1879 = fn0000AE42(r4, r6_1877, dwArg18, stackArg64, out r1_1878, out r2_1871, out r3_1867, out r6_1877, out r12_1875, out lr_1874)
	r1Out = r1_1878
	r2Out = r2_1871
	r3Out = r3_1867
	r6Out = r6_1877
	r12Out = r12_1875
	lrOut = lr_1874
	return r0_1879
l0000AF72_thunk_fn0000AF76:
	r0_1895 = fn0000AF76(out r1_1894, out r2_1887, out r3_1883, out r6_1893, out r12_1891, out lr_1890)
	r1Out = r1_1894
	r2Out = r2_1887
	r3Out = r3_1883
	r6Out = r6_1893
	r12Out = r12_1891
	lrOut = lr_1890
	return r0_1895
l0000AC20:
l0000AC1C:
l0000AC18:
l0000AC14:
l0000AC10:
l0000AC0C:
l0000AC08:
l0000AC04:
l0000AC00:
l0000ABFC:
l0000ABF8:
l0000ABF4:
l0000ABF0:
l0000ABEC:
l0000ABE8:
l0000ABE4:
l0000ABE0:
l0000ABDC:
l0000ABD8:
l0000ABD4:
l0000ABD0:
l0000AD44:
	branch r4_246 != 0<32> l0000B706
l0000AD4A:
	r8_1902 = max<int32>(dwArg38 - 1<32>, r4_246)
	r12_1024 = dwArg2C
	r4_1903 = r8_1902 + 1<32>
	branch r8_1902 + 1<32> >=u dwArg1C + dwArg2C l0000B79C
l0000B79C:
	Mem1910[sp_100 + 44<i32>:word32] = 0<32>
l0000AD62:
	branch r7 == 0<32> l0000AD8C
l0000AD66:
	branch dwArg38 <= 1<32> l0000AD86
l0000AD6C:
	branch dwArg34 != 0x30<32> l0000AD7C
l0000AD7C:
l0000AD78:
l0000AD80:
	call Mem255[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1934,Mem:Mem255,r11:r11_1936,r12:r12_1935,r6:r6_1937,r7:r5_1930,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08,Stack +000C:dwArg0C,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:dwArg18,Stack +001C:dwArg1C,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0028:dwArg28_4068,Stack +002C:dwArg2C,Stack +0030:dwArg30_2346,Stack +0034:dwArg34_2374,Stack +0038:dwArg38_2356
		defs: lr:lr_1934,r11:r11_1936,r12:r12_1935,r4:r4_1932,r5:r5_1930,r6:r6_1937,sp:sp_1925
	r7 = r5_1930
	r12_1024 = r12_1935
	lr = lr_1934
	r6 = r6_1937
l0000AD86:
	Mem1947[r7:byte] = Mem255[Mem255[sp_100 + 48<i32>:word32]:byte]
	r7 = r7 + 1<i32>
l0000AD8C:
	Mem1956[sp_100 + 44<i32>:word32] = Mem1950[sp_100 + 44<i32>:word32] + r4_1903
l0000ABCC:
l0000ABC8:
l0000ABC4:
l0000ABC0:
l0000ABBC:
l0000ABB8:
l0000ABB4:
l0000ABB0:
l0000ABAC:
l0000ABA8:
l0000ABA4:
l0000ABA0:
l0000AB9C:
l0000AB98:
l0000AB94:
l0000AB90:
l0000AB8C:
l0000AB88:
l0000AB84:
l0000AB80:
l0000AB7C:
l0000AB78:
l0000AB74:
l0000AB70:
l0000AB6C:
l0000AB68:
l0000AB64:
l0000AB60:
l0000AB5C:
l0000AB58:
l0000AB54:
l0000AB50:
l0000AB4C:
l0000AB48:
l0000AB44:
l0000AB40:
l0000AB3C:
l0000B700:
	dwArg30 = dwArg30 - 1<32>
l0000AA8A:
l0000AA92:
	dwArg34 = r9_168
l0000B78E:
	branch r7 == 0<32> l0000B7AA
l0000B792:
	branch dwArg1C == 0<32> l0000B7AA
l0000B798:
	Mem1969[r7:byte] = SLICE(r9_120, byte, 0)
l0000B7AA:
	r1Out = dwLoc08
	r2Out = dwLoc0C
	r3Out = dwLoc10
	r6Out = dwLoc1C
	r12Out = dwLoc047C
	lrOut = lr
	return dwLoc04
fn0000ACB0_exit:


void fn0000AE3E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AE42
// MayUse: 
// LiveOut:
// Trashed: r1 r3
// Preserved: sp
fn0000AE3E_entry:
l0000AE3E:
l0000AE40_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg24 = <invalid>
	stackArg64 = <invalid>
	fn0000AE42(r4, r6, stackArg24, stackArg64, out r1_9, out r2_10, out r3_11, out r6_12, out r12_13, out lr_14)
	return
fn0000AE3E_exit:


word32 fn0000AE42(word32 r4, word32 r6, word32 dwArg18, word32 dwArg40, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
//      fn0000ACB0
//      fn0000AEFA
// MayUse:  r4:[0..31] r6:[0..31] Stack +0018:[0..31] Stack +0040:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000AE42_entry:
l0000AE42:
	branch r4 != 0<32> l0000AE58
l0000AE58:
	lr_10 = fp + 0x44B<32>
l0000AE52:
	lr_10 = fp + 0x44A<32>
l0000AE60:
	Mem20[lr_10 + 1<i32>:byte] = 0<8>
	Mem26[lr_10:byte] = SLICE(dwArg40, byte, 0)
	call Mem26[r6 + 440<i32>:word32] (retsize: 0;)
		uses: Mem:Mem26,r10:fp + 0x448<32>,r11:0x400<32>,r12:fp + 0x48<32>,r4:r4,r6:r6,r8:dwArg40,r9:dwArg18,Stack +0018:dwArg18,Stack +0040:dwArg40
		defs: r1:r1_43,r12:r12_37,r3:r3_42,r6:r6_38,r7:r7_41,sp:sp_30,VNZC:VNZC_45
	branch SLICE(VNZC_45, bool, 1) l0000B77E
l0000AE7A_thunk_fn0000ACB0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	stackArg4 = <invalid>
	stackArg8 = <invalid>
	stackArg12 = <invalid>
	stackArg16 = <invalid>
	stackArg20 = <invalid>
	stackArg24 = <invalid>
	stackArg28 = <invalid>
	stackArg32 = <invalid>
	stackArg36 = <invalid>
	stackArg40 = <invalid>
	stackArg44 = <invalid>
	stackArg48 = <invalid>
	stackArg52 = <invalid>
	stackArg56 = <invalid>
	r0_61 = fn0000ACB0(r6_116, r7, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg24, stackArg28, stackArg32, stackArg36, stackArg40, stackArg44, stackArg48, stackArg52, stackArg56, out r1_60, out r2_57, out r3_59, out r6_55, out r12_54, out lr_50)
	r1Out = r1_60
	r2Out = r2_57
	r3Out = r3_59
	r6Out = r6_55
	r12Out = r12_54
	lrOut = lr_50
	return r0_61
l0000AE7E:
	r10_65 = Mem26[sp_108 + 56<i32>:word32] + (r12_37 - 1<32>)
	r2_68 = max<int32>(r10_65, 0<32>) + (r12_37 - 1<32>)
	r4_110 = Mem26[sp_108 + 44<i32>:word32]
	r5_117 = r12_37 - 1<32>
	branch r2_68 >=u Mem26[sp_108 + 28<i32>:word32] + r4_110 l0000B79C
l0000AE98_thunk_fn0000ACB0:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg0 = <invalid>
	stackArg4 = <invalid>
	stackArg8 = <invalid>
	stackArg12 = <invalid>
	stackArg16 = <invalid>
	stackArg20 = <invalid>
	stackArg24 = <invalid>
	stackArg28 = <invalid>
	stackArg32 = <invalid>
	stackArg36 = <invalid>
	stackArg40 = <invalid>
	stackArg44 = <invalid>
	stackArg48 = <invalid>
	stackArg52 = <invalid>
	stackArg56 = <invalid>
	r0_88 = fn0000ACB0(r6_116, r7, stackArg0, stackArg4, stackArg8, stackArg12, stackArg16, stackArg20, stackArg24, stackArg28, stackArg32, stackArg36, stackArg40, stackArg44, stackArg48, stackArg52, stackArg56, out r1_87, out r2_84, out r3_86, out r6_82, out r12_81, out lr_77)
	r1Out = r1_87
	r2Out = r2_84
	r3Out = r3_86
	r6Out = r6_82
	r12Out = r12_81
	lrOut = lr_77
	return r0_88
l0000AE9C:
	branch r7_124 == 0<32> l0000AEF6
l0000AEA0:
	branch r3_42 != 0<32> l0000AEC6
l0000AEA4:
	branch r10_65 <= 0<32> l0000AEC6
l0000AEAA:
	r4_97 = r7_124 + r10_65
	branch Mem26[sp_108 + 52<i32>:word32] != 0x30<32> l0000AEBC
l0000AEBC:
l0000AEB6:
l0000AEC0:
	call Mem26[r6_116 + 44<i32>:word32] (retsize: 0;)
		uses: Mem:Mem26,r4:r4_97,r6:r6_38
		defs: r1:r1_121,r4:r4_110,r5:r5_117,r6:r6_116,sp:sp_108
	r7_124 = r4_110
l0000AEC6:
	branch r1_121 == 0<32> l0000AED8
l0000AED8:
	branch Mem26[sp_108 + 60<i32>:word32] == 0<32> l0000AEEC
l0000AEEC:
	call Mem26[r6_116 + 36<i32>:word32] (retsize: 0;)
		uses: Mem:Mem26,r10:r5_134,r12:r7_136,r4:r4_139,r6:r6_138
l0000AEE2:
	fn0000A998(r10, r11, r12)
l0000AECA:
	fn0000A968(r10, r11, r12)
l0000AEF4:
l0000AEF6:
l0000AEF8_thunk_fn0000AEFA:
	r0_194 = fn0000AEFA(out r1_193, out r2_190, out r3_192, out r6_188, out r12_187, out lr_183)
	r1Out = r1_193
	r2Out = r2_190
	r3Out = r3_192
	r6Out = r6_188
	r12Out = r12_187
	lrOut = lr_183
	return r0_194
fn0000AE42_exit:


word32 fn0000AEFA(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
//      fn0000AE42
//      fn0000AF76
// MayUse: 
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000AEFA_entry:
l0000AEFA:
l0000AEFC_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	stackArg24 = <invalid>
	stackArg64 = <invalid>
	r0_17 = fn0000AE42(r4, r6, stackArg24, stackArg64, out r1_16, out r2_15, out r3_14, out r6_12, out r12_6, out lr_19)
	r1Out = r1_16
	r2Out = r2_15
	r3Out = r3_14
	r6Out = r6_12
	r12Out = r12_6
	lrOut = lr_19
	return r0_17
fn0000AEFA_exit:


void fn0000AF6C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
//      fn0000AF76
// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
// Terminates process
fn0000AF6C_exit:
fn0000AF6C_entry:
l0000AF6C:
l0000AF6E:


word32 fn0000AF76(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
//      fn0000AEFA
// MayUse: 
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000AF76_entry:
l0000AF76:
l0000AF76_thunk_fn0000AEFA:
	r0_20 = fn0000AEFA(out r1_11, out r2_17, out r3_19, out r6_16, out r12_8, out lr_7)
	r1Out = r1_11
	r2Out = r2_17
	r3Out = r3_19
	r6Out = r6_16
	r12Out = r12_8
	lrOut = lr_7
	return r0_20
fn0000AF76_exit:


word32 fn0000B7B2(word32 r9, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  r9:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B7B2_entry:
l0000B7B2:
	r0_37 = fn0000A9DE(r9, out r1_38, out r2_42, out r3_43, out r12_41, out lr_36)
	r1Out = r1_38
	r2Out = r2_42
	r3Out = r3_43
	r12Out = r12_41
	lrOut = lr_36
	return r0_37
fn0000B7B2_exit:


word32 fn0000B7D4(word32 r10, word32 r11, word32 r12, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004374
//      fn00004864
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B7D4_entry:
l0000B7D4:
	Mem28[r12 + 0x14<32>:byte] = 0<8>
	r7_21 = r12 + 0x14<32>
	r5_r4_90 = SEQ(r11, r10) (alias)
l0000B7E6:
	r7_21 = r7_21 - 1<i32>
	Mem54[r7_21:byte] = SLICE(fn00010A4C(r5_r4_90, 0xA<32>, 0<32>), byte, 0) + 0x30<8>
	r11_r10_99 = fn000107C0(0xA<32>, 0<32>, SLICE(r5_r4_90, word32, 0), SLICE(r5_r4_90, word32, 32), out r8_59, out r9_60, out lr_55)
	r10_56 = SLICE(r11_r10_99, word32, 0) (alias)
	r11_57 = SLICE(r11_r10_99, word32, 32) (alias)
	r5_r4_90 = r11_r10_99 (alias)
	branch r11_57 != SLICE(cond(r10_56 - 0<32>), bool, 0) l0000B7E6
l0000B80E:
	r9Out = r9_60
	r10Out = r10_56
	r11Out = r11_57
	r12Out = r7_21
	lrOut = lr_55
	return r8_59
fn0000B7D4_exit:


void fn0000B818(word32 r0, word32 r1, word32 r2, word32 r10, word32 r11, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006B5C
// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000B818_entry:
l0000B818:
	branch fn0000D220(r0, r1, r2, r10, r11, fp - 0x28<32>, pc, out r0_49, out r1_50, out r2_54, out r3_113, out r6_58, out r12_53, out lr_47, out pc_48) l0000B876
l0000B844:
	call Mem37[r6_58 + 432<i32>:word32] (retsize: 0;)
		uses: lr:lr_47,Mem:Mem37,pc:pc_48,r0:r0_49,r1:r1_50,r10:0x7D0<32>,r11:1<32>,r12:r12_53,r2:r2_54,r3:r3_55,r4:fp - 0x7F8<32>,r5:0x7D0<32>,r6:r6_58,r7:r12_53,r9:r3_55
		defs: lr:lr_81,pc:pc_87,r0:r0_73,r1:r1_74,r10:r10_83,r11:r11_86,r12:r12_85,r2:r2_75,r3:r3_76,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80,sp:sp_72
	branch r12_85 >=u r5_78 l0000B86A
l0000B86A:
	branch r5_78 >= 0<32> l0000B880
l0000B880:
l0000B86E:
	call Mem37[r6_79 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_81,Mem:Mem37,pc:pc_87,r0:r0_73,r1:r1_74,r10:r10_83,r11:r11_86,r12:r12_85,r2:r2_75,r3:r3_76,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80
		defs: r12:r12_107,r3:r3_98
	Mem112[r12_107:word32] = 0x4B<32>
l0000B876:
	fn0000BD82(r3_113)
l0000B852:
	branch r7_80 == sp_72 l0000B87C
l0000B87C:
l0000B856:
	call Mem37[r6_79 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_81,Mem:Mem37,pc:pc_87,r0:r0_73,r1:r1_74,r10:r10_83,r11:r11_86,r12:r12_85,r2:r2_75,r3:r3_76,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80
		defs: lr:lr_132,pc:pc_138,r0:r0_124,r1:r1_125,r10:r10_134,r11:r11_137,r12:r12_136,r2:r2_126,r4:r4_128,r6:r6_130,r7:r7_131
	call Mem37[r6_130 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_132,Mem:Mem37,pc:pc_138,r0:r0_124,r1:r1_125,r10:r10_134,r11:r11_137,r12:r7_131,r2:r2_126,r3:Mem37[r12_136:word32],r4:r4_128,r5:r12_136,r6:r6_130,r7:r7_131
		defs: r3:r3_147,r5:r5_149
	Mem160[r5_149:word32] = r3_147
l0000B882:
	return
fn0000B818_exit:


byte fn0000B88C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000418C
//      fn00006998
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: VN lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B88C_entry:
l0000B88C:
	r6_19 = 0x0000B890<p32> - Mem17[0x0000B8E6<p32>:word32]
	r12_30 = fn0000BD8C(r0, r1, r2, r3, r4, r5, r6_19, r12, lr, out lr_27)
	branch Mem17[r12_30:byte] != 0x55<8> l0000B8DE
l0000B8A2:
	branch Mem17[r12_30 + 1<i32>:byte] != 0x54<8> l0000B8DE
l0000B8AC:
	branch Mem17[r12_30 + 2<i32>:byte] != 0x46<8> l0000B8DE
l0000B8B6:
	branch Mem17[r12_30 + 3<i32>:byte] != 0x2D<8> l0000B8DE
l0000B8C0:
	branch Mem17[r12_30 + -4<i32>:byte] != 0x38<8> l0000B8DE
l0000B8CA:
	branch Mem17[r12_30 + -3<i32>:byte] != 0<8> l0000B8DE
l0000B8DE:
	call Mem17[r6_19 + 492<i32>:word32] (retsize: 0;)
		uses: lr:lr_27,Mem:Mem17,r0:r0,r1:r1,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_19,r7:r12
		defs: lr:lr_78,r0:r0_83,r1:r1_84,r10:r10_87,r11:r11_82,r12:r12_79,r2:r2_85,r3:r3_86
	r0Out = r0_83
	r1Out = r1_84
	r2Out = r2_85
	r3Out = r3_86
	r10Out = r10_87
	r11Out = r11_82
	r12Out = r12_79
	lrOut = lr_78
	return <invalid>
l0000B8D4:
	fn0000C058(r0, r12_30, r12, out r0_96, out r1_97, out r2_99, out r3_100, out r10_108, out r11_109, out r12_98, out lr_107)
	r0Out = r0_96
	r1Out = r1_97
	r2Out = r2_99
	r3Out = r3_100
	r10Out = r10_108
	r11Out = r11_109
	r12Out = r12_98
	lrOut = lr_107
	return <invalid>
fn0000B88C_exit:


word32 fn0000B904(word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003210
//      fn0000A614
// MayUse:  lr:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B904_entry:
l0000B904:
	r6_19 = 0x0000B908<p32> - Mem17[0x0000B91A<p32>:word32]
	call Mem17[r6_19 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r11:r11,r4:r4,r5:r5,r6:r6_19,r7:r11,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r12:r12_64,r4:r4_24,r5:r5_25,r6:r6_26,r7:r7_27,r9:r9_66,VNZC:VNZC_30
	branch SLICE(VNZC_30, bool, 1) l0000B91A
l0000B912:
	branch r7_27 == 0<32> l0000B91A
l0000B916:
	fn00006CAC(r4_24, r5_25, r6_26, r7_27, lr_28, out r5_90, out r6_91, out r7_92, out r8_93, out r9_44, out r10_94, out r11_95, out r12_38, out lr_28)
l0000B91A:
	r12Out = r12_38
	lrOut = lr_28
	return r9_44
fn0000B904_exit:


word32 fn0000B95C(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003094
//      fn000030B4
//      fn00003120
//      fn00003334
//      fn0000511C
//      fn00009A5C
//      fn00009B5C
//      fn00009EDC
//      fn0000B978
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B95C_entry:
l0000B95C:
	r6_19 = 0x0000B960<p32> - Mem17[0x0000B972<p32>:word32]
	call Mem17[r6_19 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r12:r12,r4:r4,r5:r5,r6:r6_19,r7:r12,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r11:r11_64,r12:r12_29,r4:r4_24,r5:r5_25,r6:r6_26,r7:r7_27,r8:r8_65,r9:r9_66,VNZC:VNZC_30
	branch SLICE(VNZC_30, bool, 1) l0000B972
l0000B96A:
	branch r7_27 == 0<32> l0000B972
l0000B96E:
	fn00006CAC(r4_24, r5_25, r6_26, r7_27, lr_28, out r5_92, out r6_93, out r7_94, out r8_43, out r9_44, out r10_95, out r11_37, out r12_29, out lr_28)
l0000B972:
	r9Out = r9_44
	r11Out = r11_37
	r12Out = r12_29
	lrOut = lr_28
	return r8_43
fn0000B95C_exit:


word32 fn0000B978(word32 r0, word32 r1, word32 r2, word32 r4, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A920
//      fn0000B994
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r7:[0..31]
// LiveOut: lr r11 r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000B978_entry:
l0000B978:
	r6_31 = 0x0000B97C<p32> - Mem29[0x0000B992<p32>:word32]
	fn0000B95C(r4, r11, r6_31, r7, r11, lr, out r9_93, out r11_94, out r12_42, out lr_38)
	call Mem29[r6_31 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_38,Mem:Mem29,r0:r0,r1:r1,r10:r11,r11:r12,r12:r12_42,r2:r2,r3:r12,r4:r4,r5:r11,r6:r6_31,r7:r7
		defs: lr:lr_60,r11:r11_62,r12:r12_61
	r12Out = r12_61
	lrOut = lr_60
	return r11_62
fn0000B978_exit:


word32 fn0000B994(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003120
//      fn00003334
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r8 r9
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B994_entry:
l0000B994:
	r6_19 = 0x0000B998<p32> - Mem17[0x0000B9AA<p32>:word32]
	call Mem17[r6_19 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r0:r0,r1:r1,r12:r12,r2:r2,r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r0:r0_59,r1:r1_60,r10:r10_63,r12:r12_29,r2:r2_61,r4:r4_24,r5:r5_25,r7:r7_27,r8:r8_64,r9:r9_65
	r11_41 = fn0000B978(r0, r1, r2, r4_24, r7_27, r12_29 + 1<32>, r5_25, lr_28, out r12_42, out lr_38)
	r1Out = r1_60
	r2Out = r2_61
	r8Out = r8_64
	r9Out = r9_65
	r10Out = r10_63
	r11Out = r11_41
	r12Out = r12_42
	lrOut = lr_38
	return r0_59
fn0000B994_exit:


void fn0000B9C8(word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000B9C8_entry:
l0000B9C8:
	r6_101 = 0x0000B9CE<p32> - Mem17[0x0000BA3C<p32>:word32]
	lr_106 = r12 - 1<32>
	r7_105 = r8
	r5_104 = Mem17[Mem17[r6_101 + 192<i32>:word32]:word32]
	r12_107 = r10
	branch r12 >u 4<32> || r12 <u 1<32> l0000BA3A
l0000B9E4:
	switch (r12 - 1<32>) { l0000B9EC l0000B9F0 l0000B9F4 l0000B9F8 }
l0000B9F8:
l0000BA08:
	r10_34 = Mem17[r6_101 + 688<i32>:word32]
l0000B9F4:
l0000B9F0:
l0000B9FC:
	r10_34 = Mem17[r6_101 + 696<i32>:word32]
l0000B9EC:
l0000BA02:
	r10_34 = Mem17[r6_101 + 692<i32>:word32]
l0000BA0C:
	branch r11 >= 0<32> l0000BA20
l0000BA20:
	r8_44 = r11 << 4<32>
	r9_50 = Mem17[(r11 << 4<32>) + r9:word32]
	lr_52 = Mem17[r6_101 + 352<i32>:word32]
l0000BA10:
	r8_44 = 0<32>
	lr_52 = Mem17[r6_101 + 352<i32>:word32] + r11
	r9_50 = fp - 0x18<32>
l0000BA2C:
	call Mem80[r6_101 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_79,Mem:Mem80,r10:r10_87,r11:0<32>,r12:r5_26,r4:r4,r5:r5_26,r6:r6_20,r7:r8,r8:r8_85,r9:r9_76,Stack +0000:lr_79,Stack +0004:r9_76,Stack +0008:r8
		defs: lr:lr_93,r10:r10_96,r11:r11_98,r12:r12_94,r4:r4_89,r5:r5_90,r6:r6_91,r7:r7_92,r8:r8_95,r9:r9_99
l0000BA3A:
	call Mem102[r6_101 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_106,Mem:Mem102,r10:r10_109,r11:r11_110,r12:r12_107,r4:r4_103,r5:r5_104,r6:r6_101,r7:r7_105,r8:r8_108,r9:r9_111
		defs: lr:lr_118,pc:pc_122,r10:r10_121,r11:r11_123,r12:r12_119,r4:r4_114,r5:r5_115,r6:r6_116,r7:r7_117,r8:r8_120,r9:r9_124,VNZC:VNZC_125
	branch SLICE(VNZC_125, bool, 2) l0000BA40_thunk_fn0000BA44
l0000BA40_thunk_fn0000BA44:
	fn0000BA44(r11_123, r12_119)
	return
l0000BA40_1:
	call CONVERT(Mem102[pc_122 + -34<i32>:byte], byte, word32) (retsize: 0;)
		uses: lr:lr_118,Mem:Mem102,r10:r10_121,r11:r11_123,r12:r12_119,r4:r4_114,r5:r5_115,r6:r6_116,r7:r7_117,r8:r8_120,r9:r9_124
	return
fn0000B9C8_exit:


word32 fn0000BA44(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B9C8
//      fn0000BA66
//      fn0000BA8C
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
fn0000BA44_entry:
l0000BA44:
	r11_11 = Mem5[r12:word32]
	branch 0xFFFFFFFF<32> /u r11 >=u r11_11 l0000BA5A
l0000BA5A:
	Mem16[r12:word32] = r11 * r11_11
	r9_15 = 0<32>
l0000BA54:
	Mem18[r12:word32] = 0xFFFFFFFF<32>
	r9_15 = 1<32>
l0000BA62:
	return r9_15
fn0000BA44_exit:


word32 fn0000BA66(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BA8C
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r12 r8 r9
// Preserved: r0 r1 r11 r2 r3 r4 r5 r6 r7 sp
fn0000BA66_entry:
l0000BA66:
	r7_38 = r10
	r5_39 = 0<32>
l0000BA7A:
	r7_38 = r7_38 - 1<32>
	branch r7_38 != 0xFFFFFFFF<32> l0000BA76
l0000BA76:
	r5_39 = r5_39 | fn0000BA44(r11, r12)
l0000BA84:
	return r5_39
fn0000BA66_exit:


void fn0000BA8C(word32 r1, word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000BA8C_entry:
l0000BA8C:
	sp_30 = fp - 0x2C<32>
	r6_32 = 0x0000BA92<p32> - Mem29[0x0000BB94<p32>:word32]
	r2_112 = r10
	r5_36 = r12
	r7_38 = r11
	r0_104 = r9
	r3_116 = r8
	branch r10 <=u 0x24<32> l0000BAB8
l0000BAA6:
	call Mem29[r6_32 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r9,r1:r1,r10:0x53<32>,r11:Mem29[r6_32 + 684<i32>:word32],r12:Mem29[r6_32 + 680<i32>:word32],r2:r10,r3:r8,r4:r4,r5:r12,r6:r6_32,r7:r11,r8:r8,r9:0x0000BC84<p32>
		defs: lr:lr_59,r0:r0_51,r1:r1_52,r11:r11_62,r12:r12_61,r2:r2_53,r3:r3_54,r4:r4_55,r5:r5_56,r6:r6_57,r7:r7_58,sp:sp_50
l0000BAB8:
	r9_70 = CONVERT(Mem29[r5_36:byte], byte, word32)
	r10_71 = Mem29[Mem29[r6_32 + 156<i32>:word32]:word32]
	r8_73 = sp_30 + 4<32>
	branch r7_38 == 0<32> l0000BACA
l0000BAC6_1:
	r1 = r7_38
l0000BACA:
	branch r7_38 != 0<32> l0000BACE
l0000BACA_1:
	r1 = r8_73
l0000BACE:
	r8_83 = r5_36
l0000BAD4:
	r7_87 = CONVERT(Mem29[r10_71 + r9_70 * 2<32>:word16], word16, word32)
	r8_83 = r8_83 + 1<32>
	branch (r7_87 & 0x20<32>) != 0<32> l0000BAD2
l0000BAD2:
	r9_70 = CONVERT(Mem29[r8_83:byte], byte, word32)
l0000BAE0:
	branch SLICE(r9_70, byte, 0) == 0x2D<8> l0000BC7C
l0000BAEA:
	call Mem29[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,Mem:Mem29,r0:r0_104,r1:r1_106,r10:r10_71,r11:r11_133,r12:r12_129,r2:r2_112,r3:r3_116,r4:r4_120,r5:r5_69,r6:r6_66,r7:r7_87 & 0x20<32>,r8:0x2D<32>,r9:r9_85
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r12:r12_148,r2:r2_140,r3:r3_141,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
	Mem154[r12_148:word32] = r7_145
	call Mem154[r6_144 + 536<i32>:word32] (retsize: 0;)
		uses: lr:lr_146,Mem:Mem154,r0:r0_138,r1:r1_139,r10:r2_140,r11:r1_139,r12:r5_143,r2:r2_140,r3:r3_141,r4:r12_148,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
		defs: lr:lr_167,r0:r0_159,r1:r1_160,r10:r10_168,r12:r12_169,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r9:r9_171,sp:sp_158
	Mem174[sp_158:word32] = r12_169
	r11_175 = Mem174[r1_160:word32]
	r8_176 = r12_169
	branch r11_175 != r5_164 l0000BB26
l0000BB26:
	r12_179 = Mem174[r4_163:word32]
	branch r12_179 != 0<32> l0000BB30
l0000BB30:
	branch r12_179 != 0x22<32> l0000BC7C
l0000BB38:
	r4_184 = 1<32>
l0000BB2C:
	r4_184 = r12_179
l0000BB3A:
	branch r3_162 == 0<32> l0000BC78
l0000BB06:
	branch r3_162 == 0<32> l0000BC7C
l0000BB0C:
	r11_191 = CONVERT(Mem174[r11_175:byte], byte, word32)
	branch r11_191 == 0<32> l0000BC7C
l0000BB14:
	call Mem174[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_167,Mem:Mem174,r0:r0_159,r1:r1_160,r10:r10_168,r11:r11_191,r12:r3_162,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r8:r12_169,r9:r9_171
		defs: lr:lr_204,r0:r0_196,r1:r1_197,r10:r10_205,r2:r2_198,r3:r3_199,r6:r6_202,r7:r7_203,r9:r9_208,sp:sp_195,VNZC:VNZC_210
	branch SLICE(VNZC_210, bool, 1) l0000BC7C
l0000BC7C:
l0000BB1E:
	Mem215[sp_158:word32] = 1<32>
	r8_176 = 1<32>
	r4_184 = r7_203
l0000BB40:
	r5_220 = Mem218[r1_160:word32]
	r7_221 = CONVERT(Mem218[r5_220:byte], byte, word32)
	branch r7_221 == 0<32> l0000BC76
l0000BB4A:
	call Mem218[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_235,Mem:Mem218,r0:r0_229,r1:r1_216,r10:r10_237,r11:r7_221,r12:r3_225,r2:r2_231,r3:r3_225,r4:r4_233,r5:r5_220,r6:r6_227,r7:r7_221,r8:r8_241,r9:r9_239
		defs: lr:lr_254,r0:r0_246,r1:r1_247,r10:r10_255,r2:r2_248,r3:r3_249,r4:r4_250,r5:r5_251,r6:r6_252,r7:r7_253,r8:r8_259,r9:r9_258,sp:sp_245,VNZC:VNZC_260
	branch SLICE(VNZC_260, bool, 1) l0000BC58
l0000BB56:
	call Mem218[r6_252 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_254,Mem:Mem218,r0:r0_246,r1:r1_247,r10:r10_255,r11:0x30<32>,r12:r3_249,r2:r2_248,r3:r3_249,r4:r4_250,r5:r5_251,r6:r6_252,r7:r7_253,r8:r8_259,r9:r9_258
		defs: r0:r0_265,r1:r1_266,r5:r5_270,r7:r7_272,sp:sp_264,VNZC:VNZC_279
	branch SLICE(VNZC_279, bool, 1) l0000BB98
l0000BB60:
	r9_281 = CONVERT(Mem218[r5_270 + 1<i32>:byte], byte, word32)
	branch SLICE(r9_281, byte, 0) == 0x42<8> l0000BB7C
l0000BB6A:
	branch SLICE(r9_281, byte, 0) == 0x44<8> l0000BB7C
l0000BB7C:
	r11_288 = 0x3E8<32>
	r5_289 = 2<32>
l0000BB72:
	branch SLICE(r9_281, byte, 0) != 0x69<8> l0000BB98
l0000BB7A:
l0000BB84:
	branch Mem218[r5_270 + 2<i32>:byte] != 0x42<8> l0000BB98
l0000BB98:
	r11_288 = 0x400<32>
	r5_289 = 1<32>
l0000BB8C:
	r11_288 = 0x400<32>
	r5_289 = 3<32>
l0000BB9E:
	branch SLICE(r7_272, byte, 0) == 0x42<8> l0000BC26
l0000BC26:
	r11_306 = 0x400<32>
l0000BBA6:
	branch SLICE(r7_272, byte, 0) == 0x45<8> l0000BC30
l0000BC30:
	r10_310 = 6<32>
l0000BBAE:
	branch SLICE(r7_272, byte, 0) == 0x47<8> l0000BC34
l0000BBB6:
	branch SLICE(r7_272, byte, 0) == 0x4B<8> l0000BC38
l0000BBBE:
	branch SLICE(r7_272, byte, 0) == 0x4D<8> l0000BC3C
l0000BBC6:
	branch SLICE(r7_272, byte, 0) == 0x50<8> l0000BC40
l0000BC40:
	r10_310 = 5<32>
l0000BBCE:
	branch SLICE(r7_272, byte, 0) == 0x54<8> l0000BC44
l0000BBD6:
	branch SLICE(r7_272, byte, 0) == 0x59<8> l0000BC4C
l0000BC4C:
	r10_310 = 8<32>
l0000BBDE:
	branch SLICE(r7_272, byte, 0) == 0x5A<8> l0000BC50
l0000BC50:
	r10_310 = 7<32>
l0000BBE6:
	branch SLICE(r7_272, byte, 0) == 0x62<8> l0000BC20
l0000BC20:
	r11_306 = 0x200<32>
l0000BBEE:
	branch SLICE(r7_272, byte, 0) == 0x63<8> l0000BC5C
l0000BC5C:
l0000BBF6:
	branch SLICE(r7_272, byte, 0) == 0x67<8> l0000BC34
l0000BC34:
	r10_310 = 3<32>
l0000BBFE:
	branch SLICE(r7_272, byte, 0) == 0x6B<8> l0000BC38
l0000BC38:
	r10_310 = 1<32>
l0000BC06:
	branch SLICE(r7_272, byte, 0) == 0x6D<8> l0000BC3C
l0000BC3C:
	r10_310 = 2<32>
l0000BC0E:
	branch SLICE(r7_272, byte, 0) == 0x74<8> l0000BC44
l0000BC44:
	r10_310 = 4<32>
l0000BC52:
	fn0000BA66(r10_310, r11_288, sp_158)
l0000BC16:
	branch SLICE(r7_272, byte, 0) != 0x77<8> l0000BC58
l0000BC58:
l0000BC1E:
l0000BC48:
	r11_306 = 2<32>
l0000BC2A:
	fn0000BA44(r11_306, sp_158)
l0000BC5E:
	r8_445 = Mem218[r1_266:word32] + r5_289
	Mem446[r1_266:word32] = r8_445
	branch Mem446[r8_445:byte] == 0<8> l0000BC76
l0000BC72_1:
l0000BC76:
	r8_176 = Mem457[sp_158:word32]
l0000BC78:
	Mem474[r0_159:word32] = r8_176
l0000BC7E:
	return
fn0000BA8C_exit:


word32 fn0000BC98(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006768
// MayUse:  r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8
// Preserved: sp
fn0000BC98_entry:
l0000BC98:
	branch r12 >u 0x39<32> || r12 <u 0x30<32> l0000BCA4
l0000BCA4:
	return CONVERT((r12 & 0xFFFFFFDF<u32>) <=u 0x5A<32>, bool, word32)
l0000BCA2:
	return 1<32>
fn0000BC98_exit:


void fn0000BCB0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006768
//      fn000067DC
// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn0000BCB0_entry:
l0000BCB0:
	return
fn0000BCB0_exit:


void fn0000BCDC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000067DC
//      fn00006814
// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn0000BCDC_entry:
l0000BCDC:
	return
fn0000BCDC_exit:


void fn0000BD82(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B818
// MayUse:  r12:[0..31]
// LiveOut:
// Trashed: VNZC r8
// Preserved: r12 sp
fn0000BD82_entry:
l0000BD82:
	Mem7[r12:word16] = Mem0[r12:int16] | 8<16>
	return
fn0000BD82_exit:


word32 fn0000BD8C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B88C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000BD8C_entry:
l0000BD8C:
	r6_32 = 0x0000BD92<p32> - Mem29[0x0000BE98<p32>:word32]
	call Mem29[r6_32 + 320<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r12:0xA<32>,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r7,Stack +0000:dwLoc94,Stack +0070:lr,Stack +0074:r7,Stack +0078:r6,Stack +007C:r5,Stack +0080:r4,Stack +0084:r3,Stack +0088:r2,Stack +008C:r1,Stack +0090:r0
		defs: lr:lr_44,r0:r0_36,r1:r1_37,r12:r12_45,r2:r2_38,r3:r3_39,r4:r4_40,r6:r6_42,r7:r7_43,sp:sp_35
	r5_52 = Mem29[Mem29[r6_162 + 348<i32>:word32]:word32]
	r8_53 = Mem29[r6_162 + 252<i32>:word32]
	branch r12_45 != 0<32> l0000BDAA
l0000BDA6_1:
	r12_45 = r8_53
l0000BDAA:
	Mem59[sp_35:word32] = r12_45
	branch r5_52 != 0<32> l0000BF94
l0000BDB2:
	call Mem59[r6_162 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_44,Mem:Mem59,r0:r0_36,r1:r1_37,r12:Mem59[r6_42 + 676<i32>:word32],r2:r2_38,r3:r3_39,r4:r4_40,r5:r5_52,r6:r6_42,r7:r7_43
		defs: lr:lr_81,r0:r0_73,r1:r1_74,r12:r12_82,r2:r2_75,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80,VNZC:VNZC_87
	r3_88 = r12_82
	branch SLICE(VNZC_87, bool, 1) l0000BDC6
l0000BDBE:
	branch Mem59[r12_82:byte] != SLICE(r5_78, byte, 0) l0000BDCA
l0000BDC6:
	r3_88 = Mem59[r6_79 + 672<i32>:word32]
l0000BDCA:
	call Mem59[r6_79 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_81,Mem:Mem59,r0:r0_73,r1:r1_74,r12:r3_96,r2:r2_75,r3:r3_96,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80
		defs: lr:lr_125,r0:r0_117,r1:r1_118,r12:r12_126,r2:r2_119,r3:r3_120,r4:r4_121,r6:r6_123,VNZC:VNZC_131
	branch SLICE(VNZC_131, bool, 1) l0000BDD8
l0000BDD8:
	r7_139 = CONVERT(Mem59[r3_120 + r12_126 + -1<i32>:byte] != 0x2F<8>, bool, word32)
l0000BDD4:
	r7_139 = r12_126
l0000BDE8:
	call Mem59[r6_123 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,Mem:Mem59,r0:r0_117,r1:r1_118,r12:r12_126 + 0xE<32> + r7_143,r2:r2_119,r3:r3_120,r4:r4_121,r5:r12_126,r6:r6_123,r7:r7_143
		defs: lr:lr_164,r1:r1_157,r12:r12_165,r2:r2_158,r3:r3_159,r4:r4_160,r5:r5_161,r6:r6_162,r7:r7_163,VNZC:VNZC_170
	r0_171 = r12_165
	branch SLICE(VNZC_170, bool, 1) l0000BDFC
l0000BDFC:
	call Mem59[r6_162 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_164,Mem:Mem59,r0:r12_165,r1:r1_157,r10:r5_161,r11:r3_159,r2:r2_158,r3:r3_159,r4:r4_160,r5:r5_161,r6:r6_162,r7:r7_163
		defs: r0:r0_176,r1:r1_177,r2:r2_178,r4:r4_180,r5:r5_181,r6:r6_182,r7:r7_183
	branch r7_183 == 0<32> l0000BE0E
l0000BE08:
	Mem194[r5_181:byte] = 0x2F<8>
l0000BE0E:
	r9_197 = Mem196[r6_182 + 668<i32>:word32]
	r3_201 = CONVERT(Mem196[r9_197 + 12<i32>:byte], byte, word32)
	r5_202 = CONVERT(Mem196[r9_197 + 13<i32>:byte], byte, word32)
	r11_203 = Mem196[r6_182 + 664<i32>:word32]
	r8_205 = r0_176 + r5_181 + r7_183
	r10_207 = Mem196[r9_197:word32]
	lr_208 = Mem196[r9_197 + 4<i32>:word32]
	r9_210 = Mem196[r9_197 + 8<i32>:word32]
	Mem211[r8_205 + 8<i32>:word32] = r9_210
	Mem212[r8_205 + 13<i32>:byte] = SLICE(r5_202, byte, 0)
	Mem213[r8_205:word32] = r10_207
	Mem214[r8_205 + 4<i32>:word32] = lr_208
	Mem215[r8_205 + 12<i32>:byte] = SLICE(r3_201, byte, 0)
	call Mem215[r6_182 + 392<i32>:word32] (retsize: 0;)
		uses: lr:lr_208,Mem:Mem215,r0:r0_176,r1:r1_177,r10:r10_207,r11:r11_203,r12:r0_176,r2:r2_178,r3:r3_201,r4:r4_180,r5:r5_202,r6:r6_182,r7:r7_183,r8:r8_205,r9:r9_210
		defs: lr:lr_229,r0:r0_221,r1:r1_222,r12:r12_230,r2:r2_223,r3:r3_224,r4:r4_225,r5:r5_226,r6:r6_227,sp:sp_220,VNZC:VNZC_235
	r7_236 = r12_230
	branch SLICE(VNZC_235, bool, 1) l0000BF3C
l0000BE42:
	Mem240[sp_220 + 4<i32>:word32] = 0<32>
	r4_239 = 0<32>
l0000BE48:
	r9_243 = Mem242[r7_236 + 16<i32>:word32]
	branch r9_243 >=u Mem242[r7_236 + 24<i32>:word32] l0000BE56
l0000BE56:
	call Mem242[r6_227 + 332<i32>:word32] (retsize: 0;)
		uses: lr:lr_255,Mem:Mem242,r0:r0_249,r1:r1_250,r12:r7_241,r2:r2_251,r3:r3_252,r4:r4_253,r5:r5_254,r6:r6_248,r7:r7_241
		defs: lr:lr_266,r0:r0_258,r1:r1_259,r12:r12_267,r2:r2_260,r3:r3_261,r4:r4_262,r5:r5_263,r6:r6_264,r7:r7_265
	branch r12_267 == 0xFFFFFFFF<32> l0000BF32
l0000BE50:
	r12_267 = CONVERT(Mem242[r9_243:byte], byte, word32)
	Mem278[r7_236 + 16<i32>:word32] = r9_243 + 1<i32>
l0000BE60:
	branch r12_267 == 0xA<32> l0000BE48
l0000BE64:
	branch r12_267 == 0x20<32> l0000BE48
l0000BE6A:
	branch r12_267 == 9<32> l0000BE48
l0000BE6E:
	branch r12_267 != 0x23<32> l0000BE9C
l0000BE9C:
	call Mem291[r6_227 + 588<i32>:word32] (retsize: 0;)
		uses: lr:lr_298,Mem:Mem291,r0:r0_292,r1:r1_293,r11:r7_288,r2:r2_294,r3:r3_295,r4:r4_296,r5:r5_297,r6:r6_290,r7:r7_288
		defs: lr:lr_309,r0:r0_301,r1:r1_302,r2:r2_303,r4:r4_305,r6:r6_307,r7:r7_308,sp:sp_300
	Mem320[sp_300 - 4<i32>:word32] = sp_300 + 8<32>
	Mem322[sp_300 - 8<i32>:word32] = sp_300 + 0x3C<32>
	call Mem322[r6_307 + 552<i32>:word32] (retsize: 0;)
		uses: lr:lr_309,Mem:Mem322,r0:r0_301,r1:r1_302,r11:Mem322[r6_307 + 660<i32>:word32],r12:r7_308,r2:r2_303,r3:sp_300 + 8<32>,r4:r4_305,r5:sp_300 + 0x3C<32>,r6:r6_307,r7:r7_308
		defs: lr:lr_334,r0:r0_326,r1:r1_327,r12:r12_335,r2:r2_328,r3:r3_329,r4:r4_330,r5:r5_331,r6:r6_332,r7:r7_333
	branch r12_335 <= 1<32> l0000BF32
l0000BEC0:
	call Mem322[r6_227 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_334,Mem:Mem322,r0:r0_326,r1:r1_327,r12:r5_331,r2:r2_328,r3:r3_329,r4:r4_330,r5:r5_331,r6:r6_332,r7:r7_333
		defs: lr:lr_354,r0:r0_346,r12:r12_355,r2:r2_348,r3:r3_349,r4:r4_350,r5:r5_351,r6:r6_352,r7:r7_353
	call Mem322[r6_352 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_354,Mem:Mem322,r0:r0_346,r1:r12_355,r12:r3_349,r2:r2_348,r3:r3_349,r4:r4_350,r5:r5_351,r6:r6_352,r7:r7_353
		defs: lr:lr_372,r0:r0_364,r1:r1_365,r12:r12_373,r3:r3_367,r4:r4_368,r5:r5_369,r6:r6_370,r7:r7_371,sp:sp_363
	r8_380 = r1_365 + r12_373
	branch r4_368 != 0<32> l0000BEE6
l0000BEE6:
	r4_384 = r4_368 + (r8_380 + 2<32>)
	call Mem322[r6_370 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_372,Mem:Mem322,r0:r0_364,r1:r1_365,r11:r4_384 + 1<32>,r12:Mem322[sp_363 + 4<i32>:word32],r2:r12_373,r3:r3_367,r4:r4_384,r5:r5_369,r6:r6_370,r7:r7_371,r8:r8_380 + 2<32>
		defs: lr:lr_397,r0:r0_389,r1:r1_390,r12:r12_398,r2:r2_391,r4:r4_393,r5:r5_394,r6:r6_395,r7:r7_396,sp:sp_388
l0000BED8:
	call Mem322[r6_370 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_372,Mem:Mem322,r0:r0_364,r1:r1_365,r12:r8_380 + 3<32>,r2:r12_373,r3:r3_367,r4:r8_380 + 2<32>,r5:r5_369,r6:r6_370,r7:r7_371
		defs: lr:lr_416,r0:r0_408,r1:r1_409,r12:r12_417,r2:r2_410,r4:r4_412,r5:r5_413,r6:r6_414,r7:r7_415,sp:sp_407
l0000BEF4:
	r3_224 = r12_398
	branch r12_398 != 0<32> l0000BF0C
l0000BF0C:
	r5_430 = r12_398 + r4_393 + r2_223
	call Mem322[r6_227 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_441,Mem:Mem322,r0:r0_439,r1:r1_431,r11:sp_433 + 0x3C<32>,r12:r5_430 + r1_431 - 2<32>,r2:r2_429,r3:r12_423,r4:r4_427,r5:r5_430,r6:r6_437,r7:r7_440
		defs: lr:lr_451,r0:r0_443,r1:r1_444,r2:r2_445,r3:r3_446,r4:r4_447,r5:r5_448,r6:r6_449,r7:r7_450,sp:sp_442
	Mem458[sp_442 + 4<i32>:word32] = r3_446
	call Mem458[r6_449 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_451,Mem:Mem458,r0:r0_443,r1:r1_444,r11:sp_442 + 8<32>,r12:r5_448 - 1<32>,r2:r2_445,r3:r3_446,r4:r4_447,r5:r5_448,r6:r6_449,r7:r7_450
		defs: lr:lr_471,r0:r0_463,r1:r1_464,r2:r2_465,r3:r3_466,r4:r4_467,r5:r5_468,r6:r6_469,r7:r7_470
l0000BEFA:
	r9_478 = Mem322[sp_388 + 4<i32>:word32]
	branch r9_478 == 0<32> l0000BF30
l0000BF30:
	r4_239 = Mem322[sp_388 + 4<i32>:word32]
l0000BF00:
	call Mem322[r6_227 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_441,Mem:Mem322,r0:r0_439,r1:r1_431,r12:r9_478,r2:r2_429,r3:r12_423,r4:r4_427,r5:r5_483,r6:r6_437,r7:r7_440
		defs: lr:lr_493,r0:r0_485,r1:r1_486,r2:r2_487,r3:r3_488,r5:r5_490,r6:r6_491,r7:r7_492,sp:sp_484
	Mem501[sp_484 + 4<i32>:word32] = r3_224
	r4_239 = r3_224
l0000BE74:
	r9_504 = Mem503[r7_236 + 16<i32>:word32]
	branch r9_504 >=u Mem503[r7_236 + 24<i32>:word32] l0000BE82
l0000BE82:
	call Mem503[r6_227 + 332<i32>:word32] (retsize: 0;)
		uses: lr:lr_516,Mem:Mem503,r0:r0_510,r1:r1_511,r12:r7_502,r2:r2_512,r3:r3_513,r4:r4_514,r5:r5_515,r6:r6_509,r7:r7_502
		defs: lr:lr_527,r0:r0_519,r1:r1_520,r12:r12_528,r2:r2_521,r3:r3_522,r4:r4_523,r5:r5_524,r6:r6_525,r7:r7_526
l0000BE7C:
	r12_528 = CONVERT(Mem503[r9_504:byte], byte, word32)
	Mem537[r7_236 + 16<i32>:word32] = r9_504 + 1<i32>
l0000BE88:
	branch r12_528 == 0xFFFFFFFF<32> l0000BE90
l0000BE8C:
	branch r12_528 != 0xA<32> l0000BE74
l0000BE90:
	branch r12_528 != 0xFFFFFFFF<32> l0000BE48
l0000BE94:
l0000BF32:
	call Mem553[r6_227 + 296<i32>:word32] (retsize: 0;)
		uses: lr:lr_574,Mem:Mem553,r0:r0_556,r1:r1_559,r12:r7_546,r2:r2_562,r3:r3_565,r4:r4_568,r5:r5_571,r6:r6_550,r7:r7_546
		defs: lr:lr_589,r0:r0_581,r1:r1_582,r2:r2_583,r3:r3_584,r4:r4_585,r6:r6_587,r7:r7_588,sp:sp_580
	branch r4_225 != 0<32> l0000BF42
l0000BF42:
	r5_598 = Mem553[sp_580 + 4<i32>:word32]
	Mem600[r4_225:byte] = 0<8>
l0000BF3C:
	r5_598 = Mem602[r6_227 + 252<i32>:word32]
l0000BF4A:
	call Mem608[r6_227 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_620,Mem:Mem608,r0:r0_604,r1:r1_609,r12:r0_604,r2:r2_611,r3:r3_613,r4:r4_615,r5:r5_617,r6:r6_607,r7:r7_618
		defs: lr:lr_633,r0:r0_625,r1:r1_626,r2:r2_627,r3:r3_628,r4:r4_629,r5:r5_630,r6:r6_631
l0000BDF6:
	r5_52 = Mem59[r6_162 + 252<i32>:word32]
l0000BF50:
	Mem645[Mem642[r6_162 + 348<i32>:word32]:word32] = r5_52
l0000BF94:
	r7_648 = CONVERT(Mem647[r5_52:byte], byte, word32)
	branch r7_648 != 0<32> l0000BF58
l0000BF58:
	call Mem647[r6_162 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_660,Mem:Mem647,r0:r0_655,r1:r1_656,r2:r2_657,r3:r3_658,r4:r4_659,r5:r5_646,r6:r6_654,r7:r7_648
		defs: lr:lr_670,r0:r0_662,r1:r1_663,r2:r2_664,r3:r3_665,r4:r4_666,r5:r5_667,r6:r6_668,r7:r7_669,VNZC:VNZC_676
	branch SLICE(VNZC_676, bool, 1) l0000BF72
l0000BF5E:
	branch SLICE(r7_669, byte, 0) != 0x2A<8> l0000BF82
l0000BF68:
	branch Mem647[r5_667 + 1<i32>:byte] != 0<8> l0000BF82
l0000BF82:
	call Mem647[r6_668 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_670,Mem:Mem647,r0:r0_662,r1:r1_663,r2:r2_664,r3:r3_665,r4:r4_666,r5:r5_667,r6:r6_668,r7:r7_669
		defs: lr:lr_706,r0:r0_698,r1:r1_699,r12:r12_707,r2:r2_700,r3:r3_701,r4:r4_702,r5:r5_703,r6:r6_704,r7:r7_705
	r5_713 = r5_703 + r12_707
	call Mem647[r6_704 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_706,Mem:Mem647,r0:r0_698,r1:r1_699,r12:r5_713 + 1<32>,r2:r2_700,r3:r3_701,r4:r4_702,r5:r5_713 + 1<32>,r6:r6_704,r7:r7_705
		defs: lr:lr_726,r0:r0_718,r1:r1_719,r12:r12_727,r2:r2_720,r3:r3_721,r4:r4_722,r5:r5_723,r6:r6_724
	r5_52 = r5_723 + r12_727 + 1<32>
l0000BF72:
	call Mem647[r6_668 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_670,Mem:Mem647,r0:r0_662,r1:r1_663,r12:r5_667,r2:r2_664,r3:r3_665,r4:r4_666,r5:r5_667,r6:r6_668,r7:r7_669
		defs: lr:lr_757,r12:r12_758,r5:r5_754,r6:r6_755,sp:sp_748
	Mem767[sp_748:word32] = r5_754 + r12_758 + 1<32>
l0000BF9E:
	r12_774 = Mem769[r6_162 + 656<i32>:word32]
	branch Mem769[dwLoc94:byte] == 0<8> l0000BFB2
l0000BFAE_1:
	r12_774 = dwLoc94
l0000BFB2:
	lrOut = lr_164
	return r12_774
fn0000BD8C_exit:


word32 fn0000BFB8(word32 r0, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C058
//      fn0000C2C8
// MayUse:  r0:[0..31] r10:[0..7] r11:[0..31] r12:[0..31] r8:[0..7] r9:[0..7] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: lr r0 r10 r11 r12 r2 r3 r4 r5 r6 sp
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BFB8_entry:
l0000BFB8:
	r6_31 = 0x0000BFBC<p32> - Mem29[0x0000C056<p32>:word32]
	r7_33 = CONVERT(Mem29[r12:byte], byte, word32)
	branch SLICE(r7_33, byte, 0) != SLICE(r10, byte, 0) l0000C03C
l0000BFDA:
	branch r7_33 == 0<32> l0000C042
l0000BFDE:
	r10 = CONVERT(Mem29[r12 + 1<i32>:byte], byte, word32)
	branch SLICE(r10, byte, 0) != SLICE(r9, byte, 0) l0000C03C
l0000BFE6:
	branch r10 == 0<32> l0000C042
l0000BFEA:
	r9_55 = CONVERT(Mem29[r12 + 2<i32>:byte], byte, word32)
	branch SLICE(r9_55, byte, 0) != SLICE(r8, byte, 0) l0000C03C
l0000BFF2:
	branch r9_55 == 0<32> l0000C042
l0000BFF6:
	r8_61 = CONVERT(Mem29[r12 + 3<i32>:byte], byte, word32)
	branch SLICE(r8_61, byte, 0) != SLICE(dwArg00, byte, 0) l0000C03C
l0000BFFE:
	branch r8_61 == 0<32> l0000C042
l0000C002:
	r8_66 = CONVERT(Mem29[r12 + -4<i32>:byte], byte, word32)
	branch SLICE(r8_66, byte, 0) != SLICE(dwArg04, byte, 0) l0000C03C
l0000C00A:
	branch r8_66 == 0<32> l0000C042
l0000C00E:
	r8_71 = CONVERT(Mem29[r12 + -3<i32>:byte], byte, word32)
	branch SLICE(r8_71, byte, 0) != SLICE(dwArg08, byte, 0) l0000C03C
l0000C016:
	branch r8_71 == 0<32> l0000C042
l0000C01A:
	r8_76 = CONVERT(Mem29[r12 + -2<i32>:byte], byte, word32)
	branch SLICE(r8_76, byte, 0) != SLICE(dwArg0C, byte, 0) l0000C03C
l0000C022:
	branch r8_76 == 0<32> l0000C042
l0000C026:
	r8_81 = CONVERT(Mem29[r12 + -1<i32>:byte], byte, word32)
	branch SLICE(r8_81, byte, 0) != SLICE(dwArg10, byte, 0) l0000C03C
l0000C02E:
	branch r8_81 == 0<32> l0000C042
l0000C032:
	r8_86 = CONVERT(Mem29[r12 + 8<i32>:byte], byte, word32)
	branch SLICE(r8_86, byte, 0) == SLICE(dwArg14, byte, 0) l0000C03E
l0000C03E:
	branch r8_86 != 0<32> l0000C044
l0000C044:
	call Mem29[r6_31 + 24<i32>:word32] (retsize: 0;)
		uses: lr:r12,Mem:Mem29,r0:r0,r1:r11,r10:r10_49,r11:r11 + 9<32>,r12:r12 + 9<32>,r2:dwArg14,r3:dwArg0C,r4:dwArg08,r5:dwArg04,r6:r6_31,r7:r7_33,r8:r8_86,r9:r9_55,Stack +0024:dwArg00,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C,Stack +0034:dwArg10,Stack +0038:dwArg14
		defs: lr:lr_103,r10:r10_106,r11:r11_105,VNZC:VNZC_109
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r10Out = r10_106
	r11Out = r11_105
	r12Out = CONVERT(SLICE(VNZC_109, bool, 1), bool, word32)
	lrOut = lr_103
	return r0
l0000C042:
	r2Out = r1
	r3Out = r2
	r4Out = r3
	r5Out = r4
	r6Out = r5
	r10Out = r10
	r11Out = dwArg00
	r12Out = r7
	lrOut = r12
	return dwArg00
l0000C03C:
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r10Out = r10
	r11Out = dwArg00
	r12Out = dwArg10
	lrOut = r12
	return r0
fn0000BFB8_exit:


byte fn0000C058(word32 r0, word32 r11, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B88C
// MayUse:  r0:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: VN lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000C058_entry:
l0000C058:
	r6_31 = 0x0000C05C<p32> - Mem29[0x0000C0CE<p32>:word32]
	branch r12 >>u 9<32> >u 0xEF<32> l0000C0A2
l0000C0A2:
	branch r12 >>u 9<32> != 0x700<32> l0000C0DC
l0000C0A8:
	branch r12 <=u 0xE00FF<32> l0000C0BA
l0000C0BA:
	branch r12 <=u 0xE001F<32> l0000C0D0
l0000C0D0:
	r8_46 = CONVERT(r12 == 0xE0001<32>, bool, word32)
l0000C0C2:
	r8_46 = CONVERT(r12 <=u 0xE007F<32>, bool, word32)
l0000C0D6:
	branch r8_46 != 0<32> l0000C2D8
l0000C0B0:
	branch r12 >u 0xE01EF<32> l0000C0E4
l0000C0B8:
l0000C06C:
	r8_56 = CONVERT(Mem29[0x0000C2E0<p32> + (r12 >>u 9<32>):int8], int8, int32)
	branch r8_56 < 0<32> l0000C0DC
l0000C078:
	branch Test(NE,SLICE(CONVERT(Mem29[(r8_56 << 6<i32>) + 0x0000C2E0<p32> + CONVERT(SLICE(r12, word6, 3), word6, word32) + 240<i32>:byte], byte, word32) >> CONVERT(SLICE(r12, word3, 0), word3, word32), bool, 0)) l0000C0DC
l0000C0DC:
	branch r12 <=u 0x10FF<32> l0000C190
l0000C0E4:
	branch r12 <=u 0x115F<32> l0000C2DA
l0000C0EC:
	branch r12 <=u 0x232A<32> l0000C2DA
l0000C0F6:
	branch r12 >u 0xA4CF<32> || r12 <u 0x2E80<32> l0000C114
l0000C102:
	branch r12 == 0x303F<32> l0000C114
l0000C108:
	branch r12 >u 0x4DFF<32> || r12 <u 0x4DC0<32> l0000C2DA
l0000C114:
	branch r12 <=u 0xD7A3<32> l0000C2DA
l0000C124:
	branch r12 <=u 0xFAFF<32> l0000C2DA
l0000C134:
	branch r12 <=u 0xFE1F<32> l0000C2DA
l0000C142:
	branch r12 <=u 0xFE6F<32> l0000C2DA
l0000C152:
	branch r12 <=u 0xFF60<32> l0000C2DA
l0000C162:
	branch r12 <=u 0xFFE6<32> l0000C2DA
l0000C170:
	branch r12 <=u 0x2A6D6<32> l0000C2DA
l0000C180:
	branch r12 <=u 0x2FA1D<32> l0000C2DA
l0000C190:
	branch r12 >u 0xFF60<32> || r12 <u 0xA1<32> l0000C2DE
l0000C19C:
	branch r12 == 0x20A9<32> l0000C2DE
l0000C2DE:
	r0Out = dwArg00
	r1Out = r0
	r2Out = r1
	r3Out = r2
	r10Out = r10
	r11Out = r11
	r12Out = r7
	lrOut = lr
	return <invalid>
l0000C1A4:
	r0_191 = fn0000BFB8(r0, 0x43<32>, 0x55<32>, 0x45<32>, Mem29[r6_31 + 652<i32>:word32], r11, 0x2D<32>, 0x4A<32>, 0x50<32>, 0<32>, 0<32>, 0<32>, out r2_782, out r3_783, out r4_784, out r5_196, out r6_197, out r10, out r11, out r12_190, out lr)
	sp_199 = <invalid>
	branch r12_190 != 0<32> l0000C2DA
l0000C1D0:
	Mem213[sp_199 + 0x14<32>:word32] = r12_190
	Mem216[sp_199 + 0x10<32>:word32] = r12_190
	r11_217 = Mem216[r6_197 + 648<i32>:word32]
	Mem219[sp_199 + 0xC<32>:word32] = r12_190
	Mem221[sp_199 + 8<32>:word32] = 0x32<32>
	Mem224[sp_199 + 4<32>:word32] = 0x31<32>
	Mem230[sp_199:word32] = 0x33<32>
	r0_234 = fn0000BFB8(r0_191, 0x32<32>, 0x42<32>, 0x47<32>, r11_217, r5_196, Mem230[sp_199:word32], Mem230[sp_199 + 4<i32>:word32], Mem230[sp_199 + 8<i32>:word32], Mem230[sp_199 + 12<i32>:word32], Mem230[sp_199 + 16<i32>:word32], Mem230[sp_199 + 20<i32>:word32], out r2_785, out r3_786, out r4_787, out r5_239, out r6_240, out r10, out r11, out r12_233, out lr_788)
	sp_242 = <invalid>
	lr = r12_233
	branch r12_233 != 0<32> l0000C2DA
l0000C1F8:
	r11_254 = Mem230[r6_240 + 644<i32>:word32]
	Mem260[sp_242 + 0x14<32>:word32] = r12_233
	Mem262[sp_242 + 0x10<32>:word32] = r12_233
	Mem264[sp_242 + 0xC<32>:word32] = r12_233
	Mem266[sp_242 + 8<32>:word32] = r12_233
	Mem268[sp_242 + 4<32>:word32] = r12_233
	Mem270[sp_242:word32] = r12_233
	r0_274 = fn0000BFB8(r0_234, 0x4B<32>, 0x42<32>, 0x47<32>, r11_254, r5_239, Mem270[sp_242:word32], Mem270[sp_242 + 4<i32>:word32], Mem270[sp_242 + 8<i32>:word32], Mem270[sp_242 + 12<i32>:word32], Mem270[sp_242 + 16<i32>:word32], Mem270[sp_242 + 20<i32>:word32], out r2_789, out r3_790, out r4_278, out r5_279, out r6_280, out r10, out r11, out r12_273, out lr_791)
	sp_282 = <invalid>
	lr = r12_273
	branch r12_273 != 0<32> l0000C2DA
l0000C21A:
	Mem295[sp_282 + 0x14<32>:word32] = r12_273
	r11_296 = Mem295[r6_280 + 640<i32>:word32]
	Mem298[sp_282 + 0x10<32>:word32] = r12_273
	Mem300[sp_282 + 0xC<32>:word32] = r12_273
	Mem303[sp_282 + 8<32>:word32] = 0x57<32>
	Mem310[sp_282 + 4<32>:word32] = 0x54<32>
	Mem312[sp_282:word32] = r4_278
	r0_316 = fn0000BFB8(r0_274, 0x43<32>, 0x55<32>, 0x45<32>, r11_296, r5_279, Mem312[sp_282:word32], Mem312[sp_282 + 4<i32>:word32], Mem312[sp_282 + 8<i32>:word32], Mem312[sp_282 + 12<i32>:word32], Mem312[sp_282 + 16<i32>:word32], Mem312[sp_282 + 20<i32>:word32], out r2_792, out r3_793, out r4_794, out r5_321, out r6_322, out r10, out r11, out r12_315, out lr_795)
	sp_324 = <invalid>
	lr = r12_315
	branch r12_315 != 0<32> l0000C2DA
l0000C240:
	r11_336 = Mem312[r6_322 + 636<i32>:word32]
	Mem338[sp_324 + 0x14<32>:word32] = r12_315
	Mem341[sp_324 + 0x10<32>:word32] = r12_315
	Mem344[sp_324 + 0xC<32>:word32] = r12_315
	Mem347[sp_324 + 8<32>:word32] = r12_315
	Mem350[sp_324 + 4<32>:word32] = r12_315
	Mem353[sp_324:word32] = 0x35<32>
	r0_357 = fn0000BFB8(r0_316, 0x47<32>, 0x49<32>, 0x42<32>, r11_336, r5_321, Mem353[sp_324:word32], Mem353[sp_324 + 4<i32>:word32], Mem353[sp_324 + 8<i32>:word32], Mem353[sp_324 + 12<i32>:word32], Mem353[sp_324 + 16<i32>:word32], Mem353[sp_324 + 20<i32>:word32], out r2_796, out r3_797, out r4_361, out r5_362, out r6_363, out r10, out r11, out r12_356, out lr_798)
	sp_365 = <invalid>
	lr = r12_356
	branch r12_356 != 0<32> l0000C2DA
l0000C264:
	Mem378[sp_365 + 0x14<32>:word32] = r12_356
	r11_379 = Mem378[r6_363 + 632<i32>:word32]
	Mem381[sp_365 + 0x10<32>:word32] = r12_356
	Mem383[sp_365 + 0xC<32>:word32] = r12_356
	Mem386[sp_365 + 8<32>:word32] = 0x52<32>
	Mem393[sp_365 + 4<32>:word32] = 0x4B<32>
	Mem395[sp_365:word32] = r4_361
	r0_399 = fn0000BFB8(r0_357, 0x43<32>, 0x55<32>, 0x45<32>, r11_379, r5_362, Mem395[sp_365:word32], Mem395[sp_365 + 4<i32>:word32], Mem395[sp_365 + 8<i32>:word32], Mem395[sp_365 + 12<i32>:word32], Mem395[sp_365 + 16<i32>:word32], Mem395[sp_365 + 20<i32>:word32], out r2_799, out r3_402, out r4_800, out r5_404, out r6_405, out r10, out r11, out r12_398, out lr)
	sp_407 = <invalid>
	branch r12_398 != 0<32> l0000C2DA
l0000C28A:
	r11_420 = Mem395[r6_405 + 628<i32>:word32]
	Mem422[sp_407 + 0x14<32>:word32] = r12_398
	Mem425[sp_407 + 0x10<32>:word32] = r12_398
	Mem428[sp_407 + 0xC<32>:word32] = r12_398
	Mem431[sp_407 + 8<32>:word32] = r12_398
	Mem434[sp_407 + 4<32>:word32] = 0x39<32>
	Mem437[sp_407:word32] = 0x34<32>
	r0_441 = fn0000BFB8(r0_399, 0x39<32>, r3_402, 0x43<32>, r11_420, r5_404, Mem437[sp_407:word32], Mem437[sp_407 + 4<i32>:word32], Mem437[sp_407 + 8<i32>:word32], Mem437[sp_407 + 12<i32>:word32], Mem437[sp_407 + 16<i32>:word32], Mem437[sp_407 + 20<i32>:word32], out r2_443, out r3_801, out r4_802, out r5_446, out r6_447, out r10, out r11, out r12_440, out lr_803)
	lr = r12_440
	branch r12_440 != 0<32> l0000C2DA
l0000C2DA:
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r10Out = r10
	r11Out = r11
	r12Out = 2<32>
	lrOut = lr
	return <invalid>
l0000C2B0:
	r11_475 = Mem474[r6_447 + 624<i32>:word32]
l0000C2C6_thunk_fn0000C2C8:
	fn0000C2C8(r0_441, 0x48<32>, r2_443, r11_475, r5_446, 0x41<32>, 0x42<32>, r12_440, r12_440, r12_440, r12_440, out r0_490, out r1_491, out r2_495, out r3_496, out r10_492, out r11_493, out r12_494, out lr_489)
	r0Out = r0_490
	r1Out = r1_491
	r2Out = r2_495
	r3Out = r3_496
	r10Out = r10_492
	r11Out = r11_493
	r12Out = r12_494
	lrOut = lr_489
	return <invalid>
l0000C094:
	branch r12 >u 0x9F<32> || r12 <u 1<32> l0000C2D8
l0000C2D8:
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r10Out = r10
	r11Out = r11
	r12Out = r12
	lrOut = lr
	return <invalid>
l0000C0A0:
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r10Out = r10
	r11Out = r11
	r12Out = r12
	lrOut = lr
	return <invalid>
fn0000C058_exit:


byte fn0000C2C8(word32 r0, word32 r8, word32 r10, word32 r11, word32 r12, word32 lr, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C058
// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: VN lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000C2C8_entry:
l0000C2C8:
	fn0000BFB8(r0, r8, 0x4F<32>, r10, r11, r12, lr, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r2_97, out r3_98, out r4_99, out r5_100, out r6_101, out r10_24, out r11_13, out r12_14, out lr_12)
l0000C2D4:
	branch r12_14 != 0<32> l0000C2DA_in_fn0000C2C8
l0000C2DA_in_fn0000C2C8:
	r0Out = lr
	r1Out = dwLoc08
	r2Out = dwLoc0C
	r3Out = dwLoc10
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = 2<32>
	lrOut = <invalid>
	return <invalid>
l0000C2D6:
l0000C2DE_in_fn0000C2C8:
	r0Out = dwArg00
	r1Out = lr
	r2Out = dwLoc08
	r3Out = dwLoc0C
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = dwLoc20
	lrOut = <invalid>
	return <invalid>
fn0000C2C8_exit:


void fn0000C2E2(word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC pc r1 r10 r2 r3 r4 r5 r6 r7 r9
// Preserved: sp
fn0000C2E2_entry:
l0000C2E2:
	r3_5 = r3 + r1
	call CONVERT(Mem0[r6 + -1<i32>:byte], byte, word32) (retsize: 0;)
		uses: Mem:Mem0,pc:pc,r1:r1,r10:CONVERT(Mem0[pc + 2828<i32>:int16], int16, int32),r2:r2,r3:r3_5,r4:r4,r5:r5 + r2,r6:r6,r7:r7 + r3_5,r9:r9 + r4
	return
fn0000C2E2_exit:


void fn0000C67A(word32 r1, word32 r3, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C77E
// MayUse:  r1:[0..31] r3:[0..31] r8:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C67A_exit:
fn0000C67A_entry:
l0000C67A:
	Mem12[r8 + 6<i32>:word16] = SLICE(0x0000C686<p32>, word16, 0)
	Mem40[r3:word32] = r1


void fn0000C77E(word32 r1, word32 r3, word32 r12, word32 pc, word32 dwArg0100)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..31] r1:[0..31] r12:[0..7] r3:[0..31] Stack +0100:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C77E_exit:
fn0000C77E_entry:
l0000C77E:
	Mem44[pc + -1<i32>:byte] = SLICE(0x0000C7CC<p32>, byte, 0)
	Mem49[0xFFFFFFFF<32>:byte] = SLICE(r12, byte, 0)
	fn0000C67A(r1, r3 + 1<i32>, dwArg0100)


void fn0000CA50(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000CA50_entry:
l0000CA50:
	r6_19 = 0x0000CA54<p32> - Mem17[0x0000CA66<p32>:word32]
	call Mem17[r6_19 + 580<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_26,r4:r4_22,r5:r5_23,r6:r6_24,r7:r7_25,VNZC:VNZC_27
	branch SLICE(VNZC_27, bool, 1) l0000CA60
l0000CA5C:
	fn00006CAC(r4_22, r5_23, r6_24, r7_25, lr_26, out r5_81, out r6_82, out r7_83, out r8_84, out r9_85, out r10_86, out r11_87, out r12_88, out lr_89)
l0000CA60:
	return
fn0000CA50_exit:


word32 fn0000CA68(word32 r11, word32 r12, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CAB8
//      fn0000CAE0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CA68_entry:
l0000CA68:
	r3_r2_43 = Mem29[r12:word64]
	r11_r10_129 = fn000107C0(r11, r11 >> 0x1F<32>, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>, out r8_130, out r9_131, out lr_44)
	r2_54 = SLICE(r3_r2_43, word32, 0) (alias)
	r3_56 = SLICE(r3_r2_43, word32, 32) (alias)
	branch SLICE(r11_r10_129, word32, 32) - r3_56 >=u SLICE(cond(SLICE(r11_r10_129, word32, 0) - r2_54), bool, 0) l0000CA9A
l0000CA9A:
	r9_r8_60 = r11 *u r2_54
	Mem69[r12:word64] = SEQ((r11 >> 0x1F<32>) * r2_54 + r3_56 * r11 + SLICE(r9_r8_60, word32, 32), SLICE(r9_r8_60, word32, 0))
	lrOut = <invalid>
	return 0<32>
l0000CA8E:
	Mem83[r12:word64] = 0xFFFFFFFFFFFFFFFF<64>
	lrOut = <invalid>
	return 1<32>
fn0000CA68_exit:


word32 fn0000CAB8(word32 r10, word32 r11, word32 r12, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CAE0
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r12 r8 r9
// Preserved: r0 r1 r11 r2 r3 r4 r5 r6 r7 sp
fn0000CAB8_entry:
l0000CAB8:
	r7_38 = r10
	r5_39 = 0<32>
l0000CACC:
	r7_38 = r7_38 - 1<32>
	branch r7_38 != 0xFFFFFFFF<32> l0000CAC8
l0000CAC8:
	r5_39 = r5_39 | fn0000CA68(r11, r12, out lr)
l0000CAD6:
	lrOut = lr
	return r5_39
fn0000CAB8_exit:


bool fn0000CAE0(word32 r1, word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000092D8
// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CAE0_entry:
l0000CAE0:
	sp_30 = fp - 0x30<32>
	r6_32 = 0x0000CAE6<p32> - Mem29[0x0000CBEC<p32>:word32]
	r2_112 = r10
	r5_36 = r12
	r7_38 = r11
	r0_104 = r9
	r3_116 = r8
	branch r10 <=u 0x24<32> l0000CB0C
l0000CAFA:
	call Mem29[r6_32 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r9,r1:r1,r10:0x53<32>,r11:Mem29[r6_32 + 620<i32>:word32],r12:Mem29[r6_32 + 616<i32>:word32],r2:r10,r3:r8,r4:r4,r5:r12,r6:r6_32,r7:r11,r8:r8,r9:0x0000CCE4<p32>
		defs: lr:lr_59,r0:r0_51,r1:r1_52,r11:r11_62,r12:r12_61,r2:r2_53,r3:r3_54,r4:r4_55,r5:r5_56,r6:r6_57,r7:r7_58,sp:sp_50
l0000CB0C:
	r9_70 = CONVERT(Mem29[r5_36:byte], byte, word32)
	r10_71 = Mem29[Mem29[r6_32 + 156<i32>:word32]:word32]
	r8_73 = sp_30 + 8<32>
	branch r7_38 == 0<32> l0000CB1E
l0000CB1A_1:
	r1 = r7_38
l0000CB1E:
	branch r7_38 != 0<32> l0000CB22
l0000CB1E_1:
	r1 = r8_73
l0000CB22:
	r8_83 = r5_36
l0000CB28:
	r7_87 = CONVERT(Mem29[r10_71 + r9_70 * 2<32>:word16], word16, word32)
	r8_83 = r8_83 + 1<32>
	branch (r7_87 & 0x20<32>) != 0<32> l0000CB26
l0000CB26:
	r9_70 = CONVERT(Mem29[r8_83:byte], byte, word32)
l0000CB34:
	branch SLICE(r9_70, byte, 0) == 0x2D<8> l0000CCDC
l0000CB3E:
	call Mem29[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,Mem:Mem29,r0:r0_104,r1:r1_106,r10:r10_71,r11:r11_133,r12:r12_129,r2:r2_112,r3:r3_116,r4:r4_120,r5:r5_69,r6:r6_66,r7:r7_87 & 0x20<32>,r8:0x2D<32>,r9:r9_85
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r12:r12_148,r2:r2_140,r3:r3_141,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
	Mem154[r12_148:word32] = r7_145
	call Mem154[r6_144 + 540<i32>:word32] (retsize: 0;)
		uses: lr:lr_146,Mem:Mem154,r0:r0_138,r1:r1_139,r10:r2_140,r11:r1_139,r12:r5_143,r2:r2_140,r3:r3_141,r4:r12_148,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
		defs: lr:lr_167,r0:r0_159,r1:r1_160,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r9:r9_171,Sequence r11:r10:r11_r10_702,sp:sp_158
	Mem175[sp_158:word64] = r11_r10_702
	r10_168 = SLICE(r11_r10_702, word32, 0) (alias)
	r8_176 = Mem175[r1_160:word32]
	branch r8_176 != r5_164 l0000CB7E
l0000CB7E:
	r12_179 = Mem175[r4_163:word32]
	branch r12_179 != 0<32> l0000CB88
l0000CB88:
	branch r12_179 != 0x22<32> l0000CCDC
l0000CB90:
	r4_184 = 1<32>
l0000CB84:
	r4_184 = r12_179
l0000CB92:
	branch r3_162 != 0<32> l0000CB9C
l0000CB96:
	Mem193[r0_159:word64] = r11_r10_702
l0000CB5A:
	branch r3_162 == 0<32> l0000CCDC
l0000CB60:
	r11_196 = CONVERT(Mem175[r8_176:byte], byte, word32)
	branch r11_196 == 0<32> l0000CCDC
l0000CB68:
	call Mem175[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_167,Mem:Mem175,r0:r0_159,r1:r1_160,r10:r10_168,r11:r11_196,r12:r3_162,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r8:r8_176,r9:r9_171
		defs: lr:lr_209,r0:r0_201,r1:r1_202,r10:r10_210,r2:r2_203,r3:r3_204,r6:r6_207,r7:r7_208,sp:sp_200,VNZC:VNZC_215
	branch SLICE(VNZC_215, bool, 1) l0000CCDC
l0000CCDC:
l0000CB72:
	Mem222[sp_158:word64] = 1<64>
	r8_176 = 1<32>
	r9_171 = 0<32>
	r4_184 = r7_208
l0000CB9C:
	r5_227 = Mem225[r1_160:word32]
	r7_228 = CONVERT(Mem225[r5_227:byte], byte, word32)
	branch r7_228 == 0<32> l0000CCD2
l0000CBA6:
	call Mem225[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_241,Mem:Mem225,r0:r0_236,r1:r1_223,r10:r10_243,r11:r7_228,r12:r3_232,r2:r2_237,r3:r3_232,r4:r4_239,r5:r5_227,r6:r6_234,r7:r7_228,r8:r8_246,r9:r9_244
		defs: lr:lr_259,r0:r0_251,r1:r1_252,r10:r10_260,r2:r2_253,r3:r3_254,r4:r4_255,r5:r5_256,r6:r6_257,r7:r7_258,r8:r8_264,r9:r9_263,sp:sp_250,VNZC:VNZC_265
	branch SLICE(VNZC_265, bool, 1) l0000CCB4
l0000CBB2:
	call Mem225[r6_257 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_259,Mem:Mem225,r0:r0_251,r1:r1_252,r10:r10_260,r11:0x30<32>,r12:r3_254,r2:r2_253,r3:r3_254,r4:r4_255,r5:r5_256,r6:r6_257,r7:r7_258,r8:r8_264,r9:r9_263
		defs: lr:lr_278,r0:r0_270,r1:r1_271,r5:r5_275,r7:r7_277,sp:sp_269,VNZC:VNZC_284
	branch SLICE(VNZC_284, bool, 1) l0000CBF4
l0000CBBC:
	r9_286 = CONVERT(Mem225[r5_275 + 1<i32>:byte], byte, word32)
	branch SLICE(r9_286, byte, 0) == 0x42<8> l0000CBD8
l0000CBC6:
	branch SLICE(r9_286, byte, 0) == 0x44<8> l0000CBD8
l0000CBD8:
	r11_293 = 0x3E8<32>
	r5_294 = 2<32>
l0000CBCE:
	branch SLICE(r9_286, byte, 0) != 0x69<8> l0000CBF4
l0000CBD6:
l0000CBE0:
	branch Mem225[r5_275 + 2<i32>:byte] != 0x42<8> l0000CBF4
l0000CBF4:
	r11_293 = 0x400<32>
	r5_294 = 1<32>
l0000CBE8:
	r11_293 = 0x400<32>
	r5_294 = 3<32>
l0000CBFA:
	branch SLICE(r7_277, byte, 0) == 0x42<8> l0000CC82
l0000CC82:
	r11_311 = 0x400<32>
l0000CC02:
	branch SLICE(r7_277, byte, 0) == 0x45<8> l0000CC8C
l0000CC8C:
	r10_315 = 6<32>
l0000CC0A:
	branch SLICE(r7_277, byte, 0) == 0x47<8> l0000CC90
l0000CC12:
	branch SLICE(r7_277, byte, 0) == 0x4B<8> l0000CC94
l0000CC1A:
	branch SLICE(r7_277, byte, 0) == 0x4D<8> l0000CC98
l0000CC22:
	branch SLICE(r7_277, byte, 0) == 0x50<8> l0000CC9C
l0000CC9C:
	r10_315 = 5<32>
l0000CC2A:
	branch SLICE(r7_277, byte, 0) == 0x54<8> l0000CCA0
l0000CC32:
	branch SLICE(r7_277, byte, 0) == 0x59<8> l0000CCA8
l0000CCA8:
	r10_315 = 8<32>
l0000CC3A:
	branch SLICE(r7_277, byte, 0) == 0x5A<8> l0000CCAC
l0000CCAC:
	r10_315 = 7<32>
l0000CC42:
	branch SLICE(r7_277, byte, 0) == 0x62<8> l0000CC7C
l0000CC7C:
	r11_311 = 0x200<32>
l0000CC4A:
	branch SLICE(r7_277, byte, 0) == 0x63<8> l0000CCB8
l0000CCB8:
l0000CC52:
	branch SLICE(r7_277, byte, 0) == 0x67<8> l0000CC90
l0000CC90:
	r10_315 = 3<32>
l0000CC5A:
	branch SLICE(r7_277, byte, 0) == 0x6B<8> l0000CC94
l0000CC94:
	r10_315 = 1<32>
l0000CC62:
	branch SLICE(r7_277, byte, 0) == 0x6D<8> l0000CC98
l0000CC98:
	r10_315 = 2<32>
l0000CC6A:
	branch SLICE(r7_277, byte, 0) == 0x74<8> l0000CCA0
l0000CCA0:
	r10_315 = 4<32>
l0000CCAE:
	fn0000CAB8(r10_315, r11_293, sp_158, out lr)
l0000CC72:
	branch SLICE(r7_277, byte, 0) != 0x77<8> l0000CCB4
l0000CCB4:
l0000CC7A:
l0000CCA4:
	r11_311 = 2<32>
l0000CC86:
	fn0000CA68(r11_311, sp_158, out lr)
l0000CCBA:
	r8_450 = Mem225[r1_271:word32] + r5_294
	Mem451[r1_271:word32] = r8_450
	branch Mem451[r8_450:byte] == 0<8> l0000CCD2
l0000CCCE_1:
l0000CCD2:
	Mem479[r0_159:word64] = Mem462[sp_158:word64]
l0000CCDE:
	lrOut = lr
	return SLICE(cond(fp - 36<i32>), bool, 1)
fn0000CAE0_exit:


bool fn0000CCF0(word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: Z lr r11 r12 r8 r9
// Trashed: VNZC lr r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000CCF0_entry:
l0000CCF0:
	r6_19 = 0x0000CCF4<p32> - Mem17[0x0000CD26<p32>:word32]
	branch r12 == 0<32> l0000CD16
l0000CCFA:
	branch r11 == 0<32> l0000CD16
l0000CD16:
	r12 = 1<32>
	r11 = 1<32>
l0000CCFE:
	branch r11 * r12 /u r11 == r12 l0000CD1A
l0000CD1A:
	call Mem17[r6_19 + 516<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r11:r11_45,r12:r12_44,r4:r4,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_53,r11:r11_55,r12:r12_54,r8:r8_57,VNZC:VNZC_58
	Z_100 = SLICE(VNZC_58, bool, 1) (alias)
	r9_59 = r12_54
l0000CD0A:
	call Mem17[r6_19 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r11:r11,r12:r12,r4:r4,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_65,r11:r11_67,r12:r12_66,VNZC:VNZC_70
	Mem73[r12_66:word32] = 0xC<32>
	Z_100 = SLICE(VNZC_70, bool, 1) (alias)
	r8_57 = 0xC<32>
	r9_59 = 0<32>
l0000CD20:
	r8Out = r8_57
	r9Out = r9_59
	r11Out = r11_55
	r12Out = r9_59
	lrOut = lr_53
	return Z_100
fn0000CCF0_exit:


void fn0000CD28(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r12 r8
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CD28_entry:
l0000CD28:
	r6_31 = 0x0000CD2C<p32> - Mem29[0x0000CD76<p32>:word32]
	call Mem29[r6_31 + 568<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r1,r12:r12,r2:r2,r3:r12,r4:r4,r5:r5,r6:r6_31,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_44,r0:r0_36,r1:r1_37,r12:r12_45,r2:r2_38,r3:r3_39,r4:r4_40,r6:r6_42
	call Mem29[r6_42 + 296<i32>:word32] (retsize: 0;)
		uses: lr:lr_44,Mem:Mem29,r0:r0_36,r1:r1_37,r12:r3_39,r2:r2_38,r3:r3_39,r4:r4_40,r5:CONVERT(Mem29[r3_39:uint16], uint16, word32) & 8<32>,r6:r6_42,r7:r12_45
		defs: lr:lr_62,r0:r0_54,r1:r1_55,r12:r12_63,r2:r2_56,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,VNZC:VNZC_65
	r3_67 = CONVERT(SLICE(VNZC_65, bool, 1), bool, word32)
	branch r5_59 != 0<32> l0000CD5C
l0000CD5C:
	branch r3_67 != 0<32> l0000CD6E
l0000CD60:
	call Mem29[r6_60 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_62,Mem:Mem29,r0:r0_54,r1:r1_55,r12:r12_63,r2:r2_56,r3:r3_67,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61
		defs: r12:r12_82,r3:r3_76
	Mem86[r12_82:word32] = r3_76
l0000CD48:
	branch r3_67 == 0<32> l0000CD6A
l0000CD4C:
	branch r7_61 != 0<32> l0000CD6E
l0000CD50:
	call Mem29[r6_60 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_62,Mem:Mem29,r0:r0_54,r1:r1_55,r12:r12_63,r2:r2_56,r3:r3_67,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61
		defs: r12:r12_101
	branch Mem29[r12_101:word32] == 9<32> l0000CD6A
l0000CD6A:
l0000CD5A:
l0000CD6E:
l0000CD70:
	return
fn0000CD28_exit:


word32 fn0000CD78(word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CE10
//      fn0000CEEE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CD78_entry:
l0000CD78:
	r5_43 = CONVERT(SLICE(dwArg00, word2, 0), word2, word32)
	lr_40 = (r12 >> 2<32>) + 0x1DB<32> + CONVERT(CONVERT(SLICE(r12, word2, 0), word2, word32) == 0<32>, bool, word32)
	r1_68 = lr_40 / 0x19<32> + (r5_43 >>u 31<i32>)
	r0_50 = (dwArg00 >> 2<32>) + 0x1DB<32> + CONVERT(r5_43 == 0<32>, bool, word32)
	lr_86 = r10 + dwArg08 + (((((((lr_40 + r11) + (r12 + dwArg00) * 0x16D<32>) + dwArg04) + (r1_68 >> 2<32>)) + r0_50) + (r0_50 / 0x19<32> >> 2<32>)) + (r1_68 + r0_50 / 0x19<32>)) * 0x18<32>
	lrOut = lr_86
	return r8 + dwArg10 + ((r9 + dwArg0C) + lr_86 * 0x44<32>) * 0x44<32>
fn0000CD78_exit:


word32 fn0000CE10(word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEEE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000CE10_entry:
l0000CE10:
	branch dwArg04 == 0<32> l0000CE4A
l0000CE22:
	r12_48 = fn0000CD78(r8, r9, r10, r11, r12, Mem36[dwArg04 + 20<i32>:word32], Mem33[dwArg04 + 28<i32>:word32], Mem30[dwArg04 + 8<i32>:word32], Mem27[dwArg04 + 4<i32>:word32], Mem17[dwArg04:word32], out lr_142)
	r8_56 = Mem39[dwArg00:word32]
	lr_57 = r8_56 + r12_48
	branch (CONVERT(lr_57 >= r8_56, bool, word32) ^ r12_48 << 0x1F<8>) != 0<32> l0000CE6E
l0000CE4A:
	lr_66 = Mem65[dwArg00:word32]
	branch lr_66 >= 0<32> l0000CE60
l0000CE60:
	branch lr_66 > Mem65[0x0000CE80<p32>:word32] l0000CE6C
l0000CE6C:
	lr_57 = lr_66 - 1<32>
l0000CE68:
	lr_57 = Mem65[0x0000CE84<p32>:word32]
l0000CE50:
	branch lr_66 <= Mem65[0x0000CE78<p32>:word32] l0000CE5C
l0000CE5C:
	lr_57 = lr_66 + 1<32>
l0000CE58:
	lr_57 = Mem65[0x0000CE7C<p32>:word32]
l0000CE6E:
	lrOut = lr_57
	return lr_57
fn0000CE10_exit:


word32 fn0000CE88(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEEE
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CE88_entry:
l0000CE88:
	call r12 (retsize: 0;)
		uses: lr:lr,Mem:Mem29,r0:r0,r1:r12,r10:r10,r11:r10,r12:r11,r2:r10,r3:r11,r4:r4,r5:r5,r6:r6,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_47,r0:r0_39,r1:r1_40,r10:r10_50,r12:r12_49,r2:r2_41,r3:r3_42,r5:r5_44,r6:r6_45,r8:r8_51,VNZC:VNZC_53
	branch SLICE(VNZC_53, bool, 1) l0000CEEC
l0000CE98:
	r7_132 = Mem29[r3_128:word32]
	branch r7_132 == 0<32> l0000CEEC
l0000CE9E:
	r4_129 = r12_135
l0000CEC6:
	branch r7_132 < 0<32> l0000CECC
l0000CEC8_1:
	r8_137 = 1<32>
l0000CECC:
	branch r7_132 >= 0<32> l0000CED0
l0000CECC_1:
	r8_137 = 0xFFFFFFFF<32>
l0000CED0:
	r9_70 = r7_132 + r4_129
	branch r7_132 != r8_137 + r4_129 l0000CEA2
l0000CEA2:
	branch r7_132 >= 0<32> l0000CEB2
l0000CEB2:
	r5_80 = (r9_70 >> 1<i32>) + r4_129
l0000CEA6:
	r5_80 = (r4_129 + r7_132 >> 1<i32>) + r7_132
l0000CEB6:
	Mem97[r3_128:word32] = r5_80
	call r1_101 (retsize: 0;)
		uses: lr:lr_115,Mem:Mem97,r0:r0_105,r1:r1_101,r10:r10_119,r11:r2_89,r12:r3_94,r2:r2_89,r3:r3_94,r4:r4_69,r5:r5_96,r6:r6_110,r7:r7_59
		defs: lr:lr_133,r0:r0_125,r1:r1_126,r10:r10_136,r12:r12_135,r2:r2_127,r3:r3_128,r4:r4_129,r5:r5_130,r6:r6_131,r7:r7_132,r8:r8_137,VNZC:VNZC_139
	Z_140 = SLICE(VNZC_139, bool, 1) (alias)
	branch Z_140 l0000CEC2
l0000CEBE_1:
	r7_132 = r5_130
l0000CEC2:
	branch Z_140 l0000CEC6
l0000CEC2_1:
	r4_129 = r5_130
l0000CEDC:
	branch r12_135 != 0<32> l0000CEEC
l0000CEE0:
	branch r4_129 == 0<32> l0000CEEC
l0000CEE4:
	Mem155[r3_128:word32] = r4_129
	call r1_101 (retsize: 0;)
		uses: lr:lr_115,Mem:Mem155,r0:r0_105,r1:r1_101,r10:r10_119,r11:r2_89,r12:r3_94,r2:r2_89,r3:r3_94,r4:r4_69,r5:r5_158,r6:r6_110,r7:r7_59
		defs: lr:lr_168,r12:r12_170
l0000CEEC:
	lrOut = lr_115
	return r12_135
fn0000CE88_exit:


word32 fn0000CEEE(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D1B8
// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CEEE_entry:
l0000CEEE:
	r3_35 = Mem34[r12 + 16<i32>:word32]
	r4_39 = Mem34[r12 + 20<i32>:word32]
	r8_38 = Mem34[r12 + 32<i32>:word32]
	r8_60 = r4_39 + r3_35 / 0xC<32> + (r3_35 >>u 0x1F<32>)
	r6_32 = 0x0000CEF6<p32> - Mem29[0x0000D028<p32>:word32]
	r9_44 = CONVERT(r8_38 != 0<32>, bool, word32) | r8_38 >> 31<i32>
	lr_50 = Mem49[r12:word32]
	r11_52 = Mem51[r12 + 4<i32>:word32]
	r10_54 = Mem53[r12 + 8<i32>:word32]
	r5_56 = Mem55[r12 + 12<i32>:word32]
	branch CONVERT(SLICE(r8_60, word2, 0), word2, word32) == 0<32> l0000CF3A
l0000CF3A:
	branch r9_44 == 0<32> l0000CF4A
l0000CF4A:
	r10_76 = CONVERT(CONVERT(SLICE(r8_60 / 0x64<32>, word2, 0), word2, word32) == 1<32>, bool, word32)
l0000CF46:
	r10_76 = 1<32>
l0000CF36:
	r10_76 = 0<32>
l0000CF52:
	r2_96 = Mem62[r10:word32]
	r8_97 = r5_56 - 1<32> + CONVERT(Mem62[0x0000D1D0<p32> + ((r10_76 * 0xD<32> + (((r3_35 >>u 0x1F<32>) << 1<32>) + (r3_35 >>u 0x1F<32>) << 2<8>)) + r3_35) * 2<32>:word16], word16, word32)
	dwLoc90_561 = r2_96
	branch lr_50 >= 0<32> l0000CF8A
l0000CF8A:
	dwLocA8_563 = min<int32>(lr_50, 0x3B<32>)
l0000CF84:
	dwLocA8_563 = 0<32>
l0000CF94:
	r12_134 = fn0000CD78(dwLocA8_563, r11_52, r10_54, r8_97, r8_60, 0x46<32>, 0<32>, 0<32>, 0<32>, -r2_96, out lr_131)
	r9_155 = (r4_39 >> 1<32>) + (r5_56 >> 0xA<32>) - 0x23<32> + (r10_54 >> 14<i32>) + (r11_52 >> 20<i32>)
	r3_153 = r12_134
	branch abs<int32>((r12_134 >> 0x1A<32>) + r9_155) <= 0x15<32> l0000CFFC
l0000CFDE:
	r10_162 = 0xFFFFFFFF<32> - r12_134
	branch abs<int32>((r10_162 >> 0x1A<32>) + r9_155) > 0x15<32> l0000D19C
l0000CFF0:
	r3_153 = r10_162
	dwLoc90_561 = r2_96 + (r10_162 + r12_134)
l0000CFFC:
	Mem182[&tLoc28:word32] = r3_153
	r2_176 = 0<32>
	r4_177 = 6<32>
	r7_179 = r3_153
	dwLoc2C_580 = r3_153
l0000D050:
	r12_220 = fn0000CE10(dwLocA8_563, r11_52, r10_54, r8_97, r8_60, &tLoc28, fn0000CE88(r0, r1, r2_176, r3_153, r4_177, &tLoc28, r6_32, r7_179, fp - 0x5C<32>, &tLoc28, r11, lr_131, out lr_848), out lr_131)
	r4_177 = r4_177 - 1<32>
	r10_230 = Mem218[&tLoc28:word32]
	branch r10_230 != r12_220 l0000D008
l0000D008:
	branch r10_230 != r7_179 l0000D03E
l0000D00C:
	branch r10_230 == dwLoc2C_580 l0000D03E
l0000D012:
	branch dwLoc3C < 0<32> l0000D0EC
l0000D018:
	branch r9_44 >= 0<32> l0000D030
l0000D030:
	branch (CONVERT(r9_44 != 0<32>, bool, word32) ^ CONVERT(dwLoc3C != 0<32>, bool, word32)) != 0<32> l0000D0EC
l0000D01E:
	branch r2_176 > CONVERT(dwLoc3C != 0<32>, bool, word32) l0000D03E
l0000D03E:
	branch r4_177 == 0<32> l0000D19C
l0000D044:
	Mem270[&tLoc28:word32] = r12_220
	r7_179 = dwLoc2C_580
	r2_176 = CONVERT(dwLoc3C != 0<32>, bool, word32)
	dwLoc2C_580 = r10_230
l0000D028:
l0000D078:
	lr_274 = r9_44
	branch r9_44 == dwLoc3C l0000D0EC
l0000D080:
	branch r9_44 < 0<32> l0000D0EC
l0000D084:
	branch dwLoc3C >= 0<32> l0000D1A0
l0000D1A0:
	r7_179 = 0x92C70<32>
l0000D1A4:
	r0 = r7_179 << 1<32>
	r4_284 = 0<32> - r7_179
	r5_286 = 0xFFFFFFFF<32>
l0000D08C:
	r8_289 = Mem288[&tLoc28:word32]
	r9_291 = r4_284 + r8_289
	Mem297[&tLoc30:word32] = r9_291
	r5_286 = r5_286 + 2<32>
	branch (CONVERT(r9_291 >= r8_289, bool, word32) ^ r5_286 << 0x1F<8>) == 0<32> l0000D0DC
l0000D0A2:
	fn0000CE88(r0, &tLoc30, &tLoc88, r3_153, r4_284, r5_286, r6_32, r7_179, &tLoc88, &tLoc30, r11, lr_274, out lr_274)
	branch dwLoc68 != r9_44 l0000D0DC
l0000D0DC:
	r4_284 = r4_284 + r0
	branch r5_286 != 3<32> l0000D08C
l0000D0E2:
	r7_179 = r7_179 + 0x92C70<32>
	branch r7_179 != Mem297[0x0000D1B6<p32>:word32] l0000D1A4
l0000D0BA:
	Mem359[&tLoc28:word32] = fn0000CE10(dwLocA8_563, r11_52, r10_54, r8_97, r8_60, &tLoc30, &tLoc88, out lr_347)
	fn0000CE88(r0, &tLoc30, &tLoc88, r3_153, r4_284, r5_286, r6_32, r7_179, fp - 0x5C<32>, &tLoc28, r11, lr_347, out lr_849)
l0000D08A:
l0000D0EC:
	r4_382 = dwLoc90_561 + Mem375[&tLoc28:word32] + r3_153
	Mem384[r10:word32] = r4_382
	sp_373 = fp - 0xD4<32>
	branch lr_50 == dwLoc5C l0000D152
l0000D104:
	branch dwLocA8_563 == 0<32> l0000D10E
l0000D10E:
	r1_393 = CONVERT(dwLoc5C == 0x3C<32>, bool, word32)
l0000D10A:
	r1_393 = 0<32>
l0000D114:
	r2_397 = Mem384[&tLoc28:word32]
	r5_400 = r2_397 + lr_50
	r1_402 = r1_393 + dwLocA8_563
	r3_404 = r1_402 + r5_400
	call r11 (retsize: 0;)
		uses: lr:dwLocA8_566,Mem:Mem408,r0:r0_410,r1:r1_402,r10:r11,r11:fp - 0x5C<32>,r12:fp - 0x2C<32>,r2:r2_397,r3:r3_404,r4:r4_382,r5:r5_400,r6:r6_32,r7:r7_416,Stack +004C:tLoc88,Stack +006C:dwLoc68,Stack +0078:dwLoc5C,Stack +0098:dwLoc3C,Stack +00A4:tLoc30,Stack +00A8:r3_404,Stack +00AC:tLoc28
		defs: r1:r1_419,r12:r12_427,r2:r2_420,r3:r3_421,r5:r5_423,sp:sp_417
	branch (CONVERT(r3_421 < r5_423, bool, word32) ^ r1_419 << 0x1F<8> | CONVERT(r5_423 < r2_420, bool, word32) ^ Mem408[sp_373 + 72<i32>:word32] << 0x1F<8> | CONVERT(r12_427 == 0<32>, bool, word32)) != 0<32> l0000D19C
l0000D19C:
	r12_449 = 0xFFFFFFFF<32>
l0000D14E:
	Mem451[sp_373 + 172<i32>:word32] = Mem408[sp_373 + 168<i32>:word32]
l0000D152:
	r8_453 = sp_373 + 0x78<32>
	r5_455 = Mem454[r8_453:word32]
	r4_456 = Mem454[r8_453 + 4<i32>:word32]
	r3_457 = Mem454[r8_453 + 8<i32>:word32]
	Mem460[sp_373 + -4<i32>:word32] = Mem454[r8_453 + 12<i32>:word32]
	Mem461[sp_373 + -8<i32>:word32] = r3_457
	Mem462[sp_373 + -12<i32>:word32] = r4_456
	Mem463[sp_373 + -16<i32>:word32] = r5_455
	r8_459 = sp_373 + 0x88<32>
	lr_464 = sp_373 + 0x10<32>
	r5_465 = Mem463[r8_459:word32]
	r4_466 = Mem463[r8_459 + 4<i32>:word32]
	r3_467 = Mem463[r8_459 + 8<i32>:word32]
	r11_r10_469 = Mem463[sp_373 + 152<i32>:word64]
	Mem470[lr_464 + -4<i32>:word32] = Mem463[r8_459 + 12<i32>:word32]
	Mem471[lr_464 + -8<i32>:word32] = r3_467
	Mem472[lr_464 + -12<i32>:word32] = r4_466
	Mem473[lr_464 + -16<i32>:word32] = r5_465
	r5_474 = Mem473[sp_373:word32]
	r4_475 = Mem473[sp_373 + 4<i32>:word32]
	r3_476 = Mem473[sp_373 + 8<i32>:word32]
	lr_478 = Mem473[sp_373 + 40<i32>:word32]
	Mem479[lr_478 + -4<i32>:word32] = Mem473[sp_373 + 12<i32>:word32]
	Mem480[lr_478 + -8<i32>:word32] = r3_476
	Mem481[lr_478 + -12<i32>:word32] = r4_475
	Mem482[lr_478 + -16<i32>:word32] = r5_474
	r4_483 = sp_373 + 0x10<32>
	r5_r4_488 = Mem482[r4_483:word64]
	r9_489 = Mem482[sp_373 + 160<i32>:word32]
	r12_449 = Mem482[sp_373 + 172<i32>:word32]
	Mem494[lr_478 + 8<i32>:word64] = Mem482[r4_483 + 8<i32>:word64]
	Mem498[lr_478:word64] = r5_r4_488
	Mem499[lr_478 + -24<i32>:word32] = r9_489
	Mem502[lr_478 + 32<i32>:word64] = r11_r10_469
l0000D1B0:
	return r12_449
fn0000CEEE_exit:


word32 fn0000D1B8(word32 r0, word32 r1, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse:  r0:[0..31] r1:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000D1B8_entry:
l0000D1B8:
	r6_19 = 0x0000D1BC<p32> - Mem17[0x0000D1CE<p32>:word32]
	return fn0000CEEE(r0, r1, Mem17[r6_19 + 612<i32>:word32], Mem17[r6_19 + 444<i32>:word32], r12)
fn0000D1B8_exit:


word32 fn0000D204(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r12
// Preserved: r4 r5 r6 r7 sp
fn0000D204_entry:
l0000D204:
	r6_19 = 0x0000D208<p32> - Mem17[0x0000D21A<p32>:word32]
	call Mem17[r6_19 + 320<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem17,r12:0x100<32>,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: r12:r12_28
	r12_30 = CONVERT(Mem17[r12_28:byte], byte, word32)
	branch r12_30 != 0<32> l0000D21A
l0000D216_1:
	r12_30 = 0x2E<32>
l0000D21A:
	return r12_30
fn0000D204_exit:


bool fn0000D220(word32 r0, word32 r1, word32 r2, word32 r9, word32 r10, word32 lr, word32 pc, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B818
// MayUse:  lr:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r2:[0..31] r9:[0..31]
// LiveOut: Z lr pc r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000D220_entry:
l0000D220:
	r6_1002 = 0x0000D22A<p32> - Mem29[0x0000D390<p32>:word32]
	fn0000EB48(r0, r1, r2, &tLoc30, r10, r9, r6_1002, fp - 36<i32>, &tLoc30, &tLoc40, r10, lr, out lr_3838)
	r7_1003 = fp - 36<i32>
	r4_1012 = r10
	r3_122 = &tLoc30
	r5_1001 = r9
	N_55 = <invalid>
	V_54 = <invalid>
	branch N_55 | V_54 l0000D258
l0000D258:
	fn0000EA4C(&tLoc30, r9, out r9_65, out r10_1049, out r11_130, out lr_1004)
	N_68 = <invalid>
	V_67 = <invalid>
	branch N_68 | V_67 l0000D284
l0000D284:
	r8_74 = dwLoc38 + 7<32>
	branch dwLoc38 >u 0xFFFFFFFF<32> l0000D294
l0000D290_1:
	r8_74 = 0xFFFFFFFF<32>
l0000D294:
	r9_1067 = r8_74 + dwLoc34
	branch r9_1067 >=u r8_74 l0000D29E
l0000D29A_1:
	r9_1067 = 0xFFFFFFFF<32>
l0000D29E:
	r12_85 = r9_1067 + 6<32>
	branch r12_85 <u r9_1067 l0000E654
l0000D2A8:
	branch r12_85 >u 0xF9F<32> l0000D2C6
l0000D2C6:
	branch r12_85 == 0xFFFFFFFF<32> l0000E654
l0000D2CC:
	call Mem47[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_61,Mem:Mem47,pc:pc_133,r0:r0,r1:r1,r10:r10_62,r11:r11_63,r12:r12_85,r2:r2,r3:&tLoc30,r4:r10,r5:r9,r6:r6_33,r7:fp - 36<i32>,r9:r9_84,Stack +031C:tLoc40,Stack +0320:dwLoc3C,Stack +0324:dwLoc38,Stack +0328:dwLoc34,Stack +032C:tLoc30
		defs: lr:lr_127,pc:pc_133,r0:r0_119,r1:r1_120,r10:r10_128,r11:r11_130,r12:r12_129,r2:r2_121,r3:r3_122,r4:r4_123,r5:r5_124,r6:r6_125,r7:r7_126,r9:r9_131,sp:sp_118,VNZC:VNZC_134
	branch SLICE(VNZC_134, bool, 1) l0000E654
l0000D2D4:
	Mem136[r7_1003 + -796<i32>:word32] = r12_129
	Mem137[r7_1003 + -800<i32>:word32] = r12_129
l0000D2B0:
	sp_118 = fp - 0x35C<32> + (r9_1067 + 0xC<32> & 0xFFFFFFFC<32>)
l0000D2DC:
	r9_147 = Mem146[r7_1003 + -804<i32>:word32]
	branch r9_147 != 0<32> l0000D2EE
l0000D2EE:
	r12_151 = Mem146[r7_1003 + -804<i32>:word32]
	Mem153[r7_1003 + -736<i32>:word32] = Mem146[Mem146[r7_1003 + -808<i32>:word32]:word32]
	Mem154[r7_1003 + -788<i32>:word32] = r12_151
l0000D2E4:
	Mem155[r7_1003 + -788<i32>:word32] = r9_147
	Mem156[r7_1003 + -736<i32>:word32] = r9_147
l0000D300:
	r8_159 = Mem158[r7_1003 + -24<i32>:word32]
	Mem164[r7_1003 + -784<i32>:word32] = 0<32>
	Mem165[r7_1003 + -740<i32>:word32] = r8_159 + 0x24<32>
	Mem166[r7_1003 + -744<i32>:word32] = r8_159 + 0x28<32>
	Mem167[r7_1003 + -792<i32>:word32] = 0<32>
	r11_1016 = 0<32>
l0000D31C:
	r9_1067 = Mem169[r7_1003 + -744<i32>:word32]
	r10_1049 = Mem169[r9_1067 + -40<i32>:word32]
	branch r4_1012 == r10_1049 l0000D3D8
l0000D328:
	r8_175 = Mem169[r7_1003 + -784<i32>:word32]
	r2 = r10_1049 + r4_1012
	r1 = r2 + r8_175
	r12_178 = Mem169[r7_1003 + -736<i32>:word32]
	branch r1 >=u r8_175 l0000D33E
l0000D33A_1:
	r1 = 0xFFFFFFFF<32>
l0000D33E:
	branch r1 <=u r12_178 l0000D3C2
l0000D344:
	branch r12_178 != 0<32> l0000D34C
l0000D34C:
	r8_190 = Mem169[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem169[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000D35C
l0000D358_1:
	r12_178 = r8_190 << 1<i32>
l0000D35C:
	branch r11_1016 >= 0<32> l0000D360
l0000D35C_1:
	r12_178 = 0xFFFFFFFF<32>
l0000D348:
	r12_178 = 0xC<32>
l0000D360:
	branch r12_178 >=u r1 l0000D366
l0000D362_1:
	r12_178 = r1
l0000D366:
	Mem210[r7_1003 + -736<i32>:word32] = r12_178
	branch r12_178 == 0xFFFFFFFF<32> l0000E630
l0000D370:
	r10_213 = Mem210[r7_1003 + -788<i32>:word32]
	r9_214 = Mem210[r7_1003 + -804<i32>:word32]
	r3_217 = CONVERT(r10_213 == r9_214, bool, word32)
	branch r3_217 != 0<32> l0000D384
l0000D380:
	branch r10_213 != 0<32> l0000D394
l0000D394:
	call Mem210[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_251,Mem:Mem210,pc:pc_273,r0:r0_232,r1:r1_182,r10:r10_213,r11:Mem210[r7_168 + -736<i32>:word32],r12:Mem210[r7_168 + -788<i32>:word32],r2:r2_176,r3:r3_217,r4:r4_172,r5:r5_246,r6:r6_227,r7:r7_168,r9:r9_214
		defs: lr:lr_267,pc:pc_273,r0:r0_259,r1:r1_260,r10:r10_268,r11:r11_270,r12:r12_269,r2:r2_261,r3:r3_262,r4:r4_263,r6:r6_265,r7:r7_266,r9:r9_271
l0000D384:
	call Mem210[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_251,Mem:Mem210,pc:pc_310,r0:r0_232,r1:r1_182,r10:r10_213,r11:r11_289,r12:Mem210[r7_168 + -736<i32>:word32],r2:r2_176,r3:r3_217,r4:r4_172,r5:r5_246,r6:r6_227,r7:r7_168,r9:r9_214
		defs: lr:lr_304,pc:pc_310,r0:r0_296,r1:r1_297,r10:r10_305,r11:r11_307,r12:r12_306,r2:r2_298,r3:r3_299,r4:r4_300,r6:r6_302,r7:r7_303,r9:r9_308
l0000D3A0:
	r5_1001 = r12_269
	branch r12_269 == 0<32> l0000E630
l0000D3A8:
	branch r3_122 == 0<32> l0000D3BE
l0000D3AC:
	r8_321 = Mem210[r7_1003 + -784<i32>:word32]
	branch r8_321 == 0<32> l0000D3BE
l0000D3B4:
	call Mem210[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_331,Mem:Mem210,pc:pc_349,r0:r0_327,r1:r1_328,r10:r8_321,r11:Mem210[r7_319 + -788<i32>:word32],r12:r12_312,r2:r2_329,r3:r3_316,r4:r4_330,r5:r12_312,r6:r6_326,r7:r7_319,r9:r9_332
		defs: lr:lr_343,pc:pc_349,r0:r0_335,r1:r1_336,r2:r2_337,r3:r3_338,r4:r4_339,r5:r5_340,r6:r6_341,r7:r7_342,r9:r9_347
l0000D3BE:
	Mem353[r7_1003 + -788<i32>:word32] = r5_1001
l0000D3C2:
	call Mem355[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_377,Mem:Mem355,pc:pc_399,r0:r0_368,r1:r1_370,r10:r2_358,r11:r4_363,r12:Mem355[r7_354 + -788<i32>:word32] + Mem355[r7_354 + -784<i32>:word32],r2:r2_358,r3:r3_372,r4:r4_363,r5:r5_376,r6:r6_366,r7:r7_354,r9:r9_379
		defs: lr:lr_393,pc:pc_399,r0:r0_385,r1:r1_386,r2:r2_387,r3:r3_388,r4:r4_389,r5:r5_390,r6:r6_391,r7:r7_392,r9:r9_397,sp:sp_384
	Mem401[r7_1003 + -784<i32>:word32] = r1
	pc = pc_399
l0000D3D8:
	r8_404 = Mem403[r7_1003 + -28<i32>:word32]
	r10_1049 = Mem403[r7_1003 + -792<i32>:word32]
	branch r10_1049 == r8_404 l0000E4CE
l0000E4CE:
	r3_408 = Mem403[r7_1003 + -784<i32>:word32]
	r12_409 = Mem403[r7_1003 + -784<i32>:word32]
	r3_122 = r3_408 + 1<32>
	r11_411 = Mem403[r7_1003 + -736<i32>:word32]
	branch r3_408 + 1<32> <u r12_409 l0000E4E2
l0000E4DE_1:
	r8_404 = r3_408 + 1<32>
l0000E4E2:
	branch r3_408 + 1<32> >=u r12_409 l0000E4E6
l0000E4E2_1:
	r8_404 = 0xFFFFFFFF<32>
l0000E4E6:
	branch r8_404 <=u r11_411 l0000E58A
l0000E4EC:
	branch r11_411 != 0<32> l0000E4F8
l0000E4F8:
	r8_429 = Mem403[r7_1003 + -736<i32>:word32]
	r9_430 = Mem403[r7_1003 + -736<i32>:word32]
	r8_404 = r8_429 << 1<i32>
	r9_1067 = r9_430
	branch r9_430 < 0<32> l0000E508
l0000E504_1:
	r9_1067 = r8_429 << 1<i32>
l0000E508:
	branch r9_430 >= 0<32> l0000E50C
l0000E508_1:
	r9_1067 = 0xFFFFFFFF<32>
l0000E50C:
	Mem441[r7_1003 + -736<i32>:word32] = r9_1067
l0000E4F0:
	Mem443[r7_1003 + -736<i32>:word32] = 0xC<32>
	r10_1049 = 0xC<32>
l0000E510:
	r12_446 = Mem445[r7_1003 + -784<i32>:word32]
	r11_1016 = Mem445[r7_1003 + -736<i32>:word32]
	branch r3_408 + 1<32> <u r12_446 l0000E51E
l0000E51A_1:
	r8_404 = r3_408 + 1<32>
l0000E51E:
	branch r3_408 + 1<32> >=u r12_446 l0000E522
l0000E51E_1:
	r8_404 = 0xFFFFFFFF<32>
l0000E522:
	branch r8_404 <=u r11_1016 l0000E532
l0000E528:
	branch r3_408 + 1<32> <u r12_446 l0000E630
l0000E52E:
	Mem475[r7_1003 + -736<i32>:word32] = r3_408 + 1<32>
l0000E532:
	r10_1049 = Mem477[r7_1003 + -736<i32>:word32]
	branch r10_1049 == 0xFFFFFFFF<32> l0000E630
l0000E53A:
	r9_483 = Mem477[r7_1003 + -788<i32>:word32]
	r4_487 = CONVERT(r9_483 == Mem477[r7_1003 + -804<i32>:word32], bool, word32)
	branch r4_487 != 0<32> l0000E54E
l0000E54A:
	branch r9_483 != 0<32> l0000E55C
l0000E55C:
	call Mem477[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,Mem:Mem477,pc:pc_575,r0:r0_509,r1:r1_518,r10:r10_480,r11:Mem477[r7_402 + -736<i32>:word32],r12:Mem477[r7_402 + -788<i32>:word32],r2:r2_528,r3:r3_408 + 1<32>,r4:r4_487,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_483
		defs: lr:lr_569,pc:pc_575,r0:r0_561,r1:r1_562,r10:r10_570,r11:r11_572,r12:r12_571,r2:r2_563,r3:r3_564,r4:r4_565,r6:r6_567,r7:r7_568,r9:r9_573
l0000E54E:
	call Mem477[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,Mem:Mem477,pc:pc_608,r0:r0_509,r1:r1_518,r10:r10_480,r11:r11_447,r12:Mem477[r7_402 + -736<i32>:word32],r2:r2_528,r3:r3_408 + 1<32>,r4:r4_487,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_483
		defs: lr:lr_602,pc:pc_608,r0:r0_594,r1:r1_595,r10:r10_603,r11:r11_605,r12:r12_604,r2:r2_596,r3:r3_597,r4:r4_598,r6:r6_600,r7:r7_601,r9:r9_606
l0000E568:
	r5_1001 = r12_571
	branch r12_571 == 0<32> l0000E630
l0000E56E:
	branch r4_1012 == 0<32> l0000E586
l0000E572:
	r12_619 = Mem477[r7_1003 + -784<i32>:word32]
	branch r12_619 == 0<32> l0000E586
l0000E57A:
	call Mem477[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_630,Mem:Mem477,pc:pc_648,r0:r0_626,r1:r1_627,r10:r12_619,r11:Mem477[r7_617 + -788<i32>:word32],r12:r12_610,r2:r2_628,r3:r3_629,r4:r4_614,r5:r12_610,r6:r6_625,r7:r7_617,r9:r9_631
		defs: lr:lr_642,pc:pc_648,r0:r0_634,r1:r1_635,r2:r2_636,r3:r3_637,r4:r4_638,r5:r5_639,r6:r6_640,r7:r7_641
l0000E586:
	Mem652[r7_1003 + -788<i32>:word32] = r5_1001
l0000E58A:
	r11_655 = Mem654[r7_1003 + -788<i32>:word32]
	r10_656 = Mem654[r7_1003 + -784<i32>:word32]
	Mem658[r10_656:byte] = 0<8>
	r9_659 = Mem658[r7_1003 + -804<i32>:word32]
	branch r11_655 == r9_659 l0000E5BE
l0000E5A0:
	branch r3_122 >=u Mem658[r7_1003 + -736<i32>:word32] l0000E5BE
l0000E5A8:
	call Mem658[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_683,Mem:Mem658,pc:pc_702,r0:r0_671,r1:r1_673,r10:r10_656,r11:r3_663,r12:Mem658[r7_653 + -788<i32>:word32],r2:r2_675,r3:r3_663,r4:r4_677,r5:r5_682,r6:r6_669,r7:r7_653,r9:r9_659
		defs: lr:lr_696,pc:pc_702,r0:r0_688,r1:r1_689,r12:r12_698,r2:r2_690,r3:r3_691,r4:r4_692,r5:r5_693,r6:r6_694,r7:r7_695,r9:r9_700,VNZC:VNZC_703
	r11_655 = Mem658[r7_1003 + -788<i32>:word32]
	branch SLICE(VNZC_703, bool, 1) l0000E5BA
l0000E5B6_1:
	r11_655 = r12_698
l0000E5BA:
	Mem709[r7_1003 + -788<i32>:word32] = r11_655
l0000E5BE:
	r10_712 = Mem711[r7_1003 + -796<i32>:word32]
	branch r10_712 == 0<32> l0000E5CC
l0000E5C6:
	call Mem711[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_730,Mem:Mem711,pc:pc_752,r0:r0_718,r1:r1_720,r10:r10_712,r11:r11_732,r12:r10_712,r2:r2_722,r3:r3_724,r4:r4_726,r5:r5_728,r6:r6_716,r7:r7_710,r9:r9_733
		defs: lr:lr_746,pc:pc_752,r0:r0_738,r1:r1_739,r10:r10_747,r11:r11_749,r2:r2_740,r3:r3_741,r4:r4_742,r5:r5_743,r6:r6_744,r7:r7_745,r9:r9_750
l0000E5CC:
	call Mem711[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_764,Mem:Mem711,pc:pc_784,r0:r0_758,r1:r1_759,r10:r10_765,r11:r11_766,r12:Mem711[r7_754 + -24<i32>:word32],r2:r2_760,r3:r3_761,r4:r4_762,r5:r5_763,r6:r6_757,r7:r7_754,r9:r9_767
		defs: lr:lr_778,pc:pc_784,r0:r0_770,r1:r1_771,r10:r10_779,r11:r11_781,r2:r2_772,r3:r3_773,r4:r4_774,r5:r5_775,r6:r6_776,r7:r7_777,r9:r9_782
	r12_786 = Mem711[r7_1003 + -8<i32>:word32]
	branch r12_786 == 0<32> l0000E5E0
l0000E5DC:
	call Mem711[r6_776 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_778,Mem:Mem711,pc:pc_804,r0:r0_770,r1:r1_771,r10:r10_779,r11:r11_781,r12:r12_786,r2:r2_772,r3:r3_773,r4:r4_774,r5:r5_775,r6:r6_776,r7:r7_777,r9:r9_782
		defs: lr:lr_798,pc:pc_804,r7:r7_797
l0000E5E0:
	Mem810[Mem711[r7_1003 + -808<i32>:word32]:word32] = Mem711[r7_1003 + -784<i32>:word32]
l0000D3E6:
	r10_1049 = Mem403[r7_1003 + -744<i32>:word32]
	r9_1067 = CONVERT(Mem403[Mem403[r7_1003 + -740<i32>:word32]:byte], byte, word32)
	r11_1016 = 0x25<32>
	r12_1006 = Mem403[r10_1049:word32]
	branch SLICE(r9_1067, byte, 0) != 0x25<8> l0000D4A4
l0000D4A4:
	branch r12_1006 == 0xFFFFFFFF<32> l0000E330
l0000D4AA:
	branch SLICE(r9_1067, byte, 0) != 0x6E<8> l0000D528
l0000D528:
	branch SLICE(r9_1067, byte, 0) == 0x61<8> l0000D53A
l0000D530:
	branch SLICE(r9_1067, byte, 0) != 0x41<8> l0000DE30
l0000DE30:
	r9_833 = Mem403[r7_1003 + -8<i32>:word32]
	r10_832 = Mem403[Mem403[r7_1003 + -744<i32>:word32] + -32<i32>:word32]
	r4_834 = Mem403[r7_1003 + -800<i32>:word32]
	Mem836[r7_1003 + -748<i32>:word32] = Mem403[r9_833 + r12_1006 * 0xC<32>:word32]
	Mem837[r4_834:byte] = 0x25<8>
	r4_1012 = r4_834 + 1<i32>
	branch Test(NE,SLICE(r10_832, bool, 0)) l0000DE58
l0000DE54:
	Mem843[r4_834 + 1<i32>:byte] = 0x27<8>
	r4_1012 = r4_834 + 2<i32>
l0000DE58:
	branch Test(NE,SLICE(r10_832, bool, 1)) l0000DE62
l0000DE5E:
	Mem851[r4_1012:byte] = 0x2D<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE62:
	branch Test(NE,SLICE(r10_832, bool, 2)) l0000DE6C
l0000DE68:
	Mem859[r4_1012:byte] = 0x2B<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE6C:
	branch Test(NE,SLICE(r10_832, bool, 3)) l0000DE76
l0000DE72:
	Mem867[r4_1012:byte] = 0x20<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE76:
	branch Test(NE,SLICE(r10_832, bool, 4)) l0000DE80
l0000DE7C:
	Mem875[r4_1012:byte] = 0x23<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE80:
	branch Test(NE,SLICE(r10_832, bool, 5)) l0000DE8A
l0000DE86:
	Mem883[r4_1012:byte] = 0x30<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE8A:
	r8_897 = Mem891[r7_1003 + -744<i32>:word32]
	r11_898 = Mem891[r8_897 + -28<i32>:word32]
	r5_899 = Mem891[r8_897 + -24<i32>:word32]
	branch r11_898 == r5_899 l0000DEA6
l0000DE9A:
	r5_902 = r5_899 + r11_898
	call Mem891[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,Mem:Mem891,pc:pc_971,r0:r0_509,r1:r1_518,r10:r5_902,r11:r11_898,r12:r4_904,r2:r2_528,r3:r3_937,r4:r4_904,r5:r5_902,r6:r6_500,r7:r7_402,r9:r9_833
		defs: lr:lr_965,pc:pc_971,r0:r0_957,r1:r1_958,r2:r2_959,r3:r3_960,r4:r4_961,r5:r5_962,r6:r6_963,r7:r7_964,r9:r9_969,sp:sp_956
	r4_1012 = r4_961 + r5_962
l0000DEA6:
	r12_1006 = Mem891[r7_1003 + -744<i32>:word32]
	r11_978 = Mem891[r12_1006 + -16<i32>:word32]
	r5_1001 = Mem891[r12_1006 + -12<i32>:word32]
	branch r11_978 == r5_1001 l0000DEC2
l0000DEB6:
	r5_982 = r5_1001 + r11_978
	call Mem891[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_992,Mem:Mem891,pc:pc_1010,r0:r0_988,r1:r1_989,r10:r5_982,r11:r11_978,r12:r4_984,r2:r2_990,r3:r3_991,r4:r4_984,r5:r5_982,r6:r6_987,r7:r7_975,r9:r9_993
		defs: lr:lr_1004,pc:pc_1010,r1:r1_997,r12:r12_1006,r2:r2_998,r3:r3_999,r4:r4_1000,r5:r5_1001,r6:r6_1002,r7:r7_1003,sp:sp_995
	r4_1012 = r4_1000 + r5_1001
l0000DEC2:
	r11_1016 = Mem891[r7_1003 + -748<i32>:word32]
	branch r11_1016 >u 0x10<32> l0000DEF8
l0000DECC:
	r9_1020 = 1<32> << r11_1016
	branch (r9_1020 & 0x1FFFF<32> & 0xFFFF4180<32>) != 0<32> l0000DEF0
l0000DEDE:
	branch Test(EQ,SLICE(r9_1020, bool, 12)) l0000DEF4
l0000DEF4:
	r8_1030 = 0x4C<32>
l0000DEE4:
	branch (r9_1020 & 0x600<32>) == 0<32> l0000DEF8
l0000DEEC:
	Mem1037[r4_1012:byte] = 0x6C<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DEF0:
	r8_1030 = 0x6C<32>
l0000DEF6:
	Mem1043[r4_1012:byte] = SLICE(r8_1030, byte, 0)
	r4_1012 = r4_1012 + 1<i32>
l0000DEF8:
	r10_1049 = Mem1048[r7_1003 + -740<i32>:word32]
	Mem1053[r4_1012:byte] = Mem1048[r10_1049:byte]
	r0 = r4_1012 + 1<i32>
	Mem1056[r0:byte] = 0x25<8>
	Mem1058[r4_1012 + 3<i32>:byte] = 0<8>
	Mem1060[r4_1012 + 2<i32>:byte] = 0x6E<8>
	r8_1062 = Mem1060[Mem1060[r7_1003 + -744<i32>:word32] + -20<i32>:word32]
	branch r8_1062 != 0xFFFFFFFF<32> l0000DF1E
l0000DF1E:
	r9_1067 = Mem1060[r7_1003 + -8<i32>:word32] + r8_1062 * 0xC<32>
	branch Mem1060[r9_1067:word32] != 5<32> l0000E330
l0000DF32:
	Mem1073[r7_1003 + -728<i32>:word32] = Mem1060[r9_1067 + 4<i32>:word32]
	r2 = 1<32>
l0000DF1A:
	r2 = 0<32>
l0000DF3A:
	r12_1006 = Mem1076[r7_1003 + -744<i32>:word32]
	r8_1078 = Mem1076[r12_1006 + -8<i32>:word32]
	branch r8_1078 == 0xFFFFFFFF<32> l0000DF66
l0000DF46:
	r9_1067 = Mem1076[r7_1003 + -8<i32>:word32] + r8_1078 * 0xC<32>
	branch Mem1076[r9_1067:word32] != 5<32> l0000E330
l0000DF5A:
	r8_1078 = r7_1003 + (r2 << 2<8>)
	Mem1092[r8_1078 + -728<i32>:word32] = Mem1076[r9_1067 + 4<i32>:word32]
	r2 = r2 + 1<32>
l0000DF66:
	r9_1095 = Mem1094[r7_1003 + -784<i32>:word32]
	r11_1016 = Mem1094[r7_1003 + -784<i32>:word32]
	r9_1067 = r9_1095 + 2<32>
	r10_1098 = Mem1094[r7_1003 + -736<i32>:word32]
	branch r9_1095 + 2<32> <u r11_1016 l0000DF7A
l0000DF76_1:
	r8_1078 = r9_1095 + 2<32>
l0000DF7A:
	branch r9_1095 + 2<32> >=u r11_1016 l0000DF7E
l0000DF7A_1:
	r8_1078 = 0xFFFFFFFF<32>
l0000DF7E:
	branch r8_1078 <=u r10_1098 l0000E022
l0000DF84:
	branch r10_1098 != 0<32> l0000DF90
l0000DF90:
	r8_1117 = Mem1094[r7_1003 + -736<i32>:word32]
	r12_1118 = Mem1094[r7_1003 + -736<i32>:word32]
	r8_1119 = r8_1117 << 1<i32>
	r12_1122 = r12_1118
	branch r12_1118 < 0<32> l0000DFA0
l0000DF9C_1:
	r12_1122 = r8_1117 << 1<i32>
l0000DFA0:
	branch r12_1118 >= 0<32> l0000DFA4
l0000DFA0_1:
	r12_1122 = 0xFFFFFFFF<32>
l0000DFA4:
	Mem1129[r7_1003 + -736<i32>:word32] = r12_1122
l0000DF88:
	Mem1131[r7_1003 + -736<i32>:word32] = 0xC<32>
	r8_1119 = 0xC<32>
l0000DFA8:
	r11_1016 = Mem1133[r7_1003 + -784<i32>:word32]
	r10_1049 = Mem1133[r7_1003 + -736<i32>:word32]
	branch r9_1095 + 2<32> <u r11_1016 l0000DFB6
l0000DFB2_1:
	r8_1119 = r9_1095 + 2<32>
l0000DFB6:
	branch r9_1095 + 2<32> >=u r11_1016 l0000DFBA
l0000DFB6_1:
	r8_1119 = 0xFFFFFFFF<32>
l0000DFBA:
	branch r8_1119 <=u r10_1049 l0000DFCA
l0000DFC0:
	branch r9_1095 + 2<32> <u r11_1016 l0000E630
l0000DFC6:
	Mem1163[r7_1003 + -736<i32>:word32] = r9_1095 + 2<32>
l0000DFCA:
	r9_1067 = Mem1165[r7_1003 + -736<i32>:word32]
	branch r9_1067 == 0xFFFFFFFF<32> l0000E630
l0000DFD4:
	r8_1171 = Mem1165[r7_1003 + -788<i32>:word32]
	r4_1175 = CONVERT(r8_1171 == Mem1165[r7_1003 + -804<i32>:word32], bool, word32)
	branch r4_1175 != 0<32> l0000DFE8
l0000DFE4:
	branch r8_1171 != 0<32> l0000DFF2
l0000DFF2:
	call Mem1165[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_1266,Mem:Mem1165,pc:pc_1301,r0:r0_1054,r1:r1_1215,r10:r10_1135,r11:Mem1165[r7_1014 + -736<i32>:word32],r12:Mem1165[r7_1014 + -788<i32>:word32],r2:r2_1226,r3:r3_1238,r4:r4_1175,r5:r5_1252,r6:r6_1191,r7:r7_1014,r9:r9_1168
		defs: lr:lr_1295,pc:pc_1301,r0:r0_1287,r1:r1_1288,r10:r10_1296,r11:r11_1298,r12:r12_1297,r2:r2_1289,r3:r3_1290,r4:r4_1291,r6:r6_1293,r7:r7_1294,r9:r9_1299,sp:sp_1286
l0000DFE8:
	call Mem1165[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_1266,Mem:Mem1165,pc:pc_1334,r0:r0_1054,r1:r1_1215,r10:r10_1135,r11:r11_1134,r12:Mem1165[r7_1014 + -736<i32>:word32],r2:r2_1226,r3:r3_1238,r4:r4_1175,r5:r5_1252,r6:r6_1191,r7:r7_1014,r9:r9_1168
		defs: lr:lr_1328,pc:pc_1334,r0:r0_1320,r1:r1_1321,r10:r10_1329,r11:r11_1331,r12:r12_1330,r2:r2_1322,r3:r3_1323,r4:r4_1324,r6:r6_1326,r7:r7_1327,r9:r9_1332,sp:sp_1319
l0000DFFE:
	r5_1001 = r12_1297
	branch r12_1297 == 0<32> l0000E630
l0000E006:
	branch r4_1012 == 0<32> l0000E01E
l0000E00A:
	r11_1016 = Mem1165[r7_1003 + -784<i32>:word32]
	branch r11_1016 == 0<32> l0000E01E
l0000E012:
	call Mem1165[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_1355,Mem:Mem1165,pc:pc_1373,r0:r0_1351,r1:r1_1352,r10:Mem1165[r7_1343 + -784<i32>:word32],r11:Mem1165[r7_1343 + -788<i32>:word32],r12:r12_1336,r2:r2_1353,r3:r3_1354,r4:r4_1340,r5:r12_1336,r6:r6_1350,r7:r7_1343,r9:r9_1356
		defs: lr:lr_1367,pc:pc_1373,r0:r0_1359,r11:r11_1370,r2:r2_1361,r4:r4_1363,r5:r5_1364,r6:r6_1365,r7:r7_1366,sp:sp_1358
l0000E01E:
	Mem1377[r7_1003 + -788<i32>:word32] = r5_1001
l0000E022:
	r10_1049 = Mem1379[r7_1003 + -788<i32>:word32]
	Mem1383[Mem1379[r7_1003 + -784<i32>:word32]:byte] = 0<8>
	r3_122 = Mem1383[r7_1003 + -728<i32>:word32]
	r1 = Mem1383[r7_1003 + -724<i32>:word32]
l0000D53A:
	lr_1004 = Mem403[r7_1003 + -8<i32>:word32]
	r9_1388 = Mem403[r7_1003 + -744<i32>:word32]
	r5_1001 = Mem403[lr_1004 + r12_1006 * 0xC<32>:word32]
	r10_1049 = Mem403[r9_1388 + -28<i32>:word32]
	r4_1012 = Mem403[r9_1388 + -24<i32>:word32]
	Mem1396[r7_1003 + -780<i32>:word32] = Mem403[r9_1388 + -32<i32>:word32]
	branch r10_1049 != r4_1012 l0000D56A
l0000D56A:
	r11_1016 = Mem1396[r7_1003 + -744<i32>:word32]
	r8_1400 = Mem1396[r11_1016 + -20<i32>:word32]
	branch r8_1400 == 0xFFFFFFFF<32> l0000D5B0
l0000D5B0:
	Mem1404[r7_1003 + -772<i32>:word32] = 0<32>
l0000D5B6:
	r10_1049 = r10_1049 + 1<i32>
	r11_1412 = CONVERT(Mem1405[r10_1049:byte], byte, word32)
	branch Mem1405[r7_1003 + -772<i32>:word32] <=u Mem1405[0x0000D636<p32>:word32] l0000D5C8
l0000D5C8:
	r9_1418 = Mem1405[r7_1003 + -772<i32>:word32] * 0xA<32>
l0000D5C4:
	r9_1418 = 0xFFFFFFFF<32>
l0000D5D4:
	r8_1424 = r9_1418 + (r11_1412 - 0x30<32>)
	branch r8_1424 >=u r9_1418 l0000D5E2
l0000D5DE_1:
	r8_1424 = 0xFFFFFFFF<32>
l0000D5E2:
	Mem1431[r7_1003 + -772<i32>:word32] = r8_1424
	branch r10_1049 != r4_1012 l0000D5B6
l0000D5EA:
	Mem1440[r7_1003 + -776<i32>:word32] = 1<32>
	r11_1016 = 1<32>
l0000D576:
	r9_1067 = lr_1004 + r8_1400 * 0xC<32>
	branch Mem1396[r9_1067:word32] != 5<32> l0000E330
l0000D586:
	r8_1446 = Mem1396[r9_1067 + 4<i32>:word32]
	branch r8_1446 >= 0<32> l0000D5A4
l0000D5A4:
	Mem1449[r7_1003 + -772<i32>:word32] = r8_1446
	Mem1451[r7_1003 + -776<i32>:word32] = 1<32>
l0000D58C:
	Mem1458[r7_1003 + -780<i32>:word32] = Mem1396[r7_1003 + -780<i32>:word32] | 2<u32>
	Mem1459[r7_1003 + -772<i32>:word32] = -r8_1446
	Mem1460[r7_1003 + -776<i32>:word32] = 1<32>
l0000D55E:
	Mem1462[r7_1003 + -772<i32>:word32] = 0<32>
	Mem1463[r7_1003 + -776<i32>:word32] = 0<32>
l0000D5F0:
	r10_1049 = Mem1465[r7_1003 + -744<i32>:word32]
	r9_1067 = Mem1465[r10_1049 + -16<i32>:word32]
	r12_1006 = Mem1465[r10_1049 + -12<i32>:word32]
	branch r9_1067 == r12_1006 l0000D666
l0000D600:
	r8_1471 = Mem1465[r10_1049 + -8<i32>:word32]
	branch r8_1471 == 0xFFFFFFFF<32> l0000D622
l0000D622:
	r10_1049 = r9_1067 + 1<32>
	r1 = 0<32>
l0000D654:
	branch r10_1049 != r12_1006 l0000D62A
l0000D62A:
	r11_1016 = CONVERT(Mem1465[r10_1049:byte], byte, word32)
	branch r1 <=u Mem1465[0x0000D63A<p32>:word32] l0000D63C
l0000D63C:
	r9_1067 = r1 * 0xA<32>
l0000D634:
	r9_1067 = 0xFFFFFFFF<32>
l0000D644:
	r1 = r9_1067 + (r11_1016 - 0x30<32>)
	branch r1 >=u r9_1067 l0000D652
l0000D64E_1:
	r1 = 0xFFFFFFFF<32>
l0000D652:
	r10_1049 = r10_1049 + 1<32>
l0000D608:
	r9_1067 = lr_1004 + r8_1471 * 0xC<32>
	branch Mem1465[r9_1067:word32] != 5<32> l0000E330
l0000D618:
	r8_1512 = Mem1465[r9_1067 + 4<i32>:word32]
	branch r8_1512 < 0<32> l0000D666
l0000D666:
	r1 = 0<32>
	r9_1067 = 0xE<32>
	r3_122 = 0<32>
l0000D61E:
	r1 = r8_1512
l0000D658:
	branch r1 <u 0xF<32> l0000D65E
l0000D65A_1:
	r9_1067 = r1
l0000D65E:
	branch r1 >=u 0xF<32> l0000D662
l0000D65E_1:
	r9_1067 = 0xE<32>
l0000D662:
	r3_122 = 1<32>
l0000D66C:
	r8_1532 = r9_1067 + 0xC<32>
	branch r8_1532 >=u r9_1067 l0000D678
l0000D678:
	r9_1067 = Mem1465[r7_1003 + -772<i32>:word32]
	branch r8_1532 >=u r9_1067 l0000D682
l0000D67E_1:
	r8_1532 = r9_1067
l0000D674:
	r8_1532 = 0xFFFFFFFF<32>
l0000D682:
	r12_1554 = r8_1532 + 1<32>
	Mem1556[r7_1003 + -732<i32>:word32] = r12_1554
	branch r12_1554 <u r8_1532 l0000E630
l0000D690:
	branch r12_1554 >u 0x2BC<32> l0000D6A2
l0000D6A2:
	r10_1049 = Mem1556[r7_1003 + -732<i32>:word32]
	branch r10_1049 == 0xFFFFFFFF<32> l0000E630
l0000D6AC:
	call Mem1556[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_1389,Mem:Mem1556,pc:pc_1685,r0:r0_509,r1:r1_1594,r10:r10_1561,r11:r11_1646,r12:r10_1561,r2:r2_528,r3:r3_1612,r4:r4_1394,r5:r5_1392,r6:r6_500,r7:r7_402,r9:r9_1655
		defs: lr:lr_1679,pc:pc_1685,r0:r0_1671,r1:r1_1672,r10:r10_1680,r11:r11_1682,r12:r12_1681,r2:r2_1673,r3:r3_1674,r4:r4_1675,r5:r5_1676,r6:r6_1677,r7:r7_1678,r9:r9_1683,sp:sp_1670,VNZC:VNZC_1686
	branch SLICE(VNZC_1686, bool, 1) l0000E630
l0000D6B6:
	Mem1688[r7_1003 + -768<i32>:word32] = r12_1681
	pc = pc_1685
l0000D698:
	Mem1691[r7_1003 + -768<i32>:word32] = r7_1003 - 0x2D8<32>
l0000D6BA:
	r11_1695 = Mem1693[r7_1003 + -8<i32>:word32]
	r12_1696 = Mem1693[Mem1693[r7_1003 + -744<i32>:word32]:word32]
	branch r5_1001 != 0xC<32> l0000D9A6
l0000D9A6:
	r5_r4_1703 = Mem1693[r11_1695 + r12_1696 * 0xC<32> + 4<i32>:word64]
	r4_1704 = SLICE(r5_r4_1703, word32, 0) (alias)
	r5_1706 = SLICE(r5_r4_1703, word32, 32) (alias)
	branch fn00010CFC(r5_r4_1703, r5_r4_1703, pc, out r12_1006, out lr_1004) l0000D9F6
l0000D9F6:
	branch fn0000F278(r5_r4_1703, r7_1003, pc, out pc_1748) l0000DA16
l0000DA16:
	branch Test(NE,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000DA2E
l0000DA2E:
	branch Test(EQ,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000DA42
l0000DA42:
	Mem1762[r7_1003 + -824<i32>:word32] = Mem1693[r7_1003 + -768<i32>:word32]
	r12_1763 = Mem1762[r7_1003 + -824<i32>:word32]
	Mem1765[r12_1763:byte] = 0x20<8>
	Mem1767[r7_1003 + -824<i32>:word32] = r12_1763 + 1<i32>
l0000DA38:
	Mem1769[r7_1003 + -824<i32>:word32] = Mem1693[r7_1003 + -768<i32>:word32]
l0000DA20:
	r10_1770 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem1772[r10_1770:byte] = 0x2B<8>
	Mem1774[r7_1003 + -824<i32>:word32] = r10_1770 + 1<i32>
l0000DA00:
	r11_1776 = Mem1693[r7_1003 + -768<i32>:word32]
	r5_1706 = r5_1706 ^ Mem1693[0x0000DAC4<p32>:word32]
	Mem1781[r11_1776:byte] = 0x2D<8>
	Mem1783[r7_1003 + -824<i32>:word32] = r11_1776 + 1<i32>
l0000DA56:
	branch __avr32_f64_cmp_lt(r4_1704, r5_1706, 0<32>, 0<32>, out r9_5641, out r12_1792, out lr_5642) l0000DAD8
l0000DAD8:
	Mem1802[r7_1003 + -756<i32>:word64] = 0<64>
	Mem1803[r7_1003 + -4<i32>:word32] = r12_1792
l0000DA64:
	r11_r10_5643 = __avr32_f64_add(r4_1704, r5_1706, r4_1704, r5_1706, out r5_1812, out r6_1002, out r7_1003, out r8_5644, out r9_5645, out lr_1004)
	branch __avr32_f64_cmp_eq(r4_1704, r5_1812, SLICE(r11_r10_5643, word32, 0), SLICE(r11_r10_5643, word32, 32), out r12_1006) l0000DAB2
l0000DAB2:
	Mem1846[r7_1003 + -756<i32>:word64] = fn0000E684(r4_1704, r5_1812, r7_1003 - 4<32>, pc_1748)
l0000DAE4:
	branch r3_122 == 0<32> l0000DBB8
l0000DAE8:
	branch r1 >u 0xD<32> l0000DBB8
l0000DAEE:
	r5_r4_1859 = Mem1858[r7_1003 + -756<i32>:word64]
	r4_1861 = SLICE(r5_r4_1859, word32, 0) (alias)
	r5_1863 = SLICE(r5_r4_1859, word32, 32) (alias)
	r0_1860 = r1
l0000DAF4:
	r12_1866 = __avr32_f64_to_s32(r4_1861, r5_1863)
	Mem1873[r7_1003 + -816<i32>:word32] = r12_1866
	__avr32_f64_sub(__avr32_s32_to_f64(r12_1866, out r11_1876, out lr_1874), r11_1876, r4_1861, r5_1863, lr_1874, out r6_5663, out r7_1003, out r8_5664, out r9_5665, out r10_1889, out r11_1890, out lr_5666)
	branch r0_1860 != 0<32> l0000DB6E
l0000DB6E:
	r9_r8_1907 = Mem1873[pc_1748 + 322<i32>:word64]
	r11_r10_5648 = __avr32_f64_mul(SLICE(r9_r8_1907, word32, 0), SLICE(r9_r8_1907, word32, 32), r10_1889, r11_1890)
	r0_1860 = r0_1860 - 1<32>
	r4_1861 = SLICE(r11_r10_5648, word32, 0)
	r5_1863 = SLICE(r11_r10_5648, word32, 32)
l0000DB18:
	branch Test(NE,Mem1873[r7_1003 + 0xFFFFFCD0<32>:bool]) l0000DB3A
l0000DB3A:
	r11_r10_1929 = Mem1873[pc_1748 + -114<i32>:word64]
	r8_1942 = r0_1860
	branch __avr32_f64_cmp_lt(r10_1889, r11_1890, SLICE(r11_r10_1929, word32, 0), SLICE(r11_r10_1929, word32, 32), out r9_5649, out r12_5650, out lr_1937) l0000DB4C
l0000DB48_1:
	r8_1942 = 1<32>
l0000DB4C:
	r8_1945 = CONVERT(SLICE(r8_1942, byte, 0), byte, word32)
l0000DB22:
	r9_r8_1947 = Mem1873[pc_1748 + -90<i32>:word64]
	r5_1960 = r0_1860
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_1947, word32, 0), SLICE(r9_r8_1947, word32, 32), r10_1889, r11_1890, out r12_5651, out lr_1937) l0000DB34
l0000DB30_1:
	r5_1960 = 1<32>
l0000DB34:
	r8_1945 = CONVERT(SLICE(r5_1960, byte, 0), byte, word32)
l0000DB4E:
	branch r8_1945 == 0<32> l0000DB64
l0000DB64:
	r4_1976 = r10_1889
	r5_1980 = r11_1890 ^ Mem1873[0x0000DCA8<p32>:word32]
l0000DB52:
	r11_r10_1985 = Mem1873[pc_1748 + -130<i32>:word64]
	__avr32_f64_sub(r10_1889, r11_1890, SLICE(r11_r10_1985, word32, 0), SLICE(r11_r10_1985, word32, 32), lr_1937, out r6_5652, out r7_1003, out r8_5653, out r9_5654, out r10_1994, out r11_1995, out lr_5655)
	r4_1976 = r10_1994
	r5_1980 = r11_1995
l0000DB80:
	branch __avr32_f64_cmp_eq(0<32>, 0<32>, r4_1976, r5_1980, out r12_5656) l0000DBA8
l0000DB8E:
	r3_2026 = r1
l0000DBA4:
	branch r3_2026 != 0<32> l0000DB92
l0000DB92:
	r9_r8_2032 = Mem1873[pc_1748 + 294<i32>:word64]
	r11_r10_5662 = __avr32_f64_mul(SLICE(r9_r8_2032, word32, 0), SLICE(r9_r8_2032, word32, 32), r4_1976, r5_1980)
	r3_2026 = r3_2026 - 1<32>
	r4_1976 = SLICE(r11_r10_5662, word32, 0)
	r5_1980 = SLICE(r11_r10_5662, word32, 32)
l0000DBA8:
	r11_r10_2061 = Mem1873[r7_1003 + -756<i32>:word64]
	Mem2082[r7_2074 + -756<i32>:word64] = __avr32_f64_add(r4_1976, r5_1980, SLICE(r11_r10_2061, word32, 0), SLICE(r11_r10_2061, word32, 32), out r5_5657, out r6_5658, out r7_2074, out r8_5659, out r9_5660, out lr_5661)
	r7_1003 = r7_2074
l0000DBB8:
	r9_2085 = Mem2084[r7_1003 + -824<i32>:word32]
	Mem2087[r9_2085:byte] = 0x30<8>
	r12_2089 = Mem2087[r7_1003 + -740<i32>:word32]
	Mem2090[r7_1003 + -824<i32>:word32] = r9_2085 + 1<i32>
	r11_r10_2092 = Mem2090[r7_1003 + -756<i32>:word64]
	Mem2095[r9_2085 + 1<i32>:byte] = Mem2090[r12_2089:byte] + 0x17<8>
	r10_2110 = __avr32_s32_to_f64(__avr32_f64_to_s32(SLICE(r11_r10_2092, word32, 0), SLICE(r11_r10_2092, word32, 32)), out r11_2111, out lr_2109)
	r11_r10_2123 = Mem2095[r7_1003 + -756<i32>:word64]
	r5_2130 = __avr32_f64_sub(r10_2110, r11_2111, SLICE(r11_r10_2123, word32, 0), SLICE(r11_r10_2123, word32, 32), lr_2109, out r6_2131, out r7_2132, out r8_5646, out r9_5647, out r10_2127, out r11_2128, out lr_2126)
	Mem2139[r9_2085 + 2<i32>:byte] = SLICE(r5_2130, byte, 0)
	r4_2140 = r9_2085 + 3<i32>
	r2_2142 = r10_2127
	r3_2143 = r11_2128
	branch Test(EQ,Mem2139[r7_2132 + 0xFFFFFCF4<32>:bool]) l0000DC10
l0000DBFE:
	branch __avr32_f64_cmp_lt(r10_2127, r11_2128, 0<32>, 0<32>, out r9_2152, out r12_5667, out lr_2126) l0000DC10
l0000DC0C:
	branch r1 == 0<32> l0000DC8C
l0000DC10:
	Mem2175[r9_2085 + 3<i32>:byte] = SLICE(fn0000D204(r9_2085 + 3<i32>, r5_2130, r6_2131, r7_2132, lr_2126), byte, 0)
	r5_2177 = r9_2085 + 4<i32>
l0000DC6A:
	branch __avr32_f64_cmp_lt(r2_2142, r3_2143, 0<32>, 0<32>, out r9_5668, out r12_5669, out lr_2126) l0000DC1A
l0000DC1A:
	r9_r8_2194 = Mem2193[pc_1748 + 150<i32>:word64]
	r11_r10_5670 = __avr32_f64_mul(SLICE(r9_r8_2194, word32, 0), SLICE(r9_r8_2194, word32, 32), r2_2142, r3_2143)
	r10_2199 = SLICE(r11_r10_5670, word32, 0) (alias)
	r11_2200 = SLICE(r11_r10_5670, word32, 32) (alias)
	r12_2213 = __avr32_f64_to_s32(r10_2199, r11_2200)
	branch r12_2213 > 9<32> l0000DC3A
l0000DC3A:
	r9_2227 = CONVERT(Mem2193[Mem2193[r7_2132 + -740<i32>:word32]:byte] - 0xA<8>, byte, word32)
l0000DC36:
	r9_2227 = 0x30<32>
l0000DC46:
	Mem2238[r5_2177:byte] = SLICE(r9_2227 + r12_2213, byte, 0)
	r8_2235 = r1 - 1<32>
	branch r1 == 0<32> l0000DC54
l0000DC50_1:
	r1 = r8_2235
l0000DC54:
	r5_2177 = __avr32_f64_sub(__avr32_s32_to_f64(r12_2213, out r11_2245, out lr_2243), r11_2245, r10_2199, r11_2200, lr_2243, out r6_2131, out r7_2132, out r8_5671, out r9_5672, out r10_2265, out r11_2266, out lr_5673)
	r2_2142 = r10_2265
	r3_2143 = r11_2266
l0000DC78:
	r9_2152 = r5_2177
	r5_2130 = r5_2177
l0000DC84:
	branch r1 != 0<32> l0000DC7E
l0000DC7E:
	Mem2288[r5_2130:byte] = 0x30<8>
	r1 = r1 - 1<32>
	r5_2130 = r5_2130 + 1<i32>
l0000DC88:
	r4_2140 = r5_2177 + r1
l0000DC8C:
	r10_2298 = Mem2296[r7_2132 + -740<i32>:word32]
	r11_2302 = Mem2296[r6_2131 + 344<i32>:word32]
	Mem2307[r4_2140:byte] = Mem2296[r10_2298:byte] + 0xF<8>
	r8_2309 = Mem2307[r7_2132 + -4<i32>:word32]
	Mem2329[sp_118 - 4<i32>:word32] = r8_2309
	r4_2308 = r4_2140 + 1<i32>
	call Mem2329[r6_2131 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_2342,Mem:Mem2329,pc:pc_2360,r0:r9_2085 + 2<i32>,r1:r1_2336,r10:r10_2298,r11:r11_2302,r12:r4_2308,r2:r2_2337,r3:r3_2339,r4:r4_2308,r5:r5_2341,r6:r6_2299,r7:r7_2294,r8:r8_2309,r9:r9_2344
		defs: lr:lr_2354,pc:pc_2360,r0:r0_2346,r1:r1_2347,r11:r11_2357,r12:r12_2356,r2:r2_2348,r3:r3_2349,r4:r4_2350,r6:r6_2352,r7:r7_2353
	r5_1001 = r4_2350
l0000DCC2:
	branch Mem2329[r5_1001:byte] != 0<8> l0000DCC0
l0000DCC0:
	r5_1001 = r5_1001 + 1<32>
l0000D9C0:
	r11_1016 = CONVERT(Mem1693[Mem1693[r7_1003 + -740<i32>:word32]:byte], byte, word32)
	r10_2377 = Mem1693[r7_1003 + -768<i32>:word32] + 1<32>
	branch SLICE(r11_1016, byte, 0) != 0x41<8> l0000D9E8
l0000D9E8:
	r12_1006 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem2382[r12_1006:byte] = 0x6E<8>
l0000D9D4:
	Mem2385[Mem1693[r7_1003 + -768<i32>:word32]:byte] = 0x4E<8>
l0000D6CA:
	r5_r4_2389 = Mem1693[r11_1695 + r12_1696 * 0xC<32> + 4<i32>:word64]
	r4_2390 = SLICE(r5_r4_2389, word32, 0) (alias)
	r5_2392 = SLICE(r5_r4_2389, word32, 32) (alias)
	branch fn00010CFC(r5_r4_2389, r5_r4_2389, pc, out r12_1006, out lr_1004) l0000D70C
l0000D70C:
	branch fn0000F278(r5_r4_2389, r7_1003, pc, out pc_2417) l0000D72C
l0000D72C:
	branch Test(NE,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000D744
l0000D744:
	branch Test(EQ,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000D758
l0000D758:
	r12_2430 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem2432[r12_2430:byte] = 0x20<8>
	Mem2434[r7_1003 + -824<i32>:word32] = r12_2430 + 1<i32>
l0000D74E:
	Mem2436[r7_1003 + -824<i32>:word32] = Mem1693[r7_1003 + -768<i32>:word32]
l0000D736:
	r9_2437 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem2439[r9_2437:byte] = 0x2B<8>
	Mem2441[r7_1003 + -824<i32>:word32] = r9_2437 + 1<i32>
l0000D716:
	r10_2446 = Mem1693[r7_1003 + -768<i32>:word32]
	r5_2392 = r5_2392 ^ Mem1693[0x0000D856<p32>:word32]
	Mem2448[r10_2446:byte] = 0x2D<8>
	Mem2450[r7_1003 + -824<i32>:word32] = r10_2446 + 1<i32>
l0000D764:
	branch __avr32_f64_cmp_lt(r4_2390, r5_2392, 0<32>, 0<32>, out r9_5608, out r12_2459, out lr_5609) l0000D79C
l0000D79C:
	Mem2469[r7_1003 + -764<i32>:word64] = 0<64>
	Mem2470[r7_1003 + -4<i32>:word32] = r12_2459
l0000D772:
	r11_r10_5610 = __avr32_f64_add(r4_2390, r5_2392, r4_2390, r5_2392, out r5_2479, out r6_1002, out r7_1003, out r8_5611, out r9_5612, out lr_1004)
	branch __avr32_f64_cmp_eq(r4_2390, r5_2479, SLICE(r11_r10_5610, word32, 0), SLICE(r11_r10_5610, word32, 32), out r12_1006) l0000DA7A
l0000DA7A:
	r11_1016 = Mem2498[r7_1003 + -740<i32>:word32]
	r10_2502 = Mem2498[r7_1003 + -824<i32>:word32]
	branch Mem2498[r11_1016:byte] != 0x41<8> l0000DAA0
l0000DAA0:
	r12_1006 = Mem2498[r7_1003 + -824<i32>:word32]
	Mem2510[r12_1006:byte] = 0x69<8>
	Mem2512[r10_2502 + 1<32>:byte] = 0x6E<8>
	r9_2514 = 0x66<32>
	r8_2515 = r10_2502 + 2<32>
l0000DA8E:
	Mem2518[Mem2498[r7_1003 + -824<i32>:word32]:byte] = 0x49<8>
	Mem2520[r10_2502 + 1<32>:byte] = 0x4E<8>
	r9_2514 = 0x46<32>
	r8_2515 = r10_2502 + 2<32>
l0000D78A:
	Mem2540[r7_1003 + -764<i32>:word64] = fn0000E868(r4_2390, r5_2479, r7_1003 - 4<32>, pc_2417)
l0000D7A8:
	branch r3_122 == 0<32> l0000D8A2
l0000D7AC:
	branch r1 >u 0xD<32> l0000D8A2
l0000D7B2:
	r5_r4_2551 = Mem2550[r7_1003 + -764<i32>:word64]
	r4_2553 = SLICE(r5_r4_2551, word32, 0) (alias)
	r5_2555 = SLICE(r5_r4_2551, word32, 32) (alias)
	r0_2552 = r1
l0000D7B8:
	r12_2558 = __avr32_f64_to_s32(r4_2553, r5_2555)
	Mem2565[r7_1003 + -812<i32>:word32] = r12_2558
	__avr32_f64_sub(__avr32_s32_to_f64(r12_2558, out r11_2568, out lr_2566), r11_2568, r4_2553, r5_2555, lr_2566, out r6_5630, out r7_1003, out r8_5631, out r9_5632, out r10_2581, out r11_2582, out lr_5633)
	branch r0_2552 != 0<32> l0000D832
l0000D832:
	r9_r8_2599 = Mem2565[pc_2417 + 66<i32>:word64]
	r11_r10_5615 = __avr32_f64_mul(SLICE(r9_r8_2599, word32, 0), SLICE(r9_r8_2599, word32, 32), r10_2581, r11_2582)
	r0_2552 = r0_2552 - 1<32>
	r4_2553 = SLICE(r11_r10_5615, word32, 0)
	r5_2555 = SLICE(r11_r10_5615, word32, 32)
l0000D7DC:
	branch Test(NE,Mem2565[r7_1003 + 0xFFFFFCD4<32>:bool]) l0000D7FE
l0000D7FE:
	r11_r10_2621 = Mem2565[pc_2417 + 94<i32>:word64]
	r8_2634 = r0_2552
	branch __avr32_f64_cmp_lt(r10_2581, r11_2582, SLICE(r11_r10_2621, word32, 0), SLICE(r11_r10_2621, word32, 32), out r9_5616, out r12_5617, out lr_2629) l0000D810
l0000D80C_1:
	r8_2634 = 1<32>
l0000D810:
	r8_2637 = CONVERT(SLICE(r8_2634, byte, 0), byte, word32)
l0000D7E6:
	r9_r8_2639 = Mem2565[pc_2417 + 118<i32>:word64]
	r5_2652 = r0_2552
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_2639, word32, 0), SLICE(r9_r8_2639, word32, 32), r10_2581, r11_2582, out r12_5618, out lr_2629) l0000D7F8
l0000D7F4_1:
	r5_2652 = 1<32>
l0000D7F8:
	r8_2637 = CONVERT(SLICE(r5_2652, byte, 0), byte, word32)
l0000D812:
	branch r8_2637 == 0<32> l0000D828
l0000D828:
	r4_2668 = r10_2581
	r5_2672 = r11_2582 ^ Mem2565[0x0000D858<p32>:word32]
l0000D816:
	r11_r10_2677 = Mem2565[pc_2417 + 78<i32>:word64]
	__avr32_f64_sub(r10_2581, r11_2582, SLICE(r11_r10_2677, word32, 0), SLICE(r11_r10_2677, word32, 32), lr_2629, out r6_5619, out r7_1003, out r8_5620, out r9_5621, out r10_2686, out r11_2687, out lr_5622)
	r4_2668 = r10_2686
	r5_2672 = r11_2687
l0000D844:
	branch __avr32_f64_cmp_eq(0<32>, 0<32>, r4_2668, r5_2672, out r12_5623) l0000D892
l0000D852:
	r3_2718 = r1
l0000D88E:
	branch r3_2718 != 0<32> l0000D87C
l0000D87C:
	r9_r8_2724 = Mem2565[pc_2417 + -16<i32>:word64]
	r11_r10_5629 = __avr32_f64_mul(SLICE(r9_r8_2724, word32, 0), SLICE(r9_r8_2724, word32, 32), r4_2668, r5_2672)
	r3_2718 = r3_2718 - 1<32>
	r4_2668 = SLICE(r11_r10_5629, word32, 0)
	r5_2672 = SLICE(r11_r10_5629, word32, 32)
l0000D892:
	r11_r10_2753 = Mem2565[r7_1003 + -764<i32>:word64]
	Mem2774[r7_2766 + -764<i32>:word64] = __avr32_f64_add(r4_2668, r5_2672, SLICE(r11_r10_2753, word32, 0), SLICE(r11_r10_2753, word32, 32), out r5_5624, out r6_5625, out r7_2766, out r8_5626, out r9_5627, out lr_5628)
	r7_1003 = r7_2766
l0000D8A2:
	r9_2777 = Mem2776[r7_1003 + -824<i32>:word32]
	Mem2779[r9_2777:byte] = 0x30<8>
	r12_2781 = Mem2779[r7_1003 + -740<i32>:word32]
	Mem2782[r7_1003 + -824<i32>:word32] = r9_2777 + 1<i32>
	r11_r10_2784 = Mem2782[r7_1003 + -764<i32>:word64]
	Mem2787[r9_2777 + 1<i32>:byte] = Mem2782[r12_2781:byte] + 0x17<8>
	r10_2802 = __avr32_s32_to_f64(__avr32_f64_to_s32(SLICE(r11_r10_2784, word32, 0), SLICE(r11_r10_2784, word32, 32)), out r11_2803, out lr_2801)
	r11_r10_2815 = Mem2787[r7_1003 + -764<i32>:word64]
	r5_2822 = __avr32_f64_sub(r10_2802, r11_2803, SLICE(r11_r10_2815, word32, 0), SLICE(r11_r10_2815, word32, 32), lr_2801, out r6_2823, out r7_2824, out r8_5613, out r9_5614, out r10_2819, out r11_2820, out lr_2818)
	Mem2831[r9_2777 + 2<i32>:byte] = SLICE(r5_2822, byte, 0)
	r4_2832 = r9_2777 + 3<i32>
	r2_2834 = r10_2819
	r3_2835 = r11_2820
	branch Test(EQ,Mem2831[r7_2824 + 0xFFFFFCF4<32>:bool]) l0000D8FA
l0000D8E8:
	branch __avr32_f64_cmp_lt(r10_2819, r11_2820, 0<32>, 0<32>, out r9_2844, out r12_5634, out lr_2818) l0000D8FA
l0000D8F6:
	branch r1 == 0<32> l0000D976
l0000D8FA:
	Mem2867[r9_2777 + 3<i32>:byte] = SLICE(fn0000D204(r9_2777 + 3<i32>, r5_2822, r6_2823, r7_2824, lr_2818), byte, 0)
	r5_2869 = r9_2777 + 4<i32>
l0000D954:
	branch __avr32_f64_cmp_lt(r2_2834, r3_2835, 0<32>, 0<32>, out r9_5635, out r12_5636, out lr_2818) l0000D904
l0000D904:
	r9_r8_2886 = Mem2885[pc_2417 + -144<i32>:word64]
	r11_r10_5637 = __avr32_f64_mul(SLICE(r9_r8_2886, word32, 0), SLICE(r9_r8_2886, word32, 32), r2_2834, r3_2835)
	r10_2891 = SLICE(r11_r10_5637, word32, 0) (alias)
	r11_2892 = SLICE(r11_r10_5637, word32, 32) (alias)
	r12_2905 = __avr32_f64_to_s32(r10_2891, r11_2892)
	branch r12_2905 > 9<32> l0000D924
l0000D924:
	r9_2919 = CONVERT(Mem2885[Mem2885[r7_2824 + -740<i32>:word32]:byte] - 0xA<8>, byte, word32)
l0000D920:
	r9_2919 = 0x30<32>
l0000D930:
	Mem2930[r5_2869:byte] = SLICE(r9_2919 + r12_2905, byte, 0)
	r8_2927 = r1 - 1<32>
	branch r1 == 0<32> l0000D93E
l0000D93A_1:
	r1 = r8_2927
l0000D93E:
	r5_2869 = __avr32_f64_sub(__avr32_s32_to_f64(r12_2905, out r11_2937, out lr_2935), r11_2937, r10_2891, r11_2892, lr_2935, out r6_2823, out r7_2824, out r8_5638, out r9_5639, out r10_2957, out r11_2958, out lr_5640)
	r2_2834 = r10_2957
	r3_2835 = r11_2958
l0000D962:
	r9_2844 = r5_2869
	r5_2822 = r5_2869
l0000D96E:
	branch r1 != 0<32> l0000D968
l0000D968:
	Mem2980[r5_2822:byte] = 0x30<8>
	r1 = r1 - 1<32>
	r5_2822 = r5_2822 + 1<i32>
l0000D972:
	r4_2832 = r5_2869 + r1
l0000D976:
	r10_2990 = Mem2988[r7_2824 + -740<i32>:word32]
	r11_2994 = Mem2988[r6_2823 + 344<i32>:word32]
	Mem2999[r4_2832:byte] = Mem2988[r10_2990:byte] + 0xF<8>
	r8_3001 = Mem2999[r7_2824 + -4<i32>:word32]
	Mem3020[sp_118 - 4<i32>:word32] = r8_3001
	r4_3000 = r4_2832 + 1<i32>
	call Mem3020[r6_2823 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_3033,Mem:Mem3020,pc:pc_3051,r0:r9_2777 + 2<i32>,r1:r1_3027,r10:r10_2990,r11:r11_2994,r12:r4_3000,r2:r2_3028,r3:r3_3030,r4:r4_3000,r5:r5_3032,r6:r6_2991,r7:r7_2986,r8:r8_3001,r9:r9_3035
		defs: lr:lr_3045,pc:pc_3051,r0:r0_3037,r1:r1_3038,r11:r11_3048,r12:r12_3047,r2:r2_3039,r3:r3_3040,r4:r4_3041,r6:r6_3043,r7:r7_3044
	r5_1001 = r4_3041
l0000D998:
	branch Mem3020[r5_1001:byte] != 0<8> l0000D996
l0000D996:
	r5_1001 = r5_1001 + 1<32>
l0000D9A2:
l0000DCCC:
	r9_3067 = r0
l0000D6E4:
	r11_1016 = CONVERT(Mem1693[Mem1693[r7_1003 + -740<i32>:word32]:byte], byte, word32)
	r10_2377 = Mem1693[r7_1003 + -768<i32>:word32] + 1<32>
	branch SLICE(r11_1016, byte, 0) != 0x41<8> l0000D702
l0000D702:
	r11_1016 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem3077[r11_1016:byte] = 0x6E<8>
l0000D9F0:
	Mem3080[r10_2377:byte] = 0x61<8>
	r9_2514 = 0x6E<32>
	r10_3081 = r10_2377 + 1<i32>
l0000D6F8:
	r12_1006 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem3084[r12_1006:byte] = 0x4E<8>
l0000D9DC:
	Mem3087[r10_2377:byte] = SLICE(r11_1016, byte, 0)
	r9_2514 = 0x4E<32>
	r10_3081 = r10_2377 + 1<i32>
l0000D9DE:
	r8_2515 = r10_3081
l0000D9E0:
	Mem3096[r8_2515:byte] = SLICE(r9_2514, byte, 0)
	r9_3067 = 0<32>
	r5_1001 = r8_2515 + 1<i32>
l0000DCCE:
	branch Mem3108[r7_1003 + -776<i32>:word32] == 0<32> l0000DD50
l0000DCD6:
	r12_1006 = Mem3108[r7_1003 + -768<i32>:word32]
	r11_1016 = Mem3108[r7_1003 + -772<i32>:word32]
	r8_3117 = r5_1001 + r12_1006
	branch r8_3117 >=u r11_1016 l0000DD50
l0000DCE6:
	r10_3121 = r11_1016 + r8_3117
	r12_1006 = r5_1001 + r10_3121
	branch (Mem3108[r7_1003 + -780<i32>:word32] & 2<32>) != 0<32> l0000DD00
l0000DD00:
	branch r10_3121 != 0<32> l0000DCFA
l0000DCFA:
	Mem3135[r5_1001:byte] = 0x20<8>
	r10_3121 = r10_3121 - 1<32>
	r5_1001 = r5_1001 + 1<i32>
l0000DD04:
l0000DCF8:
l0000DD06:
	branch Test(NE,Mem3108[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000DD14
l0000DD10:
	branch r9_3067 != 0<32> l0000DD18
l0000DD18:
	r11_1016 = r12_1006
l0000DD20:
	branch r5_1001 >u r9_3067 l0000DD1C
l0000DD1C:
	r5_1001 = r5_1001 - 1<i32>
	r11_1016 = r11_1016 - 1<i32>
	Mem3155[r11_1016:byte] = Mem3150[r5_1001:byte]
l0000DD26:
l0000DD2E:
	branch r10_3121 != 0<32> l0000DD28
l0000DD28:
	Mem3163[r5_1001:byte] = 0x30<8>
	r10_3121 = r10_3121 - 1<32>
	r5_1001 = r5_1001 + 1<i32>
l0000DD32:
l0000DD14:
	r9_3166 = r12_1006
l0000DD38:
	r11_1016 = Mem3168[r7_1003 + -768<i32>:word32]
	branch r5_1001 >u r11_1016 l0000DD34
l0000DD34:
	r5_1001 = r5_1001 - 1<i32>
	r9_3166 = r9_3166 - 1<i32>
	Mem3178[r9_3166:byte] = Mem3168[r5_1001:byte]
l0000DD42:
l0000DD4A:
	branch r10_3121 != 0<32> l0000DD44
l0000DD44:
	Mem3186[r5_1001:byte] = 0x20<8>
	r10_3121 = r10_3121 - 1<32>
	r5_1001 = r5_1001 + 1<i32>
l0000DD4E:
	r5_1001 = r12_1006
l0000DD50:
	r10_1049 = Mem3201[r7_1003 + -768<i32>:word32]
	r9_1067 = Mem3201[r7_1003 + -732<i32>:word32]
	r4_1012 = r5_1001 + r10_1049
	branch r4_1012 >=u r9_1067 l0000E330
l0000DD62:
	r12_3213 = Mem3201[r7_1003 + -784<i32>:word32]
	branch r4_1012 <u Mem3201[r7_1003 + -736<i32>:word32] + r12_3213 l0000DDFE
l0000DD70:
	r10_1049 = r4_1012 + r12_3213
	r11_1016 = Mem3201[r7_1003 + -736<i32>:word32]
	branch r10_1049 >=u r12_3213 l0000DD7E
l0000DD7A_1:
	r10_1049 = 0xFFFFFFFF<32>
l0000DD7E:
	branch r10_1049 <=u r11_1016 l0000DDFE
l0000DD84:
	branch r11_1016 != 0<32> l0000DD8C
l0000DD8C:
	r8_3230 = Mem3201[r7_1003 + -736<i32>:word32]
	r9_1067 = Mem3201[r7_1003 + -736<i32>:word32]
	branch r9_1067 < 0<32> l0000DD9C
l0000DD98_1:
	r12_3213 = r8_3230 << 1<i32>
l0000DD9C:
	branch r9_1067 >= 0<32> l0000DDA0
l0000DD9C_1:
	r12_3213 = 0xFFFFFFFF<32>
l0000DD88:
	r12_3213 = 0xC<32>
l0000DDA0:
	branch r12_3213 >=u r10_1049 l0000DDA6
l0000DDA2_1:
	r12_3213 = r10_1049
l0000DDA6:
	Mem3251[r7_1003 + -736<i32>:word32] = r12_3213
	branch r12_3213 == 0xFFFFFFFF<32> l0000E630
l0000DDB0:
	r8_3254 = Mem3251[r7_1003 + -788<i32>:word32]
	r3_3258 = CONVERT(r8_3254 == Mem3251[r7_1003 + -804<i32>:word32], bool, word32)
	branch r3_3258 != 0<32> l0000DDC4
l0000DDC0:
	branch r8_3254 != 0<32> l0000DDCE
l0000DDCE:
	call Mem3251[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_3365,Mem:Mem3251,pc:pc_3423,r0:r0_3291,r1:r1_3312,r10:r10_3222,r11:Mem3251[r7_3100 + -736<i32>:word32],r12:Mem3251[r7_3100 + -788<i32>:word32],r2:r2_3333,r3:r3_3258,r4:r4_3209,r5:r5_3208,r6:r6_3269,r7:r7_3100,r9:r9_3384
		defs: lr:lr_3417,pc:pc_3423,r0:r0_3409,r1:r1_3410,r10:r10_3418,r11:r11_3420,r12:r12_3419,r2:r2_3411,r3:r3_3412,r4:r4_3413,r6:r6_3415,r7:r7_3416,r9:r9_3421
l0000DDC4:
	call Mem3251[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_3365,Mem:Mem3251,pc:pc_3458,r0:r0_3291,r1:r1_3312,r10:r10_3222,r11:r11_3218,r12:Mem3251[r7_3100 + -736<i32>:word32],r2:r2_3333,r3:r3_3258,r4:r4_3209,r5:r5_3208,r6:r6_3269,r7:r7_3100,r9:r9_3384
		defs: lr:lr_3452,pc:pc_3458,r0:r0_3444,r1:r1_3445,r10:r10_3453,r11:r11_3455,r12:r12_3454,r2:r2_3446,r3:r3_3447,r4:r4_3448,r6:r6_3450,r7:r7_3451,r9:r9_3456
l0000DDDA:
	r5_1001 = r12_3419
	branch r12_3419 == 0<32> l0000E630
l0000DDE2:
	branch r3_122 == 0<32> l0000DDFA
l0000DDE6:
	branch Mem3251[r7_1003 + -784<i32>:word32] == 0<32> l0000DDFA
l0000DDEE:
	call Mem3251[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_3479,Mem:Mem3251,pc:pc_3497,r0:r0_3475,r1:r1_3476,r10:Mem3251[r7_3467 + -784<i32>:word32],r11:Mem3251[r7_3467 + -788<i32>:word32],r12:r12_3460,r2:r2_3477,r3:r3_3464,r4:r4_3478,r5:r12_3460,r6:r6_3474,r7:r7_3467,r9:r9_3480
		defs: lr:lr_3491,pc:pc_3497,r0:r0_3483,r1:r1_3484,r2:r2_3485,r3:r3_3486,r4:r4_3487,r5:r5_3488,r6:r6_3489,r7:r7_3490
l0000DDFA:
	Mem3501[r7_1003 + -788<i32>:word32] = r5_1001
l0000DDFE:
	r9_3505 = Mem3503[r7_1003 + -784<i32>:word32]
	call Mem3503[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_3541,Mem:Mem3503,pc:pc_3560,r0:r0_3514,r1:r1_3516,r10:r4_3507,r11:Mem3503[r7_3502 + -768<i32>:word32],r12:Mem3503[r7_3502 + -788<i32>:word32] + r9_3505,r2:r2_3518,r3:r3_3520,r4:r4_3507,r5:r5_3540,r6:r6_3512,r7:r7_3502,r9:r9_3505
		defs: lr:lr_3554,pc:pc_3560,r0:r0_3546,r1:r1_3547,r10:r10_3555,r11:r11_3557,r2:r2_3548,r3:r3_3549,r4:r4_3550,r5:r5_3551,r6:r6_3552,r7:r7_3553,r9:r9_3558,sp:sp_3545
	r12_3562 = Mem3503[r7_1003 + -768<i32>:word32]
	pc = pc_3560
	branch r12_3562 == r7_1003 - 0x2D8<32> l0000DE22
l0000DE1E:
	call Mem3503[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3554,Mem:Mem3503,pc:pc_3581,r0:r0_3546,r1:r1_3547,r10:r10_3555,r11:r11_3557,r12:r12_3562,r2:r2_3548,r3:r3_3549,r4:r4_3550,r5:r5_3551,r6:r6_3552,r7:r7_3553,r9:r9_3558
		defs: lr:lr_3575,pc:pc_3581,r0:r0_3567,r1:r1_3568,r2:r2_3569,r3:r3_3570,r4:r4_3571,r5:r5_3572,r6:r6_3573,r7:r7_3574,sp:sp_3566
	pc = pc_3581
l0000DE22:
	Mem3589[r7_1003 + -784<i32>:word32] = Mem3503[r7_1003 + -784<i32>:word32] + r4_3550
l0000D4B2:
	r12_1006 = Mem403[r7_1003 + -8<i32>:word32] + r12_1006 * 0xC<32>
	r8_3593 = Mem403[r12_1006:word32]
	r9_1067 = r8_3593 - 0x12<32>
	branch r8_3593 >u 0x16<32> || r8_3593 <u 0x12<32> l0000E330
l0000D4CA:
	switch (r8_3593 - 0x12<32>) { l0000D4D4 l0000D4D8 l0000D4DC l0000D4E0 l0000D4E4 }
l0000D4E4:
l0000D518:
	r9_3600 = Mem403[r12_1006 + 4<i32>:word32]
	Mem3602[r9_3600:word32] = 0<32>
	Mem3604[r9_3600 + 4<i32>:word32] = Mem3602[r7_1003 + -784<i32>:word32]
l0000D4E0:
l0000D50C:
	Mem3607[Mem403[r12_1006 + 4<i32>:word32]:word32] = Mem403[r7_1003 + -784<i32>:word32]
l0000D4DC:
l0000D500:
	Mem3610[Mem403[r12_1006 + 4<i32>:word32]:word32] = Mem403[r7_1003 + -784<i32>:word32]
l0000D4D8:
l0000D4F4:
	Mem3613[Mem403[r12_1006 + 4<i32>:word32]:word16] = Mem403[r7_1003 + 0xFFFFFCF0<32>:word16]
l0000D4D4:
l0000D4E8:
	Mem3616[Mem403[r12_1006 + 4<i32>:word32]:byte] = Mem403[r7_1003 + 0xFFFFFCF0<32>:byte]
l0000D3FA:
	branch r12_1006 != 0xFFFFFFFF<32> l0000E330
l0000E330:
	call Mem3620[r6_1002 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_3628,Mem:Mem3620,pc:pc_3649,r0:r0_3621,r1:r1_3622,r10:r10_3629,r11:r11_3631,r12:r12_3630,r2:r2_3623,r3:r3_3624,r4:r4_3625,r5:r5_3626,r6:r6_3619,r7:r7_3627,r9:r9_3632
		defs: lr:lr_3643,pc:pc_3649,r0:r0_3635,r1:r1_3636,r10:r10_3644,r12:r12_3645,r2:r2_3637,r3:r3_3638,r4:r4_3639,r5:r5_3640,r6:r6_3641,r7:r7_3642,sp:sp_3634
	pc = pc_3649
l0000E334:
	branch r12_1006 <= r10_1049 l0000E396
l0000E33A:
l0000E392:
	Mem3657[r7_1003 + -4<i32>:word32] = r12_1006
l0000E396:
	r9_3662 = Mem3660[r7_1003 + -4<i32>:word32]
	branch r9_3662 >= 0<32> l0000E3E2
l0000E3E2:
	r12_3665 = Mem3660[r7_1003 + -824<i32>:word32]
	branch r9_3662 + 1<32> <u r12_3665 l0000E49E
l0000E49E:
	Mem3672[r7_1003 + -784<i32>:word32] = Mem3660[r7_1003 + -784<i32>:word32] + r9_3662
l0000E3EE:
	branch r12_3665 == Mem3660[0x0000E556<p32>:word32] l0000E5EC
l0000E5EC:
	r12_3676 = Mem3660[r7_1003 + -788<i32>:word32]
	r11_3677 = Mem3660[r7_1003 + -804<i32>:word32]
	branch r12_3676 == r11_3677 l0000E600
l0000E5F8:
	branch r12_3676 == 0<32> l0000E600
l0000E5FC:
	call Mem3660[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3703,Mem:Mem3660,pc:pc_3726,r0:r0_3685,r1:r1_3688,r10:r10_3706,r11:r11_3677,r12:r12_3676,r2:r2_3691,r3:r3_3694,r4:r4_3697,r5:r5_3700,r6:r6_3682,r7:r7_3658,r9:r9_3662
		defs: lr:lr_3720,pc:pc_3726,r0:r0_3712,r1:r1_3713,r11:r11_3723,r2:r2_3714,r3:r3_3715,r4:r4_3716,r5:r5_3717,r6:r6_3718,r7:r7_3719,r9:r9_3724
l0000E600:
	r10_3730 = Mem3660[r7_1003 + -796<i32>:word32]
	branch r10_3730 == 0<32> l0000E60E
l0000E608:
	call Mem3660[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3741,Mem:Mem3660,pc:pc_3760,r0:r0_3735,r1:r1_3736,r10:r10_3730,r11:r11_3742,r12:r10_3730,r2:r2_3737,r3:r3_3738,r4:r4_3739,r5:r5_3740,r6:r6_3734,r7:r7_3728,r9:r9_3743
		defs: lr:lr_3754,pc:pc_3760,r0:r0_3746,r1:r1_3747,r10:r10_3755,r11:r11_3757,r2:r2_3748,r3:r3_3749,r4:r4_3750,r5:r5_3751,r6:r6_3752,r7:r7_3753,r9:r9_3758
l0000E60E:
	call Mem3660[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3772,Mem:Mem3660,pc:pc_3792,r0:r0_3766,r1:r1_3767,r10:r10_3773,r11:r11_3774,r12:Mem3660[r7_3762 + -24<i32>:word32],r2:r2_3768,r3:r3_3769,r4:r4_3770,r5:r5_3771,r6:r6_3765,r7:r7_3762,r9:r9_3775
		defs: lr:lr_3786,pc:pc_3792,r0:r0_3778,r1:r1_3779,r10:r10_3787,r11:r11_3789,r2:r2_3780,r3:r3_3781,r4:r4_3782,r5:r5_3783,r6:r6_3784,r7:r7_3785,r9:r9_3790
	r12_3794 = Mem3660[r7_3785 + -8<i32>:word32]
	branch r12_3794 == 0<32> l0000E622
l0000E61E:
	call Mem3660[r6_3784 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3786,Mem:Mem3660,pc:pc_3812,r0:r0_3778,r1:r1_3779,r10:r10_3787,r11:r11_3789,r12:r12_3794,r2:r2_3780,r3:r3_3781,r4:r4_3782,r5:r5_3783,r6:r6_3784,r7:r7_3785,r9:r9_3790
		defs: lr:lr_3806,pc:pc_3812,r0:r0_3798,r1:r1_3799,r10:r10_3807,r11:r11_3809,r12:r12_3808,r2:r2_3800,r3:r3_3801,r4:r4_3802,r5:r5_3803,r6:r6_3804,r7:r7_3805,r9:r9_3810
l0000E622:
	call Mem3660[r6_3784 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_3823,Mem:Mem3660,pc:pc_3844,r0:r0_3816,r1:r1_3817,r10:r10_3824,r11:r11_3826,r12:r12_3825,r2:r2_3818,r3:r3_3819,r4:r4_3820,r5:r5_3821,r6:r6_3814,r7:r7_3822,r9:r9_3827
		defs: lr:lr_3838,pc:pc_3844,r12:r12_3840,r7:r7_3837
	Mem3848[r7_1003 + -788<i32>:word32] = 0<32>
	r8_3847 = 0x4B<32>
l0000E3F6:
	r11_1016 = Mem3660[r7_1003 + -784<i32>:word32]
	r10_1049 = Mem3660[r7_1003 + -736<i32>:word32]
	r8_3853 = r9_3662 + 2<32> + r11_1016
	r9_1067 = Mem3660[r7_1003 + -736<i32>:word32] << 1<i32>
	branch r10_1049 >= 0<32> l0000E410
l0000E40C_1:
	r9_1067 = 0xFFFFFFFF<32>
l0000E410:
	branch r8_3853 >=u r11_1016 l0000E416
l0000E412_1:
	r8_3853 = 0xFFFFFFFF<32>
l0000E416:
	branch r8_3853 <u r9_1067 l0000E41C
l0000E418_1:
	r9_1067 = r8_3853
l0000E41C:
	branch r9_1067 <=u r10_1049 l0000E038
l0000E422:
	branch r10_1049 != 0<32> l0000E42A
l0000E42A:
	r8_3883 = Mem3660[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem3660[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000E43A
l0000E436_1:
	r12_3665 = r8_3883 << 1<i32>
l0000E43A:
	branch r11_1016 >= 0<32> l0000E43E
l0000E43A_1:
	r12_3665 = 0xFFFFFFFF<32>
l0000E426:
	r12_3665 = 0xC<32>
l0000E43E:
	branch r12_3665 >=u r9_1067 l0000E444
l0000E440_1:
	r12_3665 = r9_1067
l0000E444:
	Mem3904[r7_1003 + -736<i32>:word32] = r12_3665
	branch r12_3665 == 0xFFFFFFFF<32> l0000E630
l0000E44E:
	r10_3907 = Mem3904[r7_1003 + -788<i32>:word32]
	r9_3908 = Mem3904[r7_1003 + -804<i32>:word32]
	r4_3911 = CONVERT(r10_3907 == r9_3908, bool, word32)
	branch r4_3911 != 0<32> l0000E462
l0000E45E:
	branch r10_3907 != 0<32> l0000E46C
l0000E46C:
	call Mem3904[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_3924,Mem:Mem3904,pc:pc_3941,r0:r0_3919,r1:r1_3920,r10:r10_3907,r11:Mem3904[r7_3903 + -736<i32>:word32],r12:Mem3904[r7_3903 + -788<i32>:word32],r2:r2_3921,r3:r3_3922,r4:r4_3911,r5:r5_3923,r6:r6_3918,r7:r7_3903,r9:r9_3908
		defs: lr:lr_3935,pc:pc_3941,r0:r0_3927,r1:r1_3928,r10:r10_3936,r11:r11_3938,r12:r12_3937,r2:r2_3929,r3:r3_3930,r4:r4_3931,r6:r6_3933,r7:r7_3934,r9:r9_3939,sp:sp_3926
l0000E462:
	call Mem3904[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_3924,Mem:Mem3904,pc:pc_3974,r0:r0_3919,r1:r1_3920,r10:r10_3907,r11:r11_3956,r12:Mem3904[r7_3903 + -736<i32>:word32],r2:r2_3921,r3:r3_3922,r4:r4_3911,r5:r5_3923,r6:r6_3918,r7:r7_3903,r9:r9_3908
		defs: lr:lr_3968,pc:pc_3974,r0:r0_3960,r1:r1_3961,r10:r10_3969,r11:r11_3971,r12:r12_3970,r2:r2_3962,r3:r3_3963,r4:r4_3964,r6:r6_3966,r7:r7_3967,r9:r9_3972,sp:sp_3959
l0000E478:
	r5_1001 = r12_3937
	branch r12_3937 == 0<32> l0000E630
l0000E480:
	branch r4_1012 == 0<32> l0000E496
l0000E484:
	r8_3985 = Mem3904[r7_1003 + -784<i32>:word32]
	branch r8_3985 == 0<32> l0000E496
l0000E48C:
	call Mem3904[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_3995,Mem:Mem3904,pc:pc_4013,r0:r0_3991,r1:r1_3992,r10:r8_3985,r11:Mem3904[r7_3983 + -788<i32>:word32],r12:r12_3976,r2:r2_3993,r3:r3_3994,r4:r4_3980,r5:r12_3976,r6:r6_3990,r7:r7_3983,r9:r9_3996
		defs: lr:lr_4007,pc:pc_4013,r0:r0_3999,r1:r1_4000,r10:r10_4008,r11:r11_4010,r2:r2_4001,r3:r3_4002,r4:r4_4003,r5:r5_4004,r6:r6_4005,r7:r7_4006,sp:sp_3998
l0000E496:
	Mem4017[r7_1003 + -788<i32>:word32] = r5_1001
l0000E038:
	Mem4020[r7_1003 + -4<i32>:word32] = 0xFFFFFFFF<32>
	r12_1006 = Mem4020[r7_1003 + -784<i32>:word32]
	r8_4023 = Mem4020[r7_1003 + -736<i32>:word32] + r12_1006
	Mem4025[r7_1003 + -824<i32>:word32] = r8_4023
	branch r8_4023 >= 0<32> l0000E054
l0000E04E:
	r11_1016 = Mem4025[0x0000E1B6<p32>:word32]
	Mem4028[r7_1003 + -824<i32>:word32] = r11_1016
l0000E054:
	r9_4031 = Mem4030[r7_1003 + -748<i32>:word32]
	r9_1067 = r9_4031 - 1<32>
	branch r9_4031 >u 0x11<32> || r9_4031 <u 1<32> l0000E330
l0000E060:
	r10_1049 = Mem4030[r7_1003 + -744<i32>:word32]
	r11_1016 = Mem4030[r7_1003 + -8<i32>:word32]
	r12_1006 = Mem4030[r10_1049:word32]
	switch (r9_4031 - 1<32>) { l0000E074 l0000E078 l0000E07C l0000E080 l0000E084 l0000E088 l0000E08C l0000E090 l0000E094 l0000E098 l0000E09C l0000E0A0 l0000E0A4 l0000E0A8 l0000E0AC l0000E0B0 l0000E0B4 }
l0000E0B4:
l0000E0B0:
l0000E0AC:
l0000E0A8:
l0000E0A4:
l0000E0A0:
l0000E214:
	r5_r4_4043 = Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4043, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4043, word32, 0) (alias)
	branch r2 == 0<32> l0000E230
l0000E230:
	r10_4050 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4051 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4052 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
l0000E224:
	branch r2 == 1<32> l0000E24C
l0000E24C:
	r9_1067 = Mem4030[r7_1003 + -784<i32>:word32]
	r10_4058 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4059 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4060 = Mem4030[r7_1003 + -788<i32>:word32] + r9_1067
l0000E228:
	branch r2 != 2<32> l0000E330
l0000E22E:
l0000E268:
	r10_4066 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4067 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4068 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
l0000E09C:
l0000E1BC:
	r5_r4_4043 = Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4043, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4043, word32, 0) (alias)
	branch r2 == 0<32> l0000E1D8
l0000E1D8:
	r9_1067 = Mem4030[r7_1003 + -784<i32>:word32]
	r10_4050 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4051 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4052 = Mem4030[r7_1003 + -788<i32>:word32] + r9_1067
l0000E242:
	sp_4087 = sp_118 - 4<i32>
	Mem4088[sp_4087:word32] = r7_1003 - 4<32>
	Mem4097[sp_4087 - 8<i32>:word64] = r5_r4_4043
	r4_1012 = SLICE(r5_r4_4043, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4043, word32, 32) (alias)
l0000E1CC:
	branch r2 == 1<32> l0000E1EC
l0000E1EC:
	r10_4058 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4059 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4060 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
l0000E25E:
	sp_4110 = sp_118 - 4<i32>
	Mem4111[sp_4110:word32] = r7_1003 - 4<32>
	Mem4116[sp_4110 - 8<i32>:word64] = r5_r4_4043
	r4_1012 = SLICE(r5_r4_4043, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4043, word32, 32) (alias)
l0000E1D0:
	branch r2 != 2<32> l0000E330
l0000E1D6:
l0000E200:
	r9_1067 = Mem4030[r7_1003 + -784<i32>:word32]
	r10_4066 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4067 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4068 = Mem4030[r7_1003 + -788<i32>:word32] + r9_1067
l0000E27A:
	sp_4129 = sp_118 - 4<i32>
	Mem4130[sp_4129:word32] = r7_1003 - 4<32>
	Mem4135[sp_4129 - 8<i32>:word64] = r5_r4_4043
	r4_4133 = SLICE(r5_r4_4043, word32, 0) (alias)
	r5_4132 = SLICE(r5_r4_4043, word32, 32) (alias)
l0000E098:
l0000E150:
	r5_r4_4138 = Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4138, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4138, word32, 0) (alias)
	branch r2 == 0<32> l0000E16C
l0000E16C:
	r10_4050 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4051 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4052 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
l0000E160:
	branch r2 == 1<32> l0000E180
l0000E180:
	r9_1067 = Mem4030[r7_1003 + -784<i32>:word32]
	r10_4058 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4059 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4060 = Mem4030[r7_1003 + -788<i32>:word32] + r9_1067
l0000E164:
	branch r2 != 2<32> l0000E330
l0000E16A:
l0000E19C:
	r10_4066 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4067 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4068 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
l0000E094:
l0000E0EA:
	r5_r4_4138 = Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4138, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4138, word32, 0) (alias)
	branch r2 == 0<32> l0000E106
l0000E106:
	r9_1067 = Mem4030[r7_1003 + -784<i32>:word32]
	r10_4050 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4051 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4052 = Mem4030[r7_1003 + -788<i32>:word32] + r9_1067
l0000E118:
	sp_4178 = sp_118 - 4<i32>
	Mem4179[sp_4178:word32] = r7_1003 - 4<32>
	Mem4188[sp_4178 - 8<i32>:word64] = r5_r4_4138
	r4_1012 = SLICE(r5_r4_4138, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4138, word32, 32) (alias)
l0000E0FA:
	branch r2 == 1<32> l0000E128
l0000E128:
	r10_4058 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4059 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4060 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
l0000E192:
	sp_4201 = sp_118 - 4<i32>
	Mem4202[sp_4201:word32] = r7_1003 - 4<32>
	Mem4207[sp_4201 - 8<i32>:word64] = r5_r4_4138
	r4_1012 = SLICE(r5_r4_4138, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4138, word32, 32) (alias)
l0000E0FE:
	branch r2 != 2<32> l0000E330
l0000E104:
l0000E13C:
	r9_1067 = Mem4030[r7_1003 + -784<i32>:word32]
	r10_4066 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4067 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4068 = Mem4030[r7_1003 + -788<i32>:word32] + r9_1067
l0000E1AE:
	sp_4220 = sp_118 - 4<i32>
	Mem4221[sp_4220:word32] = r7_1003 - 4<32>
	Mem4226[sp_4220 - 8<i32>:word64] = r5_r4_4138
	r4_4133 = SLICE(r5_r4_4138, word32, 0) (alias)
	r5_4132 = SLICE(r5_r4_4138, word32, 32) (alias)
l0000E282:
	sp_4227 = sp_118 - 12<i32>
	Mem4234[sp_4227 - 4<i32>:word32] = r1
	Mem4241[sp_4227 - 8<i32>:word32] = r3_122
	call Mem4241[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4261,Mem:Mem4241,pc:pc_4290,r0:r0_4250,r1:r1_4232,r10:r10_4263,r11:r11_4269,r12:r12_4266,r2:r2_4045,r3:r3_4239,r4:r4_4255,r5:r5_4256,r6:r6_4245,r7:r7_4019,r9:r9_4272
		defs: lr:lr_4284,pc:pc_4290,r0:r0_4276,r1:r1_4277,r11:r11_4287,r12:r12_4286,r2:r2_4278,r3:r3_4279,r4:r4_4280,r5:r5_4281,r6:r6_4282,r7:r7_4283,sp:sp_4275
	sp_118 = sp_4275 + 0x14<32>
	pc = pc_4290
l0000E090:
l0000E08C:
l0000E088:
l0000E084:
l0000E28E:
	r9_1067 = Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word32]
l0000E080:
l0000E0DE:
	r9_1067 = CONVERT(Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:uint16], uint16, word32)
l0000E07C:
l0000E0D2:
	r9_1067 = CONVERT(Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:int16], int16, int32)
l0000E078:
l0000E0C6:
	r9_1067 = CONVERT(Mem4030[r11_1016 + r12_1006 * 0xC<32> + -4<i32>:byte], byte, word32)
l0000E074:
l0000E0B8:
	r9_1067 = CONVERT(Mem4030[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:int8], int8, int32)
l0000E298:
	branch r2 == 0<32> l0000E2A6
l0000E2A6:
	r10_4326 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4327 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4328 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
	r8_4329 = r7_1003 - 4<32>
	sp_4333 = sp_118 - 4<i32>
	Mem4334[sp_4333:word32] = r8_4329
	Mem4337[sp_4333 - 4<i32>:word32] = r9_1067
	call Mem4337[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4261,Mem:Mem4337,pc:pc_4371,r0:r0_4250,r1:r1_4232,r10:r10_4326,r11:r11_4327,r12:r12_4328,r2:r2_4045,r3:r3_4239,r4:r4_4349,r5:r5_4353,r6:r6_4245,r7:r7_4019,r8:r8_4329,r9:r9_4336
		defs: lr:lr_4365,pc:pc_4371,r0:r0_4357,r1:r1_4358,r11:r11_4368,r12:r12_4367,r2:r2_4359,r3:r3_4360,r4:r4_4361,r5:r5_4362,r6:r6_4363,r7:r7_4364,sp:sp_4356
	sp_118 = sp_4356 + 8<32>
	pc = pc_4371
l0000E29C:
	branch r2 == 1<32> l0000E2C8
l0000E2C8:
	r10_4050 = Mem4030[r7_1003 + -800<i32>:word32]
	r11_4051 = Mem4030[r7_1003 + -824<i32>:word32]
	r12_4052 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
	sp_4384 = sp_118 - 4<i32>
	Mem4385[sp_4384:word32] = r7_1003 - 4<32>
	Mem4387[sp_4384 - 4<i32>:word32] = r9_1067
	Mem4389[sp_4384 - 8<i32>:word32] = r3_122
l0000E120:
	call Mem4393[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4261,Mem:Mem4393,pc:pc_4440,r0:r0_4250,r1:r1_4232,r10:r10_4412,r11:r11_4418,r12:r12_4415,r2:r2_4045,r3:r3_4239,r4:r4_4406,r5:r5_4407,r6:r6_4245,r7:r7_4019,r9:r9_4421
		defs: lr:lr_4434,pc:pc_4440,r0:r0_4426,r1:r1_4427,r11:r11_4437,r12:r12_4436,r2:r2_4428,r3:r3_4429,r4:r4_4430,r5:r5_4431,r6:r6_4432,r7:r7_4433,sp:sp_4425
	sp_118 = sp_4425 + 0xC<32>
	pc = pc_4440
l0000E2A0:
	branch r2 != 2<32> l0000E330
l0000E2A4:
l0000E2E6:
	r10_4058 = Mem4030[r7_1003 + -800<i32>:word32]
	r12_4060 = Mem4030[r7_1003 + -788<i32>:word32] + Mem4030[r7_1003 + -784<i32>:word32]
	r11_4059 = Mem4030[r7_1003 + -824<i32>:word32]
	sp_4453 = sp_118 - 4<i32>
	Mem4454[sp_4453:word32] = r7_1003 - 4<32>
	Mem4456[sp_4453 - 4<i32>:word32] = r9_1067
	Mem4458[sp_4453 - 8<i32>:word32] = r1
l0000E302:
	Mem4464[sp_118 - 16<i32>:word32] = r3_122
	call Mem4464[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4261,Mem:Mem4464,pc:pc_4510,r0:r0_4250,r1:r1_4232,r10:r10_4483,r11:r11_4489,r12:r12_4486,r2:r2_4045,r3:r3_4239,r4:r4_4477,r5:r5_4478,r6:r6_4245,r7:r7_4019,r9:r9_4492
		defs: lr:lr_4504,pc:pc_4510,r0:r0_4496,r1:r1_4497,r11:r11_4507,r12:r12_4506,r2:r2_4498,r3:r3_4499,r4:r4_4500,r5:r5_4501,r6:r6_4502,r7:r7_4503,sp:sp_4495
	sp_118 = sp_4495 + 0x10<32>
	pc = pc_4510
l0000E30A:
	r10_1049 = Mem4515[r7_1003 + -4<i32>:word32]
	branch r10_1049 < 0<32> l0000E33C
l0000E33C:
	r9_1067 = 0<32>
	branch Mem4515[r0:byte] == 0<8> l0000E34A
l0000E34A:
	branch r12_1006 >= 0<32> l0000E392
l0000E34E:
	r12_3665 = Mem4515[r7_1003 + -736<i32>:word32]
	r8_4529 = Mem4515[r7_1003 + -736<i32>:word32] << 1<i32>
	branch r12_3665 >= 0<32> l0000E35E
l0000E35A_1:
	r8_4529 = 0xFFFFFFFF<32>
l0000E35E:
	r10_1049 = r8_4529 + 0xC<32>
	branch r10_1049 >=u r8_4529 l0000E368
l0000E364_1:
	r10_1049 = 0xFFFFFFFF<32>
l0000E368:
	branch r10_1049 <=u r12_3665 l0000E038
l0000E36E:
	branch r12_3665 != 0<32> l0000E376
l0000E376:
	r8_4549 = Mem4515[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem4515[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000E386
l0000E382_1:
	r12_3665 = r8_4549 << 1<i32>
l0000E386:
	branch r11_1016 >= 0<32> l0000E38A
l0000E386_1:
	r12_3665 = 0xFFFFFFFF<32>
l0000E372:
	r12_3665 = 0xC<32>
l0000E38A:
	branch r12_3665 >=u r10_1049 l0000E390
l0000E38C_1:
	r12_3665 = r10_1049
l0000E390:
l0000E346:
	Mem4565[r0:byte] = 0<8>
l0000E312:
	r11_1016 = Mem4515[r7_1003 + -824<i32>:word32]
	branch r10_1049 >=u r11_1016 l0000E334
l0000E31A:
	r9_1067 = CONVERT(Mem4515[Mem4515[r7_1003 + -784<i32>:word32] + Mem4515[r7_1003 + -788<i32>:word32] + r10_1049:byte], byte, word32)
	branch SLICE(r9_1067, byte, 0) == 0<8> l0000E334
l0000E39E:
	r12_4576 = Mem3660[r7_1003 + -788<i32>:word32]
	r11_4577 = Mem3660[r7_1003 + -804<i32>:word32]
	branch r12_4576 == r11_4577 l0000E3B2
l0000E3AA:
	branch r12_4576 == 0<32> l0000E3B2
l0000E3AE:
	call Mem3660[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3703,Mem:Mem3660,pc:pc_4597,r0:r0_3685,r1:r1_3688,r10:r10_3706,r11:r11_4577,r12:r12_4576,r2:r2_3691,r3:r3_3694,r4:r4_3697,r5:r5_3700,r6:r6_3682,r7:r7_3658,r9:r9_3662
		defs: lr:lr_4591,pc:pc_4597,r0:r0_4583,r1:r1_4584,r11:r11_4594,r2:r2_4585,r3:r3_4586,r4:r4_4587,r5:r5_4588,r6:r6_4589,r7:r7_4590,r9:r9_4595
l0000E3B2:
	r10_4601 = Mem3660[r7_1003 + -796<i32>:word32]
	branch r10_4601 == 0<32> l0000E3C0
l0000E3BA:
	call Mem3660[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4612,Mem:Mem3660,pc:pc_4631,r0:r0_4606,r1:r1_4607,r10:r10_4601,r11:r11_4613,r12:r10_4601,r2:r2_4608,r3:r3_4609,r4:r4_4610,r5:r5_4611,r6:r6_4605,r7:r7_4599,r9:r9_4614
		defs: lr:lr_4625,pc:pc_4631,r0:r0_4617,r1:r1_4618,r10:r10_4626,r11:r11_4628,r2:r2_4619,r3:r3_4620,r4:r4_4621,r5:r5_4622,r6:r6_4623,r7:r7_4624,r9:r9_4629
l0000E3C0:
	call Mem3660[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4643,Mem:Mem3660,pc:pc_4663,r0:r0_4637,r1:r1_4638,r10:r10_4644,r11:r11_4645,r12:Mem3660[r7_4633 + -24<i32>:word32],r2:r2_4639,r3:r3_4640,r4:r4_4641,r5:r5_4642,r6:r6_4636,r7:r7_4633,r9:r9_4646
		defs: lr:lr_4657,pc:pc_4663,r0:r0_4649,r1:r1_4650,r10:r10_4658,r11:r11_4660,r2:r2_4651,r3:r3_4652,r4:r4_4653,r5:r5_4654,r6:r6_4655,r7:r7_4656,r9:r9_4661
	r12_4665 = Mem3660[r7_4656 + -8<i32>:word32]
	branch r12_4665 == 0<32> l0000E3D4
l0000E3D0:
	call Mem3660[r6_4655 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4657,Mem:Mem3660,pc:pc_4683,r0:r0_4649,r1:r1_4650,r10:r10_4658,r11:r11_4660,r12:r12_4665,r2:r2_4651,r3:r3_4652,r4:r4_4653,r5:r5_4654,r6:r6_4655,r7:r7_4656,r9:r9_4661
		defs: lr:lr_4677,pc:pc_4683,r0:r0_4669,r1:r1_4670,r10:r10_4678,r11:r11_4680,r12:r12_4679,r2:r2_4671,r3:r3_4672,r4:r4_4673,r5:r5_4674,r6:r6_4675,r7:r7_4676,r9:r9_4681
l0000E3D4:
	call Mem3660[r6_4655 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_4694,Mem:Mem3660,pc:pc_4715,r0:r0_4687,r1:r1_4688,r10:r10_4695,r11:r11_4697,r12:r12_4696,r2:r2_4689,r3:r3_4690,r4:r4_4691,r5:r5_4692,r6:r6_4685,r7:r7_4693,r9:r9_4698
		defs: lr:lr_4709,pc:pc_4715,r12:r12_4711,r7:r7_4708
	Mem4718[r7_1003 + -788<i32>:word32] = 0<32>
l0000D400:
	r4_4719 = Mem403[r7_1003 + -784<i32>:word32]
	r9_1067 = Mem403[r7_1003 + -784<i32>:word32]
	r4_1012 = r4_4719 + 1<32>
	r8_4722 = Mem403[r7_1003 + -736<i32>:word32]
	branch r4_4719 + 1<32> >=u r9_1067 l0000D414
l0000D410_1:
	r4_1012 = 0xFFFFFFFF<32>
l0000D414:
	branch r4_1012 <=u r8_4722 l0000D48E
l0000D41A:
	branch r8_4722 != 0<32> l0000D422
l0000D422:
	r8_4734 = Mem403[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem403[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000D432
l0000D42E_1:
	r12_1006 = r8_4734 << 1<i32>
l0000D41E:
	r12_1006 = 0xC<32>
l0000D432:
	branch r12_1006 >=u r4_1012 l0000D438
l0000D434_1:
	r12_1006 = r4_1012
l0000D438:
	Mem4750[r7_1003 + -736<i32>:word32] = r12_1006
	branch r12_1006 == 0xFFFFFFFF<32> l0000E630
l0000D442:
	r10_4753 = Mem4750[r7_1003 + -788<i32>:word32]
	r9_4754 = Mem4750[r7_1003 + -804<i32>:word32]
	r3_4757 = CONVERT(r10_4753 == r9_4754, bool, word32)
	branch r3_4757 != 0<32> l0000D456
l0000D452:
	branch r10_4753 != 0<32> l0000D460
l0000D460:
	call Mem4750[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,Mem:Mem4750,pc:pc_4801,r0:r0_509,r1:r1_518,r10:r10_4753,r11:Mem4750[r7_402 + -736<i32>:word32],r12:Mem4750[r7_402 + -788<i32>:word32],r2:r2_528,r3:r3_4757,r4:r4_4726,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_4754
		defs: lr:lr_4795,pc:pc_4801,r0:r0_4787,r1:r1_4788,r10:r10_4796,r11:r11_4798,r12:r12_4797,r2:r2_4789,r3:r3_4790,r4:r4_4791,r6:r6_4793,r7:r7_4794,r9:r9_4799,sp:sp_4786
	pc = pc_4801
l0000D456:
	call Mem4750[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,Mem:Mem4750,pc:pc_4836,r0:r0_509,r1:r1_518,r10:r10_4753,r11:r11_4817,r12:Mem4750[r7_402 + -736<i32>:word32],r2:r2_528,r3:r3_4757,r4:r4_4726,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_4754
		defs: lr:lr_4830,pc:pc_4836,r0:r0_4822,r1:r1_4823,r10:r10_4831,r11:r11_4833,r12:r12_4832,r2:r2_4824,r3:r3_4825,r4:r4_4826,r6:r6_4828,r7:r7_4829,r9:r9_4834,sp:sp_4821
	pc = pc_4836
l0000D46C:
	r5_1001 = r12_4797
	branch r12_4797 == 0<32> l0000E630
l0000E630:
	r8_4846 = Mem4844[r7_1003 + -788<i32>:word32]
	branch r8_4846 == Mem4844[r7_1003 + -804<i32>:word32] l0000E646
l0000E63C:
	branch r8_4846 == 0<32> l0000E646
l0000E640:
	call Mem4844[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4903,Mem:Mem4844,pc:pc_4981,r0:r0_4855,r1:r1_4857,r10:r10_4905,r11:r11_4936,r12:r8_4846,r2:r2_4859,r3:r3_4861,r4:r4_4872,r5:r5_4902,r6:r6_4853,r7:r7_4842,r9:r9_4943
		defs: lr:lr_4975,pc:pc_4981,r0:r0_4967,r1:r1_4968,r10:r10_4976,r2:r2_4969,r3:r3_4970,r4:r4_4971,r5:r5_4972,r6:r6_4973,r7:r7_4974,r9:r9_4979
l0000E646:
	r11_130 = Mem4844[r7_1003 + -796<i32>:word32]
	branch r11_130 == 0<32> l0000E654
l0000E64E:
	call Mem4844[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4996,Mem:Mem4844,pc:pc_5015,r0:r0_4990,r1:r1_4991,r10:r10_4997,r11:r11_4985,r12:r11_4985,r2:r2_4992,r3:r3_4993,r4:r4_4994,r5:r5_4995,r6:r6_4989,r7:r7_4983,r9:r9_4998
		defs: lr:lr_5009,pc:pc_5015,r0:r0_5001,r1:r1_5002,r10:r10_5010,r11:r11_5012,r2:r2_5003,r3:r3_5004,r4:r4_5005,r5:r5_5006,r6:r6_5007,r7:r7_5008,r9:r9_5013
l0000E654:
	call Mem5018[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_5027,Mem:Mem5018,pc:pc_5047,r0:r0_5021,r1:r1_5022,r10:r10_5028,r11:r11_5029,r12:Mem5018[r7_5017 + -24<i32>:word32],r2:r2_5023,r3:r3_5024,r4:r4_5025,r5:r5_5026,r6:r6_5020,r7:r7_5017,r9:r9_5030
		defs: lr:lr_5041,pc:pc_5047,r0:r0_5033,r1:r1_5034,r10:r10_5042,r11:r11_5044,r2:r2_5035,r3:r3_5036,r4:r4_5037,r5:r5_5038,r6:r6_5039,r7:r7_5040,r9:r9_5045
	r12_5049 = Mem5018[r7_5040 + -8<i32>:word32]
	branch r12_5049 == 0<32> l0000E668
l0000E664:
	call Mem5018[r6_5039 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_5041,Mem:Mem5018,pc:pc_5067,r0:r0_5033,r1:r1_5034,r10:r10_5042,r11:r11_5044,r12:r12_5049,r2:r2_5035,r3:r3_5036,r4:r4_5037,r5:r5_5038,r6:r6_5039,r7:r7_5040,r9:r9_5045
		defs: lr:lr_5061,pc:pc_5067,r0:r0_5053,r1:r1_5054,r10:r10_5062,r11:r11_5064,r12:r12_5063,r2:r2_5055,r3:r3_5056,r4:r4_5057,r5:r5_5058,r6:r6_5059,r7:r7_5060,r9:r9_5065
l0000E668:
	call Mem5018[r6_5039 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_5078,Mem:Mem5018,pc:pc_5099,r0:r0_5071,r1:r1_5072,r10:r10_5079,r11:r11_5081,r12:r12_5080,r2:r2_5073,r3:r3_5074,r4:r4_5075,r5:r5_5076,r6:r6_5069,r7:r7_5077,r9:r9_5082
		defs: lr:lr_5093,pc:pc_5099,r12:r12_5095,r7:r7_5092
	Mem5103[r7_1003 + -788<i32>:word32] = 0<32>
	r8_3847 = 0xC<32>
l0000D474:
	branch r3_122 == 0<32> l0000D48A
l0000D478:
	r8_5106 = Mem4750[r7_1003 + -784<i32>:word32]
	branch r8_5106 == 0<32> l0000D48A
l0000D480:
	call Mem4750[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_4904,Mem:Mem4750,pc:pc_5126,r0:r0_4856,r1:r1_4858,r10:r8_5106,r11:Mem4750[r7_4843 + -788<i32>:word32],r12:r12_4838,r2:r2_4860,r3:r3_4868,r4:r4_4873,r5:r12_4838,r6:r6_4854,r7:r7_4843,r9:r9_4950
		defs: lr:lr_5120,pc:pc_5126,r0:r0_5112,r1:r1_5113,r2:r2_5114,r3:r3_5115,r4:r4_5116,r5:r5_5117,r6:r6_5118,r7:r7_5119,sp:sp_5111
	pc = pc_5126
l0000D48A:
	Mem5130[r7_1003 + -788<i32>:word32] = r5_1001
l0000D48E:
	Mem5136[Mem5132[r7_1003 + -784<i32>:word32]:byte] = 0x25<8>
	Mem5139[r7_1003 + -784<i32>:word32] = r4_1012
l0000E4A8:
	r11_5142 = Mem5141[r7_1003 + -744<i32>:word32]
	r9_5144 = Mem5141[r7_1003 + -740<i32>:word32]
	r4_1012 = Mem5141[r11_5142 + -36<i32>:word32]
	Mem5150[r7_1003 + -792<i32>:word32] = Mem5141[r7_1003 + -792<i32>:word32] + 1<32>
	Mem5151[r7_1003 + -744<i32>:word32] = r11_5142 + 0x2C<32>
	Mem5152[r7_1003 + -740<i32>:word32] = r9_5144 + 0x2C<32>
	r11_1016 = r11_5142 + 0x2C<32>
l0000D262:
	call Mem47[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_61,Mem:Mem47,pc:pc_5169,r0:r0,r1:r1,r10:r10_62,r11:r11_63,r12:dwLoc3C,r2:r2,r3:&tLoc30,r4:r10,r5:r9,r6:r6_33,r7:fp - 36<i32>,r9:r9_65,Stack +031C:tLoc40,Stack +0320:dwLoc3C,Stack +0324:dwLoc38,Stack +0328:dwLoc34,Stack +032C:tLoc30
		defs: lr:lr_5163,pc:pc_5169,r0:r0_5155,r1:r1_5156,r10:r10_5164,r11:r11_5166,r2:r2_5157,r3:r3_5158,r4:r4_5159,r5:r5_5160,r6:r6_5161,r7:r7_5162,r9:r9_5167
	r12_5171 = Mem47[r7_5162 + -8<i32>:word32]
	branch r12_5171 == 0<32> l0000D276
l0000D272:
	call Mem47[r6_5161 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_5163,Mem:Mem47,pc:pc_5189,r0:r0_5155,r1:r1_5156,r10:r10_5164,r11:r11_5166,r12:r12_5171,r2:r2_5157,r3:r3_5158,r4:r4_5159,r5:r5_5160,r6:r6_5161,r7:r7_5162,r9:r9_5167
		defs: lr:lr_5183,pc:pc_5189,r0:r0_5175,r1:r1_5176,r10:r10_5184,r11:r11_5186,r12:r12_5185,r2:r2_5177,r3:r3_5178,r4:r4_5179,r5:r5_5180,r6:r6_5181,r7:r7_5182,r9:r9_5187
l0000D276:
	call Mem47[r6_5161 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_5200,Mem:Mem47,pc:pc_5221,r0:r0_5193,r1:r1_5194,r10:r10_5201,r11:r11_5203,r12:r12_5202,r2:r2_5195,r3:r3_5196,r4:r4_5197,r5:r5_5198,r6:r6_5191,r7:r7_5199,r9:r9_5204
		defs: lr:lr_5215,pc:pc_5221,r12:r12_5217,r7:r7_5214
	Mem5224[r7_1003 + -788<i32>:word32] = 0<32>
l0000E3DE:
	r8_3847 = 0x16<32>
l0000E674:
	Mem5229[r12_3840:word32] = r8_3847
l0000D24E:
l0000E676:
	sp_5237 = Mem5235[r7_1003 + -820<i32>:word32]
	r12_5236 = Mem5235[r7_1003 + -788<i32>:word32]
	r6_5241 = Mem5235[sp_5237 + 0x340<32>:word32]
	r3_5244 = Mem5235[sp_5237 + 0x34C<32>:word32]
	r2_5245 = Mem5235[sp_5237 + 0x350<32>:word32]
	r1_5246 = Mem5235[sp_5237 + 0x354<32>:word32]
	r0Out = Mem5235[sp_5237 + 0x358<32>:word32]
	r1Out = r1_5246
	r2Out = r2_5245
	r3Out = r3_5244
	r6Out = r6_5241
	r12Out = r12_5236
	lrOut = lr_3838
	pcOut = pc
	return SLICE(cond(sp_5237 + 0x338<32>), bool, 1)
fn0000D220_exit:


word64 fn0000E684(word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r11:r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000E684_entry:
l0000E684:
	r9_r8_35 = Mem29[pc + 382<i32>:word64]
	Z_50 = __avr32_f64_cmp_ge(SLICE(r9_r8_35, word32, 0), SLICE(r9_r8_35, word32, 32), r10, r11, out r12_46, out lr_534)
	r4_115 = r10
	r5_117 = r11
	r11_r10_52 = Mem41[pc + 376<i32>:word64]
	r9_r8_53 = Mem41[pc + 380<i32>:word64]
	branch Z_50 l0000E718
l0000E718:
	r1_141 = r12_46
	lr_225 = r12_46
	qwLoc0440_425 = r11_r10_52
	qwLoc042C_426 = r9_r8_53
l0000E724:
	r0_135 = lr_225 + (1<32> << r1_141)
	r9_77 = SLICE(qwLoc0440_425, word32, 32) (alias)
	r8_78 = SLICE(qwLoc0440_425, word32, 0) (alias)
	branch r0_135 < 0xFFFFFC02<32> l0000E794
l0000E794:
	r0_135 = lr_225
l0000E73C:
	r11_r10_538 = __avr32_f64_mul(r8_78, r9_77, r4_115, r5_117)
	r9_r8_90 = Mem72[pc + 204<i32>:word64]
	r11_80 = SLICE(r11_r10_538, word32, 32) (alias)
	r10_79 = SLICE(r11_r10_538, word32, 0) (alias)
	__avr32_f64_cmp_ge(SLICE(r9_r8_90, word32, 0), SLICE(r9_r8_90, word32, 32), r10_79, r11_80, out r12_98, out lr_539)
	r5_117 = r11_80
	r4_115 = r10_79
	r8_106 = SLICE(qwLoc0440_425, word32, 0) (alias)
	r9_108 = SLICE(qwLoc0440_425, word32, 32) (alias)
	branch r12_98 != 0<32> l0000E796
l0000E796:
	r9_r8_114 = Mem72[pc + 118<i32>:word64]
	branch __avr32_f64_cmp_lt(SLICE(r9_r8_114, word32, 0), SLICE(r9_r8_114, word32, 32), r4_115, r5_117, out r9_540, out r12_541, out lr_542) l0000E7EE
l0000E7A4:
	r7_133 = fp - 0x24<32> + (r1_141 << 3<8>) - 0x208<32>
	r9_136 = r0_135
l0000E7E2:
	branch r1_141 > 0<32> l0000E7B4
l0000E7B4:
	r1_141 = r1_141 - 1<32>
	r0_135 = r9_136 + (1<32> << r1_141)
	branch r0_135 < 0xFFFFFC02<32> l0000E7E0
l0000E7C6:
	r9_r8_153 = Mem72[r7_133:word64]
	r11_r10_543 = __avr32_f64_mul(SLICE(r9_r8_153, word32, 0), SLICE(r9_r8_153, word32, 32), r4_115, r5_117)
	r11_157 = SLICE(r11_r10_543, word32, 32) (alias)
	r10_156 = SLICE(r11_r10_543, word32, 0) (alias)
	r9_r8_167 = Mem72[pc + 62<i32>:word64]
	r5_117 = r11_157
	r4_115 = r10_156
	r9_136 = r0_135
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_167, word32, 0), SLICE(r9_r8_167, word32, 32), r10_156, r11_157, out r12_544, out lr_545) l0000E7EE
l0000E7E0:
	r7_133 = r7_133 - 8<32>
l0000E7EC:
	r0_135 = r9_136
l0000E75E:
	r8_211 = SLICE(qwLoc042C_426, word32, 0) (alias)
	r9_213 = SLICE(qwLoc042C_426, word32, 32) (alias)
	qwLoc0440_425 = __avr32_f64_mul(r8_106, r9_108, r8_106, r9_108)
	r1_141 = r1_141 + 1<32>
	lr_225 = r0_135
	qwLoc042C_426 = __avr32_f64_mul(r8_211, r9_213, r8_211, r9_213)
l0000E6A6:
	r1_141 = 0<32>
	r0_135 = 0<32>
	qwLoc0434_433 = r11_r10_52
	r3_r2_528 = r9_r8_53 (alias)
l0000E6B2:
	__avr32_f64_cmp_ge(SLICE(qwLoc0434_433, word32, 0), SLICE(qwLoc0434_433, word32, 32), r4_115, r5_117, out r12_244, out lr_537)
	r3_257 = SLICE(r3_r2_528, word32, 32) (alias)
	r2_255 = SLICE(r3_r2_528, word32, 0) (alias)
	lr_252 = 1<32> << r1_141
	branch r12_244 == 0<32> l0000E7EE
l0000E7EE:
	r8_262 = r1_141 - 1<32>
	r3_268 = fp - 0x224<32> + (r8_262 << 3<i32>)
	r7_270 = fp - 0x424<32> + (r8_262 << 3<i32>)
l0000E84E:
	branch r1_141 > 0<32> l0000E824
l0000E824:
	r9_r8_281 = Mem411[r3_268:word64]
	__avr32_f64_cmp_ge(SLICE(r9_r8_281, word32, 0), SLICE(r9_r8_281, word32, 32), r4_115, r5_117, out r12_289, out lr_546)
	r1_141 = r1_141 - 1<32>
	r3_268 = r3_268 - 8<32>
	lr_296 = 1<32> << r1_141
	branch r12_289 == 0<32> l0000E84C
l0000E83E:
	r9_r8_302 = Mem411[r7_270:word64]
	r11_r10_547 = __avr32_f64_mul(SLICE(r9_r8_302, word32, 0), SLICE(r9_r8_302, word32, 32), r4_115, r5_117)
	r0_135 = r0_135 + lr_296
	r4_115 = SLICE(r11_r10_547, word32, 0)
	r5_117 = SLICE(r11_r10_547, word32, 32)
l0000E84C:
	r7_270 = r7_270 - 8<32>
l0000E858:
	Mem327[r12:word32] = r0_135
	return SEQ(r5_117, r4_115)
fn0000E684_exit:
l0000E6D2:
	r11_r10_535 = __avr32_f64_mul(r2_255, r3_257, r4_115, r5_117)
	r8_367 = SLICE(qwLoc0434_433, word32, 0) (alias)
	r9_369 = SLICE(qwLoc0434_433, word32, 32) (alias)
	qwLoc0434_433 = __avr32_f64_mul(r8_367, r9_369, r8_367, r9_369)
	r11_r10_536 = __avr32_f64_mul(r2_255, r3_257, r2_255, r3_257)
	r0_135 = r0_135 + lr_252
	r4_115 = SLICE(r11_r10_535, word32, 0)
	r5_117 = SLICE(r11_r10_535, word32, 32)
	r1_141 = r1_141 + 1<32>
	r3_r2_528 = r11_r10_536 (alias)


word64 fn0000E868(word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r11:r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000E868_entry:
l0000E868:
	r9_r8_35 = Mem29[pc + 382<i32>:word64]
	Z_50 = __avr32_f64_cmp_ge(SLICE(r9_r8_35, word32, 0), SLICE(r9_r8_35, word32, 32), r10, r11, out r12_46, out lr_534)
	r4_115 = r10
	r5_117 = r11
	r11_r10_52 = Mem41[pc + 376<i32>:word64]
	r9_r8_53 = Mem41[pc + 380<i32>:word64]
	branch Z_50 l0000E8FC
l0000E8FC:
	r1_141 = r12_46
	lr_225 = r12_46
	qwLoc0440_425 = r11_r10_52
	qwLoc042C_426 = r9_r8_53
l0000E908:
	r0_135 = lr_225 + (1<32> << r1_141)
	r9_77 = SLICE(qwLoc0440_425, word32, 32) (alias)
	r8_78 = SLICE(qwLoc0440_425, word32, 0) (alias)
	branch r0_135 < 0xFFFFFC02<32> l0000E978
l0000E978:
	r0_135 = lr_225
l0000E920:
	r11_r10_538 = __avr32_f64_mul(r8_78, r9_77, r4_115, r5_117)
	r9_r8_90 = Mem72[pc + 204<i32>:word64]
	r11_80 = SLICE(r11_r10_538, word32, 32) (alias)
	r10_79 = SLICE(r11_r10_538, word32, 0) (alias)
	__avr32_f64_cmp_ge(SLICE(r9_r8_90, word32, 0), SLICE(r9_r8_90, word32, 32), r10_79, r11_80, out r12_98, out lr_539)
	r5_117 = r11_80
	r4_115 = r10_79
	r8_106 = SLICE(qwLoc0440_425, word32, 0) (alias)
	r9_108 = SLICE(qwLoc0440_425, word32, 32) (alias)
	branch r12_98 != 0<32> l0000E97A
l0000E97A:
	r9_r8_114 = Mem72[pc + 118<i32>:word64]
	branch __avr32_f64_cmp_lt(SLICE(r9_r8_114, word32, 0), SLICE(r9_r8_114, word32, 32), r4_115, r5_117, out r9_540, out r12_541, out lr_542) l0000E9D2
l0000E988:
	r7_133 = fp - 0x24<32> + (r1_141 << 3<8>) - 0x208<32>
	r9_136 = r0_135
l0000E9C6:
	branch r1_141 > 0<32> l0000E998
l0000E998:
	r1_141 = r1_141 - 1<32>
	r0_135 = r9_136 + (1<32> << r1_141)
	branch r0_135 < 0xFFFFFC02<32> l0000E9C4
l0000E9AA:
	r9_r8_153 = Mem72[r7_133:word64]
	r11_r10_543 = __avr32_f64_mul(SLICE(r9_r8_153, word32, 0), SLICE(r9_r8_153, word32, 32), r4_115, r5_117)
	r11_157 = SLICE(r11_r10_543, word32, 32) (alias)
	r10_156 = SLICE(r11_r10_543, word32, 0) (alias)
	r9_r8_167 = Mem72[pc + 62<i32>:word64]
	r5_117 = r11_157
	r4_115 = r10_156
	r9_136 = r0_135
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_167, word32, 0), SLICE(r9_r8_167, word32, 32), r10_156, r11_157, out r12_544, out lr_545) l0000E9D2
l0000E9C4:
	r7_133 = r7_133 - 8<32>
l0000E9D0:
	r0_135 = r9_136
l0000E942:
	r8_211 = SLICE(qwLoc042C_426, word32, 0) (alias)
	r9_213 = SLICE(qwLoc042C_426, word32, 32) (alias)
	qwLoc0440_425 = __avr32_f64_mul(r8_106, r9_108, r8_106, r9_108)
	r1_141 = r1_141 + 1<32>
	lr_225 = r0_135
	qwLoc042C_426 = __avr32_f64_mul(r8_211, r9_213, r8_211, r9_213)
l0000E88A:
	r1_141 = 0<32>
	r0_135 = 0<32>
	qwLoc0434_433 = r11_r10_52
	r3_r2_528 = r9_r8_53 (alias)
l0000E896:
	__avr32_f64_cmp_ge(SLICE(qwLoc0434_433, word32, 0), SLICE(qwLoc0434_433, word32, 32), r4_115, r5_117, out r12_244, out lr_537)
	r3_257 = SLICE(r3_r2_528, word32, 32) (alias)
	r2_255 = SLICE(r3_r2_528, word32, 0) (alias)
	lr_252 = 1<32> << r1_141
	branch r12_244 == 0<32> l0000E9D2
l0000E9D2:
	r8_262 = r1_141 - 1<32>
	r3_268 = fp - 0x224<32> + (r8_262 << 3<i32>)
	r7_270 = fp - 0x424<32> + (r8_262 << 3<i32>)
l0000EA32:
	branch r1_141 > 0<32> l0000EA08
l0000EA08:
	r9_r8_281 = Mem411[r3_268:word64]
	__avr32_f64_cmp_ge(SLICE(r9_r8_281, word32, 0), SLICE(r9_r8_281, word32, 32), r4_115, r5_117, out r12_289, out lr_546)
	r1_141 = r1_141 - 1<32>
	r3_268 = r3_268 - 8<32>
	lr_296 = 1<32> << r1_141
	branch r12_289 == 0<32> l0000EA30
l0000EA22:
	r9_r8_302 = Mem411[r7_270:word64]
	r11_r10_547 = __avr32_f64_mul(SLICE(r9_r8_302, word32, 0), SLICE(r9_r8_302, word32, 32), r4_115, r5_117)
	r0_135 = r0_135 + lr_296
	r4_115 = SLICE(r11_r10_547, word32, 0)
	r5_117 = SLICE(r11_r10_547, word32, 32)
l0000EA30:
	r7_270 = r7_270 - 8<32>
l0000EA3C:
	Mem327[r12:word32] = r0_135
	return SEQ(r5_117, r4_115)
fn0000E868_exit:
l0000E8B6:
	r11_r10_535 = __avr32_f64_mul(r2_255, r3_257, r4_115, r5_117)
	r8_367 = SLICE(qwLoc0434_433, word32, 0) (alias)
	r9_369 = SLICE(qwLoc0434_433, word32, 32) (alias)
	qwLoc0434_433 = __avr32_f64_mul(r8_367, r9_369, r8_367, r9_369)
	r11_r10_536 = __avr32_f64_mul(r2_255, r3_257, r2_255, r3_257)
	r0_135 = r0_135 + lr_252
	r4_115 = SLICE(r11_r10_535, word32, 0)
	r5_117 = SLICE(r11_r10_535, word32, 32)
	r1_141 = r1_141 + 1<32>
	r3_r2_528 = r11_r10_536 (alias)


byte fn0000EA4C(word32 r11, word32 r12, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: VN lr r10 r11 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000EA4C_entry:
l0000EA4C:
	r6_19 = 0x0000EA50<p32> - Mem17[0x0000EB26<p32>:word32]
	r10_111 = Mem17[r11 + 4<i32>:word32] + 4<32>
	r11_109 = 0<32>
l0000EB20:
	branch r11_109 <u Mem27[r11:word32] l0000EA5E
l0000EA5E:
	r8_33 = Mem27[r10_111 + -4<i32>:word32]
	r9 = r8_33 - 1<32>
	branch r8_33 >u 0x16<32> || r8_33 <u 1<32> l0000EACC
l0000EACC:
	r9Out = r8_33 - 1<32>
	r10Out = <invalid>
	r11Out = <invalid>
	lrOut = <invalid>
	return <invalid>
l0000EA6C:
	switch (r8_33 - 1<32>) { l0000EA74 l0000EA78 l0000EA7C l0000EA80 l0000EA84 l0000EA88 l0000EA8C l0000EA90 l0000EA94 l0000EA98 l0000EA9C l0000EAA0 l0000EAA4 l0000EAA8 l0000EAAC l0000EAB0 l0000EAB4 l0000EAB8 l0000EABC l0000EAC0 l0000EAC4 l0000EAC8 }
l0000EAC8:
l0000EAC4:
l0000EAC0:
l0000EABC:
l0000EAB8:
l0000EAB4:
l0000EAB0:
l0000EB06:
	r8_47 = Mem27[r12:word32]
	Mem48[r10_111:word32] = r8_47
	r12 = r12 + 4<32>
	branch r8_47 != 0<32> l0000EB1C
l0000EB10:
	r8_52 = 0x0000EB2C<p32>
l0000EAAC:
l0000EAF6:
	r8_54 = Mem27[r12:word32]
	Mem55[r10_111:word32] = r8_54
	r12 = r12 + 4<32>
	branch r8_54 != 0<32> l0000EB1C
l0000EB00:
	r8_52 = Mem55[r6_19 + 608<i32>:word32]
l0000EAA8:
l0000EAA4:
l0000EAA0:
l0000EA9C:
l0000EAEA:
	r9_r8_63 = Mem27[r12:word64]
	Mem69[r10_111:word64] = r9_r8_63
	r9 = SLICE(r9_r8_63, word32, 32) (alias)
	r12 = r12 + 8<32>
l0000EA98:
l0000EA94:
l0000EADE:
	r9_r8_72 = Mem27[r12:word64]
	Mem78[r10_111:word64] = r9_r8_72
	r9 = SLICE(r9_r8_72, word32, 32) (alias)
	r12 = r12 + 8<32>
l0000EA90:
l0000EA8C:
l0000EA88:
l0000EA84:
l0000EB16:
	r8_52 = Mem27[r12:word32]
	r12 = r12 + 4<32>
l0000EB1A:
	Mem87[r10_111:word32] = r8_52
l0000EA80:
l0000EA7C:
l0000EAD6:
	Mem94[r10_111:word16] = Mem27[r12:word16]
	r12 = r12 + 4<32>
l0000EA78:
l0000EA74:
l0000EACE:
	Mem101[r10_111:byte] = Mem27[r12:byte]
	r12 = r12 + 4<32>
l0000EB1C:
	r11_109 = r11_109 + 1<32>
	r10_111 = r10_111 + 0xC<32>
l0000EB26:
	r9Out = r9
	r10Out = <invalid>
	r11Out = <invalid>
	lrOut = <invalid>
	return <invalid>
fn0000EA4C_exit:


byte fn0000EB48(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: VN lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000EB48_entry:
l0000EB48:
	r6_32 = 0x0000EB4E<p32> - Mem29[0x0000EC88<p32>:word32]
	Mem42[r11:word32] = 0<32>
	call Mem42[r6_32 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,Mem:Mem42,r0:r11,r1:r10,r10:r10,r11:r11,r12:0x2C<32>,r2:r2,r3:r3,r4:r4,r5:0<32>,r6:r6_32,r7:r12,Stack +0018:lr,Stack +001C:r7,Stack +0020:r6,Stack +0024:r5,Stack +0028:r4,Stack +002C:r3,Stack +0030:r2,Stack +0034:r1,Stack +0038:r0
		defs: lr:lr_52,r0:r0_44,r1:r1_45,r10:r10_55,r11:r11_54,r12:r12_53,r2:r2_46,r3:r3_47,r4:r4_48,r5:r5_49,r6:r6_50,r7:r7_51,sp:sp_43,VNZC:VNZC_58
	Mem59[r0_1278 + 4<i32>:word32] = r12_1623
	branch SLICE(VNZC_58, bool, 1) l0000F25E
l0000EB66:
	Mem62[sp_114:word32] = r5_1204
	Mem63[sp_114 + 8<i32>:word32] = r5_1204
	Mem64[sp_114 + 4<i32>:word32] = 1<32>
	Mem65[sp_114 + 12<i32>:word32] = r5_1204
	Mem67[r1_1279:word32] = r5_1204
	Mem68[r1_1279 + 4<i32>:word32] = r5_1204
	r2_1085 = r5_1204
l0000F20C:
	r12_71 = CONVERT(Mem70[r7_1059:byte], byte, word32)
	branch r12_71 != 0<32> l0000EB7A
l0000EB7A:
	r7_1059 = r7_1059 + 1<32>
	branch SLICE(r12_71, byte, 0) != 0x25<8> l0000F20C
l0000EB86:
	r3_1281 = Mem70[r0_1278:word32] * 0x2C<32> + Mem70[r0_1278 + 4<i32>:word32]
	Mem86[r3_1281 + 28<i32>:word32] = 0<32>
	Mem87[r3_1281 + 8<i32>:word32] = 0<32>
	Mem88[r3_1281 + 12<i32>:word32] = 0<32>
	Mem89[r3_1281 + 16<i32>:word32] = 0<32>
	Mem90[r3_1281 + 24<i32>:word32] = 0<32>
	Mem91[r3_1281:word32] = r7_1059 + 0xFFFFFFFF<32>
	Mem92[r3_1281 + -24<i32>:word32] = 0xFFFFFFFF<32>
	Mem93[r3_1281 + 20<i32>:word32] = 0xFFFFFFFF<32>
	Mem94[r3_1281 + -32<i32>:word32] = 0xFFFFFFFF<32>
	r8_95 = CONVERT(Mem94[r7_1059:byte], byte, word32)
	branch SLICE(r8_95, byte, 0) >u 0x39<8> || SLICE(r8_95, byte, 0) <u 0x30<8> l0000EC24
l0000EBBA:
	r10_100 = r7_1059
l0000EBBC:
	r11_103 = CONVERT(Mem94[r10_100:byte], byte, word32)
	r10_100 = r10_100 + 1<32>
	branch SLICE(r11_103, byte, 0) <=u 0x39<8> l0000EBBC
l0000EBCE:
	branch SLICE(r11_103, byte, 0) != 0x24<8> l0000EC24
l0000EC24:
	Mem116[sp_114 + 16<i32>:word32] = 0xFFFFFFFF<32>
l0000EBD6:
	r12_118 = r7_1059
	r10_1027 = 0<32>
l0000EBF8:
	lr_122 = CONVERT(Mem94[r12_118:byte], byte, word32)
	r7_1059 = r10_1027 * 5<32>
	r11_103 = 0xFFFFFFFF<32>
	branch SLICE(lr_122, byte, 0) <=u 0x39<8> l0000EBDC
l0000EBDC:
	branch r10_1027 >u Mem94[0x0000EC8C<p32>:word32] l0000EBE8
l0000EBE4:
	r11_103 = r7_1059 << 1<32>
l0000EBE8:
	r10_1027 = r11_103 + (lr_122 - 0x30<32>)
	branch r10_1027 >=u r11_103 l0000EBF6
l0000EBF2_1:
	r10_1027 = 0xFFFFFFFF<32>
l0000EBF6:
	r12_118 = r12_118 + 1<32>
l0000EC0E:
	branch r10_1027 == 0<32> l0000F22C
l0000EC14:
	branch r10_1027 == 0xFFFFFFFF<32> l0000F22C
l0000EC1A:
	Mem156[sp_114 + 16<i32>:word32] = r10_1027 + 0xFFFFFFFF<32>
	r7_1059 = r12_118 + 1<32>
l0000EC28:
	r12_159 = r7_1059 + 1<32>
l0000EC32:
	r7_1059 = r12_159 - 1<32>
	r9_164 = CONVERT(Mem163[r7_1059:byte], byte, word32)
	branch SLICE(r9_164, byte, 0) != 0x27<8> l0000EC46
l0000EC46:
	branch SLICE(r9_164, byte, 0) != 0x2D<8> l0000EC54
l0000EC54:
	branch SLICE(r9_164, byte, 0) != 0x2B<8> l0000EC62
l0000EC62:
	branch SLICE(r9_164, byte, 0) != 0x20<8> l0000EC70
l0000EC70:
	branch SLICE(r9_164, byte, 0) != 0x23<8> l0000EC7E
l0000EC7E:
	branch SLICE(r9_164, byte, 0) != 0x30<8> l0000EC94
l0000EC94:
	branch SLICE(r9_164, byte, 0) != 0x2A<8> l0000EDC0
l0000EDC0:
	branch SLICE(r9_164, byte, 0) >u 0x39<8> || SLICE(r9_164, byte, 0) <u 0x30<8> l0000EDF2
l0000EDCC:
	Mem191[r3_1281 + 12<i32>:word32] = r7_1059
l0000EDD2:
	branch Mem191[r7_1059:byte] <=u 0x39<8> l0000EDD0
l0000EDD0:
	r7_1059 = r7_1059 + 1<32>
l0000EDE0:
	r8_202 = Mem191[r3_1281 + 12<i32>:word32]
	Mem203[r3_1281 + 16<i32>:word32] = r7_1059
	r10_206 = Mem203[sp_114 + 8<i32>:word32]
	r8_207 = r7_1059 + r8_202
	branch r10_206 >=u r8_207 l0000EDF0
l0000EDEC_1:
	r10_206 = r8_207
l0000EDF0:
	Mem213[sp_114 + 8<i32>:word32] = r10_206
l0000EC9E:
	Mem214[r3_1281 + 12<i32>:word32] = r7_1059
	Mem215[r3_1281 + 16<i32>:word32] = r12_159
	r8_216 = CONVERT(Mem215[r12_159:byte], byte, word32)
	r10_1027 = Mem215[sp_114 + 8<i32>:word32]
	branch r10_1027 != 0<32> l0000ECAE
l0000ECAA_1:
	r10_1027 = 1<32>
l0000ECAE:
	Mem224[sp_114 + 8<i32>:word32] = r10_1027
	r7_1059 = r12_159
	branch SLICE(r8_216, byte, 0) >u 0x39<8> || SLICE(r8_216, byte, 0) <u 0x30<8> l0000ED24
l0000ECBC:
	r10_1027 = r12_159
l0000ECBE:
	r11_103 = CONVERT(Mem224[r10_1027:byte], byte, word32)
	r10_1027 = r10_1027 + 1<32>
	branch SLICE(r11_103, byte, 0) <=u 0x39<8> l0000ECBE
l0000ECD0:
	branch SLICE(r11_103, byte, 0) != 0x24<8> l0000ED24
l0000ECD8:
	r10_1027 = 0<32>
l0000ECF8:
	lr_122 = CONVERT(Mem224[r12_159:byte], byte, word32)
	r7_1059 = r10_1027 * 5<32>
	r11_103 = 0xFFFFFFFF<32>
	branch SLICE(lr_122, byte, 0) <=u 0x39<8> l0000ECDC
l0000ECDC:
	branch r10_1027 >u Mem224[0x0000EE4C<p32>:word32] l0000ECE8
l0000ECE4:
	r11_103 = r7_1059 << 1<32>
l0000ECE8:
	r10_1027 = r11_103 + (lr_122 - 0x30<32>)
	branch r10_1027 >=u r11_103 l0000ECF6
l0000ECF2_1:
	r10_1027 = 0xFFFFFFFF<32>
l0000ECF6:
	r12_159 = r12_159 + 1<32>
l0000ED0E:
	branch r10_1027 == 0<32> l0000F22C
l0000ED14:
	branch r10_1027 == 0xFFFFFFFF<32> l0000F22C
l0000ED1A:
	Mem283[r3_1281 + 20<i32>:word32] = r10_1027 + 0xFFFFFFFF<32>
	r7_1059 = r12_159 + 1<32>
l0000ED24:
	branch Mem285[r3_1281 + 20<i32>:word32] != 0xFFFFFFFF<32> l0000ED38
l0000ED2A:
	r8_294 = Mem285[sp_114:word32]
	Mem295[r3_1281 + 20<i32>:word32] = r8_294
	branch r8_294 == 0xFFFFFFFF<32> l0000F22C
l0000ED34:
	Mem300[sp_114:word32] = r8_294 + 1<32>
l0000ED38:
	r5_1204 = Mem302[r3_1281 + 20<i32>:word32]
	branch r5_1204 <u r2_1085 l0000ED92
l0000ED3E:
	r8_314 = r2_1085 << 1<32>
	branch r2_1085 < 0<32> l0000ED48
l0000ED44_1:
	r2_1085 = r8_314
l0000ED48:
	branch r2_1085 >= 0<32> l0000ED4C
l0000ED48_1:
	r2_1085 = 0xFFFFFFFF<32>
l0000ED4C:
	branch r2_1085 >u r5_1204 l0000ED5C
l0000ED52:
	r2_1085 = r5_1204 + 1<32>
	branch r5_1204 + 1<32> >=u r5_1204 l0000ED5C
l0000ED58_1:
	r2_1085 = 0xFFFFFFFF<32>
l0000ED5C:
	branch r2_1085 >u Mem302[0x0000EE50<p32>:word32] l0000F24A
l0000ED64:
	r9_348 = Mem302[r1_1279 + 4<i32>:word32]
	r8_349 = r2_1085 * 3<32>
	branch r9_348 == 0<32> l0000ED7C
l0000ED7C:
	call Mem302[r6_1284 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_400,Mem:Mem302,r0:r0_78,r1:r1_1340,r10:r10_415,r11:r11_408,r12:r8_349 << 2<32>,r2:r2_334,r3:r3_83,r4:r4_1388,r5:r5_303,r6:r6_1350,r7:r7_394
		defs: lr:lr_429,r0:r0_421,r1:r1_422,r10:r10_432,r11:r11_431,r12:r12_430,r2:r2_423,r3:r3_424,r4:r4_425,r5:r5_426,r6:r6_427,r7:r7_428,sp:sp_420
l0000ED72:
	call Mem302[r6_1284 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_400,Mem:Mem302,r0:r0_78,r1:r1_1340,r10:r10_415,r11:r8_349 << 2<32>,r12:r9_348,r2:r2_334,r3:r3_83,r4:r4_1388,r5:r5_303,r6:r6_1350,r7:r7_394
		defs: lr:lr_447,r0:r0_439,r1:r1_440,r10:r10_450,r11:r11_449,r12:r12_448,r2:r2_441,r3:r3_442,r4:r4_443,r5:r5_444,r6:r6_445,r7:r7_446,sp:sp_438
l0000ED80:
	branch r12_430 == 0<32> l0000F24A
l0000ED86:
	Mem458[r1_1279 + 4<i32>:word32] = r12_430
l0000ED92:
	r8_461 = Mem460[r1_1279:word32]
	r9_462 = Mem460[r1_1279 + 4<i32>:word32]
	r10_1027 = r8_461 * 3<32>
	r11_103 = r8_461 + 1<32>
	branch r8_461 <=u r5_1204 l0000ED8A
l0000ED8A:
	Mem469[r8_461 * 0xC<32>:word32] = 0<32>
	Mem470[r1_1279:word32] = r8_461 + 1<32>
l0000EDA4:
	r9_472 = r9_462 + r5_1204 * 0xC<32>
	r8_473 = Mem460[r9_472:word32]
	branch r8_473 != 0<32> l0000EDB8
l0000EDB8:
	branch r8_473 == 5<32> l0000EDF2
l0000EDBC:
l0000EDB2:
	Mem479[r9_472:word32] = 5<32>
l0000EDF2:
	branch Mem484[r7_1059:byte] != 0x2E<8> l0000EF60
l0000EDFE:
	r7_1059 = r7_1059 + 1<32>
	branch Mem484[r7_1059:byte] != 0x2A<8> l0000EF3A
l0000EF3A:
	Mem499[r3_1281 + 24<i32>:word32] = r7_1059 - 1<32>
l0000EF40:
	branch Mem499[r7_1059:byte] <=u 0x39<8> l0000EF3E
l0000EF3E:
	r7_1059 = r7_1059 + 1<32>
l0000EF4E:
	r8_510 = Mem499[r3_1281 + 24<i32>:word32]
	Mem511[r3_1281 + 28<i32>:word32] = r7_1059
	r10_516 = Mem511[sp_114 + 12<i32>:word32]
	r8_517 = r7_1059 + r8_510
	branch r10_516 >=u r8_517 l0000EF5E
l0000EF5A_1:
	r10_516 = r8_517
l0000EF5E:
	Mem523[sp_114 + 12<i32>:word32] = r10_516
l0000EE10:
	Mem525[r3_1281 + 24<i32>:word32] = r7_1059 - 1<32>
	Mem526[r3_1281 + 28<i32>:word32] = r7_1059 + 1<32>
	r7_1059 = r7_1059 + 1<32>
	r8_527 = CONVERT(Mem526[r7_1059 + 1<32>:byte], byte, word32)
	r10_1027 = Mem526[sp_114 + 12<i32>:word32]
	branch r10_1027 >u 1<32> l0000EE22
l0000EE1E_1:
	r10_1027 = 2<32>
l0000EE22:
	Mem535[sp_114 + 12<i32>:word32] = r10_1027
	branch SLICE(r8_527, byte, 0) >u 0x39<8> || SLICE(r8_527, byte, 0) <u 0x30<8> l0000EEA0
l0000EE2E:
	r10_1027 = r7_1059 + 1<32>
l0000EE30:
	r11_103 = CONVERT(Mem535[r10_1027:byte], byte, word32)
	r10_1027 = r10_1027 + 1<32>
	branch SLICE(r11_103, byte, 0) <=u 0x39<8> l0000EE30
l0000EE42:
	branch SLICE(r11_103, byte, 0) != 0x24<8> l0000EEA0
l0000EE4A:
	r12_555 = r7_1059 + 1<32>
	r10_1027 = 0<32>
l0000EE74:
	lr_122 = CONVERT(Mem535[r12_555:byte], byte, word32)
	r7_1059 = r10_1027 * 5<32>
	r11_103 = 0xFFFFFFFF<32>
	branch SLICE(lr_122, byte, 0) <=u 0x39<8> l0000EE58
l0000EE58:
	branch r10_1027 >u Mem535[0x0000EFAC<p32>:word32] l0000EE64
l0000EE60:
	r11_103 = r7_1059 << 1<32>
l0000EE64:
	r10_1027 = r11_103 + (lr_122 - 0x30<32>)
	branch r10_1027 >=u r11_103 l0000EE72
l0000EE6E_1:
	r10_1027 = 0xFFFFFFFF<32>
l0000EE72:
	r12_555 = r12_555 + 1<32>
l0000EE8A:
	branch r10_1027 == 0<32> l0000F22C
l0000EE90:
	branch r10_1027 == 0xFFFFFFFF<32> l0000F22C
l0000EE96:
	Mem595[r3_1281 + -32<i32>:word32] = r10_1027 + 0xFFFFFFFF<32>
	r7_1059 = r12_555 + 1<32>
l0000EEA0:
	branch Mem597[r3_1281 + 32<i32>:word32] != 0xFFFFFFFF<32> l0000EEB4
l0000EEA6:
	r8_606 = Mem597[sp_114:word32]
	Mem607[r3_1281 + -32<i32>:word32] = r8_606
	branch r8_606 == 0xFFFFFFFF<32> l0000F22C
l0000EEB0:
	Mem612[sp_114:word32] = r8_606 + 1<32>
l0000EEB4:
	r5_1204 = Mem614[r3_1281 + 32<i32>:word32]
	branch r5_1204 <u r2_1085 l0000EF0E
l0000EEBA:
	r8_630 = r2_1085 << 1<32>
	branch r2_1085 < 0<32> l0000EEC4
l0000EEC0_1:
	r2_1085 = r8_630
l0000EEC4:
	branch r2_1085 >= 0<32> l0000EEC8
l0000EEC4_1:
	r2_1085 = 0xFFFFFFFF<32>
l0000EEC8:
	branch r2_1085 >u r5_1204 l0000EED8
l0000EECE:
	r2_1085 = r5_1204 + 1<32>
	branch r5_1204 + 1<32> >=u r5_1204 l0000EED8
l0000EED4_1:
	r2_1085 = 0xFFFFFFFF<32>
l0000EED8:
	branch r2_1085 >u Mem614[0x0000EFB0<p32>:word32] l0000F24A
l0000EEE0:
	r9_666 = Mem614[r1_1279 + 4<i32>:word32]
	r8_667 = r2_1085 * 3<32>
	branch r9_666 == 0<32> l0000EEF8
l0000EEF8:
	call Mem614[r6_1284 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_729,Mem:Mem614,r0:r0_692,r1:r1_659,r10:r10_750,r11:r11_741,r12:r8_667 << 2<32>,r2:r2_650,r3:r3_495,r4:r4_710,r5:r5_615,r6:r6_677,r7:r7_724
		defs: lr:lr_764,r0:r0_756,r1:r1_757,r10:r10_767,r11:r11_766,r12:r12_765,r2:r2_758,r3:r3_759,r4:r4_760,r5:r5_761,r6:r6_762,r7:r7_763,sp:sp_755
l0000EEEE:
	call Mem614[r6_1284 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_729,Mem:Mem614,r0:r0_692,r1:r1_659,r10:r10_750,r11:r8_667 << 2<32>,r12:r9_666,r2:r2_650,r3:r3_495,r4:r4_710,r5:r5_615,r6:r6_677,r7:r7_724
		defs: lr:lr_782,r0:r0_774,r1:r1_775,r10:r10_785,r11:r11_784,r12:r12_783,r2:r2_776,r3:r3_777,r4:r4_778,r5:r5_779,r6:r6_780,r7:r7_781,sp:sp_773
l0000EEFC:
	branch r12_765 == 0<32> l0000F24A
l0000EF02:
	Mem793[r1_1279 + 4<i32>:word32] = r12_765
l0000EF0E:
	r8_796 = Mem795[r1_1279:word32]
	r9_797 = Mem795[r1_1279 + 4<i32>:word32]
	r10_1027 = r8_796 * 3<32>
	r11_103 = r8_796 + 1<32>
	branch r8_796 <=u r5_1204 l0000EF06
l0000EF06:
	Mem804[r8_796 * 0xC<32>:word32] = 0<32>
	Mem805[r1_1279:word32] = r8_796 + 1<32>
l0000EF20:
	r9_807 = r9_797 + r5_1204 * 0xC<32>
	r8_808 = Mem795[r9_807:word32]
	branch r8_808 != 0<32> l0000EF34
l0000EF34:
	branch r8_808 == 5<32> l0000EF60
l0000EF38:
l0000EF2E:
	Mem814[r9_807:word32] = 5<32>
l0000EF60:
	r12_1703 = r7_1059 + 1<32>
	r10_1027 = 0<32>
l0000EF6A:
	r8_823 = r12_1703 - 1<32>
	Mem825[sp_114 + 20<i32>:word32] = r8_823
	r5_1204 = CONVERT(Mem825[r8_823:byte], byte, word32)
	branch SLICE(r5_1204, byte, 0) != 0x68<8> l0000EF88
l0000EF88:
	branch SLICE(r5_1204, byte, 0) != 0x4C<8> l0000EF94
l0000EF94:
	branch SLICE(r5_1204, byte, 0) != 0x6C<8> l0000EFA0
l0000EFA0:
	branch SLICE(r5_1204, byte, 0) != 0x6A<8> l0000EFB4
l0000EFB4:
	branch SLICE(r5_1204, byte, 0) == 0x7A<8> l0000EF68
l0000EFBC:
	branch SLICE(r5_1204, byte, 0) == 0x5A<8> l0000EF68
l0000EFC4:
	branch SLICE(r5_1204, byte, 0) == 0x74<8> l0000EF68
l0000EFCC:
	branch SLICE(r5_1204, byte, 0) == 0x25<8> l0000F1D8
l0000EFD6:
	branch SLICE(r5_1204, byte, 0) == 0x41<8> l0000F0DA
l0000EFDE:
	branch SLICE(r5_1204, byte, 0) == 0x43<8> l0000F0F6
l0000F0F6:
	r5_1204 = 0x63<32>
	r4_1186 = 0xE<32>
l0000EFE8:
	branch SLICE(r5_1204, byte, 0) <u 0x45<8> l0000F22C
l0000EFF2:
	branch SLICE(r5_1204, byte, 0) <=u 0x47<8> l0000F0DA
l0000EFFC:
	branch SLICE(r5_1204, byte, 0) == 0x53<8> l0000F074
l0000F074:
	r5_1204 = 0x73<32>
	r4_1186 = 0x10<32>
l0000F004:
	branch SLICE(r5_1204, byte, 0) == 0x58<8> l0000F0AC
l0000F00C:
	branch SLICE(r5_1204, byte, 0) == 0x61<8> l0000F0DA
l0000F014:
	branch SLICE(r5_1204, byte, 0) == 0x63<8> l0000F0EA
l0000F0EA:
	branch r10_1027 >= 8<32> l0000F0F0
l0000F0EC_1:
	r4_1186 = 0xD<32>
l0000F0F0:
	branch r10_1027 < 8<32> l0000F0F4
l0000F0F0_1:
	r4_1186 = 0xE<32>
l0000F0F4:
l0000F01C:
	branch SLICE(r5_1204, byte, 0) == 0x64<8> l0000F07E
l0000F024:
	branch SLICE(r5_1204, byte, 0) <u 0x65<8> l0000F22C
l0000F02E:
	branch SLICE(r5_1204, byte, 0) <=u 0x67<8> l0000F0DA
l0000F0DA:
	branch r10_1027 > 0xF<32> l0000F13E
l0000F0E0:
	branch Test(EQ,SLICE(r10_1027, bool, 2)) l0000F13E
l0000F13E:
	r4_1186 = 0xC<32>
l0000F0E6:
	r4_1186 = 0xB<32>
l0000F038:
	branch SLICE(r5_1204, byte, 0) == 0x69<8> l0000F07E
l0000F07E:
	branch r10_1027 > 0xF<32> l0000F136
l0000F084:
	branch Test(EQ,SLICE(r10_1027, bool, 2)) l0000F136
l0000F136:
	r4_1186 = 9<32>
l0000F08A:
	branch r10_1027 <= 7<32> l0000F094
l0000F094:
	branch Test(NE,SLICE(r10_1027, bool, 1)) l0000F09E
l0000F09E:
	r8_918 = CONVERT(SLICE(r10_1027, bool, 0), bool, word32)
	branch r8_918 != 0<32> l0000F0A6
l0000F0A2_1:
	r4_1186 = 5<32>
l0000F0A6:
	branch r8_918 == 0<32> l0000F0AA
l0000F0A6_1:
	r4_1186 = 3<32>
l0000F0AA:
l0000F09A:
	r4_1186 = 1<32>
l0000F090:
	r4_1186 = 7<32>
l0000F040:
	branch SLICE(r5_1204, byte, 0) == 0x6E<8> l0000F108
l0000F108:
	branch r10_1027 > 0xF<32> l0000F13A
l0000F10E:
	branch Test(EQ,SLICE(r10_1027, bool, 2)) l0000F13A
l0000F13A:
	r4_1186 = 0x16<32>
l0000F114:
	branch r10_1027 <= 7<32> l0000F11E
l0000F11E:
	branch Test(NE,SLICE(r10_1027, bool, 1)) l0000F128
l0000F128:
	r8_941 = CONVERT(SLICE(r10_1027, bool, 0), bool, word32)
	branch r8_941 != 0<32> l0000F130
l0000F12C_1:
	r4_1186 = 0x14<32>
l0000F130:
	branch r8_941 == 0<32> l0000F134
l0000F130_1:
	r4_1186 = 0x13<32>
l0000F134:
l0000F124:
	r4_1186 = 0x12<32>
l0000F11A:
	r4_1186 = 0x15<32>
l0000F048:
	branch SLICE(r5_1204, byte, 0) == 0x6F<8> l0000F0AC
l0000F050:
	branch SLICE(r5_1204, byte, 0) == 0x70<8> l0000F07A
l0000F07A:
	r4_1186 = 0x11<32>
l0000F058:
	branch SLICE(r5_1204, byte, 0) == 0x73<8> l0000F0FC
l0000F0FC:
	branch r10_1027 >= 8<32> l0000F102
l0000F0FE_1:
	r4_1186 = 0xF<32>
l0000F102:
	branch r10_1027 < 8<32> l0000F106
l0000F102_1:
	r4_1186 = 0x10<32>
l0000F106:
l0000F060:
	branch SLICE(r5_1204, byte, 0) == 0x75<8> l0000F0AC
l0000F068:
	branch SLICE(r5_1204, byte, 0) != 0x78<8> l0000F22C
l0000F072:
l0000F0AC:
	branch r10_1027 > 0xF<32> l0000F142
l0000F0B2:
	branch Test(EQ,SLICE(r10_1027, bool, 2)) l0000F142
l0000F142:
	r4_1186 = 0xA<32>
l0000F0B8:
	branch r10_1027 <= 7<32> l0000F0C2
l0000F0C2:
	branch Test(NE,SLICE(r10_1027, bool, 1)) l0000F0CC
l0000F0CC:
	r8_983 = CONVERT(SLICE(r10_1027, bool, 0), bool, word32)
	branch r8_983 != 0<32> l0000F0D4
l0000F0D0_1:
	r4_1186 = 6<32>
l0000F0D4:
	branch r8_983 == 0<32> l0000F0D8
l0000F0D4_1:
	r4_1186 = 4<32>
l0000F0D8:
l0000F0C8:
	r4_1186 = 2<32>
l0000F0BE:
	r4_1186 = 8<32>
l0000F144:
	r10_1027 = Mem825[sp_114 + 16<i32>:word32]
	Mem1047[r3_1281 + -24<i32>:word32] = r10_1027
	branch r10_1027 != 0xFFFFFFFF<32> l0000F158
l0000F14C:
	r9_1050 = Mem1047[sp_114:word32]
	Mem1051[r3_1281 + -24<i32>:word32] = r9_1050
	branch r9_1050 == 0xFFFFFFFF<32> l0000F22C
l0000F154:
	Mem1056[sp_114:word32] = r9_1050 + 1<32>
l0000F158:
	r7_1059 = Mem1058[r3_1281 + 40<i32>:word32]
	branch r7_1059 <u r2_1085 l0000F1B0
l0000F15E:
	r8_1082 = r2_1085 << 1<32>
	branch r2_1085 < 0<32> l0000F168
l0000F164_1:
	r2_1085 = r8_1082
l0000F168:
	branch r2_1085 >= 0<32> l0000F16C
l0000F168_1:
	r2_1085 = 0xFFFFFFFF<32>
l0000F16C:
	branch r2_1085 >u r7_1059 l0000F17C
l0000F172:
	r2_1085 = r7_1059 + 1<32>
	branch r7_1059 + 1<32> >=u r7_1059 l0000F17C
l0000F178_1:
	r2_1085 = 0xFFFFFFFF<32>
l0000F17C:
	branch r2_1085 >u Mem1058[0x0000F26C<p32>:word32] l0000F24A
l0000F184:
	r9_1128 = Mem1058[r1_1279 + 4<i32>:word32]
	r8_1129 = r2_1085 * 3<32>
	branch r9_1128 == 0<32> l0000F19C
l0000F19C:
	call Mem1058[r6_1284 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_1819,Mem:Mem1058,r0:r0_1811,r1:r1_1803,r10:r10_1027,r11:r11_1823,r12:r8_1129 << 2<32>,r2:r2_1102,r3:r3_1796,r4:r4_1186,r5:r5_1204,r6:r6_1807,r7:r7_1059
		defs: lr:lr_1286,r0:r0_1278,r1:r1_1279,r10:r10_1289,r11:r11_1288,r12:r12_1287,r2:r2_1280,r3:r3_1281,r4:r4_1282,r5:r5_1283,r6:r6_1284,r7:r7_1285,sp:sp_1277
l0000F192:
	call Mem1058[r6_1284 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_1819,Mem:Mem1058,r0:r0_1811,r1:r1_1803,r10:r10_1027,r11:r8_1129 << 2<32>,r12:r9_1128,r2:r2_1102,r3:r3_1796,r4:r4_1186,r5:r5_1204,r6:r6_1807,r7:r7_1059
		defs: lr:lr_1304,r0:r0_1296,r1:r1_1297,r10:r10_1307,r11:r11_1306,r12:r12_1305,r2:r2_1298,r3:r3_1299,r4:r4_1300,r5:r5_1301,r6:r6_1302,r7:r7_1303,sp:sp_1295
l0000F1A0:
	branch r12_1287 == 0<32> l0000F24A
l0000F1A4:
	Mem1315[r1_1279 + 4<i32>:word32] = r12_1287
l0000F1B0:
	r8_1318 = Mem1317[r1_1279:word32]
	r9_1319 = Mem1317[r1_1279 + 4<i32>:word32]
	r10_1027 = r8_1318 * 3<32>
	r11_103 = r8_1318 + 1<32>
	branch r8_1318 <=u r7_1059 l0000F1A8
l0000F1A8:
	Mem1326[r8_1318 * 0xC<32>:word32] = 0<32>
	Mem1327[r1_1279:word32] = r8_1318 + 1<32>
l0000F1C2:
	r9_1329 = r9_1319 + r7_1059 * 0xC<32>
	r8_1330 = Mem1317[r9_1329:word32]
	branch r8_1330 != 0<32> l0000F1D4
l0000F1D4:
	branch r8_1330 != r4_1186 l0000F22C
l0000F22C:
	r12_1344 = Mem1343[r1_1279 + 4<i32>:word32]
	branch r12_1344 == 0<32> l0000F236
l0000F232:
	call Mem1343[r6_1284 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1437,Mem:Mem1343,r0:r0_1357,r1:r1_1337,r10:r10_1443,r11:r11_1442,r12:r12_1344,r2:r2_1366,r3:r3_1376,r4:r4_1385,r5:r5_1393,r6:r6_1347,r7:r7_1417
		defs: lr:lr_1458,r0:r0_1450,r1:r1_1451,r10:r10_1461,r11:r11_1460,r2:r2_1452,r3:r3_1453,r4:r4_1454,r5:r5_1455,r6:r6_1456,r7:r7_1457
l0000F236:
	r12_1467 = Mem1343[r0_1278 + 4<i32>:word32]
	branch r12_1467 == 0<32> l0000F240
l0000F23C:
	call Mem1343[r6_1284 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1477,Mem:Mem1343,r0:r0_1465,r1:r1_1471,r10:r10_1479,r11:r11_1478,r12:r12_1467,r2:r2_1472,r3:r3_1473,r4:r4_1474,r5:r5_1475,r6:r6_1470,r7:r7_1476
		defs: lr:lr_1490,r0:r0_1482,r1:r1_1483,r10:r10_1493,r11:r11_1492,r12:r12_1491,r2:r2_1484,r3:r3_1485,r4:r4_1486,r5:r5_1487,r6:r6_1488,r7:r7_1489
l0000F240:
	call Mem1343[r6_1284 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_1506,Mem:Mem1343,r0:r0_1499,r1:r1_1500,r10:r10_1509,r11:r11_1508,r12:r12_1507,r2:r2_1501,r3:r3_1502,r4:r4_1503,r5:r5_1504,r6:r6_1497,r7:r7_1505
		defs: lr:lr_1520,r12:r12_1521
	r8_1528 = 0x16<32>
l0000F1D0:
	Mem1529[r9_1329:word32] = r4_1186
l0000F1D8:
	r7_1532 = Mem1531[sp_114 + 20<i32>:word32]
	Mem1535[r3_1281 + 36<i32>:byte] = SLICE(r5_1204, byte, 0)
	Mem1537[r3_1281 + 4<i32>:word32] = r7_1532 + 1<32>
	r8_1539 = Mem1537[r0_1278:word32]
	Mem1541[r0_1278:word32] = r8_1539 + 1<32>
	r7_1059 = r7_1532 + 1<32>
	r10_1027 = Mem1541[sp_114 + 4<i32>:word32]
	branch r8_1539 + 1<32> <u r10_1027 l0000F20C
l0000F1EE:
	branch r10_1027 < 0<32> l0000F24A
l0000F1F2:
	r8_1548 = Mem1541[0x0000F270<p32>:word32]
	Mem1549[sp_114 + 4<i32>:word32] = r10_1027 << 1<i32>
	r10_1027 = r10_1027 << 1<i32>
	branch r10_1027 << 1<i32> >u r8_1548 l0000F24A
l0000F1FE:
	call Mem1549[r6_1284 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_1558,Mem:Mem1549,r0:r0_1538,r1:r1_1555,r10:r10_1542 << 1<i32>,r11:(r10_1542 << 1<i32>) * 0x2C<32>,r12:Mem1549[r0_1538 + 4<i32>:word32],r2:r2_1556,r3:r3_1534,r4:r4_1557,r5:r5_1533,r6:r6_1554,r7:r7_1532 + 1<32>
		defs: lr:lr_1568,r0:r0_1560,r1:r1_1561,r10:r10_1571,r11:r11_1570,r12:r12_1569,r2:r2_1562,r3:r3_1563,r4:r4_1564,r5:r5_1565,r6:r6_1566,r7:r7_1567,sp:sp_1559,VNZC:VNZC_1574
	branch SLICE(VNZC_1574, bool, 1) l0000F24A
l0000F24A:
	r12_1581 = Mem1577[r1_1279 + 4<i32>:word32]
	branch r12_1581 == 0<32> l0000F254
l0000F250:
	call Mem1577[r6_1284 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1594,Mem:Mem1577,r0:r0_1585,r1:r1_1576,r10:r10_1600,r11:r11_1595,r12:r12_1581,r2:r2_1586,r3:r3_1587,r4:r4_1588,r5:r5_1589,r6:r6_1584,r7:r7_1592
		defs: lr:lr_1614,r0:r0_1606,r1:r1_1607,r10:r10_1617,r11:r11_1616,r2:r2_1608,r3:r3_1609,r4:r4_1610,r5:r5_1611,r6:r6_1612,r7:r7_1613
l0000F254:
	r12_1623 = Mem1577[r0_1278 + 4<i32>:word32]
	branch r12_1623 == 0<32> l0000F25E
l0000F25A:
	call Mem1577[r6_1284 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1633,Mem:Mem1577,r0:r0_1621,r1:r1_1627,r10:r10_1635,r11:r11_1634,r12:r12_1623,r2:r2_1628,r3:r3_1629,r4:r4_1630,r5:r5_1631,r6:r6_1626,r7:r7_1632
		defs: lr:lr_1646,r0:r0_1638,r1:r1_1639,r10:r10_1649,r11:r11_1648,r12:r12_1647,r2:r2_1640,r3:r3_1641,r4:r4_1642,r5:r5_1643,r6:r6_1644,r7:r7_1645
l0000F25E:
	call Mem1654[r6_1284 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_1662,Mem:Mem1654,r0:r0_1655,r1:r1_1656,r10:r10_1665,r11:r11_1664,r12:r12_1663,r2:r2_1657,r3:r3_1658,r4:r4_1659,r5:r5_1660,r6:r6_1653,r7:r7_1661
		defs: lr:lr_1676,r12:r12_1677
	r8_1528 = 0xC<32>
l0000F266:
	Mem1687[r12_1521:word32] = r8_1528
l0000F20A:
	Mem1688[r0_1278 + 4<i32>:word32] = r12_1569
l0000EFA8:
	r10_1027 = r10_1027 + 0x10<32>
l0000EF9C:
	r10_1027 = r10_1027 + 8<32>
l0000EF90:
	r10_1027 = r10_1027 | 4<u32>
l0000EF7A:
	r10_1027 = r10_1027 | 1<32> << CONVERT(SLICE(r10_1027, bool, 0), bool, word32)
l0000EF68:
	r12_1703 = r12_1703 + 1<32>
l0000EC86:
	r8_1706 = Mem163[r3_1281 + 8<i32>:word32] | 0x20<u32>
l0000EC78:
	r8_1706 = Mem163[r3_1281 + 8<i32>:word32] | 0x10<u32>
l0000EC6A:
	r8_1706 = Mem163[r3_1281 + 8<i32>:word32] | 8<u32>
l0000EC5C:
	r8_1706 = Mem163[r3_1281 + 8<i32>:word32] | 4<u32>
l0000EC4E:
	r8_1706 = Mem163[r3_1281 + 8<i32>:word32] | 2<u32>
l0000EC40:
	r8_1706 = Mem163[r3_1281 + 8<i32>:word32] | 1<u32>
l0000EC2E:
	Mem1728[r3_1281 + 8<i32>:word32] = r8_1706
	r12_159 = r12_159 + 1<32>
l0000F214:
	Mem1732[Mem70[r0_1278 + 4<i32>:word32]:word32] = r7_1059
	Mem1734[r0_1278 + 12<i32>:word32] = Mem1732[sp_114 + 12<i32>:word32]
	Mem1736[r0_1278 + 8<i32>:word32] = Mem1734[sp_114 + 8<i32>:word32]
l0000F268:
	lrOut = lr_122
	return <invalid>
fn0000EB48_exit:


bool fn0000F278(word64 r11_r10, word32 r7, word32 pc, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  pc:[0..31] r7:[0..31] Sequence r11:r10:[0..63]
// LiveOut: Z pc
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000F278_entry:
	r10 = SLICE(r11_r10, word32, 0)
	r11 = SLICE(r11_r10, word32, 32)
l0000F278:
	r6_20 = 0x0000F27E<p32> - Mem17[0x0000F2C8<p32>:word32]
	branch fn00010CFC(r11_r10, r11_r10, pc, out r12_133, out lr_134) l0000F2C4
l0000F28E:
	branch __avr32_f64_cmp_lt(0<32>, 0<32>, r10, r11, out r9_135, out r12_136, out lr_48) l0000F2A0
l0000F2A0:
	branch __avr32_f64_cmp_eq(0<32>, 0<32>, r10, r11, out r12_137) l0000F2C4
l0000F2C4:
l0000F2AE:
	call Mem69[r6_20 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_48,Mem:Mem69,pc:pc,r10:8<32>,r11:fp - 0x1C<32>,r12:Mem69[r6_20 + 604<i32>:word32],r4:r10,r5:r11,r6:r6_20,r7:r7,Stack +0000:r11_r10
		defs: pc:pc_84
l0000F29C:
l0000F2C6:
	pcOut = pc
	return SLICE(cond(fp - 20<i32>), bool, 1)
fn0000F278_exit:


word64 __avr32_f64_mul(word32 r8, word32 r9, word32 r10, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
//      fn0000D220
//      fn0000E684
//      fn0000E868
//      fn000101CC
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11:r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
__avr32_f64_mul_entry:
l0000F2D0:
	branch (r10 | r11 << 1<8>) == 0<32> l0000F48E
l0000F48E:
	r11_10 = (r11 ^ r9) & 0x80000000<32>
	branch CONVERT(SLICE(r9, word11, 20), word11, word32) == 0x7FF<32> l0000F4A0
l0000F4A0:
	return 0xFFFFFFFFFFFFFFFF<64>
l0000F49E_1:
	return SEQ(r11_10, r10)
l0000F2D8:
	lr_40 = r11 ^ r9
	r7_171 = CONVERT(SLICE(r11, word11, 20), word11, word32)
	branch r7_171 == 0<32> l0000F36A
l0000F36A:
	r12_48 = __clz(r10)
	r6_49 = __clz(r11 & 0xFFFFF<32>)
	r6_53 = r6_49
	branch Test(UGE,r6_49 == 0x20<32>) l0000F37E
l0000F376_1:
l0000F37A_1:
	r6_53 = r12_48 + 0x1F<32>
l0000F37E:
	branch Test(ULT,r6_49 == 0x20<32>) l0000F382
l0000F37E_1:
	r6_53 = r6_53 - 1<32>
l0000F382:
	branch r6_53 >= 0x20<32> l0000F3A0
l0000F3A0:
	r11_184 = r10 << r6_53
	branch r11_184 == 0<32> l0000F46C
l0000F3A6:
	r10_190 = 0<32>
	r7_171 = r7_171 + (r6_53 - 0xB<32>)
l0000F388:
	r11_184 = (r11 & 0xFFFFF<32>) << r6_53 | r10 >>u 0x20<32> - r6_53
	r10_190 = r10 << r6_53
	r7_171 = r7_171 + (r6_53 - 0xB<32>)
l0000F2E6:
	r11_184 = r11 << 10<i32> | r10 << 0x16<8>
	r10_190 = r10 << 10<i32>
l0000F2F2:
	r6_148 = CONVERT(SLICE(r9, word11, 20), word11, word32)
	branch r6_148 == 0<32> l0000F3AE
l0000F3AE:
	r12_100 = __clz(r8)
	r5_101 = __clz(r9 & 0xFFFFF<32>)
	r5_105 = r5_101
	branch Test(UGE,r5_101 == 0x20<32>) l0000F3C2
l0000F3BA_1:
l0000F3BE_1:
	r5_105 = r12_100 + 0x16<32>
l0000F3C2:
	branch Test(ULT,r5_101 == 0x20<32>) l0000F3C6
l0000F3C2_1:
	r5_105 = r5_105 - 0xA<32>
l0000F3C6:
	branch r5_105 >= 0x20<32> l0000F3E4
l0000F3E4:
	r9_114 = r8 << r5_105
	branch r9_114 == 0<32> l0000F46C
l0000F46C:
	return SEQ(lr_40 & 0x80000000<32>, 0<32>)
l0000F3EA:
	r8_144 = 0<32>
	r6_148 = r6_148 + (r5_105 - 2<32>)
l0000F3CC:
	r9_114 = (r9 & 0xFFFFF<32>) << r5_105 | r8 >>u 0x20<32> - r5_105
	r8_144 = r8 << r5_105
	r6_148 = r6_148 + (r5_105 - 2<32>)
l0000F2F8:
	r8_144 = r8 << 1<i32>
	r9_114 = __rcl<word32,byte>(r9, 1<8>, SLICE(cond(r8 << 1<i32>), bool, 0))
l0000F300:
	branch r7_171 == 0x7FF<32> l0000F3F2
l0000F306:
	branch r6_148 == 0x7FF<32> l0000F3F2
l0000F3F2:
	r11_193 = r11_184 & 0xFFFFF<32> | r10_190
	r9_196 = r9_114 & 0xFFFFF<32> | r8_144
	branch r7_171 != 0x7FF<32> l0000F414
l0000F414:
	branch r9_196 == 0<32> l0000F47C
l0000F418:
l0000F404:
	branch r11_193 != 0<32> l0000F476
l0000F408:
	branch r6_148 != 0x7FF<32> l0000F47C
l0000F40E:
	branch r9_196 == 0<32> l0000F47C
l0000F412:
l0000F476:
	return 0xFFFFFFFFFFFFFFFF<64>
l0000F30C:
	r7_r6_228 = r10_190 *u r8_144
	r11_r10_229 = r11_184 *u r9_114
	r10_r7_368 = SEQ(SLICE(r11_r10_229, word32, 0), SLICE(r7_r6_228, word32, 32)) + (r11_184 *u r8_144 + r10_190 *u r9_114)
	r10_237 = SLICE(r10_r7_368, word32, 32) (alias)
	r12_222 = r7_171 + r6_148
	r11_241 = SLICE(r11_r10_229, word32, 32) + CONVERT(r10_237 <u 0<32>, bool, word32)
	r12_223 = r12_222 - 0x3FE<32>
	r6_277 = SLICE(r7_r6_228, word32, 0) (alias)
	r7_232 = SLICE(r10_r7_368, word32, 0) (alias)
	r11_r10_504 = SEQ(r11_241, r10_237) (alias)
	branch Test(EQ,SLICE(r11_241, bool, 20)) l0000F33A
l0000F332:
	r10_249 = __rcl<word32,byte>(r10_237, 1<8>, SLICE(cond(r7_232 << 1<i32>), bool, 0))
	r7_232 = r7_232 << 1<i32>
	r12_223 = r12_222 - 0x3FF<32>
	r11_r10_504 = SEQ(__rcl<word32,byte>(r11_241, 1<8>, SLICE(cond(r10_249), bool, 0)), r10_249) (alias)
l0000F33A:
	r10_284 = SLICE(r11_r10_504, word32, 0) (alias)
	r11_270 = SLICE(r11_r10_504, word32, 32) (alias)
	branch r12_223 <= 0<32> l0000F41A
l0000F41A:
	r12_260 = __sat<uint32>(-r12_223 + 1<32>, 6<i32>)
	branch r12_260 >= 0x20<32> l0000F448
l0000F448:
	r8_264 = 0x20<32> - r12_260
	branch r8_264 != 0<32> l0000F450
l0000F44C_1:
	r9_114 = 0<32>
l0000F450:
	branch r8_264 == 0<32> l0000F456
l0000F452:
	r9_114 = r11_270 << r8_264
l0000F456:
	r6_277 = r6_277 | r7_232 | r10_284 << 1<8>
	r7_232 = r9_114 | r10_284 >>u r12_260
	r11_r10_500 = CONVERT(r11_270 >>u r12_260, word32, uint64) (alias)
l0000F428:
	r8_297 = 0x20<32> - r12_260
	r6_277 = r6_277 | r7_232
	r7_232 = r7_232 >>u r12_260 | r10_284 << r8_297
	r11_r10_500 = SEQ(r11_270 >>u r12_260, r10_284 >>u r12_260 | r11_270 << r8_297) (alias)
l0000F340:
	branch r12_223 >= 0x7FF<32> l0000F47C
l0000F47C:
	return SEQ(__setbit(0xFFF00000<32>, 31<i32>, SLICE(lr_40, bool, 31)), 0<32>)
l0000F348:
	r11_r10_500 = r11_r10_504 (alias)
l0000F34C:
	r11_r10_370 = r11_r10_500 + CONVERT(__sat<uint32>((r7_232 | (r6_277 | SLICE(r11_r10_500, word32, 0) << 0x1F<8>) << 1<8>) ^ 0x80000000<32>, 1<i32>), uint32, uint64)
	return SEQ(__setbit(SLICE(r11_r10_370, word32, 32), 31<i32>, SLICE(lr_40, bool, 31)), SLICE(r11_r10_370, word32, 0))
__avr32_f64_mul_exit:


word32 __avr32_f64_sub(word32 r8, word32 r9, word32 r10, word32 r11, word32 lr, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      __avr32_f64_add
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r5 r6 r7 r8 r9
// Trashed: VNZC lr r10 r11 r12 r5 r6 r7 r8 r9
// Preserved: sp
__avr32_f64_sub_entry:
l0000F4B4:
	branch (r11 ^ r9) < 0<32> l0000F64C
l0000F64C:
l0000F64C_thunk___avr32_f64_add:
	r11_r10_433 = __avr32_f64_add(r8_20, r9 ^ 0x80000000<32>, r10_19, r11, out r5_15, out r6_16, out r7_17, out r8_20, out r9_13, out lr_18)
	r6Out = r6_16
	r7Out = r7_17
	r8Out = r8_20
	r9Out = r9_13
	r10_19 = SLICE(r11_r10_433, word32, 0) (alias)
	r10Out = r10_19
	r11Out = SLICE(r11_r10_433, word32, 32)
	lrOut = lr_18
	return r5_15
l0000F4BC:
	r12_129 = r11 & 0x80000000<32>
	r11_33 = r11 & 0x7FFFFFFF<u32>
	r9_34 = r9 & 0x7FFFFFFF<u32>
	branch (r11 & 0x7FFFFFFF<u32>) - (r9 & 0x7FFFFFFF<u32>) >=u SLICE(cond(r10 - r8), bool, 0) l0000F4E2
l0000F4D2:
	r11_33 = r9 & 0x7FFFFFFF<u32>
	r9_34 = r11 & 0x7FFFFFFF<u32>
	r10 = r8
	r8 = r10
	r12_129 = r11 & 0x80000000<32> ^ 0x80000000<32>
l0000F4E2:
	r11_53 = r11_33 << 11<i32> | r10 << 0x15<8>
	r7_209 = r11_33 >>u 0x14<32>
	r10_54 = r10 << 11<i32>
	r11_55 = r11_53 | 0x80000000<u32>
	r6_104 = r9_34 >>u 0x14<32>
	branch r6_104 == 0<32> l0000F57E
l0000F57E:
	r9_155 = r9_34 << 11<i32> | r8 << 0x15<8>
	r8_148 = r8 << 11<i32>
	branch (r9_155 | r8_148) == 0<32> l0000F58E
l0000F58A_1:
	r6_104 = 1<32>
l0000F58E:
	lr_70 = 0<32> - r7_209
	C_77 = SLICE(cond(lr_70), bool, 0) (alias)
	branch lr_70 != 0<32> l0000F596
l0000F592_1:
	r7_209 = 1<32>
l0000F596:
	r11_55 = __setbit(r11_53 | 0x80000000<u32>, 31<i32>, C_77)
	lr = r11_55 | r10_54
	branch lr != 0<32> l0000F5A2
l0000F59E_1:
	r7_209 = 0<32>
l0000F5A2:
l0000F4F6:
	r8_148 = r8 << 11<i32>
	r9_155 = r9_34 << 11<i32> | r8 << 0x15<8> | 0x80000000<u32>
l0000F500:
	branch r7_209 == 0x7FF<32> l0000F5A4
l0000F5A4:
	lr_101 = r11_55 & 0x7FFFFFFF<u32> | r10_54
	branch lr_101 != 0<32> l0000F5BA
l0000F5AC:
	branch r6_104 == 0x7FF<32> l0000F5BA
l0000F5BA:
	r6Out = r6
	r7Out = r7
	r8Out = r8_148
	r9Out = r9_155
	r10Out = 0xFFFFFFFF<32>
	r11Out = 0xFFFFFFFF<32>
	lrOut = lr_101
	return r5
l0000F5B2:
	r6Out = r6
	r7Out = r7
	r8Out = r8_148
	r9Out = r9_155
	r10Out = r10_54
	r11Out = r12_129 | r7_209 << 0x14<8>
	lrOut = lr_101
	return r5
l0000F506:
	r6_139 = r7_209 - r6_104
	branch r6_139 == 0<32> l0000F52C
l0000F50A:
	r5_142 = 0x20<32> - r6_139
	branch r6_139 >=u 0x20<32> l0000F60C
l0000F60C:
	r6_145 = __sat<uint32>(r6_139, 6<i32>)
	branch r6_139 != 0x20<32> l0000F614
l0000F610_1:
	lr = r8_148
l0000F614:
	branch r6_139 == 0x20<32> l0000F61C
l0000F616:
	lr = r9_155 << r5_142 | r8_148
l0000F61C:
	lr = CONVERT(lr != 0<32>, bool, word32)
	r9_155 = 0<32>
	r8_148 = r9_155 >>u r6_145 | lr
l0000F514:
	lr = CONVERT(r8_148 << r5_142 != 0<32>, bool, word32)
	r9_155 = r9_155 >>u r6_139
	r8_148 = r8_148 >>u r6_139 | r9_155 << r5_142 | lr
l0000F52C:
	r10_194 = r10_54 + r8_148
	r11_201 = r11_55 - r9_155 - CONVERT(r10_194 <u 0<32>, bool, word32)
	r6_203 = __clz(r11_201)
	branch Test(EQ,r6_203 == 0<32>) l0000F552
l0000F538:
	branch Test(ULT,r6_203 == 0x20<32>) l0000F62A
l0000F62A:
	r6_206 = __clz(r10_194)
	r6_210 = r6_206
	branch Test(UGE,r6_206 == 0x20<32>) l0000F63A
l0000F62E_1:
	r7_209 = 0<32>
l0000F632_1:
	r6_210 = 0<32>
l0000F636_1:
	r12_129 = 0<32>
l0000F63A:
	branch Test(ULT,r6_206 == 0x20<32>) l0000F63E
l0000F63A_1:
	r6_210 = r6_210 + 0x20<32>
l0000F63E:
	r11_201 = r10_194 << r6_210
	r10_194 = 0<32>
	r7_225 = r7_209 + r6_210
	branch r7_225 <= 0<32> l0000F5C2
l0000F64A:
l0000F53A:
	lr = r10_194 >>u 0x20<32> - r6_203
	r11_201 = r11_201 << r6_203 | lr
	r10_194 = r10_194 << r6_203
	r7_225 = r7_209 + r6_203
	branch r7_225 <= 0<32> l0000F5C2
l0000F5C2:
	r7_239 = __sat<uint32>(-r7_225 + 1<32>, 6<i32>)
	branch r7_239 >= 0x20<32> l0000F5F0
l0000F5F0:
	r8_148 = 0x40<32> - r7_239
	r10_194 = r11_201 >>u r7_239 | CONVERT((r11_201 << r8_148 | r10_194) != 0<32>, bool, word32)
	r11_201 = 0<32>
l0000F5D0:
	r8_148 = 0x20<32> - r7_239
	r10_194 = r10_194 >>u r7_239 | CONVERT(r10_194 << r8_148 != 0<32>, bool, word32) | r11_201 << r8_148
	r11_201 = r10_194 >>u r7_239
l0000F552:
	r10_275 = r10_194 >>u 11<i32> | r11_201 << 0x15<8>
	r9_272 = r10_194 << 0x15<32>
	r11_287 = r11_201 >>u 11<i32> | r12_129
	r7_289 = 0x80000000<32>
	branch Test(EQ,SLICE(r10_275, bool, 0)) l0000F572
l0000F56E_1:
	r7_289 = 0x80000001<32>
l0000F572:
	r9_299 = CONVERT(r9_272 >=u r7_289, bool, word32)
	r6Out = r6
	r7Out = r7
	r8Out = r8_148
	r9Out = r9_299
	r11_r10_328 = SEQ(r11_287, r10_275) + CONVERT(r9_299, word32, uint64)
	r10Out = SLICE(r11_r10_328, word32, 0)
	r11Out = SLICE(r11_r10_328, word32, 32)
	lrOut = lr
	return r5
__avr32_f64_sub_exit:


ui64 __avr32_f64_add(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      __avr32_f64_sub
//      fn000101CC
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r11:r10 r5 r6 r7 r8 r9
// Trashed: VNZC lr r10 r11 r12 r5 r6 r7 r8 r9
// Preserved: sp
__avr32_f64_add_entry:
l0000F650:
	branch (r11 ^ r9) < 0<32> l0000F4B0
l0000F4B0:
l0000F4B0_thunk___avr32_f64_sub:
	r5Out = __avr32_f64_sub(r8_20, r9 ^ 0x80000000<32>, r10_19, r11, lr_18, out r6_16, out r7_17, out r8_20, out r9_13, out r10_19, out r11_12, out lr_18)
	r6Out = r6_16
	r7Out = r7_17
	r8Out = r8_20
	r9Out = r9_13
	lrOut = lr_18
	return SEQ(r11_12, r10_19)
l0000F658:
	r11_33 = r11 & 0x7FFFFFFF<u32>
	r9_r8_323 = SEQ(r9 & 0x7FFFFFFF<u32>, r8) (alias)
	branch (r11 & 0x7FFFFFFF<u32>) >=u (r9 & 0x7FFFFFFF<u32>) l0000F676
l0000F66A:
	r11_33 = r9 & 0x7FFFFFFF<u32>
	r10 = r8
	r9_r8_323 = SEQ(r11 & 0x7FFFFFFF<u32>, r10) (alias)
l0000F676:
	r9_302 = SLICE(r9_r8_323, word32, 32) (alias)
	r8_62 = SLICE(r9_r8_323, word32, 0) (alias)
	lr_131 = 0<32>
	r7_48 = CONVERT(SLICE(r11_33, word11, 20), word11, word32)
	r11_50 = CONVERT(SLICE(r11_33, word20, 0), word20, word32)
	r6_54 = CONVERT(SLICE(r9_302, word11, 20), word11, word32)
	branch r6_54 == 0<32> l0000F744
l0000F744:
	r6_54 = 1<32>
	branch r7_48 != 0<32> l0000F68E
l0000F74A:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_62
	r9Out = r9_302
	lrOut = 0<32>
	r11_r10_239 = SEQ((r11_50 | 0x100000<u32>) & 0xFFEFFFFF<u32>, r10) + r9_r8_323
	return SEQ(SLICE(r11_r10_239, word32, 32) | r11 & 0x80000000<32>, SLICE(r11_r10_239, word32, 0))
l0000F688:
	r9_302 = CONVERT(SLICE(r9_302, word20, 0), word20, word32) | 0x100000<u32>
l0000F68E:
	branch r7_48 == 0x7FF<32> l0000F6DC
l0000F6DC:
	r11_86 = (r11_50 | 0x100000<u32>) & 0xFFEFFFFF<u32>
	lr_278 = r11_86 | r10
	branch lr_278 != 0<32> l0000F702
l0000F6E4:
	branch r6_54 == 0x7FF<32> l0000F6EE
l0000F6EE:
	r9_302 = r9_302 & 0xFFEFFFFF<u32>
	lr_278 = r9_302 | r8_62
	branch lr_278 != 0<32> l0000F702
l0000F702:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_62
	r9Out = r9_302
	lrOut = lr_278
	return 0xFFFFFFFFFFFFFFFF<64>
l0000F6F6:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_62
	r9Out = r9_302
	lrOut = lr_278
	return 0x7FF0000000000000<64>
l0000F6EA:
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_62
	r9Out = r9_302
	lrOut = lr_278
	return SEQ(r11_86, r10)
l0000F694:
	r6_122 = r7_48 - r6_54
	r9_r8_319 = SEQ(r9_302, r8_62) (alias)
	branch r6_122 == 0<32> l0000F6B4
l0000F698:
	r5_125 = 0x20<32> - r6_122
	branch r6_122 >=u 0x20<32> l0000F70A
l0000F70A:
	r6_128 = __sat<uint32>(r6_122, 6<i32>)
	branch r6_122 != 0x20<32> l0000F712
l0000F70E_1:
	lr_131 = r8_62
l0000F712:
	branch r6_122 == 0x20<32> l0000F71E
l0000F714:
	lr_131 = r9_302 << r5_125 | CONVERT(r8_62 != 0<32>, bool, word32)
l0000F71E:
	r9_r8_319 = CONVERT(r9_302 >>u r6_128, word32, uint64) (alias)
l0000F6A2:
	lr_131 = r8_62 << r5_125
	r9_r8_319 = SEQ(r9_302 >>u r6_122, r8_62 >>u r6_122 | r9_302 << r5_125) (alias)
l0000F6B4:
	r11_r10_236 = SEQ(r11_50 | 0x100000<u32>, r10) + r9_r8_319
	r11_166 = SLICE(r11_r10_236, word32, 32) (alias)
	r9_164 = SLICE(r9_r8_319, word32, 32) (alias)
	r8_158 = SLICE(r9_r8_319, word32, 0) (alias)
	r10_159 = SLICE(r11_r10_236, word32, 0) (alias)
	branch Test(EQ,SLICE(r11_166, bool, 21)) l0000F726
l0000F726:
	r10_159 = __rcr<word32,byte>(r10_159, 1<8>, SLICE(cond(r11_166 >>u 1<i32>), bool, 0))
	r11_166 = r11_166 >>u 1<i32>
	lr_131 = __rcr<word32,byte>(lr_131 | lr_131 << 1<8>, 1<8>, SLICE(cond(r10_159), bool, 0))
	branch r7_48 != 0x7FE<32> l0000F742
l0000F736_1:
	r10_159 = 0<32>
l0000F73A_1:
	r11_166 = 0<32>
l0000F73E_1:
	lr_131 = 0<32>
l0000F742:
l0000F6C0:
	lr_213 = __sat<uint32>((lr_131 | CONVERT(SLICE(r10_159, bool, 0), bool, word32)) ^ 0x80000000<32>, 1<i32>)
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = r8_158
	r9Out = r9_164
	lrOut = lr_213
	r11_r10_241 = SEQ(r11_166 | r11 & 0x80000000<32>, r10_159) + CONVERT(lr_213, word32, uint64)
	return r11_r10_241
__avr32_f64_add_exit:


void __avr32_f64_to_u32(word32 r10, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..31] r11:[0..31]
// LiveOut:
// Trashed: VNZC r11 r12 r9
// Preserved: sp
__avr32_f64_to_u32_entry:
l0000F760:
	branch r11 >= 0<32> l0000F762_thunk___avr32_f64_to_s32
l0000F762_thunk___avr32_f64_to_s32:
	__avr32_f64_to_s32(r10, r11)
	return
l0000F762_1:
	return
__avr32_f64_to_u32_exit:


word32 __avr32_f64_to_s32(word32 r10, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      __avr32_f64_to_u32
// MayUse:  r10:[0..31] r11:[0..31]
// LiveOut: r12
// Trashed: VNZC r11 r12 r9
// Preserved: sp
__avr32_f64_to_s32_entry:
l0000F764:
	r12_5 = r11 << 1<32> >>u 21<i32>
	branch r12_5 >=u 0x3FF<32> l0000F770
l0000F770:
	r11_16 = (r11 << 11<i32> | 0x80000000<u32> | r10 << 0x15<8>) >>u 0x1F<32> - (r12_5 - 0x3FF<32>)
	branch r11 << 1<i32> <u 0<32> l0000F786
l0000F786:
	return -r11_16
l0000F784_1:
	return r11_16
l0000F76E_1:
	return 0<32>
__avr32_f64_to_s32_exit:


ui64 fn0000F792(word32 r10, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
// MayUse:  r10:[0..31] r11:[0..31]
// LiveOut: r11:r10
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: sp
fn0000F792_entry:
l0000F792:
	branch r11 >= 0<32> l0000F79E
l0000F79E:
	r9_7 = r11 << 1<32> >>u 21<i32>
	branch r9_7 >=u 0x3FF<32> l0000F7B2
l0000F7B2:
	r11_15 = r11 << 11<i32> | 0x80000000<u32> | r10 << 0x15<8>
	r10_16 = r10 << 11<i32>
	r9_17 = 0x3F<32> - (r9_7 - 0x3FF<32>)
	branch r9_17 == 0<32> l0000F7E6
l0000F7C4:
	branch r9_17 >=u 0x20<32> l0000F7E0
l0000F7E0:
	r10_16 = r11_15 >>u r9_17
	r11_15 = 0<32>
l0000F7CA:
	r11_15 = r11_15 >>u r9_17
	r10_16 = r10 << 11<i32> >>u r9_17 | r11_15 << 0x20<32> - r9_17
l0000F7E6:
	branch r11 << 1<i32> <u 0<32> l0000F7EA
l0000F7EA:
	r10_41 = -r10_16
	return SEQ(-r11_15 - CONVERT(r10_41 <u 0<32>, bool, word32), r10_41)
l0000F7E8_1:
	return SEQ(r11_15, r10_16)
l0000F7A8_1:
l0000F7AC_1:
l0000F7B0_1:
	return 0<64>
l0000F794_1:
l0000F798_1:
l0000F79C_1:
	return 0<64>
fn0000F792_exit:


word32 __avr32_u32_to_f64(word32 r12, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095D6
//      fn000101CC
// MayUse:  r12:[0..31]
// LiveOut: r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
__avr32_u32_to_f64_entry:
l0000F7FA:
l0000F800_thunk_fn0000F806:
	r10_8 = fn0000F806(r12, 0<32>, out r11_9, out lr_18)
	r11Out = r11_9
	return r10_8
__avr32_u32_to_f64_exit:


word32 __avr32_s32_to_f64(word32 r12, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  r12:[0..31]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
__avr32_s32_to_f64_entry:
l0000F802:
	r11_6 = abs<int32>(r12)
l0000F804_thunk_fn0000F806:
	r10_9 = fn0000F806(r11_6, r12, out r11_10, out lr_8)
	r11Out = r11_10
	lrOut = lr_8
	return r10_9
__avr32_s32_to_f64_exit:


word32 fn0000F806(word32 r11, word32 r12, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __avr32_u32_to_f64
//      __avr32_s32_to_f64
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
fn0000F806_entry:
l0000F806:
	branch Z l0000F808_thunk_fn0000F80A
l0000F808_thunk_fn0000F80A:
	r10_27 = fn0000F80A(SEQ(r11, 0<32>), r12, out r11_28, out lr_32)
	r11Out = r11_28
	lrOut = lr_32
	return r10_27
l0000F808_1:
	r11Out = r11
	lrOut = lr
	return 0<32>
fn0000F806_exit:


word32 fn0000F80A(ui64 r11_r10, word32 r12, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __avr32_s32_to_f64
//      fn0000F806
// MayUse:  r12:[0..31] Sequence r11:r10:[0..63]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
fn0000F80A_entry:
	r11 = SLICE(r11_r10, word32, 32)
	r10 = SLICE(r11_r10, word32, 0)
l0000F80A:
	r9_26 = 0x41E<32>
	r8_8 = __clz(r11)
	r11_r10_221 = r11_r10 (alias)
	branch Test(EQ,r8_8 == 0<32>) l0000F842
l0000F816:
	branch Test(ULT,r8_8 == 0x20<32>) l0000F82E
l0000F82E:
	r8_12 = __clz(r10)
	r8_15 = r8_12
	branch Test(UGE,r8_12 == 0x20<32>) l0000F836
l0000F832_1:
	r8_15 = 0<32>
l0000F836:
	branch Test(ULT,r8_12 == 0x20<32>) l0000F83A
l0000F836_1:
	r8_15 = r8_15 + 0x20<32>
l0000F83A:
	r9_26 = r8_15 + 0x41E<32>
	r11_r10_221 = SEQ(r10 << r8_15, 0<32>) (alias)
l0000F818:
	lr = r10 >>u 0x20<32> - r8_8
	r9_26 = r8_8 + 0x41E<32>
	r11_r10_221 = SEQ(r11 << r8_8 | lr, r10 << r8_8) (alias)
l0000F842:
	r11_49 = SLICE(r11_r10_221, word32, 32) (alias)
	r10_39 = SLICE(r11_r10_221, word32, 0) (alias)
	branch r9_26 > 0<32> l0000F8A4
l0000F8A4:
	r8_38 = 0x3FF<32>
	branch Test(NE,SLICE(r10_39, bool, 11)) l0000F8B0
l0000F8AC_1:
	r8_38 = 0x400<32>
l0000F8B0:
	r11_r10_161 = r11_r10_221 + CONVERT(r8_38, word32, uint64)
	r10_46 = SLICE(r11_r10_161, word32, 0) (alias)
	r11_51 = SLICE(r11_r10_161, word32, 32) (alias)
	branch r11_51 >=u 0<32> l0000F8B8
l0000F8B4_1:
	r9_26 = r9_26 + 2<32>
l0000F8B8:
	branch r9_26 < 0x7FF<32> l0000F8C8
l0000F8C8:
	branch Test(EQ,SLICE(r11_51, bool, 31)) l0000F8D0
l0000F8CC_1:
	r9_26 = r9_26 - 1<32>
l0000F8D0:
	r10_185 = r10_46 >>u 11<i32> | r11_51 << 0x15<8>
	r11_73 = r11_51 << 1<i32> >>u 11<i32> | r9_26 << 0x15<8>
l0000F8BE:
	r10_185 = 0<32>
	r11_73 = 0xFFE00000<32>
l0000F8DE:
	r11Out = __rcr<word32,byte>(r11_73, 1<8>, SLICE(cond(r12 << 1<i32>), bool, 0))
	lrOut = lr
	return r10_185
l0000F848:
	r9_101 = -r9_26
	branch r9_101 <u 0x35<32> l0000F858
l0000F858:
	r8_106 = 0x20<32> - (r9_101 + 0xB<32>)
	branch r9_101 >=u 0x15<32> l0000F878
l0000F878:
	lr = r11_49 << r8_106 | r10_39
	r11_112 = 0<32>
	r10_113 = r11_49 >>u r9_101 + 0xB<32>
l0000F864:
	lr = r10_39 << r8_106
	r10_113 = r10_39 >>u r9_101 + 0xB<32>
	r11_112 = r11_49 >>u r9_101 + 0xB<32> | r11_49 << r8_106
l0000F886:
	v15_123 = SLICE(r10_113, bool, 0)
	C_125 = v15_123
	branch Test(UGE,v15_123) l0000F89C
l0000F88C:
	branch lr != 0<32> l0000F896
l0000F890:
	v16_129 = SLICE(r10_113, bool, 1)
	C_125 = v16_129
	branch Test(UGE,v16_129) l0000F89C
l0000F896:
	r10_113 = r10_113 + 1<32>
	C_125 = SLICE(cond(r10_113), bool, 0) (alias)
	branch r10_113 <u 0<32> l0000F89C
l0000F898_1:
	r11_112 = r11_112 + 1<32>
l0000F89C:
	r11_147 = __rcr<word32,byte>(r11_112, 1<8>, SLICE(cond(__rcl<word32,byte>(r12, 1<8>, C_125)), bool, 0))
	r10_151 = __rcr<word32,byte>(r10_113, 1<8>, SLICE(cond(r11_147), bool, 0))
l0000F852:
	r11_147 = 0<32>
	r10_151 = 0<32>
l0000F8A2:
	r11Out = r11_147
	lrOut = lr
	return r10_151
fn0000F80A_exit:


bool __avr32_f64_cmp_eq(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
//      fn0000D220
//      fn0000F278
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z r12
// Trashed: VNZC r11 r12 r9
// Preserved: sp
__avr32_f64_cmp_eq_entry:
l0000F8EC:
	branch r11 - r9 == SLICE(cond(r10 - r8), bool, 0) l0000F902
l0000F902:
	branch (r11 << 1<i32>) - 0xFFE00000<32> >u SLICE(cond(r10 - 0<32>), bool, 0) l0000F912
l0000F912:
	r12Out = 0<32>
	return true
l0000F910_1:
	r12Out = 1<32>
	return false
l0000F8F4:
	branch (r11 << 1<i32> | r10 | r9 << 1<i32> | r8) != 0<32> l0000F900
l0000F900:
	r12Out = 0<32>
	return true
l0000F8FE_1:
	r12Out = 1<32>
	return false
__avr32_f64_cmp_eq_exit:


bool __avr32_f64_cmp_ge(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095D6
//      fn0000D220
//      fn0000E684
//      fn0000E868
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r11 r12 r9
// Preserved: r10 r8 sp
__avr32_f64_cmp_ge_entry:
l0000F91C:
	v18_116 = r11 << 1<i32> == 0<32>
	r12_7 = CONVERT(r11 << 1<i32> <u 0<32>, bool, word32)
	branch r11 << 1<i32> != 0<32> l0000F924
l0000F920_1:
	v18_116 = r10 == 0<32>
l0000F924:
	branch v18_116 l0000F96A
l0000F96A:
	v21_119 = r9 << 1<i32> != 0<32>
	r12_19 = CONVERT(r9 << 1<i32> <u 0<32>, bool, word32)
	branch r9 << 1<i32> != 0<32> l0000F972
l0000F96E_1:
	v21_119 = r8 != 0<32>
l0000F972:
	branch v21_119 l0000F974
l0000F974:
	r12Out = r12_19
	lrOut = lr
	return SLICE(cond(r12_19), bool, 1)
l0000F972_1:
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F926:
	C_52 = SLICE(cond(r10 - 0<32>), bool, 0) (alias)
	r12_41 = __rcl<word32,byte>(r12_7, 1<8>, SLICE(cond(r9 << 1<i32>), bool, 0))
	lr_131 = 0xFFE00000<32>
	Z_163 = SLICE(cond((r11 << 1<i32>) - 0xFFE00000<32> - C_52), bool, 1) (alias)
	branch (r11 << 1<i32>) - 0xFFE00000<32> >u C_52 l0000F968
l0000F93C:
	C_56 = SLICE(cond(r8 - 0<32>), bool, 0) (alias)
	Z_163 = SLICE(cond((r9 << 1<i32>) - 0xFFE00000<32> - C_56), bool, 1) (alias)
	branch (r9 << 1<i32>) - 0xFFE00000<32> >u C_56 l0000F968
l0000F946:
	lr_131 = lr
	branch r12_41 == 3<32> l0000F95E
l0000F94C:
	branch r12_41 <u 1<32> l0000F954
l0000F950:
	branch r12_41 != 1<32> l0000F952
l0000F952:
	branch r12_41 == 1<32> l0000F954
l0000F954:
	C_71 = SLICE(cond(r10 - r8), bool, 0) (alias)
	branch (r11 << 1<i32>) - (r9 << 1<i32>) <u C_71 l0000F95C
l0000F95C:
	branch (r11 << 1<i32>) - (r9 << 1<i32>) >=u C_71 l0000F95E
l0000F95E:
	C_79 = SLICE(cond(r8 - r10), bool, 0) (alias)
	Z_163 = SLICE(cond((r9 << 1<i32>) - (r11 << 1<i32>) - C_79), bool, 1) (alias)
	branch (r9 << 1<i32>) - (r11 << 1<i32>) <u C_79 l0000F966
l0000F966:
	branch (r9 << 1<i32>) - (r11 << 1<i32>) >=u C_79 l0000F968
l0000F968:
	r12Out = r12_41
	lrOut = lr_131
	return Z_163
l0000F966_1:
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F964_1:
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F95C_1:
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F95A_1:
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F952_1:
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F950_1:
	r12Out = 1<32>
	lrOut = lr
	return false
__avr32_f64_cmp_ge_exit:


bool __avr32_f64_cmp_lt(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r9Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
//      fn0000D220
//      fn0000E684
//      fn0000E868
//      fn0000F278
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr r12 r9
// Trashed: VNZC lr r11 r12 r9
// Preserved: r10 r8 sp
__avr32_f64_cmp_lt_entry:
l0000F976:
	v18_116 = r11 << 1<i32> == 0<32>
	r12_7 = CONVERT(r11 << 1<i32> <u 0<32>, bool, word32)
	branch r11 << 1<i32> != 0<32> l0000F97E
l0000F97A_1:
	v18_116 = r10 == 0<32>
l0000F97E:
	branch v18_116 l0000F9C4
l0000F9C4:
	v21_119 = r9 << 1<i32> != 0<32>
	r12_19 = CONVERT(r9 << 1<i32> >=u 0<32>, bool, word32)
	branch r9 << 1<i32> != 0<32> l0000F9CC
l0000F9C8_1:
	v21_119 = r8 != 0<32>
l0000F9CC:
	branch v21_119 l0000F9CE
l0000F9CE:
	r9Out = <invalid>
	r12Out = r12_19
	lrOut = lr
	return SLICE(cond(r12_19), bool, 1)
l0000F9CC_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F980:
	C_52 = SLICE(cond(r10 - 0<32>), bool, 0) (alias)
	r12_41 = __rcl<word32,byte>(r12_7, 1<8>, SLICE(cond(r9 << 1<i32>), bool, 0))
	lr_131 = 0xFFE00000<32>
	Z_163 = SLICE(cond((r11 << 1<i32>) - 0xFFE00000<32> - C_52), bool, 1) (alias)
	branch (r11 << 1<i32>) - 0xFFE00000<32> >u C_52 l0000F9C2
l0000F996:
	C_56 = SLICE(cond(r8 - 0<32>), bool, 0) (alias)
	Z_163 = SLICE(cond((r9 << 1<i32>) - 0xFFE00000<32> - C_56), bool, 1) (alias)
	branch (r9 << 1<i32>) - 0xFFE00000<32> >u C_56 l0000F9C2
l0000F9A0:
	lr_131 = lr
	branch r12_41 == 3<32> l0000F9B8
l0000F9A6:
	branch r12_41 <u 1<32> l0000F9AE
l0000F9AA:
	branch r12_41 != 1<32> l0000F9AC
l0000F9AC:
	branch r12_41 == 1<32> l0000F9AE
l0000F9AE:
	C_71 = SLICE(cond(r10 - r8), bool, 0) (alias)
	branch (r11 << 1<i32>) - (r9 << 1<i32>) <u C_71 l0000F9B6
l0000F9B6:
	branch (r11 << 1<i32>) - (r9 << 1<i32>) >=u C_71 l0000F9B8
l0000F9B8:
	C_79 = SLICE(cond(r8 - r10), bool, 0) (alias)
	Z_163 = SLICE(cond((r9 << 1<i32>) - (r11 << 1<i32>) - C_79), bool, 1) (alias)
	branch (r9 << 1<i32>) - (r11 << 1<i32>) <u C_79 l0000F9C0
l0000F9C0:
	branch (r9 << 1<i32>) - (r11 << 1<i32>) >=u C_79 l0000F9C2
l0000F9C2:
	r9Out = <invalid>
	r12Out = r12_41
	lrOut = lr_131
	return Z_163
l0000F9C0_1:
	r9Out = <invalid>
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F9BE_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F9B6_1:
	r9Out = <invalid>
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F9B4_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F9AC_1:
	r9Out = <invalid>
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F9AA_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
__avr32_f64_cmp_lt_exit:


bool fn0000F9D0(word32 r11, word32 r12, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008BE0
//      fn00008E88
//      fn000090C0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: Z r10 r8 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: sp
fn0000F9D0_entry:
l0000F9D0:
	v18_87 = r11 << 1<32> != 0<32>
	branch r11 << 1<32> != 0<32> l0000F9DC
l0000F9D8_1:
	v18_87 = r12 << 1<32> != 0<32>
l0000F9DC:
	branch v18_87 l0000F9DE
l0000F9DE:
	branch r12 << 1<32> <=u 0xFF000000<32> l0000F9E8
l0000F9E8:
	branch r11 << 1<32> <=u 0xFF000000<32> l0000F9EC
l0000F9EC:
	v17_25 = SLICE(r12, bool, 31)
	r8_28 = CONVERT(Test(UGE,v17_25), bool, word32)
	branch (r11 ^ r12) >= 0<32> l0000F9F8
l0000F9F8:
	branch Test(ULT,v17_25) l0000FA00
l0000F9FA:
	branch r12 <u r11 l0000F9FE
l0000F9FE:
	branch r12 >=u r11 l0000FA00
l0000FA00:
	branch r11 <u r12 l0000FA04
l0000FA04:
	branch r11 >=u r12 l0000FA06
l0000FA06:
	branch r11 << 2<32> != 0<32> l0000FA0C
l0000FA08_1:
l0000FA0C:
	r8Out = r8_28
	r9Out = r11 << 2<32>
	r10Out = <invalid>
	return SLICE(cond(r12), bool, 1)
l0000FA04_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA02_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000F9FE_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000F9FC_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000F9F6_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return SLICE(cond(r8_28), bool, 1)
l0000F9EA_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000F9E6_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000F9DC_1:
	r8Out = r8
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
fn0000F9D0_exit:


bool fn0000FA0E(word32 r11, word32 r12, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008BE0
//      fn0000901C
//      fn000090C0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: Z r10 r8 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: sp
fn0000FA0E_entry:
l0000FA0E:
	v18_87 = r11 << 1<32> != 0<32>
	branch r11 << 1<32> != 0<32> l0000FA1A
l0000FA16_1:
	v18_87 = r12 << 1<32> != 0<32>
l0000FA1A:
	branch v18_87 l0000FA1C
l0000FA1C:
	branch r12 << 1<32> <=u 0xFF000000<32> l0000FA26
l0000FA26:
	branch r11 << 1<32> <=u 0xFF000000<32> l0000FA2A
l0000FA2A:
	v17_25 = SLICE(r12, bool, 31)
	r8_28 = CONVERT(Test(ULT,v17_25), bool, word32)
	branch (r11 ^ r12) >= 0<32> l0000FA36
l0000FA36:
	branch Test(ULT,v17_25) l0000FA3E
l0000FA38:
	branch r12 <u r11 l0000FA3C
l0000FA3C:
	branch r12 >=u r11 l0000FA3E
l0000FA3E:
	branch r11 <u r12 l0000FA42
l0000FA42:
	branch r11 >=u r12 l0000FA44
l0000FA44:
	branch r11 << 2<32> != 0<32> l0000FA4A
l0000FA46_1:
l0000FA4A:
	r8Out = r8_28
	r9Out = r11 << 2<32>
	r10Out = <invalid>
	return SLICE(cond(r12), bool, 1)
l0000FA42_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000FA40_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA3C_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000FA3A_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA34_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return SLICE(cond(r8_28), bool, 1)
l0000FA28_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA24_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA1A_1:
	r8Out = r8
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
fn0000FA0E_exit:


ui64 __avr32_f64_div(word32 r2, word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r8Out, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  r10:[0..31] r11:[0..31] r2:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r11:r10 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
__avr32_f64_div_entry:
l0000FA54:
	lr_24 = r11 ^ r9
	r10_29 = r10 << 9<i32>
	r11_32 = (r11 << 9<i32> | r10 << 0x17<8> | 0x20000000<u32>) & 0x3FFFFFFF<32>
	r7_34 = r11 >>u 0x14<32> & 0xFFFFF7FF<u32>
	branch Test(EQ,false) l0000FC0A
l0000FC0A:
	r11_37 = r11_32 << 3<i32> | r10 << 0x26<32>
	r10_38 = r10 << 12<i32>
	branch (r10 << 12<i32> | r11_37) == 0<32> l0000FD50
l0000FD50:
	branch (r8 | r9 << 1<8>) == 0<32> l0000FD38
l0000FD56:
	branch CONVERT(SLICE(r9, word11, 20), word11, word32) != 0x7FF<32> l0000FD2C
l0000FD60:
	branch (r8 | r9 << 0xC<8>) == 0<32> l0000FD2C
l0000FD66:
l0000FC1A:
	r4_54 = __clz(r11_37)
	branch Test(EQ,r4_54 == 0<32>) l0000FC4C
l0000FC20:
	branch Test(ULT,r4_54 == 0x20<32>) l0000FC38
l0000FC38:
	r4_57 = __clz(r10 << 12<i32>)
	r4_60 = r4_57
	branch Test(UGE,r4_57 == 0x20<32>) l0000FC40
l0000FC3C_1:
	r4_60 = 0<32>
l0000FC40:
	branch Test(ULT,r4_57 == 0x20<32>) l0000FC44
l0000FC40_1:
	r4_60 = r4_60 + 0x20<32>
l0000FC44:
	r11_37 = r10 << 12<i32> << r4_60
	r10_38 = 0<32>
	r7_34 = r7_34 + r4_60
l0000FC22:
	r11_37 = r11_37 << r4_54 | (r10 << 12<i32>) >>u 0x20<32> - r4_54
	r10_38 = r10 << 12<i32> << r4_54
	r7_34 = r7_34 + r4_54
l0000FC4C:
	r10_29 = r10_38 >>u 2<i32> | r11_37 << 0x1E<8>
	r11_32 = r11_37 >>u 2<i32>
l0000FA74:
	branch r7_34 >= 0x7FF<32> l0000FBE4
l0000FBE4:
	branch (r11_32 & 0xFFFFF<32> | r10_29) != 0<32> l0000FD38
l0000FBEE:
	branch (r9 >>u 0x14<32> & 0xFFFFFEFF<u32>) != 0x7FF<32> l0000FD40
l0000FBFC:
l0000FA7C:
	r8 = r8 << 9<i32>
	r9_114 = (r9 << 9<i32> | r8 << 0x17<8> | 0x20000000<u32>) & 0x3FFFFFFF<32>
	r6_116 = r9 >>u 0x14<32> & 0xFFFFF7FF<u32>
	branch Test(EQ,false) l0000FC56
l0000FC56:
	r9 = r9_114 << 3<i32> | r8 << 0x26<32>
	r8 = r8 << 12<i32>
	branch (r9 | r8 << 12<i32>) == 0<32> l0000FD40
l0000FD40:
	r8Out = r8
	r9Out = r9
	return SEQ(lr_24 & 0x80000000<32> | 0x7FF00000<32>, 0<32>)
l0000FC64:
	r4_154 = __clz(r9)
	branch Test(EQ,r4_154 == 0<32>) l0000FC96
l0000FC6A:
	branch Test(ULT,r4_154 == 0x20<32>) l0000FC82
l0000FC82:
	r4_157 = __clz(r8 << 12<i32>)
	r4_160 = r4_157
	branch Test(UGE,r4_157 == 0x20<32>) l0000FC8A
l0000FC86_1:
	r4_160 = 0<32>
l0000FC8A:
	branch Test(ULT,r4_157 == 0x20<32>) l0000FC8E
l0000FC8A_1:
	r4_160 = r4_160 + 0x20<32>
l0000FC8E:
	r9 = r8 << 12<i32> << r4_160
	r8 = 0<32>
	r6_116 = r6_116 + r4_160
l0000FC6C:
	r9 = r9 << r4_154 | (r8 << 12<i32>) >>u 0x20<32> - r4_154
	r8 = r8 << 12<i32> << r4_154
	r6_116 = r6_116 + r4_154
l0000FC96:
	r8 = r8 >>u 2<i32> | r9 << 0x1E<8>
	r9_114 = r9 >>u 2<i32>
l0000FA94:
	branch r6_116 >= 0x7FF<32> l0000FBFE
l0000FBFE:
	r9 = r9_114 & 0xFFFFF<32> | r8
	branch r9 != 0<32> l0000FD38
l0000FD38:
	r8Out = r8
	r9Out = r9
	return 0xFFFFFFFFFFFFFFFF<64>
l0000FC08:
l0000FD2C:
	r8Out = r8
	r9Out = r9
	return SEQ(lr_24 & 0x80000000<32>, 0<32>)
l0000FA9C:
	r5_255 = SLICE(((SLICE(r9_114 *u 0x40000000<32>, word32, 32) << 2<8>) + 0x80000000<32>) *u 0x40000000<32>, word32, 32) (alias)
	r5_261 = SLICE((r5_255 << 2<32>) *u ((SLICE((r5_255 << 2<32>) *u r9_114, word32, 32) << 2<8>) + 0x80000000<32>), word32, 32) (alias)
	r5_267 = SLICE((r5_261 << 2<32>) *u ((SLICE((r5_261 << 2<32>) *u r9_114, word32, 32) << 2<8>) + 0x80000000<32>), word32, 32) (alias)
	r5_r4_571 = (r5_267 << 2<32>) *u r9_114 + CONVERT(SLICE((r5_267 << 2<32>) *u r8 + r2 *u r9_114, word32, 32), word32, uint64)
	r4_284 = SLICE(r5_r4_571, word32, 0) (alias)
	r4_292 = -(r4_284 << 2<i32>)
	r5_295 = 0x80000000<32> - (SLICE(r5_r4_571, word32, 32) << 2<i32> | r4_284 << 0x1E<8>) - CONVERT(r4_292 <u 0<32>, bool, word32)
	r5_r4_573 = (r5_267 << 2<32>) *u r5_295 + CONVERT(SLICE((r5_267 << 2<32>) *u r4_292 + r2 *u r5_295, word32, 32), word32, uint64)
	r4_303 = SLICE(r5_r4_573, word32, 0) (alias)
	r3_309 = SLICE(r5_r4_573, word32, 32) << 2<32> | r4_303 << 0x1E<8>
	r5_r4_575 = r3_309 *u r9_114 + CONVERT(SLICE(r3_309 *u r8 + (r4_303 << 2<32>) *u r9_114, word32, 32), word32, uint64)
	r4_318 = SLICE(r5_r4_575, word32, 0) (alias)
	r4_326 = -(r4_318 << 2<i32>)
	r5_329 = 0x80000000<32> - (SLICE(r5_r4_575, word32, 32) << 2<i32> | r4_318 << 0x1E<8>) - CONVERT(r4_326 <u 0<32>, bool, word32)
	r5_r4_577 = r3_309 *u r5_329 + CONVERT(SLICE(r3_309 *u r4_326 + (r4_303 << 2<32>) *u r5_329, word32, 32), word32, uint64)
	r4_337 = SLICE(r5_r4_577, word32, 0) (alias)
	r3_343 = SLICE(r5_r4_577, word32, 32) << 2<32> | r4_337 << 0x1E<8>
	r1_r0_356 = r3_343 *u r10_29 + (r4_337 << 2<32>) *u r11_32
	r3_r2_579 = r3_343 *u r11_32 + CONVERT(SLICE(r1_r0_356, word32, 32), word32, uint64)
	r7_241 = r7_34 + r6_116
	r3_364 = SLICE(r3_r2_579, word32, 32) (alias)
	r7_242 = r7_241 + 0x3FF<32>
	r12_244 = 0x80000000<32>
	r0_395 = SLICE(r1_r0_356, word32, 0) (alias)
	r2_360 = SLICE(r3_r2_579, word32, 0) (alias)
	branch Test(EQ,SLICE(r3_364, bool, 28)) l0000FB80
l0000FB80:
	r10_370 = r10_29 >>u 4<i32> | r11_32 << 0x1C<8>
	r11_371 = r11_32 >>u 4<i32>
l0000FB70:
	r2_360 = r2_360 << 1<i32>
	r3_364 = __rcl<word32,byte>(r3_364, 1<8>, SLICE(cond(r2_360 << 1<i32>), bool, 0))
	r7_242 = r7_241 + 0x3FE<32>
	r10_370 = r10_29 >>u 3<i32> | r11_32 << 0x1D<8>
	r11_371 = r11_32 >>u 3<i32>
l0000FB88:
	branch r7_242 <= 0<32> l0000FCA0
l0000FCA0:
	r7_388 = __sat<uint32>(-r7_242 + 1<32>, 6<i32>)
	branch r7_388 >= 0x20<32> l0000FCD6
l0000FCD6:
	r6_392 = 0x20<32> - r7_388
	branch r6_392 != 0<32> l0000FCE2
l0000FCDA_1:
	r0_395 = 0<32>
l0000FCDE_1:
	r12_244 = 0<32>
l0000FCE2:
	branch r6_392 == 0<32> l0000FCEC
l0000FCE4:
	r0_395 = r10_370 << r6_392
	r12_244 = r11_371 << r6_392
l0000FCEC:
	r2_411 = r3_364 >>u r7_388
	r3_364 = 0<32>
	r1_418 = r10_370 >>u r7_388 | r12_244
	r10_370 = r11_371 >>u r7_388
	r11_371 = 0<32>
l0000FCAE:
	r6_423 = 0x20<32> - r7_388
	r2_411 = r2_360 >>u r7_388 | r3_364 << r6_423
	r3_364 = r3_364 >>u r7_388
	r1_418 = r10_370 << r6_423
	r10_370 = r10_370 >>u r7_388 | r11_371 << r6_423
	r11_371 = r11_371 >>u r7_388
	r0_395 = 0<32>
l0000FCFE:
	r2_438 = r2_411 & 0xFFFFFF00<32>
	r5_r4_453 = (r2_438 | 0x80<32>) *u r8
	r9_r8_454 = r3_364 *u r9_114
	r8_r5_587 = SEQ(SLICE(r9_r8_454, word32, 0), SLICE(r5_r4_453, word32, 32)) + (r3_364 *u r8 + (r2_438 | 0x80<32>) *u r9_114)
	r8_462 = SLICE(r8_r5_587, word32, 32) (alias)
	r2_439 = r2_438 | 0x80<32>
	r9_466 = SLICE(r9_r8_454, word32, 32) + CONVERT(r8_462 <u 0<32>, bool, word32)
	r12_469 = CONVERT(SLICE(r2_438, bool, 8), bool, word32)
	C_509 = SLICE(cond(SLICE(r8_r5_587, word32, 0) - r1_418 - SLICE(cond(SLICE(r5_r4_453, word32, 0) - r0_395), bool, 0)), bool, 0) (alias)
l0000FB8E:
	r2_480 = r2_360 & 0xFFFFFF00<32>
	r5_r4_486 = (r2_480 | 0x80<32>) *u r8
	r9_r8_487 = r3_364 *u r9_114
	r8_r5_582 = SEQ(SLICE(r9_r8_487, word32, 0), SLICE(r5_r4_486, word32, 32)) + (r3_364 *u r8 + (r2_480 | 0x80<32>) *u r9_114)
	r8_462 = SLICE(r8_r5_582, word32, 32) (alias)
	r2_439 = r2_480 | 0x80<32>
	r9_466 = SLICE(r9_r8_487, word32, 32) + CONVERT(r8_462 <u 0<32>, bool, word32)
	r12_469 = CONVERT(SLICE(r2_480, bool, 8), bool, word32)
	C_509 = SLICE(cond(SLICE(r8_r5_582, word32, 0) - SLICE(cond(SLICE(r5_r4_486, word32, 0) - 0<32>), bool, 0)), bool, 0) (alias)
l0000FBB6:
	C_516 = SLICE(cond(r8_462 - r10_370 - C_509), bool, 0) (alias)
	r6_519 = CONVERT(r9_466 - r11_371 <u C_516, bool, word32)
	branch r9_466 - r11_371 != C_516 l0000FBC4
l0000FBC0_1:
	r6_519 = r12_469
l0000FBC4:
	r11_r10_584 = SEQ(__setbit(r3_364 >>u 8<32>, 31<i32>, SLICE(lr_24, bool, 31)), r2_439 >>u 8<32> | r3_364 << 0x18<8>) + CONVERT(r6_519, word32, uint64)
	r8Out = r8_462
	r9Out = r9_466
	return r11_r10_584
__avr32_f64_div_exit:


word32 fn0000FD70(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r5 r6 r7 sp
fn0000FD70_entry:
l0000FD70:
	r8_5 = r11 ^ r12
	r12_15 = r12 << 1<i32>
	branch r12 << 1<i32> != 0<32> l0000FD78
l0000FD78:
	branch r11 << 1<i32> == 0<32> l0000FE62
l0000FE62:
	branch r12 << 1<i32> != 0<32> l0000FE66
l0000FE66:
	r12_15 = 0xFF000000<32>
l0000FE64_1:
	return 0xFFFFFFFF<32>
l0000FD7C:
	r9_104 = r12 << 1<i32> >>u 0x18<32>
	branch r9_104 == 0<32> l0000FE6E
l0000FE6E:
	r9_26 = __clz(r12 << 8<i32>)
	r12_111 = r12 << 8<i32> << r9_26
	r9_104 = 1<32> - r9_26
l0000FD82:
	branch r9_104 >=u 0xFF<32> l0000FE50
l0000FE50:
	branch r9_104 == 0xFF<32> l0000FE52
l0000FE52:
	branch r11 << 1<i32> <u 0xFF000000<32> l0000FE4A
l0000FE4A:
	return __rcr<word32,byte>(r12_15, 1<8>, SLICE(cond(r8_5 << 1<i32>), bool, 0))
l0000FE5C:
	return 0xFFFFFFFF<32>
l0000FE50_1:
	return 0xFFFFFFFF<32>
l0000FD88:
	r12_111 = r12 << 8<i32> | 0x80000000<u32>
l0000FD8C:
	r10_105 = r11 << 1<i32> >>u 0x18<32>
	branch r10_105 == 0<32> l0000FE7E
l0000FE7E:
	r10_66 = __clz(r11 << 8<i32>)
	r11_113 = r11 << 8<i32> << r10_66
	r10_105 = 1<32> - r10_66
l0000FD92:
	branch r11 << 1<i32> >>u 0x18<32> >=u 0xFF<32> l0000FE5E
l0000FE5E:
	branch r11 << 1<i32> >>u 0x18<32> != 0xFF<32> l0000FE60
l0000FE60:
	return 0xFFFFFFFF<32>
l0000FE5E_1:
	return 0<32>
l0000FD98:
	r11_113 = r11 << 8<i32> | 0x80000000<u32>
l0000FD9C:
	r5_114 = r11_113 >>u 2<32>
	r7_125 = SLICE(((SLICE(r5_114 *u 0x40000000<32>, word32, 32) << 2<8>) + 0x80000000<32>) *u 0x40000000<32>, word32, 32) (alias)
	r7_131 = SLICE((r7_125 << 2<32>) *u ((SLICE((r7_125 << 2<32>) *u r5_114, word32, 32) << 2<8>) + 0x80000000<32>), word32, 32) (alias)
	r7_137 = SLICE((r7_131 << 2<32>) *u ((SLICE((r7_131 << 2<32>) *u r5_114, word32, 32) << 2<8>) + 0x80000000<32>), word32, 32) (alias)
	r12_112 = r12_111 >>u 2<i32>
	r9_106 = r9_104 + r10_105
	r7_149 = SLICE((SLICE((r7_137 << 2<32>) *u ((SLICE((r7_137 << 2<32>) *u r5_114, word32, 32) << 2<8>) + 0x80000000<32>), word32, 32) << 2<32>) *u r12_112, word32, 32) (alias)
	r9_107 = r9_106 + 0x7F<32>
	r12_147 = r12_112 >>u 4<i32>
	branch Test(EQ,SLICE(r7_149, bool, 28)) l0000FE10
l0000FE0A:
	r7_149 = r7_149 << 1<i32>
	r9_107 = r9_106 + 0x7E<32>
	r12_147 = r12_112 >>u 4<i32> << 1<i32>
l0000FE10:
	branch r9_107 <= 0<32> l0000FE8E
l0000FE8E:
	r9_163 = __sat<uint32>(-r9_107 + 1<32>, 5<i32>)
	r7_172 = r7_149 >>u r9_163 & 0xFFFFFFE0<32> | 0x10<32>
	r11_r10_174 = r5_114 *u r7_172
	r12_147 = r12_147 >>u r9_163
	r11_187 = SLICE(r11_r10_174, word32, 32) (alias)
	r5_177 = CONVERT(SLICE(r7_172, bool, 5), bool, word32)
	C_191 = SLICE(cond(SLICE(r11_r10_174, word32, 0) - (r12_147 << 0x20<32> - r9_163)), bool, 0) (alias)
l0000FE16:
	r7_180 = r7_149 & 0xFFFFFFE0<32>
	r11_r10_182 = r5_114 *u (r7_180 | 0x10<32>)
	r7_172 = r7_180 | 0x10<32>
	r11_187 = SLICE(r11_r10_182, word32, 32) (alias)
	r5_177 = CONVERT(SLICE(r7_180, bool, 5), bool, word32)
	C_191 = SLICE(cond(SLICE(r11_r10_182, word32, 0) - 0<32>), bool, 0) (alias)
l0000FE28:
	r11_196 = CONVERT(r11_187 - r12_147 <u C_191, bool, word32)
	branch r11_187 - r12_147 != C_191 l0000FE32
l0000FE2E_1:
	r11_196 = r5_177
l0000FE32:
	return __setbit(r7_172 >>u 5<32>, 31<i32>, SLICE(r8_5, bool, 31)) + r11_196
l0000FD76_1:
	return 0<32>
fn0000FD70_exit:


word32 fn0000FF9C(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008BE0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: sp
fn0000FF9C_entry:
l0000FF9C:
	branch (r11 ^ r12) < 0<32> l0000FEC4
l0000FEC4:
	r11_8 = r11 ^ 0x80000000<32>
	branch (r11_8 ^ r12) < 0<32> l0000FF98
l0000FF98:
	r11 = r11_8 ^ 0x80000000<32>
l0000FECE:
	r10_18 = max<int32>(r12 & 0x7FFFFFFF<u32>, r11_8 & 0x7FFFFFFF<u32>)
	r12_15 = r12 & 0x80000000<32>
	r9_19 = min<int32>(r12 & 0x7FFFFFFF<u32>, r11_8 & 0x7FFFFFFF<u32>)
	branch r10_18 == (r12 & 0x7FFFFFFF<u32>) l0000FEE6
l0000FEE2_1:
	r12_15 = (r12 & 0x80000000<32>) - 1<32>
l0000FEE6:
	r12_24 = r12_15 & 0x80000000<32>
	r8_100 = r10_18 << 8<32> | 0x80000000<u32>
	r10_28 = r10_18 >>u 23<i32>
	branch r10_18 >>u 23<i32> == 0xFF<32> l0000FF68
l0000FF68:
	branch r8_100 << 1<32> == 0<32> l0000FF6E
l0000FF6E:
	branch r9_19 >>u 0x17<32> == 0xFF<32> l0000FF7C
l0000FF7C:
	return 0xFFFFFFFF<32>
l0000FF7A_1:
	return r12_24
l0000FF6C_1:
	return 0xFFFFFFFF<32>
l0000FEF8:
	r11_102 = r9_19 << 8<32> | 0x80000000<u32>
	r9_135 = r9_19 >>u 23<i32>
	branch r9_19 >>u 23<i32> == 0<32> l0000FF56
l0000FF56:
	r11_102 = r11_102 & 0x7FFFFFFF<u32>
	branch Test(EQ,false) l0000FF5C
l0000FF58_1:
	r9_135 = 1<32>
l0000FF5C:
	branch r10_18 >>u 23<i32> != 0<32> l0000FF04
l0000FF60:
	r8_100 = r8_100 & 0x7FFFFFFF<u32>
	branch Test(EQ,false) l0000FF66
l0000FF62_1:
	r10_28 = 1<32>
l0000FF66:
l0000FF04:
	r12_78 = r10_28 + r9_135
	branch r12_78 == 0<32> l0000FF20
l0000FF0A:
	r12_81 = __sat<uint32>(r12_78, 5<i32>)
	r9_88 = r11_102 << 0x20<32> - r12_81
	branch r9_88 == 0<32> l0000FF1A
l0000FF16_1:
	r8_100 = r8_100 - 1<32>
l0000FF1A:
	r9_135 = CONVERT(r9_88 != 0<32>, bool, word32)
	r11_102 = r11_102 >>u r12_81
l0000FF20:
	r8_103 = r8_100 + r11_102
	r11_118 = __clz(r8_103)
	branch Test(UGE,r11_118 == 0x20<32>) l0000FF2A
l0000FF2A:
	r8_121 = r8_103 << r11_118
	r10_124 = r10_28 + r11_118
	branch r10_124 <= 0<32> l0000FF7E
l0000FF7E:
	r10_127 = 9<32> - r10_124
	r11_128 = 0x20<32> - r10_127
	branch r11_128 >=u 0<32> l0000FF88
l0000FF88:
	r12_132 = r12_24 | r8_121 >>u r10_127
	r9_136 = r9_135 | r8_121 << r11_128
l0000FF86_1:
	return 0<32>
l0000FF34:
	r9_136 = r9_135 | r8_121 << 0x18<8>
	r12_132 = r12_24 | r8_121 << 8<8>
l0000FF40:
	r10_149 = 0x80000000<32>
	branch Test(EQ,SLICE(r12_132, bool, 0)) l0000FF4E
l0000FF4A_1:
	r10_149 = 0x80000001<32>
l0000FF4E:
	branch r9_136 <u r10_149 l0000FF54
l0000FF50_1:
	r12_132 = r12_132 + 1<32>
l0000FF54:
	return r12_132
l0000FF28_1:
	return 0<32>
l0000FFA2:
	r11_175 = r11 & 0x7FFFFFFF<u32>
	r10_177 = max<int32>(r12 & 0x7FFFFFFF<u32>, r11_175)
	r9_178 = min<int32>(r12 & 0x7FFFFFFF<u32>, r11_175)
	r8_180 = r10_177 << 8<32> | 0x80000000<u32>
	branch r10_177 >>u 23<i32> == 0xFF<32> l0001001C
l0001001C:
	branch r8_180 << 1<32> == 0<32> l00010022
l00010022:
	branch r9_178 >>u 0x17<32> == 0xFF<32> l00010030
l00010030:
	branch r9_178 << 9<i32> != 0<32> l00010034
l00010034:
	return 0xFFFFFFFF<32>
l00010032_1:
	return r12 & 0x80000000<32>
l0001002E_1:
	return r12 & 0x80000000<32>
l00010020_1:
	return 0xFFFFFFFF<32>
l0000FFC2:
	r11_214 = r9_178 << 8<32> | 0x80000000<u32>
	r9_215 = r9_178 >>u 23<i32>
	branch r9_178 >>u 23<i32> == 0<32> l00010008
l00010008:
	r11_214 = r11_214 & 0x7FFFFFFF<u32>
	branch Test(EQ,false) l0001000E
l0001000A_1:
	r9_215 = 1<32>
l0001000E:
	branch r10_177 >>u 23<i32> != 0<32> l0000FFCC
l00010012:
	return r12 & 0x80000000<32> | (r11_214 & 0x7FFFFFFF<u32>) + (r8_180 & 0x7FFFFFFF<u32>) << 8<8>
l0000FFCC:
	r9_243 = __sat<uint32>((r10_177 >>u 23<i32>) - r9_215, 5<i32>)
	r12_246 = r11_214 >>u r9_243
	r11_248 = r11_214 << 0x18<32> - r9_243
	r8_252 = r8_180 + SEQ(SLICE(r12_246, byte, 0), SLICE(r12_246, word24, 0))
	branch r8_252 <u 0<32> l00010036
l00010036:
	r8_252 = r8_252 >>u 1<i32>
	branch r10_177 >>u 23<i32> != 0xFE<32> l00010046
l0001003E_1:
	r8_252 = 0<32>
l00010042_1:
	r11_248 = 0<32>
l00010046:
l0000FFEA:
	r12_268 = r12 & 0x80000000<32> | r8_252 << 8<8>
	r10_274 = 0x80000000<32>
	branch Test(EQ,SLICE(r12_268, bool, 0)) l00010000
l0000FFFC_1:
	r10_274 = 0x80000001<32>
l00010000:
	branch r11_248 <u r10_274 l00010006
l00010002_1:
	r12_268 = r12_268 + 1<32>
l00010006:
	return r12_268
fn0000FF9C_exit:


word32 fn00010050(word32 r9, word32 r11, word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000901C
//      fn000090C0
// MayUse:  r11:[0..31] r12:[0..31] r9:[0..31]
// LiveOut: r12 r9
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: sp
fn00010050_entry:
l00010050:
	r12_6 = r12 ^ r11
	branch Test(EQ,false) l00010126
l00010126:
	r10_12 = CONVERT(SLICE(r11, byte, 23), byte, word32)
	branch r10_12 == 0xFF<32> l00010130
l00010130:
	branch r10_12 != 0xFF<32> l00010132
l00010132:
	branch r9 << 1<i32> != 0<32> l00010138
l00010134_1:
l00010138:
	r12Out = r12_6 & 0x80000000<32>
	return r9 << 1<i32>
l00010130_1:
	r12Out = 0xFFFFFFFF<32>
	return r9
l0001012E_1:
	r12Out = r12_6 & 0x80000000<32>
	return r9
l0001005C:
	r10_36 = max<int32>(r12 & 0x7FFFFFFF<u32>, r11 & 0x7FFFFFFF<u32>)
	r9_37 = min<int32>(r12 & 0x7FFFFFFF<u32>, r11 & 0x7FFFFFFF<u32>)
	r8_114 = r10_36 << 8<32> | 0x80000000<u32>
	r10_111 = r10_36 >>u 23<i32>
	branch r10_36 >>u 23<i32> == 0xFF<32> l000100EC
l000100EC:
	branch r8_114 << 1<32> == 0<32> l000100F2
l000100F2:
	branch r9_37 != 0<32> l000100F6
l000100F6:
	branch r9_37 >>u 0x17<32> == 0xFF<32> l00010104
l00010104:
	branch r9_37 << 9<i32> != 0<32> l00010108
l00010108:
	r12Out = 0xFFFFFFFF<32>
	return r9_37 << 9<i32>
l00010106_1:
	r12Out = r12_6 & 0x80000000<32>
	return r9_37 << 9<i32>
l00010102_1:
	r12Out = r12_6 & 0x80000000<32>
	return r9_37
l000100F4_1:
	r12Out = 0xFFFFFFFF<32>
	return r9_37
l000100F0_1:
	r12Out = 0xFFFFFFFF<32>
	return r9_37
l00010074:
	r11_115 = r9_37 << 8<32> | 0x80000000<u32>
	r9_110 = r9_37 >>u 23<i32>
	branch r9_37 >>u 23<i32> == 0<32> l000100C6
l000100C6:
	r9_85 = __clz(r11_115 & 0x7FFFFFFF<u32>)
	branch Test(UGE,r9_85 == 0x20<32>) l000100CE
l000100CE:
	r11_115 = (r11_115 & 0x7FFFFFFF<u32>) << r9_85
	r9_110 = 1<32> - r9_85
	branch r10_36 >>u 23<i32> != 0<32> l0001007E
l000100DA:
	r10_94 = __clz(r11_115)
	branch Test(UGE,r10_94 == 0x20<32>) l000100E2
l000100E2:
	r8_114 = (r8_114 & 0x7FFFFFFF<u32>) << r10_94
	r10_111 = 1<32> - r10_94
l000100E0_1:
	r12Out = 0<32>
	return r9_110
l000100CC_1:
	r12Out = 0<32>
	return r9_85
l0001007E:
	r11_r10_116 = r8_114 *u r11_115
	r9_112 = r9_110 + r10_111
	r11_117 = SLICE(r11_r10_116, word32, 32) (alias)
	r10_124 = SLICE(r11_r10_116, word32, 0) (alias)
	branch r11_117 << 1<32> <u 0<32> l00010090
l00010088_1:
	r11_117 = r11_117 << 1<32>
l0001008C_1:
	r9_112 = r9_112 - 1<32>
l00010090:
	r10_125 = r10_124 >>u 8<i32>
	r11_128 = SEQ(SLICE(r11_117, byte, 0), SLICE(r11_117, word24, 0))
	r9_130 = r9_112 - 0x7E<32>
	branch r9_130 <= 0<32> l0001010A
l0001010A:
	r9_133 = 9<32> - r9_130
	r8_134 = 0x20<32> - r9_133
	branch r8_134 >=u 0<32> l00010114
l00010114:
	r9_137 = r11_128 >>u r9_133
	r12_140 = r12_6 & 0x80000000<32> | r9_137
	r10_125 = r10_124 >>u 8<i32> & 0xFFFFFF<32> | r11_128 << r8_134
l00010112_1:
	r12Out = 0<32>
	return r9_133
l0001009C:
	branch r9_130 >= 0xFF<32> l000100C0
l000100C0:
	r12Out = r12_6 & 0x80000000<32> | 0x7F800000<32>
	return r9_130
l000100A2:
	r12_140 = r12_6 & 0x80000000<32> | r11_128 << 8<8>
	r9_137 = SEQ(SLICE(r9_130, bool, 31), SLICE(r9_130, byte, 0), SLICE(r9_130, word23, 0))
l000100AA:
	r8_163 = 0x80000000<32>
	branch Test(EQ,SLICE(r12_140, bool, 0)) l000100B8
l000100B4_1:
	r8_163 = 0x80000001<32>
l000100B8:
	branch r10_125 <u r8_163 l000100BE
l000100BA_1:
	r12_140 = r12_140 + 1<32>
l000100BE:
	r12Out = r12_140
	return r9_137
fn00010050_exit:


word32 fn0001013A(word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
//      fn0000901C
//      fn000090C0
// MayUse:  r12:[0..31]
// LiveOut: r12 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: sp
fn0001013A_entry:
l0001013A:
	branch r12 != 0<32> l0001013E
l0001013E:
	r9_101 = __clz(r12)
	r12_16 = r12 << r9_101
	branch r9_101 <= 0xFFFFFF62<32> l00010176
l00010176:
	r10_13 = 1<32> - (r9_101 + 0x9E<32>)
	branch r10_13 <u 0x19<32> l00010182
l0001017E_1:
	r12_16 = 0<32>
l00010182:
	branch r10_13 >=u 0x19<32> l000101A8
l00010184:
	r12_27 = r12_16 >>u r10_13 | CONVERT(r12_16 << 0x20<32> - r10_13 != 0<32>, bool, word32)
	r9_101 = 0x7F<32>
	branch Test(NE,SLICE(r12_27, bool, 8)) l0001019E
l0001019A_1:
	r9_101 = 0x80<32>
l0001019E:
	r12_16 = __rcr<word32,byte>(r12_27 + r9_101 >>u 7<32>, 1<8>, SLICE(cond(0<32>), bool, 0))
l000101A8:
	r12Out = r12_16
	return r9_101
l00010152:
	r9_51 = 0x7F<32>
	branch Test(NE,SLICE(r12_16, bool, 8)) l0001015C
l00010158_1:
	r9_51 = 0x80<32>
l0001015C:
	r12_58 = r12_16 + r9_51
	branch r12_58 >=u 0<32> l00010162
l0001015E_1:
l00010162:
	branch Test(EQ,SLICE(r12_58, bool, 31)) l0001016A
l00010166_1:
l0001016A:
	r12Out = r12_58 >>u 8<32>
	return r9_51
l0001013C_1:
	r12Out = r12
	return r9
fn0001013A_exit:


word32 fn000101B2(word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
//      fn0000901C
//      fn000090C0
// MayUse:  r12:[0..31]
// LiveOut: r11 r12
// Trashed: VNZC r11 r12
// Preserved: sp
fn000101B2_entry:
l000101B2:
	branch r12 >= 0<32> l000101B6
l000101B6:
	r11_7 = CONVERT(SLICE(r12, byte, 23), byte, word32)
	branch r11_7 >=u 0x7F<32> l000101BE
l000101BE:
	r11_11 = 0x1F<32> - (r11_7 - 0x7F<32>)
	r12Out = (r12 << 8<i32> | 0x80000000<u32>) >>u r11_11
	return r11_11
l000101BC_1:
	r12Out = 0<32>
	return r11_7 - 0x7F<32>
l000101B4_1:
	r12Out = 0<32>
	return r11
fn000101B2_exit:


word32 fn000101CC(word32 r10, word32 r11, word32 pc, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
//      fn000093B8
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31]
// LiveOut: lr r10 r11 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000101CC_entry:
l000101CC:
	r10_39 = __avr32_u32_to_f64(r11, out r11_40)
	r9_r8_49 = Mem29[pc + 36<i32>:word64]
	r11_r10_114 = __avr32_f64_mul(SLICE(r9_r8_49, word32, 0), SLICE(r9_r8_49, word32, 32), r10_39, r11_40)
	r11_r10_115 = __avr32_f64_add(__avr32_u32_to_f64(r10, out r11_67), r11_67, SLICE(r11_r10_114, word32, 0), SLICE(r11_r10_114, word32, 32), out r5_116, out r6_117, out r7_118, out r8_86, out r9_87, out lr_79)
	r9Out = r9_87
	r10Out = SLICE(r11_r10_115, word32, 0)
	r11Out = SLICE(r11_r10_115, word32, 32)
	lrOut = lr_79
	return r8_86
fn000101CC_exit:


word32 __avr32_sdiv64(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009BC8
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
__avr32_sdiv64_entry:
l00010208:
	r3_33 = r11
	r11_41 = r9
	branch r11 < 0<32> l00010222
l00010222:
	r9_188 = 0<32>
	r3_33 = 0<32> - r11 - CONVERT(r10 <u 0<32>, bool, word32)
	r8_51 = 0xFFFFFFFF<32>
l0001021E:
	r8_51 = 0<32>
	r9_188 = r9
l00010230:
	dwLoc2C_475 = r8_51
	branch r9 >= 0<32> l0001024E
l00010238:
	r9_188 = 0<32>
	r11_41 = 0<32> - r9 - CONVERT(r8 <u 0<32>, bool, word32)
	dwLoc2C_475 = ~r8_51
l0001024E:
	r12_329 = r3_33
	r1_190 = r8
	r5_252 = r10
	branch r11_41 != 0<32> l000103F4
l000103F4:
	branch r11_41 >u r3_33 l000104CA
l000103FA:
	lr = __clz(r11_41)
	branch Test(NE,lr == 0<32>) l00010410
l00010410:
	r10_90 = 0x20<32> - lr
	r3_93 = r8 >>u r10_90 | r11_41 << lr
	r9_95 = r3_33 >>u r10_90
	r8_96 = r9_95 /u (r3_93 >>u 0x10<32>)
	r2_101 = CONVERT(SLICE(r3_93, word16, 0), word16, word32)
	r11_103 = r10 >>u r10_90 | r3_33 << lr
	r0_105 = r8 << lr
	r12_106 = r8_96 * r2_101
	r10_107 = r11_103 >>u 0x10<32> | r9_95 << 0x10<8>
	r1_108 = r8_96
	branch r10_107 >=u r12_106 l0001046E
l00010456:
	r10_107 = r10_107 + r3_93
	r1_108 = r8_96 - 1<32>
	branch r10_107 <u r3_93 l0001046E
l0001045E:
	r9_116 = r10_107 + r3_93
	branch r10_107 >=u r12_106 l0001046E
l0001046A:
	r1_108 = r8_96 - 2<32>
	r10_107 = r9_116
l0001046E:
	r9_123 = r10_107 + r12_106
	r8_127 = r9_123 /u (r3_93 >>u 0x10<32>)
	r2_132 = r8_127 * r2_101
	r11_133 = CONVERT(SLICE(r11_103, word16, 0), word16, word32) | r9_123 << 0x10<8>
	r12_134 = r8_127
	branch r11_133 >=u r2_132 l000104A4
l0001048C:
	r11_133 = r11_133 + r3_93
	r12_134 = r8_127 - 1<32>
	branch r11_133 <u r3_93 l000104A4
l00010494:
	r9_142 = r11_133 + r3_93
	branch r11_133 >=u r2_132 l000104A4
l000104A0:
	r12_134 = r8_127 - 2<32>
	r11_133 = r9_142
l000104A4:
	r12_151 = r12_134 | r1_108 << 0x10<8>
	r9_r8_154 = r12_151 *u r0_105
	r9_158 = SLICE(r9_r8_154, word32, 32) (alias)
	r8_160 = SLICE(r9_r8_154, word32, 0) (alias)
	r11_157 = r11_133 + r2_132
	branch r9_158 >u r11_157 l000104C4
l000104B8:
	branch r9_158 != r11_157 l000104C6
l000104BA:
	branch r8_160 <=u r10 << lr l000104C6
l000104C4:
	r12_151 = r12_151 - 1<32>
l00010400:
	branch r3_33 >u r11_41 l0001040A
l00010406:
	branch r10 <u r8 l000104CA
l000104CA:
	r12_151 = 0<32>
	r2_180 = 0<32>
l0001040A:
	r2_180 = lr
	r12_151 = 1<32>
l0001025C:
	branch r8 <=u r3_33 l000102E8
l000102E8:
	branch r8 != 0<32> l000102F4
l000102EC:
	r9_188 = 1<32>
	r1_190 = 1<32> /u r8
l000102F4:
	r2_192 = __clz(r1_190)
	branch Test(NE,r2_192 == 0<32>) l00010302
l00010302:
	r10_196 = 0x20<32> - r2_192
	r1_190 = r1_190 << r2_192
	r9_198 = r3_33 >>u r10_196
	r8_200 = r9_198 /u (r1_190 >>u 0x10<32>)
	r3_205 = CONVERT(SLICE(r1_190, word16, 0), word16, word32)
	r11_206 = r10 >>u r10_196 | r3_33 << r2_192
	r12_208 = r8_200 * r3_205
	r10_209 = r11_206 >>u 0x10<32> | r9_198 << 0x10<8>
	lr_210 = r8_200
	branch r10_209 >=u r12_208 l00010350
l00010338:
	r10_209 = r10_209 + r1_190
	lr_210 = r8_200 - 1<32>
	branch r10_209 <u r1_190 l00010350
l00010340:
	r9_218 = r10_209 + r1_190
	branch r10_209 >=u r12_208 l00010350
l0001034C:
	lr_210 = r8_200 - 2<32>
	r10_209 = r9_218
l00010350:
	r9_188 = r10_209 + r12_208
	r8_227 = r9_188 /u (r1_190 >>u 0x10<32>)
	r3_232 = r8_227 * r3_205
	r11_233 = CONVERT(SLICE(r11_206, word16, 0), word16, word32) | r9_188 << 0x10<8>
	r12_234 = r8_227
	branch r11_233 >=u r3_232 l00010382
l0001036A:
	r11_233 = r11_233 + r1_190
	r12_234 = r8_227 - 1<32>
	branch r11_233 <u r1_190 l00010382
l00010372:
	r9_188 = r11_233 + r1_190
	branch r11_233 >=u r3_232 l00010382
l0001037E:
	r12_234 = r8_227 - 2<32>
	r11_233 = r9_188
l00010382:
	r5_252 = r10 << r2_192
	r11_255 = r11_233 + r3_232
	r2_180 = r12_234 | lr_210 << 0x10<8>
l000102FA:
	r11_255 = r3_33 + r1_190
	r2_180 = 1<32>
l0001038C:
	lr_267 = r1_190 >>u 0x10<32>
	r8_269 = r11_255 /u lr_267
	r0_271 = CONVERT(SLICE(r1_190, word16, 0), word16, word32)
	r12_274 = r8_269 * r0_271
	r11_280 = r5_252 >>u 0x10<32> | r9_188 << 0x10<8>
	r3_281 = r8_269
	branch r11_280 >=u r12_274 l000103C2
l000103AA:
	r11_280 = r11_280 + r1_190
	r3_281 = r8_269 - 1<32>
	branch r11_280 <u r1_190 l000103C2
l000103B2:
	r9_289 = r11_280 + r1_190
	branch r11_280 >=u r12_274 l000103C2
l000103BE:
	r3_281 = r8_269 - 2<32>
	r11_280 = r9_289
l000103C2:
	r9_296 = r11_280 + r12_274
	r8_298 = r9_296 /u lr_267
	lr = r8_298 * r0_271
	r11_304 = CONVERT(SLICE(r5_252, word16, 0), word16, word32) | r9_296 << 0x10<8>
	r12_305 = r8_298
	branch r11_304 >=u lr l000103EE
l000103DC:
	r11_309 = r11_304 + r1_190
	r12_305 = r8_298 - 1<32>
	branch r11_309 <u r1_190 l000103EE
l000103E4:
	branch r11_309 >=u lr l000103EE
l000103EA_1:
	r12_305 = r8_298 - 2<32>
l000103EE:
	r12_151 = r12_305 | r3_281 << 0x10<8>
l00010262:
	r10_322 = __clz(r8)
	branch Test(EQ,r10_322 == 0<32>) l00010280
l00010268:
	r9_188 = r3_33 << r10_322
	r12_329 = r10 >>u 0x20<32> - r10_322 | r9_188
	r5_252 = r10 << r10_322
	r1_190 = r8 << r10_322
l00010280:
	lr_334 = r1_190 >>u 0x10<32>
	r8_336 = r12_329 /u lr_334
	r2_338 = CONVERT(SLICE(r1_190, word16, 0), word16, word32)
	r12_341 = r8_336 * r2_338
	r11_343 = r5_252 >>u 0x10<32> | r9_188 << 0x10<8>
	r3_344 = r8_336
	branch r11_343 >=u r12_341 l000102B6
l0001029E:
	r11_343 = r11_343 + r1_190
	r3_344 = r8_336 - 1<32>
	branch r11_343 <u r1_190 l000102B6
l000102A6:
	r9_352 = r11_343 + r1_190
	branch r11_343 >=u r12_341 l000102B6
l000102B2:
	r3_344 = r8_336 - 2<32>
	r11_343 = r9_352
l000102B6:
	r9_359 = r11_343 + r12_341
	r8_361 = r9_359 /u lr_334
	lr = r8_361 * r2_338
	r11_367 = CONVERT(SLICE(r5_252, word16, 0), word16, word32) | r9_359 << 0x10<8>
	r12_368 = r8_361
	branch r11_367 >=u lr l000102E2
l000102D0:
	r11_372 = r11_367 + r1_190
	r12_368 = r8_361 - 1<32>
	branch r11_372 <u r1_190 l000102E2
l000102D8:
	branch r11_372 >=u lr l000102E2
l000102DE_1:
	r12_368 = r8_361 - 2<32>
l000102E2:
	r12_151 = r12_368 | r3_344 << 0x10<8>
l000104C6:
	r2_180 = 0<32>
l000104CE:
	r11_425 = r2_180
	branch dwLoc2C_475 == 0<32> l000104E6
l000104DA:
	r11_425 = 0<32> - r2_180 - CONVERT(r12_151 <u 0<32>, bool, word32)
l000104E6:
	r11Out = r11_425
	lrOut = lr
	return r12_151
__avr32_sdiv64_exit:


word32 __moddi3(word32 r8, word32 r9, word32 r10, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009BC8
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
__moddi3_entry:
l000104EA:
	r3_41 = r9
	branch r11 < 0<32> l0001050C
l0001050C:
	r11 = 0<32> - r11 - CONVERT(r10 <u 0<32>, bool, word32)
	dwLoc40_468 = 0xFFFFFFFF<32>
l00010504:
	dwLoc40_468 = 0<32>
l0001051E:
	branch r9 >= 0<32> l0001052E
l00010522:
	r3_41 = 0<32> - r9 - CONVERT(r8 <u 0<32>, bool, word32)
l0001052E:
	r12_250 = r8
	r9_248 = r3_41
	r5_309 = r10
	r8_326 = r11
	branch r3_41 != 0<32> l00010670
l00010670:
	branch r3_41 <=u r11 l00010680
l00010680:
	r2_91 = __clz(r3_41)
	branch Test(NE,r2_91 == 0<32>) l000106A2
l000106A2:
	r8_94 = 0x20<32> - r2_91
	r3_99 = r8 >>u r8_94 | r3_41 << r2_91
	r9_100 = r11 >>u r8_94
	r8_102 = r9_100 /u (r3_99 >>u 0x10<32>)
	r12_106 = CONVERT(SLICE(r3_99, word16, 0), word16, word32)
	r11_109 = r10 >>u r8_94 | r11 << r2_91
	r5_111 = r8 << r2_91
	r0_112 = r10 << r2_91
	r12_113 = r8_102 * r12_106
	r10_114 = r11_109 >>u 0x10<32> | r9_100 << 0x10<8>
	r1_115 = r8_102
	branch r10_114 >=u r12_113 l00010710
l000106F8:
	r10_114 = r10_114 + r3_99
	r1_115 = r8_102 - 1<32>
	branch r10_114 <u r3_99 l00010710
l00010700:
	r9_123 = r10_114 + r3_99
	branch r10_114 >=u r12_113 l00010710
l0001070C:
	r1_115 = r8_102 - 2<32>
	r10_114 = r9_123
l00010710:
	r9_130 = r10_114 + r12_113
	r8_134 = r9_130 /u (r3_99 >>u 0x10<32>)
	lr_139 = r8_134 * r12_106
	r11_140 = CONVERT(SLICE(r11_109, word16, 0), word16, word32) | r9_130 << 0x10<8>
	r12_141 = r8_134
	branch r11_140 >=u lr_139 l0001074A
l00010732:
	r11_140 = r11_140 + r3_99
	r12_141 = r8_134 - 1<32>
	branch r11_140 <u r3_99 l0001074A
l0001073A:
	r9_150 = r11_140 + r3_99
	branch r11_140 >=u lr_139 l0001074A
l00010746:
	r12_141 = r8_134 - 2<32>
	r11_140 = r9_150
l0001074A:
	r9_r8_161 = (r12_141 | r1_115 << 0x10<8>) *u r5_111
	r9_165 = SLICE(r9_r8_161, word32, 32) (alias)
	r8_167 = SLICE(r9_r8_161, word32, 0) (alias)
	r11_164 = r11_140 + lr_139
	branch r9_165 >u r11_164 l00010766
l0001075E:
	branch r9_165 != r11_164 l00010770
l00010760:
	branch r8_167 <=u r0_112 l00010770
l00010766:
l00010770:
l00010686:
	branch r11 >u r3_41 l00010690
l0001068C:
	branch r10 <u r8 l00010698
l00010690:
l00010698:
l00010676:
l00010792:
l0001054A:
	branch r8 <=u r11 l00010576
l00010576:
	branch r8 != 0<32> l00010582
l0001057A:
	r9_248 = 1<32>
	r12_250 = 1<32> /u r8
l00010582:
	r2_252 = __clz(r12_250)
	branch Test(NE,r2_252 == 0<32>) l0001058E
l0001058E:
	r10_256 = 0x20<32> - r2_252
	r12_250 = r12_250 << r2_252
	r9_258 = r11 >>u r10_256
	lr_265 = CONVERT(SLICE(r12_250, word16, 0), word16, word32)
	r11_266 = r10 >>u r10_256 | r11 << r2_252
	r3_268 = lr_265 * (r9_258 /u (r12_250 >>u 0x10<32>))
	r9_269 = r11_266 >>u 0x10<32> | r9_258 << 0x10<8>
	branch r9_269 >=u r3_268 l000105D2
l000105C2:
	r9_269 = r9_269 + r12_250
	branch r9_269 <u r12_250 l000105D2
l000105C8:
	r8_275 = r9_269 + r12_250
	branch r9_269 >=u r3_268 l000105D2
l000105CE_1:
	r9_269 = r8_275
l000105D2:
	r9_248 = r9_269 + r3_268
	r3_288 = lr_265 * (r9_248 /u (r12_250 >>u 0x10<32>))
	r11_289 = CONVERT(SLICE(r11_266, word16, 0), word16, word32) | r9_248 << 0x10<8>
	branch r11_289 >=u r3_288 l000105F8
l000105E8:
	r11_289 = r11_289 + r12_250
	branch r11_289 <u r12_250 l000105F8
l000105EE:
	r8_296 = r11_289 + r12_250
	branch r11_289 >=u r3_288 l000105F8
l000105F4_1:
	r11_289 = r8_296
l000105F8:
	r11_302 = r11_289 + r3_288
	r5_309 = r10 << r2_252
l00010588:
	r11_302 = r11 + r12_250
l000105FE:
	lr_315 = r12_250 >>u 0x10<32>
	r8_318 = r11_302 /u lr_315
l00010550:
	r2_319 = __clz(r8)
	branch Test(EQ,r2_319 == 0<32>) l0001056C
l00010556:
	r9_248 = r11 << r2_319
	r8_326 = r10 >>u 0x20<32> - r2_319 | r9_248
	r12_250 = r8 << r2_319
	r5_309 = r10 << r2_319
l0001056C:
	lr_315 = r12_250 >>u 0x10<32>
	r8_318 = r8_326 /u lr_315
l00010606:
	r1_337 = CONVERT(SLICE(r12_250, word16, 0), word16, word32)
	r3_339 = r1_337 * r8_318
	r11_349 = r5_309 >>u 0x10<32> | r9_248 << 0x10<8>
	branch r11_349 >=u r3_339 l0001062A
l0001061A:
	r11_349 = r11_349 + r12_250
	branch r11_349 <u r12_250 l0001062A
l00010620:
	r8_355 = r11_349 + r12_250
	branch r11_349 >=u r3_339 l0001062A
l00010626_1:
	r11_349 = r8_355
l0001062A:
	r9_361 = r11_349 + r3_339
	r3_369 = r1_337 * (r9_361 /u lr_315)
	r11_370 = CONVERT(SLICE(r5_309, word16, 0), word16, word32) | r9_361 << 0x10<8>
	branch r11_370 >=u r3_369 l00010652
l00010642:
	r11_374 = r11_370 + r12_250
	branch r11_374 <u r12_250 l00010652
l00010648:
	branch r11_374 >=u r3_369 l00010652
l0001064E_1:
l00010652:
l0001079E:
	branch dwLoc40_468 == 0<32> l000107B8
l000107A6:
	r10_416 = SLICE(qwLoc2C, word32, 0) (alias)
	qwLoc2C = SEQ(0<32> - SLICE(qwLoc2C, word32, 32) - CONVERT(r10_416 <u 0<32>, bool, word32), r10_416)
l000107B8:
	return SLICE(qwLoc2C, word32, 0)
__moddi3_exit:


word64 fn000107C0(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r8Out, ptr32 & r9Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn0000B7D4
//      fn0000CA68
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r11:r10 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000107C0_entry:
l000107C0:
	r5_282 = r11
	lr_116 = r8
	r1_207 = r10
	branch r9 != 0<32> l0001096C
l0001096C:
	branch r9 >u r11 l00010A40
l00010972:
	r2_137 = __clz(r9)
	branch Test(NE,r2_137 == 0<32>) l00010986
l00010986:
	r10_47 = 0x20<32> - r2_137
	lr_50 = r8 >>u r10_47 | r9 << r2_137
	r9_52 = r11 >>u r10_47
	r8_53 = r9_52 /u (lr_50 >>u 0x10<32>)
	r5_57 = CONVERT(SLICE(lr_50, word16, 0), word16, word32)
	r11_58 = r10 >>u r10_47 | r11 << r2_137
	r3_59 = r8 << r2_137
	r12_62 = r8_53 * r5_57
	r10_63 = r11_58 >>u 0x10<32> | r9_52 << 0x10<8>
	r3_109 = r8_53
	branch r10_63 >=u r12_62 l000109E4
l000109CC:
	r10_63 = r10_63 + lr_50
	r3_109 = r8_53 - 1<32>
	branch r10_63 <u lr_50 l000109E4
l000109D4:
	r9_72 = r10_63 + lr_50
	branch r10_63 >=u r12_62 l000109E4
l000109E0:
	r3_109 = r8_53 - 2<32>
	r10_63 = r9_72
l000109E4:
	r9_79 = r10_63 + r12_62
	r8_81 = r9_79 /u (lr_50 >>u 0x10<32>)
	r5_86 = r8_81 * r5_57
	r11_101 = CONVERT(SLICE(r11_58, word16, 0), word16, word32) | r9_79 << 0x10<8>
	r12_100 = r8_81
	branch r11_101 >=u r5_86 l00010A16
l000109FE:
	r11_101 = r11_101 + lr_50
	r12_100 = r8_81 - 1<32>
	branch r11_101 <u lr_50 l00010A16
l00010A06:
	r9_96 = r11_101 + lr_50
	branch r11_101 >=u r5_86 l00010A16
l00010A12:
	r12_100 = r8_81 - 2<32>
	r11_101 = r9_96
l00010A16:
	r12_110 = r12_100 | r3_109 << 0x10<8>
	r9_r8_111 = r12_110 *u r3_59
	r9_115 = SLICE(r9_r8_111, word32, 32) (alias)
	r8 = SLICE(r9_r8_111, word32, 0) (alias)
	r11_114 = r11_101 + r5_86
	lr_116 = r9_115
	r9 = r8
	branch r9_115 >u r11_114 l00010A3A
l00010A2E:
	branch r9_115 != r11_114 l00010A3C
l00010A30:
	r8 = r10 << r2_137
	branch r8 <=u r8 l00010A3C
l00010A3A:
	r12_110 = r12_110 - 1<32>
l00010978:
	branch r11 >u r9 l00010982
l0001097E:
	branch r10 <u r8 l00010A40
l00010A40:
	r12_110 = 0<32>
	r2_137 = 0<32>
l00010982:
	r12_110 = 1<32>
l000107D4:
	branch r8 <=u r11 l00010860
l00010860:
	branch r8 != 0<32> l0001086C
l00010864:
	r9 = 1<32>
	lr_116 = 1<32> /u r8
l0001086C:
	r2_147 = __clz(lr_116)
	branch Test(NE,r2_147 == 0<32>) l0001087A
l0001087A:
	r10_151 = 0x20<32> - r2_147
	lr_116 = lr_116 << r2_147
	r9_153 = r11 >>u r10_151
	r8_155 = r9_153 /u (lr_116 >>u 0x10<32>)
	r5_160 = CONVERT(SLICE(lr_116, word16, 0), word16, word32)
	r11_161 = r10 >>u r10_151 | r11 << r2_147
	r12_163 = r8_155 * r5_160
	r10_164 = r11_161 >>u 0x10<32> | r9_153 << 0x10<8>
	r3_165 = r8_155
	branch r10_164 >=u r12_163 l000108C8
l000108B0:
	r10_164 = r10_164 + lr_116
	r3_165 = r8_155 - 1<32>
	branch r10_164 <u lr_116 l000108C8
l000108B8:
	r9_173 = r10_164 + lr_116
	branch r10_164 >=u r12_163 l000108C8
l000108C4:
	r3_165 = r8_155 - 2<32>
	r10_164 = r9_173
l000108C8:
	r9 = r10_164 + r12_163
	r8_182 = r9 /u (lr_116 >>u 0x10<32>)
	r5_187 = r8_182 * r5_160
	r11_188 = CONVERT(SLICE(r11_161, word16, 0), word16, word32) | r9 << 0x10<8>
	r12_189 = r8_182
	branch r11_188 >=u r5_187 l000108FA
l000108E2:
	r11_188 = r11_188 + lr_116
	r12_189 = r8_182 - 1<32>
	branch r11_188 <u lr_116 l000108FA
l000108EA:
	r9 = r11_188 + lr_116
	branch r11_188 >=u r5_187 l000108FA
l000108F6:
	r12_189 = r8_182 - 2<32>
	r11_188 = r9
l000108FA:
	r1_207 = r10 << r2_147
	r11_210 = r11_188 + r5_187
	r2_137 = r12_189 | r3_165 << 0x10<8>
l00010872:
	r11_210 = r11 + lr_116
	r2_137 = 1<32>
l00010904:
	r3_222 = lr_116 >>u 0x10<32>
	r8_224 = r11_210 /u r3_222
	r0_226 = CONVERT(SLICE(lr_116, word16, 0), word16, word32)
	r12_229 = r8_224 * r0_226
	r11_233 = r1_207 >>u 0x10<32> | r9 << 0x10<8>
	r5_234 = r8_224
	branch r11_233 >=u r12_229 l0001093A
l00010922:
	r11_233 = r11_233 + lr_116
	r5_234 = r8_224 - 1<32>
	branch r11_233 <u lr_116 l0001093A
l0001092A:
	r9_242 = r11_233 + lr_116
	branch r11_233 >=u r12_229 l0001093A
l00010936:
	r5_234 = r8_224 - 2<32>
	r11_233 = r9_242
l0001093A:
	r9 = r11_233 + r12_229
	r8 = r9 /u r3_222
	r3_256 = r8 * r0_226
	r11_257 = CONVERT(SLICE(r1_207, word16, 0), word16, word32) | r9 << 0x10<8>
	r12_258 = r8
	branch r11_257 >=u r3_256 l00010966
l00010954:
	r11_262 = r11_257 + lr_116
	r12_258 = r8 - 1<32>
	branch r11_262 <u lr_116 l00010966
l0001095C:
	r8 = r8 - 2<32>
	branch r11_262 >=u r3_256 l00010966
l00010962_1:
	r12_258 = r8 - 2<32>
l00010966:
	r12_110 = r12_258 | r5_234 << 0x10<8>
l000107DA:
	r12_275 = __clz(r8)
	branch Test(EQ,r12_275 == 0<32>) l000107F8
l000107E0:
	r9 = r11 << r12_275
	r5_282 = r10 >>u 0x20<32> - r12_275 | r9
	r1_207 = r10 << r12_275
	lr_116 = r8 << r12_275
l000107F8:
	r3_287 = lr_116 >>u 0x10<32>
	r8_289 = r5_282 /u r3_287
	r2_291 = CONVERT(SLICE(lr_116, word16, 0), word16, word32)
	r12_294 = r8_289 * r2_291
	r11_296 = r1_207 >>u 0x10<32> | r9 << 0x10<8>
	r5_297 = r8_289
	branch r11_296 >=u r12_294 l0001082E
l00010816:
	r11_296 = r11_296 + lr_116
	r5_297 = r8_289 - 1<32>
	branch r11_296 <u lr_116 l0001082E
l0001081E:
	r9_305 = r11_296 + lr_116
	branch r11_296 >=u r12_294 l0001082E
l0001082A:
	r5_297 = r8_289 - 2<32>
	r11_296 = r9_305
l0001082E:
	r9 = r11_296 + r12_294
	r8 = r9 /u r3_287
	r3_319 = r8 * r2_291
	r11_320 = CONVERT(SLICE(r1_207, word16, 0), word16, word32) | r9 << 0x10<8>
	r12_321 = r8
	branch r11_320 >=u r3_319 l0001085A
l00010848:
	r11_325 = r11_320 + lr_116
	r12_321 = r8 - 1<32>
	branch r11_325 <u lr_116 l0001085A
l00010850:
	r8 = r8 - 2<32>
	branch r11_325 >=u r3_319 l0001085A
l00010856_1:
	r12_321 = r8 - 2<32>
l0001085A:
	r12_110 = r12_321 | r5_297 << 0x10<8>
l00010A3C:
	r2_137 = 0<32>
l00010A44:
	r8Out = r8
	r9Out = r9
	lrOut = lr_116
	return SEQ(r2_137, r12_110)
fn000107C0_exit:


word64 fn00010A4C(word64 r11_r10, word32 r8, word32 r9)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn0000B7D4
// MayUse:  r8:[0..31] r9:[0..31] Sequence r11:r10:[0..63]
// LiveOut: r11:r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00010A4C_entry:
	r10 = SLICE(r11_r10, word32, 0)
	r11 = SLICE(r11_r10, word32, 32)
l00010A4C:
	dwLoc2C_434 = r10
	lr_203 = r8
	r1_185 = r11
	branch r9 != 0<32> l00010BD0
l00010BD0:
	branch r9 <=u r11 l00010BE0
l00010BE0:
	r0_51 = __clz(r9)
	branch Test(NE,r0_51 == 0<32>) l00010C0A
l00010C0A:
	r11_54 = 0x20<32> - r0_51
	lr_57 = r8 >>u r11_54 | r9 << r0_51
	r9_59 = r11 >>u r11_54
	r8_60 = r9_59 /u (lr_57 >>u 0x10<32>)
	r5_67 = CONVERT(SLICE(lr_57, word16, 0), word16, word32)
	r11_68 = r10 >>u r11_54 | r11 << r0_51
	r1_70 = r8 << r0_51
	r2_71 = r10 << r0_51
	r12_72 = r8_60 * r5_67
	r10_73 = r11_68 >>u 0x10<32> | r9_59 << 0x10<8>
	r3_116 = r8_60
	branch r10_73 >=u r12_72 l00010C74
l00010C5C:
	r10_73 = r10_73 + lr_57
	r3_116 = r8_60 - 1<32>
	branch r10_73 <u lr_57 l00010C74
l00010C64:
	r9_82 = r10_73 + lr_57
	branch r10_73 >=u r12_72 l00010C74
l00010C70:
	r3_116 = r8_60 - 2<32>
	r10_73 = r9_82
l00010C74:
	r9_92 = r10_73 + r12_72
	r8_93 = r9_92 /u (lr_57 >>u 0x10<32>)
	r5_98 = r8_93 * r5_67
	r11_104 = CONVERT(SLICE(r11_68, word16, 0), word16, word32) | r9_92 << 0x10<8>
	r12_100 = r8_93
	branch r11_104 >=u r5_98 l00010CAA
l00010C92:
	r11_104 = r11_104 + lr_57
	r12_100 = r8_93 - 1<32>
	branch r11_104 <u lr_57 l00010CAA
l00010C9A:
	r9_109 = r11_104 + lr_57
	branch r11_104 >=u r5_98 l00010CAA
l00010CA6:
	r12_100 = r8_93 - 2<32>
	r11_104 = r9_109
l00010CAA:
	r9_r8_120 = (r12_100 | r3_116 << 0x10<8>) *u r1_70
	r9_124 = SLICE(r9_r8_120, word32, 32) (alias)
	r8_126 = SLICE(r9_r8_120, word32, 0) (alias)
	r11_123 = r11_104 + r5_98
	r12_125 = r9_124
	r9_127 = r8_126
	branch r9_124 >u r11_123 l00010CC6
l00010CBE:
	branch r9_124 != r11_123 l00010CD0
l00010CC0:
	branch r8_126 <=u r2_71 l00010CD0
l00010CC6:
	r10_137 = r8_126 + r1_70
	r12_125 = r9_124 - lr_57 - CONVERT(r10_137 <u 0<32>, bool, word32)
	r9_127 = r10_137
l00010CD0:
	r8_156 = r2_71 + r9_127
	r10_162 = r11_123 - r12_125 - CONVERT(r8_156 <u 0<32>, bool, word32)
	r10_171 = r10_162 >>u r0_51
	dwLoc34_442 = r8_156 >>u r0_51 | r10_162 << r11_54
l00010BE6:
	branch r11 >u r9 l00010BF0
l00010BEC:
	branch r10 <u r8 l00010BFC
l00010BF0:
	r4_180 = r10 + r8
	r1_185 = r11 - r9 - CONVERT(r4_180 <u 0<32>, bool, word32)
	dwLoc2C_434 = r4_180
l00010BFC:
	qwLoc38_460 = SEQ(r1_185, dwLoc2C_434) (alias)
l00010BD6:
	qwLoc38_460 = r11_r10 (alias)
l00010A70:
	branch r8 <=u r11 l00010AD8
l00010AD8:
	branch r8 != 0<32> l00010AE4
l00010ADC:
	r9 = 1<32>
	lr_203 = 1<32> /u r8
l00010AE4:
	r0_205 = __clz(lr_203)
	branch Test(NE,r0_205 == 0<32>) l00010AF0
l00010AF0:
	r10_209 = 0x20<32> - r0_205
	lr_203 = lr_203 << r0_205
	r9_211 = r11 >>u r10_209
	r5_218 = CONVERT(SLICE(lr_203, word16, 0), word16, word32)
	r11_219 = r10 >>u r10_209 | r11 << r0_205
	r12_221 = r5_218 * (r9_211 /u (lr_203 >>u 0x10<32>))
	r9_222 = r11_219 >>u 0x10<32> | r9_211 << 0x10<8>
	branch r9_222 >=u r12_221 l00010B34
l00010B24:
	r9_222 = r9_222 + lr_203
	branch r9_222 <u lr_203 l00010B34
l00010B2A:
	r8_228 = r9_222 + lr_203
	branch r9_222 >=u r12_221 l00010B34
l00010B30_1:
	r9_222 = r8_228
l00010B34:
	r9 = r9_222 + r12_221
	r12_241 = r5_218 * (r9 /u (lr_203 >>u 0x10<32>))
	r11_242 = CONVERT(SLICE(r11_219, word16, 0), word16, word32) | r9 << 0x10<8>
	branch r11_242 >=u r12_241 l00010B5A
l00010B4A:
	r11_242 = r11_242 + lr_203
	branch r11_242 <u lr_203 l00010B5A
l00010B50:
	r8_249 = r11_242 + lr_203
	branch r11_242 >=u r12_241 l00010B5A
l00010B56_1:
	r11_242 = r8_249
l00010B5A:
	r11_255 = r11_242 + r12_241
	dwLoc2C_434 = r10 << r0_205
l00010AEA:
	r11_255 = r11 + lr_203
l00010B68:
	r5_273 = lr_203 >>u 0x10<32>
	r3_277 = CONVERT(SLICE(lr_203, word16, 0), word16, word32)
	r12_282 = r3_277 * (r11_255 /u r5_273)
	r11_286 = dwLoc2C_434 >>u 16<i32> | r9 << 0x10<8>
	branch r11_286 >=u r12_282 l00010B96
l00010B86:
	r11_286 = r11_286 + lr_203
	branch r11_286 <u lr_203 l00010B96
l00010B8C:
	r8_292 = r11_286 + lr_203
	branch r11_286 >=u r12_282 l00010B96
l00010B92_1:
	r11_286 = r8_292
l00010B96:
	r9_298 = r11_286 + r12_282
	r8_301 = r9_298 /u r5_273
	r10_306 = CONVERT(SLICE(dwLoc2C_434, word16, 0), word16, word32)
l00010A76:
	r0_205 = __clz(r8)
	branch Test(EQ,r0_205 == 0<32>) l00010A98
l00010A7C:
	r9 = r11 << r0_205
	r1_185 = r10 >>u 0x20<32> - r0_205 | r9
	lr_203 = r8 << r0_205
	dwLoc2C_434 = r10 << r0_205
l00010A98:
	r5_321 = lr_203 >>u 0x10<32>
	r3_277 = CONVERT(SLICE(lr_203, word16, 0), word16, word32)
	r12_330 = r3_277 * (r1_185 /u r5_321)
	r11_332 = dwLoc2C_434 >>u 16<i32> | r9 << 0x10<8>
	branch r11_332 >=u r12_330 l00010AC6
l00010AB6:
	r11_332 = r11_332 + lr_203
	branch r11_332 <u lr_203 l00010AC6
l00010ABC:
	r8_338 = r11_332 + lr_203
	branch r11_332 >=u r12_330 l00010AC6
l00010AC2_1:
	r11_332 = r8_338
l00010AC6:
	r9_298 = r11_332 + r12_330
	r8_301 = r9_298 /u r5_321
	r10_306 = CONVERT(SLICE(dwLoc2C_434, word16, 0), word16, word32)
l00010BA6:
	r12_358 = r3_277 * r8_301
	r11_361 = r10_306 | r9_298 << 0x10<8>
	branch r11_361 >=u r12_358 l00010BC2
l00010BB2:
	r11_361 = r11_361 + lr_203
	branch r11_361 <u lr_203 l00010BC2
l00010BB8:
	r8_370 = r11_361 + lr_203
	branch r11_361 >=u r12_358 l00010BC2
l00010BBE_1:
	r11_361 = r8_370
l00010BC2:
	r10_171 = 0<32>
	dwLoc34_442 = r11_361 + r12_358 >>u r0_205
l00010CEE:
	qwLoc38_460 = SEQ(r10_171, dwLoc34_442) (alias)
l00010CF2:
	return qwLoc38_460
fn00010A4C_exit:


bool fn00010CFC(word64 r11_r10, word64 r9_r8, word32 pc, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      fn0000F278
// MayUse:  pc:[0..31] Sequence r11:r10:[0..63] Sequence r9:r8:[0..63]
// LiveOut: Z lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00010CFC_entry:
l00010CFC:
	Mem24[&tLoc1C:word64] = r11_r10
	Mem31[&tLoc24:word64] = r9_r8
	fn00010D38(fp - 0x38<32>, &tLoc1C, pc)
	lr_46 = fn00010D38(fp - 0x4C<32>, &tLoc24, pc)
	branch dwLoc38 >u 1<32> l00010D2A
l00010D2A:
	r12_62 = CONVERT(dwLoc4C <=u 1<32>, bool, word32)
l00010D26:
	r12_62 = 1<32>
l00010D30:
	r12Out = r12_62
	lrOut = lr_46
	return SLICE(cond(fp - 0x14<32>), bool, 1)
fn00010CFC_exit:


word32 fn00010D38(word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010CFC
// MayUse:  pc:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 sp
fn00010D38_entry:
l00010D38:
	r3_r2_19 = Mem17[r12:word64]
	r3_22 = SLICE(r3_r2_19, word32, 32) (alias)
	r9_r8_30 = Mem17[pc + 160<i32>:word64]
	Mem31[r11 + 4<i32>:word32] = CONVERT(SLICE(r3_22 >>u 0x1F<32>, bool, 0), bool, word32)
	lr_28 = CONVERT(SLICE(r3_22 >>u 0x14<32>, word11, 0), word11, word32)
	r2_34 = SLICE(r3_r2_19, word32, 0) & SLICE(r9_r8_30, word32, 0)
	r3_36 = r3_22 & SLICE(r9_r8_30, word32, 32)
	branch lr_28 != 0<32> l00010DA0
l00010DA0:
	branch lr_28 != 0x7FF<32> l00010DCC
l00010DCC:
	r11_r10_41 = Mem31[pc + 60<i32>:word64]
	Mem51[r11 + 12<i32>:word64] = SEQ(r3_36 << 8<32> | r2_34 << 0x18<8>, SLICE(r11_r10_41, word32, 0)) | SEQ(SLICE(r11_r10_41, word32, 32), r2_34 << 8<8>)
	Mem53[r11 + 8<i32>:word32] = lr_28 - 0x3FF<32>
	r8_123 = 3<32>
l00010DA6:
	branch r3_36 != SLICE(cond(r2_34 - 0<32>), bool, 0) l00010DB0
l00010DB0:
	r9_r8_58 = Mem31[pc + 80<i32>:word64]
	branch (SLICE(r9_r8_58, word32, 32) & r3_36) == SLICE(cond((SLICE(r9_r8_58, word32, 0) & r2_34) - 0<32>), bool, 0) l00010DC2
l00010DC2:
	r8_67 = 0<32>
l00010DBE:
	r8_67 = 1<32>
l00010DC4:
	Mem71[r11:word32] = r8_67
	Mem75[r11 + 12<i32>:word64] = SEQ(r3_36, r2_34)
	return
l00010DAC:
	r8_123 = 4<32>
l00010D5E:
	branch r3_36 != SLICE(cond(r2_34 - 0<32>), bool, 0) l00010D68
l00010D68:
	Mem89[r11 + 8<i32>:word32] = 0xFFFFFC02<32>
	Mem94[r11:word32] = 3<32>
	r11_r10_135 = SEQ(r3_36 << 8<32> | r2_34 << 0x18<8>, r2_34 << 8<32>) (alias)
l00010D8C:
	r9_r8_97 = Mem96[pc + 108<i32>:word64]
	branch SLICE(r11_r10_135 - r9_r8_97, word32, 32) <=u SLICE(cond(SLICE(r11_r10_135, word32, 0) - SLICE(r9_r8_97, word32, 0)), bool, 0) l00010D80
l00010D80:
	Mem114[r11 + 8<i32>:word32] = Mem96[r11 + 8<i32>:word32] - 1<32>
	r11_r10_135 = r11_r10_135 * 2<64>
l00010D9A:
	Mem116[r11 + 12<i32>:word64] = r11_r10_135
	return
l00010D64:
	r8_123 = 2<32>
l00010DEA:
	Mem126[r11:word32] = r8_123
	return
fn00010D38_exit:


void fn00010E10(word32 r4, word32 r5, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: VNZC lr r8
// Preserved: r4 r5 r6 r7 sp
fn00010E10_entry:
l00010E10:
	r6_19 = 0x00010E14<p32> - Mem17[0x00010E2E<p32>:word32]
	r7_21 = Mem17[r6_19 + 600<i32>:word32] - 4<32>
l00010E22:
	r8_25 = Mem17[r7_21:word32]
	r7_26 = r7_21 - 4<32>
	branch r8_25 != 0xFFFFFFFF<32> l00010E20
l00010E20:
	call r8_25 (retsize: 0;)
		uses: lr:lr_32,Mem:Mem17,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_26
		defs: lr:lr_39,r4:r4_35,r5:r5_36,r6:r6_37,r7:r7_38
l00010E2A:
	return
fn00010E10_exit:


