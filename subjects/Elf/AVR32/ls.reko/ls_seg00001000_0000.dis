void _start(word32 r4, word32 r5, word32 r12, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31] r4:[0..31] r5:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r6 r7 r8 r9
// Preserved: sp
_start_entry:
l0000269C:
	word32 r6_16 = 0x000026AA<p32> - Mem14[0x000026BC<p32>:word32]
	word32 r7_22
	word32 lr_23
	word32 pc_30
	byte VNZC_31
	call Mem14[r6_16 + 480<i32>:word32] (retsize: 0;)
		uses: lr:0<32>,r10:fp + 4<i32>,r11:dwArg00,r12:0x00005574<p32>,r4:r4,r5:r5,r6:r6_16,r7:0<32>,r8:Mem14[r6_16 + 456<i32>:word32],r9:0x000026D8<p32>,Stack +0000:r12,Stack +0004:fp + 4<i32>
		defs: lr:lr_23,pc:pc_30,r7:r7_22,VNZC:VNZC_31
	branch SLICE(VNZC_31, bool, 3) l000026BC_thunk_fn000026C0
l000026BC_thunk_fn000026C0:
	fn000026C0(r4, r5, r7_22, lr_23)
	return
l000026BC_1:
	word32 lr_43 = CONVERT(Mem14[pc_30 + 186<i32>:int8], int8, int32)
l000026BC_thunk_fn000026C0:
	fn000026C0(r4, r5, r7_22, lr_43)
	return
_start_exit:


void fn000026C0(word32 r4, word32 r5, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      _start
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000026C0_entry:
l000026C0:
	word32 r6_19 = 0x000026C4<p32> - Mem17[0x000026F6<p32>:word32]
	branch Mem17[Mem17[r6_19 + 388<i32>:word32]:byte] == 0<8> l000026DA
l000026DA:
	word32 r10_27 = Mem26[r6_19 + 1308<i32>:word32]
	word32 r8_28 = Mem26[r10_27:word32]
	word32 r8_30 = Mem26[r8_28:word32]
	branch r8_30 != 0<32> l000026D6
l000026D6:
	Mem33[r10_27:word32] = r8_28 + 4<32>
	word32 r10_47
	call r8_30 (retsize: 0;)
		uses: lr:lr_37,r10:r10_47,r4:r4_34,r5:r5_35,r6:r6_25,r7:r7_36
		defs: lr:lr_44,r10:r10_47,r4:r4_40,r5:r5_41,r6:r6_42,r7:r7_43
l000026EA:
	Mem51[Mem26[r6_19 + 388<i32>:word32]:byte] = 1<8>
	return
l000026D4:
	return
fn000026C0_exit:


void fn000026F8(word32 r4, word32 r5, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r12 r8
// Preserved: r4 r5 r6 r7 sp
fn000026F8_entry:
l000026F8:
	word32 r6_19 = 0x000026FC<p32> - Mem17[0x00002716<p32>:word32]
	branch Mem17[Mem17[r6_19 + 1312<i32>:word32]:word32] == 0<32> l00002712
l00002708:
	word32 r8_24 = Mem17[r6_19 + 400<i32>:word32]
	branch r8_24 == 0<32> l00002712
l00002710:
	call r8_24 (retsize: 0;)
		uses: lr:lr,r4:r4,r5:r5,r6:r6_19,r7:r7
l00002712:
	return
fn000026F8_exit:


void fn00002718()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004968
// MayUse: 
// LiveOut:
// Trashed: VNZC r10 r8
// Preserved: sp
fn00002718_entry:
l00002718:
	return
fn00002718_exit:


void fn0000272E()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004968
// MayUse: 
// LiveOut:
// Trashed: VNZC r8
// Preserved: sp
fn0000272E_entry:
l0000272E:
	return
fn0000272E_exit:


byte fn00002744(word32 r9, word32 r11, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000027FC
//      fn00002824
//      fn0000284C
//      fn00004968
// MayUse:  r11:[0..31] r9:[0..31]
// LiveOut: VNZ lr
// Trashed: VNZC lr r12 r8
// Preserved: sp
fn00002744_entry:
l00002744:
	branch r11 >= r9 l0000274E
l0000274E:
	branch r11 > r9 l00002758
l00002754_1:
l00002758:
	branch r11 <= r9 l0000275C
l00002758_1:
l0000275C:
	lrOut = <invalid>
	return <invalid>
l0000274C:
	lrOut = <invalid>
	return <invalid>
fn00002744_exit:


word32 fn000027D8(word32 r12, ptr32 & r9Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003168
// MayUse:  r12:[0..31]
// LiveOut: r8 r9
// Trashed: VNZC r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000027D8_entry:
l000027D8:
	word32 r9_20 = Mem17[0x000027DC<p32> - Mem17[0x000027FA<p32>:word32] + 8<i32>:word32]
	branch r12 == 0<32> l000027EA
l000027EA:
	word32 r8_24 = Mem17[r9_20 + 8<i32>:word32]
	branch r8_24 != 0<32> l000027F4
l000027F0:
	Mem28[r9_20 + 8<i32>:word32] = 1<32>
	r8_24 = 1<32>
l000027F4:
	r9Out = <invalid>
	return r8_24
l000027E4:
	Mem37[r9_20 + 8<i32>:word32] = 2<32>
	r9Out = <invalid>
	return 2<32>
fn000027D8_exit:


void fn000027FC(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000027FC_entry:
l000027FC:
	word32 r6_31 = 0x00002800<p32> - Mem29[0x0000281E<p32>:word32]
	word32 r2_34 = Mem29[r11 + -36<i32>:word32]
	word32 r3_35 = Mem29[r11 + -40<i32>:word32]
	word32 lr_45
	fn00002744(Mem29[r12 + -40<i32>:word32], r3_35, out lr_45)
	bool Z_50 = <invalid>
	branch Z_50 l0000281E
l00002818:
	call r10 (retsize: 0;)
		uses: lr:lr_45,r0:r0,r1:r1,r10:r2_34,r11:Mem29[r11:word32],r12:Mem29[r12:word32],r2:r2_34,r3:r3_35,r4:r10,r5:r12,r6:r6_31,r7:r11
l0000281E:
	return
fn000027FC_exit:


void fn00002824(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00002824_entry:
l00002824:
	word32 r6_31 = 0x00002828<p32> - Mem29[0x00002846<p32>:word32]
	word32 r2_34 = Mem29[r11 + -44<i32>:word32]
	word32 r3_35 = Mem29[r11 + -48<i32>:word32]
	word32 lr_45
	fn00002744(Mem29[r12 + -48<i32>:word32], r3_35, out lr_45)
	bool Z_50 = <invalid>
	branch Z_50 l00002846
l00002840:
	call r10 (retsize: 0;)
		uses: lr:lr_45,r0:r0,r1:r1,r10:r2_34,r11:Mem29[r11:word32],r12:Mem29[r12:word32],r2:r2_34,r3:r3_35,r4:r10,r5:r12,r6:r6_31,r7:r11
l00002846:
	return
fn00002824_exit:


void fn0000284C(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000284C_entry:
l0000284C:
	word32 r6_31 = 0x00002850<p32> - Mem29[0x0000286E<p32>:word32]
	word32 r2_34 = Mem29[r11 + -52<i32>:word32]
	word32 r3_35 = Mem29[r11 + -56<i32>:word32]
	word32 lr_45
	fn00002744(Mem29[r12 + -56<i32>:word32], r3_35, out lr_45)
	bool Z_50 = <invalid>
	branch Z_50 l0000286E
l00002868:
	call r10 (retsize: 0;)
		uses: lr:lr_45,r0:r0,r1:r1,r10:r2_34,r11:Mem29[r11:word32],r12:Mem29[r12:word32],r2:r2_34,r3:r3_35,r4:r10,r5:r12,r6:r6_31,r7:r11
l0000286E:
	return
fn0000284C_exit:


void fn00002874(word32 r6, word32 r7, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002874_entry:
l00002874:
	word64 r5_r4_19 = Mem17[r11 + 52<i32>:word64]
	word64 r9_r8_22 = Mem17[r12 + 52<i32>:word64]
	word32 r4_23 = SLICE(r5_r4_19, word32, 0)
	word32 r8_24 = SLICE(r9_r8_22, word32, 0)
	word32 r5_26 = SLICE(r5_r4_19, word32, 32)
	word32 r9_27 = SLICE(r9_r8_22, word32, 32)
	branch r5_26 - r9_27 >= SLICE(cond(r4_23 - r8_24), bool, 0) l0000288A
l0000288A:
	branch CONVERT(r5_26 - r9_27 > SLICE(cond(r4_23 - r8_24), bool, 0), bool, word32) != 0<32> l0000289C
l00002896:
	call r10 (retsize: 0;)
		uses: lr:r12,r10:r10,r11:Mem17[r11:word32],r12:Mem17[r12:word32],r4:r4_23,r5:r5_26,r6:r6,r7:r7
l0000289C:
	return
l00002888:
	return
fn00002874_exit:


void fn0000289E(word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: lr r10 r11 r12
// Preserved: sp
fn0000289E_entry:
l0000289E:
	call r10 (retsize: 0;)
		uses: lr:lr,r10:r10,r11:Mem5[r11:word32],r12:Mem5[r12:word32],Stack +0000:lr
	return
fn0000289E_exit:


word32 fn00002A4C()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000393C
// MayUse: 
// LiveOut: r10
// Trashed: VNZC r10 r11 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002A4C_entry:
l00002A4C:
	word32 r8_21 = Mem17[0x00002A50<p32> - Mem17[0x00002A6A<p32>:word32] + 8<i32>:word32]
	word32 r10_22 = 0<32>
	word32 r9_23 = Mem17[r8_21 + 20<i32>:word32]
	word32 r11_24 = Mem17[r8_21 + 12<i32>:word32]
	word32 r8_25 = Mem17[r8_21 + 16<i32>:word32]
l00002A64:
	branch r10_22 != r11_24 l00002A5E
l00002A5E:
	Mem32[r8_25:word32] = r9_23
	r8_25 = r8_25 + 4<i32>
	r10_22 = r10_22 + 1<32>
	r9_23 = r9_23 + 0x7C<32>
l00002A68:
	return r10_22
fn00002A4C_exit:


word32 fn00002A70(word32 r10, word32 r11, word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002DB4
//      fn00004374
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r11 r12
// Trashed: VNZC r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002A70_entry:
l00002A70:
	word32 r8_26
	word32 r6_19 = 0x00002A74<p32> - Mem17[0x00002B2E<p32>:word32]
	branch r12 == 0<32> l00002A88
l00002A88:
	r8_26 = CONVERT(r10 == 5<32>, bool, word32)
l00002A7A:
	r8_26 = CONVERT((r11 & 0xF000<32>) == 0x8000<32>, bool, word32)
l00002A8C:
	branch r8_26 == 0<32> l00002AA6
l00002AA6:
	word32 r9_46
	branch r12 == 0<32> l00002AB8
l00002AB8:
	r9_46 = CONVERT(r10 == 3<32>, bool, word32) | CONVERT(r10 == 9<32>, bool, word32)
l00002AAA:
	r9_46 = CONVERT((r11 & 0xF000<32>) == 0x4000<32>, bool, word32)
l00002AC2:
	branch r9_46 == 0<32> l00002ACA
l00002ACA:
	branch Mem17[Mem17[r6_19 + 8<i32>:word32] + 24<i32>:word32] == 1<32> l00002B2A
l00002AD2:
	word32 r8_71
	branch r12 == 0<32> l00002AE4
l00002AE4:
	r8_71 = CONVERT(r10 == 6<32>, bool, word32)
l00002AD6:
	r8_71 = CONVERT((r11 & 0xF000<32>) == 0xA000<32>, bool, word32)
l00002AE8:
	branch r8_71 == 0<32> l00002AF0
l00002AF0:
	word32 r8_87
	branch r12 == 0<32> l00002B02
l00002B02:
	r8_87 = CONVERT(r10 == 1<32>, bool, word32)
l00002AF4:
	r8_87 = CONVERT((r11 & 0xF000<32>) == 0x1000<32>, bool, word32)
l00002B06:
	branch r8_87 == 0<32> l00002B0E
l00002B0E:
	word32 r8_103
	branch r12 == 0<32> l00002B1E
l00002B1E:
	r8_103 = CONVERT(r10 == 7<32>, bool, word32)
l00002B12:
	r11 = r11 & 0xF000<32>
	r8_103 = CONVERT((r11 & 0xF000<32>) == 0xC000<32>, bool, word32)
l00002B22:
	branch r8_103 == 0<32> l00002B2A
l00002B26:
	r12Out = 0x3D<32>
	return r11
l00002B0A:
	r12Out = 0x7C<32>
	return r11
l00002AEC:
	r12Out = 0x40<32>
	return r11
l00002AC6:
	r12Out = 0x2F<32>
	return r11
l00002A90:
	branch r12 == 0<32> l00002B2A
l00002A94:
	branch Mem17[Mem17[r6_19 + 8<i32>:word32] + 24<i32>:word32] != 3<32> l00002B2A
l00002A9C:
	r11 = r11 & 0x49<32>
	branch (r11 & 0x49<32>) == 0<32> l00002B2A
l00002B2A:
	r12Out = r12
	return r11
l00002AA2:
	r12Out = 0x2A<32>
	return r11 & 0x49<32>
fn00002A70_exit:


word32 fn00002B30(word32 r5, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006CAC
// MayUse:  lr:[0..31] r12:[0..31] r5:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00002B30_entry:
l00002B30:
	word32 lr_428
	word32 r7_419
	word32 r5_417
	word32 r6_418
	word32 r4_416
	word32 r6_19 = 0x00002B34<p32> - Mem17[0x00002B56<p32>:word32]
	word32 r7_22 = Mem17[r6_19 + 328<i32>:word32]
	branch r12 == 0<32> l00002B58
l00002B58:
	word32 r8_26 = Mem17[r7_22:word32]
	word32 r4_30
	word32 r6_32
	word32 r7_33
	word32 lr_34
	call Mem28[r6_19 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr,r12:Mem17[r6_19 + 1300<i32>:word32],r4:r12,r5:r5,r6:r6_19,r7:r7_22,r8:r8_26,Stack +0000:r8_26
		defs: lr:lr_34,r4:r4_30,r6:r6_32,r7:r7_33
	word32 r5_40 = Mem28[r6_32 + 40<i32>:word32]
	word32 r4_44
	word32 r5_45
	word32 r6_46
	word32 r7_47
	word32 lr_48
	call Mem28[r6_32 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_34,r11:Mem28[r5_40:word32],r12:Mem28[r6_32 + 1296<i32>:word32],r4:r4_30,r5:r5_40,r6:r6_32,r7:r7_33
		defs: lr:lr_48,r4:r4_44,r5:r5_45,r6:r6_46,r7:r7_47
	word32 r4_57
	word32 r5_58
	word32 r6_59
	word32 r7_60
	word32 lr_61
	call Mem28[r6_46 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_48,r11:Mem28[r5_45:word32],r12:Mem28[r6_46 + 1292<i32>:word32],r4:r4_44,r5:r5_45,r6:r6_46,r7:r7_47
		defs: lr:lr_61,r4:r4_57,r5:r5_58,r6:r6_59,r7:r7_60
	word32 r4_70
	word32 r5_71
	word32 r6_72
	word32 r7_73
	word32 lr_74
	call Mem28[r6_59 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_61,r11:Mem28[r5_58:word32],r12:Mem28[r6_59 + 1288<i32>:word32],r4:r4_57,r5:r5_58,r6:r6_59,r7:r7_60
		defs: lr:lr_74,r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73
	word32 r4_83
	word32 r5_84
	word32 r6_85
	word32 r7_86
	word32 lr_87
	call Mem28[r6_72 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_74,r11:Mem28[r5_71:word32],r12:Mem28[r6_72 + 1284<i32>:word32],r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73
		defs: lr:lr_87,r4:r4_83,r5:r5_84,r6:r6_85,r7:r7_86
	word32 r4_96
	word32 r5_97
	word32 r6_98
	word32 r7_99
	word32 lr_100
	call Mem28[r6_85 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_87,r11:Mem28[r5_84:word32],r12:Mem28[r6_85 + 1280<i32>:word32],r4:r4_83,r5:r5_84,r6:r6_85,r7:r7_86
		defs: lr:lr_100,r4:r4_96,r5:r5_97,r6:r6_98,r7:r7_99
	word32 r4_109
	word32 r5_110
	word32 r6_111
	word32 r7_112
	word32 lr_113
	call Mem28[r6_98 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_100,r11:Mem28[r5_97:word32],r12:Mem28[r6_98 + 1276<i32>:word32],r4:r4_96,r5:r5_97,r6:r6_98,r7:r7_99
		defs: lr:lr_113,r4:r4_109,r5:r5_110,r6:r6_111,r7:r7_112
	word32 r4_122
	word32 r5_123
	word32 r6_124
	word32 r7_125
	word32 lr_126
	call Mem28[r6_111 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_113,r11:Mem28[r5_110:word32],r12:Mem28[r6_111 + 1272<i32>:word32],r4:r4_109,r5:r5_110,r6:r6_111,r7:r7_112
		defs: lr:lr_126,r4:r4_122,r5:r5_123,r6:r6_124,r7:r7_125
	word32 r4_135
	word32 r5_136
	word32 r6_137
	word32 r7_138
	word32 lr_139
	call Mem28[r6_124 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_126,r11:Mem28[r5_123:word32],r12:Mem28[r6_124 + 1268<i32>:word32],r4:r4_122,r5:r5_123,r6:r6_124,r7:r7_125
		defs: lr:lr_139,r4:r4_135,r5:r5_136,r6:r6_137,r7:r7_138
	word32 r4_148
	word32 r5_149
	word32 r6_150
	word32 r7_151
	word32 lr_152
	call Mem28[r6_137 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_139,r11:Mem28[r5_136:word32],r12:Mem28[r6_137 + 1264<i32>:word32],r4:r4_135,r5:r5_136,r6:r6_137,r7:r7_138
		defs: lr:lr_152,r4:r4_148,r5:r5_149,r6:r6_150,r7:r7_151
	word32 r4_161
	word32 r5_162
	word32 r6_163
	word32 r7_164
	word32 lr_165
	call Mem28[r6_150 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_152,r11:Mem28[r5_149:word32],r12:Mem28[r6_150 + 1260<i32>:word32],r4:r4_148,r5:r5_149,r6:r6_150,r7:r7_151
		defs: lr:lr_165,r4:r4_161,r5:r5_162,r6:r6_163,r7:r7_164
	word32 r4_174
	word32 r5_175
	word32 r6_176
	word32 r7_177
	word32 lr_178
	call Mem28[r6_163 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_165,r11:Mem28[r5_162:word32],r12:Mem28[r6_163 + 1256<i32>:word32],r4:r4_161,r5:r5_162,r6:r6_163,r7:r7_164
		defs: lr:lr_178,r4:r4_174,r5:r5_175,r6:r6_176,r7:r7_177
	word32 r4_187
	word32 r5_188
	word32 r6_189
	word32 r7_190
	word32 lr_191
	call Mem28[r6_176 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_178,r11:Mem28[r5_175:word32],r12:Mem28[r6_176 + 1252<i32>:word32],r4:r4_174,r5:r5_175,r6:r6_176,r7:r7_177
		defs: lr:lr_191,r4:r4_187,r5:r5_188,r6:r6_189,r7:r7_190
	word32 r4_200
	word32 r5_201
	word32 r6_202
	word32 r7_203
	word32 lr_204
	call Mem28[r6_189 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_191,r11:Mem28[r5_188:word32],r12:Mem28[r6_189 + 1248<i32>:word32],r4:r4_187,r5:r5_188,r6:r6_189,r7:r7_190
		defs: lr:lr_204,r4:r4_200,r5:r5_201,r6:r6_202,r7:r7_203
	word32 r4_213
	word32 r5_214
	word32 r6_215
	word32 r7_216
	word32 lr_217
	call Mem28[r6_202 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_204,r11:Mem28[r5_201:word32],r12:Mem28[r6_202 + 1244<i32>:word32],r4:r4_200,r5:r5_201,r6:r6_202,r7:r7_203
		defs: lr:lr_217,r4:r4_213,r5:r5_214,r6:r6_215,r7:r7_216
	word32 r4_226
	word32 r5_227
	word32 r6_228
	word32 r7_229
	word32 lr_230
	call Mem28[r6_215 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_217,r11:Mem28[r5_214:word32],r12:Mem28[r6_215 + 1240<i32>:word32],r4:r4_213,r5:r5_214,r6:r6_215,r7:r7_216
		defs: lr:lr_230,r4:r4_226,r5:r5_227,r6:r6_228,r7:r7_229
	word32 r4_239
	word32 r5_240
	word32 r6_241
	word32 r7_242
	word32 lr_243
	call Mem28[r6_228 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_230,r11:Mem28[r5_227:word32],r12:Mem28[r6_228 + 1236<i32>:word32],r4:r4_226,r5:r5_227,r6:r6_228,r7:r7_229
		defs: lr:lr_243,r4:r4_239,r5:r5_240,r6:r6_241,r7:r7_242
	word32 r4_252
	word32 r5_253
	word32 r6_254
	word32 r7_255
	word32 lr_256
	call Mem28[r6_241 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_243,r11:Mem28[r5_240:word32],r12:Mem28[r6_241 + 1232<i32>:word32],r4:r4_239,r5:r5_240,r6:r6_241,r7:r7_242
		defs: lr:lr_256,r4:r4_252,r5:r5_253,r6:r6_254,r7:r7_255
	word32 r4_265
	word32 r5_266
	word32 r6_267
	word32 r7_268
	word32 lr_269
	call Mem28[r6_254 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_256,r11:Mem28[r5_253:word32],r12:Mem28[r6_254 + 1228<i32>:word32],r4:r4_252,r5:r5_253,r6:r6_254,r7:r7_255
		defs: lr:lr_269,r4:r4_265,r5:r5_266,r6:r6_267,r7:r7_268
	word32 r4_278
	word32 r5_279
	word32 r6_280
	word32 r7_281
	word32 lr_282
	call Mem28[r6_267 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_269,r11:Mem28[r5_266:word32],r12:Mem28[r6_267 + 1224<i32>:word32],r4:r4_265,r5:r5_266,r6:r6_267,r7:r7_268
		defs: lr:lr_282,r4:r4_278,r5:r5_279,r6:r6_280,r7:r7_281
	word32 r4_291
	word32 r5_292
	word32 r6_293
	word32 r7_294
	word32 lr_295
	call Mem28[r6_280 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_282,r11:Mem28[r5_279:word32],r12:Mem28[r6_280 + 1220<i32>:word32],r4:r4_278,r5:r5_279,r6:r6_280,r7:r7_281
		defs: lr:lr_295,r4:r4_291,r5:r5_292,r6:r6_293,r7:r7_294
	word32 r4_304
	word32 r5_305
	word32 r6_306
	word32 r7_307
	word32 lr_308
	call Mem28[r6_293 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_295,r11:Mem28[r5_292:word32],r12:Mem28[r6_293 + 1216<i32>:word32],r4:r4_291,r5:r5_292,r6:r6_293,r7:r7_294
		defs: lr:lr_308,r4:r4_304,r5:r5_305,r6:r6_306,r7:r7_307
	word32 r12_315 = Mem28[r6_306 + 1212<i32>:word32]
l00002C40:
	word32 r4_317
	word32 r5_318
	word32 r6_319
	word32 r7_320
	word32 lr_321
	call Mem28[r6_306 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_308,r12:r12_315,r4:r4_304,r5:r5_305,r6:r6_306,r7:r7_307
		defs: lr:lr_321,r4:r4_317,r5:r5_318,r6:r6_319,r7:r7_320
	word32 r4_330
	word32 r5_331
	word32 r6_332
	word32 r7_333
	word32 lr_334
	call Mem28[r6_319 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_321,r11:Mem28[r5_318:word32],r12:Mem28[r6_319 + 1208<i32>:word32],r4:r4_317,r5:r5_318,r6:r6_319,r7:r7_320
		defs: lr:lr_334,r4:r4_330,r5:r5_331,r6:r6_332,r7:r7_333
	word32 r4_343
	word32 r5_344
	word32 r6_345
	word32 r7_346
	word32 lr_347
	call Mem28[r6_332 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_334,r11:Mem28[r5_331:word32],r12:Mem28[r6_332 + 1204<i32>:word32],r4:r4_330,r5:r5_331,r6:r6_332,r7:r7_333
		defs: lr:lr_347,r4:r4_343,r5:r5_344,r6:r6_345,r7:r7_346
	word32 sp_355
	word32 r4_356
	word32 r5_357
	word32 r6_358
	word32 r7_359
	word32 lr_360
	call Mem28[r6_345 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_347,r11:Mem28[r5_344:word32],r12:Mem28[r6_345 + 1200<i32>:word32],r4:r4_343,r5:r5_344,r6:r6_345,r7:r7_346
		defs: lr:lr_360,r4:r4_356,r5:r5_357,r6:r6_358,r7:r7_359,sp:sp_355
	word32 r12_369
	word32 r11_581
	fn00006E94(Mem28[r7_359:word32], out r11_581, out r12_369)
	word32 r8_376 = Mem28[r6_358 + 1196<i32>:word32]
	Mem378[sp_355 - 4<i32>:word32] = r8_376
	Mem380[sp_355 - 8<i32>:word32] = r12_369
	word32 sp_382
	word32 r4_383
	word32 r5_384
	word32 r6_385
	word32 r7_386
	word32 lr_387
	call Mem380[r6_358 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_360,r12:Mem380[r6_358 + 1192<i32>:word32],r4:r4_356,r5:r5_357,r6:r6_358,r7:r7_359,r8:r8_376
		defs: lr:lr_387,r4:r4_383,r5:r5_384,r6:r6_385,r7:r7_386,sp:sp_382
	word32 r12_395 = Mem380[r6_385 + 1184<i32>:word32]
	Mem397[sp_382 - 4<i32>:word32] = Mem380[r6_385 + 1188<i32>:word32]
	word32 r8_398 = Mem397[r6_385 + 384<i32>:word32]
	Mem400[sp_382 - 8<i32>:word32] = r8_398
	word32 r4_402
	word32 r5_403
	word32 r6_404
	word32 r7_405
	word32 lr_406
	call Mem400[r6_385 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_387,r12:r12_395,r4:r4_383,r5:r5_384,r6:r6_385,r7:r7_386,r8:r8_398
		defs: lr:lr_406,r4:r4_402,r5:r5_403,r6:r6_404,r7:r7_405
	word32 sp_415
	word32 lr_420
	call Mem400[r6_404 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_406,r11:Mem400[r5_403:word32],r12:Mem400[r6_404 + 1180<i32>:word32],r4:r4_402,r5:r5_403,r6:r6_404,r7:r7_405
		defs: lr:lr_420,r4:r4_416,r5:r5_417,r6:r6_418,r7:r7_419,sp:sp_415
	branch CONVERT(SLICE(fn00008A8C(r4_416, r5_417, r6_418, r7_419, lr_420, out lr_428), byte, 0), byte, word32) == 0<32> l00002CB4
l00002CA2:
	word32 r12_443
	word32 r11_582
	fn00006E94(Mem400[r7_419:word32], out r11_582, out r12_443)
	Mem451[sp_415 + 0x10<32>:word32] = r12_443
	call Mem451[r6_418 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_428,r12:Mem451[r6_418 + 1176<i32>:word32],r4:r4_416,r5:r5_417,r6:r6_418,r7:r7_419
		defs: lr:lr_458,r4:r4_454,r5:r5_455,r6:r6_456,r7:r7_457
l00002B40:
	word32 r8_468 = Mem17[r7_22:word32]
	call Mem470[r6_19 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr,r11:Mem17[r6_19 + 1304<i32>:word32],r12:Mem17[Mem17[r6_19 + 148<i32>:word32]:word32],r4:r12,r5:r5,r6:r6_19,r7:r7_22,r8:r8_468,Stack +0000:r8_468
		defs: lr:lr_476,r4:r4_472,r5:r5_473,r6:r6_474,r7:r7_475
l00002CB2:
l00002CB4:
	word32 lr_505
	word32 r11_508
	word32 r10_510
	call Mem491[r6_418 + 276<i32>:word32] (retsize: 0;)
		uses: lr:lr_497,r12:r4_486,r4:r4_486,r5:r5_493,r6:r6_489,r7:r7_495
		defs: lr:lr_505,r10:r10_510,r11:r11_508
	word32 r6_523 = 0x00002CC0<p32> - Mem521[0x00002D02<p32>:word32]
l00002CC4_thunk_fn00002CDA:
	word32 r12_526
	word32 r8_531
	word32 r9_532
	word32 r6_583
	word32 r7_584
	fn00002CDA(r6_523, 0<32>, out r6_583, out r7_584, out r8_531, out r9_532, out r12_526)
	r9Out = r9_532
	r10Out = r10_510
	r11Out = r11_508
	r12Out = r12_526
	lrOut = lr_505
	return r8_531
fn00002B30_exit:


word32 fn00002CBC(ptr32 & r6Out, ptr32 & r7Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse: 
// LiveOut: r5 r6 r7 sp
// Trashed: VNZC r12 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00002CBC_entry:
l00002CBC:
	word32 r6_19 = 0x00002CC0<p32> - Mem17[0x00002D02<p32>:word32]
l00002CC4_thunk_fn00002CDA:
	word32 r6_25
	word32 r7_26
	word32 r8_40
	word32 r9_41
	word32 r12_42
	word32 r5_24 = fn00002CDA(r6_19, 0<32>, out r6_25, out r7_26, out r8_40, out r9_41, out r12_42)
	r6Out = r6_25
	r7Out = r7_26
	return r5_24
fn00002CBC_exit:


word32 fn00002CDA(word32 r6, word32 r7, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002B30
//      fn00002CBC
// MayUse:  r6:[0..31] r7:[0..31]
// LiveOut: r12 r5 r6 r7 r8 r9
// Trashed: VNZC r12 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00002CDA_entry:
l00002CDA:
	word32 r7_30
	word32 r6_27
	word32 r9_5 = Mem0[r6 + 8<i32>:word32]
	branch r7 <u Mem0[r9_5 + 12<i32>:word32] l00002CC6
l00002CC6:
	word32 r8_10 = Mem0[r9_5 + 16<i32>:word32]
	word32 r5_11 = Mem0[r8_10 + r7 * 4<32>:word32]
	word32 r6_17
	word32 r5_21
	call Mem0[r6 + 12<i32>:word32] (retsize: 0;)
		uses: r12:Mem0[r5_11:word32],r5:r5_11,r6:r6_27,r7:r7_7 + 1<32>,r8:r8_10
		defs: r5:r5_21,r6:r6_17
	call Mem0[r6_17 + 12<i32>:word32] (retsize: 0;)
		uses: r12:Mem0[r5_21 + 4<i32>:word32],r6:r6_27,r7:r7_30
		defs: r12:r12_33,r6:r6_27,r7:r7_30
	r6 = r6_27
	r7 = r7_30
l00002CE2:
	Mem36[r9_5 + 68<i32>:word32] = 0<32>
	Mem37[r9_5 + 12<i32>:word32] = 0<32>
	Mem38[r9_5 + 28<i32>:byte] = 0<8>
	Mem39[r9_5 + -32<i32>:word32] = 0<32>
	Mem40[r9_5 + -28<i32>:word32] = 0<32>
	Mem41[r9_5 + -24<i32>:word32] = 0<32>
	Mem42[r9_5 + -20<i32>:word32] = 0<32>
	Mem43[r9_5 + -16<i32>:word32] = 0<32>
	Mem44[r9_5 + -12<i32>:word32] = 0<32>
	Mem45[r9_5 + -8<i32>:word32] = 0<32>
	Mem46[r9_5 + -4<i32>:word32] = 0<32>
	Mem47[r9_5 + 64<i32>:word32] = 0<32>
	r6Out = dwLoc0C
	r7Out = dwLoc10
	r8Out = 0<32>
	r9Out = r9_5
	r12Out = r12
	return dwLoc08
fn00002CDA_exit:


void fn00002D08(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r12
// Preserved: r4 r5 r6 r7 sp
fn00002D08_entry:
l00002D08:
	word32 r6_19 = 0x00002D0C<p32> - Mem17[0x00002D26<p32>:word32]
	word32 r4_25
	word32 r5_26
	word32 r6_27
	word32 r7_28
	word32 lr_29
	call Mem17[r6_19 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr,r12:Mem17[r12:word32],r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_29,r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_28
	word32 r4_34
	word32 r5_35
	word32 r6_36
	word32 r7_37
	word32 lr_38
	call Mem17[r6_27 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_29,r12:Mem17[r5_26 + 4<i32>:word32],r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_28
		defs: lr:lr_38,r4:r4_34,r5:r5_35,r6:r6_36,r7:r7_37
	call Mem17[r6_36 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_38,r12:r5_35,r4:r4_34,r5:r5_35,r6:r6_36,r7:r7_37
	return
fn00002D08_exit:


void fn00002D28(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr
// Preserved: r4 r5 r6 r7 sp
fn00002D28_entry:
l00002D28:
	word32 r6_19 = 0x00002D2C<p32> - Mem17[0x00002D36<p32>:word32]
	call Mem17[r6_19 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
	return
fn00002D28_exit:


word32 fn00002D38(word32 r4, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r4:[0..31]
// LiveOut: lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002D38_entry:
l00002D38:
	word32 r6_100 = 0x00002D3C<p32> - Mem17[0x00002DB2<p32>:word32]
	word32 r7_104 = r12
	word32 r5_115 = r11
l00002DA8:
	branch r7_104 <u r5_115 l00002D44
l00002D44:
	word32 r10_32 = Mem30[Mem30[r6_100 + 8<i32>:word32] + -56<i32>:word32]
	branch r10_32 == 0<32> l00002D8C
l00002D4C:
	branch r5_115 /u r10_32 <=u (r7_104 + 1<32>) /u r10_32 l00002D8C
l00002D8C:
	word32 r11_44 = Mem30[Mem30[r6_100 + -64<i32>:word32]:word32]
	word32 r9_45 = Mem30[r11_44 + 16<i32>:word32]
	branch r9_45 >=u Mem30[r11_44 + 28<i32>:word32] l00002DA0
l00002DA0:
	word32 r8_66
	word32 r10_67
	word32 r9_68
	call Mem30[r6_100 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_55,r10:r10_67,r11:r11_44,r12:0x20<32>,r4:r4_51,r5:r5_26,r6:r6_29,r7:r7_25,r8:r8_66,r9:r9_68
		defs: lr:lr_63,r10:r10_67,r4:r4_59,r5:r5_60,r6:r6_61,r7:r7_62,r8:r8_66,r9:r9_68
l00002D98:
	Mem71[r9_45:byte] = 0x20<8>
	Mem73[r11_44 + 16<i32>:word32] = r9_45 + 1<i32>
l00002DA6:
	r7_104 = r7_104 + 1<32>
l00002D60:
	word32 r11_107 = Mem30[Mem30[r6_100 + -64<i32>:word32]:word32]
	word32 r9_79 = Mem30[r11_107 + 16<i32>:word32]
	branch r9_79 >=u Mem30[r11_107 + 28<i32>:word32] l00002D74
l00002D74:
	word32 r8_92
	word32 r10_93
	word32 r9_94
	call Mem30[r6_100 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_55,r10:r10_93,r11:r11_78,r12:9<32>,r4:r4_51,r5:r5_26,r6:r6_29,r7:r7_25,r8:r8_92,r9:r9_94
		defs: lr:lr_89,r10:r10_93,r11:r11_91,r4:r4_85,r5:r5_86,r6:r6_87,r7:r7_88,r8:r8_92,r9:r9_94
l00002D6C:
	Mem97[r9_79:byte] = 9<8>
	Mem99[r11_107 + 16<i32>:word32] = r9_79 + 1<i32>
l00002D7A:
	r7_104 = r7_104 + Mem101[Mem101[r6_100 + 8<i32>:word32] + -56<i32>:word32] - r11_107
l00002DAC:
	return lr
fn00002D38_exit:


word32 fn00002DB4(word32 r4, word32 r5, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004864
//      fn00004968
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r10 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00002DB4_entry:
l00002DB4:
	word32 r6_19 = 0x00002DB8<p32> - Mem17[0x00002DEA<p32>:word32]
	word32 r12_26
	fn00002A70(r10, r11, r12, out r12_26)
	word32 r7_32 = SLICE(r12_26, byte, 0)
	branch r7_32 == 0<32> l00002DE4
l00002DC2:
	word32 r11_36 = Mem17[Mem17[r6_19 + -64<i32>:word32]:word32]
	word32 r9_37 = Mem17[r11_36 + 16<i32>:word32]
	branch r9_37 >=u Mem17[r11_36 + 28<i32>:word32] l00002DD4
l00002DD4:
	call Mem17[r6_19 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr,r10:r10,r11:r11_36,r12:r7_32,r4:r4,r5:r5,r6:r6_19,r7:r7_32
		defs: lr:lr_47,r10:r10_52,r6:r6_45,r7:r7_46
l00002DCE:
	Mem54[r9_37:byte] = SLICE(r7_32, byte, 0)
	Mem56[r11_36 + 16<i32>:word32] = r9_37 + 1<i32>
l00002DDA:
	word32 r9_59 = Mem58[r6_19 + 8<i32>:word32]
	Mem63[r9_59 + 76<i32>:word32] = Mem58[r9_59 + -52<i32>:word32] + 1<32>
l00002DE4:
	r12Out = CONVERT(r7_32 != 0<32>, bool, word32)
	lrOut = lr
	return r10
fn00002DB4_exit:


void fn00002DF0(word32 r0, word32 r1, word32 r2, word32 r7, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r0:[0..31] r1:[0..31] r11:[0..31] r2:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00002DF0_entry:
l00002DF0:
	word32 r9_33 = Mem29[r11 + 12<i32>:word32]
	word32 r5_34 = Mem29[r11 + 8<i32>:word32]
	word32 r6_31 = 0x00002DF4<p32> - Mem29[0x00002E76<p32>:word32]
	word32 r8_35 = r9_33 - r5_34
	branch r8_35 >>u 2<32> == 0<32> l00002E72
l00002E04:
	branch r9_33 != r5_34 l00002E12
l00002E08:
	Mem46[r11 + -24<i32>:word32] = False<1>
l00002E12:
	word32 r8_50 = Mem48[r11 + 24<i32>:word32]
	word32 lr_51 = Mem48[r11 + 16<i32>:word32]
	word32 r9_54 = Mem48[r11 + 4<i32>:word32]
	word32 r8_55 = r8_50 + Mem48[r11 + 12<i32>:word32] & 0xFFFFFFFF<32> - r8_50
	Mem56[r11 + 12<i32>:word32] = r8_55
	branch r8_55 - r9_54 <= lr_51 - r9_54 l00002E32
l00002E30:
	Mem61[r11 + 12<i32>:word32] = lr_51
l00002E32:
	Mem65[r11 + 8<i32>:word32] = Mem63[r11 + 12<i32>:word32]
	word32 r8_68 = Mem65[r6_31 + 40<i32>:word32]
	word32 r10_99
	word32 r12_100
	word32 r5_103
	word32 r4_107
	word32 sp_111
	word32 r6_114
	word32 r0_115
	word32 r1_116
	word32 r2_117
	word32 r3_118
	word32 lr_119
	word32 r11_120
	call Mem65[r6_31 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,r0:r0,r1:r1,r10:r10_99,r11:Mem65[r8_68:word32],r12:r12_100,r2:r2,r3:r8_35 >>u 2<32>,r4:Mem65[r6_31 + 1172<i32>:word32],r5:r5_34,r6:r6_31,r7:r7,r8:r8_68
		defs: lr:lr_95,r0:r0_87,r1:r1_88,r10:r10_99,r11:r11_96,r12:r12_100,r2:r2_89,r3:r3_90,r4:r4_91,r5:r5_92,r6:r6_93,sp:sp_86
	word32 r7_102 = 0<32>
l00002E44:
	word32 r8_106 = Mem105[r5_103 + r7_102 * 4<32>:word32]
	Mem113[sp_111 - 4<i32>:word32] = r8_106
	word32 r10_134
	call Mem113[r6_114 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_119,r0:r0_115,r1:r1_116,r10:r10_134,r11:r11_120,r12:r4_107,r2:r2_117,r3:r3_118,r4:r4_107,r5:r5_103,r6:r6_114,r7:r7_104 + 1<32>,r8:r8_106
		defs: lr:lr_130,r0:r0_122,r1:r1_123,r10:r10_134,r11:r11_131,r2:r2_124,r3:r3_125,r4:r4_126,r5:r5_127,r6:r6_128,r7:r7_129
	sp_111 = fp - 0x24<32>
	branch r7_102 != r3_118 l00002E44
l00002E58:
	word32 r11_141 = Mem113[Mem113[r6_114 + -64<i32>:word32]:word32]
	word32 r9_142 = Mem113[r11_141 + 16<i32>:word32]
	branch r9_142 >=u Mem113[r11_141 + 28<i32>:word32] l00002E6C
l00002E6C:
	word32 r10_160
	call Mem113[r6_114 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_130,r0:r0_122,r1:r1_123,r10:r10_160,r11:r11_141,r12:0xA<32>,r2:r2_124,r3:r3_125,r4:r4_126,r5:r5_127,r6:r6_128,r7:r7_129
		defs: r10:r10_160
l00002E72:
	return
l00002E64:
	Mem175[r9_142:byte] = 0xA<8>
	Mem177[r11_141 + 16<i32>:word32] = r9_142 + 1<i32>
	return
fn00002DF0_exit:


void fn00002E78(word32 r0, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00002E78_entry:
l00002E78:
	word32 r6_31 = 0x00002E7C<p32> - Mem29[0x00002FD6<p32>:word32]
	word32 r5_135 = 0<32>
	word32 r3_272 = r11
	word32 r7_102 = Mem29[r12:word32]
	word32 r11_151 = Mem29[r11:word32]
	word32 r4_261 = r12
	word32 r2_393 = r10
	word32 r1_291 = r9
	word32 r10_148 = 0<32>
	word32 r12_137 = 0<32>
l00002E94:
	branch r12_137 >u 4<32> l0000306E
l0000306E:
	call Mem50[r6_31 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_58,r0:r0_51,r1:r1_52,r10:r10_60,r11:r11_59,r12:r12_46,r2:r2_53,r3:r3_54,r4:r4_55,r5:r5_56,r6:r6_49,r7:r7_57,r9:r9_61
		defs: lr:lr_72,r0:r0_64,r1:r1_65,r10:r10_75,r11:r11_73,r2:r2_66,r3:r3_67,r4:r4_68,r5:r5_69,r6:r6_70,r7:r7_71
l00002E9A:
	word32 r8_120
	word32 r8_110
	lr = CONVERT(Mem50[r11_151:byte], byte, word32)
	switch (r12_137) { l00002EA4 l00002EA8 l00002EAC l00002EB0 l00002EB4 }
l00002EB4:
l0000303E:
	word32 r8_92
	branch SLICE(lr - 0x7E<32>, byte, 0) >u 0<8> l00003058
l00003058:
	branch SLICE(lr - 0x3F<32>, byte, 0) == 0<8> l00003064
l00003064:
	r5_135 = r5_135 + 1<32>
	r8_92 = 0x7F<32>
l00003060:
l0000304C:
	r8_92 = SLICE(lr, word5, 0)
	r11_151 = r11_151 + 1<32>
	r5_135 = r5_135 + 1<32>
l0000306A:
	Mem101[r7_102:byte] = SLICE(r8_92, byte, 0)
	r12_137 = 0<32>
	r7_102 = r7_102 + 1<i32>
l00002EB0:
l00002FD8:
	branch SLICE(lr - 0x30<32>, byte, 0) <u 0<8> l00003036
l00002FE0:
	branch SLICE(lr - 0x39<32>, byte, 0) <=u 0<8> l0000300C
l0000300C:
	r8_110 = lr + (r10_148 << 4<32>)
l00002FEA:
	branch SLICE(lr - 0x41<32>, byte, 0) <u 0<8> l00003036
l00002FF2:
	branch SLICE(lr - 0x46<32>, byte, 0) <=u 0<8> l00003024
l00003024:
	r8_120 = lr + (r10_148 << 4<32>) - 0x37<32>
l00002FFC:
	branch SLICE(lr - 0x66<32>, byte, 0) >u 0<8> l00003036
l0000300A:
l00003018:
	r8_120 = lr + (r10_148 << 4<32>) - 0x57<32>
l00002EAC:
l00002FC0:
	branch SLICE(lr - 0x37<32>, byte, 0) >u 0<8> l00003036
l00003036:
	Mem140[r7_102:byte] = SLICE(r10_148, byte, 0)
	r5_135 = r5_135 + 1<32>
	r12_137 = 0<32>
	r7_102 = r7_102 + 1<i32>
l00002FCE:
	r8_110 = lr + (r10_148 << 3<8>)
l00003014:
	r8_120 = r8_110 - 0x30<32>
l0000302E:
	r10_148 = SLICE(r8_120, byte, 0)
	r11_151 = r11_151 + 1<32>
l00002EA8:
l00002EFC:
	r9 = lr
	branch lr == 0<32> l00003072
l00003072:
	r12_137 = 6<32>
l00002F04:
	branch SLICE(lr - 0x30<32>, byte, 0) <u 0<8> l00002FAC
l00002F0C:
	branch SLICE(lr - 0x37<32>, byte, 0) <=u 0<8> l00002F84
l00002F84:
	r10_148 = SLICE(lr - 0x30<32>, byte, 0)
	r12_137 = 2<32>
l00002F16:
	branch SLICE(lr - 0x3F<32>, byte, 0) == 0<8> l00002FAA
l00002FAA:
	r9 = 0x7F<32>
l00002F1E:
	branch SLICE(lr - 0x58<32>, byte, 0) == 0<8> l00002F90
l00002F26:
	branch SLICE(lr - 0x5F<32>, byte, 0) == 0<8> l00003080
l00003080:
	r9 = 0x20<32>
l00002F30:
	branch SLICE(lr - 0x61<32>, byte, 0) == 0<8> l00002F80
l00002F80:
	r9 = 7<32>
l00002F38:
	branch SLICE(lr - 0x62<32>, byte, 0) == 0<8> l00002F7C
l00002F7C:
	r9 = 8<32>
l00002F40:
	branch SLICE(lr - 0x65<32>, byte, 0) == 0<8> l00003084
l00003084:
	r9 = 0x1B<32>
l00002F4A:
	branch SLICE(lr - 0x66<32>, byte, 0) == 0<8> l00002F96
l00002F96:
	r9 = 0xC<32>
l00002F52:
	branch SLICE(lr - 0x6E<32>, byte, 0) == 0<8> l00002F9A
l00002F9A:
	r9 = 0xA<32>
l00002F5A:
	branch SLICE(lr - 0x72<32>, byte, 0) == 0<8> l00002F9E
l00002F9E:
	r9 = 0xD<32>
l00002F62:
	branch SLICE(lr - 0x74<32>, byte, 0) == 0<8> l00002FA2
l00002FA2:
	r9 = 9<32>
l00002F6A:
	branch SLICE(lr - 0x76<32>, byte, 0) == 0<8> l00002FA6
l00002FA6:
	r9 = 0xB<32>
l00002F72:
	branch SLICE(lr - 0x78<32>, byte, 0) != 0<8> l00002FAC
l00002FAC:
	branch r12_137 != 1<32> l00002FB6
l00002FB0:
	Mem226[r7_102:byte] = SLICE(r9, byte, 0)
	r5_135 = r5_135 + 1<32>
	r12_137 = 0<32>
	r7_102 = r7_102 + 1<i32>
l00002F7A:
l00002F90:
	r10_148 = 0<32>
	r12_137 = 3<32>
l00003074:
	r9 = r10_148
l00002FB6:
	r11_151 = r11_151 + 1<32>
	branch r12_137 <=u 4<32> l00002E92
l00002FBE:
l00002EA4:
l00002EB8:
	branch lr == 0<32> l00003078
l00002EBE:
	branch SLICE(lr - 0x3A<32>, byte, 0) == 0<8> l00003078
l00002EC8:
	branch SLICE(lr - 0x3D<32>, byte, 0) == 0<8> l00002EEE
l00002EEE:
	branch r2_393 != 0<32> l00003078
l00003078:
l00003088:
	Mem269[r4_261:word32] = r7_102
	Mem280[r3_272:word32] = r11_151
	Mem299[r1_291:word32] = r5_135
	return
fn00002E78_exit:
l00002ED0:
	branch SLICE(lr - 0x5C<32>, byte, 0) == 0<8> l00002EE2
l00002EE2:
	r11_151 = r11_151 + 1<32>
	r12_137 = 1<32>
l00002ED8:
	branch SLICE(lr - 0x5E<32>, byte, 0) != 0<8> l00002EF4
l00002EF4:
	Mem333[r7_102:byte] = SLICE(lr, byte, 0)
	r11_151 = r11_151 + 1<32>
	r5_135 = r5_135 + 1<32>
	r7_102 = r7_102 + 1<i32>
l00002EE0:
l00002EE8:
	r11_151 = r11_151 + 1<32>
	r12_137 = 4<32>
l0000307C:
	r9 = r10_148
l00002E92:
	r10_148 = r9


void fn00003094(word32 r4, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003094_entry:
l00003094:
	word32 r6_19 = 0x00003098<p32> - Mem17[0x000030AE<p32>:word32]
	word32 r12_28
	word32 r9_50
	word32 r11_51
	word32 lr_52
	fn0000B95C(r4, r12, r6_19, r7, 8<32>, lr, out r9_50, out r11_51, out r12_28, out lr_52)
	word32 r8_35 = Mem17[r6_19 + 8<i32>:word32]
	word32 r9_36 = Mem17[r8_35 + -48<i32>:word32]
	Mem37[r12_28:word32] = r12
	Mem38[r8_35 + 80<i32>:word32] = r12_28
	Mem39[r12_28 + 4<i32>:word32] = r9_36
	return
fn00003094_exit:


word32 fn000030B4(word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000393C
//      fn00004458
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000030B4_entry:
l000030B4:
	word32 r6_19 = 0x000030B8<p32> - Mem17[0x000030D2<p32>:word32]
	branch 0xFFFFFFFF<32> /u r11 >=u r12 l000030C8
l000030C4:
	word32 r8_80
	word32 r9_81
	word32 r10_82
	r4 = fn00006CAC(r4, r5, r6_19, r7, lr, out r5, out r6_19, out r7, out r8_80, out r9_81, out r10_82, out r11, out r12, out lr)
l000030C8:
	word32 lr_50
	word32 r12_54
	word32 r11_79
	word32 r9_78
	fn0000B95C(r4, r5, r6_19, r7, r11 * r12, lr, out r9_78, out r11_79, out r12_54, out lr_50)
	lrOut = lr_50
	return r12_54
fn000030B4_exit:


word32 fn000030D8(word32 r4, word32 r5, word32 r7, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn000045F0
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000030D8_entry:
l000030D8:
	word32 r6_19 = 0x000030DC<p32> - Mem17[0x0000311E<p32>:word32]
	word32 r8_20 = Mem17[r6_19 + -56<i32>:word32]
	word32 r10_22 = Mem17[r8_20 + r12 * 8<32>:word32]
	word32 r12_24 = Mem17[r8_20 + (r12 << 3<8>) + 4<i32>:word32]
	branch r10_22 == 0<32> l00003114
l000030EE:
	branch r10_22 != 1<32> l00003102
l00003102:
	branch r10_22 == 2<32> l0000310A
l0000310A:
	byte VNZC_43
	call Mem17[r6_19 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr,r11:Mem17[r6_19 + 1164<i32>:word32],r12:r12_24,r4:r4,r5:r5,r6:r6_19,r7:r7,r9:r9_41
		defs: lr:lr_37,r11:r11_42,r8:r8_38,r9:r9_41,VNZC:VNZC_43
	r10_22 = CONVERT(SLICE(VNZC_43, bool, 1), bool, word32)
l00003106:
	r10_22 = 1<32>
l000030F2:
	r8_20 = CONVERT(Mem17[r12_24:byte], byte, word32)
	r9 = CONVERT(Mem17[Mem17[r6_19 + 1168<i32>:word32]:byte], byte, word32)
	r10_22 = CONVERT(SLICE(r8_20 - r9, byte, 0) != 0<8>, bool, word32)
l00003114:
	r9Out = r9
	r10Out = r10_22
	r11Out = r11
	r12Out = SLICE(r10_22, byte, 0)
	lrOut = lr
	return r8_20
fn000030D8_exit:


word32 fn00003120(word32 r0, word32 r1, word32 r2, word32 r5, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A44
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..7] r11:[0..31] r12:[0..31] r2:[0..31] r5:[0..31]
// LiveOut: lr r11
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003120_entry:
l00003120:
	word32 r12_61
	word32 r6_31 = 0x00003124<p32> - Mem29[0x00003166<p32>:word32]
	word32 r12_44
	word32 r9_161
	word32 r11_155
	word32 lr_148
	fn0000B95C(r12, r5, r6_31, r11, 0x10<32>, lr, out r9_161, out r11_155, out r12_44, out lr_148)
	branch r11 != 0<32> l0000313C
l0000313C:
	word32 r8_162
	word32 r9_163
	word32 r10_164
	r0 = fn0000B994(r0, r1, r2, r12, r12_44, r6_31, r11, r11, lr_148, out r1, out r2, out r8_162, out r9_163, out r10_164, out r11_155, out r12_61, out lr_148)
l00003138:
	r12_61 = r11
l00003142:
	word32 r12_101
	Mem72[r12_44 + 4<i32>:word32] = r12_61
	branch r12 != 0<32> l0000314C
l0000314C:
	word32 r1_165
	word32 r2_166
	word32 r8_167
	word32 r9_168
	word32 r10_169
	fn0000B994(r0, r1, r2, r12, r12_44, r6_31, r11, r12, lr_148, out r1_165, out r2_166, out r8_167, out r9_168, out r10_169, out r11_155, out r12_101, out lr_148)
l00003148:
	r12_101 = r12
l00003152:
	word32 r8_100 = Mem72[r6_31 + 8<i32>:word32]
	Mem103[r12_44:word32] = r12_101
	word32 r9_104 = Mem103[r8_100 + -44<i32>:word32]
	Mem105[r8_100 + 84<i32>:word32] = r12_44
	Mem108[r12_44 + 8<i32>:byte] = SLICE(r10, byte, 0)
	Mem109[r12_44 + 12<i32>:word32] = r9_104
	lrOut = lr_148
	return r11_155
fn00003120_exit:


word32 fn00003168(word32 r0, word32 r1, word32 r4, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003168_entry:
l00003168:
	word32 r6_31 = 0x0000316C<p32> - Mem29[0x00003196<p32>:word32]
	word32 lr_39
	word32 r10_41
	word32 r11_42
	word32 r12_43
	word32 r9_126
	fn0000A778(r10, lr, out r9_126, out r10_41, out r11_42, out r12_43, out lr_39)
	word32 sp_51
	word32 r0_52
	word32 r1_53
	word32 r2_54
	word32 r3_55
	word32 r4_56
	word32 r5_57
	word32 r6_58
	word32 r7_59
	word32 lr_60
	word32 r12_61
	call Mem29[r6_31 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_39,r0:r0,r1:r1,r10:r10_41,r11:r11_42,r12:r12_43,r2:r12,r3:r11,r4:r4,r5:r12_43,r6:r6_31,r7:r7
		defs: lr:lr_60,r0:r0_52,r1:r1_53,r12:r12_61,r2:r2_54,r3:r3_55,r4:r4_56,r5:r5_57,r6:r6_58,r7:r7_59,sp:sp_51
	Mem69[sp_51 - 4<i32>:word32] = r5_57
	word32 r2_76
	word32 lr_82
	word32 r10_84
	word32 r11_85
	call Mem69[r6_58 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_60,r0:r0_52,r1:r1_53,r10:r3_55,r11:Mem69[r12_61:word32],r12:0<32>,r2:r2_54,r3:r3_55,r4:r4_56,r5:r5_57,r6:r6_58,r7:r7_59
		defs: lr:lr_82,r10:r10_84,r11:r11_85,r2:r2_76
	word32 r9_92
	word32 r8_91 = fn000027D8(r2_76, out r9_92)
	r9Out = r9_92
	r10Out = r10_84
	r11Out = r11_85
	lrOut = lr_82
	return r8_91
fn00003168_exit:


word32 fn00003198(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003904
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003198_entry:
l00003198:
	word32 r3_100
	word32 r2_120
	word32 r12_129
	word32 r1_119
	word32 r0_118
	word32 lr_116
	word32 r10_149
	word32 r6_104
	word32 r6_19 = 0x0000319C<p32> - Mem17[0x0000320E<p32>:word32]
	branch r12 == 0<32> l000031EE
l000031EE:
	word32 r7_36
	call Mem31[r6_19 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:r11,r12:Mem17[r6_19 + 1160<i32>:word32],r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_19,r7:r10,Stack +0000:r10,Stack +0004:r11
		defs: lr:lr_37,r0:r0_182,r1:r1_183,r12:r12_38,r2:r2_184,r3:r3_185,r6:r6_35,r7:r7_36
	r10_149 = r7_36
l000031A6:
	word32 lr_52
	word32 r12_55
	word32 r4_70
	word32 r5_71
	word32 r6_72
	word32 r7_73
	word32 lr_74
	word32 r10_76
	word32 r11_77
	word32 r0_80
	word32 r1_81
	word32 r2_82
	word32 r3_83
	call Mem17[r6_19 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_52,r0:r0,r1:r1,r10:fn00006AA8(r0, r1, r2, r3, r4, r12, r6_19, r10, 0<32>, r12, lr, out r11_217, out r12_55, out lr_52),r11:Mem17[Mem17[r6_19 + 40<i32>:word32]:word32],r12:r12,r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_19,r7:max(r10 - r12_55, 0<32>),r8:0<32>
		defs: lr:lr_74,r0:r0_80,r1:r1_81,r10:r10_76,r11:r11_77,r2:r2_82,r3:r3_83,r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73
	word32 r7_115
	word32 r10_117
	call Mem17[r6_72 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_74,r0:r0_80,r1:r1_81,r10:r10_76,r11:r11_77,r12:r5_71,r2:r2_82,r3:r3_83,r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73
		defs: lr:lr_91,r0:r0_97,r1:r1_98,r10:r10_93,r12:r12_92,r2:r2_99,r3:r3_100,r6:r6_89,r7:r7_90
	word32 r5_102 = r7_115
	word32 r4_103 = r12_129
l000031C8:
	word32 r11_107 = Mem105[Mem105[r6_104 + -64<i32>:word32]:word32]
	word32 r9_108 = Mem105[r11_107 + 16<i32>:word32]
	branch r9_108 >=u Mem105[r11_107 + 28<i32>:word32] l000031DC
l000031DC:
	call Mem105[r6_104 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_116,r0:r0_118,r1:r1_119,r10:r10_117,r11:r11_107,r12:0x20<32>,r2:r2_120,r3:r3_121,r4:r4_113,r5:r5_114,r6:r6_104,r7:r7_115
		defs: lr:lr_128,r0:r0_134,r1:r1_135,r10:r10_130,r12:r12_129,r2:r2_136,r3:r3_137,r4:r4_124,r5:r5_125,r6:r6_126,r7:r7_127
l000031D4:
	Mem140[r9_108:byte] = 0x20<8>
	Mem142[r11_107 + 16<i32>:word32] = r9_108 + 1<i32>
l000031E2:
	r7_115 = r7_115 - 1<32>
	branch r7_115 != 0xFFFFFFFF<32> l000031C8
l000031E8:
	r10_149 = r5_102 + r4_103
l000031FE:
	word32 r9_155 = Mem153[r6_104 + 8<i32>:word32]
	Mem161[r9_155 + 76<i32>:word32] = Mem153[r9_155 + -52<i32>:word32] + 1<32> + r10_149
	r1Out = r1_119
	r2Out = r2_120
	r3Out = r3_100
	r12Out = r12_129
	lrOut = lr_116
	return r0_118
fn00003198_exit:


word32 fn00003210(word32 r4, word32 r5, word32 r7, word32 r10, word32 r11, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004458
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003210_entry:
l00003210:
	word32 r6_19 = 0x00003214<p32> - Mem17[0x00003232<p32>:word32]
	branch 0xFFFFFFFF<32> /u r10 >=u r11 l00003224
l00003220:
	word32 r12_80
	word32 r9_79
	word32 r8_78
	r4 = fn00006CAC(r4, r5, r6_19, r7, lr, out r5, out r6_19, out r7, out r8_78, out r9_79, out r10, out r11, out r12_80, out lr)
l00003224:
	word32 lr_50
	word32 r12_54
	fn0000B904(r4, r5, r6_19, r7, r10 * r11, lr, out r12_54, out lr_50)
	lrOut = lr_50
	return r12_54
fn00003210_exit:


void fn00003234(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003234_entry:
l00003234:
	word32 r6_31 = 0x00003238<p32> - Mem29[0x00003276<p32>:word32]
	word32 r0_42
	word32 r1_43
	word32 r2_44
	word32 r3_45
	word32 r4_46
	word32 r6_48
	word32 r7_49
	word32 lr_50
	word32 r12_51
	word32 r10_53
	call Mem29[r6_31 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:0x2E<32>,r12:Mem29[r12:word32],r2:r2,r3:r12,r4:r10,r5:r5,r6:r6_31,r7:r11,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_50,r0:r0_42,r1:r1_43,r10:r10_53,r12:r12_51,r2:r2_44,r3:r3_45,r4:r4_46,r6:r6_48,r7:r7_49
	word32 r0_60
	word32 r1_61
	word32 r2_62
	word32 r3_63
	word32 r4_64
	word32 r5_65
	word32 r6_66
	word32 r7_67
	word32 lr_68
	word32 r10_71
	word32 r12_124
	word32 r11_130
	call Mem29[r6_48 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,r0:r0_42,r1:r1_43,r10:r10_53,r11:0x2E<32>,r12:Mem29[r7_49:word32],r2:r2_44,r3:r3_45,r4:r4_46,r5:r12_51,r6:r6_48,r7:r7_49
		defs: lr:lr_68,r0:r0_60,r1:r1_61,r10:r10_71,r11:r11_70,r12:r12_69,r2:r2_62,r3:r3_63,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
	word32 r8_74 = Mem29[r6_66 + 224<i32>:word32]
	branch r12_124 == 0<32> l0000325C
l00003258_1:
	r11_130 = r12_124
l0000325C:
	branch r12_124 != 0<32> l00003260
l0000325C_1:
	r11_130 = r8_74
l00003260:
	branch r5_65 == 0<32> l00003266
l00003262_1:
	r12_124 = r5_65
l00003266:
	branch r5_65 != 0<32> l0000326A
l00003266_1:
	r12_124 = r8_74
l0000326A:
	word32 r0_141
	word32 r1_142
	word32 r2_143
	word32 r3_144
	word32 r4_145
	word32 r5_146
	word32 r6_147
	word32 r7_148
	word32 lr_149
	word32 r10_152
	byte VNZC_154
	call r4_64 (retsize: 0;)
		uses: lr:lr_68,r0:r0_60,r1:r1_61,r10:r10_71,r11:r11_130,r12:r12_124,r2:r2_62,r3:r3_63,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
		defs: lr:lr_149,r0:r0_141,r1:r1_142,r10:r10_152,r2:r2_143,r3:r3_144,r4:r4_145,r5:r5_146,r6:r6_147,r7:r7_148,VNZC:VNZC_154
	branch SLICE(VNZC_154, bool, 1) l00003274
l0000326E:
	call r4_145 (retsize: 0;)
		uses: lr:lr_149,r0:r0_141,r1:r1_142,r10:r10_152,r11:Mem29[r7_148:word32],r12:Mem29[r3_144:word32],r2:r2_143,r3:r3_144,r4:r4_145,r5:r5_146,r6:r6_147,r7:r7_148
l00003274:
	return
fn00003234_exit:


word32 fn000032D0(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000330C
//      fn00003334
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000032D0_entry:
l000032D0:
	word32 r12_105
	word32 r11_104
	word32 r10_103
	word32 lr_47
	word32 r6_20 = 0x000032D6<p32> - Mem17[0x00003304<p32>:word32]
	branch r12 == 0<32> l000032EC
l000032EC:
	word32 r4_32
	word32 r5_33
	word32 r6_34
	word32 r7_35
	word32 lr_36
	word32 r11_37
	word32 r0_86
	word32 r1_87
	word32 r2_88
	word32 r3_89
	call Mem30[r6_20 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r11:Mem17[r6_20 + 1156<i32>:word32],r12:fp - 0x20<32>,r2:r2,r3:r3,r4:r4,r5:fp - 0x20<32>,r6:r6_20,r7:r7,Stack +0000:r11
		defs: lr:lr_36,r0:r0_86,r1:r1_87,r11:r11_37,r2:r2_88,r3:r3_89,r4:r4_32,r5:r5_33,r6:r6_34,r7:r7_35
	call Mem30[r6_34 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_36,r0:r0_86,r1:r1_87,r11:r11_37,r12:r5_33,r2:r2_88,r3:r3_89,r4:r4_32,r5:r5_33,r6:r6_34,r7:r7_35
		defs: lr:lr_47,r0:r0_92,r1:r1_93,r10:r10_96,r11:r11_48,r12:r12_50,r2:r2_94,r3:r3_95
l000032DE:
	word32 r12_62
	r10_103 = fn00006AA8(r0, r1, r2, r3, r4, r5, r6_20, r7, 0<32>, r12, lr, out r11_104, out r12_62, out lr_47)
	r12_105 = max(r12_62, 0<32>)
l00003302:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r10Out = r10_103
	r11Out = r11_104
	r12Out = r12_105
	lrOut = lr_47
	return r0
fn000032D0_exit:


word32 fn0000330C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000330C_entry:
l0000330C:
	word32 r12_27
	branch Mem17[Mem17[0x00003310<p32> - Mem17[0x0000332E<p32>:word32] + 8<i32>:word32] + 88<i32>:byte] == 0<8> l00003326
l00003326:
	r12_27 = fn00009B5C(r5, r12, r12, lr)
l00003322:
	r12_27 = 0<32>
l0000332A:
	word32 lr_49
	word32 r1_51
	word32 r10_52
	word32 r11_53
	word32 r12_54
	word32 r2_55
	word32 r3_56
	word32 r0_50 = fn000032D0(r0, r1, r2, r3, r4, r5, r12, r12, r12_27, lr, out r1_51, out r2_55, out r3_56, out r10_52, out r11_53, out r12_54, out lr_49)
	r1Out = r1_51
	r2Out = r2_55
	r3Out = r3_56
	r10Out = r10_52
	r11Out = r11_53
	r12Out = r12_54
	lrOut = lr_49
	return r0_50
fn0000330C_exit:


word32 fn00003334(word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 lr, word32 dwArg00, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r4:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31]
// LiveOut: lr r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00003334_entry:
l00003334:
	word32 r7_30 = fp - 36<i32>
	word32 r6_33 = 0x0000333E<p32> - Mem29[0x00003468<p32>:word32]
	word32 r0_116 = r10
	word32 r5_40 = r11
	word32 r2_120 = r8
	word32 r3_122 = r9
	word32 r1_118 = dwArg00
	branch r10 == 0<32> l00003370
l00003356:
	branch r9 == SLICE(cond(r8), bool, 0) l00003370
l0000335C:
	call Mem36[r6_33 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r10,r1:dwArg00,r10:0xA20<32>,r11:Mem36[r6_33 + 220<i32>:word32],r12:Mem36[r6_33 + 1152<i32>:word32],r2:r8,r3:r9,r4:r4,r5:r11,r6:r6_33,r7:fp - 36<i32>,r8:r8,r9:0x000065AC<p32>,Stack +02D4:dwArg00
		defs: lr:lr_66,r0:r0_58,r1:r1_59,r2:r2_60,r3:r3_61,r4:r4_62,r5:r5_63,r6:r6_64,r7:r7_65
l00003370:
	word32 r10_75 = Mem36[r6_33 + 8<i32>:word32]
	word32 r11_76 = Mem36[r10_75 + 12<i32>:word32]
	branch r11_76 != Mem36[r10_75 + -36<i32>:word32] l0000338E
l0000337A:
	word32 r12_90 = fn00003210(r4, r5_40, r7_30, 0xF8<32>, r11_76, lr, out lr)
	word32 r9_97 = Mem36[r6_33 + 8<i32>:word32]
	word32 r8_98 = Mem36[r9_97 + -36<i32>:word32]
	Mem99[r9_97 + 20<i32>:word32] = r12_90
	Mem102[r9_97 + 92<i32>:word32] = r8_98 << 1<i32>
l0000338E:
	word32 r9_1739
	word32 r12_1731
	word32 r1_1170
	word32 r0_1154
	word32 lr_1725
	word32 r10_105 = Mem104[r6_33 + 8<i32>:word32]
	word32 r8_107 = Mem104[r10_105 + 12<i32>:word32]
	word32 r9_110 = (r8_107 << 5<32>) - r8_107
	word32 r4_111 = Mem104[r10_105 + 20<i32>:word32] + (r9_110 << 2<8>)
	word32 r5_134
	word64 r3_r2_1879
	word32 r11_140
	word32 r1_130
	word32 r0_1017
	word32 r6_1023
	word32 lr_1093
	word32 r4_1004
	word32 r7_1024
	word32 r10_1095
	call Mem104[r6_33 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,r0:r0_116,r1:r1_118,r10:0x7C<32>,r11:0<32>,r12:r4_111,r2:r2_120,r3:r3_122,r4:r4_111,r5:r5_83,r6:r6_73,r7:r7_84,r8:r8_107,r9:r9_110,Stack +0000:dwArg00
		defs: lr:lr_137,r0:r0_129,r1:r1_130,r10:r10_139,r11:r11_140,r4:r4_133,r5:r5_134,r6:r6_135,r7:r7_136,Sequence r3:r2:r3_r2_1879
	Mem146[r4_1004 + 96<i32>:word64] = r3_r2_1879
	Mem147[r4_1004 + 104<i32>:word32] = r5_134
	word32 r3_1088 = SLICE(r3_r2_1879, word32, 32)
	word32 r2_1002 = SLICE(r3_r2_1879, word32, 0)
	branch r0_1017 != 0<32> l0000344A
l000033B4:
	word32 r9_150 = Mem147[r6_1023 + 8<i32>:word32]
	r10_1095 = CONVERT(Mem147[r9_150 + 96<i32>:byte], byte, word32)
	branch SLICE(r10_1095 - r0_1017, byte, 0) != 0<8> l0000344A
l000033C0:
	branch r5_134 != 3<32> l000033CE
l000033C4:
	branch SLICE(CONVERT(Mem147[r9_150 + 97<i32>:byte], byte, word32) - r10_1095, byte, 0) != 0<8> l0000344A
l000033CE:
	word32 r8_161 = Mem147[r6_1023 + 8<i32>:word32]
	r11_140 = CONVERT(Mem147[r8_161 + 98<i32>:byte], byte, word32)
	branch r11_140 != 0<32> l000033E2
l000033D8:
	branch SLICE(CONVERT(Mem147[r8_161 + 99<i32>:byte], byte, word32) - r10_1095, byte, 0) == 0<8> l00003412
l000033E2:
	branch r5_134 == 6<32> l000033EA
l000033E6:
	branch r5_134 != 0<32> l00003408
l000033EA:
	word32 r9_179 = Mem147[r6_1023 + 8<i32>:word32]
	branch Mem147[r9_179 + -28<i32>:word32] == 5<32> l0000344A
l000033F2:
	word32 r9_183 = CONVERT(Mem147[r9_179 + 104<i32>:byte], byte, word32)
	branch SLICE(r9_183 - r10_1095, byte, 0) != 0<8> l0000344A
l000033FC:
	r10_1095 = Mem147[r6_1023 + 8<i32>:word32]
	branch SLICE(CONVERT(Mem147[r10_1095 + 105<i32>:byte], byte, word32) - r9_183, byte, 0) != 0<8> l0000344A
l00003408:
	branch r11_140 == 0<32> l00003412
l0000340C:
	branch r3_1088 == SLICE(cond(r2_1002), bool, 0) l0000344A
l00003412:
	word32 r9_213 = Mem147[r6_1023 + 8<i32>:word32]
	r3_1088 = 0<32>
	branch Mem147[r9_213 + 99<i32>:byte] == 0<8> l000038B0
l00003422:
	branch r5_134 == 0<32> l0000344A
l00003426:
	branch r5_134 != 5<32> l000038B0
l0000342C:
	branch Mem147[r9_213 + 24<i32>:word32] == 3<32> l0000344A
l00003432:
	branch Mem147[r9_213 + 97<i32>:byte] == 0<8> l000038B0
l0000343E:
	word32 r12_248
	word32 r9_1886
	fn000030D8(r4_1004, r5_134, r7_1024, 0xE<32>, lr_1093, out r9_1886, out r10_1095, out r11_140, out r12_248, out lr_1093)
	branch SLICE(r12_248, byte, 0) == 0<8> l000038B0
l000038B0:
	r0_1154 = 0<32>
	r1_1170 = 0<32>
l0000344A:
	word32 r9_264 = CONVERT(Mem147[Mem147[r7_1024 + -680<i32>:word32]:byte], byte, word32)
	branch SLICE(r9_264 - 0x2F<32>, byte, 0) == 0<8> l00003466
l00003458:
	r10_1095 = CONVERT(Mem147[r1_130:byte], byte, word32)
	Mem276[r7_1024 + -685<i32>:byte] = SLICE(r10_1095, byte, 0)
	r3_1088 = 0<32>
	branch SLICE(r10_1095, byte, 0) != 0<8> l00003470
l00003470:
	word32 r0_301
	word32 r1_302
	word32 r2_303
	word32 r3_304
	word32 r4_305
	word32 r6_307
	word32 r7_308
	word32 lr_309
	word32 r12_310
	word32 r10_311
	word32 r11_312
	word32 r8_313
	word32 r9_314
	call Mem276[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_291,r0:r0_129,r1:r1_130,r10:r10_274,r11:r11_292,r12:Mem276[r7_136 + -680<i32>:word32],r2:r2_131,r3:0<32>,r4:r4_133,r5:r5_134,r6:r6_135,r7:r7_136,r8:0x2F<32>,r9:r9_264,Stack +0000:dwArg00
		defs: lr:lr_309,r0:r0_301,r1:r1_302,r10:r10_311,r11:r11_312,r12:r12_310,r2:r2_303,r3:r3_304,r4:r4_305,r6:r6_307,r7:r7_308,r8:r8_313,r9:r9_314
	word32 sp_319
	word32 r5_325
	word32 r12_329
	call Mem276[r6_307 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_309,r0:r0_301,r1:r1_302,r10:r10_311,r11:r11_312,r12:r1_302,r2:r2_303,r3:r3_304,r4:r4_305,r5:r12_310,r6:r6_307,r7:r7_308,r8:r8_313,r9:r9_314,Stack +0000:dwArg00
		defs: lr:lr_328,r0:r0_320,r1:r1_321,r12:r12_329,r3:r3_323,r4:r4_324,r5:r5_325,r6:r6_326,r7:r7_327,sp:sp_319
	word32 sp_341 = sp_319 - ((r5_325 + r12_329) + 8<32> & 0xFFFFFFFC<32>)
	r2_1002 = sp_341
	branch SLICE(CONVERT(Mem276[r7_1024 + -685<i32>:byte], byte, word32) - 0x2E<32>, byte, 0) != 0<8> l000034AA
l00003498:
	branch SLICE(CONVERT(Mem276[r1_130 + 1<i32>:byte], byte, word32) - r3_1088, byte, 0) != 0<8> l000034AA
l000034AA:
	r10_1095 = sp_341
	word32 r8_351 = r1_130
l000034AE:
	word32 r9_354 = CONVERT(Mem353[r8_351:byte], byte, word32)
	branch r9_354 != 0<32> l000034A4
l000034A4:
	Mem360[r10_1095:byte] = SLICE(r9_354, byte, 0)
	r8_351 = r8_351 + 1<32>
	r10_1095 = r10_1095 + 1<i32>
l000034B4:
	branch r8_351 <=u r1_130 l000034C8
l000034BA:
	branch SLICE(CONVERT(Mem353[r8_351 + -1<i32>:byte], byte, word32) - 0x2F<32>, byte, 0) == 0<8> l000034C8
l000034C6:
	Mem369[r10_1095:byte] = 0x2F<8>
	r10_1095 = r10_1095 + 1<i32>
l000034A0:
	r10_1095 = sp_341
l000034C8:
	r9_264 = Mem375[r7_1024 + -680<i32>:word32]
l000034D0:
	word32 r8_379 = CONVERT(Mem378[r9_264:byte], byte, word32)
	r9_264 = r9_264 + 1<32>
	branch r8_379 != 0<32> l000034CE
l000034CE:
	Mem384[r10_1095:byte] = SLICE(r8_379, byte, 0)
	r10_1095 = r10_1095 + 1<i32>
l000034D8:
	Mem386[r10_1095:byte] = SLICE(r8_379, byte, 0)
l00003466:
	r2_1002 = Mem388[r7_1024 + -680<i32>:word32]
l000034DA:
	word32 r11_1096
	word32 sp_1084
	word32 r12_466
	word32 r5_1758 = Mem396[r6_1023 + 8<i32>:word32]
	word32 r8_398 = Mem396[r5_1758 + -28<i32>:word32]
	branch r8_398 <u 3<32> l0000352E
l000034E2:
	branch r8_398 <=u 4<32> l000034F8
l000034F8:
	branch r0_1017 == 0<32> l0000352E
l000034FC:
	call Mem396[r6_1023 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_437,r0:r0_403,r1:r1_424,r10:r10_443,r11:r4_411 + 8<32>,r12:r2_419,r2:r2_419,r3:r3_428,r4:r4_411,r5:r5_397,r6:r6_390,r7:r7_435,r8:r8_398,r9:r9_448,Stack +0000:dwArg00
		defs: lr:lr_465,r0:r0_457,r10:r10_467,r11:r11_468,r12:r12_466,r2:r2_459,r3:r3_460,r4:r4_461,r5:r5_462,r6:r6_463,r7:r7_464,r9:r9_470,sp:sp_456
	word32 r8_473 = Mem396[r5_1758 + -28<i32>:word32]
	r1_130 = r12_466
	branch r8_473 == 3<32> l0000353A
l0000350E:
	branch r12_466 >= 0<32> l0000351E
l0000351E:
	r8_398 = CONVERT((Mem396[r4_1004 + 24<i32>:word32] & 0xF000<32>) != 0x4000<32>, bool, word32)
l00003512:
	call Mem396[r6_1023 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_465,r0:r0_457,r1:r12_466,r10:r10_467,r11:r11_468,r12:r12_466,r2:r2_459,r3:r3_460,r4:r4_461,r5:r5_462,r6:r6_463,r7:r7_464,r8:r8_473,r9:r9_470,Stack +0000:dwArg00
		defs: lr:lr_493,r0:r0_485,r1:r1_486,r10:r10_495,r11:r11_496,r12:r12_494,r2:r2_487,r3:r3_488,r4:r4_489,r5:r5_490,r6:r6_491,r7:r7_492,r9:r9_498,sp:sp_484
	r8_398 = CONVERT(Mem396[r12_466:word32] == 2<32>, bool, word32)
l0000352A:
	branch r8_398 == 0<32> l0000353A
l000034E8:
	branch r8_398 != 5<32> l0000352E
l0000352E:
	call Mem396[r6_1023 + 484<i32>:word32] (retsize: 0;)
		uses: lr:lr_531,r0:r0_521,r1:r1_523,r10:r10_533,r11:r4_510 + 8<32>,r12:r2_514,r2:r2_514,r3:r3_525,r4:r4_510,r5:r5_527,r6:r6_517,r7:r7_529,r8:r8_535,r9:r9_536,Stack +0000:dwArg00
		defs: lr:lr_549,r0:r0_541,r10:r10_551,r11:r11_552,r12:r12_550,r2:r2_543,r3:r3_544,r4:r4_545,r5:r5_546,r6:r6_547,r7:r7_548,sp:sp_540
l000034EC:
	call Mem396[r6_1023 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_437,r0:r0_403,r1:r1_424,r10:r10_443,r11:r4_411 + 8<32>,r12:r2_419,r2:r2_419,r3:r3_428,r4:r4_411,r5:r5_397,r6:r6_390,r7:r7_435,r8:r8_398,r9:r9_448,Stack +0000:dwArg00
		defs: lr:lr_569,r0:r0_561,r10:r10_571,r11:r11_572,r12:r12_570,r2:r2_563,r3:r3_564,r4:r4_565,r5:r5_566,r6:r6_567,r7:r7_568,sp:sp_560
l00003538:
	r1_130 = r12_466
l0000353A:
	branch r1_130 == 0<32> l00003566
l00003566:
	word32 r9_586 = Mem396[r6_1023 + 8<i32>:word32]
	Mem590[r4_1004 + 116<i32>:byte] = 1<8>
	word32 r5_1022 = Mem590[r9_586 + -20<i32>:word32]
	branch r5_1022 == 0<32> l0000357E
l00003574:
	r9_586 = CONVERT(Mem590[r9_586 + 112<i32>:byte], byte, word32)
	branch SLICE(r9_586 - r1_130, byte, 0) == 0<8> l000035F2
l0000357E:
	word32 r8_693
	word32 r0_633
	word32 r1_634
	word32 r2_635
	word32 r3_636
	word32 r4_637
	word32 r5_638
	word32 r6_639
	word32 r7_640
	word32 lr_641
	word32 r12_642
	word32 r10_643
	word32 r11_644
	word32 r9_646
	call Mem590[r6_1023 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_615,r0:r0_600,r1:r1_579,r10:r10_621,r11:r11_624,r12:r12_618,r2:r2_604,r3:r3_607,r4:r4_588,r5:r5_591,r6:r6_582,r7:r7_612,r8:1<32>,r9:r9_628,Stack +0000:dwArg00
		defs: lr:lr_641,r0:r0_633,r1:r1_634,r10:r10_643,r11:r11_644,r12:r12_642,r2:r2_635,r3:r3_636,r4:r4_637,r5:r5_638,r6:r6_639,r7:r7_640,r9:r9_646
	Mem650[r12_642:word32] = 0x5F<32>
	word32 r8_651 = Mem650[r6_639 + 48<i32>:word32]
	Mem652[r4_637 + 112<i32>:word32] = r8_651
	word32 r12_663
	call Mem652[r6_639 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_641,r0:r0_633,r1:r1_634,r10:r10_643,r11:r11_644,r12:r12_642,r2:r2_635,r3:r3_636,r4:r4_637,r5:r5_638,r6:r6_639,r7:r7_640,r8:r8_651,r9:r9_646,Stack +0000:dwArg00
		defs: lr:lr_662,r0:r0_654,r1:r1_655,r11:r11_665,r12:r12_663,r2:r2_656,r4:r4_658,r5:r5_659,r6:r6_660,r7:r7_661,sp:sp_653
	word32 r8_670 = Mem652[r12_663:word32]
	r3_1088 = r12_663
	branch r8_670 == 0x5F<32> l000035A2
l0000359A:
	branch r8_670 != 0x3D<32> l000038EE
l000038EE:
	r1_130 = 1<32>
l000035A2:
	branch r5_1022 != 0<32> l000035C0
l000035A6:
	word32 r12_685 = fn000066CC()
	r11_1096 = r4_1004 + 8<32>
	r1_130 = r12_685 >>u 0x1F<32>
	branch r12_685 <= 0<32> l000035C0
l000035C0:
	r8_693 = 0<32>
l000035BA:
	r8_693 = 2<32>
l000035C2:
	r10_1095 = Mem652[r6_1023 + 8<i32>:word32]
	Mem705[r4_1004 + 120<i32>:word32] = r8_693
	Mem714[r10_1095 + 28<i32>:byte] = SLICE(CONVERT((CONVERT(r8_693 != 0<32>, bool, word32) | CONVERT(Mem705[r10_1095 + 28<i32>:byte], byte, word32)) != 0<32>, bool, word32), byte, 0)
	branch r1_130 == 0<32> l000035F2
l000035DC:
	word32 lr_726
	word32 r12_730
	word32 r9_732
	word32 r11_1897
	word32 r10_1896
	word32 r8_731 = fn0000A778(r2_1002, lr_1093, out r9_732, out r10_1896, out r11_1897, out r12_730, out lr_726)
	word32 r10_737 = Mem714[r6_1023 + 1144<i32>:word32]
	Mem742[sp_1084 - 4<i32>:word32] = r12_730
	word32 sp_756
	call Mem742[r6_1023 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_726,r0:r0_654,r1:r1_715,r10:r10_737,r11:Mem742[r12_663:word32],r12:0<32>,r2:r2_656,r3:r12_663,r4:r4_658,r5:r5_659,r6:r6_660,r7:r7_661,r8:r8_731,r9:r9_732,Stack +0000:dwArg00
		defs: lr:lr_765,r0:r0_757,r1:r1_758,r10:r10_767,r11:r11_768,r2:r2_759,r3:r3_760,r4:r4_761,r5:r5_762,r6:r6_763,r7:r7_764,sp:sp_756
	sp_1084 = sp_756 + 4<32>
l000035F2:
	branch (Mem776[r4_1004 + 24<i32>:word32] & 0xF000<32>) != 0xA000<32> l000036CE
l000035FE:
	word32 r9_782 = Mem776[r6_1023 + 8<i32>:word32]
	branch Mem776[r9_782 + -20<i32>:word32] == 0<32> l00003612
l00003606:
	branch Mem776[r9_782 + 105<i32>:byte] == 0<8> l000036CE
l00003612:
	word32 r12_811
	word32 lr_1007
	word32 r10_1009
	word32 r11_1028
	word32 r8_1010
	word32 r9_1011
	bool Z_814 = fn000066D0(r1_130, r2_1002, r3_1088, r4_1004, r5_1022, r7_1024, Mem776[r4_1004 + 56<i32>:word32], r2_1002, lr_1093, out r8_1010, out r9_1011, out r10_1009, out r11_1028, out r12_811, out lr_1007)
	Mem816[r4_1004 + 4<i32>:word32] = r12_811
	branch Z_814 l0000362C
l0000361E:
	r8_1010 = fn00003168(r0_1017, r1_130, r4_1004, r7_1024, r2_1002, Mem816[r6_1023 + 1140<i32>:word32], CONVERT(r0_1017 != 0<32>, bool, word32), lr_1007, out r9_1011, out r10_1009, out r11_1028, out lr_1007)
l0000362C:
	word32 r3_1020
	word32 r1_1000 = Mem816[r4_1004 + 4<i32>:word32]
	branch r1_1000 != 0<32> l00003636
l00003636:
	word32 r9_841 = CONVERT(Mem816[r1_1000:byte], byte, word32)
	branch SLICE(r9_841 - 0x2F<32>, byte, 0) == 0<8> l0000364A
l00003640:
	word32 r3_862
	word32 r12_868
	word32 r10_869
	word32 r11_870
	word32 r8_871
	word32 r9_872
	byte VNZC_874
	call Mem816[r6_1023 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr_853,r0:r0_820,r1:r1_838,r10:r10_854,r11:0x2F<32>,r12:r2_794,r2:r2_794,r3:r3_799,r4:r4_775,r5:r5_801,r6:r6_781,r7:r7_803,r8:0x2F<32>,r9:r9_841,Stack +0000:dwArg00
		defs: lr:lr_867,r0:r0_859,r1:r1_860,r10:r10_869,r11:r11_870,r12:r12_868,r2:r2_861,r3:r3_862,r4:r4_863,r5:r5_864,r6:r6_865,r7:r7_866,r8:r8_871,r9:r9_872,VNZC:VNZC_874
	branch SLICE(VNZC_874, bool, 1) l00003654
l00003654:
	word32 r0_880
	word32 r1_881
	word32 r2_882
	word32 r4_884
	word32 r5_885
	word32 r6_886
	word32 r7_887
	word32 lr_888
	word32 r12_889
	call Mem816[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_867,r0:r0_859,r1:r1_860,r10:r10_869,r11:r11_870,r12:r1_860,r2:r2_861,r3:r3_862,r4:r4_863,r5:r12_868 + 1<32>,r6:r6_865,r7:r7_866,r8:r8_871,r9:r9_872,Stack +0000:dwArg00
		defs: lr:lr_888,r0:r0_880,r1:r1_881,r12:r12_889,r2:r2_882,r4:r4_884,r5:r5_885,r6:r6_886,r7:r7_887
	word32 r5_896 = r5_885 - r2_882
	word32 lr_900
	word32 r12_904
	word32 r9_906
	word32 r0_915
	word32 r1_916
	word32 r2_917
	word32 r3_918
	word32 r4_919
	word32 r5_920
	word32 r6_921
	word32 r7_922
	word32 lr_923
	word32 r10_925
	word32 r8_927
	word32 r9_928
	call Mem816[r6_886 + 496<i32>:word32] (retsize: 0;)
		uses: lr:lr_900,r0:r0_880,r1:r1_881,r10:r5_896,r11:r2_882,r12:r12_904,r2:r2_882,r3:r12_904,r4:r4_884,r5:r5_896,r6:r6_886,r7:r7_887,r8:fn0000B95C(r4_884, r5_896, r6_886, r7_887, r12_889 + 1<32> + r5_896, lr_888, out r9_906, out r11_1898, out r12_904, out lr_900),r9:r9_906,Stack +0000:dwArg00
		defs: lr:lr_923,r0:r0_915,r1:r1_916,r10:r10_925,r2:r2_917,r3:r3_918,r4:r4_919,r5:r5_920,r6:r6_921,r7:r7_922,r8:r8_927,r9:r9_928
	call Mem816[r6_921 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_923,r0:r0_915,r1:r1_916,r10:r10_925,r11:r1_916,r12:r3_918 + r5_920,r2:r2_917,r3:r3_918,r4:r4_919,r5:r5_920,r6:r6_921,r7:r7_922,r8:r8_927,r9:r9_928,Stack +0000:dwArg00
		defs: lr:lr_943,r0:r0_935,r1:r1_936,r10:r10_945,r11:r11_946,r2:r2_937,r3:r3_938,r4:r4_939,r5:r5_940,r6:r6_941,r7:r7_942,r8:r8_947,r9:r9_948
l0000364A:
	word32 r12_966
	r0_1017 = fn0000B994(r0_1017, r1_1000, r2_1002, r4_1004, r5_1022, r6_1023, r7_1024, r1_1000, lr_1007, out r1_1000, out r2_1002, out r8_1010, out r9_1011, out r10_1009, out r11_1028, out r12_966, out lr_1007)
	r3_1020 = r12_966
l0000367C:
	branch r3_1020 == 0<32> l000036C8
l00003680:
	r5_1022 = Mem816[r6_1023 + 8<i32>:word32]
	r8_1010 = Mem816[r5_1022 + 24<i32>:word32]
	branch r8_1010 >u 1<32> l00003696
l0000368A:
	r9_1011 = CONVERT(Mem816[r5_1022 + 105<i32>:byte], byte, word32)
	r8_1010 = 0<32>
	branch SLICE(r9_1011, byte, 0) == 0<8> l000036C8
l00003696:
	byte VNZC_1032
	call Mem816[r6_1023 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_1007,r0:r0_998,r1:r1_1000,r10:r10_1009,r11:r7_990 - 0x2A4<32>,r12:r3_975,r2:r2_1002,r3:r3_975,r4:r4_1004,r5:r5_981,r6:r6_978,r7:r7_990,r8:r8_1010,r9:r9_1011,Stack +0000:dwArg00
		defs: lr:lr_1025,r0:r0_1017,r1:r1_1018,r10:r10_1027,r11:r11_1028,r2:r2_1019,r3:r3_1020,r4:r4_1021,r5:r5_1022,r6:r6_1023,r7:r7_1024,r8:r8_1029,r9:r9_1030,VNZC:VNZC_1032
	branch SLICE(VNZC_1032, bool, 1) l000036C8
l000036A2:
	Mem1035[r4_1004 + 117<i32>:byte] = 1<8>
	branch r0_1017 == 0<32> l000036C0
l000036AC:
	branch Mem1035[r5_1022 + -20<i32>:word32] == 0<32> l000036C0
l000036B2:
	word32 r8_1041 = Mem1035[r7_1024 + -660<i32>:word32]
	r8_1010 = r8_1041 & 0xF000<32>
	branch (r8_1041 & 0xF000<32>) == 0x4000<32> l000036C8
l000036C0:
	r8_1010 = Mem1035[r7_1024 + -660<i32>:word32]
	Mem1049[r4_1004 + 108<i32>:word32] = r8_1010
l00003632:
	r3_1020 = r1_1000
l000036C8:
	call Mem1056[r6_1023 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1068,r0:r0_1057,r1:r1_1059,r10:r10_1070,r11:r11_1072,r12:r3_1051,r2:r2_1061,r3:r3_1051,r4:r4_1063,r5:r5_1064,r6:r6_1054,r7:r7_1067,r8:r8_1076,r9:r9_1079,Stack +0000:dwArg00
		defs: lr:lr_1093,r0:r0_1085,r10:r10_1095,r11:r11_1096,r2:r2_1087,r3:r3_1088,r4:r4_1089,r6:r6_1091,r7:r7_1092,sp:sp_1084
l000036CE:
	branch (Mem1102[r4_1004 + 24<i32>:word32] & 0xF000<32>) != 0xA000<32> l000036EE
l000036DA:
	branch Mem1102[Mem1102[r6_1023 + 8<i32>:word32] + 105<i32>:byte] != 0<8> l000036EE
l000036E8:
	Mem1114[r4_1004 + 117<i32>:byte] = 1<8>
l000036EE:
	word32 r8_1123
	word32 r8_1117 = Mem1116[r4_1004 + 24<i32>:word32]
	branch (r8_1117 & 0xF000<32>) != 0xA000<32> l00003700
l00003700:
	branch (r8_1117 & 0xF000<32>) != 0x4000<32> l0000371E
l0000371E:
	r8_1123 = 5<32>
l00003706:
	branch (r0_1017 & (CONVERT(Mem1116[Mem1116[r6_1023 + 8<i32>:word32] + 113<i32>:byte], byte, word32) ^ 0x10000<32>)) == 0<32> l0000371A
l0000371A:
	r8_1123 = 3<32>
l00003716:
	r8_1123 = 9<32>
l000036FA:
	r8_1123 = 6<32>
l00003720:
	word32 r5_1138 = Mem1116[r6_1023 + 8<i32>:word32]
	Mem1141[r4_1004 + 104<i32>:word32] = r8_1123
	word64 r1_r0_1143 = Mem1141[r4_1004 + 64<i32>:word64]
	r0_1154 = SLICE(r1_r0_1143, word32, 0) (alias)
	r1_1170 = SLICE(r1_r0_1143, word32, 32) (alias)
	branch Mem1141[r5_1138 + -20<i32>:word32] == 0<32> l0000373C
l00003730:
	branch Mem1141[r5_1138 + 114<i32>:byte] == 0<8> l00003768
l0000373C:
	word32 sp_1160 = sp_1084 - 8<i32>
	Mem1163[sp_1160:word64] = Mem1141[r5_1138 + 120<i32>:word64]
	Mem1168[sp_1160 - 8<i32>:word64] = 0x200<64>
	word32 lr_1188
	word32 r12_1194
	word32 r5_1198
	word32 r10_1904
	word32 r11_1905
	r0_1154 = fn000093B8(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1138, Mem1168[r5_1138 + -12<i32>:word32], r7_1024 - 0x2A4<32>, Mem1168[sp_1160 - 8<i32>:word64], Mem1168[sp_1160:word64], Mem1168[sp_1160 + 8<i32>:word32], Mem1168[sp_1160 + 12<i32>:word32], Mem1168[sp_1160 + 16<i32>:word64], Mem1168[sp_1160 + 28<i32>:word32], Mem1168[sp_1160 + 32<i32>:word32], Mem1168[sp_1160 + 48<i32>:word32], Mem1168[sp_1160 + 52<i32>:word32], Mem1168[sp_1160 + 56<i32>:word32], out r1_1170, out r2_1002, out r3_1088, out r4_1004, out r5_1198, out r6_1023, out r7_1024, out r10_1904, out r11_1905, out r12_1194, out lr_1188)
	word32 r12_1211
	r10_1095 = fn00006AA8(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1198, r6_1023, r7_1024, 0<32>, r12_1194, lr_1188, out r11_1096, out r12_1211, out lr_1093)
	branch Mem1168[r5_1198 + 36<i32>:word32] >= r12_1211 l00003768
l00003766:
	Mem1222[r5_1198 + -28<i32>:word32] = r12_1211
l00003768:
	word32 r5_1225 = Mem1224[r6_1023 + 8<i32>:word32]
	word32 r8_1226 = Mem1224[r5_1225 + -20<i32>:word32]
	branch r8_1226 != 0<32> l000037DA
l00003770:
	branch SLICE(CONVERT(Mem1224[Mem1224[r6_1023 + 48<i32>:word32] + 2<i32>:byte], byte, word32) - r8_1226, byte, 0) == 0<8> l00003788
l0000377A:
	word32 r12_1248
	r0_1154 = fn0000330C(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1225, Mem1224[r4_1004 + 32<i32>:word32], lr_1093, out r1_1170, out r2_1002, out r3_1088, out r10_1095, out r11_1096, out r12_1248, out lr_1093)
	branch Mem1224[r5_1225 + 44<i32>:word32] >= r12_1248 l00003788
l00003786:
	Mem1260[r5_1225 + -20<i32>:word32] = r12_1248
l00003788:
	branch Mem1262[Mem1262[r6_1023 + 48<i32>:word32] + 3<i32>:byte] == 0<8> l000037BE
l00003794:
	word32 r12_1278
	word32 r5_1270 = Mem1262[r4_1004 + 36<i32>:word32]
	branch Mem1262[Mem1262[r6_1023 + 8<i32>:word32] + 88<i32>:byte] == 0<8> l000037A8
l000037A8:
	r12_1278 = fn00009A5C(r5_1270, r7_1024, r5_1270, lr_1093)
l000037A2:
	r12_1278 = 0<32>
l000037AE:
	word32 r12_1305
	r0_1154 = fn000032D0(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1270, r7_1024, r5_1270, r12_1278, lr_1093, out r1_1170, out r2_1002, out r3_1088, out r10_1095, out r11_1096, out r12_1305, out lr_1093)
	word32 r9_1316 = Mem1262[r6_1023 + 8<i32>:word32]
	branch Mem1262[r9_1316 + 48<i32>:word32] >= r12_1305 l000037BE
l000037BC:
	Mem1320[r9_1316 + -16<i32>:word32] = r12_1305
l000037BE:
	word32 r5_1323 = Mem1322[r6_1023 + 8<i32>:word32]
	branch Mem1322[r5_1323 + 128<i32>:byte] == 0<8> l000037DA
l000037CC:
	word32 r12_1340
	r0_1154 = fn0000330C(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1323, Mem1322[r4_1004 + 32<i32>:word32], lr_1093, out r1_1170, out r2_1002, out r3_1088, out r10_1095, out r11_1096, out r12_1340, out lr_1093)
	branch Mem1322[r5_1323 + 52<i32>:word32] >= r12_1340 l000037DA
l000037D8:
	Mem1352[r5_1323 + -12<i32>:word32] = r12_1340
l000037DA:
	word32 r5_1355 = Mem1354[r6_1023 + 8<i32>:word32]
	word32 r9_1357 = CONVERT(Mem1354[r5_1355 + 112<i32>:byte], byte, word32)
	branch SLICE(r9_1357, byte, 0) == 0<8> l000037F6
l000037E8:
	word32 r5_1399
	word32 r12_1403
	call Mem1354[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1368,r0:r0_1362,r1:r1_1363,r10:r10_1369,r11:r11_1377,r12:Mem1354[r4_1233 + -16<i32>:word32],r2:r2_1364,r3:r3_1365,r4:r4_1233,r5:r5_1355,r6:r6_1223,r7:r7_1276,r8:0<32>,r9:r9_1357,Stack +0000:dwArg00
		defs: lr:lr_1402,r0:r0_1394,r1:r1_1395,r12:r12_1403,r2:r2_1396,r4:r4_1398,r5:r5_1399,r6:r6_1400,r7:r7_1401
	branch Mem1354[r5_1399 + 56<i32>:word32] >= r12_1403 l000037F6
l000037F4:
	Mem1413[r5_1399 + -8<i32>:word32] = r12_1403
l000037F6:
	word32 r5_1416 = Mem1415[r6_1023 + 8<i32>:word32]
	r3_1088 = Mem1415[r5_1416 + -20<i32>:word32]
	branch r3_1088 != 0<32> l000038B4
l000037FE:
	word32 lr_1426
	word32 r10_1427
	word32 r11_1428
	word32 r12_1429
	word32 r9_1431
	word32 sp_1440
	word32 r0_1441
	word32 r1_1442
	word32 r2_1443
	word32 r3_1444
	word32 r4_1445
	word32 r5_1446
	word32 r6_1447
	word32 r7_1448
	word32 r12_1450
	call Mem1415[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1426,r0:r0_1436,r1:r1_1437,r10:r10_1427,r11:r11_1428,r12:r12_1429,r2:r2_1438,r3:r3_1417,r4:r4_1420,r5:r5_1416,r6:r6_1414,r7:r7_1423,r8:fn0000B7D4(Mem1415[r4_1420 + 28<i32>:word32], r3_1417, r7_1423 - 0x18<32>, out r9_1431, out r10_1427, out r11_1428, out r12_1429, out lr_1426),r9:r9_1431,Stack +0000:dwArg00
		defs: r0:r0_1441,r1:r1_1442,r12:r12_1450,r2:r2_1443,r3:r3_1444,r4:r4_1445,r5:r5_1446,r6:r6_1447,r7:r7_1448,sp:sp_1440
	branch Mem1415[r5_1446 + 40<i32>:word32] >= r12_1450 l00003816
l00003814:
	Mem1460[r5_1446 + -24<i32>:word32] = r12_1450
l00003816:
	word32 r8_1463 = Mem1462[r4_1445 + 24<i32>:word32]
	branch (r8_1463 & 0xF000<32>) == 0x2000<32> l00003828
l00003822:
	branch (r8_1463 & 0xF000<32>) != 0x6000<32> l0000387E
l0000387E:
	Mem1479[sp_1440 - 8<i32>:word64] = Mem1462[Mem1462[r6_1447 + 48<i32>:word32] + 4<i32>:word64]
	Mem1484[sp_1440 - 16<i32>:word64] = 1<64>
	word32 lr_1492
	word32 r12_1498
	word32 r5_1502
	word32 r11_1907
	word32 r10_1906
	r0_1154 = fn000093B8(r0_1441, r1_1442, r2_1443, r3_1444, r4_1445, r5_1446, Mem1484[r5_1446 + -12<i32>:word32], r7_1448 - 0x2A4<32>, Mem1484[sp_1440 - 16<i32>:word64], Mem1484[sp_1440 - 8<i32>:word64], Mem1484[sp_1440:word32], Mem1484[sp_1440 + 4<i32>:word32], Mem1484[sp_1440 + 8<i32>:word64], Mem1484[sp_1440 + 20<i32>:word32], Mem1484[sp_1440 + 24<i32>:word32], Mem1484[sp_1440 + 40<i32>:word32], Mem1484[sp_1440 + 44<i32>:word32], Mem1484[sp_1440 + 48<i32>:word32], out r1_1170, out r2_1002, out r3_1088, out r4_1004, out r5_1502, out r6_1023, out r7_1024, out r10_1906, out r11_1907, out r12_1498, out lr_1492)
	word32 r12_1515
	word32 r11_1908
	fn00006AA8(r0_1154, r1_1170, r2_1002, r3_1088, r4_1004, r5_1502, r6_1023, r7_1024, r3_1088, r12_1498, lr_1492, out r11_1908, out r12_1515, out lr_1093)
	branch Mem1484[r5_1502 + -60<i32>:word32] >= r12_1515 l000038B4
l000038A8:
	Mem1526[r5_1502 + 68<i32>:word32] = r12_1515
l00003828:
	fn00002718()
	word32 lr_1547
	word32 r10_1548
	word32 r11_1549
	word32 r12_1550
	word32 r9_1552
	word32 r0_1563
	word32 r1_1564
	word32 r2_1565
	word32 r3_1566
	word32 r4_1567
	word32 r5_1568
	word32 r6_1569
	word32 r7_1570
	word32 r12_1572
	call Mem1462[r6_1447 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1547,r0:r0_1441,r1:r1_1442,r10:r10_1548,r11:r11_1549,r12:r12_1550,r2:r7_1448 - 0x2A4<32>,r3:r3_1444,r4:r4_1445,r5:r5_1446,r6:r6_1447,r7:r7_1448,r8:fn0000B7D4(r12_1450, r3_1444, r7_1448 - 0x2A4<32>, out r9_1552, out r10_1548, out r11_1549, out r12_1550, out lr_1547),r9:r9_1552,Stack +0000:dwArg00
		defs: r0:r0_1563,r1:r1_1564,r12:r12_1572,r2:r2_1565,r3:r3_1566,r4:r4_1567,r5:r5_1568,r6:r6_1569,r7:r7_1570
	branch Mem1462[r5_1568 + 60<i32>:word32] >= r12_1572 l0000384A
l00003848:
	Mem1582[r5_1568 + -4<i32>:word32] = r12_1572
l0000384A:
	fn0000272E()
	word32 lr_1599
	word32 r10_1600
	word32 r11_1601
	word32 r12_1602
	word32 r9_1604
	word32 r5_1621
	word32 r12_1625
	call Mem1584[r6_1569 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1599,r0:r0_1563,r1:r1_1564,r10:r10_1600,r11:r11_1601,r12:r12_1602,r2:r2_1565,r3:r3_1566,r4:r4_1567,r5:r5_1568,r6:r6_1569,r7:r7_1570,r8:fn0000B7D4(r12_1572, r3_1566, r2_1565, out r9_1604, out r10_1600, out r11_1601, out r12_1602, out lr_1599),r9:r9_1604,Stack +0000:dwArg00
		defs: lr:lr_1624,r0:r0_1616,r1:r1_1617,r12:r12_1625,r2:r2_1618,r3:r3_1619,r4:r4_1620,r5:r5_1621,r6:r6_1622,r7:r7_1623
	branch Mem1584[r5_1621 + -64<i32>:word32] >= r12_1625 l0000386A
l00003866:
	Mem1635[r5_1621 + 64<i32>:word32] = r12_1625
l0000386A:
	word32 r8_1641 = Mem1637[r5_1621 + 60<i32>:word32] + Mem1637[r5_1621 + -64<i32>:word32]
	branch Mem1637[r5_1621 + -60<i32>:word32] >= r8_1641 + 2<32> l000038B4
l00003878:
	Mem1645[r5_1621 + 68<i32>:word32] = r8_1641 + 2<32>
l000038B4:
	word32 r5_1651 = Mem1649[r6_1023 + 8<i32>:word32]
	branch Mem1649[r5_1651 + 98<i32>:byte] == 0<8> l000038DA
l000038C2:
	word64 r11_r10_1659 = Mem1649[r4_1004 + 96<i32>:word64]
	word32 lr_1667
	word32 r10_1668
	word32 r11_1669
	word32 r12_1670
	word32 r9_1672
	word32 r12_1700
	call Mem1649[r6_1023 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1667,r0:r0_1677,r1:r1_1679,r10:r10_1668,r11:r11_1669,r12:r12_1670,r2:r2_1681,r3:r3_1684,r4:r4_1656,r5:r5_1651,r6:r6_1646,r7:r7_1660,r8:fn0000B7D4(SLICE(r11_r10_1659, word32, 0), SLICE(r11_r10_1659, word32, 32), r7_1660 - 0x2A4<32>, out r9_1672, out r10_1668, out r11_1669, out r12_1670, out lr_1667),r9:r9_1672,Stack +0000:dwArg00
		defs: lr:lr_1699,r0:r0_1691,r1:r1_1692,r12:r12_1700,r2:r2_1693,r4:r4_1695,r5:r5_1696,r6:r6_1697,r7:r7_1698
	branch Mem1649[r5_1651 + 32<i32>:word32] >= r12_1700 l000038DA
l000038D8:
	Mem1710[r5_1651 + -32<i32>:word32] = r12_1700
l000038DA:
	word32 r2_1899
	word32 r11_1903
	word32 r10_1902
	word32 r9_1901
	word32 r8_1900
	word32 r1_1728
	fn0000B994(r0_1154, r1_1170, r2_1002, r4_1004, r5_1651, r6_1023, r7_1024, Mem1712[r7_1024 + -680<i32>:word32], lr_1093, out r1_1728, out r2_1899, out r8_1900, out r9_1901, out r10_1902, out r11_1903, out r12_1731, out lr_1725)
	r9_1739 = Mem1712[r6_1023 + 8<i32>:word32]
l0000353E:
	word32 r10_1888
	word32 r9_1887
	word32 r11_1889
	fn00003168(r0_1017, r1_130, r4_1004, r7_1024, r2_1002, Mem396[r6_1023 + 1148<i32>:word32], r0_1017, lr_1093, out r9_1887, out r10_1888, out r11_1889, out lr_1725)
	branch r0_1017 == 0<32> l00003554
l00003554:
	word32 r2_1891
	word32 r1_1890
	word32 r10_1894
	word32 r9_1893
	word32 r8_1892
	word32 r11_1895
	fn0000B994(0<32>, r1_130, r2_1002, r4_1004, r5_1758, r6_1023, r7_1024, Mem396[r7_1024 + -680<i32>:word32], lr_1725, out r1_1890, out r2_1891, out r8_1892, out r9_1893, out r10_1894, out r11_1895, out r12_1731, out lr_1725)
	r9_1739 = Mem396[r6_1023 + 8<i32>:word32]
l000038E4:
	Mem1778[r4_1004:word32] = r12_1731
	Mem1783[r9_1739 + 12<i32>:word32] = Mem1778[r9_1739 + 12<i32>:word32] + 1<32>
l0000354C:
l000038F4:
	word32 sp_1789 = Mem1788[r7_1024 + -684<i32>:word32]
	word32 r7_1798 = Mem1788[sp_1789 + 0x2B4<32>:word32]
	word32 r6_1799 = Mem1788[sp_1789 + 0x2B8<32>:word32]
	word32 r5_1800 = Mem1788[sp_1789 + 0x2BC<32>:word32]
	word32 r4_1801 = Mem1788[sp_1789 + 0x2C0<32>:word32]
	word32 r2_1803 = Mem1788[sp_1789 + 0x2C8<32>:word32]
	r3Out = Mem1788[sp_1789 + 0x2C4<32>:word32]
	r4Out = r4_1801
	r5Out = r5_1800
	r6Out = r6_1799
	r7Out = r7_1798
	lrOut = lr_1725
	return r2_1803
fn00003334_exit:


word32 fn00003904(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003904_entry:
l00003904:
	word32 r12_32
	word32 r6_19 = 0x00003908<p32> - Mem17[0x00003936<p32>:word32]
	branch r10 != 0<32> l00003918
l00003918:
	branch Mem17[Mem17[r6_19 + 8<i32>:word32] + 88<i32>:byte] == 0<8> l0000392A
l0000392A:
	r12_32 = fn00009B5C(r11, r12, r12, lr)
l00003926:
	r12_32 = 0<32>
l00003912:
	r12_32 = Mem17[r6_19 + 140<i32>:word32]
l0000392E:
	word32 lr_56
	word32 r1_58
	word32 r12_61
	word32 r2_62
	word32 r3_63
	word32 r0_57 = fn00003198(r0, r1, r2, r3, r4, r11, r12, r12_32, lr, out r1_58, out r2_62, out r3_63, out r12_61, out lr_56)
	r1Out = r1_58
	r2Out = r2_62
	r3Out = r3_63
	r12Out = r12_61
	lrOut = lr_56
	return r0_57
fn00003904_exit:


word32 fn0000393C(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000393C_entry:
l0000393C:
	word32 r6_19 = 0x00003940<p32> - Mem17[0x000039E6<p32>:word32]
	word32 r7_20 = Mem17[r6_19 + 8<i32>:word32]
	word32 r8_21 = Mem17[r7_20 + 12<i32>:word32]
	branch Mem17[r7_20 + 132<i32>:word32] >=u (r8_21 >>u 1<32>) + r8_21 l0000396E
l00003954:
	word32 lr_33
	word32 pc_195
	call Mem17[r6_19 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr,pc:pc_195,r0:r0,r1:r1,r12:Mem17[r7_20 + 16<i32>:word32],r2:r2,r4:r4,r5:r5,r6:r6_19,r7:r7_20
		defs: lr:lr_33,pc:pc_195,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_32
	word32 r12_46 = fn000030B4(r4, r5, r7_20, 0xC<32>, Mem17[r7_20 + 12<i32>:word32], lr_33, out lr)
	Mem56[r7_20 + 132<i32>:word32] = Mem17[r7_20 + 12<i32>:word32] * 3<32>
	Mem57[r7_20 + 16<i32>:word32] = r12_46
l0000396E:
	word32 r10_171 = fn00002A4C()
	branch Mem67[r7_20 + 136<i32>:word32] == 0xFFFFFFFF<32> l000039E4
l0000397A:
	word32 r4_79
	word32 r5_80
	word32 r7_82
	word32 pc_89
	byte VNZC_90
	word32 r6_105
	word32 r12_123
	word32 lr_107
	call Mem67[r6_19 + 420<i32>:word32] (retsize: 0;)
		uses: lr:lr_76,pc:pc_89,r0:r0,r1:r1,r12:r7_66 + 0x8C<32>,r2:r2,r4:r4_74,r5:r5_75,r6:r6_73,r7:r7_66
		defs: lr:lr_83,pc:pc_89,r12:r12_87,r4:r4_79,r5:r5_80,r6:r6_81,r7:r7_82,VNZC:VNZC_90
	branch SLICE(VNZC_90, bool, 1) l000039AA
l00003984:
	branch Mem67[Mem67[r6_105 + 8<i32>:word32] + 136<i32>:word32] != 3<32> l000039A4
l0000398E:
	word32 pc_113
	call Mem67[r6_105 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_83,pc:pc_113,r0:r0,r1:r1,r10:0xCC6<32>,r11:Mem67[r6_81 + 220<i32>:word32],r12:Mem67[r6_81 + 1136<i32>:word32],r2:r2,r4:r4_79,r5:r5_80,r6:r6_81,r7:r7_82,r9:0x000065B8<p32>
		defs: lr:lr_107,pc:pc_113,r6:r6_105
l000039A4:
	fn00002A4C()
	r12_123 = 1<32>
l000039AA:
	word32 r9_132
	word32 r9_128 = Mem67[r6_105 + 8<i32>:word32]
	word32 r8_129 = Mem67[r9_128 + 136<i32>:word32]
	branch r8_129 == 4<32> l000039B8
l000039B8:
	r9_132 = Mem67[r9_128 + 316<i32>:word32]
l000039B4:
	r9_132 = 0<32>
l000039BC:
	word32 r11_136 = Mem67[r6_105 + 8<i32>:word32]
	r10_171 = fn00009D6C(r0, r1, r2, Mem67[Mem67[r6_105 + -16<i32>:word32] + (CONVERT(Mem67[r11_136 + 320<i32>:byte], byte, word32) + (CONVERT(Mem67[r11_136 + 321<i32>:byte], byte, word32) + (r12_123 + (r9_132 + r8_129 << 1<8>) << 1<8>) << 1<8>)) * 4<32>:word32], Mem67[r11_136 + 12<i32>:word32], Mem67[r11_136 + 16<i32>:word32], lr_107, out lr)
l000039E4:
	lrOut = lr
	return r10_171
fn0000393C_exit:


void fn00003A0C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003A0C_entry:
l00003A0C:
	fn00006814(r0, r1, r2, r3, r4, r5, 0x00003A10<p32> - Mem17[0x00003A1A<p32>:word32], r7, Mem17[r11:word32], Mem17[r12:word32], lr)
	return
fn00003A0C_exit:


word32 fn00003A44(word32 r0, word32 r2, word32 r5, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r5:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00003A44_entry:
l00003A44:
	word32 r6_200 = 0x00003A48<p32> - Mem29[0x00003B26<p32>:word32]
	word32 r3_197 = r12
	word32 r1_158 = r11
	branch r12 == 0<32> l00003A66
l00003A52:
	branch Mem29[Mem29[r6_200 + 8<i32>:word32] + 324<i32>:word32] == 0<32> l00003A66
l00003A5C:
	fn00003120(r0, r11, r2, r5, 0<32>, r12, 0<32>, lr, out lr)
l00003A66:
	word32 r4_198 = Mem29[Mem29[r6_200 + 8<i32>:word32] + 12<i32>:word32]
	word32 r2_196 = (r4_198 << 2<32>) - 4<32>
l00003AEA:
	r4_198 = r4_198 - 1<32>
	word32 r8_67 = Mem29[r6_200 + 8<i32>:word32]
	branch r4_198 != 0xFFFFFFFF<32> l00003A74
l00003A74:
	word32 r7_201 = Mem29[Mem29[r8_67 + 16<i32>:word32] + r2_196:word32]
	word32 r8_73 = Mem29[r7_201 + -24<i32>:word32]
	branch r8_73 == 3<32> l00003A84
l00003A80:
	branch r8_73 != 9<32> l00003AE8
l00003A84:
	word32 r11_204
	branch r3_197 == 0<32> l00003AB8
l00003A88:
	word32 r12_87
	word32 r11_422
	fn00006E94(Mem29[r7_201:word32], out r11_422, out r12_87)
	word32 r9_95 = CONVERT(Mem29[r12_87:byte], byte, word32)
	branch SLICE(r9_95 - 0x2E<32>, byte, 0) != 0<8> l00003B18
l00003A98:
	word32 r8_101
	word32 r8_98 = CONVERT(Mem29[r12_87 + 1<i32>:byte], byte, word32)
	r8_101 = r8_98
	branch SLICE(r8_98 - r9_95, byte, 0) == 0<8> l00003AA2
l00003A9E_1:
	r8_101 = 1<32>
l00003AA2:
	branch SLICE(r8_98 - r9_95, byte, 0) != 0<8> l00003AA6
l00003AA2_1:
	r8_101 = 2<32>
l00003AA6:
	word32 r12_110 = CONVERT(Mem29[r12_87 + r8_101:byte], byte, word32)
	branch r12_110 == 0<32> l00003AE8
l00003AAE:
	branch SLICE(r12_110 - 0x2F<32>, byte, 0) != 0<8> l00003B18
l00003B18:
	word32 r11_120 = Mem29[r7_201:word32]
	branch SLICE(CONVERT(Mem29[r11_120:byte], byte, word32) - 0x2F<32>, byte, 0) != 0<8> l00003AC4
l00003AC4:
	word32 lr_144
	word32 r12_147 = fn000071D4(r3_197, r4_198, r5, r7_201, r11_120, r3_197, lr, out lr_144)
	word32 lr_172
	word32 pc_208
	call Mem29[r6_200 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_172,pc:pc_208,r0:r0_165,r1:r1_158,r11:fn00003120(r0_165, r1_158, r2_71, r12_147, r1_158, Mem29[r7_72 + 4<i32>:word32], r12_147, lr_144, out lr_172),r12:r12_147,r2:r2_71,r3:r3_79,r4:r4_64,r5:r12_147,r6:r6_65,r7:r7_72
		defs: lr:lr_202,pc:pc_208,r0:r0_194,r1:r1_195,r11:r11_204,r2:r2_196,r3:r3_197,r4:r4_198,r5:r5_199,r6:r6_200,r7:r7_201
l00003B24:
l00003AB8:
	r11_204 = fn00003120(r0, r1_158, r2_196, r5, r1_158, Mem29[r7_201 + 4<i32>:word32], Mem29[r7_201:word32], lr, out lr)
l00003ADC:
	branch Mem29[r7_201 + -24<i32>:word32] != 9<32> l00003AE8
l00003AE2:
	word32 pc_266
	call Mem29[r6_200 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_247,pc:pc_266,r0:r0_239,r1:r1_240,r11:r11_248,r12:Mem29[r7_231:word32],r2:r2_241,r3:r3_242,r4:r4_244,r5:r5_246,r6:r6_237,r7:r7_231
		defs: lr:lr_260,pc:pc_266,r0:r0_252,r1:r1_253,r2:r2_254,r3:r3_255,r4:r4_256,r5:r5_257,r6:r6_258
l00003AB6:
l00003AE8:
	r2_196 = r2_196 - 4<32>
l00003AF2:
	word32 r10_271 = 0<32>
	word32 r11_272 = Mem29[r8_67 + 16<i32>:word32]
	word32 r12_273 = Mem29[r8_67 + 12<i32>:word32]
	word32 r9_274 = 0<32>
l00003B0E:
	branch r9_274 != r12_273 l00003AFC
l00003AFC:
	word32 r8_281 = Mem280[r11_272 + r9_274 * 4<32>:word32]
	Mem283[r10_271 * 4<32>:word32] = r8_281
	r9_274 = r9_274 + 1<32>
	r10_271 = r10_271 + CONVERT(Mem283[r8_281 + -24<i32>:word32] != 9<32>, bool, word32)
l00003B12:
	Mem293[Mem280[r6_200 + 8<i32>:word32] + 12<i32>:word32] = r10_271
	lrOut = lr
	return r10_271
fn00003A44_exit:


word32 fn00003B2C(word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r5Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003B60
//      fn00003B8C
//      fn000045F0
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r10 r11 r4 r5 r7 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003B2C_entry:
l00003B2C:
	word32 r6_19 = 0x00003B30<p32> - Mem17[0x00003B5A<p32>:word32]
	word32 r10_20 = Mem17[r6_19 + 8<i32>:word32]
	word32 r7_24 = r12
	branch Mem17[r10_20 + 328<i32>:byte] != 0<8> l00003B4A
l00003B42:
	Mem28[r10_20 + 328<i32>:byte] = 1<8>
	r4 = fn00003B60(out r5, out r6_19, out r7_24, out lr)
l00003B4A:
	word32 r8_43 = Mem42[r6_19 + 40<i32>:word32]
	word32 lr_58
	word32 r10_59
	word32 r9_61
	word32 r11_63
	call Mem42[r6_19 + 280<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,r10:1<32>,r11:Mem42[r7_44:word32],r12:Mem42[r7_44 + 4<i32>:word32],r4:r4_49,r5:r5_50,r6:r6_41,r7:r7_44,r8:r8_43,r9:Mem42[r8_43:word32]
		defs: lr:lr_58,r10:r10_59,r11:r11_63,r9:r9_61
	r5Out = <invalid>
	r7Out = <invalid>
	r9Out = r9_61
	r10Out = r10_59
	r11Out = r11_63
	lrOut = lr_58
	return <invalid>
fn00003B2C_exit:


word32 fn00003B60(ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003B2C
//      fn000045F0
// MayUse: 
// LiveOut: lr r4 r5 r6 r7
// Trashed: VNZC lr r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00003B60_entry:
l00003B60:
	word32 r7_20 = Mem17[0x00003B64<p32> - Mem17[0x00003B8A<p32>:word32] + -56<i32>:word32]
	branch Mem17[r7_20 + 20<i32>:word32] == 0<32> l00003B74
l00003B74:
	word32 r5_27
	word32 r7_29
	word32 lr_30
	word32 r9_90
	word32 r10_91
	word32 r11_92
	word32 r7_93
	word32 r9_94
	word32 r10_95
	word32 r11_96
	r4 = fn00003B2C(fn00003B2C(r4, r5, r7_20, lr, out r5_27, out r7_29, out r9_90, out r10_91, out r11_92, out lr_30), r5_27, r7_29 + 0x18<32>, lr_30, out r5, out r7_93, out r9_94, out r10_95, out r11_96, out lr)
l00003B6E:
l00003B82:
	word32 lr_60
	word32 r5_98
	word32 r7_99
	word32 r9_100
	word32 r10_101
	word32 r11_102
	fn00003B2C(r4, r5, r12, lr, out r5_98, out r7_99, out r9_100, out r10_101, out r11_102, out lr_60)
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	lrOut = lr_60
	return <invalid>
fn00003B60_exit:


word32 fn00003B8C(word32 r4, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000045F0
// MayUse:  lr:[0..31] r4:[0..31]
// LiveOut: lr r10 r11 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00003B8C_entry:
l00003B8C:
	word32 r5_21 = Mem17[0x00003B90<p32> - Mem17[0x00003B9E<p32>:word32] + -56<i32>:word32]
	word32 lr_23
	word32 r5_58
	word32 r7_59
	word32 r9_60
	word32 r10_61
	word32 r11_62
	fn00003B2C(r4, r5_21, r5_21, lr, out r5_58, out r7_59, out r9_60, out r10_61, out r11_62, out lr_23)
	word32 lr_35
	word32 r10_36
	word32 r11_37
	word32 r9_40
	word32 r5_63
	word32 r7_64
	fn00003B2C(r4, r5_21, r5_21 + 8<32>, lr_23, out r5_63, out r7_64, out r9_40, out r10_36, out r11_37, out lr_35)
	r10Out = r10_36
	r11Out = r11_37
	lrOut = lr_35
	return r9_40
fn00003B8C_exit:


word32 fn00003BA4(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 sp
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00003BA4_entry:
l00003BA4:
	word32 r6_19 = 0x00003BA8<p32> - Mem17[0x00003BC6<p32>:word32]
	word32 r5_22 = r11
	word32 r7_24 = r12
	r4_37 = r4
l00003BBC:
	word32 r4_37
	branch r7_24 != 0<32> l00003BB0
l00003BB0:
	word32 r10_43
	word32 r11_44
	word32 r7_50
	branch fn000087C0(r0, r1, r2, r3, r4_37, r5_22, r6_19, r7_24, 4<32>, r5_22, Mem17[r7_24:word32], lr, out r0, out r1, out r2, out r3, out r4_37, out r5_22, out r6_19, out r7_50, out r10_43, out r11_44, out lr) l00003BBA
l00003BBA:
	r7_24 = Mem17[r7_50 + 4<i32>:word32]
l00003BB8:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = dwArg00
	r5Out = r4
	r6Out = r5
	r7Out = r6
	r10Out = r10_43
	r11Out = r11_44
	r12Out = r7
	lrOut = lr
	return r0
l00003BC4:
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r10Out = 4<32>
	r11Out = r5_22
	r12Out = r7_24
	lrOut = lr
	return r0
fn00003BA4_exit:


word32 fn0000418C(word32 r1, word32 r5, word32 r9, word32 r10, word32 r11, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004374
//      fn000045F0
//      fn0000511C
// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r5:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000418C_entry:
l0000418C:
	word32 r12_100
	word32 r6_111 = 0x00004196<p32> - Mem29[0x000042E8<p32>:word32]
	word32 r7_112 = fp - 36<i32>
	word32 r2_107 = fp - 0x1030<32>
	word32 r3_127 = r11
	word32 r4_109 = r10
	word32 r0_105 = r9
	word32 r12_52
	word32 lr_113
	word32 r11_102
	word32 r10_101 = fn0000A8DC(r1, r11, r5, r10, 0xFFFFFFFF<32>, r11, 0x1000<32>, fp - 0x1030<32>, lr, out r11_102, out r12_52, out lr_113)
	word32 r5_110 = r12_52
	r12_100 = r12_52
	branch r12_52 <=u 0xFFF<32> l000041E0
l000041C4:
	word32 sp_65 = fp - 0x103C<32> - (r12_52 + 7<32> & 0xFFFFFFFC<32>)
	r2_107 = sp_65
	r10_101 = fn0000A8DC(r1, r11, r12_52, r10, 0xFFFFFFFF<32>, r11, r12_52 + 1<32>, sp_65, lr_113, out r11_102, out r12_100, out lr_113)
l000041E0:
	word32 r9_86 = CONVERT(Mem59[Mem59[r6_111 + 8<i32>:word32] + 329<i32>:byte], byte, word32)
	branch SLICE(r9_86, byte, 0) == 0<8> l0000430A
l0000430A:
	branch r9 == 0<32> l0000434E
l0000430E:
	word32 r3_108
	word32 r12_114
	call Mem59[r6_111 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,r0:r9,r1:r1,r10:r10_101,r11:r11_102,r12:r12_100,r2:r2_94,r3:r11,r4:r10,r5:r12_52,r6:r6_33,r7:fp - 36<i32>,r9:r9_86
		defs: lr:lr_113,r0:r0_105,r1:r1_106,r12:r12_114,r2:r2_107,r3:r3_108,r4:r4_109,r5:r5_110,r6:r6_111,r7:r7_112
	branch r12_114 <=u 1<32> l00004326
l00004326:
	word32 r9_123 = r2_107
	word32 r12_124 = Mem59[Mem59[r6_111 + 156<i32>:word32]:word32]
	r11_102 = r2_107 + r5_110
	r3_127 = 0<32>
l00004346:
	r10_101 = r3_127 + 1<32>
	branch r9_564 <u r11_102 l00004336
l00004336:
	r9_123 = r9_564 + 1<32>
	r9_564 = r9_123
	branch (CONVERT(Mem59[r12_124 + CONVERT(Mem59[r9_564:byte], byte, word32) * 2<32>:word16], word16, word32) & 0x40<32>) == 0<32> l00004346
l00004342_1:
	r3_127 = r10_101
l00004318:
	word32 r12_150
	r10_101 = fn00006998(r0_105, r1, r2_107, r3_108, r4_109, r5_110, r6_111, r7_112, 0<32>, r5_110, r2_107, lr_113, out r11_102, out r12_150, out lr_113)
	r3_127 = r12_150
l000041F0:
	word32 r12_168
	call Mem59[r6_111 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,r0:r9,r1:r1,r10:r10_101,r11:r11_102,r12:r12_100,r2:r2_94,r3:r11,r4:r10,r5:r12_52,r6:r6_33,r7:fp - 36<i32>,r9:r9_86
		defs: lr:lr_167,r0:r0_159,r10:r10_169,r11:r11_171,r12:r12_168,r2:r2_161,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166
	r1 = r2_107 + r5_110
	branch r12_168 <=u 1<32> l000042E2
l000042E2:
	word32 r9_178 = r2_107
	r10_101 = Mem59[Mem59[r6_111 + 156<i32>:word32]:word32]
l00004302:
	branch r9_178 <u r1 l000042F0
l000042F0:
	branch Test(EQ,SLICE(CONVERT(Mem184[r10_101 + CONVERT(Mem184[r9_178:byte], byte, word32) * 2<32>:word16], word16, word32), bool, 6)) l00004300
l000042FC:
	Mem192[r9_178:byte] = 0x3F<8>
l00004300:
	r9_178 = r9_178 + 1<32>
l00004306:
	r3_127 = r5_110
l000041FE:
	word32 r5_199 = r2_107
	r4_109 = r2_107
	r3_127 = 0<32>
l000042D8:
	branch r5_199 <u r1 l00004206
l00004206:
	r10_101 = CONVERT(Mem206[r5_199:byte], byte, word32)
	branch SLICE(r10_101 - 0x20<32>, byte, 0) <u 0<8> l00004254
l00004210:
	branch SLICE(r10_101 - 0x23<32>, byte, 0) <=u 0<8> l0000424C
l0000421A:
	branch SLICE(r10_101 - 0x25<32>, byte, 0) <u 0<8> l00004254
l00004222:
	branch SLICE(r10_101 - 0x3F<32>, byte, 0) <=u 0<8> l0000424C
l0000422C:
	branch SLICE(r10_101 - 0x41<32>, byte, 0) <u 0<8> l00004254
l00004234:
	branch SLICE(r10_101 - 0x5F<32>, byte, 0) <=u 0<8> l0000424C
l0000423E:
	branch SLICE(r10_101 - 0x7E<32>, byte, 0) >u 0<8> l00004254
l00004254:
	Mem235[r7_112 + -12<i32>:word64] = 0<64>
l0000425C:
	word32 r3_256
	word32 r4_257
	word32 r5_258
	word32 r12_262
	call Mem245[r6_111 + 248<i32>:word32] (retsize: 0;)
		uses: lr:lr_250,r0:r0_246,r1:r1_238,r10:r1_238 - r5_239,r11:r5_239,r12:r7_236 - 4<32>,r2:r2_247,r3:r3_248,r4:r4_249,r5:r5_239,r6:r6_244,r7:r7_236,r9:r7_236 - 0xC<32>
		defs: lr:lr_261,r0:r0_253,r1:r1_254,r10:r10_263,r11:r11_265,r12:r12_262,r2:r2_255,r3:r3_256,r4:r4_257,r5:r5_258,r6:r6_259,r7:r7_260
	Mem268[r7_112 + -4120<i32>:word32] = r12_262
	branch r12_262 != 0xFFFFFFFF<32> l0000427C
l0000427C:
	branch Mem268[r7_112 + -4120<i32>:word32] != 0xFFFFFFFE<32> l0000428E
l0000428E:
	word32 r8_274 = Mem268[r7_112 + -4120<i32>:word32]
	word32 r12_275 = Mem268[r7_112 + -4<i32>:word32]
	branch r8_274 != 0<32> l0000429C
l00004298_1:
	r8_274 = 1<32>
l0000429C:
	word32 r9_305
	word32 r5_307
	word32 r4_311
	word32 r3_308
	Mem281[r7_112 + -4120<i32>:word32] = r8_274
	word32 lr_290
	word32 r0_291
	word32 r1_292
	word32 r12_295
	word32 r2_296
	word32 r3_297
	word32 r10_293
	word32 r11_294
	fn0000B88C(r0_105, r1, r2_107, r3_256, r4_257, r5_258, r12_275, lr_113, out r0_291, out r1_292, out r2_296, out r3_297, out r10_293, out r11_294, out r12_295, out lr_290)
	bool N_301 = <invalid>
	bool V_300 = <invalid>
	branch N_301 | V_300 l000042C2
l000042C2:
	r9_305 = Mem281[r7_112 + -4120<i32>:word32]
	Mem310[r4_257:byte] = 0x3F<8>
	r5_307 = r5_258 + r9_305
	r3_308 = r3_297 + 1<32>
	r4_311 = r4_257 + 1<i32>
l000042A6:
	r9_305 = Mem281[r7_112 + -4120<i32>:word32]
	r11_294 = r5_258
	r10_293 = r4_257
l000042AE:
	Mem324[r10_293:byte] = Mem316[r11_294:byte]
	r11_294 = r11_294 + 1<i32>
	r9_305 = r9_305 - 1<32>
	r10_293 = r10_293 + 1<i32>
	branch r9_305 != 0<32> l000042AE
l000042B6:
	word32 r8_328 = Mem324[r7_112 + -4120<i32>:word32]
	r3_308 = r3_297 + r12_295
	r4_311 = r4_257 + r8_328
	r5_307 = r5_258 + r8_328
l000042CE:
	byte VNZC_376
	call Mem343[r6_111 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_290,r0:r0_291,r1:r1_292,r10:r10_355,r11:r11_356,r12:r7_260 - 0xC<32>,r2:r2_296,r3:r3_350,r4:r4_351,r5:r5_352,r6:r6_259,r7:r7_260,r9:r9_357
		defs: lr:lr_370,r0:r0_362,r1:r1_363,r10:r10_372,r11:r11_374,r2:r2_364,r3:r3_365,r4:r4_366,r5:r5_367,r6:r6_368,r7:r7_369,VNZC:VNZC_376
	branch SLICE(VNZC_376, bool, 1) l0000425C
l00004284:
	r5_199 = r1
l00004276:
	r5_199 = r5_258 + 1<32>
l00004288:
	Mem386[r4_257:byte] = 0x3F<8>
	r3_127 = r3_256 + 1<32>
	r4_109 = r4_257 + 1<i32>
l0000424C:
	Mem397[r4_109:byte] = SLICE(r10_101, byte, 0)
	r5_199 = r5_199 + 1<32>
	r3_127 = r3_127 + 1<32>
	r4_109 = r4_109 + 1<i32>
l000042DC:
	r5_110 = r4_109 - r2_107
l0000434E:
	word32 r8_409 = Mem408[r7_112 + -4112<i32>:word32]
	branch r8_409 == 0<32> l00004362
l00004356:
	call Mem408[r6_111 + 280<i32>:word32] (retsize: 0;)
		uses: lr:lr_443,r0:r0_429,r1:r1_436,r10:r5_418,r11:1<32>,r12:r2_413,r2:r2_413,r3:r3_438,r4:r4_439,r5:r5_418,r6:r6_422,r7:r7_404,r9:r8_409
		defs: lr:lr_466,r0:r0_458,r10:r10_468,r11:r11_470,r3:r3_461,r5:r5_463,r7:r7_465
l00004362:
	branch r0_105 == 0<32> l00004368
l00004366:
	Mem477[r0_105:word32] = r3_127
l00004368:
	word32 sp_482 = Mem480[r7_112 + -4116<i32>:word32]
	word32 r7_488 = Mem480[sp_482 + 0x101C<32>:word32]
	word32 r6_489 = Mem480[sp_482 + 0x1020<32>:word32]
	word32 r5_490 = Mem480[sp_482 + 0x1024<32>:word32]
	word32 r4_491 = Mem480[sp_482 + 0x1028<32>:word32]
	word32 r3_492 = Mem480[sp_482 + 0x102C<32>:word32]
	word32 r2_493 = Mem480[sp_482 + 0x1030<32>:word32]
	word32 r0_495 = Mem480[sp_482 + 0x1038<32>:word32]
	r1Out = Mem480[sp_482 + 0x1034<32>:word32]
	r2Out = r2_493
	r3Out = r3_492
	r4Out = r4_491
	r5Out = r5_490
	r6Out = r6_489
	r7Out = r7_488
	r10Out = r10_101
	r11Out = r11_102
	r12Out = r5_110
	lrOut = lr_113
	return r0_495
fn0000418C_exit:


word32 fn00004374(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004458
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: pc r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004374_entry:
l00004374:
	word32 r4_109
	word32 r6_137 = 0x0000437C<p32> - Mem29[0x00004456<p32>:word32]
	word32 r10_33 = Mem29[r6_137 + 8<i32>:word32]
	word32 sp_30 = fp - 0x2B4<32>
	word32 r7_138 = r12
	branch Mem29[r10_33 + 98<i32>:byte] != 0<8> l00004392
l00004392:
	branch Mem29[r10_33 + -20<i32>:word32] != 4<32> l000043AC
l000043AC:
	r4_109 = Mem29[r10_33 + 32<i32>:word32] + 1<32>
l00004398:
	word64 r11_r10_46 = Mem29[r12 + 96<i32>:word64]
	word32 lr_50
	word32 r12_53
	word32 r10_369
	word32 r11_370
	word32 r9_368
	fn0000B7D4(SLICE(r11_r10_46, word32, 0), SLICE(r11_r10_46, word32, 32), fp - 0x2B4<32>, out r9_368, out r10_369, out r11_370, out r12_53, out lr_50)
	word32 r12_73
	word32 pc_295
	call Mem29[r6_137 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,pc:pc_295,r0:r0,r1:r1,r12:r12_53,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r12
		defs: lr:lr_69,pc:pc_295,r0:r0_61,r1:r1_62,r12:r12_73,r2:r2_63,r3:r3_64,r5:r5_66,r6:r6_67,r7:r7_68,sp:sp_60
	r4_109 = r12_73 + 1<32>
l0000438E:
	r4_109 = 0<32>
l000043B2:
	word32 r12_81 = Mem29[r6_137 + 8<i32>:word32]
	branch Mem29[r12_81 + 114<i32>:byte] == 0<8> l000043F2
l000043C0:
	word32 r12_148
	branch Mem29[r12_81 + -20<i32>:word32] != 4<32> l000043EA
l000043EA:
	r12_148 = Mem29[r12_81 + 36<i32>:word32] + 1<32>
l000043C6:
	word32 r9_95 = Mem29[r12_81 + -12<i32>:word32]
	word32 sp_98 = sp_30 - 8<i32>
	Mem101[sp_98:word64] = Mem29[r12_81 + 120<i32>:word64]
	Mem106[sp_98 - 8<i32>:word64] = 0x200<64>
	word32 lr_111
	word32 r1_114
	word32 r12_117
	word32 r2_118
	word32 r3_119
	word32 r4_120
	word32 r5_121
	word32 r6_122
	word32 r7_123
	word32 r12_143
	word32 pc_145
	call Mem106[r6_122 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_111,pc:pc_145,r0:fn000093B8(r0_107, r1_108, 0x200<32>, 0<32>, r4_109, r5_110, r9_95, sp_96, Mem106[sp_98 - 8<i32>:word64], Mem106[sp_98:word64], Mem106[sp_98 + 8<i32>:word32], Mem106[sp_98 + 12<i32>:word32], Mem106[sp_98 + 16<i32>:word64], Mem106[sp_98 + 28<i32>:word32], Mem106[sp_98 + 32<i32>:word32], Mem106[sp_98 + 48<i32>:word32], Mem106[sp_98 + 52<i32>:word32], Mem106[sp_98 + 56<i32>:word32], out r1_114, out r2_118, out r3_119, out r4_120, out r5_121, out r6_122, out r7_123, out r10_371, out r11_372, out r12_117, out lr_111),r1:r1_114,r12:r12_117,r2:r2_118,r3:r3_119,r4:r4_120,r5:r5_121,r6:r6_122,r7:r7_123
		defs: lr:lr_139,pc:pc_145,r0:r0_131,r1:r1_132,r12:r12_143,r2:r2_133,r3:r3_134,r4:r4_135,r5:r5_136,r6:r6_137,r7:r7_138
	r12_148 = r12_143 + 1<32>
l000043F0:
	r4_109 = r4_109 + r12_148
l000043F2:
	word32 r10_158 = Mem156[r6_137 + 8<i32>:word32]
	branch Mem156[r10_158 + 112<i32>:byte] == 0<8> l00004418
l00004400:
	branch Mem156[r10_158 + -20<i32>:word32] != 4<32> l00004410
l00004410:
l00004406:
	word32 pc_205
	call Mem156[r6_137 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_185,pc:pc_205,r0:r0_172,r1:r1_174,r12:Mem156[r7_169 + -16<i32>:word32],r2:r2_176,r3:r3_179,r4:r4_182,r5:r5_183,r6:r6_154,r7:r7_169
		defs: lr:lr_199,pc:pc_205,r1:r1_192,r6:r6_197,r7:r7_198
l00004416:
l00004418:
	word32 r5_217 = Mem156[r6_137 + 8<i32>:word32]
	word32 lr_231
	word32 r4_238
	word32 r5_239
	word32 r7_241
	word32 r12_378
	word32 r1_373
	word32 r3_375
	word32 r10_377
	word32 r6_376
	word32 r2_374
	word32 r11_235
	fn0000418C(r1, r5_217, fp - 0x28<32>, Mem156[r5_217 + 332<i32>:word32], Mem156[r7_138:word32], lr, out r1_373, out r2_374, out r3_375, out r4_238, out r5_239, out r6_376, out r7_241, out r10_377, out r11_235, out r12_378, out lr_231)
	word32 r5_251 = r4_238 + dwLoc28
	branch Mem156[r5_239 + 24<i32>:word32] == 0<32> l0000444C
l00004436:
	word32 r12_259
	r11_235 = fn00002A70(Mem156[r7_241 + -24<i32>:word32], Mem156[r7_241 + 24<i32>:word32], CONVERT(Mem156[r7_241 + 116<i32>:byte], byte, word32), out r12_259)
	r5_251 = r5_251 + CONVERT(SLICE(r12_259, byte, 0) != 0<8>, bool, word32)
l0000444C:
	r12Out = r5_251
	lrOut = lr_231
	return r11_235
fn00004374_exit:


word32 fn00004458(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: lr r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: pc r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004458_entry:
l00004458:
	word32 r6_129 = 0x0000445E<p32> - Mem29[0x00004578<p32>:word32]
	word32 r7_33 = Mem29[r6_129 + 8<i32>:word32]
	word32 r11_163 = Mem35[r7_33 + 336<i32>:word32]
	word32 r8_37 = Mem35[r7_33 + 12<i32>:word32]
	word32 r9_38 = Mem35[r7_33 + 340<i32>:word32]
	branch r11_163 >u r8_37 l00004474
l00004470_1:
	r3 = r11_163
l00004474:
	branch r11_163 <=u r8_37 l00004478
l00004474_1:
	r3 = r8_37
l00004478:
	branch r9_38 >=u r3 l0000450A
l0000447C:
	word32 lr_121
	word32 r5_106
	word32 r12_73
	branch r3 >=u r11_163 >>u 1<32> l00004496
l00004496:
	r12_73 = fn00003210(r4, r5, r7_33, 0xC<32>, r11_163, lr, out lr_121)
	r5_106 = Mem35[r7_33 + 336<i32>:word32]
l00004484:
	r12_73 = fn00003210(r4, r5, r7_33, 0x18<32>, r3, lr, out lr_121)
	r5_106 = r3 << 1<32>
l000044A4:
	word32 r12_111
	Mem99[r7_33 + 344<i32>:word32] = r12_73
	word32 r7_103 = Mem99[r6_129 + 8<i32>:word32]
	word32 r9_104 = Mem99[r7_103 + 340<i32>:word32]
	word32 r10_107 = r9_104 + 1<32> + r5_106
	branch r10_107 <u r5_106 l000044CA
l000044BA:
	word32 r9_110 = r5_106 - r9_104
	r12_111 = r10_107 * r9_110
	branch r12_111 /u r9_110 == r10_107 l000044CE
l000044CA:
	word32 r8_636
	word32 r9_637
	word32 r10_638
	word32 r11_639
	r4 = fn00006CAC(r4, r5_106, r6_129, r7_103, lr_121, out r5_106, out r6_129, out r7_103, out r8_636, out r9_637, out r10_638, out r11_639, out r12_111, out lr_121)
l000044CE:
	word32 r12_150 = fn000030B4(r4, r5_106, r7_103, 4<32>, r12_111 >>u 1<i32>, lr_121, out lr)
	word32 r10_159 = Mem99[r7_103 + 340<i32>:word32]
	r11_163 = Mem99[r7_103 + 344<i32>:word32] + r10_159 * 0xC<32> + 8<32>
	word32 r9_165 = r10_159 << 2<32>
l00004500:
	branch r10_159 <u r5_106 l000044F0
l000044F0:
	Mem175[r11_163:word32] = r12_150
	r10_159 = r10_159 + 1<32>
	r12_150 = r12_150 + r9_165 + 4<32>
	r11_163 = r11_163 + 0xC<32>
	r9_165 = r9_165 + 4<32>
l00004504:
	Mem185[Mem183[r6_129 + 8<i32>:word32] + 340<i32>:word32] = r5_106
l0000450A:
	word32 r5_189 = 0<32>
	word32 r10_190 = Mem187[Mem187[r6_129 + 8<i32>:word32] + 344<i32>:word32]
	word32 r12_191 = 3<32>
l00004532:
	branch r5_189 != r3 l00004516
l00004516:
	Mem201[r10_190:byte] = 1<8>
	Mem203[r10_190 + 4<i32>:word32] = r12_191
	r5_189 = r5_189 + 1<32>
	r11_163 = 0<32>
l00004520:
	Mem209[r11_163 * 4<32>:word32] = 3<32>
	r11_163 = r11_163 + 1<32>
	branch r11_163 != r5_189 l00004520
l0000452E:
	r10_190 = r10_190 + 0xC<32>
	r12_191 = r12_191 + 3<32>
l00004536:
	word32 r4_218 = 0<32>
l000045C0:
	word32 r7_221 = Mem220[r6_129 + 8<i32>:word32]
	branch r4_218 <u Mem220[r7_221 + 12<i32>:word32] l0000453A
l0000453A:
	word32 r12_237
	r11_163 = fn00004374(r0, r1, r2, r3, r4_218, r5_189, Mem220[Mem220[r7_221 + 16<i32>:word32] + r4_218 * 4<32>:word32], lr, out r12_237, out lr)
	r1 = Mem220[r7_221 + 12<i32>:word32]
	r2 = Mem220[r7_221 + 348<i32>:word32]
	r0 = r12_237
	word32 r10_248 = Mem220[r7_221 + 344<i32>:word32] + 4<32>
	word32 r12_250 = 0<32>
l000045BA:
	branch r12_250 != r3 l00004556
l00004556:
	branch Mem256[r10_248 + -4<i32>:byte] == 0<8> l000045B6
l00004562:
	word32 r8_267
	word32 r9_262 = r12
	word32 r8_263 = r12_250 + 1<32>
	branch r12 == 0<32> l00004580
l00004580:
	r8_267 = r4_218 /u r8_263
l0000456C:
	r8_267 = r4_218 /u ((r12_250 + r1) /u r8_263)
	r9_262 = r8_267
l00004584:
	word32 r7_276 = Mem256[r10_248 + 4<i32>:word32]
	lr = r9_262 << 2<32>
	branch r9_262 == r12_250 l00004590
l0000458C_1:
	r8_267 = 2<32>
l00004590:
	branch r9_262 != r12_250 l00004594
l00004590_1:
	r8_267 = 0<32>
l00004594:
	r11_163 = Mem256[r7_276 + (r9_262 << 2<32>):word32]
	word32 r9_299 = r8_267 + r12_237
	branch r11_163 >=u r9_299 l000045B6
l000045A0:
	Mem307[r10_248:word32] = Mem256[r10_248:word32] - r11_163 + r9_299
	Mem308[r7_276 + (r9_262 << 2<32>):word32] = r9_299
	Mem317[r10_248 + -4<i32>:byte] = SLICE(CONVERT(Mem308[r10_248:word32] <u r2, bool, word32), byte, 0)
l000045B6:
	r12_250 = r12_250 + 1<32>
	r10_248 = r10_248 + 0xC<32>
l000045BE:
	r4_218 = r4_218 + 1<32>
l000045C8:
	word32 r9_330 = Mem220[r7_221 + 344<i32>:word32] + r5_189 * 0xC<32> - 0xC<32>
l000045E4:
	branch r5_189 >u 1<32> l000045DA
l000045DA:
	r9_330 = r9_330 - 0xC<32>
	branch CONVERT(Mem220[r9_330:byte], byte, word32) != 0<32> l000045EA
l000045E2:
	r5_189 = r5_189 - 1<32>
l000045EA:
	r12Out = r5_189
	lrOut = lr
	return r11_163
fn00004458_exit:


word32 fn000045F0(word32 r2, word32 r3, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, word32 dwArg08, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004864
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31]
// LiveOut: lr r10 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000045F0_entry:
l000045F0:
	word32 r2_278
	word32 r6_195 = 0x000045F8<p32> - Mem29[0x00004706<p32>:word32]
	word32 lr_127 = CONVERT(Mem29[Mem29[r6_195 + 8<i32>:word32] + 97<i32>:byte], byte, word32)
	word32 r11_141 = r8
	word32 r0_189 = dwArg08
	word32 r4_193 = dwArg00
	word32 r1_190 = r12
	word32 r5_205 = dwArg04
	branch SLICE(lr_127, byte, 0) == 0<8> l0000474E
l0000461A:
	word32 r7_104
	word32 r7_247
	branch r10 != 0xFFFFFFFF<32> l0000462A
l0000461E:
	branch Mem29[Mem29[r6_195 + -56<i32>:word32] + -28<i32>:word32] == 0<32> l0000462A
l0000462A:
	word32 r8_139
	branch r9 == 0<32> l000046E2
l000046E2:
	r8_139 = 0x000065AC<p32> + (r8 << 2<8>)
	r7_104 = Mem29[r8_139 + 24<i32>:word32]
	branch r7_104 != 5<32> l00004728
l000046F0:
l0000462E:
	branch (r11 & 0xF000<32>) != 0x8000<32> l00004674
l00004674:
	branch (r11 & 0xF000<32>) != 0x4000<32> l000046A2
l000046A2:
	branch (r11 & 0xF000<32>) != 0xA000<32> l000046B8
l000046B8:
	branch (r11 & 0xF000<32>) != 0x1000<32> l000046C2
l000046C2:
	branch (r11 & 0xF000<32>) != 0xC000<32> l000046CC
l000046CC:
	branch (r11 & 0xF000<32>) != 0x6000<32> l000046D6
l000046D6:
	branch (r11 & 0xF000<32>) == 0x2000<32> l00004854
l00004854:
	r7_104 = 0xB<32>
l000046D2:
	r7_104 = 0xA<32>
l000046C8:
	r7_104 = 9<32>
l000046BE:
	r7_104 = 8<32>
l000046A8:
	branch r10 != 0<32> l000046B4
l000046AC:
	branch Mem29[Mem29[r6_195 + -56<i32>:word32] + -20<i32>:word32] != 0<32> l000046DE
l000046DE:
	r7_104 = 0xD<32>
l000046B4:
	r7_104 = 7<32>
l0000467A:
	branch (r11 & 0x202<32>) != 0x202<32> l0000468A
l0000468A:
	branch Test(NE,SLICE(r11, bool, 1)) l00004694
l00004694:
	r7_104 = r11 & 0x200<32>
	branch (r11 & 0x200<32>) != 0<32> l0000469C
l00004698_1:
	r7_104 = 6<32>
l0000469C:
	branch (r11 & 0x200<32>) == 0<32> l000046A0
l0000469C_1:
	r7_104 = 0x12<32>
l000046A0:
l00004690:
	r7_104 = 0x13<32>
l00004686:
	r7_104 = 0x14<32>
l0000463A:
	branch Test(NE,SLICE(r11, bool, 11)) l00004644
l00004644:
	branch Test(NE,SLICE(r11, bool, 10)) l0000464E
l0000464E:
	word32 r12_1011
	word32 r11_1010
	word32 r9_1009
	fn000030D8(dwArg00, dwArg04, r11 & 0x49<32>, 0x15<32>, lr_127, out r9_1009, out r10, out r11_1010, out r12_1011, out lr_127)
	branch (r11 & 0x49<32>) == 0<32> l00004660
l00004660:
	word32 r12_138
	r8_139 = fn000030D8(dwArg00, dwArg04, r11 & 0x49<32>, 0x16<32>, lr_127, out r9, out r10, out r11_141, out r12_138, out lr_127)
	branch CONVERT(SLICE(r12_138, byte, 0), byte, word32) == 0<32> l000046F2
l0000466A:
	branch dwArg04 <=u 1<32> l000046F2
l000046F2:
	r7_104 = 5<32>
l000046F4:
	word32 r12_200
	word32 r9_202
	call Mem29[r6_195 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_175,r0:dwArg08,r1:r12,r10:r10_181,r11:r11_177,r12:r12,r2:r2,r3:r3,r4:dwArg00,r5:dwArg04,r6:r6_32,r7:r7_174,r8:r8_179,r9:r9_183,Stack +00A4:dwArg00,Stack +00A8:dwArg04,Stack +00AC:dwArg08
		defs: lr:lr_197,r0:r0_189,r1:r1_190,r10:r10_201,r12:r12_200,r4:r4_193,r6:r6_195,r7:r7_196,r9:r9_202
	word32 r8_204 = Mem29[r6_195 + 8<i32>:word32]
	r5_205 = Mem29[r8_204 + 352<i32>:word32]
	r3 = r12_200
	word32 r2_207 = r1_190 + r12_200
l00004724:
	branch r5_205 != 0<32> l0000470C
l0000470C:
	r10 = Mem29[r5_205:word32]
	branch r10 >u r3 l00004722
l00004714:
	byte VNZC_245
	call Mem29[r6_195 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_226,r0:r0_222,r1:r1_223,r10:r10_213,r11:Mem29[r5_209 + 4<i32>:word32],r12:r2_218 - r10_213,r2:r2_218,r3:r3_214,r4:r4_224,r5:r5_209,r6:r6_221,r7:r7_225,r8:r8_227,r9:r9_228,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_239,r0:r0_231,r1:r1_232,r10:r10_243,r2:r2_233,r3:r3_234,r4:r4_235,r5:r5_236,r6:r6_237,r7:r7_238,r8:r8_241,r9:r9_244,VNZC:VNZC_245
	branch SLICE(VNZC_245, bool, 1) l00004858
l00004858:
	r7_247 = r5_205 + 8<32>
l00004722:
	r5_205 = Mem29[r5_205 + 16<i32>:word32]
l00004670:
	r7_104 = 0x16<32>
l0000465C:
	r7_104 = 0xE<32>
l0000464A:
	r7_104 = 0x11<32>
l00004640:
	r7_104 = 0x10<32>
l00004626:
	r7_104 = 0xC<32>
l00004728:
	r7_247 = Mem29[r6_195 + -56<i32>:word32] + (r7_104 << 3<8>)
l0000472E:
	branch Mem29[r7_247 + 4<i32>:word32] == 0<32> l0000474E
l0000474E:
	r2_278 = 0<32>
l00004734:
	r5_205 = Mem29[r6_195 + -56<i32>:word32]
	word32 lr_295
	word32 r7_996
	word32 r10_998
	word32 r11_999
	word32 r9_997
	word32 r5_995
	fn00003B2C(r4_193, r5_205, r5_205, lr_127, out r5_995, out r7_996, out r9_997, out r10_998, out r11_999, out lr_295)
	word32 lr_306
	word32 r5_1000
	word32 r7_1001
	word32 r9_1002
	word32 r10_1003
	word32 r11_1004
	fn00003B2C(r4_193, r5_205, r7_247, lr_295, out r5_1000, out r7_1001, out r9_1002, out r10_1003, out r11_1004, out lr_306)
	word32 r11_1008
	word32 r9_1007
	word32 r5_1005
	word32 r7_1006
	fn00003B2C(r4_193, r5_205, r5_205 + 8<32>, lr_306, out r5_1005, out r7_1006, out r9_1007, out r10, out r11_1008, out lr_127)
	r2_278 = 1<32>
l00004750:
	branch r4_193 == 0<32> l00004782
l00004754:
	word32 r7_336 = Mem29[r6_195 + 8<i32>:word32]
	branch Mem29[r7_336 + 356<i32>:byte] == 0<8> l00004782
l00004762:
	word32 r8_341 = Mem29[r4_193 + 12<i32>:word32]
	word32 r9_342 = Mem29[r4_193 + 16<i32>:word32]
	branch r8_341 + 4<32> <=u r9_342 l00004776
l0000476E:
	call Mem29[r6_195 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_381,r0:r0_348,r1:r1_356,r10:r10_383,r11:4<32>,r12:r4_328,r2:r2_364,r3:r3_365,r4:r4_328,r5:r5_373,r6:r6_332,r7:r7_336,r8:r8_341 + 4<32>,r9:r9_342,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_410,r1:r1_403,r4:r4_406,r5:r5_407,r6:r6_408,r7:r7_409
l00004776:
	Mem422[Mem29[r4_193 + 12<i32>:word32]:word32] = Mem29[r7_336 + -52<i32>:word32]
	Mem426[r4_193 + 12<i32>:word32] = Mem422[r4_193 + 12<i32>:word32] + 4<32>
l00004782:
	word32 r5_450
	word32 r12_455
	word32 r3_994
	word32 r2_447
	word32 r6_451
	word32 r4_449
	word32 lr_442
	word32 r1_444
	word32 r7_452
	word32 r11_446
	word32 r10_445
	word32 r0_443 = fn0000418C(r1_190, r5_205, 0<32>, Mem429[Mem429[r6_195 + 8<i32>:word32] + 332<i32>:word32], r1_190, lr_127, out r1_444, out r2_447, out r3_994, out r4_449, out r5_450, out r6_451, out r7_452, out r10_445, out r11_446, out r12_455, out lr_442)
	Mem462[r7_452 + 76<i32>:word32] = r12_455 + Mem429[r7_452 + -52<i32>:word32]
	word32 r3_463 = r12_455
	branch r4_449 == 0<32> l000047D0
l000047A4:
	branch Mem462[r7_452 + 356<i32>:byte] == 0<8> l000047D0
l000047B0:
	word32 r8_470 = Mem462[r4_449 + 12<i32>:word32]
	word32 r9_471 = Mem462[r4_449 + 16<i32>:word32]
	branch r8_470 + 4<32> <=u r9_471 l000047C4
l000047BC:
	call Mem462[r6_451 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_442,r0:r0_443,r1:r1_444,r10:r10_445,r11:4<32>,r12:r4_449,r2:r2_447,r3:r12_455,r4:r4_449,r5:r5_450,r6:r6_451,r7:r7_452,r8:r8_470 + 4<32>,r9:r9_471,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_488,r0:r0_480,r1:r1_481,r10:r10_492,r11:r11_489,r2:r2_482,r3:r3_483,r4:r4_484,r6:r6_486,r7:r7_487
l000047C4:
	Mem500[Mem462[r4_449 + 12<i32>:word32]:word32] = Mem462[r7_452 + -52<i32>:word32]
	Mem504[r4_449 + 12<i32>:word32] = Mem500[r4_449 + 12<i32>:word32] + 4<32>
l000047D0:
	branch r2_447 != 0<32> l00004822
l00004822:
	word32 r5_511 = Mem510[r6_451 + 8<i32>:word32]
	branch (Mem510[r5_511 + 4<i32>:word32] | Mem510[r5_511:word32]) != 0<32> l000047D6
l000047D6:
	word32 r9_517 = CONVERT(Mem510[r5_511 + 328<i32>:byte], byte, word32)
	branch SLICE(r9_517, byte, 0) == 0<8> l000047E6
l000047E2:
	r9_517 = fn00003B8C(r4_449, lr_442, out r10_445, out r11_446, out lr_442)
l000047E6:
	word32 r7_607
	word32 r8_535 = Mem510[r6_451 + 40<i32>:word32]
	word32 sp_557
	word32 r0_558
	word32 r1_559
	word32 r2_560
	word32 r3_561
	word32 r4_562
	word32 r5_563
	word32 r6_564
	word32 r7_565
	word32 lr_566
	word32 r8_568
	word32 r9_571
	call Mem510[r6_451 + 284<i32>:word32] (retsize: 0;)
		uses: lr:lr_549,r0:r0_538,r1:r1_540,r10:r10_552,r11:r11_550,r12:Mem510[r8_535:word32],r2:r2_542,r3:r3_544,r4:r4_521,r5:r5_511,r6:r6_509,r7:r7_548,r8:r8_535,r9:r9_554,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_566,r0:r0_558,r1:r1_559,r2:r2_560,r3:r3_561,r4:r4_562,r5:r5_563,r6:r6_564,r7:r7_565,r8:r8_568,r9:r9_571,sp:sp_557
	word32 r6_584
	word32 r0_578
	word32 r1_579
	word32 r2_580
	word32 r3_581
	word32 r4_582
	word32 r5_583
	word32 lr_586
	word32 r10_590
	word32 r9_591
	call Mem510[r6_564 + 272<i32>:word32] (retsize: 0;)
		uses: lr:lr_566,r0:r0_558,r1:r1_559,r10:sp_557,r11:r5_563 + 0x168<32>,r12:0<32>,r2:r2_560,r3:r3_561,r4:r4_562,r5:r5_563,r6:r6_564,r7:r7_565,r8:r8_568,r9:r9_571,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_586,r0:r0_578,r1:r1_579,r10:r10_590,r2:r2_580,r3:r3_581,r4:r4_582,r5:r5_583,r6:r6_584,r9:r9_591
	word32 r11_594 = Mem510[r5_583 + 4<i32>:word32]
	word32 r7_593 = Mem510[r5_583:word32]
	word32 r8_595 = r11_594 - 1<32>
	branch r11_594 == 0<32> l0000480C
l0000480C:
	call Mem510[r6_584 + 312<i32>:word32] (retsize: 0;)
		uses: lr:lr_586,r0:r0_578,r1:r1_579,r10:r10_590,r11:r11_594,r12:r7_593,r2:r2_580,r3:r3_581,r4:r4_582,r5:r5_583,r6:r6_584,r7:r7_593,r8:r11_594 - 1<32>,r9:r9_591,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_608,r0:r0_600,r1:r1_601,r10:r10_612,r11:r11_609,r2:r2_602,r3:r3_603,r4:r4_604,r5:r5_605,r6:r6_606,r7:r7_607,r8:r8_610,r9:r9_613
l00004806:
	Mem616[r5_583 + 4<i32>:word32] = r11_594 - 1<32>
	r7_607 = 0x13<32>
l00004812:
	word32 sp_633
	word32 r0_634
	word32 r1_635
	word32 r2_636
	word32 r3_637
	word32 r4_638
	word32 r5_639
	word32 r6_640
	word32 r7_641
	word32 lr_642
	word32 r8_644
	word32 r9_647
	call Mem620[r6_584 + 228<i32>:word32] (retsize: 0;)
		uses: lr:lr_627,r0:r0_621,r1:r1_622,r10:r10_630,r11:r11_628,r12:r7_617,r2:r2_623,r3:r3_624,r4:r4_625,r5:r5_626,r6:r6_619,r7:r7_617,r8:r8_629,r9:r9_631,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_642,r0:r0_634,r1:r1_635,r2:r2_636,r3:r3_637,r4:r4_638,r5:r5_639,r6:r6_640,r7:r7_641,r8:r8_644,r9:r9_647,sp:sp_633
	call Mem620[r6_640 + 272<i32>:word32] (retsize: 0;)
		uses: lr:lr_642,r0:r0_634,r1:r1_635,r10:0<32>,r11:sp_633,r12:2<32>,r2:r2_636,r3:r3_637,r4:r4_638,r5:r5_639,r6:r6_640,r7:r7_641,r8:r8_644,r9:r9_647,Stack +0000:dwArg00,Stack +0004:dwArg04,Stack +0008:dwArg08
		defs: lr:lr_661,r0:r0_653,r1:r1_654,r10:r10_665,r11:r11_662,r2:r2_655,r3:r3_656,r4:r4_657,r6:r6_659,r7:r7_660
l0000482C:
	word32 r6_1013
	word32 r7_1014
	word32 r5_1012
	fn00003B60(out r5_1012, out r6_1013, out r7_1014, out lr_442)
	word32 r11_675 = Mem510[r5_511 + 348<i32>:word32]
	r10_445 = r0_443 /u r11_675
	branch r10_445 == ((r0_443 - 1<32>) + r3_463) /u r11_675 l0000485E
l00004848:
	word32 r9_1017
	word32 r11_1018
	word32 r5_1015
	word32 r7_1016
	fn00003B2C(r4_449, r5_511, Mem510[r6_451 + -56<i32>:word32] + 0xB8<32>, lr_442, out r5_1015, out r7_1016, out r9_1017, out r10_445, out r11_1018, out lr_442)
l000047D4:
l0000485E:
	r12Out = r3_463
	lrOut = lr_442
	return r10_445
fn000045F0_exit:


word32 fn00004864(word32 r0, word32 r1, word32 r2, word32 r3, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: pc r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004864_entry:
l00004864:
	word32 r6_176 = 0x0000486C<p32> - Mem29[0x00004966<p32>:word32]
	word32 r5_33 = Mem29[r6_176 + 8<i32>:word32]
	word32 sp_107 = fp - 0x2B0<32>
	word32 r7_109 = r12
	word32 r4_123 = r11
	branch Mem29[r5_33 + 98<i32>:byte] == 0<8> l000048A6
l00004880:
	word32 r8_60
	word64 r11_r10_42 = Mem29[r12 + 96<i32>:word64]
	word32 lr_46
	word32 r11_48
	word32 r12_49
	word32 r9_434
	word32 r10_435
	fn0000B7D4(SLICE(r11_r10_42, word32, 0), SLICE(r11_r10_42, word32, 32), fp - 0x2B0<32>, out r9_434, out r10_435, out r11_48, out r12_49, out lr_46)
	branch Mem29[r5_33 + -20<i32>:word32] != 4<32> l00004896
l00004896:
	r8_60 = Mem29[r5_33 + 32<i32>:word32]
l00004892:
	r8_60 = 0<32>
l00004898:
	word32 sp_81
	word32 pc_350
	call Mem71[r6_176 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_46,pc:pc_350,r0:r0,r1:r1,r11:r11_48,r12:Mem29[r6_32 + 184<i32>:word32],r2:r2,r3:r3,r4:r11,r5:r5_33,r6:r6_32,r7:r12,Stack +0000:r8_70,Stack +0004:r12_49
		defs: lr:lr_90,pc:pc_350,r0:r0_82,r1:r1_83,r11:r11_94,r2:r2_84,r3:r3_85,r4:r4_86,r6:r6_88,r7:r7_89,sp:sp_81
	sp_107 = sp_81 + 8<32>
l000048A6:
	word32 r5_101 = Mem100[r6_176 + 8<i32>:word32]
	branch Mem100[r5_101 + 114<i32>:byte] == 0<8> l000048EC
l000048B4:
	word32 r8_148
	word32 r9_111 = Mem100[r5_101 + -12<i32>:word32]
	word32 sp_112 = sp_107 - 8<i32>
	Mem115[sp_112:word64] = Mem100[r5_101 + 120<i32>:word64]
	Mem120[sp_112 - 8<i32>:word64] = 0x200<64>
	word32 lr_124
	word32 r1_127
	word32 r11_129
	word32 r12_130
	word32 r2_131
	word32 r3_132
	word32 r4_133
	word32 r5_134
	word32 r6_135
	word32 r7_136
	word32 r10_436
	word32 r0_126 = fn000093B8(r0, r1, 0x200<32>, 0<32>, r4_123, r5_101, r9_111, sp_107, Mem120[sp_112 - 8<i32>:word64], Mem120[sp_112:word64], Mem120[sp_112 + 8<i32>:word32], Mem120[sp_112 + 12<i32>:word32], Mem120[sp_112 + 16<i32>:word64], Mem120[sp_112 + 28<i32>:word32], Mem120[sp_112 + 32<i32>:word32], Mem120[sp_112 + 48<i32>:word32], Mem120[sp_112 + 52<i32>:word32], Mem120[sp_112 + 56<i32>:word32], out r1_127, out r2_131, out r3_132, out r4_133, out r5_134, out r6_135, out r7_136, out r10_436, out r11_129, out r12_130, out lr_124)
	branch Mem120[r5_134 + -20<i32>:word32] != 4<32> l000048DC
l000048DC:
	r8_148 = Mem120[r5_134 + 36<i32>:word32]
l000048D8:
	r8_148 = 0<32>
l000048DE:
	word32 r12_152 = Mem120[r6_135 + 184<i32>:word32]
	Mem156[sp_112 + 4<32>:word32] = r12_130
	Mem159[sp_112:word32] = r8_148
	word32 sp_169
	word32 pc_184
	call Mem159[r6_135 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_124,pc:pc_184,r0:r0_126,r1:r1_127,r11:r11_129,r12:r12_152,r2:r2_131,r3:r3_132,r4:r4_133,r5:r5_134,r6:r6_135,r7:r7_136
		defs: lr:lr_178,pc:pc_184,r0:r0_170,r1:r1_171,r11:r11_182,r2:r2_172,r3:r3_173,r4:r4_174,r5:r5_175,r6:r6_176,r7:r7_177,sp:sp_169
	sp_107 = sp_169 + 8<32>
l000048EC:
	word32 r10_190 = Mem189[r6_176 + 8<i32>:word32]
	branch Mem189[r10_190 + 112<i32>:byte] == 0<8> l00004916
l000048FA:
	word32 r8_200
	word32 r9_197 = Mem189[r7_109 + -16<i32>:word32]
	branch Mem189[r10_190 + -20<i32>:word32] != 4<32> l00004906
l00004906:
	r8_200 = Mem189[r10_190 + 56<i32>:word32]
l00004902:
	r8_200 = 0<32>
l00004908:
	word32 r12_204 = Mem189[r6_176 + 184<i32>:word32]
	word32 sp_207 = sp_107 - 4<i32>
	Mem209[sp_207:word32] = r9_197
	Mem212[sp_207 - 4<i32>:word32] = r8_200
	word32 pc_249
	call Mem212[r6_176 + 88<i32>:word32] (retsize: 0;)
		uses: lr:lr_229,pc:pc_249,r0:r0_214,r1:r1_216,r11:r11_232,r12:r12_204,r2:r2_218,r3:r3_221,r4:r4_224,r5:r5_226,r6:r6_188,r7:r7_196
		defs: pc:pc_249,r2:r2_237,r3:r3_238,r4:r4_239,r6:r6_241,r7:r7_242
l00004916:
	word32 r11_265
	word32 r10_257 = CONVERT(Mem254[r7_109 + 117<i32>:byte], byte, word32)
	word32 r5_259 = Mem254[r7_109 + 28<i32>:word32]
	word32 lr_260 = Mem254[r7_109 + -24<i32>:word32]
	word32 r9_263 = CONVERT(Mem254[r7_109 + 116<i32>:byte], byte, word32)
	branch (CONVERT(Mem254[Mem254[r6_176 + 8<i32>:word32] + 104<i32>:byte], byte, word32) & r10_257) == 0<32> l00004930
l00004930:
	r11_265 = Mem254[r7_109 + 24<i32>:word32]
l0000492C:
	r11_265 = Mem254[r7_109 + -20<i32>:word32]
l00004932:
	word32 r12_437
	word32 lr_291
	word32 r10_292 = fn000045F0(r2, r3, lr_260, r9_263, r10_257, r11_265, Mem254[r7_109:word32], 0<32>, r5_259, r4_123, out r12_437, out lr_291)
	branch Mem283[Mem283[r6_176 + 8<i32>:word32] + 24<i32>:word32] == 0<32> l0000495C
l0000494C:
	word32 r12_438
	r10_292 = fn00002DB4(r4_123, r5_259, Mem283[r7_109 + -24<i32>:word32], Mem283[r7_109 + 24<i32>:word32], CONVERT(Mem283[r7_109 + 116<i32>:byte], byte, word32), lr_291, out r12_438, out lr_291)
l0000495C:
	lrOut = lr_291
	return r10_292
fn00004864_exit:


word32 fn00004968(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 lr, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: r10 r11
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00004968_entry:
l00004968:
	word32 r6_124 = 0x00004970<p32> - Mem29[0x00004A8A<p32>:word32]
	word32 r8_33 = Mem29[r6_124 + 8<i32>:word32]
	word32 sp_1896 = fp - 0x1518<32>
	word32 r10_185 = 0<32>
	word32 r11_1989 = 0<32>
	word32 r9_36 = Mem29[r8_33 + -20<i32>:word32]
	branch r9_36 >u 4<32> l00005114
l00004984:
	word32 r7_110
	word32 r5_108
	word32 r4_122
	switch (r9_36) { l00004990 l00004994 l00004998 l0000499C l000049A0 }
l000049A0:
l000049AA:
	r4_122 = 0<32>
	r5_108 = 0<32>
l00004B96:
	r7_110 = Mem47[r6_124 + 8<i32>:word32]
	branch r4_122 <u Mem47[r7_110 + 12<i32>:word32] l00004B30
l00004B30:
	r3 = Mem47[Mem47[r7_110 + 16<i32>:word32] + r4_122 * 4<32>:word32]
	word32 r12_64
	word32 lr_126
	fn00004374(r0, r1, r2, r3, r4_122, r5_108, r3, lr, out r12_64, out lr_126)
	r2 = r12_64
	branch r4_122 == 0<32> l00004B8C
l00004B42:
	word32 r11_76 = Mem47[Mem47[r6_124 + -64<i32>:word32]:word32]
	r5_108 = r5_108 + 2<32>
	word32 r9_77 = Mem47[r7_110 + 348<i32>:word32]
	word32 r12_78 = Mem47[r11_76 + 16<i32>:word32]
	word32 r10_79 = Mem47[r11_76 + 28<i32>:word32]
	word32 r8_80 = r5_108 + r12_64
	branch r8_80 >=u r9_77 l00004B5A
l00004B56_1:
	r7_110 = 0x20<32>
l00004B5A:
	branch r8_80 <u r9_77 l00004B62
l00004B5A_1:
	r7_110 = 0xA<32>
l00004B5E_1:
	r5_108 = 0<32>
l00004B62:
	branch r12_78 >=u r10_79 l00004B6E
l00004B6E:
	word32 pc_2095
	call Mem47[r6_124 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_61,pc:pc_2095,r0:r0_56,r1:r1_57,r12:0x2C<32>,r2:r12_64,r3:r3_54,r4:r4_50,r5:r5_108,r6:r6_46,r7:r7_110
		defs: lr:lr_126,pc:pc_2095,r0:r0_118,r1:r1_119,r2:r2_120,r3:r3_121,r4:r4_122,r5:r5_123,r6:r6_124,r7:r7_125
l00004B66:
	Mem134[r12_78:byte] = 0x2C<8>
	Mem138[r11_76 + 16<i32>:word32] = r12_78 + 1<i32>
l00004B74:
	word32 r11_142 = Mem140[Mem140[r6_124 + -64<i32>:word32]:word32]
	word32 r9_143 = Mem140[r11_142 + 16<i32>:word32]
	branch r9_143 >=u Mem140[r11_142 + 28<i32>:word32] l00004B86
l00004B86:
	word32 pc_2096
	call Mem140[r6_124 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_155,pc:pc_2096,r0:r0_149,r1:r1_150,r12:r7_147,r2:r2_151,r3:r3_152,r4:r4_153,r5:r5_154,r6:r6_139,r7:r7_147
		defs: lr:lr_166,pc:pc_2096,r0:r0_158,r1:r1_159,r2:r2_160,r3:r3_161,r4:r4_162,r5:r5_163,r6:r6_164
l00004B80:
	Mem173[r9_143:byte] = SLICE(r7_110, byte, 0)
	Mem175[r11_142 + 16<i32>:word32] = r9_143 + 1<i32>
l00004B8C:
	r10_185 = fn00004864(r0, r1, r2, r3, r5_108, r3, lr_126, out lr)
	r5_108 = r5_108 + r2
	r4_122 = r4_122 + 1<32>
l0000499C:
l00004A90:
	word32 lr_199
	word32 r12_202
	fn00004458(r0, r1, r2, r3, r4, r5, 0<32>, lr, out r12_202, out lr_199)
	r5_108 = Mem38[Mem38[r8_33 + 16<i32>:word32]:word32]
	word32 r8_214 = Mem38[r8_33 + 344<i32>:word32] + r12_202 * 0xC<32>
	word32 lr_220
	word32 r12_223
	fn00004374(1<32>, r12_202, r2, r3, r4, r5_108, r5_108, lr_199, out r12_223, out lr_220)
	r7_110 = Mem233[Mem219[r8_214 - 4<32>:word32]:word32]
	r0 = 1<32>
	r1 = r12_202
	r4_122 = r12_223
	r10_185 = fn00004864(1<32>, r12_202, r2, r3, 0<32>, r5_108, lr_220, out lr)
l00004B26:
	branch r0 <u Mem249[Mem249[r6_124 + 8<i32>:word32] + 12<i32>:word32] l00004AC8
l00004AC8:
	Mem259[sp_1896 + 20<i32>:word32] = r3
	r2 = r0 /u r1
	branch r3 != 0<32> l00004AF2
l00004AF2:
	word32 r9_262 = Mem259[sp_1896 + 28<i32>:word32]
	word32 r5_264 = r7_110 + r9_262
	lr = fn00002D38(r4_122, r5_264, r4_122 + r9_262, lr)
	Mem280[sp_1896 + 28<i32>:word32] = r5_264
l00004AD2:
	word32 r11_282 = Mem259[Mem259[r6_124 + -64<i32>:word32]:word32]
	word32 r9_283 = Mem259[r11_282 + 16<i32>:word32]
	branch r9_283 >=u Mem259[r11_282 + 28<i32>:word32] l00004AE8
l00004AE8:
	word32 pc_2099
	call Mem259[r6_124 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_269,pc:pc_2099,r0:r0_252,r1:r1_255,r12:0xA<32>,r2:r2_256,r3:r3_257,r4:r4_265,r5:r5_288,r6:r6_248,r7:r7_263
		defs: lr:lr_298,pc:pc_2099,r0:r0_290,r1:r1_291,r2:r2_292,r3:r3_293,r4:r4_294,r6:r6_296,sp:sp_289
	Mem305[sp_1896 + 28<i32>:word32] = r3
l00004ADE:
	Mem306[sp_1896 + 28<i32>:word32] = r3
	Mem308[r9_283:byte] = 0xA<8>
	Mem310[r11_282 + 16<i32>:word32] = r9_283 + 1<i32>
l00004B04:
	r5_108 = Mem312[Mem312[Mem312[r6_124 + 8<i32>:word32] + 16<i32>:word32] + r0 * 4<32>:word32]
	r0 = r0 + 1<32>
	word32 lr_326
	fn00004864(r0, r1, r2, r3, Mem312[sp_1896 + 28<i32>:word32], r5_108, lr, out lr_326)
	word32 r12_341
	fn00004374(r0, r1, r2, r3, r4_122, r5_108, r5_108, lr_326, out r12_341, out lr)
	r10_185 = Mem312[sp_1896 + 20<i32>:word32]
	r4_122 = r12_341
	r7_110 = Mem312[Mem312[Mem312[sp_1896 + 24<i32>:word32] + 8<i32>:word32] + r10_185 * 4<32>:word32]
l00004B2E:
l00004B9E:
	r11_1989 = Mem354[Mem354[r6_124 + -64<i32>:word32]:word32]
	word32 r9_357 = Mem354[r11_1989 + 16<i32>:word32]
	branch r9_357 >=u Mem354[r11_1989 + 28<i32>:word32] l00004BB4
l00004BB4:
	word32 pc_2100
	call Mem354[r6_124 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_371,pc:pc_2100,r0:r0_362,r1:r1_363,r12:0xA<32>,r2:r2_364,r3:r3_366,r4:r4_368,r5:r5_369,r6:r6_353,r7:r7_370
		defs: pc:pc_2100,r10:r10_384,r11:r11_385
l00004BAA:
	Mem390[r9_357:byte] = 0xA<8>
	Mem392[r11_1989 + 16<i32>:word32] = r9_357 + 1<i32>
l00004998:
l000049E6:
	word32 r12_397
	word32 lr_2061
	r11_1989 = fn00004458(r0, r1, r2, r3, r4, r5, 1<32>, lr, out r12_397, out lr_2061)
	word32 r9_404 = Mem38[r8_33 + 12<i32>:word32]
	r10_185 = CONVERT(r9_404 != 0<32>, bool, word32)
	word32 r0_2056 = r10_185 + r9_404 /u r12_397
l00004A82:
	branch Mem419[sp_1896 + 12<i32>:word32] != r0_2056 l00004A10
l00004A10:
	word32 r7_425 = Mem419[sp_1896 + 12<i32>:word32]
	word32 r4_428 = Mem419[sp_1896 + 12<i32>:word32] << 2<i32>
	Mem430[sp_1896 + 32<i32>:word32] = r0_2056 << 2<32>
	Mem431[sp_1896 + 36<i32>:word32] = 0<32>
	word32 r2_426 = 0<32>
l00004A20:
	word32 r3_434 = Mem433[r6_124 + 8<i32>:word32]
	word32 r5_440 = Mem433[Mem433[r3_434 + 16<i32>:word32] + r4_428:word32]
	r4_428 = r4_428 + Mem433[sp_1896 + 32<i32>:word32]
	word32 lr_449
	word32 r12_452
	fn00004374(r0_2056, r1, r2_426, r3_434, r4_428, r5_440, r5_440, lr_2061, out r12_452, out lr_449)
	word32 r11_459 = Mem433[sp_1896 + 16<i32>:word32]
	word32 r10_460 = Mem433[sp_1896 + 36<i32>:word32]
	Mem461[sp_1896 + 8<i32>:word32] = r12_452
	r1 = Mem461[Mem461[r11_459 + 8<i32>:word32] + r10_460:word32]
	Mem468[sp_1896 + 36<i32>:word32] = r10_460 + 4<32>
	r10_185 = fn00004864(r0_2056, r1, r2_426, r3_434, r2_426, r5_440, lr_449, out lr_2061)
	r7_425 = r7_425 + r0_2056
	branch r7_425 >=u Mem468[r3_434 + 12<i32>:word32] l00004A62
l00004A62:
	r11_1989 = Mem468[Mem468[r6_124 + -64<i32>:word32]:word32]
	word32 r9_484 = Mem468[r11_1989 + 16<i32>:word32]
	branch r9_484 >=u Mem468[r11_1989 + 28<i32>:word32] l00004A76
l00004A76:
	word32 pc_2103
	call Mem468[r6_124 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_469,pc:pc_2103,r0:r0_421,r1:r1_464,r12:0xA<32>,r2:r2_447,r3:r3_434,r4:r4_444,r5:r5_440,r6:r6_2057,r7:r7_437
		defs: lr:lr_498,pc:pc_2103,r0:r0_490,r1:r1_491,r10:r10_500,r11:r11_501,r6:r6_496,sp:sp_489
l00004A6E:
	Mem506[r9_484:byte] = 0xA<8>
	Mem508[r11_1989 + 16<i32>:word32] = r9_484 + 1<i32>
l00004A7C:
	Mem514[sp_1896 + 12<i32>:word32] = Mem510[sp_1896 + 12<i32>:word32] + 1<32>
l00004A50:
	word32 r5_516 = r1 + r2_426
	lr_2061 = fn00002D38(r4_428, r5_516, Mem468[sp_1896 + 8<i32>:word32] + r2_426, lr_2061)
	r2_426 = r5_516
l00004A88:
l00004994:
l000049B0:
	word32 r7_531 = 0<32>
l000049DA:
	word32 r9_534 = Mem533[r6_124 + 8<i32>:word32]
	branch r7_531 <u Mem533[r9_534 + 12<i32>:word32] l000049B4
l000049B4:
	r10_185 = fn00004864(r0, r1, r2, r3, 0<32>, Mem533[Mem533[r9_534 + 16<i32>:word32] + r7_531 * 4<32>:word32], lr, out lr)
	r11_1989 = Mem533[Mem533[r6_124 + -64<i32>:word32]:word32]
	word32 r9_559 = Mem533[r11_1989 + 16<i32>:word32]
	branch r9_559 >=u Mem533[r11_1989 + 28<i32>:word32] l000049D2
l000049D2:
	word32 pc_2104
	call Mem533[r6_124 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_547,pc:pc_2104,r0:r0_542,r1:r1_543,r12:0xA<32>,r2:r2_544,r3:r3_545,r4:r4_564,r5:r5_565,r6:r6_532,r7:r7_536
		defs: lr:lr_576,pc:pc_2104,r0:r0_568,r1:r1_569,r10:r10_578,r11:r11_579,r2:r2_570,r3:r3_571,r4:r4_572,r5:r5_573,r6:r6_574,r7:r7_575
l000049CA:
	Mem584[r9_559:byte] = 0xA<8>
	Mem586[r11_1989 + 16<i32>:word32] = r9_559 + 1<i32>
l000049D8:
	r7_531 = r7_531 + 1<32>
l000049E2:
l00004990:
l000049A4:
	word32 r0_2035 = 0<32>
l0000510A:
	word32 r9_593 = Mem592[r6_124 + 8<i32>:word32]
	branch r0_2035 <u Mem592[r9_593 + 12<i32>:word32] l00004BC0
l00004BC0:
	word32 r7_599 = Mem592[Mem592[r9_593 + 16<i32>:word32] + r0_2035 * 4<32>:word32]
	word32 r5_600 = CONVERT(Mem592[r7_599 + 116<i32>:byte], byte, word32)
	branch r5_600 == 0<32> l00004BDC
l00004BDC:
	word32 r8_607 = CONVERT(Mem592[Mem592[r7_599 + -24<i32>:word32] + 0x000065AC<p32> + 64<i32>:byte], byte, word32)
	Mem612[sp_1896 + 5340<i32>:byte] = SLICE(r8_607, byte, 0)
	word32 pc_2105
	call Mem612[r6_124 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_617,pc:pc_2105,r0:r0_595,r1:r1_613,r10:0xA<32>,r11:0x3F<32>,r12:sp_609 + 0x14DD<32>,r2:r2_614,r3:r3_615,r4:r4_616,r5:r5_600,r6:r6_591,r7:r7_599,r8:r8_607,r9:0x000065AC<p32>
		defs: lr:lr_627,pc:pc_2105,r0:r0_619,r1:r1_620,r2:r2_621,r3:r3_622,r4:r4_623,r5:r5_624,r6:r6_625,r7:r7_626,sp:sp_618
	Mem634[sp_1896 + 5351<i32>:byte] = SLICE(r5_600, byte, 0)
l00004BCE:
	fn00007130(r10_185, sp_1896 + 0x14DC<32>, r7_599 + 8<32>)
l00004BFC:
	word32 r8_649 = CONVERT(Mem647[Mem647[r6_124 + 8<i32>:word32] + 28<i32>:byte], byte, word32)
	branch r8_649 == 0<32> l00004C16
l00004C06:
	word32 r8_653 = Mem647[r7_599 + -8<i32>:word32]
	branch r8_653 != 1<32> l00004C10
l00004C10:
	branch r8_653 != 2<32> l00004C1A
l00004C14:
	r8_649 = 0x2B<32>
l00004C0C:
	r8_649 = 0x2E<32>
l00004C16:
	Mem663[sp_1896 + 5350<i32>:byte] = SLICE(r8_649, byte, 0)
l00004C1A:
	word32 r9_673
	word32 r8_674
	word32 r8_668 = Mem666[Mem666[r6_124 + 8<i32>:word32] + 316<i32>:word32]
	branch r8_668 == 0<32> l00004C34
l00004C34:
	r9_673 = Mem666[r7_599 + -48<i32>:word32]
	r8_674 = Mem666[r7_599 + -44<i32>:word32]
l00004C24:
	branch r8_668 == 1<32> l00004C2E
l00004C2E:
	r9_673 = Mem666[r7_599 + -40<i32>:word32]
	r8_674 = Mem666[r7_599 + -36<i32>:word32]
l00004C28:
	branch r8_668 != 2<32> l00004C40
l00004C40:
	word32 r12_717
	word32 pc_2106
	call Mem666[r6_124 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_701,pc:pc_2106,r0:r0_683,r1:r1_686,r12:r12_717,r2:r2_689,r3:r3_692,r4:r4_695,r5:r5_698,r6:r6_646,r7:r7_652
		defs: lr:lr_712,pc:pc_2106,r0:r0_704,r1:r1_705,r12:r12_717,r2:r2_706,r3:r3_707,r4:r4_708,r5:r5_709,r6:r6_710,r7:r7_711,r8:r8_713,r9:r9_716,sp:sp_703
l00004C2C:
l00004C3A:
	r9_673 = Mem666[r7_599 + -56<i32>:word32]
	r8_674 = Mem666[r7_599 + -52<i32>:word32]
l00004C44:
	word32 r4_815
	Mem723[sp_1896 + 5356<i32>:word32] = r8_674
	word32 r8_725 = Mem723[r6_124 + 8<i32>:word32]
	Mem727[sp_1896 + 5352<i32>:word32] = r9_673
	branch Mem727[r8_725 + 98<i32>:byte] != 0<8> l00004C60
l00004C60:
	word32 r9_752
	word64 r11_r10_733 = Mem727[r7_599 + 96<i32>:word64]
	word32 r10_734 = SLICE(r11_r10_733, word32, 0)
	word32 r11_736 = SLICE(r11_r10_733, word32, 32)
	branch r11_736 != SLICE(cond(r10_734), bool, 0) l00004C70
l00004C70:
	word32 r12_745
	word32 r9_2570
	word32 r10_2571
	word32 r11_2572
	fn0000B7D4(r10_734, r11_736, sp_1896 + 0xE64<32>, out r9_2570, out r10_2571, out r11_2572, out r12_745, out lr)
	r9_752 = r12_745
l00004C6A:
	r9_752 = Mem727[r6_124 + 140<i32>:word32]
l00004C7A:
	word32 r11_760 = Mem727[r6_124 + 184<i32>:word32]
	word32 r8_761 = Mem727[Mem727[r6_124 + 8<i32>:word32] + 32<i32>:word32]
	word32 sp_763 = sp_1896 - 4<i32>
	Mem765[sp_763:word32] = r9_752
	Mem767[sp_763 - 4<i32>:word32] = r8_761
	word32 r5_758 = sp_1896 + 0x28<32>
	word32 r0_782
	word32 r1_783
	word32 r2_784
	word32 r3_785
	word32 r4_786
	word32 r5_787
	word32 r6_788
	word32 r7_789
	word32 lr_790
	call Mem767[r6_124 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_779,pc:pc_2108,r0:r0_769,r1:r1_771,r11:r11_760,r12:r5_758,r2:r2_773,r3:r3_775,r4:r4_777,r5:r5_758,r6:r6_724,r7:r7_732,r8:r8_761
		defs: lr:lr_790,r0:r0_782,r1:r1_783,r2:r2_784,r3:r3_785,r4:r4_786,r5:r5_787,r6:r6_788,r7:r7_789
	word32 sp_798
	word32 r12_812
	word32 pc_2108
	call Mem767[r6_788 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_790,pc:pc_2108,r0:r0_782,r1:r1_783,r12:r5_787,r2:r2_784,r3:r3_785,r4:r4_786,r5:r5_787,r6:r6_788,r7:r7_789
		defs: pc:pc_2108,r0:r0_799,r1:r1_800,r12:r12_812,r2:r2_801,r3:r3_802,r5:r5_804,r6:r6_805,r7:r7_806,sp:sp_798
	sp_1896 = sp_798 + 8<32>
	r4_815 = r5_600 + r12_812
l00004C5A:
	r4_815 = sp_1896 + 0x28<32>
l00004C9C:
	word32 lr_821 = Mem820[r6_124 + 8<i32>:word32]
	branch Mem820[lr_821 + 114<i32>:byte] == 0<8> l00004D02
l00004CAA:
	word32 r12_858
	branch Mem820[r7_599 + 116<i32>:byte] != 0<8> l00004CBA
l00004CBA:
	word32 sp_832 = sp_1896 - 8<i32>
	Mem835[sp_832:word64] = Mem820[lr_821 + 120<i32>:word64]
	Mem842[sp_832 - 8<i32>:word64] = 0x200<64>
	word32 r3_2565
	word32 r5_2566
	word32 r10_2567
	word32 r11_2568
	r0_2035 = fn000093B8(r0_2035, r1, r2, r3, r4_815, r5_600, Mem842[lr_821 + -12<i32>:word32], sp_832 + 0x1258<32>, Mem842[sp_832 - 8<i32>:word64], Mem842[sp_832:word64], Mem842[sp_832 + 8<i32>:word32], Mem842[sp_832 + 12<i32>:word32], Mem842[sp_832 + 16<i32>:word64], Mem842[sp_832 + 28<i32>:word32], Mem842[sp_832 + 32<i32>:word32], Mem842[sp_832 + 48<i32>:word32], Mem842[sp_832 + 52<i32>:word32], Mem842[sp_832 + 56<i32>:word32], out r1, out r2, out r3_2565, out r4_815, out r5_2566, out r6_124, out r7_599, out r10_2567, out r11_2568, out r12_858, out lr_821)
l00004CB4:
	r12_858 = Mem820[r6_124 + 140<i32>:word32]
l00004CD8:
	word32 r5_878 = Mem875[Mem875[r6_124 + 8<i32>:word32] + 36<i32>:word32]
	word32 r12_890
	word32 r11_2569
	fn00006AA8(r0_2035, r1, r2, r12_858, r4_815, r5_878, r6_124, r7_599, 0<32>, r12_858, lr_821, out r11_2569, out r12_890, out lr_821)
	word32 r3_880 = r12_858
	r5_600 = r5_878 - r12_890
l00004CEE:
	branch r5_600 > 0<32> l00004CE8
l00004CE8:
	Mem906[r4_815:byte] = 0x20<8>
	r5_600 = r5_600 - 1<32>
	r4_815 = r4_815 + 1<i32>
l00004CF4:
	word32 r8_912 = CONVERT(Mem909[r3_880:byte], byte, word32)
	Mem914[r4_815:byte] = SLICE(r8_912, byte, 0)
	r3_880 = r3_880 + 1<i32>
	r4_815 = r4_815 + 1<i32>
	branch r8_912 != 0<32> l00004CF4
l00004CFC:
	Mem919[r4_815 + -1<i32>:byte] = 0x20<8>
l00004D02:
	word32 r9_946
	branch Mem923[r7_599 + 116<i32>:byte] != 0<8> l00004D14
l00004D14:
	word32 r12_939
	word32 r10_2574
	word32 r11_2575
	word32 r9_2573
	fn0000B7D4(Mem923[r7_599 + 28<i32>:word32], 0<32>, sp_1896 + 0xE64<32>, out r9_2573, out r10_2574, out r11_2575, out r12_939, out lr_821)
	r9_946 = r12_939
l00004D0E:
	r9_946 = Mem923[r6_124 + 140<i32>:word32]
l00004D22:
	word32 r3_953 = Mem923[r6_124 + 8<i32>:word32]
	word32 r11_954 = Mem923[r6_124 + 1132<i32>:word32]
	word32 r8_955 = Mem923[r3_953 + 40<i32>:word32]
	word32 sp_960 = sp_1896 - 4<i32>
	Mem962[sp_960:word32] = r9_946
	Mem964[sp_960 - 4<i32>:word32] = r8_955
	Mem968[sp_960 - 8<i32>:word32] = sp_960 + 0x14E0<32>
	word32 r0_990
	word32 r2_992
	word32 r3_993
	word32 r4_994
	word32 r5_995
	word32 r6_996
	word32 r7_997
	word32 lr_998
	call Mem968[r6_124 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_985,pc:pc_1023,r0:r0_970,r1:r1_974,r11:r11_954,r12:r4_957,r2:r2_978,r3:r3_953,r4:r4_957,r5:r5_982,r6:r6_947,r7:r7_920,r8:sp_960 + 0x14E0<32>
		defs: lr:lr_998,r0:r0_990,r2:r2_992,r3:r3_993,r4:r4_994,r5:r5_995,r6:r6_996,r7:r7_997
	word32 sp_1008
	word32 r2_1011
	word32 r4_1013
	word32 pc_1023
	word32 r3_1012
	word32 r5_1014
	word32 r12_1022
	word32 r1_1010
	word32 lr_1017
	word32 r6_1015
	word32 r0_1009
	word32 r7_1016
	call Mem968[r6_996 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_998,pc:pc_1023,r0:r0_990,r1:0<32>,r12:r4_994,r2:r2_992,r3:r3_993,r4:r4_994,r5:r5_995,r6:r6_996,r7:r7_997
		defs: lr:lr_1017,pc:pc_1023,r0:r0_1009,r1:r1_1010,r12:r12_1022,r2:r2_1011,r3:r3_1012,r4:r4_1013,r5:r5_1014,r6:r6_1015,r7:r7_1016,sp:sp_1008
	word32 sp_1025 = sp_1008 + 0xC<32>
	word32 r4_1027 = r4_1013 + r12_1022
	branch SLICE(CONVERT(Mem968[r3_1012 + 356<i32>:byte], byte, word32) - r1_1010, byte, 0) == 0<8> l00004D64
l00004D50:
	word32 r8_1030 = Mem968[r6_1015 + 40<i32>:word32]
	word32 pc_1048
	call Mem968[r6_1015 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1017,pc:pc_1048,r0:r0_1009,r1:r1_1010,r11:Mem968[r8_1030:word32],r12:Mem968[r6_1015 + 268<i32>:word32],r2:r2_1011,r3:r3_1012,r4:r4_1027,r5:r5_1014,r6:r6_1015,r7:r7_1016,r8:r8_1030
		defs: lr:lr_1042,pc:pc_1048,r0:r0_1034,r1:r1_1035,r12:r12_1047,r3:r3_1037,r4:r4_1038,r5:r5_1039,r6:r6_1040,r7:r7_1041,sp:sp_1033
	Mem1053[r3_1012 + 76<i32>:word32] = Mem968[r3_1012 + -52<i32>:word32] + 2<32>
l00004D64:
	word32 r2_1056 = Mem1055[r6_1015 + 48<i32>:word32]
	branch (CONVERT(Mem1055[r2_1056 + 3<i32>:byte], byte, word32) | CONVERT(Mem1055[r2_1056 + 2<i32>:byte], byte, word32) | CONVERT(Mem1055[r3_1012 + 128<i32>:byte], byte, word32) | CONVERT(Mem1055[r3_1012 + 112<i32>:byte], byte, word32)) == 0<32> l00004E14
l00004D7A:
	word32 r8_1067 = Mem1055[r6_1015 + 40<i32>:word32]
	word32 r5_1069 = sp_1025 + 0x28<32>
	word32 r4_1083
	word32 r5_1084
	word32 pc_1093
	word32 r3_1082
	call Mem1055[r6_1015 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1077,pc:pc_1093,r0:r0_1073,r1:r1_1074,r11:Mem1055[r8_1067:word32],r12:r5_1069,r2:r2_1056,r3:r3_1057,r4:r4_1075,r5:r5_1069,r6:r6_1054,r7:r7_1076,r8:r8_1067
		defs: lr:lr_1087,pc:pc_1093,r0:r0_1079,r1:r1_1080,r12:r12_1092,r2:r2_1081,r3:r3_1082,r4:r4_1083,r5:r5_1084,r6:r6_1085,r7:r7_1086,sp:sp_1078
	word32 r9_1096 = CONVERT(Mem1055[r2_1056 + 2<i32>:byte], byte, word32)
	Mem1099[r3_1082 + 76<i32>:word32] = r4_1083 - r5_1084 + Mem1055[r3_1082 + -52<i32>:word32]
	branch SLICE(r9_1096 - r1_1010, byte, 0) == 0<8> l00004DA8
l00004D9C:
	r0_1009 = fn00003904(r0_1009, r1_1010, r2_1056, r3_1082, r4_1083, CONVERT(Mem1099[r7_1016 + 116<i32>:byte], byte, word32), Mem1099[r3_1082 + 44<i32>:word32], Mem1099[r7_1016 + 32<i32>:word32], lr_1017, out r1_1010, out r2_1056, out r3_1082, out r12_1022, out lr_1017)
l00004DA8:
	branch SLICE(CONVERT(Mem1099[r2_1056 + 3<i32>:byte], byte, word32) - r1_1010, byte, 0) == 0<8> l00004DE0
l00004DB0:
	word32 r12_1137
	word32 r4_1128 = Mem1099[r3_1082 + 48<i32>:word32]
	word32 r5_1129 = Mem1099[r7_1016 + 36<i32>:word32]
	branch SLICE(CONVERT(Mem1099[r7_1016 + 116<i32>:byte], byte, word32) - r1_1010, byte, 0) != 0<8> l00004DC4
l00004DC4:
	branch SLICE(CONVERT(Mem1099[r3_1082 + 88<i32>:byte], byte, word32) - r1_1010, byte, 0) == 0<8> l00004DD2
l00004DD2:
	r12_1137 = fn00009A5C(r5_1129, r7_1016, r5_1129, lr_1017)
l00004DCE:
	r12_1137 = 0<32>
l00004DBE:
	r12_1137 = Mem1099[r6_1015 + 140<i32>:word32]
l00004DD8:
	word32 r3_2576
	r0_1009 = fn00003198(r0_1009, r1_1010, r2_1056, r3_1082, r4_1128, r4_1128, r5_1129, r12_1137, lr_1017, out r1_1010, out r2_1056, out r3_2576, out r12_1022, out lr_1017)
l00004DE0:
	r3_1012 = Mem1099[r6_1015 + 8<i32>:word32]
	branch Mem1099[r3_1012 + 128<i32>:byte] == 0<8> l00004DFA
l00004DEE:
	r0_1009 = fn00003904(r0_1009, r1_1010, r2_1056, r3_1012, 0<32>, CONVERT(Mem1099[r7_1016 + 116<i32>:byte], byte, word32), Mem1099[r3_1012 + 52<i32>:word32], Mem1099[r7_1016 + 32<i32>:word32], lr_1017, out r1_1010, out r2_1056, out r3_1012, out r12_1022, out lr_1017)
l00004DFA:
	r5_1014 = sp_1025 + 0x28<32>
	branch Mem1099[r3_1012 + 112<i32>:byte] == 0<8> l00004E12
l00004E08:
	r0_1009 = fn00003198(r0_1009, r1_1010, r2_1056, r3_1012, 0<32>, Mem1099[r3_1012 + 56<i32>:word32], 0<32>, Mem1099[r7_1016 + -16<i32>:word32], lr_1017, out r1_1010, out r2_1056, out r3_1012, out r12_1022, out lr_1017)
l00004E12:
	r4_1027 = sp_1025 + 0x28<32>
l00004E14:
	word32 r5_1395
	word32 r3_1393
	word32 lr_1398
	word32 sp_1406
	word32 r12_1291
	branch Mem1241[r7_1016 + 116<i32>:byte] != 0<8> l00004E28
l00004E28:
	word32 r8_1247 = Mem1241[r7_1016 + 24<i32>:word32]
	branch (r8_1247 & 0xF000<32>) == 0x2000<32> l00004E3A
l00004E34:
	branch (r8_1247 & 0xF000<32>) != 0x6000<32> l00004E9E
l00004E9E:
	word32 sp_1260 = sp_1025 - 8<i32>
	Mem1263[sp_1260:word64] = Mem1241[Mem1241[r6_1015 + 48<i32>:word32] + 4<i32>:word64]
	Mem1270[sp_1260 - 8<i32>:word64] = 1<64>
	word32 r3_2585
	word32 r5_2586
	word32 r11_2588
	word32 r10_2587
	r0_1009 = fn000093B8(r0_1009, r1_1010, r2_1056, r3_1012, r4_1027, r5_1014, Mem1270[Mem1270[r6_1015 + 8<i32>:word32] + -12<i32>:word32], sp_1260 + 0x1258<32>, Mem1270[sp_1260 - 8<i32>:word64], Mem1270[sp_1260:word64], Mem1270[sp_1260 + 8<i32>:word32], Mem1270[sp_1260 + 12<i32>:word32], Mem1270[sp_1260 + 16<i32>:word64], Mem1270[sp_1260 + 28<i32>:word32], Mem1270[sp_1260 + 32<i32>:word32], Mem1270[sp_1260 + 48<i32>:word32], Mem1270[sp_1260 + 52<i32>:word32], Mem1270[sp_1260 + 56<i32>:word32], out r1_1010, out r2_1056, out r3_2585, out r4_1027, out r5_2586, out r6_1015, out r7_1016, out r10_2587, out r11_2588, out r12_1291, out lr_1017)
l00004E3A:
	word32 r3_1308 = Mem1241[r6_1015 + 8<i32>:word32]
	word32 r5_1316 = Mem1241[r3_1308 + -60<i32>:word32] - 2<32> - Mem1241[r3_1308 + -64<i32>:word32] - Mem1241[r3_1308 + 60<i32>:word32]
	fn0000272E()
	word32 r12_1340
	word32 r9_2578
	word32 r10_2579
	word32 r11_2580
	word32 lr_2581
	fn0000B7D4(r12_1022, 0<32>, sp_1025 + 0x1250<32>, out r9_2578, out r10_2579, out r11_2580, out r12_1340, out lr_2581)
	word32 r1_1347 = Mem1241[r3_1308 + -64<i32>:word32]
	fn00002718()
	word32 lr_1362
	word32 r12_1365
	word32 r9_2582
	word32 r10_2583
	word32 r11_2584
	fn0000B7D4(r12_1340, 0<32>, sp_1025 + 0xE64<32>, out r9_2582, out r10_2583, out r11_2584, out r12_1365, out lr_1362)
	word32 r9_1372 = Mem1241[r3_1308 + 60<i32>:word32]
	word32 r5_1374 = max(r5_1316, 0<32>)
	word32 r11_1375 = Mem1241[r6_1015 + 1128<i32>:word32]
	word32 sp_1376 = sp_1025 - 4<i32>
	Mem1377[sp_1376:word32] = r12_1340
	Mem1381[sp_1376 - 4<i32>:word32] = r1_1347
	Mem1383[sp_1376 - 8<i32>:word32] = r12_1365
	word32 r5_1378 = r5_1374 + r9_1372
	Mem1387[sp_1376 - 12<i32>:word32] = r5_1378
	word32 sp_1389
	word32 r4_1394
	word32 pc_1404
	call Mem1387[r6_1015 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_1362,pc:pc_1404,r0:r0_1274,r1:r1_1347,r11:r11_1375,r12:r4_1282,r2:r12_1340,r3:r3_1308,r4:r4_1282,r5:r5_1378,r6:r6_1253,r7:r7_1239,r8:0<32>,r9:r9_1372
		defs: lr:lr_1398,pc:pc_1404,r0:r0_1390,r2:r2_1392,r3:r3_1393,r4:r4_1394,r5:r5_1395,r6:r6_1396,r7:r7_1397,sp:sp_1389
	sp_1406 = sp_1389 + 0x10<32>
	r4_1027 = r4_1394 + Mem1387[r3_1393 + -60<i32>:word32] + 1<32>
l00004E20:
	r12_1291 = Mem1241[r6_1015 + 140<i32>:word32]
l00004EBE:
	word32 r5_1416 = Mem1413[Mem1413[r6_1015 + 8<i32>:word32] + -60<i32>:word32]
	word32 r12_1430
	word32 r11_2577
	fn00006AA8(r0_1009, r1_1010, r2_1056, r12_1291, r4_1027, r5_1416, r6_1015, r7_1016, 0<32>, r12_1291, lr_1017, out r11_2577, out r12_1430, out lr_1398)
	sp_1406 = sp_1025
	r3_1393 = r12_1291
	r5_1395 = r5_1416 - r12_1430
l00004ED4:
	branch r5_1395 > 0<32> l00004ECE
l00004ECE:
	Mem1446[r4_1027:byte] = 0x20<8>
	r5_1395 = r5_1395 - 1<32>
	r4_1027 = r4_1027 + 1<i32>
l00004EDA:
	word32 r8_1452 = CONVERT(Mem1449[r3_1393:byte], byte, word32)
	Mem1454[r4_1027:byte] = SLICE(r8_1452, byte, 0)
	r3_1393 = r3_1393 + 1<i32>
	r4_1027 = r4_1027 + 1<i32>
	branch r8_1452 != 0<32> l00004EDA
l00004EE2:
	Mem1459[r4_1027 + -1<i32>:byte] = 0x20<8>
l00004EE8:
	word32 r3_1793
	word32 sp_1792
	word32 r12_1603
	word32 r12_1480
	word32 lr_1478
	fn00008A6C(r4_1027, r5_1395, r6_1015, r7_1016, lr_1398, out r12_1480, out lr_1478)
	Mem1488[r4_1027:byte] = 1<8>
	word32 r1_1491 = r12_1480
	branch Mem1488[r7_1016 + 116<i32>:byte] == 0<8> l00004F80
l00004F02:
	branch r12_1480 == 0<32> l00004F80
l00004F06:
	r5_1395 = Mem1488[r6_1015 + 8<i32>:word32]
	word32 lr_1503
	fn00002744(Mem1488[sp_1406 + 0x14EC<32>:word32], Mem1488[r5_1395 + 0x1EC<32>:word32], out lr_1503)
	bool N_1507 = <invalid>
	bool V_1506 = <invalid>
	branch N_1507 | V_1506 l00004F1E
l00004F16:
	r1_1491 = fn0000895C(r0_1009, r12_1480, r2_1056, r3_1393, r4_1027, r5_1395, r6_1015, r7_1016, r5_1395 + 0x1E8<32>, lr_1503)
l00004F1E:
	word32 r3_1548 = Mem1488[sp_1406 + 0x14EC<32>:word32]
	Mem1542[sp_1406:word32] = Mem1488[r5_1395 + 488<i32>:word32] + Mem1488[0x00004F42<p32>:word32]
	Mem1544[sp_1406 + 4<i32>:word32] = Mem1542[r5_1395 + 492<i32>:word32]
	word32 lr_2589
	fn00002744(r3_1548, Mem1544[sp_1406 + 4<32>:word32], out lr_2589)
	bool N_1556 = <invalid>
	bool V_1555 = <invalid>
	branch N_1556 | V_1555 l00004F48
l00004F48:
	word32 lr_2590
	fn00002744(Mem1544[r5_1395 + 0x1EC<32>:word32], r3_1548, out lr_2590)
l00004F40:
l00004F5C:
	Mem1597[sp_1406 - 4<i32>:word32] = Mem1544[sp_1406 + 5356<i32>:word32]
	r0_1009 = fn0000B7B2(r1_1491, out r1_1491, out r2_1056, out r3_1393, out r12_1603, out lr_1478)
	branch r12_1603 != 0<32> l00004F8C
l00004F80:
	branch Mem1616[r4_1027:byte] != 0<8> l00004F9C
l00004F9C:
	word32 r1_1644
	branch Mem1616[r7_1016 + 116<i32>:byte] != 0<8> l00004FAC
l00004FAC:
	word32 r8_1628 = Mem1616[sp_1406 + 5352<i32>:word32]
	r1_1644 = fn00009BC8(r8_1628, r8_1628 >> 0x1F<32>, sp_1406 + 0x1250<32>, out lr_1478)
l00004FA6:
	r1_1644 = Mem1616[r6_1015 + 140<i32>:word32]
l00004FC0:
	word32 r2_1649 = Mem1616[r6_1015 + 48<i32>:word32]
	branch Mem1616[r2_1649 + 12<i32>:word32] >= 0<32> l0000500E
l00004FC8:
	Mem1658[sp_1406 + 0x14F0<32>:word32] = 0<32>
	r5_1395 = 0<32>
	word32 r12_1665
	branch fn00008A6C(r4_1027, 0<32>, r6_1015, r7_1016, lr_1478, out r12_1665, out lr_1478) l00005002
l00004FD6:
	Mem1681[sp_1406 - 4<i32>:word32] = 0<32>
	word32 r12_1687
	r0_1009 = fn0000B7B2(r12_1665, out r1_1644, out r2_1649, out r3_1393, out r12_1687, out lr_1478)
	branch r12_1687 == 0<32> l00005002
l00004FF6:
	word32 r12_1705
	word32 r11_2591
	fn00006998(r0_1009, r1_1644, r2_1649, r3_1393, r4_1027, 0<32>, r6_1015, r7_1016, 0<32>, r12_1687, r3_1393, lr_1478, out r11_2591, out r12_1705, out lr_1478)
	Mem1712[r2_1649 + 12<i32>:word32] = r12_1705
l00005002:
	word32 r9_1715 = Mem1714[r6_1015 + 48<i32>:word32]
	branch Mem1714[r9_1715 + 12<i32>:word32] >= 0<32> l0000500E
l0000500A:
	Mem1720[r9_1715 + 12<i32>:word32] = 0<32>
l0000500E:
	word32 r11_1724 = Mem1722[r6_1015 + 184<i32>:word32]
	word32 r8_1725 = Mem1722[Mem1722[r6_1015 + 48<i32>:word32] + 12<i32>:word32]
	word32 sp_1731 = sp_1406 - 4<i32>
	Mem1735[sp_1731:word32] = r1_1644
	Mem1737[sp_1731 - 4<i32>:word32] = r8_1725
	word32 r0_1758
	word32 r1_1759
	word32 r2_1760
	word32 r3_1761
	word32 r4_1762
	word32 r5_1763
	word32 r6_1764
	word32 r7_1765
	word32 lr_1766
	call Mem1737[r6_1015 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_1755,pc:pc_1790,r0:r0_1738,r1:r1_1732,r11:r11_1724,r12:r4_1466,r2:r2_1742,r3:r3_1744,r4:r4_1466,r5:r5_1748,r6:r6_1469,r7:r7_1472,r8:r8_1725
		defs: lr:lr_1766,r0:r0_1758,r1:r1_1759,r2:r2_1760,r3:r3_1761,r4:r4_1762,r5:r5_1763,r6:r6_1764,r7:r7_1765
	word32 sp_1775
	word32 r12_1789
	word32 pc_1790
	call Mem1737[r6_1764 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_1766,pc:pc_1790,r0:r0_1758,r1:r1_1759,r12:r4_1762,r2:r2_1760,r3:r3_1761,r4:r4_1762,r5:r5_1763,r6:r6_1764,r7:r7_1765
		defs: lr:lr_1784,pc:pc_1790,r0:r0_1776,r1:r1_1777,r12:r12_1789,r2:r2_1778,r4:r4_1780,r6:r6_1782,r7:r7_1783,sp:sp_1775
	sp_1792 = sp_1775 + 8<32>
	r3_1793 = r4_1027 + r12_1789
l00004F8A:
	r12_1603 = 0<32>
l00004F8C:
	word32 r8_1798 = r4_1027 + r12_1603
	Mem1801[r8_1798:byte] = 0x20<8>
	Mem1805[r8_1798 + 1<i32>:byte] = 0<8>
	sp_1792 = sp_1406
	r3_1793 = r8_1798 + 1<i32>
l0000502C:
	word32 r11_1861
	word32 r8_1809 = Mem1808[r6_1015 + 40<i32>:word32]
	word32 r5_1812 = sp_1792 + 0x28<32>
	word32 sp_1830
	word32 r3_1834
	word32 r5_1836
	word32 pc_1845
	word32 r7_1838
	word32 r0_1831
	call Mem1808[r6_1015 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1828,pc:pc_1845,r0:r0_1816,r1:r1_1818,r11:Mem1808[r8_1809:word32],r12:r5_1812,r2:r2_1821,r3:r3_1824,r4:r4_1825,r5:r5_1812,r6:r6_1806,r7:r7_1826,r8:r8_1809
		defs: pc:pc_1845,r0:r0_1831,r1:r1_1832,r2:r2_1833,r3:r3_1834,r5:r5_1836,r6:r6_1837,r7:r7_1838,sp:sp_1830
	word32 r9_1848 = Mem1808[r6_124 + 8<i32>:word32]
	word32 r5_1847 = r3_1834 - r5_1836
	word32 r10_1850 = CONVERT(Mem1808[r9_1848 + 104<i32>:byte], byte, word32)
	Mem1853[r9_1848 + 76<i32>:word32] = r5_1847 + Mem1808[r9_1848 + -52<i32>:word32]
	word32 lr_1854 = CONVERT(Mem1853[r7_1838 + 117<i32>:byte], byte, word32)
	word32 r12_1855 = Mem1853[r7_1838 + 28<i32>:word32]
	word32 r3_1856 = Mem1853[r7_1838 + -24<i32>:word32]
	word32 r9_1859 = CONVERT(Mem1853[r7_1838 + 116<i32>:byte], byte, word32)
	branch (r10_1850 & lr_1854) == 0<32> l00005064
l00005064:
	r11_1861 = Mem1853[r7_1838 + 24<i32>:word32]
l0000505E:
	r11_1861 = Mem1853[r7_1838 + -20<i32>:word32]
l00005066:
	word32 r11_1905
	word32 r12_1904
	r4 = Mem1853[r6_124 + 8<i32>:word32]
	Mem1869[sp_1830 - 4<i32>:word32] = r5_1847
	Mem1874[sp_1830 - 8<i32>:word32] = r12_1855
	Mem1876[sp_1830 - 12<i32>:word32] = r4 + 0x1F0<32>
	word32 r12_1889
	fn000045F0(r2, r3_1856, r3_1856, r9_1859, lr_1854, r11_1861, Mem1876[r7_1838:word32], Mem1876[sp_1830 - 12<i32>:word32], Mem1876[sp_1830 - 8<i32>:word32], Mem1876[sp_1830 - 4<i32>:word32], out r12_1889, out lr)
	sp_1896 = sp_1830
	r10_185 = Mem1876[r7_1838 + -24<i32>:word32]
	r3 = r12_1889
	branch r10_185 != 6<32> l000050D4
l000050D4:
	branch Mem1876[r4 + 24<i32>:word32] == 0<32> l000050E4
l000050DA:
	r12_1904 = CONVERT(Mem1876[r7_1838 + 116<i32>:byte], byte, word32)
	r11_1905 = Mem1876[r7_1838 + 24<i32>:word32]
l00005086:
	branch Mem1876[r7_1838 + 4<i32>:word32] == 0<32> l000050E4
l0000508C:
	word32 r8_1909 = Mem1876[r6_124 + 40<i32>:word32]
	word32 sp_1915
	word32 pc_1930
	call Mem1876[r6_124 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_1886,pc:pc_1930,r0:r0_1831,r1:r1_1832,r11:Mem1876[r8_1909:word32],r12:Mem1876[r6_1837 + 1124<i32>:word32],r2:0<32>,r3:r12_1889,r4:r4_1865,r5:r5_1847,r6:r6_1837,r7:r7_1838,r8:r8_1909
		defs: pc:pc_1930,r0:r0_1916,r1:r1_1917,r2:r2_1918,r3:r3_1919,r4:r4_1920,r5:r5_1921,r6:r6_1922,r7:r7_1923,sp:sp_1915
	Mem1935[r4 + 76<i32>:word32] = Mem1876[r4 + -52<i32>:word32] + 4<32>
	word32 r10_1937 = CONVERT(Mem1935[r7_1838 + 117<i32>:byte], byte, word32)
	Mem1939[sp_1915 - 4<i32>:word32] = r5_1847 + 4<32> + r3
	Mem1942[sp_1915 - 8<i32>:word32] = Mem1939[r7_1838 + 28<i32>:word32]
	Mem1944[sp_1915 - 12<i32>:word32] = r2
	word32 r12_2592
	r10_185 = fn000045F0(r2, r3, Mem1944[r7_1838 + -24<i32>:word32], CONVERT(Mem1944[r7_1838 + 116<i32>:byte], byte, word32), r10_1937 - 1<32>, Mem1944[r7_1838 + -20<i32>:word32], Mem1944[r7_1838 + 4<i32>:word32], Mem1944[sp_1915 - 12<i32>:word32], Mem1944[sp_1915 - 8<i32>:word32], Mem1944[sp_1915 - 4<i32>:word32], out r12_2592, out lr)
	sp_1896 = sp_1915
	branch Mem1944[r4 + 24<i32>:word32] == 0<32> l000050E4
l000050CC:
	r11_1905 = Mem1944[r7_1838 + -20<i32>:word32]
	r10_185 = r2
	r12_1904 = 1<32>
l000050E0:
	word32 r12_2593
	r10_185 = fn00002DB4(r4, r5_1847, r10_185, r11_1905, r12_1904, lr, out r12_2593, out lr)
l000050E4:
	r11_1989 = Mem1986[Mem1986[r6_124 + -64<i32>:word32]:word32]
	word32 r9_1990 = Mem1986[r11_1989 + 16<i32>:word32]
	branch r9_1990 >=u Mem1986[r11_1989 + 28<i32>:word32] l000050F8
l000050F8:
	word32 pc_2025
	call Mem1986[r6_124 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_2007,pc:pc_2025,r0:r0_1995,r1:r1_1997,r12:0xA<32>,r2:r2_1999,r3:r3_2001,r4:r4_2003,r5:r5_2004,r6:r6_1984,r7:r7_2005
		defs: lr:lr_2019,pc:pc_2025,r0:r0_2011,r1:r1_2012,r10:r10_2021,r11:r11_2022,r2:r2_2013,r3:r3_2014,r4:r4_2015,r6:r6_2017,sp:sp_2010
l000050F0:
	Mem2028[r9_1990:byte] = 0xA<8>
	Mem2030[r11_1989 + 16<i32>:word32] = r9_1990 + 1<i32>
l000050FE:
	word32 r9_2033 = Mem2032[r6_124 + 8<i32>:word32]
	Mem2039[r9_2033 + 76<i32>:word32] = Mem2032[r9_2033 + -52<i32>:word32] + 1<32>
	r0_2035 = r0_1831 + 1<32>
l00005114:
	r11Out = r11_1989
	return r10_185
fn00004968_exit:


void fn0000511C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000511C_entry:
l0000511C:
	word32 r6_32 = 0x00005124<p32> - Mem29[0x000051E6<p32>:word32]
	word32 sp_40
	word32 r0_41
	word32 r1_42
	word32 r2_43
	word32 r3_44
	word32 r4_45
	word32 r5_46
	word32 r6_47
	word32 r7_48
	word32 lr_49
	word32 r11_50
	word32 r10_51
	word32 r12_52
	call Mem39[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r7,Stack +0000:r10,Stack +0004:r11,Stack +0008:r12,Stack +02A0:lr,Stack +02A4:r7,Stack +02A8:r6,Stack +02AC:r5,Stack +02B0:r4,Stack +02B4:r3,Stack +02B8:r2,Stack +02BC:r1,Stack +02C0:r0
		defs: lr:lr_49,r0:r0_41,r1:r1_42,r10:r10_51,r11:r11_50,r12:r12_52,r2:r2_43,r3:r3_44,r4:r4_45,r5:r5_46,r6:r6_47,r7:r7_48,sp:sp_40
	Mem57[sp_40 + 12<i32>:word32] = r12_52
	Mem58[r12_52:word32] = 0<32>
	word32 sp_60
	word32 r0_61
	word32 r1_62
	word32 r3_64
	word32 r4_65
	word32 r5_66
	word32 r6_67
	word32 r7_68
	word32 lr_69
	word32 r12_72
	byte VNZC_75
	word32 r2_1038
	word32 r11_1048
	word32 r10_1047
	call Mem58[r6_47 + 468<i32>:word32] (retsize: 0;)
		uses: lr:lr_49,r0:r0_41,r1:r1_42,r10:r10_51,r11:r11_50,r12:Mem58[sp_40 + 8<i32>:word32],r2:r2_43,r3:r3_44,r4:r4_45,r5:r5_46,r6:r6_47,r7:r7_48,r8:0<32>
		defs: lr:lr_69,r0:r0_61,r1:r1_62,r10:r10_71,r11:r11_70,r12:r12_72,r2:r2_63,r3:r3_64,r4:r4_65,r5:r5_66,r6:r6_67,r7:r7_68,sp:sp_60,VNZC:VNZC_75
	Mem76[sp_60 + 16<i32>:word32] = r12_72
	branch SLICE(VNZC_75, bool, 1) l00005150
l00005150:
	branch Mem76[Mem76[r6_67 + 8<i32>:word32] + 324<i32>:word32] == 0<32> l0000521E
l0000515A:
	word32 r3_106
	word32 r2_105
	word32 r1_104
	word32 r0_103
	word32 sp_102
	word32 r6_109
	word32 lr_111
	word32 r7_110
	word32 r5_108
	word32 r12_114
	word32 sp_82
	word32 r0_83
	word32 r1_84
	word32 r2_85
	word32 r3_86
	word32 r4_87
	word32 r5_88
	word32 r6_89
	word32 r7_90
	word32 lr_91
	word32 r10_93
	word32 r12_94
	call Mem76[r6_67 + 504<i32>:word32] (retsize: 0;)
		uses: lr:lr_69,r0:r0_61,r1:r1_62,r10:r10_71,r11:r11_70,r12:r12_72,r2:r2_63,r3:r3_64,r4:r4_65,r5:r5_66,r6:r6_67,r7:r7_68
		defs: lr:lr_91,r0:r0_83,r1:r1_84,r10:r10_93,r12:r12_94,r2:r2_85,r3:r3_86,r4:r4_87,r5:r5_88,r6:r6_89,r7:r7_90,sp:sp_82
	branch r12_94 < 0<32> l0000516C
l0000516C:
	call Mem76[r6_89 + 208<i32>:word32] (retsize: 0;)
		uses: lr:lr_91,r0:r0_83,r1:r1_84,r10:r10_93,r11:sp_82 + 0x14<32>,r12:Mem76[sp_82 + 8<i32>:word32],r2:r2_85,r3:r3_86,r4:r4_87,r5:r5_88,r6:r6_89,r7:r7_90
		defs: lr:lr_111,r0:r0_103,r1:r1_104,r12:r12_114,r2:r2_105,r3:r3_106,r5:r5_108,r6:r6_109,r7:r7_110,sp:sp_102
l00005166:
	call Mem76[r6_89 + 524<i32>:word32] (retsize: 0;)
		uses: lr:lr_91,r0:r0_83,r1:r1_84,r10:r10_93,r11:sp_82 + 0x14<32>,r12:r12_94,r2:r2_85,r3:r3_86,r4:r4_87,r5:r5_88,r6:r6_89,r7:r7_90
		defs: lr:lr_127,r0:r0_119,r1:r1_120,r12:r12_130,r2:r2_121,r3:r3_122,r5:r5_124,r6:r6_125,r7:r7_126,sp:sp_118
l00005172:
	word32 r4_135 = r12_114 >>u 0x1F<32>
	branch r4_135 == 0<32> l0000518E
l0000518E:
	word64 r3_r2_141 = Mem76[sp_102 + 108<i32>:word64]
	word64 r1_r0_142 = Mem76[sp_102 + 20<i32>:word64]
	word32 lr_147
	word32 r12_151
	word32 r9_1590
	word32 r11_1591
	fn0000B95C(r4_135, r5_108, r6_109, r7_110, 0x10<32>, lr_111, out r9_1590, out r11_1591, out r12_151, out lr_147)
	word32 r7_158 = Mem76[r6_109 + 8<i32>:word32]
	Mem162[r12_151:word64] = r3_r2_141
	Mem166[r12_151 + 8<i32>:word64] = r1_r0_142
	word32 r3_160 = SLICE(r3_r2_141, word32, 32)
	word32 r1_164 = SLICE(r1_r0_142, word32, 32)
	word32 r0_165 = SLICE(r1_r0_142, word32, 0)
	r2_1038 = SLICE(r3_r2_141, word32, 0) (alias)
	word32 r5_159 = r12_151
	word32 r12_173
	word32 lr_168
	word32 r10_169
	branch fn000090C0(r0_165, r1_164, r3_160, r4_135, r12_151, r12_151, Mem166[r7_158 + 324<i32>:word32], lr_147, out r10_169, out r11_1048, out r12_173, out lr_168) l000051B8
l000051B4:
	word32 r8_1593
	word32 r9_1594
	r4_135 = fn00006CAC(r4_135, r12_151, r6_109, r7_158, lr_168, out r5_159, out r6_109, out r7_158, out r8_1593, out r9_1594, out r10_169, out r11_1048, out r12_173, out lr_168)
	sp_102 = <invalid>
l000051B8:
	branch r12_173 == r5_159 l000051E8
l000051E8:
	branch Mem166[r7_158 + 556<i32>:word32] - Mem166[r7_158 + 552<i32>:word32] > 0xF<32> l00005202
l000051F8:
	call Mem166[r6_109 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_214,r0:r0_165,r1:r1_164,r10:r10_215,r11:0x10<32>,r12:r7_198 + 0x21C<32>,r2:r2_161,r3:r3_160,r4:r4_213,r5:r5_195,r6:r6_208,r7:r7_198
		defs: r11:r11_227,r2:r2_220,r7:r7_225,sp:sp_217
l00005202:
	r10_1047 = Mem166[r7_158 + 552<i32>:word32]
	Mem239[r7_158 + 552<i32>:word32] = r10_1047 + 0x10<32>
	Mem244[r10_1047 + 8<i32>:word64] = Mem239[sp_102 + 20<i32>:word64]
	Mem248[r10_1047:word64] = Mem244[sp_102 + 108<i32>:word64]
l0000521E:
	word32 r7_1055
	word32 r6_1020
	word32 r5_1025 = fn00002CBC(out r6_1020, out r7_1055)
	word32 sp_1058 = <invalid>
	word32 r3_1041 = Mem261[r6_1020 + 1108<i32>:word32]
	word32 r0_1032 = 0<32>
	word32 r1_1035 = 0<32>
l0000522A:
	word32 r12_267 = Mem266[sp_1058 + 16<i32>:word32]
	word32 lr_268 = Mem266[sp_1058 + 12<i32>:word32]
	Mem270[lr_268:word32] = 0<32>
	word32 r12_292
	byte VNZC_296
	word32 r4_1028
	word32 lr_1029
	call Mem270[r6_1020 + 488<i32>:word32] (retsize: 0;)
		uses: lr:lr_268,r0:r0_272,r1:r1_273,r10:r10_279,r11:r11_278,r12:r12_267,r2:r2_274,r3:r3_275,r4:0<32>,r5:r5_276,r6:r6_271,r7:r7_277
		defs: lr:lr_289,r0:r0_281,r1:r1_282,r10:r10_291,r11:r11_290,r12:r12_292,r2:r2_283,r3:r3_284,r4:r4_285,r5:r5_286,r6:r6_287,sp:sp_280,VNZC:VNZC_296
	r7_1055 = r12_292
	branch SLICE(VNZC_296, bool, 1) l000052EC
l000052EC:
	branch Mem270[Mem270[sp_1058 + 12<i32>:word32]:word32] == 0<32> l00005308
l000052F4:
	word32 r9_1599
	word32 lr_1600
	fn00003168(r0_1032, r1_1035, r4_1028, r12_292, Mem270[sp_1058 + 8<i32>:word32], r3_1041, Mem270[sp_1058:word32], lr_1029, out r9_1599, out r10_1047, out r11_1048, out lr_1600)
	lr_1029 = Mem270[sp_1058 + 12<i32>:word32]
	branch Mem270[lr_1029:word32] == 0x4B<32> l0000522A
l00005308:
	word32 r5_341
	byte VNZC_351
	word32 lr_344
	word32 sp_335
	word32 r7_343
	word32 r6_342
	word32 r0_336
	word32 r1_337
	word32 r2_338
	word32 r3_339
	word32 r4_340
	call Mem270[r6_1020 + 232<i32>:word32] (retsize: 0;)
		uses: lr:lr_332,r0:r0_281,r1:r1_282,r10:r10_334,r11:r11_333,r12:Mem270[sp_280 + 16<i32>:word32],r2:r2_283,r3:r3_284,r4:r4_285,r5:r5_286,r6:r6_287,r7:r12_292
		defs: lr:lr_344,r0:r0_336,r1:r1_337,r2:r2_338,r3:r3_339,r4:r4_340,r5:r5_341,r6:r6_342,r7:r7_343,sp:sp_335,VNZC:VNZC_351
	branch SLICE(VNZC_351, bool, 1) l0000531C
l00005310:
	word32 r9_1601
	word32 r10_1602
	word32 r11_1603
	fn00003168(r0_336, r1_337, r4_340, r7_343, Mem270[sp_335 + 8<i32>:word32], Mem270[r6_342 + 1104<i32>:word32], Mem270[sp_335:word32], lr_344, out r9_1601, out r10_1602, out r11_1603, out lr_344)
l0000531C:
	word32 lr_377
	word32 r10_373 = fn0000393C(r0_336, r1_337, r2_338, r4_340, r5_341, lr_344, out lr_377)
	word32 r5_386 = Mem270[r6_342 + 8<i32>:word32]
	branch SLICE(CONVERT(Mem270[r5_386 + 592<i32>:byte], byte, word32) - r7_343, byte, 0) == 0<8> l00005334
l0000532C:
	r10_373 = fn00003A44(r0_336, r2_338, r5_386, Mem270[sp_335:word32], Mem270[sp_335 + 8<i32>:word32], lr_377, out lr_377)
l00005334:
	branch (CONVERT(Mem270[r5_386 + 593<i32>:byte], byte, word32) | CONVERT(Mem270[r5_386 + 592<i32>:byte], byte, word32)) == 0<32> l00005442
l00005342:
	branch SLICE(CONVERT(Mem270[Mem270[r6_342 + 48<i32>:word32] + 16<i32>:byte], byte, word32) - r7_343, byte, 0) != 0<8> l00005374
l0000534E:
	word32 r11_419 = Mem270[Mem270[r6_342 + -64<i32>:word32]:word32]
	word32 r9_420 = Mem270[r11_419 + 16<i32>:word32]
	branch r9_420 >=u Mem270[r11_419 + 28<i32>:word32] l00005364
l00005364:
	call Mem270[r6_342 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_431,r0:r0_336,r1:r1_337,r10:r10_432,r11:r11_419,r12:0xA<32>,r2:r2_338,r3:r3_339,r4:r4_340,r5:r5_386,r6:r6_342,r7:r7_343
		defs: lr:lr_443,r0:r0_435,r1:r1_436,r10:r10_445,r2:r2_437,r4:r4_439,r6:r6_441,r7:r7_442,sp:sp_434
l0000535A:
	Mem452[r9_420:byte] = 0xA<8>
	Mem454[r11_419 + 16<i32>:word32] = r9_420 + 1<i32>
l0000536A:
	word32 r9_457 = Mem456[r6_342 + 8<i32>:word32]
	Mem461[r9_457 + 76<i32>:word32] = Mem456[r9_457 + -52<i32>:word32] + 1<32>
l00005374:
	word32 r5_464 = Mem463[r6_342 + 8<i32>:word32]
	word32 r9_466 = CONVERT(Mem463[r5_464 + 356<i32>:byte], byte, word32)
	Mem468[Mem463[r6_342 + 48<i32>:word32] + 16<i32>:byte] = 0<8>
	word32 r3_467 = 0<32>
	branch SLICE(r9_466, byte, 0) == 0<8> l0000539C
l00005388:
	word32 r8_471 = Mem468[r6_342 + 40<i32>:word32]
	call Mem468[r6_342 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_484,r0:r0_474,r1:r1_476,r10:r10_486,r11:Mem468[r8_471:word32],r12:Mem468[r6_462 + 268<i32>:word32],r2:r2_478,r3:0<32>,r4:r4_480,r5:r5_464,r6:r6_462,r7:r7_482,r8:r8_471
		defs: lr:lr_499,r0:r0_491,r1:r1_492,r10:r10_501,r2:r2_493,r3:r3_494,r4:r4_495,r5:r5_496,r6:r6_497,r7:r7_498,sp:sp_490
	Mem510[r5_464 + 76<i32>:word32] = Mem468[r5_464 + -52<i32>:word32] + 2<32>
l0000539C:
	branch SLICE(CONVERT(Mem512[r5_464 + 356<i32>:byte], byte, word32) - r3_467, byte, 0) == 0<8> l000053D2
l000053A6:
	branch Mem512[r5_464 + 608<i32>:word32] + 4<32> <=u Mem512[r5_464 + 612<i32>:word32] l000053C0
l000053B6:
	call Mem512[r6_342 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_531,r0:r0_526,r1:r1_527,r10:r10_532,r11:4<32>,r12:r5_511 + 0x254<32>,r2:r2_528,r3:r3_514,r4:r4_529,r5:r5_511,r6:r6_525,r7:r7_530
		defs: lr:lr_543,r1:r1_536,r5:r5_540,r6:r6_541,sp:sp_534
l000053C0:
	Mem555[Mem512[r5_464 + 608<i32>:word32]:word32] = Mem512[r5_464 + -52<i32>:word32]
	Mem559[r5_464 + 608<i32>:word32] = Mem555[r5_464 + 608<i32>:word32] + 4<32>
l000053D2:
	word32 r3_563 = Mem562[r6_342 + 8<i32>:word32]
	word32 r9_567 = Mem562[sp_335 + 8<i32>:word32]
	word32 r11_568 = Mem562[sp_335 + 4<i32>:word32]
	word32 r10_570 = Mem562[r3_563 + 640<i32>:word32]
	branch r11_568 != 0<32> l000053E6
l000053E2_1:
	r11_568 = r9_567
l000053E6:
	word32 r12_599
	word32 r11_1607
	word32 r6_595
	word32 r1_588
	word32 r2_591
	word32 r3_592
	word32 r4_593
	word32 r5_594
	word32 r7_596
	word32 lr_586
	word32 r10_589
	word32 r0_587 = fn0000418C(r1_337, Mem562[r3_563 + -52<i32>:word32], 0<32>, r10_570, r11_568, lr_377, out r1_588, out r2_591, out r3_592, out r4_593, out r5_594, out r6_595, out r7_596, out r10_589, out r11_1607, out r12_599, out lr_586)
	word32 r9_604 = CONVERT(Mem562[r3_592 + 356<i32>:byte], byte, word32)
	Mem607[r3_592 + 76<i32>:word32] = r12_599 + r5_594
	branch SLICE(r9_604, byte, 0) == 0<8> l0000542C
l00005400:
	branch Mem607[r3_592 + 608<i32>:word32] + 4<32> <=u Mem607[r3_592 + 612<i32>:word32] l0000541A
l00005410:
	call Mem607[r6_595 + 152<i32>:word32] (retsize: 0;)
		uses: lr:lr_586,r0:r0_587,r1:r1_588,r10:r10_589,r11:4<32>,r12:r3_592 + 0x254<32>,r2:r2_591,r3:r3_592,r4:r4_593,r5:r5_594,r6:r6_595,r7:r7_596
		defs: lr:lr_628,r0:r0_620,r1:r1_621,r10:r10_630,r2:r2_622,r3:r3_623,r4:r4_624,r5:r5_625,r6:r6_626,r7:r7_627
l0000541A:
	Mem640[Mem607[r3_592 + 608<i32>:word32]:word32] = Mem607[r3_592 + -52<i32>:word32]
	Mem644[r3_592 + 608<i32>:word32] = Mem640[r3_592 + 608<i32>:word32] + 4<32>
l0000542C:
	word32 r8_648 = Mem647[r6_595 + 40<i32>:word32]
	call Mem647[r6_595 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_664,r0:r0_651,r1:r1_653,r10:r10_666,r11:Mem647[r8_648:word32],r12:Mem647[r6_645 + 1100<i32>:word32],r2:r2_655,r3:r3_657,r4:r4_658,r5:r5_660,r6:r6_645,r7:r7_662,r8:r8_648
		defs: lr:lr_679,r0:r0_671,r1:r1_672,r10:r10_681,r2:r2_673,r3:r3_674,r4:r4_675,r6:r6_677,r7:r7_678
	word32 r9_687 = Mem647[r6_342 + 8<i32>:word32]
	Mem691[r9_687 + 76<i32>:word32] = Mem647[r9_687 + -52<i32>:word32] + 2<32>
l00005442:
	word32 r5_694 = Mem693[r6_342 + 8<i32>:word32]
	branch Mem693[r5_694 + -20<i32>:word32] == 0<32> l00005456
l0000544A:
	branch Mem693[r5_694 + 114<i32>:byte] == 0<8> l0000550A
l00005456:
	branch Mem693[r5_694 + 356<i32>:byte] == 0<8> l00005476
l00005462:
	word32 r8_709 = Mem693[r6_342 + 40<i32>:word32]
	call Mem693[r6_342 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_725,r0:r0_713,r1:r1_715,r10:r10_727,r11:Mem693[r8_709:word32],r12:Mem693[r6_692 + 268<i32>:word32],r2:r2_717,r3:r3_719,r4:r4_721,r5:r5_694,r6:r6_692,r7:r7_723,r8:r8_709
		defs: lr:lr_739,r0:r0_731,r1:r1_732,r10:r10_741,r2:r2_733,r3:r3_734,r4:r4_735,r5:r5_736,r6:r6_737,r7:r7_738
	Mem750[r5_694 + 76<i32>:word32] = Mem693[r5_694 + -52<i32>:word32] + 2<32>
l00005476:
	word32 r8_753 = Mem752[r6_342 + 40<i32>:word32]
	word32 r2_769
	word32 r3_770
	word32 r5_772
	word32 r7_774
	word32 lr_775
	word32 r6_773
	word32 sp_766
	word32 r0_767
	word32 r1_768
	word32 r4_771
	call Mem752[r6_342 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_763,r0:r0_756,r1:r1_757,r10:r10_764,r11:Mem752[r8_753:word32],r12:Mem752[r6_751 + 1096<i32>:word32],r2:r2_758,r3:r3_759,r4:r4_760,r5:r5_761,r6:r6_751,r7:r7_762,r8:r8_753
		defs: lr:lr_775,r0:r0_767,r1:r1_768,r2:r2_769,r3:r3_770,r4:r4_771,r5:r5_772,r6:r6_773,r7:r7_774,sp:sp_766
	word32 r11_785 = Mem752[Mem752[r6_773 + -64<i32>:word32]:word32]
	Mem787[r5_772 + 76<i32>:word32] = Mem752[r5_772 + -52<i32>:word32] + 5<32>
	word32 r10_788 = Mem787[r11_785 + 16<i32>:word32]
	branch r10_788 >=u Mem787[r11_785 + 28<i32>:word32] l000054A0
l000054A0:
	call Mem787[r6_773 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_775,r0:r0_767,r1:r1_768,r10:r10_788,r11:r11_785,r12:0x20<32>,r2:r2_769,r3:r3_770,r4:r4_771,r5:r5_772,r6:r6_773,r7:r7_774
		defs: r0:r0_794,r1:r1_795,r4:r4_798,r6:r6_800,sp:sp_793
l00005496:
l00005498:
	Mem811[r10_788:byte] = 0x20<8>
	Mem813[r11_785 + 16<i32>:word32] = r10_788 + 1<i32>
l000054A6:
	word32 r5_816 = Mem815[r6_773 + 8<i32>:word32]
	word32 r8_819 = Mem815[r5_816 + -52<i32>:word32]
	word32 r9_823 = Mem815[r5_816 + -12<i32>:word32]
	word32 sp_824 = sp_766 - 8<i32>
	Mem827[sp_824:word64] = Mem815[r5_816 + 120<i32>:word64]
	Mem830[r5_816 + 76<i32>:word32] = r8_819 + 1<32>
	Mem837[sp_824 - 8<i32>:word64] = 0x200<64>
	word32 lr_839
	word32 r1_842
	word32 r10_843
	word32 r12_845
	word32 r2_846
	word32 r4_848
	word32 r5_849
	word32 r6_850
	word32 r7_851
	word32 r11_1606
	word32 r3_1605
	word32 r0_841 = fn000093B8(r0_767, r1_768, 0x200<32>, 0<32>, r4_771, r5_816, r9_823, sp_766 + 0x14<32>, Mem837[sp_824 - 8<i32>:word64], Mem837[sp_824:word64], Mem837[sp_824 + 8<i32>:word32], Mem837[sp_824 + 12<i32>:word32], Mem837[sp_824 + 16<i32>:word64], Mem837[sp_824 + 28<i32>:word32], Mem837[sp_824 + 32<i32>:word32], Mem837[sp_824 + 48<i32>:word32], Mem837[sp_824 + 52<i32>:word32], Mem837[sp_824 + 56<i32>:word32], out r1_842, out r2_846, out r3_1605, out r4_848, out r5_849, out r6_850, out r7_851, out r10_843, out r11_1606, out r12_845, out lr_839)
	word32 r8_858 = Mem837[r6_850 + 40<i32>:word32]
	word32 r0_862
	word32 r1_863
	word32 r2_864
	word32 r3_865
	word32 r4_866
	word32 r5_867
	word32 r6_868
	word32 r7_869
	word32 lr_870
	word32 r11_871
	word32 r10_872
	call Mem837[r6_850 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_839,r0:r0_841,r1:r1_842,r10:r10_843,r11:Mem837[r8_858:word32],r12:r12_845,r2:r2_846,r3:r12_845,r4:r4_848,r5:r5_849,r6:r6_850,r7:r7_851,r8:r8_858
		defs: lr:lr_870,r0:r0_862,r1:r1_863,r10:r10_872,r11:r11_871,r2:r2_864,r3:r3_865,r4:r4_866,r5:r5_867,r6:r6_868,r7:r7_869
	word32 r7_887
	word32 r10_890
	word32 r12_891
	call Mem837[r6_868 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_870,r0:r0_862,r1:r1_863,r10:r10_872,r11:r11_871,r12:r3_865,r2:r2_864,r3:r3_865,r4:r4_866,r5:r5_867,r6:r6_868,r7:r7_869
		defs: lr:lr_888,r0:r0_880,r1:r1_881,r10:r10_890,r12:r12_891,r2:r2_882,r3:r3_883,r4:r4_884,r5:r5_885,r6:r6_886,r7:r7_887
	word32 r11_899 = Mem837[Mem837[r6_342 + -64<i32>:word32]:word32]
	Mem901[r5_694 + 76<i32>:word32] = r12_891 + Mem837[r5_694 + -52<i32>:word32]
	word32 r9_902 = Mem901[r11_899 + 16<i32>:word32]
	branch r9_902 >=u Mem901[r11_899 + 28<i32>:word32] l000054FA
l000054FA:
	call Mem901[r6_342 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_888,r0:r0_880,r1:r1_881,r10:r10_890,r11:r11_899,r12:0xA<32>,r2:r2_882,r3:r3_883,r4:r4_884,r5:r5_885,r6:r6_886,r7:r7_887
		defs: lr:lr_916,r0:r0_908,r1:r1_909,r2:r2_910,r3:r3_911,r4:r4_912,r5:r5_913,r6:r6_914
l000054F2:
	Mem925[r9_902:byte] = 0xA<8>
	Mem927[r11_899 + 16<i32>:word32] = r9_902 + 1<i32>
l00005500:
	word32 r9_930 = Mem929[r6_342 + 8<i32>:word32]
	Mem934[r9_930 + 76<i32>:word32] = Mem929[r9_930 + -52<i32>:word32] + 1<32>
l0000550A:
	branch Mem936[Mem936[r6_342 + 8<i32>:word32] + 12<i32>:word32] == 0<32> l0000556E
l00005512:
	word32 r11_1604
	fn00004968(r0_336, r1_337, r2_338, r3_339, r4_340, r5_694, lr_377, out r11_1604)
l0000523A:
	r11_1048 = Mem270[r6_1020 + 8<i32>:word32]
	r5_1025 = r12_292 + 0x13<32>
	word32 r9_968 = Mem270[r11_1048 + 584<i32>:word32]
	branch r9_968 == 2<32> l00005284
l00005248:
	r10_1047 = CONVERT(Mem270[r12_292 + 0x13<32>:byte], byte, word32)
	branch SLICE(r10_1047 - 0x2E<32>, byte, 0) != 0<8> l00005272
l00005272:
	branch r9_968 != 0<32> l00005284
l00005276:
	word32 r12_984
	r0_1032 = fn00003BA4(r0_1032, r1_1035, r2_1038, r3_1041, r4_1028, r12_292 + 0x13<32>, Mem270[r11_1048 + 588<i32>:word32], lr_1029, out r1_1035, out r2_1038, out r3_1041, out r4_1028, out r5_1025, out r6_1020, out r7_1055, out r10_1047, out r11_1048, out r12_984, out lr_1029)
	sp_1058 = <invalid>
	branch CONVERT(SLICE(r12_984, byte, 0), byte, word32) != 0<32> l0000522A
l00005252:
	branch r9_968 == 0<32> l0000522A
l00005256:
	word32 r8_1006
	word32 r8_1003 = CONVERT(Mem270[r12_292 + 20<i32>:byte], byte, word32)
	r8_1006 = r8_1003
	branch SLICE(r8_1003 - r10_1047, byte, 0) == 0<8> l00005262
l0000525E_1:
	r8_1006 = 1<32>
l00005262:
	branch SLICE(r8_1003 - r10_1047, byte, 0) != 0<8> l00005266
l00005262_1:
	r8_1006 = 2<32>
l00005266:
	branch SLICE(CONVERT(Mem270[r12_292 + 0x13<32> + r8_1006:byte], byte, word32) - r4_1028, byte, 0) == 0<8> l0000522A
l00005270:
l00005284:
	word32 r12_1049
	word32 r4_1052
	word32 lr_1595
	r0_1032 = fn00003BA4(r0_1032, r1_1035, r2_1038, r3_1041, r4_1028, r5_1025, Mem270[Mem270[r6_1020 + 8<i32>:word32] + -48<i32>:word32], lr_1029, out r1_1035, out r2_1038, out r3_1041, out r4_1052, out r5_1025, out r6_1020, out r7_1055, out r10_1047, out r11_1048, out r12_1049, out lr_1595)
	sp_1058 = <invalid>
	branch CONVERT(SLICE(r12_1049, byte, 0), byte, word32) != 0<32> l0000522A
l00005292:
l00005518:
	word32 r11_1072
	word32 r8_1066 = CONVERT(Mem270[r7_1055 + 18<i32>:byte], byte, word32)
	branch r8_1066 >u 0xE<32> l00005296
l00005526:
	switch (r8_1066 - 1<32>) { l00005530 l00005534 l00005538 l0000553C l00005540 l00005544 l00005548 l0000554C l00005550 l00005554 l00005558 l0000555C l00005560 l00005564 }
l00005564:
l00005568:
	r11_1072 = 8<32>
l00005560:
l0000555C:
l000052B2:
	r11_1072 = 7<32>
l00005558:
l00005554:
l000052AA:
	r11_1072 = 6<32>
l00005550:
l0000554C:
l000052AE:
	r11_1072 = 5<32>
l00005548:
l00005544:
l0000529A:
	r11_1072 = 4<32>
l00005540:
l0000553C:
l000052A2:
	r11_1072 = 3<32>
l00005538:
l00005296:
	r11_1072 = 0<32>
l00005534:
l0000529E:
	r11_1072 = 2<32>
l00005530:
l000052A6:
	r11_1072 = 1<32>
l000052B4:
	word32 lr_1085 = Mem270[sp_1058 + 8<i32>:word32]
	Mem1094[sp_1058 - 4<i32>:word32] = lr_1085
	word32 lr_1098
	word32 r4_1107
	r2_1038 = fn00003334(r4_1052, 0<32>, 0<32>, 0<32>, r11_1072, lr_1085, Mem1094[sp_1058 - 4<i32>:word32], out r3_1041, out r4_1107, out r5_1025, out r6_1020, out r7_1055, out lr_1098)
	ui64 r11_r10_1585 = <invalid>
	word64 r1_r0_1584 = <invalid>
	word64 r1_r0_1316 = r1_r0_1584 + r11_r10_1585
	word32 r9_1118 = Mem1094[r6_1020 + 8<i32>:word32]
	r11_1048 = SLICE(r11_r10_1585, word32, 32) (alias)
	r10_1047 = SLICE(r11_r10_1585, word32, 0) (alias)
	r0_1032 = SLICE(r1_r0_1316, word32, 0) (alias)
	r1_1035 = SLICE(r1_r0_1316, word32, 32) (alias)
	branch Mem1094[r9_1118 + -20<i32>:word32] != 1<32> l0000522A
l000052D6:
	branch Mem1094[r9_1118 + 136<i32>:word32] != 0xFFFFFFFF<32> l0000522A
l000052DE:
	word32 lr_1133
	fn0000393C(r0_1032, r1_1035, r2_1038, r4_1107, r5_1025, lr_1098, out lr_1133)
	r10_1047 = fn00004968(r0_1032, r1_1035, r2_1038, r3_1041, r4_1107, r5_1025, lr_1133, out r11_1048)
	r5_1025 = fn00002CBC(out r6_1020, out r7_1055)
	sp_1058 = <invalid>
l000051BC:
	word32 sp_1165
	word32 r0_1166
	word32 r1_1167
	word32 r2_1168
	word32 r3_1169
	word32 r4_1170
	word32 r5_1171
	word32 r6_1172
	word32 r7_1173
	word32 lr_1174
	call Mem166[r6_109 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_214,r0:r0_165,r1:r1_164,r10:r10_215,r11:r11_1164,r12:r5_195,r2:r2_161,r3:r3_160,r4:r4_213,r5:r5_195,r6:r6_208,r7:r7_198
		defs: lr:lr_1174,r0:r0_1166,r1:r1_1167,r2:r2_1168,r3:r3_1169,r4:r4_1170,r5:r5_1171,r6:r6_1172,r7:r7_1173,sp:sp_1165
	word32 lr_1183
	word32 r12_1187
	word32 r9_1596
	word32 r10_1597
	word32 r11_1598
	fn0000A778(Mem166[sp_1165 + 8<i32>:word32], lr_1174, out r9_1596, out r10_1597, out r11_1598, out r12_1187, out lr_1183)
	word32 r10_1194 = Mem166[r6_1172 + 1112<i32>:word32]
	Mem1197[sp_1165 - 4<i32>:word32] = r12_1187
	word32 sp_1199
	word32 r0_1200
	word32 r1_1201
	word32 r2_1202
	word32 r3_1203
	word32 r4_1204
	word32 r5_1205
	word32 r6_1206
	word32 r7_1207
	word32 lr_1208
	word32 r11_1209
	word32 r10_1210
	call Mem1197[r6_1172 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_1183,r0:r0_1166,r1:r1_1167,r10:r10_1194,r11:r4_1170,r12:r4_1170,r2:r2_1168,r3:r3_1169,r4:r4_1170,r5:r5_1171,r6:r6_1172,r7:r7_1173
		defs: lr:lr_1208,r0:r0_1200,r1:r1_1201,r10:r10_1210,r11:r11_1209,r2:r2_1202,r3:r3_1203,r4:r4_1204,r5:r5_1205,r6:r6_1206,r7:r7_1207,sp:sp_1199
	call Mem1197[r6_1206 + 232<i32>:word32] (retsize: 0;)
		uses: lr:lr_1208,r0:r0_1200,r1:r1_1201,r10:r10_1210,r11:r11_1209,r12:Mem1197[sp_1199 + 20<i32>:word32],r2:r2_1202,r3:r3_1203,r4:r4_1204,r5:r5_1205,r6:r6_1206,r7:r7_1207
l00005178:
	word32 lr_1241
	word32 r10_1243
	word32 r11_1244
	word32 r9_1592
	fn00003168(r0_103, r1_104, r4_135, r7_110, Mem76[sp_102 + 8<i32>:word32], Mem76[r6_109 + 1116<i32>:word32], Mem76[sp_102:word32], lr_111, out r9_1592, out r10_1243, out r11_1244, out lr_1241)
	call Mem76[r6_109 + 232<i32>:word32] (retsize: 0;)
		uses: lr:lr_1241,r0:r0_1239,r1:r1_1240,r10:r10_1243,r11:r11_1244,r12:Mem76[sp_139 + 16<i32>:word32],r2:r2_1253,r3:r3_1254,r4:r4_135,r5:r5_143,r6:r6_144,r7:r7_145
l00005140:
	word32 r9_1586
	word32 r10_1587
	word32 r11_1588
	word32 lr_1589
	fn00003168(r0_61, r1_62, r4_65, r7_68, Mem76[sp_60 + 8<i32>:word32], Mem76[r6_67 + 1120<i32>:word32], Mem76[sp_60:word32], lr_69, out r9_1586, out r10_1587, out r11_1588, out lr_1589)
l0000556E:
	return
fn0000511C_exit:


word32 fn000066CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
// MayUse: 
// LiveOut: r12
// Trashed: VNZC r12
// Preserved: sp
fn000066CC_entry:
l000066CC:
	return 0<32>
fn000066CC_exit:


bool fn000066D0(word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
// MayUse:  lr:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: Z lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000066D0_entry:
l000066D0:
	word32 r6_140 = 0x000066D4<p32> - Mem29[0x0000675A<p32>:word32]
	branch r11 >=u 0x401<32> l000066E4
l000066E0_1:
	r7 = r11 + 1<32>
l000066E4:
	branch r11 <u 0x401<32> l000066E8
l000066E4_1:
	r7 = 0x401<32>
l000066E8:
	word32 r0_134 = r12
l000066EE:
	word32 r0_59
	word32 r1_60
	word32 r2_61
	word32 r5_64
	word32 r6_65
	word32 r7_66
	word32 r12_71
	byte VNZC_73
	word32 r8_173
	word32 r9_109
	word32 r11_108
	word32 r10_112
	word32 lr_107
	call Mem29[r6_140 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_55,r0:r0_49,r1:r1_50,r11:r11_56,r12:r7_45,r2:r2_51,r3:r3_52,r4:r4_53,r5:r5_54,r6:r6_47,r7:r7_45
		defs: lr:lr_67,r0:r0_59,r1:r1_60,r10:r10_72,r11:r11_68,r12:r12_71,r2:r2_61,r5:r5_64,r6:r6_65,r7:r7_66,r8:r8_70,r9:r9_69,VNZC:VNZC_73
	bool Z_263 = SLICE(VNZC_73, bool, 1)
	word32 r3_102 = r12_71
	branch Z_263 l00006752
l000066FA:
	word32 r12_93
	byte VNZC_95
	word32 r7_106
	word32 r4_103
	word32 r6_105
	word32 r0_126
	word32 r1_115
	word32 r2_114
	call Mem29[r6_65 + 548<i32>:word32] (retsize: 0;)
		uses: lr:lr_67,r0:r0_59,r1:r1_60,r10:r7_66,r11:r12_71,r12:r0_59,r2:r2_61,r3:r12_71,r4:r12_71,r5:r5_64,r6:r6_65,r7:r7_66
		defs: lr:lr_89,r0:r0_81,r1:r1_82,r10:r10_94,r11:r11_90,r12:r12_93,r2:r2_83,r3:r3_84,r4:r4_85,r6:r6_87,r7:r7_88,r9:r9_91,VNZC:VNZC_95
	word32 r5_104 = r12_93
	branch SLICE(VNZC_95, bool, 3) l00006722
l00006708:
	word32 r12_111
	call Mem29[r6_105 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_89,r0:r0_81,r1:r1_82,r11:r11_90,r12:r12_93,r2:r2_83,r3:r3_84,r4:r4_85,r5:r12_93,r6:r6_87,r7:r7_88
		defs: lr:lr_107,r0:r0_99,r10:r10_112,r11:r11_108,r12:r12_111,r3:r3_102,r4:r4_103,r5:r5_104,r6:r6_105,r7:r7_106,r9:r9_109
	r2_114 = Mem29[r12_111:word32]
	r1_115 = r12_111
	branch r2_114 == 0x22<32> l00006722
l00006722:
	Z_263 = SLICE(cond(r5_104 - r7_106), bool, 1) (alias)
	branch r5_104 >=u r7_106 l0000672E
l0000672E:
	word32 r7_141
	word32 r12_146
	call Mem29[r6_105 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_130,r0:r0_126,r1:r1_127,r11:r11_131,r12:r4_122,r2:r2_128,r3:r3_129,r4:r4_122,r5:r5_118,r6:r6_124,r7:r7_119
		defs: lr:lr_142,r0:r0_134,r1:r1_135,r11:r11_143,r12:r12_146,r2:r2_136,r3:r3_137,r4:r4_138,r5:r5_139,r6:r6_140,r7:r7_141
	branch r7_141 >u Mem29[0x0000675C<p32>:word32] l00006740
l00006740:
	branch r7_141 <=u Mem29[0x00006764<p32>:word32] l000066EC
l000066EC:
	r7 = Mem29[0x00006758<p32>:word32]
l00006748:
	word32 r12_169
	byte VNZC_171
	call Mem29[r6_140 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_142,r0:r0_134,r1:r1_135,r11:r11_143,r12:r12_146,r2:r2_136,r3:r3_137,r4:r4_138,r5:r5_139,r6:r6_140,r7:r7_141
		defs: lr:lr_165,r10:r10_170,r11:r11_166,r12:r12_169,r9:r9_167,VNZC:VNZC_171
	Mem174[r12_169:word32] = 0xC<32>
	Z_263 = SLICE(VNZC_171, bool, 1) (alias)
	r3_102 = 0<32>
	r8_173 = 0xC<32>
l0000673C:
	r7 = r7_141 << 1<i32>
l00006726:
	Mem178[r5_104:byte] = 0<8>
	r8_173 = 0<32>
l00006716:
	word32 r1_182
	word32 r2_183
	byte VNZC_195
	call Mem29[r6_105 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_107,r0:r0_99,r1:r12_111,r11:r11_108,r12:r4_103,r2:r2_114,r3:r3_102,r4:r4_103,r5:r5_104,r6:r6_105,r7:r7_106
		defs: lr:lr_189,r1:r1_182,r10:r10_194,r11:r11_190,r2:r2_183,r8:r8_192,r9:r9_191,VNZC:VNZC_195
	Mem197[r1_182:word32] = r2_183
	Z_263 = SLICE(VNZC_195, bool, 1) (alias)
	r3_102 = 0<32>
l00006752:
	r8Out = r8_173
	r9Out = r9_109
	r10Out = r10_112
	r11Out = r11_108
	r12Out = r3_102
	lrOut = lr_107
	return Z_263
fn000066D0_exit:


word32 fn00006768(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006814
// MayUse:  r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r10 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006768_entry:
l00006768:
	word32 r5_21 = 0<32>
	word32 r4_24 = 0<32>
l000067CC:
	word32 r10_27 = Mem26[r12:word32]
	word32 r12_28 = CONVERT(Mem26[r10_27:byte], byte, word32)
	branch r12_28 != 0<32> l00006776
l00006776:
	branch r4_24 == 0<32> l00006794
l00006794:
	branch SLICE(r12_28 - 0x2E<32>, byte, 0) != 0<8> l000067AC
l000067AC:
	branch CONVERT(SLICE(fn0000BC98(r12_28), byte, 0), byte, word32) != 0<32> l000067C6
l000067B4:
	branch SLICE(CONVERT(Mem26[Mem26[r12:word32]:byte], byte, word32) - 0x7E<32>, byte, 0) == 0<8> l000067C6
l000067C0:
	r5_21 = r4_24
l0000679C:
	branch r5_21 != 0<32> l000067A8
l000067A8:
	r4_24 = 1<32>
l000067A2:
	r5_21 = r10_27
	r4_24 = 1<32>
l0000677A:
	fn0000BCB0()
	word32 r12_63 = CONVERT(SLICE(r12_28, byte, 0), byte, word32)
	branch r12_63 != 0<32> l000067C4
l00006782:
	branch SLICE(CONVERT(Mem26[Mem26[r12:word32]:byte], byte, word32) - 0x7E<32>, byte, 0) == 0<8> l000067C4
l000067C4:
	r4_24 = 0<32>
l0000678E:
	r5_21 = r12_63
	r4_24 = r12_63
l000067C6:
	Mem81[r12:word32] = Mem26[r12:word32] + 1<32>
l000067D4:
	return r5_21
fn00006768_exit:


word32 fn000067DC(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006814
// MayUse:  r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000067DC_entry:
l000067DC:
	fn0000BCDC()
	word32 r7_22 = r12
	branch CONVERT(SLICE(r12, byte, 0), byte, word32) == 0<32> l000067F0
l000067F0:
	fn0000BCB0()
	branch CONVERT(SLICE(r12, byte, 0), byte, word32) != 0<32> l0000680C
l000067FA:
	branch SLICE(0x7E<32> - r12, byte, 0) == 0<8> l00006808
l00006804_1:
	r7_22 = r12 + 0x100<32>
l00006808:
	branch SLICE(0x7E<32> - r12, byte, 0) != 0<8> l0000680C
l00006808_1:
	r7_22 = 0xFFFFFFFF<32>
l000067EC:
	r7_22 = 0<32>
l0000680C:
	return r7_22
fn000067DC_exit:


void fn00006814(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A0C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006814_entry:
l00006814:
	word32 r6_32 = 0x0000681A<p32> - Mem29[0x0000692C<p32>:word32]
	word32 r0_39
	word32 r1_40
	word32 r3_42
	word32 r5_44
	word32 r6_45
	word32 lr_47
	word32 r12_48
	byte VNZC_53
	word32 sp_160
	word32 r4_165
	word32 r2_163
	call Mem29[r6_32 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r11:r11,r12:r12,r2:r12,r3:r3,r4:r11,r5:r5,r6:r6_32,r7:r7,Stack +0014:lr,Stack +0018:r7,Stack +001C:r6,Stack +0020:r5,Stack +0024:r4,Stack +0028:r3,Stack +002C:r2,Stack +0030:r1,Stack +0034:r0
		defs: lr:lr_47,r0:r0_39,r1:r1_40,r12:r12_48,r2:r2_41,r3:r3_42,r4:r4_43,r5:r5_44,r6:r6_45,sp:sp_38,VNZC:VNZC_53
	Mem54[sp_160 + 8<i32>:word32] = r12_48
	branch SLICE(VNZC_53, bool, 1) l0000683C
l0000683C:
	word32 r9_58 = CONVERT(Mem54[r2_163:byte], byte, word32)
	branch SLICE(r9_58 - 0x2E<32>, byte, 0) == 0<8> l0000682A
l00006846:
	branch SLICE(CONVERT(Mem54[r4_165:byte], byte, word32) - 0x2E<32>, byte, 0) == 0<8> l0000682A
l0000682A:
	word32 r8_68 = CONVERT(Mem54[r4_165:byte], byte, word32)
	r2_163 = r2_163 + 1<32>
	r4_165 = r4_165 + 1<32>
	branch SLICE(r9_58 - r8_68, byte, 0) == 0<8> l0000683C
l00006836:
	Mem79[sp_160 + 8<i32>:word32] = r9_58 - r8_68
l0000684E:
	word32 r8_105
	Mem82[sp_160 + 16<i32>:word32] = r2_163
	Mem83[sp_160 + 12<i32>:word32] = r4_165
	word32 r12_85 = fn00006768(sp_160 + 0x10<32>)
	word32 r12_96 = fn00006768(sp_160 + 0xC<32>)
	branch r12_85 == 0<32> l00006868
l00006868:
	r8_105 = Mem83[sp_160 + 16<i32>:word32]
l00006864:
	r8_105 = r12_85
l0000686A:
	word32 r10_115
	Mem111[sp_160:word32] = r8_105 - r2_163
	branch r12_96 == 0<32> l00006876
l00006876:
	r10_115 = Mem111[sp_160 + 12<i32>:word32]
l00006872:
	r10_115 = r12_96
l00006878:
	word32 r10_120 = r10_115 - r4_165
	Mem128[sp_160 + 4<i32>:word32] = r10_120
	branch (r12_85 | r12_96) == 0<32> l0000689E
l00006882:
	branch Mem128[sp_160:word32] != r10_120 l0000689E
l00006888:
	byte VNZC_175
	call Mem128[r6_45 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_47,r0:r0_39,r1:r1_40,r11:r4_62,r12:r2_56,r2:r2_56,r3:r3_42,r4:r4_62,r5:r5_44,r6:r6_45,r7:r12_85
		defs: r2:r2_163,r4:r4_165,sp:sp_160,VNZC:VNZC_175
	branch SLICE(VNZC_175, bool, 1) l0000689E
l00006892:
	Mem179[sp_160:word32] = Mem128[sp_160 + 16<i32>:word32] - r2_163
	Mem183[sp_160 + 4<i32>:word32] = Mem179[sp_160 + 12<i32>:word32] - r4_165
l0000689E:
	word32 r0_184 = 0<32>
	word32 r1_185 = 0<32>
l00006976:
	branch r0_184 <u Mem432[sp_160:word32] l00006982
l0000697C:
	branch r1_185 >=u Mem432[sp_160 + 4<i32>:word32] l00006990
l00006982:
	word32 r3_199 = r4_165 + r1_185
	word32 r7_203 = r2_163 + r0_184
l000068D8:
	word32 r12_258
	word32 r5_254
	branch r0_184 >=u Mem432[sp_160:word32] l000068E8
l000068DE:
	word32 r12_212 = CONVERT(Mem432[r7_203:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_212, byte, 0), byte, word32) == 0<32> l000068AE
l000068E8:
	branch r1_185 <u Mem432[sp_160 + 4<i32>:word32] l000068F4
l000068F4:
	word32 r12_229 = CONVERT(Mem432[r3_199:byte], byte, word32)
	fn0000BCDC()
	word32 r12_234 = CONVERT(SLICE(r12_229, byte, 0), byte, word32)
	branch r12_234 == 0<32> l000068A4
l000068A4:
	branch r0_184 != Mem432[sp_160:word32] l000068AE
l000068AE:
	r5_254 = fn000067DC(CONVERT(Mem432[r7_203:byte], byte, word32))
	branch r1_185 != Mem432[sp_160 + 4<i32>:word32] l000068BE
l000068BA:
	r12_258 = 0<32>
l000068AA:
	r5_254 = r12_234
l000068BE:
	r12_258 = fn000067DC(CONVERT(Mem432[r3_199:byte], byte, word32))
l000068C2:
	r3_199 = r3_199 + 1<32>
	r7_203 = r7_203 + 1<32>
	branch r5_254 == r12_258 l000068D4
l000068D4:
	r0_184 = r0_184 + 1<32>
	r1_185 = r1_185 + 1<32>
l000068CA:
	word32 r12_289 = r5_254 - r12_258
	branch r12_289 == 0<32> l00006990
l000068D0:
	Mem294[sp_160 + 8<i32>:word32] = r12_289
l000068FE:
l000068EE:
	word32 r10_302 = r2_163 + r0_184
l00006902:
	r10_302 = r10_302 + 1<i32>
	branch SLICE(CONVERT(Mem432[r10_302:byte], byte, word32) - 0x30<32>, byte, 0) == 0<8> l00006900
l00006900:
	r0_184 = r0_184 + 1<32>
l0000690C:
	word32 r10_324 = r4_165 + r1_185
l00006914:
	r10_324 = r10_324 + 1<i32>
	branch SLICE(CONVERT(Mem432[r10_324:byte], byte, word32) - 0x30<32>, byte, 0) == 0<8> l00006912
l00006912:
	r1_185 = r1_185 + 1<32>
l0000691E:
	word32 r7_340 = r2_163 + r0_184
	word32 r5_342 = r4_165 + r1_185
	word32 r3_344 = 0<32>
l00006944:
	word32 r12_347 = CONVERT(Mem432[r7_340:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_347, byte, 0), byte, word32) == 0<32> l00006958
l0000694E:
	word32 r12_356 = CONVERT(Mem432[r5_342:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_356, byte, 0), byte, word32) != 0<32> l00006930
l00006930:
	r0_184 = r0_184 + 1<32>
	r1_185 = r1_185 + 1<32>
	branch r3_344 != 0<32> l00006940
l00006938:
	r3_344 = Mem432[r7_340:byte] - Mem432[r5_342:byte]
l00006940:
	r7_340 = r7_340 + 1<32>
	r5_342 = r5_342 + 1<32>
l00006958:
	word32 r12_382 = CONVERT(Mem432[r7_340:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_382, byte, 0), byte, word32) == 0<32> l00006966
l00006966:
	word32 r12_394 = CONVERT(Mem432[r4_165 + r1_185:byte], byte, word32)
	fn0000BCDC()
	branch CONVERT(SLICE(r12_394, byte, 0), byte, word32) != 0<32> l0000698C
l0000698C:
	r3_344 = 0xFFFFFFFF<32>
l00006972:
	branch r3_344 != 0<32> l0000698E
l00006962:
	r3_344 = 1<32>
l0000698E:
	Mem415[sp_160 + 8<i32>:word32] = r3_344
l00006828:
l00006990:
	return
fn00006814_exit:


word32 fn00006998(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000418C
//      fn00004968
//      fn00006AA8
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006998_entry:
l00006998:
	word32 r4_136
	word32 r6_32 = 0x0000699E<p32> - Mem29[0x00006AA0<p32>:word32]
	word32 r12_50
	word32 r11_151
	word32 r10_150
	word32 r3_123
	word32 sp_121
	word32 r6_131
	word32 r0_133
	word32 r1_134
	word32 r2_135
	word32 r7_137
	word32 lr_138
	call Mem29[r6_32 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:r11,r12:r12,r2:r10,r3:r12 + r11,r4:r4,r5:r5,r6:r6_32,r7:r12,Stack +000C:lr,Stack +0010:r7,Stack +0014:r6,Stack +0018:r5,Stack +001C:r4,Stack +0020:r3,Stack +0024:r2,Stack +0028:r1,Stack +002C:r0
		defs: lr:lr_49,r0:r0_41,r1:r1_42,r10:r10_51,r11:r11_52,r12:r12_50,r2:r2_43,r3:r3_44,r6:r6_47,r7:r7_48,sp:sp_40
	branch r12_50 <=u 1<32> l000069B8
l000069B8:
	word32 r12_59 = r7_137
	r10_150 = Mem29[Mem29[r6_131 + 156<i32>:word32]:word32]
	r4_136 = 0<32>
l00006A96:
	branch r12_59 <u r3_123 l00006A74
l00006A74:
	word32 r9_69 = CONVERT(Mem29[r10_150 + CONVERT(Mem29[r12_59:byte], byte, word32) * 2<32>:word16], word16, word32)
	branch Test(NE,SLICE(r9_69, bool, 6)) l00006A84
l00006A84:
	r4_136 = r4_136 + SLICE(r9_69 ^ 0x2000000<32>, bool, 9)
	branch Test(EQ,SLICE(r2_135, bool, 1)) l00006A9C
l00006A80:
	r4_136 = r4_136 + 1<32>
l00006A94:
	r12_59 = r12_59 + 1<32>
l00006A9A:
l000069B2:
	word32 r5_124 = r7_137
	r4_136 = 0<32>
l00006A6E:
	branch r5_124 <u r3_123 l000069C4
l000069C4:
	word32 r9_94 = CONVERT(Mem93[r5_124:byte], byte, word32)
	branch SLICE(r9_94 - 0x20<32>, byte, 0) <u 0<8> l00006A08
l000069CE:
	branch SLICE(r9_94 - 0x23<32>, byte, 0) <=u 0<8> l00006A2C
l000069D8:
	branch SLICE(r9_94 - 0x25<32>, byte, 0) <u 0<8> l00006A08
l000069E0:
	branch SLICE(r9_94 - 0x3F<32>, byte, 0) <=u 0<8> l00006A2C
l000069EA:
	branch SLICE(r9_94 - 0x41<32>, byte, 0) <u 0<8> l00006A08
l000069F2:
	branch SLICE(r9_94 - 0x5F<32>, byte, 0) <=u 0<8> l00006A2C
l000069FC:
	branch SLICE(r9_94 - 0x7E<32>, byte, 0) <=u 0<8> l00006A2C
l00006A08:
	Mem122[sp_121:word64] = 0<64>
l00006A10:
	word32 r12_149
	call Mem122[r6_131 + 248<i32>:word32] (retsize: 0;)
		uses: lr:lr_138,r0:r0_133,r1:r1_134,r10:r3_123 - r5_124,r11:r5_124,r12:sp_127 + 8<32>,r2:r2_135,r3:r3_123,r4:r4_136,r5:r5_124,r6:r6_131,r7:r7_137,r9:sp_127
		defs: lr:lr_148,r0:r0_140,r1:r1_141,r10:r10_150,r11:r11_151,r12:r12_149,r2:r2_142,r3:r3_143,r4:r4_144,r5:r5_145,r6:r6_146,sp:sp_139
	r7_137 = r12_149
	branch r12_149 != 0xFFFFFFFF<32> l00006A32
l00006A32:
	branch r12_149 != 0xFFFFFFFE<32> l00006A42
l00006A42:
	branch r12_149 != 0<32> l00006A48
l00006A44_1:
	r7_137 = 1<32>
l00006A48:
	word32 r4_212
	word32 r12_178
	word32 r0_174
	word32 r1_175
	word32 r2_179
	word32 r3_180
	fn0000B88C(r0_133, r1_134, r2_135, r3_123, r4_136, r5_124, Mem122[sp_121 + 8<i32>:word32], lr_138, out r0_174, out r1_175, out r2_179, out r3_180, out r10_150, out r11_151, out r12_178, out lr_138)
	bool N_184 = <invalid>
	bool V_183 = <invalid>
	branch N_184 | V_183 l00006A54
l00006A54:
	branch Test(EQ,SLICE(r2_179, bool, 1)) l00006A9C
l00006A5A:
	word32 r4_199
	byte VNZC_209
	call Mem122[r6_131 + 556<i32>:word32] (retsize: 0;)
		uses: lr:lr_173,r0:r0_174,r1:r1_175,r10:r10_176,r11:r11_177,r12:Mem122[sp_139 + 8<i32>:word32],r2:r2_179,r3:r3_180,r4:r4_144,r5:r5_145,r6:r6_146,r7:r7_193
		defs: lr:lr_203,r0:r0_195,r1:r1_196,r10:r10_205,r11:r11_206,r2:r2_197,r3:r3_198,r4:r4_199,r5:r5_200,r6:r6_201,r7:r7_202,sp:sp_194,VNZC:VNZC_209
	r4_212 = r4_199 + CONVERT(SLICE(VNZC_209, bool, 1), bool, word32)
l00006A50:
	r4_212 = r4_136 + r12_178
l00006A64:
	byte VNZC_247
	call Mem122[r6_131 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_229,r0:r0_224,r1:r1_225,r10:r10_230,r11:r11_231,r12:sp_216,r2:r2_226,r3:r3_227,r4:r4_228,r5:r5_218 + r7_219,r6:r6_222,r7:r7_219
		defs: lr:lr_241,r0:r0_233,r1:r1_234,r10:r10_243,r11:r11_244,r2:r2_235,r3:r3_236,r4:r4_237,r5:r5_238,r6:r6_239,r7:r7_240,sp:sp_232,VNZC:VNZC_247
	branch SLICE(VNZC_247, bool, 1) l00006A10
l00006A36:
	branch Test(EQ,SLICE(r2_135, bool, 0)) l00006A9C
l00006A3C:
	r4_136 = r4_136 + 1<32>
	r5_124 = r3_123
l00006A26:
	branch Test(EQ,SLICE(r2_135, bool, 0)) l00006A9C
l00006A9C:
	r4_136 = 0xFFFFFFFF<32>
l00006A2C:
	r5_124 = r5_124 + 1<32>
	r4_136 = r4_136 + 1<32>
l00006A72:
l00006A9E:
	r11Out = r11_151
	r12Out = r4_136
	lrOut = lr_138
	return r10_150
fn00006998_exit:


word32 fn00006AA8(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003198
//      fn000032D0
//      fn00003334
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006AA8_entry:
l00006AA8:
	word32 r6_31 = 0x00006AAC<p32> - Mem29[0x00006AC2<p32>:word32]
	word32 r0_38
	word32 r1_39
	word32 r2_40
	word32 r3_41
	word32 r4_42
	word32 r5_43
	word32 r6_44
	word32 r7_45
	word32 lr_46
	word32 r12_48
	call Mem29[r6_31 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r11:r11,r12:r12,r2:r2,r3:r12,r4:r4,r5:r11,r6:r6_31,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_46,r0:r0_38,r1:r1_39,r12:r12_48,r2:r2_40,r3:r3_41,r4:r4_42,r5:r5_43,r6:r6_44,r7:r7_45
	word32 lr_54
	word32 r11_56
	word32 r12_57
	word32 r10_55 = fn00006998(r0_38, r1_39, r2_40, r3_41, r4_42, r5_43, r6_44, r7_45, r5_43, r12_48, r3_41, lr_46, out r11_56, out r12_57, out lr_54)
	r11Out = r11_56
	r12Out = r12_57
	lrOut = lr_54
	return r10_55
fn00006AA8_exit:


void fn00006AC4(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00006AC4_entry:
l00006AC4:
	word32 r6_19 = 0x00006AC8<p32> - Mem17[0x00006B1A<p32>:word32]
	word32 r4_25
	word32 lr_29
	word32 r12_31
	word32 r7_28
	word32 r6_27
	word32 r5_100
	call Mem17[r6_19 + 196<i32>:word32] (retsize: 0;)
		uses: lr:lr,r11:0x2F<32>,r12:r12,r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_29,r12:r12_31,r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_28
	branch r12_31 == 0<32> l00006ADC
l00006AD8_1:
	r7_28 = r12_31 + 1<32>
l00006ADC:
	branch r12_31 != 0<32> l00006AE0
l00006ADC_1:
	r7_28 = r5_100
l00006AE0:
	branch r7_28 - r5_100 <= 6<32> l00006B14
l00006AEA:
	word32 r4_63
	word32 r7_66
	word32 lr_67
	byte VNZC_72
	call Mem17[r6_27 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_29,r10:7<32>,r11:Mem17[r6_27 + 912<i32>:word32],r12:r7_42 - 7<32>,r4:r4_25,r5:r5_26,r6:r6_27,r7:r7_42
		defs: lr:lr_67,r4:r4_63,r5:r5_64,r6:r6_65,r7:r7_66,VNZC:VNZC_72
	branch SLICE(VNZC_72, bool, 1) l00006B14
l00006AFA:
	word32 r7_81
	word32 r12_84
	call Mem17[r6_27 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_67,r10:3<32>,r11:Mem17[r6_65 + 908<i32>:word32],r12:r7_66,r4:r4_63,r5:r5_64,r6:r6_65,r7:r7_66
		defs: r12:r12_84,r5:r5_79,r6:r6_80,r7:r7_81
	branch r12_84 != 0<32> l00006B10
l00006B0C_1:
	r5_100 = r7_81 + 3<32>
l00006B10:
	branch r12_84 == 0<32> l00006B14
l00006B10_1:
	r5_100 = r7_81
l00006B14:
	Mem102[Mem17[r6_27 + 328<i32>:word32]:word32] = r5_100
	return
fn00006AC4_exit:


void fn00006B5C(word32 r0, word32 r1, word32 r2, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006C64
// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006B5C_entry:
l00006B5C:
	word32 r6_20 = 0x00006B62<p32> - Mem17[0x00006C60<p32>:word32]
	word32 r4_28 = 0<32>
	word32 dwLoc18_226 = r8
l00006B74:
	dwLoc18_226 = dwLoc18_226 + 4<32>
	word32 r8_37 = Mem36[dwLoc18_226:word32]
	branch r8_37 != 0<32> l00006B72
l00006B72:
	r4_28 = r4_28 + 1<32>
l00006B82:
	word32 r10_109
	word32 r9_108
	word32 lr_107
	word32 r5_106
	word32 r4_105
	word32 r6_101
	word32 r7_61
	word32 sp_69
	branch r11 == 0<32> l00006B9A
l00006B9A:
	word32 sp_57
	call Mem56[r6_20 + 104<i32>:word32] (retsize: 0;)
		uses: lr:r9,pc:pc,r0:r0,r1:r1,r10:r10,r11:Mem36[r6_20 + 876<i32>:word32],r12:r12,r2:r2,r4:r4_40,r5:r11,r6:r6_20,r7:r12,r8:r8_37,r9:dwLoc18_228 + 4<32>,Stack +0000:r10,Stack +0004:r9
		defs: lr:lr_62,r10:r10_67,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,r9:r9_65,sp:sp_57
	sp_69 = sp_57 + 8<32>
l00006B86:
	word32 sp_79
	call Mem78[r6_20 + 104<i32>:word32] (retsize: 0;)
		uses: lr:r9,pc:pc,r0:r0,r1:r1,r10:r10,r11:Mem36[r6_20 + 880<i32>:word32],r12:r12,r2:r2,r4:r4_40,r5:r11,r6:r6_20,r7:r12,r8:r8_37,r9:dwLoc18_228 + 4<32>,Stack +0000:r11,Stack +0004:r10,Stack +0008:r9
		defs: lr:lr_84,r10:r10_89,r4:r4_80,r5:r5_81,r6:r6_82,r7:r7_83,r9:r9_87,sp:sp_79
	sp_69 = sp_79 + 0xC<32>
l00006BAA:
	word32 r11_140
	word32 r10_139
	word32 sp_97 = sp_69 - 4<i32>
	Mem98[sp_97:word32] = 0x7D9<32>
	word32 r8_102 = Mem98[r6_101 + 872<i32>:word32]
	Mem104[sp_97 - 4<i32>:word32] = r8_102
	word32 r1_244
	word32 r0_243
	word32 r4_111
	word32 r5_112
	word32 r6_113
	word32 r7_114
	word32 lr_115
	word32 r9_118
	word32 r8_119
	word32 r10_120
	word32 r2_245
	word32 pc_246
	call Mem104[r6_101 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr_107,pc:pc,r0:r0,r1:r1,r10:r10_109,r11:0x00006C7C<p32>,r12:r7_99,r2:r2,r4:r4_105,r5:r5_106,r6:r6_101,r7:r7_99,r8:r8_102,r9:r9_108
		defs: lr:lr_115,pc:pc_246,r0:r0_243,r1:r1_244,r10:r10_120,r2:r2_245,r4:r4_111,r5:r5_112,r6:r6_113,r7:r7_114,r8:r8_119,r9:r9_118
	word32 sp_124
	word32 r4_125
	word32 r5_126
	word32 r7_128
	word32 lr_129
	word32 r12_130
	word32 r11_131
	word32 r9_132
	word32 r10_134
	word32 r6_127
	call Mem104[r6_113 + 20<i32>:word32] (retsize: 0;)
		uses: lr:lr_115,pc:pc_246,r0:r0_243,r1:r1_244,r10:r10_120,r11:r7_114,r12:Mem104[r6_113 + 868<i32>:word32],r2:r2_245,r4:r4_111,r5:r5_112,r6:r6_113,r7:r7_114,r8:r8_119,r9:r9_118
		defs: lr:lr_129,r10:r10_134,r11:r11_131,r12:r12_130,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128,r9:r9_132,sp:sp_124
	word32 sp_136 = sp_124 + 8<32>
	branch r4_125 >u 9<32> l00006C50
l00006C50:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 828<i32>:word32]
l00006BD2:
	switch (r4_125) { l00006BDC l00006BE0 l00006BE4 l00006BE8 l00006BEC l00006BF0 l00006BF4 l00006BF8 l00006BFC l00006C00 }
l00006C00:
l00006C48:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 832<i32>:word32]
l00006BFC:
l00006C40:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 836<i32>:word32]
l00006BF8:
l00006C38:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 840<i32>:word32]
l00006BF4:
l00006C30:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 844<i32>:word32]
l00006BF0:
l00006C28:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 848<i32>:word32]
l00006BEC:
l00006C20:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 852<i32>:word32]
l00006BE8:
l00006C18:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 856<i32>:word32]
l00006BE4:
l00006C10:
	r10_139 = Mem104[sp_124 + 8<32>:word32]
	r11_140 = Mem104[r6_127 + 860<i32>:word32]
l00006BE0:
l00006BDC:
l00006C04:
	call Mem104[r6_127 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_129,pc:pc,r0:r0,r1:r1,r10:r10_134,r11:r11_131,r12:r12_130,r2:r2,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128,r8:0x00006BDC<p32>,r9:r9_132
		defs: r6:r6_162,sp:sp_159
l00006C08:
	r10_139 = Mem104[sp_136:word32]
	r11_140 = Mem104[r6_127 + 864<i32>:word32]
l00006C56:
	fn0000B818(r0, r1, r2, r10_139, r11_140, pc)
	return
fn00006B5C_exit:


void fn00006C64(word32 r0, word32 r1, word32 r2, word32 r9, word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006C64_entry:
l00006C64:
	fn00006B5C(r0, r1, r2, fp, r9, r10, r11, r12, pc)
	return
fn00006C64_exit:


word32 fn00006CAC(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000030B4
//      fn00003210
//      fn00004458
//      fn0000511C
//      fn000071D4
//      fn0000A614
//      fn0000B904
//      fn0000B95C
//      fn0000CA50
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r4 r5 r6 r7 r8 r9 sp
// Trashed: VNZC lr pc r10 r11 r12 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00006CAC_entry:
l00006CAC:
	word32 r6_19 = 0x00006CB0<p32> - Mem17[0x00006CCA<p32>:word32]
	word32 r8_25 = Mem17[r6_19 + 820<i32>:word32]
	word32 r4_29
	word32 r5_30
	word32 r6_31
	word32 r7_32
	word32 lr_33
	call Mem27[r6_19 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr,r10:Mem17[r6_19 + 824<i32>:word32],r11:0<32>,r12:Mem17[Mem17[r6_19 + 192<i32>:word32]:word32],r4:r4,r5:r5,r6:r6_19,r7:r7,r8:r8_25,Stack +0000:r8_25,Stack +0004:lr,Stack +0008:r7,Stack +000C:r6,Stack +0010:r5,Stack +0014:r4
		defs: lr:lr_33,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_32
	word32 sp_40
	word32 r4_41
	word32 r5_42
	word32 r6_43
	word32 r7_44
	word32 lr_45
	word32 pc_50
	byte VNZC_51
	call Mem27[r6_31 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_33,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_32
		defs: lr:lr_45,pc:pc_50,r4:r4_41,r5:r5_42,r6:r6_43,r7:r7_44,sp:sp_40,VNZC:VNZC_51
	branch SLICE(VNZC_51, bool, 1) l00006CD0
l00006CCC_1:
	Mem53[pc_50 + 384<i32>:word16] = SLICE(0x00006CCC<p32>, word16, 0)
l00006CD0:
	Mem57[sp_40 - 4<i32>:word32] = r4_41
	Mem60[sp_40 - 8<i32>:word32] = r5_42
	Mem63[sp_40 - 12<i32>:word32] = r6_43
	Mem66[sp_40 - 16<i32>:word32] = r7_44
	Mem69[sp_40 - 20<i32>:word32] = lr_45
	word32 lr_74
	word32 r10_75
	word32 r11_76
	word32 r12_77
	word32 r9_83
	word32 r8_82 = fn00002B30(r5_42, 1<32>, lr_45, out r9_83, out r10_75, out r11_76, out r12_77, out lr_74)
	word32 r7_88 = Mem69[sp_40 - 16<i32>:word32]
	word32 r6_89 = Mem69[sp_40 - 12<i32>:word32]
	word32 r4_91 = Mem69[sp_40 - 4<i32>:word32]
	r5Out = Mem69[sp_40 - 8<i32>:word32]
	r6Out = r6_89
	r7Out = r7_88
	r8Out = r8_82
	r9Out = r9_83
	r10Out = r10_75
	r11Out = r11_76
	r12Out = r12_77
	lrOut = lr_74
	return r4_91
fn00006CAC_exit:


word32 fn00006D14(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006E5C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006D14_entry:
l00006D14:
	word32 r6_31 = 0x00006D18<p32> - Mem29[0x00006D96<p32>:word32]
	word32 r8_33 = Mem29[r6_31 + 148<i32>:word32]
	word32 r3_131
	word32 r5_133
	word32 r2_104
	word32 r6_108
	word32 lr_110
	call Mem29[r6_31 + 404<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:Mem29[r8_33:word32],r12:Mem29[r6_31 + 816<i32>:word32],r2:r10,r3:r11,r4:r4,r5:r12,r6:r6_31,r7:r7,r8:r8_33,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_51,r2:r2_45,r3:r3_46,r5:r5_48,r6:r6_49
	word32 r4_132 = 0<32>
	word32 r0_102 = Mem29[r6_108 + 812<i32>:word32]
	word32 r1_103 = 0<32>
l00006D6E:
	word32 sp_124 = fp - 36<i32>
	word32 r7_126 = Mem62[r5_133:word32]
	word32 r10_135 = r2_104
	branch r7_126 != 0<32> l00006D38
l00006D38:
	word32 r3_105
	word32 r5_107
	word32 r4_106
	branch r4_132 == 0<32> l00006D42
l00006D3C:
	byte VNZC_94
	call Mem62[r6_108 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_77,r0:r0_76,r1:r1_68,r10:r2_66,r11:r3_64,r12:r1_68,r2:r2_66,r3:r3_64,r4:r4_72,r5:r5_61,r6:r6_75,r7:r7_63
		defs: lr:lr_88,r0:r0_80,r1:r1_81,r10:r10_92,r2:r2_82,r3:r3_83,r4:r4_84,r5:r5_85,r6:r6_86,r7:r7_87,sp:sp_79,VNZC:VNZC_94
	branch SLICE(VNZC_94, bool, 1) l00006D58
l00006D58:
	word32 r8_96 = Mem62[r6_108 + 148<i32>:word32]
	word32 r12_98 = Mem62[r8_96:word32]
	Mem100[sp_124 - 4<i32>:word32] = r7_126
	call Mem100[r6_108 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr_88,r0:r0_80,r1:r1_81,r10:r10_92,r11:r0_80,r12:r12_98,r2:r2_82,r3:r3_83,r4:r4_84,r5:r5_85,r6:r6_86,r7:r7_87,r8:r8_96
		defs: lr:lr_110,r0:r0_102,r1:r1_103,r2:r2_104,r3:r3_105,r4:r4_106,r5:r5_107,r6:r6_108
l00006D42:
	word32 r8_121 = Mem62[r6_108 + 148<i32>:word32]
	word32 r11_122 = Mem62[r6_108 + 808<i32>:word32]
	word32 r12_123 = Mem62[r8_121:word32]
	Mem127[sp_124 - 4<i32>:word32] = r7_126
	call Mem127[r6_108 + 104<i32>:word32] (retsize: 0;)
		uses: lr:lr_134,r0:r0_128,r1:r1_129,r10:r10_135,r11:r11_122,r12:r12_123,r2:r2_130,r3:r3_131,r4:r4_132,r5:r5_133,r6:r6_119,r7:r7_126,r8:r8_121
		defs: lr:lr_145,r0:r0_137,r2:r2_139,r3:r3_140,r4:r4_141,r5:r5_142,r6:r6_143
	r1_103 = r3_105
l00006D68:
	r4_132 = r4_106 + 1<32>
	r5_133 = r5_107 + 4<32>
	r3_131 = r3_105 + r2_104
l00006D7A:
	word32 r11_164 = Mem62[Mem62[r6_108 + 148<i32>:word32]:word32]
	word32 r9_165 = Mem62[r11_164 + 16<i32>:word32]
	branch r9_165 >=u Mem62[r11_164 + 28<i32>:word32] l00006D90
l00006D90:
	word32 lr_179
	word32 r8_180
	word32 r12_181
	word32 r11_182
	word32 r10_183
	word32 r9_184
	call Mem62[r6_108 + 52<i32>:word32] (retsize: 0;)
		uses: lr:lr_77,r0:r0_76,r1:r1_68,r10:r2_66,r11:r11_164,r12:0xA<32>,r2:r2_66,r3:r3_64,r4:r4_72,r5:r5_61,r6:r6_75,r7:r7_63
		defs: lr:lr_179,r10:r10_183,r11:r11_182,r12:r12_181,r8:r8_180,r9:r9_184
	r9Out = r9_184
	r10Out = r10_183
	r11Out = r11_182
	r12Out = r12_181
	lrOut = lr_179
	return r8_180
l00006D88:
	Mem196[r9_165:byte] = 0xA<8>
	Mem198[r11_164 + 16<i32>:word32] = r9_165 + 1<i32>
	r9Out = r9_165 + 1<i32>
	r10Out = r2_104
	r11Out = r11_164
	r12Out = r1_103
	lrOut = lr_110
	return 0xA<32>
fn00006D14_exit:


word32 fn00006D9C(word32 r0, word32 r1, word32 r4, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006E5C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r7:[0..31]
// LiveOut: lr
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006D9C_entry:
l00006D9C:
	word32 r6_31 = 0x00006DA0<p32> - Mem29[0x00006DD6<p32>:word32]
	word32 r8_32 = Mem29[r6_31 + 804<i32>:word32]
	word32 r5_33 = Mem29[r6_31 + 800<i32>:word32]
	branch r10 != 0xFFFFFFFF<32> l00006DB6
l00006DB2_1:
	r5_33 = r8_32
l00006DB6:
	word32 lr_51
	word32 r12_55 = fn00009D80(r0, r1, r4, r5_33, r7, r12, 1<32>, lr, out lr_51)
	word32 lr_67
	word32 lr_96
	call Mem83[r6_31 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_67,r0:r0,r1:r1,r10:r5_44,r11:0<32>,r12:0<32>,r2:r11,r3:r12_55,r4:r4,r5:r5_44,r6:r6_31,r7:r7,Stack +0000:fn0000A7C8(r0, r1, r4, r5_44, r7, r11, 6<32>, 0<32>, lr_51, out lr_67),Stack +0004:r12_55
		defs: lr:lr_96
	return lr_96
fn00006D9C_exit:


byte fn00006DDC(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006E5C
//      fn000092D8
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: VN lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006DDC_entry:
l00006DDC:
	word32 r6_32 = 0x00006DE2<p32> - Mem29[0x00006E58<p32>:word32]
	word32 r5_48
	word32 r12_55
	word32 r2_102
	word32 sp_127
	word32 r6_106
	word32 r1_101
	word32 r9_116
	word32 lr_108
	call Mem41[r6_32 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r10,r10:r10,r11:r11,r12:r12,r2:r9,r3:r3,r4:r4,r5:r11,r6:r6_32,r7:r7,r9:r9,Stack +0000:r12,Stack +000C:lr,Stack +0010:r7,Stack +0014:r6,Stack +0018:r5,Stack +001C:r4,Stack +0020:r3,Stack +0024:r2,Stack +0028:r1,Stack +002C:r0
		defs: lr:lr_51,r1:r1_44,r12:r12_55,r2:r2_45,r5:r5_48,r6:r6_49,r9:r9_54,sp:sp_42
	Mem62[sp_127 + 8<i32>:word32] = 0<32>
	Mem63[sp_127 + 4<i32>:word32] = r12_55
	word32 r0_150 = 0<32>
	word32 r3_153 = r5_48
	word32 r4_158 = r1_101
	word32 r5_105 = 0xFFFFFFFF<32>
l00006E3C:
	word32 r7_66 = Mem65[r3_153:word32]
	word32 r10_68 = Mem65[sp_127 + 4<i32>:word32]
	word32 r11_69 = Mem65[sp_127:word32]
	branch r7_66 != 0<32> l00006DFE
l00006DFE:
	word32 r7_89
	word32 r11_91
	word32 r10_92
	byte VNZC_96
	word32 r0_100
	word32 r3_103
	word32 r4_104
	call Mem65[r6_106 + 124<i32>:word32] (retsize: 0;)
		uses: lr:lr_79,r0:r0_74,r1:r1_75,r10:r10_68,r11:r11_69,r12:r7_66,r2:r2_76,r3:r3_64,r4:r4_77,r5:r5_78,r6:r6_73,r7:r7_66,r9:r9_80
		defs: lr:lr_90,r0:r0_82,r1:r1_83,r10:r10_92,r11:r11_91,r2:r2_84,r3:r3_85,r4:r4_86,r5:r5_87,r6:r6_88,r7:r7_89,r9:r9_93,sp:sp_81,VNZC:VNZC_96
	branch SLICE(VNZC_96, bool, 1) l00006E36
l00006E04:
	word32 r7_107
	word32 r12_112
	call Mem65[r6_106 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_90,r0:r0_82,r1:r1_83,r10:r10_92,r11:r11_91,r12:r7_89,r2:r2_84,r3:r3_85,r4:r4_86,r5:r5_87,r6:r6_88,r7:r7_89,r9:r9_93
		defs: lr:lr_108,r0:r0_100,r1:r1_101,r12:r12_112,r2:r2_102,r3:r3_103,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107,sp:sp_99
	word32 r8_115 = r5_105 * r2_102
	r9_116 = Mem65[sp_127 + 4<i32>:word32]
	branch r12_112 != r9_116 l00006E18
l00006E18:
	branch r5_105 != 0xFFFFFFFF<32> l00006E20
l00006E20:
	branch r1_101 == 0<32> l00006E32
l00006E24:
	byte VNZC_142
	call Mem65[r6_106 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_108,r0:r0_100,r1:r1_101,r10:r2_102,r11:r4_104,r12:r1_101 + r8_115,r2:r2_102,r3:r3_103,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107,r9:r9_116
		defs: lr:lr_136,r0:r0_128,r1:r1_129,r2:r2_130,r3:r3_131,r4:r4_132,r5:r5_133,r6:r6_134,r9:r9_139,sp:sp_127,VNZC:VNZC_142
	branch SLICE(VNZC_142, bool, 1) l00006E36
l00006E32:
	Mem146[sp_127 + 8<i32>:word32] = 1<32>
l00006E1C:
	r5_105 = r0_100
l00006E36:
	r0_150 = r0_100 + 1<32>
	r3_153 = r3_103 + 4<32>
	r4_158 = r4_104 + r2_102
l00006E14:
	r5_105 = r0_100
l00006E48:
	branch Mem65[sp_127 + 8<i32>:word32] == 0<32> l00006E50
l00006E4C_1:
	r5_105 = 0xFFFFFFFE<32>
l00006E50:
	r12Out = r5_105
	lrOut = lr_108
	return <invalid>
fn00006DDC_exit:


void fn00006E5C(word32 r0, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, word32 dwArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00006E5C_entry:
l00006E5C:
	word32 r6_31 = 0x00006E60<p32> - Mem29[0x00006E8E<p32>:word32]
	word32 lr_48
	word32 r12_51
	fn00006DDC(r0, dwArg00, r10, r12, r9, r8, r6_31, r11, r8, r9, r10, r11, lr, out r12_51, out lr_48)
	bool N_55 = <invalid>
	bool V_54 = <invalid>
	branch N_55 | V_54 l00006E8E
l00006E7A:
	word32 lr_76
	word32 r10_77
	word32 r11_78
	word32 r12_79
	word32 r9_81
	word32 pc_101
	call dwArg00 (retsize: 0;)
		uses: lr:lr_76,pc:pc_101,r0:r0,r1:dwArg00,r10:r10_77,r11:r11_78,r12:r12_79,r2:r10,r3:r12,r4:r9,r5:r8,r6:r6_31,r7:r11,r8:fn00006D14(r0, dwArg00, r10, r12, r9, r8, r6_31, r11, r8, r9, r10, fn00006D9C(r0, dwArg00, r9, r11, r12_51, r11, r12, lr_48), out r9_81, out r10_77, out r11_78, out r12_79, out lr_76),r9:r9_81,Stack +0024:dwArg00
		defs: pc:pc_101
l00006E8E:
	return
fn00006E5C_exit:


word32 fn00006E94(word32 r12, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002B30
//      fn00003A44
//      fn00007140
// MayUse:  r12:[0..31]
// LiveOut: r10 r11 r12
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006E94_entry:
l00006E94:
l00006E9E:
	branch SLICE(CONVERT(Mem17[r12:byte], byte, word32) - 0x2F<32>, byte, 0) == 0<8> l00006E9C
l00006E9C:
	r12 = r12 + 1<32>
l00006EA8:
	word32 r9_29 = r12
	word32 r11_30 = 0<32>
l00006EC6:
	word32 r10_33 = CONVERT(Mem17[r9_29:byte], byte, word32)
	branch r10_33 != 0<32> l00006EAE
l00006EAE:
	branch SLICE(r10_33 - 0x2F<32>, byte, 0) != 0<8> l00006EBA
l00006EBA:
	branch r11_30 == 0<32> l00006EC4
l00006EC0:
	r12 = r9_29
	r11_30 = 0<32>
l00006EB6:
	r11_30 = 1<32>
l00006EC4:
	r9_29 = r9_29 + 1<32>
l00006ECC:
	r11Out = r11_30
	r12Out = r12
	return r10_33
fn00006E94_exit:


word32 fn00006ED4(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007140
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00006ED4_entry:
l00006ED4:
	word32 r6_19 = 0x00006ED8<p32> - Mem17[0x00006EFA<p32>:word32]
	word32 r5_25
	word32 lr_28
	word32 r12_29
	call Mem17[r6_19 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,r12:r12,r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r12:r12_29,r5:r5_25
	word32 r5_34 = r5_25 + r12_29 - 1<32>
l00006EE8:
	branch r12_29 <=u 1<32> l00006EFA
l00006EEE:
	r5_34 = r5_34 - 1<32>
	branch SLICE(CONVERT(Mem17[r5_34:byte], byte, word32) - 0x2F<32>, byte, 0) == 0<8> l00006EE6
l00006EE6:
	r12_29 = r12_29 - 1<32>
l00006EFA:
	lrOut = lr_28
	return r12_29
fn00006ED4_exit:


void fn00006FF8(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007130
// MayUse:  r10:[0..7] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC r8 r9
// Preserved: r10 r12 sp
fn00006FF8_entry:
l00006FF8:
	branch (r12 & 0xF000<32>) != 0x8000<32> l00007008
l00007008:
	branch (r12 & 0xF000<32>) != 0x4000<32> l00007012
l00007012:
	branch (r12 & 0xF000<32>) != 0x6000<32> l0000701C
l0000701C:
	branch (r12 & 0xF000<32>) != 0x2000<32> l00007026
l00007026:
	branch (r12 & 0xF000<32>) != 0xA000<32> l00007030
l00007030:
	branch (r12 & 0xF000<32>) != 0x1000<32> l0000703A
l0000703A:
	branch (r12 & 0xF000<32>) == 0xC000<32> l00007042
l0000703E_1:
	r10 = 0x3F<32>
l00007042:
	branch (r12 & 0xF000<32>) != 0xC000<32> l00007046
l00007042_1:
	r10 = 0x73<32>
l00007036:
	r10 = 0x70<32>
l0000702C:
	r10 = 0x6C<32>
l00007022:
	r10 = 0x63<32>
l00007018:
	r10 = 0x62<32>
l0000700E:
	r10 = 0x64<32>
l00007004:
	r10 = 0x2D<32>
l00007046:
	word32 r8_32 = r12 & 0x100<32>
	branch (r12 & 0x100<32>) != 0<32> l00007052
l0000704E_1:
	r8_32 = 0x2D<32>
l00007052:
	branch (r12 & 0x100<32>) == 0<32> l00007056
l00007052_1:
	r8_32 = 0x72<32>
l00007056:
	word32 r9_41 = r12 & 0x80<32>
	branch (r12 & 0x80<32>) != 0<32> l0000705E
l0000705A_1:
	r9_41 = 0x2D<32>
l0000705E:
	branch (r12 & 0x80<32>) == 0<32> l00007062
l0000705E_1:
	r9_41 = 0x77<32>
l00007062:
	Mem58[r11 + 1<i32>:byte] = SLICE(r8_32, byte, 0)
	Mem66[r11 + 2<i32>:byte] = SLICE(r9_41, byte, 0)
	Mem74[r11:byte] = SLICE(r10, byte, 0)
	branch (r12 & 0x800<32>) == 0<32> l00007084
l00007084:
	branch (r12 & 0x40<32>) != 0<32> l0000708A
l00007086_1:
	r10 = 0x2D<32>
l0000708A:
	branch (r12 & 0x40<32>) == 0<32> l0000708E
l0000708A_1:
	r10 = 0x78<32>
l00007078:
	branch (r12 & 0x40<32>) != 0<32> l0000707E
l0000707A_1:
	r10 = 0x53<32>
l0000707E:
	branch (r12 & 0x40<32>) == 0<32> l00007082
l0000707E_1:
	r10 = 0x73<32>
l00007082:
l0000708E:
	word32 r8_101 = r12 & 0x20<32>
	branch (r12 & 0x20<32>) != 0<32> l0000709A
l00007096_1:
	r8_101 = 0x2D<32>
l0000709A:
	branch (r12 & 0x20<32>) == 0<32> l0000709E
l0000709A_1:
	r8_101 = 0x72<32>
l0000709E:
	word32 r9_104 = r12 & 0x10<32>
	branch (r12 & 0x10<32>) != 0<32> l000070A6
l000070A2_1:
	r9_104 = 0x2D<32>
l000070A6:
	branch (r12 & 0x10<32>) == 0<32> l000070AA
l000070A6_1:
	r9_104 = 0x77<32>
l000070AA:
	Mem122[r11 + -4<i32>:byte] = SLICE(r8_101, byte, 0)
	Mem130[r11 + -3<i32>:byte] = SLICE(r9_104, byte, 0)
	Mem139[r11 + 3<i32>:byte] = SLICE(r10, byte, 0)
	branch (r12 & 0x400<32>) == 0<32> l000070CC
l000070CC:
	branch (r12 & 8<32>) != 0<32> l000070D2
l000070CE_1:
	r10 = 0x2D<32>
l000070D2:
	branch (r12 & 8<32>) == 0<32> l000070D6
l000070D2_1:
	r10 = 0x78<32>
l000070C0:
	branch (r12 & 8<32>) != 0<32> l000070C6
l000070C2_1:
	r10 = 0x53<32>
l000070C6:
	branch (r12 & 8<32>) == 0<32> l000070CA
l000070C6_1:
	r10 = 0x73<32>
l000070CA:
l000070D6:
	word32 r8_161 = r12 & 4<32>
	word32 r9_162 = r12 & 2<32>
	branch (r12 & 4<32>) != 0<32> l000070E8
l000070E4_1:
	r8_161 = 0x2D<32>
l000070E8:
	branch (r12 & 4<32>) == 0<32> l000070EC
l000070E8_1:
	r8_161 = 0x72<32>
l000070EC:
	branch (r12 & 2<32>) != 0<32> l000070F2
l000070EE_1:
	r9_162 = 0x2D<32>
l000070F2:
	branch (r12 & 2<32>) == 0<32> l000070F6
l000070F2_1:
	r9_162 = 0x77<32>
l000070F6:
	Mem187[r11 + -1<i32>:byte] = SLICE(r8_161, byte, 0)
	Mem196[r11 + -2<i32>:byte] = SLICE(r10, byte, 0)
	Mem199[r11 + 8<i32>:byte] = SLICE(r9_162, byte, 0)
	word32 r8_204 = SLICE(r12, bool, 0)
	branch Test(NE,SLICE(r12, bool, 9)) l00007114
l00007114:
	branch r8_204 != 0<32> l0000711A
l00007116_1:
	r9_162 = 0x2D<32>
l0000711A:
	branch r8_204 == 0<32> l0000711E
l0000711A_1:
	r9_162 = 0x78<32>
l00007108:
	branch r8_204 != 0<32> l0000710E
l0000710A_1:
	r9_162 = 0x54<32>
l0000710E:
	branch r8_204 == 0<32> l00007112
l0000710E_1:
	r9_162 = 0x74<32>
l00007112:
l0000711E:
	Mem224[r11 + 11<i32>:byte] = 0<8>
	Mem230[r11 + 9<i32>:byte] = SLICE(r9_162, byte, 0)
	Mem231[r11 + 10<i32>:byte] = 0x20<8>
	return
fn00006FF8_exit:


void fn00007130(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00007130_entry:
l00007130:
	fn00006FF8(r10, r11, Mem17[r12 + 16<i32>:word32])
	return
fn00007130_exit:


bool fn00007140(word32 r3, word32 r4, word32 r5, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000071D4
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00007140_entry:
l00007140:
	word32 r4_67
	word32 r6_32 = 0x00007146<p32> - Mem29[0x000071CC<p32>:word32]
	word32 r11_41
	word32 r12_42
	word32 r10_40 = fn00006E94(r12, out r11_41, out r12_42)
	word32 lr_50
	word32 r12_51 = fn00006ED4(r4, r5, r6_32, r12_42, r12_42, lr, out lr_50)
	word32 r2_59 = r12_42 - r12 + r12_51
	branch r12_51 != 0<32> l00007164
l00007164:
	r4_67 = CONVERT(SLICE(CONVERT(Mem37[r12_51 + r12_42 + -1<i32>:byte], byte, word32) - 0x2F<32>, byte, 0) != 0<8>, bool, word32)
l00007160:
	r4_67 = r12_51
l00007174:
	word32 r7_70 = r11
l0000717A:
	branch SLICE(CONVERT(Mem37[r7_70:byte], byte, word32) - 0x2F<32>, byte, 0) == 0<8> l00007178
l00007178:
	r7_70 = r7_70 + 1<32>
l00007184:
	word32 r2_185
	word32 r0_100
	word32 r1_101
	word32 r2_102
	word32 r4_104
	word32 r5_105
	word32 r6_106
	word32 r7_107
	word32 lr_108
	word32 r11_109
	word32 r10_110
	word32 r12_111
	call Mem37[r6_32 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,r0:r11,r1:r12,r10:r10_40,r11:r11_41,r12:r7_71,r2:r2_59,r3:r3,r4:r4_90,r5:0x2F<32>,r6:r6_32,r7:r7_71
		defs: lr:lr_108,r0:r0_100,r1:r1_101,r10:r10_110,r11:r11_109,r12:r12_111,r2:r2_102,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107
	word32 r0_121
	word32 r1_122
	word32 r2_123
	word32 r3_124
	word32 r4_125
	word32 r5_126
	word32 r6_127
	word32 r7_128
	word32 r12_132
	byte VNZC_135
	word32 lr_129
	call Mem37[r6_106 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_108,r0:r0_100,r1:r1_101,r10:r10_110,r11:r11_109,r12:r12_111 + 1<32> + r2_102 + r4_104,r2:r2_102,r3:r12_111,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107
		defs: lr:lr_129,r0:r0_121,r1:r1_122,r12:r12_132,r2:r2_123,r3:r3_124,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128,VNZC:VNZC_135
	branch SLICE(VNZC_135, bool, 1) l0000719C
l0000719C:
	word32 sp_140
	word32 r0_141
	word32 r1_142
	word32 r2_143
	word32 r3_144
	word32 r4_145
	word32 r5_146
	word32 r6_147
	word32 r7_148
	word32 lr_149
	word32 r12_152
	call Mem37[r6_127 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_129,r0:r0_121,r1:r1_122,r10:r2_123,r11:r1_122,r12:r12_132,r2:r12_132,r3:r3_124,r4:r4_125,r5:r5_126,r6:r6_127,r7:r7_128
		defs: lr:lr_149,r0:r0_141,r1:r1_142,r12:r12_152,r2:r2_143,r3:r3_144,r4:r4_145,r5:r5_146,r6:r6_147,r7:r7_148,sp:sp_140
	Mem156[r12_152:byte] = SLICE(r5_146, byte, 0)
	word32 r10_157 = Mem156[sp_140:word32]
	word32 r12_158 = r12_152 + r4_145
	branch r10_157 == 0<32> l000071BE
l000071B0:
	Mem167[r10_157:word32] = r12_158 - CONVERT(SLICE(CONVERT(Mem156[r0_141:byte], byte, word32) - r5_146, byte, 0) == 0<8>, bool, word32)
l000071BE:
	word32 r12_194
	call Mem173[r6_147 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_149,r0:r0_141,r1:r1_142,r10:r3_144,r11:r7_148,r12:r12_158,r2:r2_143,r3:r3_144,r4:r4_145,r5:r5_146,r6:r6_147,r7:r7_148
		defs: lr:lr_191,r12:r12_194,r2:r2_185
	Mem199[r12_194:byte] = 0<8>
l00007198:
	r2_185 = r12_132
l000071CA:
	r12Out = r2_185
	lrOut = lr_129
	return SLICE(cond(fp - 36<i32>), bool, 1)
fn00007140_exit:


word32 fn000071D4(word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003A44
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn000071D4_entry:
l000071D4:
	word32 r6_19 = 0x000071D8<p32> - Mem17[0x000071E2<p32>:word32]
	word32 lr_24
	word32 r12_27
	branch fn00007140(r3, r4, r5, r11, r12, lr, out r12_27, out lr_24) l000071E2
l000071DE:
	word32 r7_81
	word32 r6_80
	word32 r5_79
	word32 r8_82
	word32 r9_83
	word32 r10_84
	word32 r11_85
	fn00006CAC(r4, r5, r6_19, r7, lr_24, out r5_79, out r6_80, out r7_81, out r8_82, out r9_83, out r10_84, out r11_85, out r12_27, out lr_24)
l000071E2:
	lrOut = lr_24
	return r12_27
fn000071D4_exit:


word32 fn000071E8(word32 r0, word32 r1, word32 r2, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r9Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000071E8
//      fn00007754
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3 r4 r6 r9
// Trashed: VNZC r12 r8 r9
// Preserved: lr r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000071E8_entry:
l000071E8:
	word32 r6_113 = 0x000071EC<p32> - Mem29[0x00007292<p32>:word32]
	word32 r3_110 = Mem29[r6_113 + 164<i32>:word32]
	word32 r4_111 = r12
	word32 r7_100 = r12
l000071F6:
	r7_100 = r7_100 + 4<32> + 4<32>
	word32 r9_134 = Mem39[r7_100:word32]
	branch r9_134 == 0<32> l0000728C
l000071FE:
	branch r9_134 != 0x5B<32> l00007252
l00007252:
	branch r9_134 == 0x3F<32> l00007270
l00007258:
	branch r9_134 == 0x2A<32> l00007270
l0000725E:
	branch r9_134 == 0x2B<32> l00007270
l00007264:
	branch r9_134 == 0x40<32> l00007270
l0000726A:
	branch r9_134 != 0x21<32> l00007282
l00007270:
	branch Mem39[r7_100 + 4<i32>:word32] != 0x28<32> l00007282
l00007282:
	branch r9_134 != 0x29<32> l000071F6
l00007288:
	r4_111 = r7_100 + 4<32>
l0000727C:
	word32 r12_96
	word32 r9_357
	r0 = fn000071E8(r0, r1, r2, r7_100 + 4<32>, lr, out r1, out r2, out r3_110, out r4_111, out r6_113, out r9_357, out r12_96, out lr)
	r7_100 = r12_96
l00007204:
	word32 r5_101 = Mem39[r6_113 + 132<i32>:word32]
	branch Mem39[r5_101:word32] != 0<32> l0000721E
l0000720E:
	word32 r8_118
	byte VNZC_119
	word32 r12_116
	call Mem39[r6_113 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_83,r0:r0_69,r1:r1_71,r12:r3_75,r2:r2_73,r3:r3_75,r4:r4_77,r5:r5_101,r6:r6_81,r7:r7_38,r8:r8_118
		defs: lr:lr_115,r0:r0_107,r1:r1_108,r12:r12_116,r2:r2_109,r3:r3_110,r4:r4_111,r5:r5_112,r6:r6_113,r7:r7_114,r8:r8_118,VNZC:VNZC_119
	bool Z_120 = SLICE(VNZC_119, bool, 1)
	branch Z_120 l00007218
l00007214_1:
	r12_116 = 0xFFFFFFFF<32>
l00007218:
	branch Z_120 l0000721C
l00007218_1:
	r12_116 = 1<32>
l0000721C:
	Mem128[r5_101:word32] = r12_116
l0000721E:
	r7_100 = r7_100 + 0<32>
	r9_134 = Mem133[r7_100:word32]
	branch r9_134 == 0x21<32> l00007234
l00007228:
	branch Mem133[r5_101:word32] >= 0<32> l00007236
l0000722E:
	branch r9_134 != 0x5E<32> l00007236
l00007234:
	r7_100 = r7_100 + 4<32>
l00007236:
	branch Mem133[r7_100:word32] != 0x5D<32> l00007248
l0000723E:
	r7_100 = r7_100 + 4<32>
l00007248:
	word32 r8_156 = Mem133[r7_100:word32]
	branch r8_156 != 0x5D<32> l00007242
l00007242:
	r7_100 = r7_100 + 4<32>
	branch r8_156 == 0<32> l0000728C
l0000728C:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r6Out = <invalid>
	r9Out = r9_134
	r12Out = r4_111
	lrOut = <invalid>
	return <invalid>
fn000071E8_exit:
l00007250:


word32 fn00007294(word32 r0, word32 r1, word32 r2, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r6Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007294
//      fn00008144
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31]
// LiveOut: lr r0 r1 r10 r12 r2 r3 r4 r6 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: lr r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00007294_entry:
l00007294:
	word32 r6_101 = 0x00007298<p32> - Mem29[0x00007352<p32>:word32]
	word32 r3_119 = Mem29[r6_101 + 164<i32>:word32]
	word32 r4_120 = r12
	word32 r7_109 = r12
l000072A2:
	r7_109 = r7_109 + 1<32> + 1<32>
	word32 r10_126 = CONVERT(Mem39[r7_109:byte], byte, word32)
	branch r10_126 == 0<32> l00007350
l000072AA:
	branch SLICE(r10_126 - 0x5B<32>, byte, 0) != 0<8> l00007308
l00007308:
	branch SLICE(r10_126 - 0x3F<32>, byte, 0) == 0<8> l00007330
l00007310:
	branch SLICE(r10_126 - 0x2A<32>, byte, 0) == 0<8> l00007330
l00007318:
	branch SLICE(r10_126 - 0x2B<32>, byte, 0) == 0<8> l00007330
l00007320:
	branch SLICE(r10_126 - 0x40<32>, byte, 0) == 0<8> l00007330
l00007328:
	branch SLICE(r10_126 - 0x21<32>, byte, 0) != 0<8> l00007344
l00007330:
	r9 = CONVERT(Mem39[r7_109 + 1<32>:byte], byte, word32)
	branch SLICE(r9 - 0x28<32>, byte, 0) != 0<8> l00007344
l00007344:
	branch SLICE(r10_126 - 0x29<32>, byte, 0) != 0<8> l000072A2
l0000734C:
	r4_120 = r7_109 + 1<32>
l0000733E:
	word32 r12_104
	word32 r10_378
	r0 = fn00007294(r0, r1, r2, r7_109 + 1<32>, lr, out r1, out r2, out r3_119, out r4_120, out r6_101, out r9, out r10_378, out r12_104, out lr)
	r7_109 = r12_104
l000072B2:
	word32 r5_110 = Mem39[r6_101 + 132<i32>:word32]
	branch Mem39[r5_110:word32] != 0<32> l000072CC
l000072BC:
	word32 r8_127
	word32 r9_128
	byte VNZC_129
	word32 r12_125
	call Mem39[r6_101 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_91,r0:r0_77,r1:r1_79,r12:r3_83,r2:r2_81,r3:r3_83,r4:r4_85,r5:r5_110,r6:r6_89,r7:r7_38,r8:r8_127,r9:r9_128
		defs: lr:lr_124,r0:r0_116,r1:r1_117,r10:r10_126,r12:r12_125,r2:r2_118,r3:r3_119,r4:r4_120,r5:r5_121,r6:r6_122,r7:r7_123,r8:r8_127,r9:r9_128,VNZC:VNZC_129
	bool Z_130 = SLICE(VNZC_129, bool, 1)
	branch Z_130 l000072C6
l000072C2_1:
	r12_125 = 0xFFFFFFFF<32>
l000072C6:
	branch Z_130 l000072CA
l000072C6_1:
	r12_125 = 1<32>
l000072CA:
	Mem138[r5_110:word32] = r12_125
l000072CC:
	r7_109 = r7_109 + 0<32>
	word32 r9_144 = CONVERT(Mem143[r7_109:byte], byte, word32)
	branch SLICE(r9_144 - 0x21<32>, byte, 0) == 0<8> l000072E6
l000072D8:
	branch Mem143[r5_110:word32] >= 0<32> l000072E8
l000072DE:
	branch SLICE(r9_144 - 0x5E<32>, byte, 0) != 0<8> l000072E8
l000072E6:
	r7_109 = r7_109 + 1<32>
l000072E8:
	branch SLICE(CONVERT(Mem143[r7_109:byte], byte, word32) - 0x5D<32>, byte, 0) != 0<8> l000072FC
l000072F2:
	r7_109 = r7_109 + 1<32>
l000072FC:
	r9 = CONVERT(Mem143[r7_109:byte], byte, word32)
	branch SLICE(r9 - 0x5D<32>, byte, 0) != 0<8> l000072F6
l000072F6:
	r7_109 = r7_109 + 1<32>
	branch r9 == 0<32> l00007350
l00007350:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r6Out = <invalid>
	r9Out = r9
	r10Out = r10_126
	r12Out = r4_120
	lrOut = <invalid>
	return <invalid>
fn00007294_exit:
l00007306:


word32 fn00007358(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007754
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r9
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00007358_entry:
l00007358:
	word32 r6_33 = 0x00007360<p32> - Mem29[0x000074CA<p32>:word32]
	word32 r4_58
	word32 r12_64
	word32 r2_1000
	word32 sp_1004
	word32 r6_1011
	word32 r0_1018
	word32 r1_1025
	word32 r5_1039
	word32 r7_104
	word32 lr_1043
	word32 r11_1093
	word32 r10_1086
	call Mem52[r6_33 + 560<i32>:word32] (retsize: 0;)
		uses: lr:fp - 40<i32>,r0:r9,r1:r10,r10:r10,r11:0<32>,r12:r11,r2:r12,r3:r3,r4:r11,r5:r5,r6:r6_33,r7:fp - 36<i32>,r8:r8,r9:r9,Stack +0008:r8,Stack +000C:r11,Stack +0010:0<32>,Stack +0014:fp - 40<i32>,Stack +001C:0<32>,Stack +0020:lr,Stack +0024:r7,Stack +0028:r6,Stack +002C:r5,Stack +0030:r4,Stack +0034:r3,Stack +0038:r2,Stack +003C:r1,Stack +0040:r0
		defs: lr:lr_62,r0:r0_54,r1:r1_55,r10:r10_65,r11:r11_63,r12:r12_64,r2:r2_56,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,sp:sp_53
	word32 r3_1032 = Mem52[r7_104 + 36<i32>:word32]
	Mem72[r7_104 + -28<i32>:word32] = sp_1004
	Mem73[r7_104 + -32<i32>:word32] = r4_58 + 4<32>
	Mem74[r7_104 + -8<i32>:word32] = r12_64
	word32 r4_176 = r4_58 + 4<32>
l00007398:
	word32 r12_1152
	word32 r9_1089 = Mem76[r4_176:word32]
	branch r9_1089 == 0<32> l00007736
l000073A0:
	branch r9_1089 != 0x5B<32> l000073F8
l000073F8:
	branch r9_1089 == 0x3F<32> l00007416
l000073FE:
	branch r9_1089 == 0x2A<32> l00007416
l00007404:
	branch r9_1089 == 0x2B<32> l00007416
l0000740A:
	branch r9_1089 == 0x40<32> l00007416
l00007410:
	branch r9_1089 != 0x21<32> l0000742A
l00007416:
	branch Mem76[r4_176 + 4<i32>:word32] != 0x28<32> l0000742A
l0000742A:
	branch r9_1089 != 0x29<32> l000074AC
l000074AC:
	branch r9_1089 != 0x7C<32> l00007534
l000074B2:
	lr_1043 = Mem76[r7_104 + -16<i32>:word32]
	branch lr_1043 != 0<32> l00007534
l000074BA:
	branch r2_1000 >u 0x40<32> || r2_1000 <u 0x3F<32> l000074D4
l000074D4:
	r9_1089 = (r4_176 - Mem76[r7_104 + -32<i32>:word32] >> 2<i32>) + 1<32>
l000074C4:
	r9_1089 = Mem76[r7_104 + -8<i32>:word32]
l000074E2:
	r11_1093 = r9_1089 << 2<32>
	r10_1086 = r11_1093 + 4<32>
	branch r9_1089 >u Mem76[0x0000762E<p32>:word32] l00007736
l000074F2:
	branch r11_1093 <=u 1<32> l00007736
l000074F8:
	branch r11_1093 >u 0x1F3B<32> l00007736
l00007500:
	word32 r8_141 = Mem76[r7_104 + -32<i32>:word32]
	word32 r12_182
	call Mem76[r6_1011 + 340<i32>:word32] (retsize: 0;)
		uses: lr:lr_107,r0:r0_155,r1:r1_159,r10:r4_75 - r8_141 >> 2<i32>,r11:r8_141,r12:sp_137 - (r11_126 + 8<32>) + 4<32>,r2:r2_111,r3:r3_164,r4:r4_75,r5:r5_168,r6:r6_151,r7:r7_104,r8:r8_141,r9:r9_125
		defs: r0:r0_172,r1:r1_173,r10:r10_183,r11:r11_181,r12:r12_182,r2:r2_174,r3:r3_175,r4:r4_176,r6:r6_178,r7:r7_179,sp:sp_171
	Mem191[r7_104 + -32<i32>:word32] = r4_176 + 4<32>
	Mem192[r12_182:word32] = 0<32>
	word32 r9_193 = Mem192[r7_104 + -12<i32>:word32]
	Mem194[sp_1004:word32] = 0<32>
	Mem195[r9_193:word32] = sp_1004
	Mem196[r7_104 + -12<i32>:word32] = sp_1004
	r5_1039 = sp_1004
	lr_1043 = r4_176 + 4<32>
l00007430:
	word32 r8_197 = Mem76[r7_104 + -16<i32>:word32]
	Mem199[r7_104 + -16<i32>:word32] = r8_197 - 1<32>
	branch r8_197 != 0<32> l00007534
l0000743E:
	word32 r12_208
	branch r2_1000 >u 0x40<32> || r2_1000 <u 0x3F<32> l0000744E
l0000744E:
	lr_1043 = Mem199[r7_104 + -32<i32>:word32]
	r12_208 = (r4_176 - lr_1043 >> 2<i32>) + 1<32>
l00007448:
	r12_208 = Mem199[r7_104 + -8<i32>:word32]
l0000745C:
	r10_1086 = r12_208 << 2<32>
	r9_1089 = r10_1086 + 4<32>
	branch r12_208 >u Mem199[0x000074CC<p32>:word32] l00007736
l0000746C:
	branch r10_1086 <=u 1<32> l00007736
l00007472:
	branch r10_1086 >u 0x1F3B<32> l00007736
l0000747A:
	word32 r9_223 = Mem199[r7_104 + -32<i32>:word32]
	word32 sp_243
	word32 r12_254
	word32 r2_246
	word32 r3_1053
	word32 r4_1057
	word32 r6_1083
	word32 r0_1050
	word32 r1_1055
	call Mem199[r6_1011 + 340<i32>:word32] (retsize: 0;)
		uses: lr:lr_239,r0:r0_155,r1:r1_159,r10:r4_75 - r9_223 >> 2<i32>,r11:r9_223,r12:sp_137 - (r10_214 + 8<32>) + 4<32>,r2:r2_111,r3:r3_164,r4:r4_75,r5:r5_168,r6:r6_151,r7:r7_104,r8:r10_214 + 8<32>,r9:r9_223
		defs: lr:lr_252,r0:r0_244,r1:r1_245,r10:r10_255,r11:r11_253,r12:r12_254,r2:r2_246,r3:r3_247,r4:r4_248,r6:r6_250,r7:r7_251,r9:r9_256,sp:sp_243
	Mem261[r12_254:word32] = 0<32>
	Mem262[sp_243:word32] = 0<32>
	Mem264[Mem262[r7_104 + -12<i32>:word32]:word32] = sp_243
	word32 r5_259 = sp_243
	word32 r8_265 = Mem264[r7_104 + -4<i32>:word32]
	branch r8_265 != 0<32> l0000754C
l000074AA:
l00007538:
	call Mem264[r6_1083 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_252,r0:r0_244,r1:r1_245,r10:0x44A<32>,r11:Mem264[r6_250 + 160<i32>:word32],r12:Mem264[r6_250 + 376<i32>:word32],r2:r2_246,r3:r3_247,r4:r4_248,r5:sp_243,r6:r6_250,r7:r7_251,r8:r8_265,r9:0x00008938<p32>
		defs: lr:lr_282,r0:r0_274,r1:r1_275,r10:r10_285,r11:r11_283,r2:r2_276,r3:r3_277,r4:r4_278,r5:r5_279,r6:r6_280,r7:r7_281,r9:r9_286
l0000754C:
	word32 r8_291 = Mem264[r4_1057 + -4<i32>:word32]
	branch r8_291 == 0x29<32> l0000756A
l00007556:
	call Mem264[r6_1083 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_306,r0:r0_300,r1:r1_301,r10:0x44B<32>,r11:Mem264[r6_296 + 160<i32>:word32],r12:Mem264[r6_296 + 784<i32>:word32],r2:r2_302,r3:r3_303,r4:r4_289,r5:r5_304,r6:r6_296,r7:r7_305,r8:r8_291,r9:0x00008938<p32>
		defs: lr:lr_317,r0:r0_309,r1:r1_310,r10:r10_320,r11:r11_318,r2:r2_311,r3:r3_312,r4:r4_313,r5:r5_314,r6:r6_315,r7:r7_316,r8:r8_322,r9:r9_321
l0000756A:
	branch r2_246 == 0x21<32> l0000758C
l0000758C:
	word32 r2_328 = r1_1055
l0000771A:
	branch r2_328 <=u r0_1050 l000076B8
l000076B8:
	word32 r5_335 = Mem264[r7_104 + -4<i32>:word32]
l000076C4:
	word32 r8_339 = r3_1053 & 0xFFFFFFFB<u32>
	branch SLICE(r3_1053, bool, 0) == 0<32> l000076D2
l000076CE_1:
	r8_339 = r3_1053
l000076D2:
	word32 r12_345 = r5_335 + 4<32>
	word32 r9_350 = Mem264[r7_104 + -24<i32>:word32]
	branch r5_335 != 0<32> l000076BE
l000076BE:
	word32 r5_377
	word32 r6_1211
	word32 r12_1212
	branch SLICE(fn00007754(r2_328, r3_1053, r8_339, r9_350, r2_328, r1_1055, r12_345, out r0_1050, out r1_1055, out r2_328, out r3_1053, out r4_1057, out r5_377, out r6_1211, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1212, out lr_1043), bool, 1) l00007718
l000076C2:
	r5_335 = Mem264[r5_377:word32]
l000076E2:
l00007742:
	word32 r10_393
	branch Test(NE,SLICE(r3_1053, bool, 0)) l000076E4
l000076E4:
	r10_393 = r3_1053 & 0xFFFFFFFB<u32>
l00007748:
	r10_393 = r3_1053
l000076E8:
	word32 r9_412
	branch r2_328 != r1_1055 l000076F2
l000076F2:
	word32 r9_409
	branch Mem264[r2_328 + -4<i32>:word32] == 0x2F<32> l00007700
l00007700:
	r9_409 = CONVERT((r3_1053 & 5<32>) == 5<32>, bool, word32)
l000076FC:
	r9_409 = 0<32>
l0000770A:
	r9_412 = CONVERT(SLICE(r9_409, byte, 0), byte, word32)
l000076EC:
	r9_412 = Mem264[r7_104 + -24<i32>:word32]
l0000770C:
	word32 r12_1215
	word32 r5_1213
	word32 r6_1214
	branch SLICE(fn00007754(r2_328, r3_1053, r10_393, r9_412, r0_1050, r2_328, r4_1057, out r0_1050, out r1_1055, out r2_328, out r3_1053, out r4_1057, out r5_1213, out r6_1214, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1215, out lr_1043), bool, 1) l0000773A
l00007718:
	r2_328 = r2_328 + 4<32>
l00007720:
l00007570:
	branch r2_246 == 0x2A<32> l00007590
l00007590:
	word32 r12_1200
	word32 r5_1198
	word32 r6_1199
	word32 r2_1196
	word32 r4_1197
	branch SLICE(fn00007754(r2_246, r3_1053, r3_1053, Mem264[r7_104 + -24<i32>:word32], r0_1050, r1_1055, r4_1057, out r0_1050, out r1_1055, out r2_1196, out r3_1053, out r4_1197, out r5_1198, out r6_1199, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1200, out lr_1043), bool, 1) l0000773A
l00007576:
	branch r2_246 == 0x2B<32> l000075A2
l000075A2:
	word32 r5_506 = r1_1055
l0000764C:
	branch r5_506 <=u r0_1050 l000075A6
l000075A6:
	word32 r12_515 = Mem514[r7_104 + -4<i32>:word32]
	word32 r2_516 = SLICE(r3_1053, bool, 0)
	word32 r8_517 = r3_1053 & 0xFFFFFFFB<u32>
	word32 r9_518 = Mem514[r7_104 + -24<i32>:word32]
	branch r2_516 == 0<32> l000075BC
l000075B8_1:
	r8_517 = r3_1053
l000075BC:
	Mem532[r7_104 + -32<i32>:word32] = r9_518
	word32 r2_548
	word32 r4_550
	word32 r12_1207
	word32 r6_1206
	word32 r5_551
	branch SLICE(fn00007754(r2_516, r3_1053, r8_517, r9_518, r5_506, r1_1055, r12_515 + 4<32>, out r0_1050, out r1_1055, out r2_548, out r3_1053, out r4_550, out r5_551, out r6_1206, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1207, out lr_1043), bool, 1) l0000764A
l000075CA:
	branch r2_548 != 0<32> l000075D4
l000075D0_1:
	r10_1086 = r3_1053 & 0xFFFFFFFB<u32>
l000075D4:
	branch r2_548 == 0<32> l000075D8
l000075D4_1:
	r10_1086 = r3_1053
l000075D8:
	branch r5_551 == r1_1055 l000075FA
l000075DC:
	word32 r9_586
	branch Mem532[r5_551 + -4<i32>:word32] == 0x2F<32> l000075EA
l000075EA:
	r9_586 = CONVERT((r3_1053 & 5<32>) == 5<32>, bool, word32)
l000075E6:
	r9_586 = 0<32>
l000075F4:
	Mem594[r7_104 + -32<i32>:word32] = CONVERT(SLICE(r9_586, byte, 0), byte, word32)
l000075FA:
	word32 r2_639
	word32 r6_1209
	word32 r12_1210
	word32 r4_1208
	branch SLICE(fn00007754(r2_548, r3_1053, r10_1086, Mem596[r7_104 + -32<i32>:word32], r0_1050, r5_551, r4_550, out r0_1050, out r1_1055, out r2_639, out r3_1053, out r4_1208, out r5_551, out r6_1209, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1210, out lr_1043), bool, 1) l0000773A
l0000760C:
	branch r5_551 == r1_1055 l0000764A
l00007610:
	word32 r9_656 = Mem596[r5_551 + -4<i32>:word32]
	branch r2_639 != 0<32> l0000761E
l0000761A_1:
	r10_1086 = r3_1053 & 0xFFFFFFFB<u32>
l0000761E:
	branch r2_639 == 0<32> l00007622
l0000761E_1:
	r10_1086 = r3_1053
l00007622:
	word32 r9_673
	branch r9_656 == 0x2F<32> l00007630
l00007630:
	r9_673 = CONVERT((r3_1053 & 5<32>) == 5<32>, bool, word32)
l00007628:
	r9_673 = 0<32>
l0000763A:
	word32 r4_1217
	word32 r6_1218
	word32 r12_1219
	word32 r2_1216
	branch SLICE(fn00007754(r2_639, r3_1053, r10_1086, r9_673, r0_1050, r5_551, Mem596[r7_104 + -20<i32>:word32] - 4<32>, out r0_1050, out r1_1055, out r2_1216, out r3_1053, out r4_1217, out r5_551, out r6_1218, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1219, out lr_1043), bool, 1) l0000773A
l0000764A:
	r5_506 = r5_551 + 4<32>
l00007652:
	word32 r8_737 = Mem514[Mem514[r7_104 + -4<i32>:word32]:word32]
	branch r8_737 == 0<32> l0000773E
l0000765C:
	Mem740[r7_104 + -4<i32>:word32] = r8_737
l0000757C:
	branch r2_246 == 0x3F<32> l00007662
l00007662:
	word32 r5_1202
	word32 r12_1203
	word32 r2_1201
	branch SLICE(fn00007754(r2_246, r3_1053, r3_1053, Mem264[r7_104 + -24<i32>:word32], r0_1050, r1_1055, r4_1057, out r0_1050, out r1_1055, out r2_1201, out r3_1053, out r4_1057, out r5_1202, out r6_1083, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1203, out lr_1043), bool, 1) l0000773A
l00007582:
	branch r2_246 != 0x40<32> l00007722
l00007722:
	call Mem264[r6_1083 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_484,r0:r0_477,r1:r1_327,r10:0x4A5<32>,r11:Mem264[r6_483 + 160<i32>:word32],r12:Mem264[r6_483 + 372<i32>:word32],r2:r2_324,r3:r3_475,r4:r4_480,r5:r5_482,r6:r6_483,r7:r7_472,r8:r8_772,r9:0x00008938<p32>
		defs: lr:lr_782,r10:r10_785,r11:r11_783,r7:r7_781,r9:r9_786
l0000758A:
l00007672:
	word32 r8_791 = r3_1053 & 0xFFFFFFFB<u32>
	Mem795[r7_104 + -32<i32>:word32] = r8_791
	word32 r2_793 = r3_1053
l0000767C:
	word32 r5_807
	word32 r12_798 = Mem797[r7_104 + -4<i32>:word32]
	word32 lr_799 = Mem797[r7_104 + -32<i32>:word32]
	word32 r5_803 = SLICE(r3_1053, bool, 0)
	r5_807 = r5_803
	branch r5_803 != 0<32> l00007692
l0000768E_1:
	r5_807 = lr_799
l00007692:
	branch r5_803 == 0<32> l00007696
l00007692_1:
	r5_807 = r2_793
l00007696:
	word32 r0_851
	word32 r1_852
	word32 r2_853
	word32 r3_854
	word32 r5_856
	word32 r7_858
	word32 r12_861
	call Mem797[r6_1083 + 412<i32>:word32] (retsize: 0;)
		uses: lr:lr_799,r0:r0_819,r1:r1_822,r10:r10_840,r11:r4_800,r12:r12_798 + 4<32>,r2:r2_810,r3:r3_802,r4:r4_800,r5:r5_828,r6:r6_814,r7:r7_796,r8:r8_846,r9:r9_843
		defs: r0:r0_851,r1:r1_852,r12:r12_861,r2:r2_853,r3:r3_854,r5:r5_856,r7:r7_858
	word32 r5_1204
	word32 r12_1205
	branch SLICE(fn00007754(r2_853, r3_854, r5_856, Mem797[r7_858 + -24<i32>:word32], r0_851, r1_852, r12_861, out r0_1050, out r1_1055, out r2_793, out r3_1053, out r4_1057, out r5_1204, out r6_1083, out r7_104, out r9_1089, out r10_1086, out r11_1093, out r12_1205, out lr_1043), bool, 1) l0000773A
l0000773A:
	r12_1152 = 0<32>
l000076A8:
	r8_791 = Mem797[Mem797[r7_104 + -4<i32>:word32]:word32]
	branch r8_791 == 0<32> l0000773E
l0000773E:
	r12_1152 = 1<32>
l000076B2:
	Mem893[r7_104 + -4<i32>:word32] = r8_791
l0000741E:
	Mem897[r7_104 + -16<i32>:word32] = Mem76[r7_104 + -16<i32>:word32] + 1<32>
l000073A6:
	r5_1039 = Mem76[r6_1011 + 132<i32>:word32]
	word32 r8_899 = Mem76[r5_1039:word32]
	branch r8_899 != 0<32> l000073C2
l000073B0:
	byte VNZC_920
	word32 r12_916
	call Mem76[r6_1011 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_241,r0:r0_155,r1:r1_159,r10:r10_904,r11:r11_903,r12:Mem76[r6_151 + 164<i32>:word32],r2:r2_111,r3:r3_164,r4:r4_75,r5:r5_898,r6:r6_151,r7:r7_104,r8:r8_899,r9:r9_77
		defs: lr:lr_914,r0:r0_906,r1:r1_907,r10:r10_917,r11:r11_915,r12:r12_916,r2:r2_908,r3:r3_909,r4:r4_910,r5:r5_911,r6:r6_912,r7:r7_913,sp:sp_905,VNZC:VNZC_920
	bool Z_921 = SLICE(VNZC_920, bool, 1)
	branch Z_921 l000073BC
l000073B8_1:
	r12_916 = 0xFFFFFFFF<32>
l000073BC:
	branch Z_921 l000073C0
l000073BC_1:
	r12_916 = 1<32>
l000073C0:
	Mem929[r5_1039:word32] = r12_916
l000073C2:
	r4_176 = r4_176 + 4<32>
	r9_1089 = Mem934[r4_176:word32]
	branch r9_1089 == 0x21<32> l000073D8
l000073CC:
	branch Mem934[r5_1039:word32] >= 0<32> l000073DA
l000073D2:
	branch r9_1089 != 0x5E<32> l000073DA
l000073D8:
	r4_176 = r4_176 + 4<32>
l000073DA:
	branch Mem934[r4_176:word32] != 0x5D<32> l000073EE
l000073E2:
	r4_176 = r4_176 + 4<32>
l000073EE:
	word32 r8_957 = Mem934[r4_176:word32]
	branch r8_957 != 0x5D<32> l000073E6
l000073E6:
	r4_176 = r4_176 + 4<32>
	branch r8_957 == 0<32> l00007736
l00007736:
	r12_1152 = 0xFFFFFFFF<32>
l0000774C:
	word32 sp_980 = Mem974[r7_104 + -28<i32>:word32]
	word32 r7_983 = Mem974[sp_980 + 0x24<32>:word32]
	word32 r6_984 = Mem974[sp_980 + 0x28<32>:word32]
	word32 r5_985 = Mem974[sp_980 + 0x2C<32>:word32]
	word32 r4_986 = Mem974[sp_980 + 0x30<32>:word32]
	word32 r3_987 = Mem974[sp_980 + 0x34<32>:word32]
	word32 r2_988 = Mem974[sp_980 + 0x38<32>:word32]
	word32 r0_990 = Mem974[sp_980 + 0x40<32>:word32]
	r1Out = Mem974[sp_980 + 0x3C<32>:word32]
	r2Out = r2_988
	r3Out = r3_987
	r4Out = r4_986
	r5Out = r5_985
	r6Out = r6_984
	r7Out = r7_983
	r9Out = r9_1089
	r10Out = r10_1086
	r11Out = r11_1093
	r12Out = r12_1152
	lrOut = lr_1043
	return r0_990
fn00007358_exit:
l000073F6:
l00007534:
	r4_176 = r4_176 + 4<32>


byte fn00007754(word32 r2, word32 r3, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007358
//      fn00007754
//      fn000087C0
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00007754_entry:
l00007754:
	word32 sp_1140 = fp - 0x544<32>
	word32 r6_1006 = 0x0000775C<p32> - Mem29[0x000078B2<p32>:word32]
	word32 r0_102 = r9
	word32 r1_1001 = r8
	word32 r5_1005 = r12
	word32 r4_1004 = r11
l00007D22:
	word32 r12_125
	word32 r12_46 = Mem45[r5_1005:word32]
	branch r12_46 != 0<32> l0000776C
l0000776C:
	lr = r1_1001 & 0x10<32>
	Mem54[sp_1140 + 4<i32>:word32] = lr
	word32 r7_1378 = r12_46
	branch lr == 0<32> l0000777E
l00007778:
	word32 r12_78
	call Mem54[r6_1006 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,r0:r0_58,r1:r1_49,r10:r10_65,r11:r11_64,r12:r12_46,r2:r2_59,r3:r3_60,r4:r4_61,r5:r5_44,r6:r6_57,r7:r12_46,r8:r8_63,r9:r9_62
		defs: lr:lr_75,r0:r0_67,r1:r1_68,r10:r10_80,r11:r11_79,r12:r12_78,r2:r2_69,r3:r3_70,r4:r4_71,r5:r5_72,r6:r6_73,r8:r8_77,r9:r9_76,sp:sp_66
	r7_1378 = r12_78
l0000777E:
	r5_1005 = r5_1005 + 4<32>
	branch r7_1378 == 0x21<32> l00007CC4
l00007788:
	branch r7_1378 == 0x2A<32> l0000784E
l0000784E:
	word32 r8_92 = r1_1001 & 0x20<32>
	Mem95[sp_1140 + 20<i32>:word32] = r8_92
	branch r8_92 == 0<32> l00007878
l00007858:
	branch Mem95[r5_1005:word32] != 0x28<32> l00007878
l00007860:
	word32 r9_100 = Mem95[sp_1140:word32]
	Mem108[sp_1140 - 4<i32>:word32] = r1_1001
	word32 r7_2407
	word32 r2_2406
	r0_102 = fn00007358(r0_102, r1_1001, r2, r3, r4_1004, r5_1005, r6_1006, r7_1378, r0_102, r9_100, r4_1004, r5_1005, r7_1378, lr, out r1_1001, out r2_2406, out r3, out r4_1004, out r5_1005, out r6_1006, out r7_2407, out r9, out r10, out r11, out r12_125, out lr)
	branch r12_125 != 0xFFFFFFFF<32> l00007D50
l00007878:
	lr = Mem133[sp_1140:word32]
	branch r4_1004 == lr l0000788C
l0000787E:
	branch Mem133[r4_1004:word32] != 0x2E<32> l0000788C
l00007886:
	branch r0_102 != 0<32> l00007D40
l0000788C:
	word32 r7_149 = Mem133[r5_1005:word32]
	word32 r2_150 = r5_1005 + 4<i32>
l000078D4:
	word32 r5_154 = CONVERT(r7_149 == 0x3F<32>, bool, word32)
	branch r5_154 != 0<32> l00007892
l000078DE:
	branch r7_149 == 0x2A<32> l00007892
l00007892:
	branch Mem133[r2_150:word32] != 0x28<32> l000078B4
l0000789A:
	branch Test(NE,SLICE(r1_1001, bool, 5)) l000078B4
l000078A0:
	word32 r12_178
	word32 r1_2408
	word32 r3_2410
	word32 r4_2411
	word32 r6_2412
	word32 lr_2413
	word32 r2_2409
	fn000071E8(r0_102, r1_1001, r2_150, r2_150, lr, out r1_2408, out r2_2409, out r3_2410, out r4_2411, out r6_2412, out r9, out r12_178, out lr_2413)
	branch r12_178 == r2_150 l000078B4
l000078B4:
	branch r5_154 == 0<32> l000078D2
l000078B8:
	r9 = Mem133[sp_1140:word32]
	branch r4_1004 == r9 l00007D40
l000078C0:
	branch Mem133[r4_1004:word32] != 0x2F<32> l000078D0
l000078C8:
	branch Test(EQ,SLICE(r1_1001, bool, 0)) l00007D40
l000078D0:
	r4_1004 = r4_1004 + 4<32>
l000078AA:
	r2_150 = r12_178
l000078D2:
	r2_150 = r2_150 + 4<i32>
	r7_149 = Mem133[r2_150:word32]
l000078E4:
	word32 r12_559
	word32 r8_219 = SLICE(r1_1001, bool, 0)
	branch r7_149 != 0<32> l00007912
l00007912:
	word32 r3_223 = SLICE(r8_219, byte, 0)
	word32 r10_224 = Mem133[sp_1140:word32] - r4_1004
	branch r3_223 == 0<32> l00007922
l0000791E_1:
	r11 = 0x2F<32>
l00007922:
	branch r3_223 != 0<32> l00007926
l00007922_1:
	r11 = 0<32>
l00007926:
	word32 r7_293
	word32 r12_297
	byte VNZC_300
	word32 r3_289
	word32 sp_1680
	word32 r4_1684
	word32 r6_1685
	word32 r0_1687
	word32 r1_1688
	word32 r2_1690
	word32 r5_1692
	call Mem133[r6_1006 + 324<i32>:word32] (retsize: 0;)
		uses: lr:lr_134,r0:r0_141,r1:r1_1664,r10:r10_224 >> 2<i32>,r11:r11_271,r12:r4_196,r2:r2_160,r3:r3_223,r4:r4_196,r5:r7_151,r6:r6_238,r7:r7_151,r8:r8_219,r9:r9_261
		defs: r0:r0_286,r1:r1_287,r10:r10_299,r11:r11_298,r12:r12_297,r2:r2_288,r3:r3_289,r4:r4_290,r5:r5_291,r6:r6_292,r7:r7_293,r9:r9_295,sp:sp_285,VNZC:VNZC_300
	word32 r8_301 = Mem133[sp_1680:word32]
	branch SLICE(VNZC_300, bool, 1) l00007932
l0000792E_1:
	r8_301 = r12_297
l00007932:
	Mem306[sp_1680 + 12<i32>:word32] = r8_301
	branch r7_293 == 0x5B<32> l0000795A
l0000793A:
	lr = Mem306[sp_1680 + 20<i32>:word32]
	branch lr == 0<32> l0000798E
l00007940:
	branch r7_293 == 0x40<32> l00007952
l00007946:
	branch r7_293 == 0x2B<32> l00007952
l0000794C:
	branch r7_293 != 0x21<32> l0000798E
l00007952:
	r8_301 = Mem306[r2_1690:word32]
	branch r8_301 != 0x28<32> l0000798E
l0000798E:
	branch r7_293 != 0x2F<32> l000079BE
l000079BE:
	branch r3_289 == 0<32> l000079C6
l000079C2:
	Mem339[sp_1680 + 16<i32>:word32] = r1_1688
l00007994:
	branch r3_289 == 0<32> l000079C6
l000079C6:
	Mem347[sp_1680 + 16<i32>:word32] = r1_1688 & 0xFFFFFFFB<u32>
	r8_301 = r1_1688 & 0xFFFFFFFB<u32>
l000079CC:
	branch r7_293 == 0x5C<32> l000079D6
l000079D6:
	r1_1688 = r1_1688 & 2<32>
	branch (r1_1688 & 2<32>) != 0<32> l000079DE
l000079DC:
	r5_1692 = Mem359[r2_1690:word32]
l000079D2:
	r5_1692 = r7_293
l000079DE:
	lr = Mem359[sp_1680 + 4<i32>:word32]
	branch lr == 0<32> l000079EC
l000079E4:
	word32 r12_432
	call Mem359[r6_1685 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_365,r0:r0_286,r1:r1_387,r10:r10_299,r11:r11_298,r12:r5_368,r2:r2_288,r3:r3_289,r4:r4_290,r5:r5_368,r6:r6_292,r7:r7_293,r8:r8_406,r9:r9_295
		defs: lr:lr_429,r0:r0_421,r1:r1_422,r10:r10_434,r11:r11_433,r12:r12_432,r2:r2_423,r4:r4_425,r6:r6_427,r9:r9_430,sp:sp_420
	r5_1692 = r12_432
l000079EC:
	word32 r7_438 = r0_1687
	word32 r3_1691 = r2_1690 - 4<32>
l00007A1A:
	word32 r8_444 = Mem359[sp_1680 + 12<i32>:word32]
	branch r4_1684 <u r8_444 l000079F4
l000079F4:
	r9 = Mem359[sp_1680 + 4<i32>:word32]
	word32 r12_449 = Mem359[r4_1684:word32]
	branch r9 == 0<32> l00007A00
l000079FC:
	call Mem359[r6_1685 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_459,r0:r0_453,r1:r1_454,r10:r10_461,r11:r11_460,r12:r12_449,r2:r2_455,r3:r3_456,r4:r4_445,r5:r5_457,r6:r6_452,r7:r7_458,r8:r8_444,r9:r9_448
		defs: lr:lr_471,r0:r0_463,r1:r1_464,r10:r10_476,r11:r11_475,r12:r12_474,r2:r2_465,r3:r3_466,r4:r4_467,r5:r5_468,r6:r6_469,r7:r7_470,r9:r9_472,sp:sp_462
l00007A00:
	branch r12_449 != r5_1692 l00007A16
l00007A04:
	word32 r7_2426
	word32 r12_2427
	branch SLICE(fn00007754(r2_1690, r3_1691, Mem359[sp_1680 + 16<i32>:word32], CONVERT(r7_438 != 0<32>, bool, word32), Mem359[sp_1680:word32], r4_1684, r3_1691, out r0_1687, out r1_1688, out r2_1690, out r3_1691, out r4_1684, out r5_1692, out r6_1685, out r7_2426, out r9, out r10, out r11, out r12_2427, out lr), bool, 1) l00007D44
l00007A16:
	r4_1684 = r4_1684 + 4<32>
	r7_438 = 0<32>
l00007A20:
l00007998:
	r9 = Mem306[sp_1680:word32]
	branch r4_2428 >=u r9 l00007D40
l000079A0:
	r4_1684 = r4_2428 + 4<i32>
	r11 = r4_1684
	r4_2428 = r4_1684
	branch Mem306[r4_2428:word32] != 0x2F<32> l00007998
l000079AA:
	word32 r6_2420
	word32 r7_2421
	word32 r5_2419
	word32 r4_2418
	word32 r0_2414
	word32 r3_2417
	word32 r2_2416
	word32 r1_2415
	fn00007754(r2_1690, r3_289, r1_1688, SLICE(r1_1688, bool, 2), r9, r4_1684, r2_1690, out r0_2414, out r1_2415, out r2_2416, out r3_2417, out r4_2418, out r5_2419, out r6_2420, out r7_2421, out r9, out r10, out r11, out r12_559, out lr)
l0000795A:
	branch r3_289 != 0<32> l00007964
l00007960_1:
	r5_1692 = r1_1688 & 0xFFFFFFFB<u32>
l00007964:
	branch r3_289 == 0<32> l00007968
l00007964_1:
	r5_1692 = r1_1688
l00007968:
	word32 r7_576 = r2_1690 - 4<32>
	r9 = r0_1687
l0000797C:
	lr = Mem306[sp_1680 + 12<i32>:word32]
	r11 = r4_1684
	r10 = Mem306[sp_1680:word32]
	branch r4_1684 <u lr l00007970
l00007970:
	word32 r4_605
	word32 r12_612
	word32 r0_2422
	word32 r1_2423
	word32 r6_2424
	word32 r9_2425
	fn00007754(r2_1690, r3_289, r5_1692, r9, r10, r4_1684, r7_576, out r0_2422, out r1_2423, out r2_1690, out r3_289, out r4_605, out r5_1692, out r6_2424, out r7_576, out r9_2425, out r10, out r11, out r12_612, out lr)
	r4_1684 = r4_605 + 4<32>
	r9 = 0<32>
	branch r12_612 == 0<32> l00007D44
l0000798A:
l000078EE:
	r12_125 = r8_219
	branch r8_219 == 0<32> l00007D50
l000078F6:
	word32 r1_623 = r1_1001 & 8<32>
	branch r1_623 == 0<32> l00007902
l00007902:
	call Mem133[r6_1006 + 324<i32>:word32] (retsize: 0;)
		uses: lr:lr_134,r0:r0_141,r1:r1_623,r10:Mem133[sp_94:word32] - r4_196 >> 2<i32>,r11:0x2F<32>,r12:r4_196,r2:r2_160,r3:r3_635,r4:r4_196,r5:r7_151,r6:r6_238,r7:r7_151,r8:r8_219,r9:r9_261
		defs: lr:lr_649,r10:r10_654,r11:r11_653,r12:r12_652,r9:r9_650
l000079B6:
	r12_125 = CONVERT(r12_559 != 0<32>, bool, word32)
l000078FC:
	r12_125 = r7_149
l0000778E:
	branch r7_1378 == 0x2B<32> l00007CC4
l00007796:
	branch r7_1378 == 0x2F<32> l00007CEA
l00007CEA:
	branch (r1_1001 & 5<32>) != 5<32> l00007D06
l00007CF4:
	r9 = Mem54[sp_1140:word32]
	branch r4_1004 == r9 l00007D40
l00007CFA:
	r8 = Mem54[r4_1004:word32]
	branch r8 != 0x2F<32> l00007D40
l00007D02:
	r9 = 1<32>
l0000779E:
	branch r7_1378 == 0x3F<32> l000077BE
l000077BE:
	branch Test(NE,SLICE(r1_1001, bool, 5)) l000077E4
l000077C4:
	branch Mem54[r5_1005:word32] != 0x28<32> l000077E4
l000077CC:
	word32 r9_685 = Mem54[sp_1140:word32]
	Mem691[sp_1140 - 4<i32>:word32] = r1_1001
	word32 r7_2405
	r0_102 = fn00007358(r0_102, r1_1001, r2, r3, r4_1004, r5_1005, r6_1006, r7_1378, r0_102, r9_685, r4_1004, r5_1005, r7_1378, lr, out r1_1001, out r2, out r3, out r4_1004, out r5_1005, out r6_1006, out r7_2405, out r9, out r10, out r11, out r12_125, out lr)
	branch r12_125 != 0xFFFFFFFF<32> l00007D50
l000077E4:
	r9 = Mem712[sp_1140:word32]
	branch r4_1004 == r9 l00007D40
l000077EC:
	r8 = Mem712[r4_1004:word32]
	branch r8 != 0x2F<32> l00007800
l00007800:
	branch r8 != 0x2E<32> l00007D1C
l00007808:
	branch r0_102 == 0<32> l00007D1C
l0000780E:
l000077F4:
	branch Test(NE,SLICE(r1_1001, bool, 0)) l00007D1C
l000077FC:
l000077A4:
	branch r7_1378 == 0x40<32> l00007CC4
l00007CC4:
	branch Test(NE,SLICE(r1_1001, bool, 5)) l00007D06
l00007CCA:
	branch Mem54[r5_1005:word32] != 0x28<32> l00007D06
l00007CD2:
	word32 r9_741 = Mem54[sp_1140:word32]
	Mem750[sp_1140 - 4<i32>:word32] = r1_1001
	r0_102 = fn00007358(r0_102, r1_1001, r2, r3, r4_1004, r5_1005, r6_1006, r7_1378, r0_102, r9_741, r4_1004, r5_1005, r7_1378, lr, out r1_1001, out r2, out r3, out r4_1004, out r5_1005, out r6_1006, out r7_1378, out r9, out r10, out r11, out r12_125, out lr)
	branch r12_125 == 0xFFFFFFFF<32> l00007D06
l00007CE8:
l000077AC:
	branch r7_1378 == 0x5B<32> l00007A22
l00007A22:
	word32 r7_776 = Mem54[r6_1006 + 132<i32>:word32]
	word32 r8_777 = Mem54[r7_776:word32]
	branch r8_777 != 0<32> l00007A3E
l00007A2C:
	byte VNZC_797
	word32 r12_794
	call Mem54[r6_1006 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_112,r0:r0_102,r1:r1_90,r10:r10_781,r11:r11_276,r12:Mem54[r6_111 + 164<i32>:word32],r2:r2_109,r3:r3_110,r4:r4_104,r5:r5_84,r6:r6_111,r7:r7_776,r8:r8_777,r9:r9_264
		defs: r0:r0_783,r1:r1_784,r10:r10_796,r11:r11_795,r12:r12_794,r3:r3_786,r4:r4_787,r5:r5_788,r6:r6_789,r7:r7_790,r9:r9_792,sp:sp_782,VNZC:VNZC_797
	bool Z_798 = SLICE(VNZC_797, bool, 1)
	branch Z_798 l00007A38
l00007A34_1:
	r12_794 = 0xFFFFFFFF<32>
l00007A38:
	branch Z_798 l00007A3C
l00007A38_1:
	r12_794 = 1<32>
l00007A3C:
	Mem806[r7_776:word32] = r12_794
l00007A3E:
	lr = Mem810[sp_1140:word32]
	branch r4_1004 == lr l00007D40
l00007A46:
	word32 r12_817 = Mem810[r4_1004:word32]
	branch r12_817 != 0x2E<32> l00007A54
l00007A54:
	branch r12_817 != 0x2F<32> l00007A62
l00007A5A:
	branch Test(EQ,SLICE(r1_1001, bool, 0)) l00007D40
l00007A4E:
	branch r0_102 == 0<32> l00007A62
l00007A62:
	word32 r8_851
	word32 r9_838 = Mem810[r5_1005:word32]
	branch r9_838 != 0x21<32> l00007A6E
l00007A6E:
	branch Mem810[Mem810[r6_1006 + 132<i32>:word32]:word32] < 0<32> l00007A7C
l00007A7C:
	r8_851 = CONVERT(r9_838 == 0x5E<32>, bool, word32)
l00007A78:
	r8_851 = 0<32>
l00007A6A:
	r8_851 = 1<32>
l00007A82:
	r9 = Mem810[sp_1140 + 4<i32>:word32]
	r2 = SLICE(r8_851, byte, 0)
	word32 r8_861 = r5_1005 + 4<32>
	branch r2 == 0<32> l00007A92
l00007A8E_1:
	r5_1005 = r8_861
l00007A92:
	branch r9 == 0<32> l00007A9A
l00007A96:
	call Mem810[r6_1006 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_811,r0:r0_828,r1:r1_822,r10:r10_908,r11:r11_902,r12:r12_817,r2:r2_859,r3:r3_881,r4:r4_812,r5:r5_887,r6:r6_842,r7:r7_891,r8:r8_861,r9:r9_857
		defs: lr:lr_921,r1:r1_914,r10:r10_926,r11:r11_925,r12:r12_924,r2:r2_915,r3:r3_916,r4:r4_917,r5:r5_918,r6:r6_919,r9:r9_922,sp:sp_912
l00007A9A:
	r8 = r1_1001 ^ 0x20000<32>
	word32 r7_1007 = r12_817
	r5_1005 = r5_1005 + 4<i32>
	word32 r12_1011 = Mem810[r5_1005:word32]
	word32 r0_1000 = SLICE(r8, bool, 1)
l00007AA8:
	Mem942[sp_1140 + 8<i32>:word32] = r0_1000
	branch r0_1000 == 0<32> l00007ACA
l00007AAE:
	branch r12_1011 != 0x5C<32> l00007ACA
l00007ACA:
	branch r12_1011 != 0x5B<32> l00007B94
l00007B94:
	branch r12_1011 == 0<32> l00007D40
l00007AD0:
	r8 = Mem942[r5_1005:word32]
	branch r8 != 0x3A<32> l00007B9A
l00007B9A:
	word32 r9_962 = Mem942[sp_1140 + 4<i32>:word32]
	branch r9_962 == 0<32> l00007BA4
l00007BA0:
	call Mem942[r6_1006 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_988,r0:r0_940,r1:r1_972,r10:r10_998,r11:r11_995,r12:r12_945,r2:r2_975,r3:r3_978,r4:r4_981,r5:r5_954,r6:r6_967,r7:r7_985,r8:r8_989,r9:r9_962
		defs: lr:lr_1008,r0:r0_1000,r1:r1_1001,r10:r10_1013,r11:r11_1012,r12:r12_1011,r2:r2_1002,r3:r3_1003,r4:r4_1004,r5:r5_1005,r6:r6_1006,r7:r7_1007,sp:sp_999
l00007AD8:
	lr = sp_1140 + 0x18<32>
	r3 = r5_1005
	r10 = 0<32>
l00007AE0:
	r3 = r3 + 4<32>
	r9 = Mem1021[r3:word32]
	r11 = r9 - 0x61<32>
	branch r9 != 0x3A<32> l00007B6C
l00007AEE:
	branch Mem1021[r3 + 4<i32>:word32] != 0x5D<32> l00007B6C
l00007B6C:
	r10 = r10 + 1<32>
	branch r9 >u 0x79<32> l00007BA4
l00007B74:
	branch r10 == 0x100<32> l00007D40
l00007B7C:
	Mem1040[lr:word32] = r9
	lr = lr + 4<i32>
l00007AF6:
	lr = sp_1140 + 0x520<32>
	Mem1050[lr + (r10 << 2<8>) + -1288<i32>:word32] = 0<32>
	r10 = sp_1140 + 0x18<32>
	r11 = sp_1140 + 0x41C<32>
l00007B0C:
	r9 = Mem1052[r10:word32]
	branch r9 < 0x20<32> l00007D40
l00007B16:
	branch r9 <= 0x23<32> l00007B48
l00007B1E:
	branch r9 < 0x25<32> l00007D40
l00007B26:
	branch r9 <= 0x3F<32> l00007B48
l00007B2E:
	branch r9 < 0x41<32> l00007D40
l00007B36:
	branch r9 <= 0x5F<32> l00007B48
l00007B42:
	branch r9 >u 0x7E<32> l00007D40
l00007B48:
	branch r10 == sp_1140 + 0x418<32> l00007D40
l00007B52:
	Mem1079[r11:byte] = SLICE(r9, byte, 0)
	r10 = r10 + 4<32>
	r11 = r11 + 1<i32>
	word32 r8_1081 = Mem1079[r10:word32]
	branch r8_1081 != 0<32> l00007B0C
l00007B5C:
	Mem1086[r11:byte] = SLICE(r8_1081, byte, 0)
	word32 r0_1120
	word32 r1_1121
	word32 r2_1122
	word32 r3_1123
	word32 r4_1124
	word32 r6_1126
	word32 r7_1127
	word32 r8_1130
	word32 r12_1131
	byte VNZC_1134
	call Mem1086[r6_1006 + 300<i32>:word32] (retsize: 0;)
		uses: lr:lr_1044,r0:r0_940,r1:r1_972,r10:r10_1075,r11:r11_1080,r12:sp_941 + 0x41C<32>,r2:r2_975,r3:r3_1020,r4:r4_981,r5:r5_954,r6:r6_967,r7:r7_985,r8:r8_1081,r9:r9_1053
		defs: lr:lr_1128,r0:r0_1120,r1:r1_1121,r10:r10_1133,r12:r12_1131,r2:r2_1122,r3:r3_1123,r4:r4_1124,r6:r6_1126,r7:r7_1127,r8:r8_1130,r9:r9_1129,VNZC:VNZC_1134
	r11 = r12_1131
	branch SLICE(VNZC_1134, bool, 1) l00007B80
l00007B80:
	byte VNZC_1155
	call Mem1086[r6_1126 + 308<i32>:word32] (retsize: 0;)
		uses: lr:lr_1128,r0:r0_1120,r1:r1_1121,r10:r10_1133,r11:r12_1131,r12:Mem1086[r4_1124:word32],r2:r2_1122,r3:r3_1123,r4:r4_1124,r5:r3_1123 + 8<32>,r6:r6_1126,r7:r7_1127,r8:r8_1130,r9:r9_1129
		defs: lr:lr_1149,r0:r0_1141,r1:r1_1142,r10:r10_1154,r11:r11_1153,r2:r2_1143,r3:r3_1144,r4:r4_1145,r5:r5_1146,r6:r6_1147,r7:r7_1148,r9:r9_1150,sp:sp_1140,VNZC:VNZC_1155
	branch SLICE(VNZC_1155, bool, 1) l00007C06
l00007B8C:
	r8 = Mem1086[r5_1005:word32]
	r5_1005 = r3 + 0xC<32>
l00007B6A:
l00007AB4:
	r12_1011 = Mem942[r5_1005:word32]
	branch r12_1011 == 0<32> l00007D40
l00007ABC:
	word32 r8_1163 = Mem942[sp_1140 + 4<i32>:word32]
	branch r8_1163 == 0<32> l00007AC6
l00007AC2:
	call Mem942[r6_1006 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_988,r0:r0_940,r1:r1_972,r10:r10_998,r11:r11_995,r12:r12_1160,r2:r2_975,r3:r3_978,r4:r4_981,r5:r5_954,r6:r6_967,r7:r7_985,r8:r8_1163,r9:r9_1166
		defs: lr:lr_1176,r0:r0_1168,r1:r1_1169,r10:r10_1181,r11:r11_1180,r12:r12_1179,r2:r2_1170,r3:r3_1171,r4:r4_1172,r5:r5_1173,r6:r6_1174,r7:r7_1175,sp:sp_1167
l00007AC6:
	r5_1005 = r5_1005 + 4<32>
l00007BA4:
	r9 = Mem1187[r5_1005:word32]
	branch r9 != 0x2D<32> l00007D48
l00007BAE:
	word32 r8_1193 = Mem1187[r5_1005 + 4<i32>:word32]
	branch r8_1193 == 0<32> l00007D48
l00007BB6:
	branch r8_1193 == 0x5D<32> l00007D48
l00007D48:
	branch r12_1011 != r7_1007 l00007BBE
l00007D4E:
l00007BBE:
	r8 = r9
	r5_1005 = r5_1005 + 4<32>
	branch r9 != 0x2D<32> l00007BF4
l00007BC8:
	r9 = Mem1187[r5_1005:word32]
	branch r9 == 0x5D<32> l00007BFA
l00007BD0:
	word32 r8_1221 = r9
	r5_1005 = r5_1005 + 4<32>
	branch r0_1000 == 0<32> l00007BE0
l00007BD8:
	branch r9 != 0x5C<32> l00007BE0
l00007BDE:
	r5_1005 = r5_1005 + 8<32>
	r8_1221 = Mem1187[r5_1005 + 4<32>:word32]
l00007BE0:
	branch r8_1221 == 0<32> l00007D40
l00007BE6:
	branch r12_1011 >u r7_1007 l00007BF2
l00007BEC:
	branch r7_1007 <=u r8_1221 l00007C06
l00007C06:
	r8 = Mem1246[r5_2429:word32]
	branch r8 == 0<32> l00007D40
l00007C10:
	lr = Mem1246[sp_1140 + 8<i32>:word32]
	r5_1005 = r5_2429 + 4<32>
	r10 = r8
	branch lr == 0<32> l00007C2C
l00007C1A:
	branch r8 != 0x5C<32> l00007C2C
l00007C2C:
	branch r8 != 0x5B<32> l00007CB8
l00007C32:
	word32 r8_1264 = Mem1246[r5_1005:word32]
	branch r8_1264 != 0x3A<32> l00007C6A
l00007C6A:
	branch r8_1264 != 0x3D<32> l00007C92
l00007C92:
	branch r8_1264 != 0x2E<32> l00007C06
l00007C98:
	word32 r12_1271 = r5_1005 + 4<32>
l00007C9C:
	r12_1271 = r12_1271 + 4<32>
	word32 r8_1276 = Mem1246[r12_1271:word32]
	branch r8_1276 == 0<32> l00007D40
l00007CA4:
	branch r8_1276 != 0x2E<32> l00007C9C
l00007CAA:
	r8 = Mem1246[r12_1271 + 4<i32>:word32]
	branch r8 != 0x5D<32> l00007C9C
l00007CB2:
	r10 = Mem1246[r12_1271 + 8<i32>:word32]
	r5_1005 = r12_1271 + 0xC<32>
l00007C70:
	r9 = r5_1005 + 4<32>
	branch Mem1246[r5_1005 + 4<i32>:word32] == 0<32> l00007D40
l00007C7A:
	r9 = r5_1005 + 8<32>
	branch Mem1246[r5_1005 + 8<32>:word32] != 0x3D<32> l00007D40
l00007C84:
	r8 = Mem1246[r5_1005 + 0xC<32>:word32]
	branch r8 != 0x5D<32> l00007D40
l00007C8C:
	r10 = Mem1246[r5_1005 + 16<i32>:word32]
	r5_1005 = r5_1005 + 0x14<32>
l00007C3A:
	r9 = r5_1005
l00007C3C:
	r9 = r9 + 4<32>
	r10 = Mem1246[r9:word32]
	branch r9 == r5_2429 + 0x404<32> l00007D40
l00007C48:
	r11 = r10 - 0x61<32>
	branch r10 != 0x3A<32> l00007C5A
l00007C52:
	r8 = Mem1246[r9 + 4<i32>:word32]
	branch r8 == 0x5D<32> l00007C62
l00007C62:
	r10 = Mem1246[r9 + 8<i32>:word32]
	r5_1005 = r9 + 0xC<32>
l00007C5A:
	r5_2429 = r5_1005
	branch r10 >u 0x79<32> l00007C06
l00007C60:
l00007C20:
	r8 = Mem1246[r5_1005:word32]
	branch r8 == 0<32> l00007D40
l00007C28:
	r5_1005 = r5_1005 + 4<32>
l00007CB8:
	branch r10 != 0x5D<32> l00007C06
l00007CBE:
	branch r2 == 0<32> l00007D1C
l00007CC2:
l00007BF2:
	r5_1005 = r5_1005 + 4<i32>
	r8 = Mem1187[r5_1005:word32]
l00007BF4:
	branch r8 == 0x5D<32> l00007BFE
l00007BFE:
	branch r2 != 0<32> l00007D1C
l00007C04:
l00007BFA:
	r12_1011 = r8
l00007A52:
l000077B4:
	branch r7_1378 != 0x5C<32> l00007D06
l00007D06:
	r8 = Mem1363[sp_1140:word32]
	branch r4_1004 == r8 l00007D40
l00007D0C:
	lr = Mem1363[sp_1140 + 4<i32>:word32]
	word32 r12_1369 = Mem1363[r4_1004:word32]
	branch lr == 0<32> l00007D18
l00007D14:
	call Mem1363[r6_1006 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_1368,r0:r0_1373,r1:r1_1374,r10:r10_1383,r11:r11_1381,r12:r12_1369,r2:r2_1375,r3:r3_1376,r4:r4_1365,r5:r5_1377,r6:r6_1372,r7:r7_1378,r8:r8_1364,r9:r9_1379
		defs: lr:lr_1394,r1:r1_1387,r10:r10_1399,r11:r11_1398,r12:r12_1397,r2:r2_1388,r3:r3_1389,r4:r4_1390,r5:r5_1391,r6:r6_1392,r7:r7_1393,r8:r8_1396,r9:r9_1395,sp:sp_1385
l00007D18:
	branch r7_1378 != r12_1369 l00007D40
l000077BC:
l00007812:
	branch Test(EQ,SLICE(r1_1001, bool, 1)) l00007830
l00007818:
	word32 r12_1408 = Mem54[r5_1005:word32]
	branch r12_1408 == 0<32> l00007D40
l00007820:
	r8 = Mem54[sp_1140 + 4<i32>:word32]
	r7_1378 = r12_1408
	branch r8 == 0<32> l0000782E
l00007828:
	word32 r12_1427
	call Mem54[r6_1006 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_112,r0:r0_102,r1:r1_90,r10:r10_781,r11:r11_276,r12:r12_1408,r2:r2_109,r3:r3_110,r4:r4_104,r5:r5_84,r6:r6_111,r7:r12_1408,r8:r8_1411,r9:r9_264
		defs: r0:r0_1416,r1:r1_1417,r10:r10_1429,r11:r11_1428,r12:r12_1427,r2:r2_1418,r3:r3_1419,r4:r4_1420,r5:r5_1421,r6:r6_1422,r8:r8_1426,r9:r9_1425,sp:sp_1415
	r7_1378 = r12_1427
l0000782E:
	r5_1005 = r5_1005 + 4<32>
l00007830:
	lr = Mem54[sp_1140:word32]
	branch r4_1004 == lr l00007D40
l00007838:
	r9 = Mem54[sp_1140 + 4<i32>:word32]
	word32 r12_1445 = Mem54[r4_1004:word32]
	branch r9 == 0<32> l00007844
l00007840:
	call Mem54[r6_1006 + 116<i32>:word32] (retsize: 0;)
		uses: lr:lr_1439,r0:r0_1450,r1:r1_1452,r10:r10_1466,r11:r11_1464,r12:r12_1445,r2:r2_1454,r3:r3_1456,r4:r4_1440,r5:r5_1458,r6:r6_1448,r7:r7_1459,r8:r8_1461,r9:r9_1444
		defs: lr:lr_1477,r1:r1_1470,r10:r10_1482,r11:r11_1481,r12:r12_1480,r2:r2_1471,r3:r3_1472,r4:r4_1473,r5:r5_1474,r6:r6_1475,r7:r7_1476,r8:r8_1479,r9:r9_1478,sp:sp_1468
l00007844:
	branch r12_1445 == r7_1378 l00007D1C
l00007D1C:
	r9 = 0<32>
l00007D1E:
	r4_1004 = r4_1004 + 4<32>
	r0_102 = r9
l0000784A:
l00007D2A:
	r9 = Mem45[sp_1140:word32]
	branch r4_1004 == r9 l00007D44
l00007D44:
	r12_125 = 0<32>
l00007D30:
	branch (r1_1001 & 8<32>) == 0<32> l00007D40
l00007D40:
	r12_125 = 1<32>
l00007D36:
	r12_125 = CONVERT(Mem45[r4_1004:word32] != 0x2F<32>, bool, word32)
l00007D50:
	r0Out = <invalid>
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12_125
	lrOut = lr
	return <invalid>
fn00007754_exit:


word32 fn00007D56(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008144
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00007D56_entry:
l00007D56:
	word32 r6_33 = 0x00007D5E<p32> - Mem29[0x00007EC8<p32>:word32]
	word32 r4_58
	word32 r12_64
	word32 r2_1003
	word32 sp_1010
	word32 r6_1017
	word32 r0_1024
	word32 r1_1031
	word32 r5_1045
	word32 r9_100
	word32 r7_1002
	word32 lr_1049
	word32 r8_101
	word32 r11_1098
	call Mem52[r6_33 + 16<i32>:word32] (retsize: 0;)
		uses: lr:fp - 40<i32>,r0:r9,r1:r10,r10:r10,r11:0<32>,r12:r11,r2:r12,r3:r3,r4:r11,r5:r5,r6:r6_33,r7:fp - 36<i32>,r8:r8,r9:r9,Stack +0008:r8,Stack +000C:r11,Stack +0010:0<32>,Stack +0014:fp - 40<i32>,Stack +001C:0<32>,Stack +0020:lr,Stack +0024:r7,Stack +0028:r6,Stack +002C:r5,Stack +0030:r4,Stack +0034:r3,Stack +0038:r2,Stack +003C:r1,Stack +0040:r0
		defs: lr:lr_62,r0:r0_54,r1:r1_55,r11:r11_63,r12:r12_64,r2:r2_56,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,r8:r8_67,r9:r9_66,sp:sp_53
	word32 r3_1038 = Mem52[r7_1002 + 36<i32>:word32]
	Mem72[r7_1002 + -28<i32>:word32] = sp_1010
	Mem73[r7_1002 + -32<i32>:word32] = r4_58 + 1<32>
	Mem74[r7_1002 + -8<i32>:word32] = r12_64
	word32 r4_181 = r4_58 + 1<32>
l00007D96:
	word32 r12_1157
	word32 r10_1093 = CONVERT(Mem76[r4_181:byte], byte, word32)
	branch r10_1093 == 0<32> l00008124
l00007D9E:
	branch SLICE(r10_1093 - 0x5B<32>, byte, 0) != 0<8> l00007E00
l00007E00:
	branch SLICE(r10_1093 - 0x3F<32>, byte, 0) == 0<8> l00007E28
l00007E08:
	branch SLICE(r10_1093 - 0x2A<32>, byte, 0) == 0<8> l00007E28
l00007E10:
	branch SLICE(r10_1093 - 0x2B<32>, byte, 0) == 0<8> l00007E28
l00007E18:
	branch SLICE(r10_1093 - 0x40<32>, byte, 0) == 0<8> l00007E28
l00007E20:
	branch SLICE(r10_1093 - 0x21<32>, byte, 0) != 0<8> l00007E3E
l00007E28:
	r9_100 = CONVERT(Mem76[r4_181 + 1<i32>:byte], byte, word32)
	r8_101 = 0x28<32>
	branch SLICE(r9_100 - 0x28<32>, byte, 0) != 0<8> l00007E3E
l00007E3E:
	branch SLICE(r10_1093 - 0x29<32>, byte, 0) != 0<8> l00007EAC
l00007EAC:
	r8_101 = 0x7C<32>
	branch SLICE(r10_1093 - 0x7C<32>, byte, 0) != 0<8> l00007F16
l00007EB4:
	r8_101 = Mem76[r7_1002 + -16<i32>:word32]
	branch r8_101 != 0<32> l00007F16
l00007EBC:
	branch r2_1003 >u 0x40<32> || r2_1003 <u 0x3F<32> l00007ED0
l00007ED0:
	lr_1049 = Mem76[r7_1002 + -32<i32>:word32]
	r8_101 = r4_181 + 1<32> - lr_1049
l00007EC6:
	r8_101 = Mem76[r7_1002 + -8<i32>:word32]
l00007EDA:
	branch r8_101 >u 0x1F3B<32> l00008124
l00007EE2:
	word32 r8_134 = r8_101 + 0xA<32>
	word32 r11_138 = Mem76[r7_1002 + -32<i32>:word32]
	word32 r12_187
	call Mem76[r6_1017 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_169,r0:r0_154,r1:r1_158,r10:r4_75 - r11_138,r11:r11_138,r12:sp_141 - (r8_134 & 0xFFFFFFFC<32>) + 4<32>,r2:r2_120,r3:r3_163,r4:r4_75,r5:r5_167,r6:r6_150,r7:r7_113,r8:r8_134 & 0xFFFFFFFC<32>,r9:r9_174
		defs: lr:lr_185,r0:r0_177,r1:r1_178,r11:r11_186,r12:r12_187,r2:r2_179,r3:r3_180,r4:r4_181,r6:r6_183,r7:r7_184,sp:sp_176
	Mem195[r7_1002 + -32<i32>:word32] = r4_181 + 1<32>
	Mem197[r12_187:byte] = 0<8>
	Mem199[sp_1010:word32] = 0<32>
	r8_101 = Mem199[r7_1002 + -12<i32>:word32]
	Mem201[r8_101:word32] = sp_1010
	Mem202[r7_1002 + -12<i32>:word32] = sp_1010
	r5_1045 = sp_1010
	r9_100 = r4_181 + 1<32>
l00007E46:
	word32 r8_203 = Mem76[r7_1002 + -16<i32>:word32]
	Mem205[r7_1002 + -16<i32>:word32] = r8_203 - 1<32>
	r8_101 = r8_203 - 1<32>
	branch r8_203 != 0<32> l00007F16
l00007E54:
	word32 r12_213
	r8_101 = r2_1003 - 0x3F<32>
	branch r8_101 >u 1<32> l00007E64
l00007E64:
	lr_1049 = Mem205[r7_1002 + -32<i32>:word32]
	r8_101 = r4_181 + 1<32>
	r12_213 = r8_101 - lr_1049
l00007E5E:
	r12_213 = Mem205[r7_1002 + -8<i32>:word32]
l00007E70:
	branch r12_213 >u 0x1F3B<32> l00008124
l00007E78:
	word32 r8_219 = r12_213 + 0xA<32>
	word32 r11_223 = Mem205[r7_1002 + -32<i32>:word32]
	word32 sp_238
	word32 r12_249
	word32 r2_241
	word32 r3_1060
	word32 r4_1064
	word32 r6_1090
	word32 r0_1057
	word32 r1_1062
	call Mem205[r6_1017 + 200<i32>:word32] (retsize: 0;)
		uses: lr:lr_236,r0:r0_154,r1:r1_158,r10:r4_75 - r11_223,r11:r11_223,r12:sp_141 - (r8_219 & 0xFFFFFFFC<32>) + 4<32>,r2:r2_120,r3:r3_163,r4:r4_75,r5:r5_167,r6:r6_150,r7:r7_113,r8:r8_219 & 0xFFFFFFFC<32>,r9:r9_174
		defs: lr:lr_247,r0:r0_239,r1:r1_240,r10:r10_250,r11:r11_248,r12:r12_249,r2:r2_241,r3:r3_242,r4:r4_243,r6:r6_245,r7:r7_246,sp:sp_238
	Mem256[r12_249:byte] = 0<8>
	word32 r9_258 = Mem256[r7_1002 + -12<i32>:word32]
	Mem259[sp_238:word32] = 0<32>
	Mem260[r9_258:word32] = sp_238
	word32 r5_254 = sp_238
	word32 r8_261 = Mem260[r7_1002 + -4<i32>:word32]
	branch r8_261 != 0<32> l00007F30
l00007EAA:
l00007F1A:
	call Mem260[r6_1090 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_247,r0:r0_239,r1:r1_240,r10:0x44A<32>,r11:Mem260[r6_245 + 160<i32>:word32],r12:Mem260[r6_245 + 376<i32>:word32],r2:r2_241,r3:r3_242,r4:r4_243,r5:sp_238,r6:r6_245,r7:r7_246,r8:r8_261,r9:0x00008944<p32>
		defs: lr:lr_279,r0:r0_271,r1:r1_272,r10:r10_282,r11:r11_280,r2:r2_273,r3:r3_274,r4:r4_275,r5:r5_276,r6:r6_277,r7:r7_278
l00007F30:
	r9_100 = CONVERT(Mem260[r4_1064 + -1<i32>:byte], byte, word32)
	r8_101 = 0x29<32>
	branch SLICE(r9_100 - 0x29<32>, byte, 0) == 0<8> l00007F52
l00007F3C:
	call Mem260[r6_1090 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_305,r0:r0_299,r1:r1_300,r10:0x44B<32>,r11:Mem260[r6_293 + 160<i32>:word32],r12:Mem260[r6_293 + 780<i32>:word32],r2:r2_301,r3:r3_302,r4:r4_286,r5:r5_303,r6:r6_293,r7:r7_304,r8:0x29<32>,r9:0x00008944<p32>
		defs: lr:lr_316,r0:r0_308,r1:r1_309,r10:r10_319,r11:r11_317,r2:r2_310,r3:r3_311,r4:r4_312,r5:r5_313,r6:r6_314,r7:r7_315,r8:r8_321,r9:r9_320
l00007F52:
	branch r2_241 == 0x21<32> l00007F74
l00007F74:
	word32 r2_327 = r1_1062
l00008106:
	branch r2_327 <=u r0_1057 l000080A2
l000080A2:
	word32 r5_334 = Mem260[r7_1002 + -4<i32>:word32]
l000080AE:
	word32 r8_338 = r3_1060 & 0xFFFFFFFB<u32>
	branch SLICE(r3_1060, bool, 0) == 0<32> l000080BC
l000080B8_1:
	r8_338 = r3_1060
l000080BC:
	word32 r12_344 = r5_334 + 4<32>
	word32 r9_349 = Mem260[r7_1002 + -24<i32>:word32]
	branch r5_334 != 0<32> l000080A8
l000080A8:
	word32 r5_376
	word32 r12_1214
	word32 r6_1213
	branch SLICE(fn00008144(r2_327, r8_338, r9_349, r2_327, r1_1062, r12_344, out r0_1057, out r1_1062, out r2_327, out r3_1060, out r4_1064, out r5_376, out r6_1213, out r7_1002, out r8_101, out r9_100, out r10_1093, out r11_1098, out r12_1214, out lr_1049), bool, 1) l00008104
l000080AC:
	r5_334 = Mem260[r5_376:word32]
l000080CC:
l00008130:
	word32 r10_392
	branch Test(NE,SLICE(r3_1060, bool, 0)) l000080CE
l000080CE:
	r10_392 = r3_1060 & 0xFFFFFFFB<u32>
l00008136:
	r10_392 = r3_1060
l000080D2:
	word32 r9_412
	branch r2_327 != r1_1062 l000080DC
l000080DC:
	word32 r9_409
	branch SLICE(CONVERT(Mem260[r2_327 + -1<i32>:byte], byte, word32) - 0x2F<32>, byte, 0) == 0<8> l000080EC
l000080EC:
	r9_409 = CONVERT((r3_1060 & 5<32>) == 5<32>, bool, word32)
l000080E8:
	r9_409 = 0<32>
l000080F6:
	r9_412 = CONVERT(SLICE(r9_409, byte, 0), byte, word32)
l000080D6:
	r9_412 = Mem260[r7_1002 + -24<i32>:word32]
l000080F8:
	word32 r12_1220
	word32 r5_1218
	word32 r6_1219
	branch SLICE(fn00008144(r2_327, r10_392, r9_412, r0_1057, r2_327, r4_1064, out r0_1057, out r1_1062, out r2_327, out r3_1060, out r4_1064, out r5_1218, out r6_1219, out r7_1002, out r8_101, out r9_100, out r10_1093, out r11_1098, out r12_1220, out lr_1049), bool, 1) l00008128
l00008104:
	r2_327 = r2_327 + 1<32>
l0000810C:
l00007F58:
	branch r2_241 == 0x2A<32> l00007F78
l00007F78:
	word32 r6_1203
	word32 r12_1204
	word32 r4_1201
	word32 r5_1202
	word32 r2_1200
	branch SLICE(fn00008144(r2_241, r3_1060, Mem260[r7_1002 + -24<i32>:word32], r0_1057, r1_1062, r4_1064, out r0_1057, out r1_1062, out r2_1200, out r3_1060, out r4_1201, out r5_1202, out r6_1203, out r7_1002, out r8_101, out r9_100, out r10_1093, out r11_1098, out r12_1204, out lr_1049), bool, 1) l00008128
l00007F5E:
	branch r2_241 == 0x2B<32> l00007F8A
l00007F8A:
	word32 r5_506 = r1_1062
l00008034:
	branch r5_506 <=u r0_1057 l00007F8E
l00007F8E:
	word32 r12_515 = Mem514[r7_1002 + -4<i32>:word32]
	word32 r2_516 = SLICE(r3_1060, bool, 0)
	word32 r8_517 = r3_1060 & 0xFFFFFFFB<u32>
	word32 r9_518 = Mem514[r7_1002 + -24<i32>:word32]
	branch r2_516 == 0<32> l00007FA4
l00007FA0_1:
	r8_517 = r3_1060
l00007FA4:
	Mem532[r7_1002 + -32<i32>:word32] = r9_518
	word32 r2_548
	word32 r4_550
	word32 r8_1211
	word32 r12_1212
	word32 r6_1210
	word32 r5_551
	branch SLICE(fn00008144(r2_516, r8_517, r9_518, r5_506, r1_1062, r12_515 + 4<32>, out r0_1057, out r1_1062, out r2_548, out r3_1060, out r4_550, out r5_551, out r6_1210, out r7_1002, out r8_1211, out r9_100, out r10_1093, out r11_1098, out r12_1212, out lr_1049), bool, 1) l00008032
l00007FB2:
	branch r2_548 != 0<32> l00007FBC
l00007FB8_1:
	r10_1093 = r3_1060 & 0xFFFFFFFB<u32>
l00007FBC:
	branch r2_548 == 0<32> l00007FC0
l00007FBC_1:
	r10_1093 = r3_1060
l00007FC0:
	branch r5_551 == r1_1062 l00007FE4
l00007FC4:
	word32 r9_587
	branch SLICE(CONVERT(Mem532[r5_551 + -1<i32>:byte], byte, word32) - 0x2F<32>, byte, 0) == 0<8> l00007FD4
l00007FD4:
	r9_587 = CONVERT((r3_1060 & 5<32>) == 5<32>, bool, word32)
l00007FD0:
	r9_587 = 0<32>
l00007FDE:
	Mem595[r7_1002 + -32<i32>:word32] = CONVERT(SLICE(r9_587, byte, 0), byte, word32)
l00007FE4:
	word32 r2_640
	word32 r12_1217
	word32 r4_1215
	word32 r6_1216
	branch SLICE(fn00008144(r2_548, r10_1093, Mem597[r7_1002 + -32<i32>:word32], r0_1057, r5_551, r4_550, out r0_1057, out r1_1062, out r2_640, out r3_1060, out r4_1215, out r5_551, out r6_1216, out r7_1002, out r8_101, out r9_100, out r10_1093, out r11_1098, out r12_1217, out lr_1049), bool, 1) l00008128
l00007FF6:
	branch r5_551 == r1_1062 l00008032
l00007FFA:
	word32 r8_657 = CONVERT(Mem597[r5_551 + -1<i32>:byte], byte, word32)
	branch r2_640 != 0<32> l00008008
l00008004_1:
	r10_1093 = r3_1060 & 0xFFFFFFFB<u32>
l00008008:
	branch r2_640 == 0<32> l0000800C
l00008008_1:
	r10_1093 = r3_1060
l0000800C:
	word32 r9_675
	branch SLICE(r8_657 - 0x2F<32>, byte, 0) == 0<8> l00008018
l00008018:
	r9_675 = CONVERT((r3_1060 & 5<32>) == 5<32>, bool, word32)
l00008014:
	r9_675 = 0<32>
l00008022:
	word32 r12_1224
	word32 r6_1223
	word32 r2_1221
	word32 r4_1222
	branch SLICE(fn00008144(r2_640, r10_1093, r9_675, r0_1057, r5_551, Mem597[r7_1002 + -20<i32>:word32] - 1<32>, out r0_1057, out r1_1062, out r2_1221, out r3_1060, out r4_1222, out r5_551, out r6_1223, out r7_1002, out r8_101, out r9_100, out r10_1093, out r11_1098, out r12_1224, out lr_1049), bool, 1) l00008128
l00008032:
	r5_506 = r5_551 + 1<32>
l0000803A:
	r8_101 = Mem514[Mem514[r7_1002 + -4<i32>:word32]:word32]
	branch r8_101 == 0<32> l0000812C
l00008044:
	Mem742[r7_1002 + -4<i32>:word32] = r8_101
l00007F64:
	branch r2_241 == 0x3F<32> l0000804C
l0000804C:
	word32 r12_1207
	word32 r2_1205
	word32 r5_1206
	branch SLICE(fn00008144(r2_241, r3_1060, Mem260[r7_1002 + -24<i32>:word32], r0_1057, r1_1062, r4_1064, out r0_1057, out r1_1062, out r2_1205, out r3_1060, out r4_1064, out r5_1206, out r6_1090, out r7_1002, out r8_101, out r9_100, out r10_1093, out r11_1098, out r12_1207, out lr_1049), bool, 1) l00008128
l00007F6A:
	branch r2_241 != 0x40<32> l0000810E
l0000810E:
	call Mem260[r6_1090 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_484,r0:r0_477,r1:r1_326,r10:0x4A5<32>,r11:Mem260[r6_483 + 160<i32>:word32],r12:Mem260[r6_483 + 372<i32>:word32],r2:r2_323,r3:r3_475,r4:r4_480,r5:r5_482,r6:r6_483,r7:r7_472,r8:r8_775,r9:0x00008944<p32>
		defs: lr:lr_785,r10:r10_788,r11:r11_786,r7:r7_784,r8:r8_790,r9:r9_789
l00007F72:
l0000805C:
	lr_1049 = r3_1060 & 0xFFFFFFFB<u32>
	Mem798[r7_1002 + -32<i32>:word32] = lr_1049
	word32 r2_796 = r3_1060
l00008066:
	word32 r5_810
	word32 r12_801 = Mem800[r7_1002 + -4<i32>:word32]
	word32 r9_802 = Mem800[r7_1002 + -32<i32>:word32]
	word32 r5_806 = SLICE(r3_1060, bool, 0)
	r5_810 = r5_806
	branch r5_806 != 0<32> l0000807C
l00008078_1:
	r5_810 = r9_802
l0000807C:
	branch r5_806 == 0<32> l00008080
l0000807C_1:
	r5_810 = r2_796
l00008080:
	word32 r0_854
	word32 r1_855
	word32 r2_856
	word32 r5_859
	word32 r7_861
	word32 r12_864
	call Mem800[r6_1090 + 512<i32>:word32] (retsize: 0;)
		uses: lr:lr_837,r0:r0_822,r1:r1_825,r10:r10_844,r11:r4_803,r12:r12_801 + 4<32>,r2:r2_813,r3:r3_805,r4:r4_803,r5:r5_831,r6:r6_817,r7:r7_799,r8:r8_849,r9:r9_802
		defs: r0:r0_854,r1:r1_855,r12:r12_864,r2:r2_856,r5:r5_859,r7:r7_861
	word32 r12_1209
	word32 r5_1208
	branch SLICE(fn00008144(r2_856, r5_859, Mem800[r7_861 + -24<i32>:word32], r0_854, r1_855, r12_864, out r0_1057, out r1_1062, out r2_796, out r3_1060, out r4_1064, out r5_1208, out r6_1090, out r7_1002, out r8_101, out r9_100, out r10_1093, out r11_1098, out r12_1209, out lr_1049), bool, 1) l00008128
l00008128:
	r12_1157 = 0<32>
l00008092:
	r8_101 = Mem800[Mem800[r7_1002 + -4<i32>:word32]:word32]
	branch r8_101 == 0<32> l0000812C
l0000812C:
	r12_1157 = 1<32>
l0000809C:
	Mem896[r7_1002 + -4<i32>:word32] = r8_101
l00007E32:
	word32 r9_897 = Mem76[r7_1002 + -16<i32>:word32]
	Mem900[r7_1002 + -16<i32>:word32] = r9_897 + 1<32>
	r9_100 = r9_897 + 1<32>
l00007DA6:
	r5_1045 = Mem76[r6_1017 + 132<i32>:word32]
	word32 r8_902 = Mem76[r5_1045:word32]
	branch r8_902 != 0<32> l00007DC2
l00007DB0:
	byte VNZC_922
	word32 r12_918
	call Mem76[r6_1017 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_171,r0:r0_154,r1:r1_158,r10:r10_77,r11:r11_906,r12:Mem76[r6_150 + 164<i32>:word32],r2:r2_120,r3:r3_163,r4:r4_75,r5:r5_901,r6:r6_150,r7:r7_113,r8:r8_902,r9:r9_175
		defs: lr:lr_916,r0:r0_908,r1:r1_909,r10:r10_919,r11:r11_917,r12:r12_918,r2:r2_910,r3:r3_911,r4:r4_912,r5:r5_913,r6:r6_914,r7:r7_915,sp:sp_907,VNZC:VNZC_922
	bool Z_923 = SLICE(VNZC_922, bool, 1)
	branch Z_923 l00007DBC
l00007DB8_1:
	r12_918 = 0xFFFFFFFF<32>
l00007DBC:
	branch Z_923 l00007DC0
l00007DBC_1:
	r12_918 = 1<32>
l00007DC0:
	Mem931[r5_1045:word32] = r12_918
l00007DC2:
	r4_181 = r4_181 + 1<32>
	word32 r9_937 = CONVERT(Mem936[r4_181:byte], byte, word32)
	branch SLICE(r9_937 - 0x21<32>, byte, 0) == 0<8> l00007DDC
l00007DCE:
	branch Mem936[r5_1045:word32] >= 0<32> l00007DDE
l00007DD4:
	branch SLICE(r9_937 - 0x5E<32>, byte, 0) != 0<8> l00007DDE
l00007DDC:
	r4_181 = r4_181 + 1<32>
l00007DDE:
	branch SLICE(CONVERT(Mem936[r4_181:byte], byte, word32) - 0x5D<32>, byte, 0) != 0<8> l00007DF4
l00007DE8:
	r4_181 = r4_181 + 1<32>
l00007DF4:
	r9_100 = CONVERT(Mem936[r4_181:byte], byte, word32)
	r8_101 = 0x5D<32>
	branch SLICE(r9_100 - 0x5D<32>, byte, 0) != 0<8> l00007DEC
l00007DEC:
	r4_181 = r4_181 + 1<32>
	branch r9_100 == 0<32> l00008124
l00008124:
	r12_1157 = 0xFFFFFFFF<32>
l0000813A:
	word32 sp_986 = Mem980[r7_1002 + -28<i32>:word32]
	word32 r7_989 = Mem980[sp_986 + 0x24<32>:word32]
	word32 r6_990 = Mem980[sp_986 + 0x28<32>:word32]
	word32 r5_991 = Mem980[sp_986 + 0x2C<32>:word32]
	word32 r4_992 = Mem980[sp_986 + 0x30<32>:word32]
	word32 r3_993 = Mem980[sp_986 + 0x34<32>:word32]
	word32 r2_994 = Mem980[sp_986 + 0x38<32>:word32]
	word32 r0_996 = Mem980[sp_986 + 0x40<32>:word32]
	r1Out = Mem980[sp_986 + 0x3C<32>:word32]
	r2Out = r2_994
	r3Out = r3_993
	r4Out = r4_992
	r5Out = r5_991
	r6Out = r6_990
	r7Out = r7_989
	r8Out = r8_101
	r9Out = r9_100
	r10Out = r10_1093
	r11Out = r11_1098
	r12Out = r12_1157
	lrOut = lr_1049
	return r0_996
fn00007D56_exit:
l00007DFE:
l00007F16:
	r4_181 = r4_181 + 1<32>


byte fn00008144(word32 r2, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00007D56
//      fn00008144
//      fn000087C0
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00008144_entry:
l00008144:
	word32 sp_1092 = fp - 0x140<32>
	word32 r6_106 = 0x0000814C<p32> - Mem29[0x000082AA<p32>:word32]
	word32 r0_100 = r9
	word32 r1_101 = r8
	word32 r5_1002 = r12
	word32 r4_104 = r11
l00008788:
	word32 r12_111
	word32 r8_1025
	word32 r7_1245 = CONVERT(Mem45[r5_1002:byte], byte, word32)
	branch r7_1245 != 0<32> l0000815C
l0000815C:
	lr = r1_101 & 0x10<32>
	Mem54[sp_1092 + 8<i32>:word32] = lr
	branch lr == 0<32> l00008172
l00008166:
	r7_1245 = SLICE(CONVERT(Mem54[Mem54[Mem54[r6_106 + -32<i32>:word32]:word32] + r7_1245 * 2<32>:int16], int16, int32), byte, 0)
l00008172:
	r5_1002 = r5_1002 + 1<32>
	branch SLICE(r7_1245 - 0x21<32>, byte, 0) == 0<8> l00008720
l0000817E:
	branch SLICE(r7_1245 - 0x2A<32>, byte, 0) == 0<8> l0000825E
l0000825E:
	word32 r8_73 = r1_101 & 0x20<32>
	Mem76[sp_1092 + 20<i32>:word32] = r8_73
	branch r8_73 == 0<32> l0000828A
l00008268:
	r9 = CONVERT(Mem76[r5_1002:byte], byte, word32)
	branch SLICE(r9 - 0x28<32>, byte, 0) != 0<8> l0000828A
l00008272:
	word32 r9_82 = Mem76[sp_1092 + 4<i32>:word32]
	Mem92[sp_1092 - 4<i32>:word32] = r1_101
	word32 r3_2291
	word32 r7_2292
	r0_100 = fn00007D56(r0_100, r1_101, r2, r3, r4_104, r5_1002, r6_106, r7_1245, r0_100, r9_82, r4_104, r5_1002, r7_1245, lr, out r1_101, out r2, out r3_2291, out r4_104, out r5_1002, out r6_106, out r7_2292, out r8_1025, out r9, out r10, out r11, out r12_111, out lr)
	branch r12_111 != 0xFFFFFFFF<32> l000087BA
l0000828A:
	lr = Mem119[sp_1092 + 4<i32>:word32]
	branch r4_104 == lr l000082A0
l00008290:
	r9 = CONVERT(Mem119[r4_104:byte], byte, word32)
	r8_1025 = 0x2E<32>
	branch SLICE(r9 - 0x2E<32>, byte, 0) != 0<8> l000082A0
l0000829A:
	branch r0_100 != 0<32> l000087A8
l000082A0:
	word32 r7_136 = CONVERT(Mem119[r5_1002:byte], byte, word32)
	word32 r3_137 = r5_1002 + 1<i32>
l000082EC:
	word32 r5_142 = CONVERT(SLICE(r7_136 - 0x3F<32>, byte, 0) == 0<8>, bool, word32)
	branch r5_142 != 0<32> l000082AC
l000082F8:
	branch SLICE(r7_136 - 0x2A<32>, byte, 0) == 0<8> l000082AC
l000082AC:
	r9 = CONVERT(Mem119[r3_137:byte], byte, word32)
	branch SLICE(r9 - 0x28<32>, byte, 0) != 0<8> l000082CA
l000082B6:
	branch Test(NE,SLICE(r1_101, bool, 5)) l000082CA
l000082BC:
	word32 r12_171
	word32 r2_2294
	word32 r3_2295
	word32 r4_2296
	word32 r6_2297
	word32 lr_2298
	word32 r1_2293
	fn00007294(r0_100, r1_101, r2, r3_137, lr, out r1_2293, out r2_2294, out r3_2295, out r4_2296, out r6_2297, out r9, out r10, out r12_171, out lr_2298)
	branch r12_171 == r3_137 l000082CA
l000082CA:
	branch r5_142 == 0<32> l000082EA
l000082CE:
	r8_1025 = Mem119[sp_1092 + 4<i32>:word32]
	branch r4_104 == r8_1025 l000087A8
l000082D6:
	r9 = CONVERT(Mem119[r4_104:byte], byte, word32)
	r8_1025 = 0x2F<32>
	branch SLICE(r9 - 0x2F<32>, byte, 0) != 0<8> l000082E8
l000082E0:
	branch Test(EQ,SLICE(r1_101, bool, 0)) l000087A8
l000082E8:
	r4_104 = r4_104 + 1<32>
l000082C6:
	r3_137 = r12_171
l000082EA:
	r3_137 = r3_137 + 1<i32>
	r7_136 = CONVERT(Mem119[r3_137:byte], byte, word32)
l00008300:
	word32 r12_505
	r8_1025 = SLICE(r1_101, bool, 0)
	branch r7_136 != 0<32> l0000832C
l0000832C:
	word32 r2_217 = SLICE(r8_1025, byte, 0)
	word32 r10_218 = Mem119[sp_1092 + 4<i32>:word32] - r4_104
	branch r2_217 == 0<32> l0000833A
l00008336_1:
	r11 = 0x2F<32>
l0000833A:
	branch r2_217 != 0<32> l0000833E
l0000833A_1:
	r11 = 0<32>
l0000833E:
	word32 sp_279
	word32 r0_280
	word32 r1_281
	word32 r3_283
	word32 r7_287
	word32 r12_291
	byte VNZC_294
	word32 r4_284
	word32 r2_282
	word32 r6_1518
	word32 r5_1519
	call Mem119[r6_106 + 316<i32>:word32] (retsize: 0;)
		uses: lr:lr_120,r0:r0_128,r1:r1_1475,r10:r10_218,r11:r11_264,r12:r4_189,r2:r2_217,r3:r3_149,r4:r4_189,r5:r7_139,r6:r6_231,r7:r7_139,r8:r8_213,r9:r9_254
		defs: r0:r0_280,r1:r1_281,r10:r10_293,r11:r11_292,r12:r12_291,r2:r2_282,r3:r3_283,r4:r4_284,r5:r5_285,r6:r6_286,r7:r7_287,r9:r9_289,sp:sp_279,VNZC:VNZC_294
	lr = Mem119[sp_279 + 4<i32>:word32]
	branch SLICE(VNZC_294, bool, 1) l0000834C
l00008348_1:
	lr = r12_291
l0000834C:
	Mem301[sp_279 + 16<i32>:word32] = lr
	branch SLICE(r7_287 - 0x5B<32>, byte, 0) == 0<8> l0000837C
l00008354:
	branch Mem301[sp_279 + 20<i32>:word32] == 0<32> l000083B0
l0000835A:
	branch SLICE(r7_287 - 0x40<32>, byte, 0) == 0<8> l00008372
l00008362:
	branch SLICE(r7_287 - 0x2B<32>, byte, 0) == 0<8> l00008372
l0000836A:
	branch SLICE(r7_287 - 0x21<32>, byte, 0) != 0<8> l000083B0
l00008372:
	r9 = CONVERT(Mem301[r3_283:byte], byte, word32)
	branch SLICE(r9 - 0x28<32>, byte, 0) != 0<8> l000083B0
l000083B0:
	word32 r2_1523
	branch SLICE(r7_287 - 0x2F<32>, byte, 0) != 0<8> l000083E4
l000083E4:
	branch r2_282 == 0<32> l000083EC
l000083E8:
	r2_1523 = r1_281
l000083B8:
	branch r2_282 == 0<32> l000083EC
l000083EC:
	r2_1523 = r1_281 & 0xFFFFFFFB<u32>
l000083F0:
	r8_1025 = 0x5C<32>
	branch SLICE(r7_287 - 0x5C<32>, byte, 0) == 0<8> l000083FC
l000083FC:
	branch (r1_281 & 2<32>) != 0<32> l00008404
l00008402:
	r5_1519 = CONVERT(Mem301[r3_283:byte], byte, word32)
l000083F8:
	r5_1519 = r7_287
l00008404:
	branch Mem301[sp_279 + 8<i32>:word32] == 0<32> l00008416
l0000840A:
	r8_1025 = CONVERT(Mem301[Mem301[Mem301[r6_1518 + -32<i32>:word32]:word32] + r5_1519 * 2<32>:int16], int16, int32)
	r5_1519 = SLICE(r8_1025, byte, 0)
l00008416:
	r9 = r0_280
	word32 r7_1525 = r3_283 - 1<32>
l0000844C:
	lr = Mem301[sp_279 + 16<i32>:word32]
	branch r4_284 <u lr l0000841E
l0000841E:
	r10 = CONVERT(Mem301[r4_284:byte], byte, word32)
	branch Mem301[sp_279 + 8<i32>:word32] == 0<32> l00008430
l00008430:
	r8_1025 = r10
l00008426:
	r8_1025 = CONVERT(Mem301[Mem301[Mem301[r6_1518 + -32<i32>:word32]:word32] + r10 * 2<32>:int16], int16, int32)
l00008432:
	branch r8_1025 != r5_1519 l00008448
l00008436:
	word32 r0_445
	word32 r1_446
	word32 r3_448
	word32 r12_2308
	branch SLICE(fn00008144(r2_1523, r2_1523, CONVERT(r9 != 0<32>, bool, word32), Mem301[sp_279 + 4<i32>:word32], r4_284, r7_1525, out r0_445, out r1_446, out r2_1523, out r3_448, out r4_284, out r5_1519, out r6_1518, out r7_1525, out r8_1025, out r9, out r10, out r11, out r12_2308, out lr), bool, 1) l000087AC
l00008448:
	r4_284 = r4_284 + 1<32>
	r9 = 0<32>
l00008452:
l000083BC:
	r8_1025 = Mem301[sp_279 + 4<i32>:word32]
	branch r4_284 >=u r8_1025 l000087A8
l000083C4:
	r4_284 = r4_284 + 1<i32>
	r9 = CONVERT(Mem301[r4_284:byte], byte, word32)
	r11 = r4_284
	branch SLICE(r9 - 0x2F<32>, byte, 0) != 0<8> l000083BC
l000083D0:
	word32 r5_2304
	word32 r6_2305
	word32 r7_2306
	word32 r4_2303
	word32 r3_2302
	word32 r2_2301
	word32 r1_2300
	word32 r0_2299
	fn00008144(r2_282, r1_281, SLICE(r1_281, bool, 2), Mem301[sp_279 + 4<i32>:word32], r4_284, r3_283, out r0_2299, out r1_2300, out r2_2301, out r3_2302, out r4_2303, out r5_2304, out r6_2305, out r7_2306, out r8_1025, out r9, out r10, out r11, out r12_505, out lr)
l0000837C:
	branch r2_282 != 0<32> l00008386
l00008382_1:
	r5_1519 = r1_281 & 0xFFFFFFFB<u32>
l00008386:
	branch r2_282 == 0<32> l0000838A
l00008386_1:
	r5_1519 = r1_281
l0000838A:
	word32 r7_522 = r3_283 - 1<32>
	r9 = r0_280
l0000839E:
	lr = Mem301[sp_279 + 16<i32>:word32]
	r11 = r4_284
	r8_1025 = r5_1519
	r10 = Mem301[sp_279 + 4<i32>:word32]
	branch r4_284 <u lr l00008392
l00008392:
	word32 r0_547
	word32 r1_548
	word32 r3_550
	word32 r4_551
	word32 r6_553
	word32 r12_558
	word32 r9_2307
	fn00008144(r2_282, r5_1519, r9, r10, r4_284, r7_522, out r0_547, out r1_548, out r2_282, out r3_550, out r4_551, out r5_1519, out r6_553, out r7_522, out r8_1025, out r9_2307, out r10, out r11, out r12_558, out lr)
	r4_284 = r4_551 + 1<32>
	r9 = 0<32>
	branch r12_558 == 0<32> l000087AC
l000083AC:
l0000830A:
	r12_111 = r8_1025
	branch r8_1025 == 0<32> l000087BA
l00008312:
	word32 r1_569 = r1_101 & 8<32>
	branch r1_569 == 0<32> l0000831E
l0000831E:
	call Mem119[r6_106 + 316<i32>:word32] (retsize: 0;)
		uses: lr:lr_120,r0:r0_128,r1:r1_569,r10:Mem119[sp_53 + 4<i32>:word32] - r4_189,r11:0x2F<32>,r12:r4_189,r2:r2_1483,r3:r3_149,r4:r4_189,r5:r7_139,r6:r6_231,r7:r7_139,r8:r8_213,r9:r9_254
		defs: lr:lr_586,r10:r10_591,r11:r11_590,r12:r12_589,r8:r8_588,r9:r9_587
l000083DC:
	r12_111 = CONVERT(r12_505 != 0<32>, bool, word32)
l00008318:
	r12_111 = r7_136
l00008186:
	branch SLICE(r7_1245 - 0x2B<32>, byte, 0) == 0<8> l00008720
l00008190:
	r3 = 0x2F<32>
	branch SLICE(r7_1245 - 0x2F<32>, byte, 0) == 0<8> l00008748
l00008748:
	r8_1025 = r1_101 & 5<32>
	branch r8_1025 != 5<32> l00008764
l00008752:
	lr = Mem54[sp_1092 + 4<i32>:word32]
	branch r4_104 == lr l000087A8
l00008758:
	r8_1025 = CONVERT(Mem54[r4_104:byte], byte, word32)
	branch SLICE(r8_1025 - 0x2F<32>, byte, 0) != 0<8> l000087A8
l00008760:
	r9 = 1<32>
l0000819A:
	branch SLICE(r7_1245 - 0x3F<32>, byte, 0) == 0<8> l000081C2
l000081C2:
	branch Test(NE,SLICE(r1_101, bool, 5)) l000081EA
l000081C8:
	r9 = CONVERT(Mem54[r5_1002:byte], byte, word32)
	branch SLICE(r9 - 0x28<32>, byte, 0) != 0<8> l000081EA
l000081D2:
	word32 r9_626 = Mem54[sp_1092 + 4<i32>:word32]
	Mem632[sp_1092 - 4<i32>:word32] = r1_101
	word32 r7_2290
	r0_100 = fn00007D56(r0_100, r1_101, r2, 0x2F<32>, r4_104, r5_1002, r6_106, r7_1245, r0_100, r9_626, r4_104, r5_1002, r7_1245, lr, out r1_101, out r2, out r3, out r4_104, out r5_1002, out r6_106, out r7_2290, out r8_1025, out r9, out r10, out r11, out r12_111, out lr)
	branch r12_111 != 0xFFFFFFFF<32> l000087BA
l000081EA:
	r8_1025 = Mem653[sp_1092 + 4<i32>:word32]
	branch r4_104 == r8_1025 l000087A8
l000081F2:
	r9 = CONVERT(Mem653[r4_104:byte], byte, word32)
	r8_1025 = 0x2F<32>
	branch SLICE(r9 - 0x2F<32>, byte, 0) != 0<8> l00008208
l00008208:
	r8_1025 = 0x2E<32>
	branch SLICE(r9 - 0x2E<32>, byte, 0) != 0<8> l00008782
l00008212:
l000081FC:
	branch Test(NE,SLICE(r1_101, bool, 0)) l00008782
l00008204:
l000081A2:
	branch SLICE(r7_1245 - 0x40<32>, byte, 0) == 0<8> l00008720
l00008720:
	branch Test(NE,SLICE(r1_101, bool, 5)) l00008764
l00008726:
	r9 = CONVERT(Mem54[r5_1002:byte], byte, word32)
	branch SLICE(r9 - 0x28<32>, byte, 0) != 0<8> l00008764
l00008730:
	word32 r9_683 = Mem54[sp_1092 + 4<i32>:word32]
	Mem692[sp_1092 - 4<i32>:word32] = r1_101
	fn00007D56(r0_100, r1_101, r2, r3, r4_104, r5_1002, r6_106, r7_1245, r0_100, r9_683, r4_104, r5_1002, r7_1245, lr, out r1_101, out r2, out r3, out r4_104, out r5_1002, out r6_106, out r7_1245, out r8_1025, out r9, out r10, out r11, out r12_111, out lr)
	branch r12_111 == 0xFFFFFFFF<32> l00008764
l00008746:
l000081AC:
	branch SLICE(r7_1245 - 0x5B<32>, byte, 0) == 0<8> l00008454
l00008454:
	word32 r7_719 = Mem54[r6_106 + 132<i32>:word32]
	word32 r8_720 = Mem54[r7_719:word32]
	branch r8_720 != 0<32> l00008470
l0000845E:
	word32 r7_734
	byte VNZC_741
	word32 r12_738
	call Mem54[r6_106 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,r0:r0_85,r1:r1_49,r10:r10_725,r11:r11_270,r12:Mem54[r6_56 + 164<i32>:word32],r2:r2_94,r3:0x2F<32>,r4:r4_88,r5:r5_64,r6:r6_56,r7:r7_719,r8:r8_720,r9:r9_258
		defs: lr:lr_735,r0:r0_727,r1:r1_728,r10:r10_740,r11:r11_739,r12:r12_738,r3:r3_730,r4:r4_731,r5:r5_732,r6:r6_733,r7:r7_734,r9:r9_736,sp:sp_726,VNZC:VNZC_741
	bool Z_742 = SLICE(VNZC_741, bool, 1)
	branch Z_742 l0000846A
l00008466_1:
	r12_738 = 0xFFFFFFFF<32>
l0000846A:
	branch Z_742 l0000846E
l0000846A_1:
	r12_738 = 1<32>
l0000846E:
	Mem750[r7_734:word32] = r12_738
l00008470:
	r8_1025 = Mem754[sp_1092 + 4<i32>:word32]
	branch r4_104 == r8_1025 l000087A8
l00008478:
	r10 = CONVERT(Mem754[r4_104:byte], byte, word32)
	r8_1025 = 0x2E<32>
	branch SLICE(r10 - 0x2E<32>, byte, 0) != 0<8> l00008488
l00008488:
	branch SLICE(r10 - r3, byte, 0) != 0<8> l00008496
l0000848E:
	branch Test(EQ,SLICE(r1_101, bool, 0)) l000087A8
l00008482:
	branch r0_100 == 0<32> l00008496
l00008496:
	word32 r8_801
	r9 = CONVERT(Mem754[r5_1002:byte], byte, word32)
	branch SLICE(r9 - 0x21<32>, byte, 0) != 0<8> l000084A4
l000084A4:
	branch Mem754[Mem754[r6_106 + 132<i32>:word32]:word32] < 0<32> l000084B2
l000084B2:
	r8_801 = CONVERT(SLICE(r9 - 0x5E<32>, byte, 0) == 0<8>, bool, word32)
l000084AE:
	r8_801 = 0<32>
l000084A0:
	r8_801 = 1<32>
l000084BA:
	lr = Mem754[sp_1092 + 8<i32>:word32]
	r0_100 = SLICE(r8_801, byte, 0)
	word32 r8_811 = r5_1002 + 1<32>
	branch r0_100 == 0<32> l000084CA
l000084C6_1:
	r5_1002 = r8_811
l000084CA:
	branch lr != 0<32> l000084D2
l000084D2:
	r2 = SLICE(CONVERT(Mem754[Mem754[Mem754[r6_106 + -32<i32>:word32]:word32] + r10 * 2<32>:int16], int16, int32), byte, 0)
l000084CE:
	r2 = r10
l000084DE:
	r11 = CONVERT(Mem754[r5_1002:byte], byte, word32)
	Mem846[sp_1092:word32] = SLICE(r1_101 ^ 0x20000<32>, bool, 1)
	r5_1002 = r5_1002 + 1<i32>
l000084F0:
	word32 r8_849 = Mem848[sp_1092:word32]
	Mem850[sp_1092 + 12<i32>:word32] = r8_849
	word32 r7_1017 = r5_1002
	branch r8_849 == 0<32> l00008524
l000084FA:
	r8_1025 = 0x5C<32>
	branch SLICE(r11 - 0x5C<32>, byte, 0) != 0<8> l00008524
l00008524:
	r8_1025 = 0x5B<32>
	branch SLICE(r11 - 0x5B<32>, byte, 0) != 0<8> l000085A6
l0000852C:
	r9 = CONVERT(Mem850[r5_1002:byte], byte, word32)
	r8_1025 = 0x3A<32>
	branch SLICE(r9 - 0x3A<32>, byte, 0) != 0<8> l000085A6
l000085A6:
	branch r11 == 0<32> l000087A8
l000085AC:
	branch Mem850[sp_1092 + 8<i32>:word32] == 0<32> l000085BE
l000085B2:
	r11 = SLICE(CONVERT(Mem850[Mem850[Mem850[r6_106 + -32<i32>:word32]:word32] + r11 * 2<32>:int16], int16, int32), byte, 0)
l00008536:
	r3 = r5_1002
	word32 r12_887 = 0<32>
l0000853A:
	r3 = r3 + 1<32>
	r10 = CONVERT(Mem890[r3:byte], byte, word32)
	lr = r10 - 0x61<32>
	branch SLICE(r10 - 0x3A<32>, byte, 0) != 0<8> l0000856E
l0000854A:
	r9 = CONVERT(Mem890[r3 + 1<i32>:byte], byte, word32)
	branch SLICE(r9 - 0x5D<32>, byte, 0) != 0<8> l0000856E
l0000856E:
	r8_1025 = 0x18<32>
	branch SLICE(r10 - 0x79<32>, byte, 0) >u 0<8> l000085BE
l00008578:
	branch r12_887 == 0xFF<32> l000087A8
l00008580:
	Mem912[sp_1092 + 0x18<32>:byte] = SLICE(r10, byte, 0)
	r12_887 = r12_887 + 1<32>
l00008554:
	word32 r9_916 = sp_1092 + 0x11C<32> + r12_887
	Mem920[r9_916 + -260<i32>:byte] = 0<8>
	word32 r0_947
	word32 r1_948
	word32 r2_949
	word32 r3_950
	word32 r4_951
	word32 r6_953
	word32 r12_958
	byte VNZC_961
	call Mem920[r6_106 + 300<i32>:word32] (retsize: 0;)
		uses: lr:r10_891 - 0x61<32>,r0:r0_925,r1:r1_929,r10:r10_891,r11:r11_856,r12:sp_847 + 0x18<32>,r2:r2_933,r3:r3_889,r4:r4_937,r5:r5_851,r6:r6_880,r7:r5_851,r8:0<32>,r9:r9_916
		defs: lr:lr_955,r0:r0_947,r1:r1_948,r10:r10_960,r11:r11_959,r12:r12_958,r2:r2_949,r3:r3_950,r4:r4_951,r6:r6_953,r8:r8_957,r9:r9_956,VNZC:VNZC_961
	branch SLICE(VNZC_961, bool, 1) l0000858C
l0000858C:
	word32 r0_968
	word32 r1_969
	word32 r2_970
	word32 r3_971
	word32 r4_972
	word32 r5_973
	word32 r6_974
	word32 r7_975
	word32 lr_976
	word32 r9_977
	word32 r8_978
	word32 r12_979
	word32 r10_981
	call Mem920[r6_953 + 544<i32>:word32] (retsize: 0;)
		uses: lr:lr_955,r0:r0_947,r1:r1_948,r10:r10_960,r11:r11_959,r12:CONVERT(Mem920[r4_951:byte], byte, word32),r2:r2_949,r3:r3_950,r4:r4_951,r5:r12_958,r6:r6_953,r7:r3_950 + 2<32>,r8:r8_957,r9:r9_956
		defs: lr:lr_976,r0:r0_968,r1:r1_969,r10:r10_981,r12:r12_979,r2:r2_970,r3:r3_971,r4:r4_972,r5:r5_973,r6:r6_974,r7:r7_975,r8:r8_978,r9:r9_977
	byte VNZC_999
	call Mem920[r6_974 + 308<i32>:word32] (retsize: 0;)
		uses: lr:lr_976,r0:r0_968,r1:r1_969,r10:r10_981,r11:r5_973,r12:r12_979,r2:r2_970,r3:r3_971,r4:r4_972,r5:r5_973,r6:r6_974,r7:r7_975,r8:r8_978,r9:r9_977
		defs: lr:lr_993,r0:r0_985,r1:r1_986,r10:r10_998,r2:r2_987,r3:r3_988,r4:r4_989,r6:r6_991,r7:r7_992,r8:r8_995,r9:r9_994,sp:sp_984,VNZC:VNZC_999
	branch SLICE(VNZC_999, bool, 1) l0000863E
l0000859E:
	r11 = CONVERT(Mem920[r7_1017:byte], byte, word32)
	r5_1002 = r3 + 3<32>
l0000856C:
l00008502:
	r9 = CONVERT(Mem850[r5_1002:byte], byte, word32)
	branch r9 == 0<32> l000087A8
l0000850A:
	lr = Mem850[sp_1092 + 8<i32>:word32]
	branch lr != 0<32> l00008514
l00008514:
	r11 = SLICE(CONVERT(Mem850[Mem850[Mem850[r6_106 + -32<i32>:word32]:word32] + r9 * 2<32>:int16], int16, int32), byte, 0)
l00008510:
	r11 = r9
l00008520:
	r7_1017 = r5_1002 + 1<32>
l000085BE:
	r10 = CONVERT(Mem1021[r7_1017:byte], byte, word32)
	r8_1025 = 0x2D<32>
	branch SLICE(r10 - 0x2D<32>, byte, 0) != 0<8> l000087B0
l000085CA:
	r9 = CONVERT(Mem1021[r7_1017 + 1<i32>:byte], byte, word32)
	branch r9 == 0<32> l000087B0
l000085D2:
	r8_1025 = 0x5D<32>
	branch SLICE(r9 - 0x5D<32>, byte, 0) == 0<8> l000087B0
l000087B0:
	branch SLICE(r11 - r2, byte, 0) != 0<8> l000085DC
l000087B8:
l000085DC:
	r5_1002 = r7_1017 + 1<32>
	branch SLICE(r10 - 0x2D<32>, byte, 0) == 0<8> l000085EC
l000085EC:
	r9 = CONVERT(Mem1021[r5_1002:byte], byte, word32)
	branch SLICE(r9 - 0x5D<32>, byte, 0) == 0<8> l000084EE
l000084EE:
	r11 = 0x2D<32>
l000085F8:
	lr = Mem1021[sp_1092:word32]
	r7_1017 = r5_1002 + 1<32>
	branch lr == 0<32> l0000860A
l00008602:
	branch SLICE(r9 - 0x5C<32>, byte, 0) == 0<8> l0000860E
l0000860E:
	r7_1017 = r5_1002 + 2<32>
	r8_1025 = CONVERT(Mem1021[r5_1002 + 1<32>:byte], byte, word32)
l0000860A:
	r8_1025 = r9
l00008610:
	branch r8_1025 == 0<32> l000087A8
l00008616:
	branch SLICE(r11 - r2, byte, 0) >u 0<8> l00008626
l0000861E:
	branch SLICE(r2 - r8_1025, byte, 0) <=u 0<8> l0000863E
l0000863E:
	r11 = CONVERT(Mem1088[r7_1017:byte], byte, word32)
	branch r11 == 0<32> l000087A8
l00008646:
	r5_1002 = r7_1017 + 1<32>
	branch Mem1088[sp_1092 + 12<i32>:word32] == 0<32> l00008668
l00008650:
	branch SLICE(r11 - 0x5C<32>, byte, 0) != 0<8> l00008668
l00008668:
	branch SLICE(r11 - 0x5B<32>, byte, 0) != 0<8> l00008712
l00008670:
	r9 = CONVERT(Mem1088[r5_1002:byte], byte, word32)
	branch SLICE(r9 - 0x3A<32>, byte, 0) != 0<8> l000086B4
l000086B4:
	r11 = 0x3D<32>
	branch SLICE(r9 - 0x3D<32>, byte, 0) != 0<8> l000086E6
l000086E6:
	r8_1025 = 0x2E<32>
	branch SLICE(r9 - 0x2E<32>, byte, 0) != 0<8> l0000863C
l000086EE:
	word32 r12_1116 = r5_1002 + 1<32>
l000086F2:
	r12_1116 = r12_1116 + 1<32>
	r9 = CONVERT(Mem1088[r12_1116:byte], byte, word32)
	branch r9 == 0<32> l000087A8
l000086FA:
	r8_1025 = 0x2E<32>
	branch SLICE(r9 - 0x2E<32>, byte, 0) != 0<8> l000086F2
l00008702:
	r9 = CONVERT(Mem1088[r12_1116 + 1<i32>:byte], byte, word32)
	r8_1025 = 0x5D<32>
	branch SLICE(r9 - 0x5D<32>, byte, 0) != 0<8> l000086F2
l0000870C:
	r11 = CONVERT(Mem1088[r12_1116 + 2<i32>:byte], byte, word32)
	r5_1002 = r12_1116 + 3<32>
l000086BC:
	r10 = r5_1002 + 1<32>
	r9 = CONVERT(Mem1088[r5_1002 + 1<32>:byte], byte, word32)
	r8_1025 = 0<32>
	branch SLICE(r9, byte, 0) == 0<8> l000087A8
l000086CA:
	r9 = r5_1002 + 2<32>
	r8_1025 = CONVERT(Mem1088[r5_1002 + 2<32>:byte], byte, word32)
	branch SLICE(r8_1025 - 0x3D<32>, byte, 0) != 0<8> l000087A8
l000086D6:
	r9 = CONVERT(Mem1088[r5_1002 + 3<32>:byte], byte, word32)
	r8_1025 = 0x5D<32>
	branch SLICE(r9 - 0x5D<32>, byte, 0) != 0<8> l000087A8
l000086E0:
	r11 = CONVERT(Mem1088[r5_1002 + -4<i32>:byte], byte, word32)
	r5_1002 = r5_1002 + 5<32>
l0000867A:
	r10 = r5_1002
l0000867C:
	r10 = r10 + 1<32>
	r8_1025 = r7_1017 + 0x101<32>
	r9 = CONVERT(Mem1088[r10:byte], byte, word32)
	branch r10 == r8_1025 l000087A8
l0000868A:
	r11 = r9 - 0x61<32>
	branch SLICE(r9 - 0x3A<32>, byte, 0) != 0<8> l000086A0
l00008696:
	r9 = CONVERT(Mem1088[r10 + 1<i32>:byte], byte, word32)
	branch SLICE(r9 - 0x5D<32>, byte, 0) == 0<8> l000086AC
l000086AC:
	r11 = CONVERT(Mem1088[r10 + 2<i32>:byte], byte, word32)
	r5_1002 = r10 + 3<32>
l000086A0:
	r8_1025 = 0x18<32>
	branch SLICE(r9 - 0x79<32>, byte, 0) >u 0<8> l0000863C
l000086AA:
l00008658:
	r9 = CONVERT(Mem1088[r5_1002:byte], byte, word32)
	r8_1025 = 0<32>
	branch SLICE(r9, byte, 0) == 0<8> l000087A8
l00008664:
	r5_1002 = r5_1002 + 1<32>
l00008712:
	r8_1025 = 0x5D<32>
	branch SLICE(r11 - 0x5D<32>, byte, 0) != 0<8> l0000863C
l0000863C:
	r7_1017 = r5_1002
l0000871A:
	branch r0_100 == 0<32> l00008782
l0000871E:
l00008626:
	r11 = CONVERT(Mem1021[r7_1017:byte], byte, word32)
	r5_1002 = r7_1017 + 1<i32>
l000085E8:
	r11 = r10
l0000862A:
	r8_1025 = 0x5D<32>
	branch SLICE(r11 - 0x5D<32>, byte, 0) != 0<8> l000084F0
l00008634:
	branch r0_100 != 0<32> l00008782
l0000863A:
l00008486:
l000081B6:
	r8_1025 = 0x5C<32>
	branch SLICE(r7_1245 - 0x5C<32>, byte, 0) != 0<8> l00008764
l00008764:
	r8_1025 = Mem1230[sp_1092 + 4<i32>:word32]
	branch r4_104 == r8_1025 l000087A8
l0000876A:
	lr = Mem1230[sp_1092 + 8<i32>:word32]
	r10 = CONVERT(Mem1230[r4_104:byte], byte, word32)
	branch lr == 0<32> l0000877C
l0000877C:
	r8_1025 = r10
l00008772:
	r8_1025 = CONVERT(Mem1230[Mem1230[Mem1230[r6_106 + -32<i32>:word32]:word32] + r10 * 2<32>:int16], int16, int32)
l0000877E:
	branch r7_1245 != r8_1025 l000087A8
l000081C0:
l00008216:
	branch Test(EQ,SLICE(r1_101, bool, 1)) l00008238
l0000821C:
	r7_1245 = CONVERT(Mem54[r5_1002:byte], byte, word32)
	branch r7_1245 == 0<32> l000087A8
l00008224:
	lr = Mem54[sp_1092 + 8<i32>:word32]
	branch lr == 0<32> l00008236
l0000822A:
	r7_1245 = SLICE(CONVERT(Mem54[Mem54[Mem54[r6_106 + -32<i32>:word32]:word32] + r7_1245 * 2<32>:int16], int16, int32), byte, 0)
l00008236:
	r5_1002 = r5_1002 + 1<32>
l00008238:
	r8_1025 = Mem54[sp_1092 + 4<i32>:word32]
	branch r4_104 == r8_1025 l000087A8
l00008240:
	lr = Mem54[sp_1092 + 8<i32>:word32]
	r10 = CONVERT(Mem54[r4_104:byte], byte, word32)
	branch lr == 0<32> l00008252
l00008252:
	r8_1025 = r10
l00008248:
	r8_1025 = CONVERT(Mem54[Mem54[Mem54[r6_106 + -32<i32>:word32]:word32] + r10 * 2<32>:int16], int16, int32)
l00008254:
	branch r8_1025 == r7_1245 l00008782
l00008782:
	r9 = 0<32>
l00008784:
	r4_104 = r4_104 + 1<32>
	r0_100 = r9
l0000825A:
l00008790:
	r8_1025 = Mem45[sp_1092 + 4<i32>:word32]
	branch r4_104 == r8_1025 l000087AC
l000087AC:
	r12_111 = 0<32>
l00008796:
	branch (r1_101 & 8<32>) == 0<32> l000087A8
l000087A8:
	r12_111 = 1<32>
l0000879C:
	r9 = CONVERT(Mem45[r4_104:byte], byte, word32)
	r8_1025 = 0x2F<32>
	r12_111 = CONVERT(SLICE(r9 - 0x2F<32>, byte, 0) != 0<8>, bool, word32)
l000087BA:
	r0Out = <invalid>
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r7Out = <invalid>
	r8Out = r8_1025
	r9Out = r9
	r10Out = r10
	r11Out = r11
	r12Out = r12_111
	lrOut = lr
	return <invalid>
fn00008144_exit:


bool fn000087C0(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003BA4
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: Z lr r0 r1 r10 r11 r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000087C0_entry:
l000087C0:
	word32 r11_206
	word32 r10_204
	word32 lr_201
	word32 r0_180
	word32 r6_33 = 0x000087C8<p32> - Mem29[0x00008902<p32>:word32]
	word32 sp_41
	word32 r5_47
	word32 r12_51
	word32 r7_153
	word32 r1_147
	word32 r6_152
	word32 r2_161
	word32 r4_150
	word32 lr_154
	word32 r11_156
	word32 r10_157
	call Mem38[r6_33 + 172<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r10,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_33,r7:fp - 36<i32>,Stack +0004:r11,Stack +0008:r12,Stack +0014:lr,Stack +0018:r7,Stack +001C:r6,Stack +0020:r5,Stack +0024:r4,Stack +0028:r3,Stack +002C:r2,Stack +0030:r1,Stack +0034:r0
		defs: lr:lr_50,r1:r1_43,r10:r10_53,r11:r11_52,r12:r12_51,r2:r2_44,r4:r4_46,r5:r5_47,r6:r6_48,r7:r7_49,sp:sp_41
	word32 r0_146 = sp_41
	branch r12_51 == 1<32> l0000890C
l000087E0:
	Mem69[r7_153 - 8<32>:word64] = 0<64>
	word32 r3_74
	word32 r12_80
	call Mem69[r6_152 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_50,r0:sp_41,r1:r1_43,r10:0<32>,r11:r7_49 - 0xC<32>,r12:0<32>,r2:0<32>,r3:0<32>,r4:r7_49 - 8<32>,r5:r5_47,r6:r6_48,r7:r7_49,r9:r7_49 - 8<32>
		defs: lr:lr_79,r0:r0_71,r1:r1_72,r10:r10_82,r11:r11_81,r12:r12_80,r2:r2_73,r3:r3_74,r4:r4_75,r6:r6_77,r7:r7_78
	branch r12_80 == 1<32> l0000890C
l00008802:
	byte VNZC_105
	word32 r4_118
	word32 r7_121
	word32 r6_120
	word32 r0_114
	word32 r1_115
	word32 r2_116
	word32 r3_117
	word32 r5_119
	word32 lr_122
	call Mem69[r6_152 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_79,r0:r0_71,r1:r1_72,r10:r10_82,r11:r11_81,r12:r4_75,r2:r2_73,r3:r3_74,r4:r4_75,r5:r12_80 + 1<32>,r6:r6_77,r7:r7_78
		defs: lr:lr_99,r0:r0_91,r1:r1_92,r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_96,r6:r6_97,r7:r7_98,VNZC:VNZC_105
	branch SLICE(VNZC_105, bool, 1) l00008820
l0000880A:
	call Mem69[r6_120 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,r0:r0_91,r1:r1_92,r10:0x127<32>,r11:Mem69[r6_97 + 260<i32>:word32],r12:Mem69[r6_97 + 256<i32>:word32],r2:r2_93,r3:r3_94,r4:r4_95,r5:r5_96,r6:r6_97,r7:r7_98,r9:0x00008950<p32>
		defs: lr:lr_122,r0:r0_114,r1:r1_115,r2:r2_116,r3:r3_117,r4:r4_118,r5:r5_119,r6:r6_120,r7:r7_121
l00008820:
	word32 r3_149
	word32 r5_151
	word32 r12_155
	call Mem69[r6_120 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_143,r0:r0_138,r1:r1_139,r10:0<32>,r11:r7_132 - 0x10<32>,r12:0<32>,r2:r2_140,r3:r3_141,r4:r4_130,r5:r5_142,r6:r6_136,r7:r7_132,r9:r4_130
		defs: lr:lr_154,r0:r0_146,r1:r1_147,r10:r10_157,r11:r11_156,r12:r12_155,r3:r3_149,r4:r4_150,r5:r5_151,r6:r6_152,r7:r7_153
	r2_161 = r12_155 + 1<32>
	branch r12_155 == 1<32> l0000890C
l0000890C:
	word32 r5_166 = Mem165[r7_153 + -16<i32>:word32]
	word32 r1_181
	word32 r2_182
	word32 r3_183
	word32 r5_185
	word32 r7_187
	word32 r12_189
	call Mem165[r6_152 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_175,r0:r0_172,r1:r1_167,r10:r10_177,r11:r11_176,r12:r5_166,r2:r2_173,r3:SLICE(r1_167, bool, 2),r4:r4_174,r5:r5_166,r6:r6_171,r7:r7_164
		defs: r0:r0_180,r1:r1_181,r12:r12_189,r2:r2_182,r3:r3_183,r5:r5_185,r7:r7_187
	word32 r0_523
	word32 r1_524
	word32 r2_525
	word32 r3_526
	word32 r4_527
	word32 r5_528
	word32 r6_529
	word32 r7_530
	word32 r8_531
	word32 r9_532
	word32 r12_533
	fn00008144(r2_182, r1_181, r3_183, r5_185 + r12_189, r5_185, Mem165[r7_187 + -12<i32>:word32], out r0_523, out r1_524, out r2_525, out r3_526, out r4_527, out r5_528, out r6_529, out r7_530, out r8_531, out r9_532, out r10_204, out r11_206, out r12_533, out lr_201)
l00008834:
	byte VNZC_228
	word32 sp_213
	word32 r3_217
	word32 r4_218
	word32 r12_223
	word32 r11_224
	word32 r10_225
	word32 r7_221
	word32 r5_219
	word32 r6_220
	word32 r0_214
	word32 r1_215
	word32 r2_216
	word32 lr_222
	call Mem69[r6_152 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_154,r0:r0_146,r1:r1_147,r10:r10_157,r11:r11_156,r12:r4_150,r2:r12_155 + 1<32>,r3:r3_149,r4:r4_150,r5:r5_151,r6:r6_152,r7:r7_153
		defs: lr:lr_222,r0:r0_214,r1:r1_215,r10:r10_225,r11:r11_224,r12:r12_223,r2:r2_216,r3:r3_217,r4:r4_218,r5:r5_219,r6:r6_220,r7:r7_221,sp:sp_213,VNZC:VNZC_228
	branch SLICE(VNZC_228, bool, 1) l00008852
l0000883C:
	call Mem69[r6_220 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_222,r0:r0_214,r1:r1_215,r10:0x12B<32>,r11:Mem69[r6_220 + 260<i32>:word32],r12:Mem69[r6_220 + 256<i32>:word32],r2:r2_216,r3:r3_217,r4:r4_218,r5:r5_219,r6:r6_220,r7:r7_221,r9:0x00008950<p32>
		defs: lr:lr_245,r0:r0_237,r1:r1_238,r10:r10_248,r11:r11_247,r12:r12_246,r2:r2_239,r3:r3_240,r4:r4_241,r5:r5_242,r6:r6_243,r7:r7_244,sp:sp_236
l00008852:
	word32 r9_254 = r2_216 + r5_219
	Mem256[r7_221 + -20<i32>:word32] = r9_254
	branch r5_219 >u r9_254 l0000888A
l00008860:
	branch r9_254 >u Mem256[0x00008908<p32>:word32] l0000888A
l00008868:
	word32 r3_293
	word32 r12_262 = Mem256[r7_221 + -20<i32>:word32]
	branch Mem256[r7_221 + -20<i32>:word32] >u 0x7CF<32> l00008884
l00008884:
	byte VNZC_291
	call Mem256[r6_220 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_272,r0:r0_268,r1:r1_269,r10:r10_274,r11:r11_273,r12:r12_262 << 2<i32>,r2:r2_252,r3:r3_270,r4:r4_271,r5:r5_253,r6:r6_267,r7:r7_255
		defs: lr:lr_285,r0:r0_277,r1:r1_278,r10:r10_288,r11:r11_287,r12:r12_286,r2:r2_279,r3:r3_280,r4:r4_281,r5:r5_282,r6:r6_283,r7:r7_284,VNZC:VNZC_291
	branch SLICE(VNZC_291, bool, 1) l00008896
l00008896:
	r3_293 = r12_223
l0000888A:
	word32 r12_319
	call Mem256[r6_220 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_303,r0:r0_296,r1:r1_297,r10:r10_307,r11:r11_306,r12:r12_304,r2:r2_298,r3:r3_299,r4:r4_300,r5:r5_301,r6:r6_294,r7:r7_302
		defs: lr:lr_318,r0:r0_310,r10:r10_321,r11:r11_320,r12:r12_319
	Mem327[r12_319:word32] = 0xC<32>
l0000887A:
	r3_293 = sp_213 - ((r12_262 << 2<i32>) + 4<32>)
l00008898:
	word32 r4_333 = r7_221 - 8<32>
	word32 r0_349
	word32 r1_350
	word32 r2_351
	word32 r3_352
	word32 r4_353
	word32 r5_354
	word32 r6_355
	word32 r7_356
	word32 lr_357
	word32 r11_359
	word32 r10_360
	call Mem256[r6_220 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_346,r0:r0_343,r1:r1_344,r10:r5_334,r11:r7_332 - 0xC<32>,r12:r3_339,r2:r2_345,r3:r3_339,r4:r4_333,r5:r5_334,r6:r6_341,r7:r7_332,r9:r4_333
		defs: lr:lr_357,r0:r0_349,r1:r1_350,r10:r10_360,r11:r11_359,r2:r2_351,r3:r3_352,r4:r4_353,r5:r5_354,r6:r6_355,r7:r7_356
	byte VNZC_382
	word32 r4_372
	word32 r2_370
	word32 r7_375
	word32 r5_373
	word32 r6_374
	word32 r0_368
	word32 r1_369
	word32 r3_371
	word32 lr_376
	call Mem256[r6_355 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_357,r0:r0_349,r1:r1_350,r10:r10_360,r11:r11_359,r12:r4_353,r2:r2_351,r3:r3_352,r4:r4_353,r5:r3_352 + (r5_354 << 2<8>),r6:r6_355,r7:r7_356
		defs: lr:lr_376,r0:r0_368,r1:r1_369,r2:r2_370,r3:r3_371,r4:r4_372,r5:r5_373,r6:r6_374,r7:r7_375,VNZC:VNZC_382
	branch SLICE(VNZC_382, bool, 1) l000088CC
l000088B6:
	call Mem256[r6_374 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr_376,r0:r0_368,r1:r1_369,r10:0x145<32>,r11:Mem256[r6_374 + 260<i32>:word32],r12:Mem256[r6_374 + 256<i32>:word32],r2:r2_370,r3:r3_371,r4:r4_372,r5:r5_373,r6:r6_374,r7:r7_375,r9:0x00008950<p32>
		defs: lr:lr_399,r0:r0_391,r1:r1_392,r2:r2_393,r3:r3_394,r4:r4_395,r5:r5_396,r6:r6_397,r7:r7_398
l000088CC:
	word32 r1_424
	word32 r2_425
	word32 r3_426
	word32 r4_427
	word32 r5_428
	word32 r6_429
	word32 r7_430
	call Mem256[r6_374 + 188<i32>:word32] (retsize: 0;)
		uses: lr:lr_420,r0:r0_417,r1:r1_418,r10:r2_408,r11:r7_410 - 0x10<32>,r12:r5_413,r2:r2_408,r3:r3_419,r4:r4_406,r5:r5_413,r6:r6_415,r7:r7_410,r9:r4_406
		defs: r0:r0_423,r1:r1_424,r2:r2_425,r3:r3_426,r4:r4_427,r5:r5_428,r6:r6_429,r7:r7_430
	word32 r12_446
	word32 r0_534
	word32 r1_535
	word32 r2_536
	word32 r3_537
	word32 r4_538
	word32 r5_539
	word32 r6_540
	word32 r7_541
	word32 r9_542
	fn00007754(r2_425, r3_426, r1_424, SLICE(r1_424, bool, 2), r5_428 + (r2_425 << 2<8>) - 4<32>, r5_428, r3_426, out r0_534, out r1_535, out r2_536, out r3_537, out r4_538, out r5_539, out r6_540, out r7_541, out r9_542, out r10_204, out r11_206, out r12_446, out lr_201)
	branch Mem256[r7_430 + -20<i32>:word32] <=u 0x7CF<32> l0000892E
l000088FC:
	call Mem256[r6_429 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_445,r0:r0_423,r1:r1_424,r10:r10_448,r11:r11_449,r12:r3_426,r2:r2_425,r3:r3_426,r4:r4_427,r5:r12_446,r6:r6_429,r7:r7_430
		defs: lr:lr_469,r0:r0_461,r10:r10_472,r11:r11_471
l0000892E:
	word32 sp_480 = r0_180 + 0x14<32>
	word32 r7_483 = Mem482[sp_480 + 4<i32>:word32]
	word32 r6_484 = Mem482[sp_480 + 8<i32>:word32]
	word32 r5_485 = Mem482[sp_480 + 12<i32>:word32]
	word32 r4_486 = Mem482[sp_480 + 16<i32>:word32]
	word32 r3_487 = Mem482[sp_480 + 20<i32>:word32]
	word32 r2_488 = Mem482[sp_480 + 24<i32>:word32]
	word32 r1_489 = Mem482[sp_480 + 28<i32>:word32]
	r0Out = Mem482[sp_480 + 32<i32>:word32]
	r1Out = r1_489
	r2Out = r2_488
	r3Out = r3_487
	r4Out = r4_486
	r5Out = r5_485
	r6Out = r6_484
	r7Out = r7_483
	r10Out = r10_204
	r11Out = r11_206
	lrOut = lr_201
	return SLICE(cond(sp_480), bool, 1)
fn000087C0_exit:


word32 fn0000895C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r1
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000895C_entry:
l0000895C:
	word32 r6_20 = 0x00008962<p32> - Mem17[0x00008988<p32>:word32]
	word32 r4_27
	word32 r5_28
	word32 r6_29
	word32 r7_30
	word32 lr_31
	byte VNZC_36
	call Mem17[r6_20 + 596<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r11:r12,r12:0<32>,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_20,r7:r12,Stack +0008:lr,Stack +000C:r7,Stack +0010:r6,Stack +0014:r5,Stack +0018:r4
		defs: lr:lr_31,r1:r1_72,r4:r4_27,r5:r5_28,r6:r6_29,r7:r7_30,VNZC:VNZC_36
	branch SLICE(VNZC_36, bool, 1) l00008984
l00008970:
	fn0000898C(r0, r1, r2, r3, r4_27, r5_28, r6_29, r7_30, lr_31)
	Mem55[r7_30:word32] = dwLoc1C
	Mem56[r7_30 + 4<i32>:word32] = dwLoc18 * 0x3E8<32>
l00008984:
	return r1
fn0000895C_exit:


void fn0000898C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000895C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000898C_entry:
l0000898C:
	word32 r6_32 = 0x00008992<p32> - Mem29[0x000089E8<p32>:word32]
	word32 r5_33 = Mem29[r6_32 + 216<i32>:word32]
	word32 r10_36 = Mem29[r5_33:word32]
	word64 r9_r8_56 = Mem55[r10_36 + 32<i32>:word64]
	word32 r3_48 = Mem47[r10_36 + 16<i32>:word32]
	word32 r2_49 = Mem47[r10_36 + 20<i32>:word32]
	word32 r1_50 = Mem47[r10_36 + 24<i32>:word32]
	word32 r0_51 = Mem47[r10_36 + 28<i32>:word32]
	word32 r8_60 = Mem59[r10_36 + 40<i32>:word32]
	word32 r4_67
	word32 r5_68
	call Mem61[r6_32 + 476<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0_51,r1:r1_50,r10:r10_36,r2:r2_49,r3:r3_48,r4:fp - 0x40<32>,r5:r5_33,r6:r6_32,r7:fp - 0x50<32>,r8:r8_60,r9:SLICE(r9_r8_56, word32, 32),Stack +0000:r3_48,Stack +0004:r2_49,Stack +0008:r1_50,Stack +000C:r0_51,Stack +0020:r9_r8_56,Stack +0028:r8_60,Stack +002C:lr,Stack +0030:r7,Stack +0034:r6,Stack +0038:r5,Stack +003C:r4,Stack +0040:r3,Stack +0044:r2,Stack +0048:r1,Stack +004C:r0,Stack +FFFFFFF0:Mem29[r10_36:word32],Stack +FFFFFFF4:Mem29[r10_36 + 4<i32>:word32],Stack +FFFFFFF8:Mem29[r10_36 + 8<i32>:word32],Stack +FFFFFFFC:Mem29[r10_36 + 12<i32>:word32]
		defs: r4:r4_67,r5:r5_68
	word32 r10_80 = Mem61[r5_68:word32]
	Mem81[r10_80 + -4<i32>:word32] = r0_51
	Mem82[r10_80 + -8<i32>:word32] = r1_50
	Mem83[r10_80 + -12<i32>:word32] = r2_49
	Mem84[r10_80 + -16<i32>:word32] = r3_48
	word32 r3_86 = Mem84[r4_67:word32]
	word32 r2_87 = Mem84[r4_67 + 4<i32>:word32]
	word32 r1_88 = Mem84[r4_67 + 8<i32>:word32]
	Mem90[r10_80 + 0xC<32>:word32] = Mem84[r4_67 + 12<i32>:word32]
	Mem91[r10_80 + 8<32>:word32] = r1_88
	Mem92[r10_80 + 4<32>:word32] = r2_87
	Mem93[r10_80:word32] = r3_86
	Mem97[r10_80 + 32<i32>:word64] = r9_r8_56
	Mem99[r10_80 + -24<i32>:word32] = r8_60
	return
fn0000898C_exit:


bool fn00008A6C(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00008A6C_entry:
l00008A6C:
	word32 r6_19 = 0x00008A70<p32> - Mem17[0x00008A86<p32>:word32]
	word32 r6_24
	word32 lr_26
	word32 r12_30
	call Mem17[r6_19 + 472<i32>:word32] (retsize: 0;)
		uses: lr:lr,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_26,r12:r12_30,r6:r6_24
	word32 r11_32 = Mem17[r6_24 + 216<i32>:word32]
	word32 r8_33 = Mem17[r6_24 + 368<i32>:word32]
	word32 r9_34 = Mem17[r11_32:word32]
	bool Z_36 = SLICE(cond(r9_34 - r8_33), bool, 1)
	branch r9_34 != r8_33 l00008A86
l00008A84:
	Mem37[r11_32:word32] = r12_30
l00008A86:
	r12Out = r12_30
	lrOut = lr_26
	return Z_36
fn00008A6C_exit:


word32 fn00008A8C(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00002B30
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r11 r12
// Preserved: r4 r5 r6 r7 sp
fn00008A8C_entry:
l00008A8C:
	word32 r6_19 = 0x00008A90<p32> - Mem17[0x00008AB6<p32>:word32]
	word32 r4_23
	word32 r5_24
	word32 r6_25
	word32 lr_27
	word32 r12_29
	byte VNZC_30
	call Mem17[r6_19 + 292<i32>:word32] (retsize: 0;)
		uses: lr:lr,r11:0<32>,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_27,r12:r12_29,r4:r4_23,r5:r5_24,r6:r6_25,VNZC:VNZC_30
	branch SLICE(VNZC_30, bool, 1) l00008A9E
l00008A9E:
	word32 r4_35
	word32 r5_36
	word32 r6_37
	word32 r7_38
	byte VNZC_42
	word32 lr_39
	word32 r12_41
	call Mem17[r6_25 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_27,r11:Mem17[r6_25 + 776<i32>:word32],r4:r4_23,r5:r5_24,r6:r6_25,r7:r12_29
		defs: lr:lr_39,r12:r12_41,r4:r4_35,r5:r5_36,r6:r6_37,r7:r7_38,VNZC:VNZC_42
	branch SLICE(VNZC_42, bool, 1) l00008AB4
l00008AA8:
	byte VNZC_54
	call Mem17[r6_37 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_39,r11:Mem17[r6_37 + 772<i32>:word32],r12:r7_38,r4:r4_35,r5:r5_36,r6:r6_37,r7:r7_38
		defs: lr:lr_51,VNZC:VNZC_54
	r12_41 = CONVERT(SLICE(VNZC_54, bool, 1), bool, word32)
l00008AB4:
	lrOut = lr_39
	return r12_41
l00008A9C:
	lrOut = lr_27
	return lr
fn00008A8C_exit:


void fn00008ABC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn00008ABC_entry:
l00008ABC:
	return
fn00008ABC_exit:


void fn00008AC0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn00008AC0_entry:
l00008AC0:
	return
fn00008AC0_exit:


void fn00008AC4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn00008AC4_entry:
l00008AC4:
	return
fn00008AC4_exit:


void fn00008AC8(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00008AC8_entry:
l00008AC8:
	word32 r11_22 = Mem17[r12 + 4<i32>:word32]
	word32 r12_23 = Mem17[r12:word32]
	word32 r10_24 = 0<32>
l00008AF2:
	branch r12_23 <u r11_22 l00008AD6
l00008AD6:
	branch Mem17[r12_23:word32] == 0<32> l00008AF0
l00008ADC:
	word32 r8_33 = r12_23
	word32 r9_34 = 1<32>
l00008AE4:
	r8_33 = Mem17[r8_33 + 4<i32>:word32]
	branch r8_33 != 0<32> l00008AE2
l00008AE2:
	r9_34 = r9_34 + 1<32>
l00008AEA:
	branch r10_24 >=u r9_34 l00008AF0
l00008AEC_1:
	r10_24 = r9_34
l00008AF0:
	r12_23 = r12_23 + 8<32>
l00008AF6:
	return
fn00008AC8_exit:


word32 fn00008BE0(word32 r12, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
//      fn0000901C
//      fn000090C0
// MayUse:  r12:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00008BE0_entry:
l00008BE0:
	word32 r5_34 = Mem29[r12 + 20<i32>:word32]
	word32 r4_36 = Mem29[r5_34 + 8<i32>:word32]
	word32 r11_101 = r4_36
	word32 r8_200
	word32 r10_102
	word32 r9_104
	branch fn0000FA0E(r4_36, Mem29[0x00008C4C<p32>:word32], out r8_200, out r9_104, out r10_102) l00008C40
l00008BF6:
	r11_101 = Mem29[0x00008C52<p32>:word32]
	word32 r8_201
	branch fn0000FA0E(r11_101, r4_36, out r8_201, out r9_104, out r10_102) l00008C40
l00008C00:
	r11_101 = Mem29[r5_34 + 12<i32>:word32]
	word32 r8_202
	branch fn0000FA0E(r11_101, Mem29[0x00008C5A<p32>:word32], out r8_202, out r9_104, out r10_102) l00008C40
l00008C0A:
	word32 r7_67 = Mem29[r5_34:word32]
	r11_101 = 0<32>
	word32 r8_203
	branch fn0000F9D0(0<32>, r7_67, out r8_203, out r9_104, out r10_102) l00008C40
l00008C16:
	word32 r12_82 = fn0000FF9C(Mem29[0x00008C4E<p32>:word32], r7_67)
	word32 r7_89 = Mem29[r5_34 + 4<i32>:word32]
	r11_101 = r7_89
	word32 r8_204
	branch fn0000FA0E(r7_89, r12_82, out r8_204, out r9_104, out r10_102) l00008C40
l00008C2A:
	r11_101 = r7_89
	word32 r8_205
	branch fn0000F9D0(r7_89, Mem29[0x00008C5E<p32>:word32], out r8_205, out r9_104, out r10_102) l00008C40
l00008C34:
	r11_101 = r4_36
	word32 r8_113
	branch fn0000FA0E(r4_36, r12_82, out r8_113, out r9_104, out r10_102) l00008C40
l00008C40:
	Mem124[r12 + 20<i32>:word32] = 0x00009234<p32>
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r7Out = r7
	r8Out = 0x00009234<p32>
	r9Out = r9_104
	r10Out = r10_102
	r11Out = r11_101
	r12Out = 0<32>
	return r0
l00008C3E:
	r1Out = r0
	r2Out = r1
	r3Out = r2
	r4Out = r3
	r5Out = r4
	r6Out = r5
	r7Out = r6
	r8Out = r8_113
	r9Out = r9_104
	r10Out = r10_102
	r11Out = r4_36
	r12Out = r7
	return dwArg00
fn00008BE0_exit:


bool fn00008CAA(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000901C
//      fn000090C0
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: Z lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00008CAA_entry:
l00008CAA:
	word32 r5_51
	word32 r12_55
	word32 r11_57
	word32 r4_50
	word32 r7_53
	word32 r3_49
	word32 r0_46
	word32 r1_47
	word32 r2_48
	word32 r6_52
	word32 r9_59
	word32 lr_108
	word32 r10_112
	call Mem29[r12 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:Mem29[r12 + 8<i32>:word32],r12:r11,r2:r9,r3:r11,r4:r10,r5:Mem29[r12:word32],r6:0x00008CAE<p32> - Mem29[0x00008D24<p32>:word32],r7:r12,r9:r9,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_54,r0:r0_46,r1:r1_47,r10:r10_58,r11:r11_57,r12:r12_55,r2:r2_48,r3:r3_49,r4:r4_50,r5:r5_51,r6:r6_52,r7:r7_53,r9:r9_59
	word32 r5_62 = r5_51 + (r12_55 << 3<8>)
	branch r5_62 <u Mem29[r7_53 + 4<i32>:word32] l00008CD0
l00008CCC:
	call Mem29[r6_52 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_54,r0:r0_46,r1:r1_47,r10:r10_58,r11:r11_57,r12:r12_55,r2:r2_48,r3:r3_49,r4:r4_50,r5:r5_62,r6:r6_52,r7:r7_53,r9:r9_59
		defs: lr:lr_74,r0:r0_66,r1:r1_67,r10:r10_78,r2:r2_68,r3:r3_69,r4:r4_70,r5:r5_71,r6:r6_72,r7:r7_73,r9:r9_79
l00008CD0:
	word32 r12_158
	Mem83[r4_50:word32] = r5_62
	word32 r11_111 = Mem83[r5_62:word32]
	bool Z_122 = SLICE(cond(r11_111), bool, 1)
	branch r11_111 == 0<32> l00008D24
l00008CD8:
	word32 r12_109
	word32 r3_103
	word32 r0_100
	word32 r1_101
	word32 r2_102
	word32 r4_104
	word32 r6_106
	word32 r9_113
	word32 r5_105
	word32 r7_107
	call Mem83[r7_53 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_95,r0:r0_91,r1:r1_92,r10:r10_96,r11:r11_84,r12:r3_89,r2:r2_93,r3:r3_89,r4:r4_82,r5:r5_81,r6:r6_94,r7:r7_87,r9:r9_97
		defs: lr:lr_108,r0:r0_100,r1:r1_101,r10:r10_112,r11:r11_111,r12:r12_109,r2:r2_102,r3:r3_103,r4:r4_104,r5:r5_105,r6:r6_106,r7:r7_107,r9:r9_113
	branch CONVERT(SLICE(r12_109, byte, 0), byte, word32) == 0<32> l00008D1E
l00008D1E:
	r11_111 = Mem83[r5_105 + 4<i32>:word32]
	Z_122 = SLICE(cond(r11_111), bool, 1) (alias)
	branch r11_111 != 0<32> l00008CF8
l00008CF8:
	word32 r12_147
	call Mem83[r7_107 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_133,r0:r0_128,r1:r1_129,r10:r10_134,r11:Mem83[r11_120:word32],r12:r3_126,r2:r2_130,r3:r3_126,r4:r4_131,r5:r5_118,r6:r6_132,r7:r7_124,r9:r9_135
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r10:r10_150,r11:r11_149,r12:r12_147,r2:r2_140,r3:r3_141,r4:r4_142,r5:r5_143,r6:r6_144,r7:r7_145
	r9_113 = Mem83[r5_105 + 4<i32>:word32]
	branch CONVERT(SLICE(r12_147, byte, 0), byte, word32) == 0<32> l00008D1C
l00008D1C:
	r5_105 = r9_113
l00008D06:
	r12_158 = Mem83[r9_113:word32]
	Z_122 = SLICE(cond(r2_102), bool, 1) (alias)
	branch r2_102 == 0<32> l00008D26
l00008D24:
	r12_158 = 0<32>
l00008CE2:
	r12_158 = Mem83[r5_105:word32]
	Z_122 = SLICE(cond(r2_102), bool, 1) (alias)
	branch r2_102 == 0<32> l00008D26
l00008D26:
	r10Out = r10_112
	r11Out = r11_111
	r12Out = r12_158
	lrOut = lr_108
	return Z_122
l00008CE8:
	r9_113 = Mem83[r5_105 + 4<i32>:word32]
	Z_122 = SLICE(cond(r9_113), bool, 1) (alias)
	branch r9_113 == 0<32> l00008CF4
l00008CF4:
	Mem181[r5_105:word32] = r9_113
	r10Out = r10_112
	r11Out = r11_111
	r12Out = r12_158
	lrOut = lr_108
	return Z_122
l00008CEE:
	Mem192[r5_105:word32] = Mem83[r9_113:word32]
l00008D0C:
	Mem197[r5_105 + 4<i32>:word32] = Mem194[r9_113 + 4<i32>:word32]
	Mem199[r9_113:word32] = 0<32>
	Mem202[r9_113 + 4<i32>:word32] = Mem199[r7_107 + 36<i32>:word32]
	Mem203[r7_107 + -28<i32>:word32] = r9_113
	r10Out = r10_112
	r11Out = r11_111
	r12Out = r12_158
	lrOut = lr_108
	return Z_122
fn00008CAA_exit:


bool fn00008DF4(word32 r4, word32 r5, word32 r7, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
//      fn000090C0
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00008DF4_entry:
l00008DF4:
	word32 r12_22 = Mem17[r12 + 36<i32>:word32]
	word32 r6_19 = 0x00008DF8<p32> - Mem17[0x00008E0E<p32>:word32]
	bool Z_24 = SLICE(cond(r12_22), bool, 1)
	branch r12_22 == 0<32> l00008E08
l00008E08:
	word32 lr_31
	word32 r12_32
	byte VNZC_35
	call Mem17[r6_19 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,r12:8<32>,r4:r4,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_31,r12:r12_32,VNZC:VNZC_35
	r12Out = r12_32
	lrOut = lr_31
	return SLICE(VNZC_35, bool, 1)
l00008E02:
	Mem42[r12 + -28<i32>:word32] = Mem17[r12_22 + 4<i32>:word32]
	r12Out = r12_22
	lrOut = lr
	return Z_24
fn00008DF4_exit:


void fn00008E14(word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00008E14_entry:
l00008E14:
	word32 r6_102 = 0x00008E18<p32> - Mem17[0x00008E82<p32>:word32]
	word32 r7_104 = r12
	branch Mem17[r12 + 32<i32>:word32] == 0<32> l00008E4A
l00008E22:
	branch Mem17[r12 + 16<i32>:word32] == 0<32> l00008E4A
l00008E28:
	word32 r4_28 = Mem17[r12:word32]
l00008E44:
	branch r4_28 <u Mem17[r7_104 + 4<i32>:word32] l00008E2C
l00008E2C:
	branch Mem17[r4_28:word32] == 0<32> l00008E42
l00008E32:
	word32 r5_38 = r4_28
l00008E3E:
	branch r5_38 != 0<32> l00008E36
l00008E36:
	word32 r5_52
	call Mem17[r7_104 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_48,r12:Mem17[r5_39:word32],r4:r4_46,r5:r5_39,r6:r6_47,r7:r7_44
		defs: lr:lr_55,r4:r4_51,r5:r5_52,r6:r6_53,r7:r7_54
	r5_38 = Mem17[r5_52 + 4<i32>:word32]
l00008E42:
	r4_28 = r4_28 + 8<32>
l00008E4A:
	word32 r4_103 = Mem17[r7_104:word32]
l00008E60:
	branch r4_103 <u Mem17[r7_104 + 4<i32>:word32] l00008E4E
l00008E4E:
	word32 r5_72 = Mem17[r4_103 + 4<i32>:word32]
l00008E58:
	branch r5_72 != 0<32> l00008E52
l00008E52:
	call Mem17[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_82,r12:r5_73,r4:r4_80,r5:Mem17[r5_73 + 4<i32>:word32],r6:r6_79,r7:r7_81
		defs: lr:lr_89,r4:r4_85,r5:r5_86,r6:r6_87,r7:r7_88
l00008E5E:
	r4_103 = r4_103 + 8<32>
l00008E66:
	word32 r5_109 = Mem17[r7_104 + 36<i32>:word32]
l00008E70:
	branch r5_109 != 0<32> l00008E6A
l00008E6A:
	call Mem17[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_105,r12:r5_96,r4:r4_103,r5:Mem17[r5_96 + 4<i32>:word32],r6:r6_102,r7:r7_104
		defs: lr:lr_112,r4:r4_108,r5:r5_109,r6:r6_110,r7:r7_111
l00008E76:
	word32 r4_118
	word32 r5_119
	word32 r6_120
	word32 r7_121
	word32 lr_122
	call Mem17[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_105,r12:Mem17[r7_104:word32],r4:r4_103,r5:r5_96,r6:r6_102,r7:r7_104
		defs: lr:lr_122,r4:r4_118,r5:r5_119,r6:r6_120,r7:r7_121
	call Mem17[r6_120 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_122,r12:r7_121,r4:r4_118,r5:r5_119,r6:r6_120,r7:r7_121
	return
fn00008E14_exit:


bool fn00008E88(word32 r3, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r7:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00008E88_entry:
l00008E88:
	word32 r3_286
	word32 r6_31 = 0x00008E8C<p32> - Mem29[0x00008F5E<p32>:word32]
	bool Z_357 = SLICE(cond(r10), bool, 1)
	branch r10 == 0<32> l00008F56
l00008E9C:
	Z_357 = SLICE(cond(r9), bool, 1) (alias)
	branch r9 == 0<32> l00008F56
l00008EA0:
	word32 r12_58
	byte VNZC_62
	word32 r5_53
	call Mem29[r6_31 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r8,r1:r10,r10:r10,r11:r11,r12:0x28<32>,r2:r9,r3:r3,r4:r12,r5:r11,r6:r6_31,r7:r7,r8:r8,r9:r9
		defs: lr:lr_56,r12:r12_58,r5:r5_53,VNZC:VNZC_62
	Z_357 = SLICE(VNZC_62, bool, 1) (alias)
	branch Z_357 l00008F56
l00008EAA:
	branch r5_53 != 0<32> l00008EB6
l00008EB2_1:
	r5_53 = 0x00009234<p32>
l00008EB6:
	Mem72[r12_58 + 20<i32>:word32] = r5_53
	word32 r12_75
	word32 r1_79
	word32 r2_80
	word32 r6_84
	word32 r7_85
	word32 r4_134
	word32 r5_118
	word32 r10_119
	word32 r11_117
	word32 r9_121
	word32 r8_120
	word32 r0_78 = fn00008BE0(r12_58, out r1_79, out r2_80, out r3_286, out r4_134, out r5_118, out r6_84, out r7_85, out r8_120, out r9_121, out r10_119, out r11_117, out r12_75)
	word32 r12_129 = CONVERT(SLICE(r12_75, byte, 0), byte, word32)
	branch r12_129 == 0<32> l00008F50
l00008EBE:
	r9_121 = CONVERT(Mem72[r5_118 + 16<i32>:byte], byte, word32)
	branch SLICE(r9_121, byte, 0) != 0<8> l00008EE8
l00008ECA:
	word32 r12_102
	fn0001013A(r4_134, out r12_102)
	word32 r12_110 = fn0000FD70(Mem72[r5_118 + 8<i32>:word32], r12_102)
	r11_117 = Mem72[0x00008F5E<p32>:word32]
	r5_118 = r12_110
	branch fn0000F9D0(r11_117, r12_110, out r8_120, out r9_121, out r10_119) l00008F50
l00008EE0:
	r11_117 = fn000101B2(r12_110, out r12_129)
	r4_134 = r12_129
l00008EE8:
	r8_120 = Mem72[0x00008F64<p32>:word32]
	branch r4_134 >u r8_120 l00008F50
l00008EF0:
	branch r4_134 <=u 9<32> l00008EF6
l00008EF2_1:
	r12_129 = r4_134
l00008EF6:
	branch r4_134 >u 9<32> l00008EFA
l00008EF6_1:
	r12_129 = 0xA<32>
l00008EFA:
	word32 r12_149 = r12_129 | 1<u32>
l00008F00:
	r10_119 = 3<32>
	lr = 9<32>
l00008F08:
	r11_117 = r10_119 + 1<32>
	branch lr >=u r12_149 l00008F1C
l00008F10:
	lr = lr + (r11_117 << 2<8>)
	branch r9_121 != 0<32> l00008F06
l00008F06:
	r10_119 = r10_119 + 2<32>
l00008F1C:
	branch r9_121 == 0<32> l00008EFE
l00008EFE:
	r12_149 = r12_149 + 2<32>
l00008F24:
	r8_120 = Mem72[0x00008F60<p32>:word32]
	Mem186[r7_85 + 8<i32>:word32] = r12_149
	branch r12_149 >u r8_120 l00008F50
l00008F2E:
	word32 r12_206
	bool Z_209 = fn0000CCF0(r4_134, r5_118, r7_85, 8<32>, r12_149, lr, out r8_120, out r9_121, out r11_117, out r12_206, out lr)
	Mem211[r7_85:word32] = r12_206
	branch Z_209 l00008F50
l00008F50:
	byte VNZC_285
	call Mem221[r6_84 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_252,r0:r0_78,r1:r1_79,r10:r10_255,r11:r11_257,r12:r7_85,r2:r2_80,r3:r3_81,r4:r4_250,r5:r5_251,r6:r6_84,r7:r7_85,r8:r8_262,r9:r9_260
		defs: lr:lr_279,VNZC:VNZC_285
	Z_357 = SLICE(VNZC_285, bool, 1) (alias)
l00008F56:
	r3_286 = 0<32>
l00008F38:
	word32 r8_289 = r12_206 + (Mem211[r7_85 + 8<i32>:word32] << 3<8>)
	Mem291[r7_85 + -28<i32>:word32] = 0<32>
	Mem292[r7_85 + 4<i32>:word32] = r8_289
	Mem293[r7_85 + 24<i32>:word32] = r1_79
	Mem294[r7_85 + 28<i32>:word32] = r2_80
	Mem295[r7_85 + -32<i32>:word32] = r0_78
	Mem296[r7_85 + 12<i32>:word32] = 0<32>
	Mem297[r7_85 + 16<i32>:word32] = 0<32>
	Z_357 = SLICE(cond(r8_289), bool, 1) (alias)
l00008F58:
	r12Out = r3_286
	lrOut = lr
	return Z_357
fn00008E88_exit:


word32 fn00008F68(word32 r2, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000901C
//      fn000090C0
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r7:[0..31]
// LiveOut: lr r10 r11 r12 r2
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn00008F68_entry:
l00008F68:
	word32 r6_31 = 0x00008F6C<p32> - Mem29[0x0000901A<p32>:word32]
	word32 r12_41
	word32 lr_42
	branch fn00008E88(r12, r7, Mem29[r12 + 32<i32>:word32], Mem29[r12 + 28<i32>:word32], Mem29[r12 + 24<i32>:word32], Mem29[r12 + 20<i32>:word32], r11, lr, out r12_41, out lr_42) l00009014
l00008F7E_thunk_fn00008FEC:
	word32 lr_52
	word32 r10_55
	word32 r11_56
	word32 r12_57
	word32 r2_58 = fn00008FEC(r2, r12, r12_41, r6_31, lr_42, out r10_55, out r11_56, out r12_57, out lr_52)
	r10Out = r10_55
	r11Out = r11_56
	r12Out = r12_57
	lrOut = lr_52
	return r2_58
l00008F80:
	word32 r2_71 = Mem29[r12:word32]
	Mem72[r12_41 + -28<i32>:word32] = Mem29[r12 + 36<i32>:word32]
l00008F86_thunk_fn00008FEC:
	word32 lr_73
	word32 r10_76
	word32 r11_77
	word32 r12_78
	word32 r2_79 = fn00008FEC(r2_71, r12, r12_41, r6_31, lr_42, out r10_76, out r11_77, out r12_78, out lr_73)
	r10Out = r10_76
	r11Out = r11_77
	r12Out = r12_78
	lrOut = lr_73
	return r2_79
fn00008F68_exit:


word32 fn00008FEA(ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008FEC
// MayUse: 
// LiveOut: lr r10 r11 r12 r2
// Trashed: VNZC r2
// Preserved: sp
fn00008FEA_entry:
l00008FEA:
l00008FEA_thunk_fn00008FEC:
	word32 r10_22
	word32 r11_23
	word32 r12_24
	word32 lr_25
	word32 r2_7 = fn00008FEC(r2 + 8<32>, r3, r4, r6, lr, out r10_22, out r11_23, out r12_24, out lr_25)
	r10Out = <invalid>
	r11Out = <invalid>
	r12Out = <invalid>
	lrOut = <invalid>
	return r2_7
fn00008FEA_exit:


word32 fn00008FEC(word32 r2, word32 r3, word32 r4, word32 r6, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
//      fn00008FEA
// MayUse:  lr:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r6:[0..31]
// LiveOut: lr r10 r11 r12 r2
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00008FEC_entry:
l00008FEC:
	branch r2 <u Mem0[r3 + 4<i32>:word32] l00008F88
l00008F88:
	branch Mem0[r2:word32] == 0<32> l00008FEA
l00008F8C_thunk_fn00008FEA:
	word32 r11_19
	word32 r12_20
	word32 r10_164
	word32 lr_163
	word32 r2_15 = fn00008FEA(out r10_164, out r11_19, out r12_20, out lr_163)
	r10Out = r10_164
	r11Out = r11_19
	r12Out = r12_20
	lrOut = lr_163
	return r2_15
l00008F8E:
	word32 r7_123 = r2
l00008FE6:
	branch r7_123 != 0<32> l00008F92
l00008F92:
	word32 r4_64
	word32 r1_31 = Mem30[r7_123:word32]
	word32 r4_46
	word32 r12_48
	word32 r5_49
	word32 r6_50
	word32 r7_44
	word32 r1_45
	word32 r10_166
	word32 r11_183
	call Mem30[r4 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,r1:r1_31,r11:Mem30[r4_32 + 8<i32>:word32],r12:r1_31,r2:r2_38,r3:r3_37,r4:r4_46,r5:Mem30[r4_32:word32],r6:r6_50
		defs: r1:r1_45,r10:r10_166,r11:r11_47,r12:r12_48,r2:r2_43,r3:r3_41,r4:r4_46,r5:r5_49,r6:r6_50,r7:r7_44
	word32 r5_55 = r5_49 + (r12_48 << 3<8>)
	r4 = r4_46
	branch r5_55 <u Mem30[r4_46 + 4<i32>:word32] l00008FAC
l00008FA8:
	word32 r6_68
	call Mem30[r6_50 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_99,r2:r2_43,r3:r3_41,r4:r4_64,r6:r6_68
		defs: r1:r1_63,r10:r10_168,r11:r11_65,r2:r2_61,r3:r3_59,r4:r4_64,r5:r5_67,r6:r6_68,r7:r7_62
	r4 = r4_64
l00008FAC:
	word32 r9_74 = Mem30[r5_55:word32]
	word32 r0_76 = Mem30[r7_44 + 4<i32>:word32]
	branch r9_74 == 0<32> l00008FD0
l00008FD0:
	Mem80[r5_55:word32] = r1_45
	Mem84[r4 + 12<i32>:word32] = Mem80[r4 + 12<i32>:word32] + 1<32>
	branch r7_44 == r2 l00008FE4
l00008FDC:
	Mem88[r7_44:word32] = r9_74
	Mem90[r7_44 + 4<i32>:word32] = Mem88[r4 + 36<i32>:word32]
	Mem91[r4 + -28<i32>:word32] = r7_44
l00008FB4:
	branch r7_44 != r2 l00008FC8
l00008FC8:
	Mem95[r7_44 + 4<i32>:word32] = Mem30[r5_55 + 4<i32>:word32]
	Mem96[r5_55 + 4<i32>:word32] = r7_44
l00008FB8:
	word32 r12_101
	branch fn00008DF4(r4, r5_55, r7_44, r4, lr, out r12_101, out lr) l00009014
l00009014:
	r10Out = r10_166
	r11Out = r11_183
	r12Out = r12_101
	lrOut = lr
	return dwLoc0C
l00008FBE:
	Mem119[r12_101 + 4<i32>:word32] = Mem30[r5_55 + 4<i32>:word32]
	Mem120[r5_55 + 4<i32>:word32] = r12_101
	Mem121[r12_101:word32] = r1_45
l00008FE4:
	r7_123 = r0_76
l00008FE8_thunk_fn00008FEA:
	word32 r10_169
	word32 r11_131
	word32 r12_132
	word32 lr_137
	word32 r2_127 = fn00008FEA(out r10_169, out r11_131, out r12_132, out lr_137)
	r10Out = r10_169
	r11Out = r11_131
	r12Out = r12_132
	lrOut = lr_137
	return r2_127
l00008FF0_thunk_fn00008FF2:
	word32 r12_145 = fn00008FF2(r3, r6)
	r10Out = r10_143
	r11Out = r11_144
	r12Out = r12_145
	lrOut = lr_140
	return r2_146
fn00008FEC_exit:


word32 fn00008FF2(word32 r3, word32 r6)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008F68
// MayUse:  r3:[0..31] r6:[0..31]
// LiveOut: r12
// Trashed: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn00008FF2_entry:
l00008FF2:
	word32 r3_8
	word32 r6_10
	word32 r4_11
	call Mem0[r6 + 12<i32>:word32] (retsize: 0;)
		uses: r12:Mem0[r3:word32],r3:r3,r6:r6
		defs: r3:r3_8,r4:r4_11,r6:r6_10
	word32 r9_22 = Mem0[r4_11:word32]
	word32 r10_23 = Mem0[r4_11 + 4<i32>:word32]
	word32 r11_24 = Mem0[r4_11 + 8<i32>:word32]
	word32 lr_25 = Mem0[r4_11 + 12<i32>:word32]
	word32 r8_26 = Mem0[r4_11 + 36<i32>:word32]
	Mem28[r3_8 + -28<i32>:word32] = r8_26
	Mem29[r3_8:word32] = r9_22
	Mem30[r3_8 + 4<i32>:word32] = r10_23
	Mem31[r3_8 + 8<i32>:word32] = r11_24
	Mem32[r3_8 + 12<i32>:word32] = lr_25
	call Mem32[r6_10 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_25,r10:r10_23,r11:r11_24,r12:r4_11,r3:r3_8,r6:r6_10,r8:r8_26,r9:r9_22
	return dwLoc24
fn00008FF2_exit:


void fn0000901C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000901C_entry:
l0000901C:
	word32 lr_39
	word32 r12_274
	word32 r10_272
	word32 r11_273
	branch fn00008CAA(r0, r1, r2, r3, r4, r5, 0x00009022<p32> - Mem29[0x000090BC<p32>:word32], r12, 1<32>, fp - 0x28<32>, r11, r12, lr, out r10_272, out r11_273, out r12_274, out lr_39) l000090B6
l00009030:
	Mem53[r12 + 16<i32>:word32] = Mem29[r12 + 16<i32>:word32] - 1<32>
	branch Mem53[dwLoc28:word32] != 0<32> l000090B6
l0000903E:
	word32 r8_57 = Mem53[r12 + 12<i32>:word32]
	Mem61[r12 + 12<i32>:word32] = r8_57 - 1<32>
	word32 r12_65
	fn0001013A(r8_57 - 1<32>, out r12_65)
	word32 r12_76
	word32 r12_83
	fn00010050(fn0001013A(Mem61[r12 + 8<i32>:word32], out r12_76), Mem61[Mem61[r12 + 20<i32>:word32]:word32], r12_76, out r12_83)
	word32 r9_276
	word32 r10_277
	word32 r8_275
	branch fn0000FA0E(r12_83, r12_65, out r8_275, out r9_276, out r10_277) l000090B6
l00009064:
	word32 r2_109
	word32 r7_114
	word32 r11_286
	word32 r12_287
	word32 r9_284
	word32 r10_285
	word32 r6_282
	word32 r8_283
	word32 r4_280
	word32 r5_281
	word32 r1_278
	word32 r3_279
	fn00008BE0(r12, out r1_278, out r2_109, out r3_279, out r4_280, out r5_281, out r6_282, out r7_114, out r8_283, out r9_284, out r10_285, out r11_286, out r12_287)
	word32 r3_120 = Mem61[r7_114 + 20<i32>:word32]
	word32 r12_125
	fn0001013A(Mem61[r7_114 + 8<i32>:word32], out r12_125)
	word32 r12_135
	word32 r12_144
	fn00010050(fn0001013A(Mem61[r7_114 + 12<i32>:word32], out r12_135), Mem61[r3_120:word32], r12_125, out r12_144)
	word32 r8_288
	word32 r9_289
	word32 r10_290
	branch fn0000FA0E(r12_144, r12_135, out r8_288, out r9_289, out r10_290) l000090B6
l0000908E:
	word32 r11_176
	word32 r12_168
	word32 r9_162 = CONVERT(Mem61[r3_120 + 16<i32>:byte], byte, word32)
	branch SLICE(r9_162 - r2_109, byte, 0) == 0<8> l0000909E
l0000909E:
	r9_162 = fn00010050(r9_162, Mem61[r3_120 + 4<i32>:word32], r12_125, out r12_168)
	r11_176 = Mem61[r3_120 + 8<i32>:word32]
l00009098:
	r11_176 = Mem61[r3_120 + 4<i32>:word32]
	r12_168 = r12_125
l000090A8:
	word32 r12_183
	fn00010050(r9_162, r11_176, r12_168, out r12_183)
	word32 r12_192
	fn000101B2(r12_183, out r12_192)
	word32 r10_291
	word32 r11_292
	word32 r12_293
	word32 lr_294
	fn00008F68(r2_109, r7_114, r12_192, r7_114, lr_39, out r10_291, out r11_292, out r12_293, out lr_294)
l000090B6:
	return
fn0000901C_exit:


bool fn000090C0(word32 r0, word32 r1, word32 r3, word32 r4, word32 r5, word32 r11, word32 r12, word32 lr, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000511C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: Z lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000090C0_entry:
l000090C0:
	word32 sp_30 = fp - 0x28<32>
	word32 r6_32 = 0x000090C6<p32> - Mem29[0x00009198<p32>:word32]
	word32 r2_140 = r11
	word32 r7_36 = r12
	branch r11 != 0<32> l000090D4
l000090D0:
	call Mem29[r6_32 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r11:r11,r12:r12,r2:r11,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r12
		defs: lr:lr_48,r0:r0_40,r1:r1_41,r11:r11_49,r12:r12_50,r2:r2_42,r3:r3_43,r4:r4_44,r5:r5_45,r6:r6_46,r7:r7_47,sp:sp_39
l000090D4:
	word32 r1_139 = r12_72
	word32 r12_72
	word32 lr_245
	word32 r10_124
	word32 r11_123
	branch fn00008CAA(r0, r1, r2_140, r3, r4, r5, r6_32, r7_36, 0<32>, sp_30, r11, r12, lr, out r10_124, out r11_123, out r12_72, out lr_245) l00009196
l000090E0:
	word32 r9_81 = Mem29[sp_30:word32]
	branch Mem29[r9_81:word32] == 0<32> l00009104
l00009104:
	Mem85[r9_81:word32] = r2_140
	word32 r9_86 = Mem85[r7_36 + 12<i32>:word32]
	Mem92[r7_36 + 16<i32>:word32] = Mem85[r7_36 + 16<i32>:word32] + 1<32>
	Mem93[r7_36 + 12<i32>:word32] = r9_86 + 1<32>
	word32 r12_97
	fn0001013A(r9_86 + 1<32>, out r12_97)
	word32 r12_108
	word32 r12_115
	fn00010050(fn0001013A(Mem93[r7_36 + 8<i32>:word32], out r12_108), Mem93[Mem93[r7_36 + 20<i32>:word32] + 8<i32>:word32], r12_108, out r12_115)
	r11_123 = r12_97
	word32 r8_368
	word32 r9_369
	branch fn0000FA0E(r12_97, r12_115, out r8_368, out r9_369, out r10_124) l00009194
l00009130:
	word32 r7_145
	word32 r10_376
	word32 r11_377
	word32 r12_378
	word32 r5_372
	word32 r9_375
	word32 r6_373
	word32 r8_374
	word32 r4_371
	word32 r3_370
	fn00008BE0(r7_36, out r1_139, out r2_140, out r3_370, out r4_371, out r5_372, out r6_373, out r7_145, out r8_374, out r9_375, out r10_376, out r11_377, out r12_378)
	word32 r3_151 = Mem93[r7_145 + 20<i32>:word32]
	word32 r0_152 = Mem93[r3_151 + 8<i32>:word32]
	word32 r12_157
	fn0001013A(Mem93[r7_145 + 8<i32>:word32], out r12_157)
	word32 r12_167
	word32 r12_176
	fn00010050(fn0001013A(Mem93[r7_145 + 12<i32>:word32], out r12_167), r12_157, r0_152, out r12_176)
	r11_123 = r12_167
	word32 r9_380
	word32 r8_379
	branch fn0000FA0E(r12_167, r12_176, out r8_379, out r9_380, out r10_124) l00009194
l0000915A:
	word32 r11_207
	word32 r12_199
	word32 r9_193 = CONVERT(Mem93[r3_151 + 16<i32>:byte], byte, word32)
	branch SLICE(r9_193 - r1_139, byte, 0) == 0<8> l0000916A
l0000916A:
	r9_193 = fn00010050(r9_193, Mem93[r3_151 + 12<i32>:word32], r12_157, out r12_199)
	r11_207 = r0_152
l00009164:
	r11_207 = Mem93[r3_151 + 12<i32>:word32]
	r12_199 = r12_157
l00009174:
	word32 r12_214
	fn00010050(r9_193, r11_207, r12_199, out r12_214)
	r11_123 = Mem93[0x000091A0<p32>:word32]
	word32 r8_381
	word32 r9_382
	branch fn0000F9D0(r11_123, r12_214, out r8_381, out r9_382, out r10_124) l00009196
l00009182:
	word32 r12_235
	fn000101B2(r12_214, out r12_235)
	word32 r12_250
	r2_140 = fn00008F68(r2_140, r7_145, r12_235, r7_145, lr_245, out r10_124, out r11_123, out r12_250, out lr_245)
	word32 r12_264 = CONVERT(SLICE(r12_250, byte, 0), byte, word32)
	branch r12_264 != 0<32> l00009194
l00009190_1:
	r2_140 = r12_264
l00009194:
	r1_139 = r2_140
l000090E8:
	word32 r12_272
	branch fn00008DF4(r4, r5, r7_36, r7_36, lr_245, out r12_272, out lr_245) l00009196
l000090EE:
	Mem279[r12_272:word32] = r2_140
	Mem283[r12_272 + 4<i32>:word32] = Mem279[Mem279[sp_30:word32] + 4<i32>:word32]
	Mem285[Mem283[sp_30:word32] + 4<i32>:word32] = r12_272
	Mem289[r7_36 + 16<i32>:word32] = Mem285[r7_36 + 16<i32>:word32] + 1<32>
	r1_139 = r2_140
l00009196:
	r10Out = r10_124
	r11Out = r11_123
	r12Out = r1_139
	lrOut = lr_245
	return SLICE(cond(fp - 36<i32>), bool, 1)
fn000090C0_exit:


word32 fn00009248(word32 r10, word32 r11, word32 r12, word32 pc, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009248_entry:
l00009248:
	word32 r4_119 = r10
	word32 r5_120 = r11
	branch r12 == 1<32> l000092A2
l00009258:
	word64 r9_r8_41 = Mem29[pc + 84<i32>:word64]
	r8 = SLICE(r9_r8_41, word32, 0) (alias)
	word32 r12_190
	branch __avr32_f64_cmp_lt(r8, SLICE(r9_r8_41, word32, 32), r10, r11, out r9, out r12_190, out lr) l000092A2
l00009262:
	word32 r8_93
	word32 r11_55
	word32 r10_54 = fn0000F792(r10, r11, out r11_55)
	branch r12 == 0<32> l00009276
l00009276:
	word32 r10_69
	word32 r11_70
	word32 r9_191
	word32 lr_192
	fn000101CC(r10_54, r11_55, pc, out r9_191, out r10_69, out r11_70, out lr_192)
	word32 r5_87 = r12
	word32 r12_193
	branch __avr32_f64_cmp_eq(r10, r11, r10_69, r11_70, out r12_193) l0000928A
l00009286_1:
	r5_87 = 1<32>
l0000928A:
	r8_93 = CONVERT(SLICE(r5_87 - r12, byte, 0) != 0<8>, bool, word32)
l00009272:
	r8_93 = 0<32>
l00009290:
	word32 r10_100 = r8_93 + r10_54
	word32 r10_110
	word32 r11_111
	r8 = fn000101CC(r10_100, r11_55 + (r10_100 <u 0<32>), pc, out r9, out r10_110, out r11_111, out lr)
	r4_119 = r10_110
	r5_120 = r11_111
l000092A2:
	r9Out = r9
	r10Out = r4_119
	r11Out = r5_120
	lrOut = lr
	return r8
fn00009248_exit:


word32 fn000092B4(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000092D8
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr
// Trashed: VNZC lr r10 r11 r12
// Preserved: r4 r5 r6 r7 sp
fn000092B4_entry:
l000092B4:
	word32 r6_19 = 0x000092B8<p32> - Mem17[0x000092D2<p32>:word32]
	byte VNZC_31
	call Mem17[r6_19 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr,r12:Mem17[r6_19 + 748<i32>:word32],r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: VNZC:VNZC_31
	branch SLICE(VNZC_31, bool, 1) l000092CC
l000092CC:
	return <invalid>
l000092C4:
	return <invalid>
fn000092B4_exit:


void fn000092D8(word32 r0, word32 r1, word32 r4, word32 r5, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000092D8_entry:
l000092D8:
	word32 lr_115
	word32 r5_112
	word32 r4_208
	word32 sp_130 = fp - 0x28<32>
	word32 r6_213 = 0x000092DE<p32> - Mem29[0x000093B0<p32>:word32]
	word32 r7_102 = r12
	word32 r2_109 = r11
	word32 r3_111 = r10
	branch r12 != 0<32> l0000930C
l000092EA:
	word32 r4_47
	word32 r5_48
	word32 r12_52
	word32 r11_53
	word32 r10_54
	byte VNZC_57
	call Mem29[r6_213 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:r11,r12:Mem29[r6_32 + 744<i32>:word32],r2:r11,r3:r10,r4:r4,r5:r5,r6:r6_32,r7:r12
		defs: lr:lr_51,r0:r0_43,r1:r1_44,r10:r10_54,r11:r11_53,r12:r12_52,r2:r2_45,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,sp:sp_42,VNZC:VNZC_57
	r7_102 = r12_52
	branch SLICE(VNZC_57, bool, 1) l0000930C
l000092F6:
	word32 r5_67
	word32 r12_71
	byte VNZC_76
	call Mem29[r6_213 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,r0:r0_43,r1:r1_44,r10:r10_54,r11:r11_53,r12:Mem29[r6_49 + 740<i32>:word32],r2:r2_45,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,r7:r12_52
		defs: lr:lr_70,r0:r0_62,r1:r1_63,r12:r12_71,r2:r2_64,r3:r3_65,r4:r4_66,r5:r5_67,r6:r6_68,sp:sp_61,VNZC:VNZC_76
	r7_102 = r12_71
	branch SLICE(VNZC_76, bool, 1) l0000930C
l0000930C:
	word32 r8_83 = r7_102 + 1<i32>
	branch SLICE(CONVERT(Mem29[r7_102:byte], byte, word32) - 0x27<32>, byte, 0) == 0<8> l00009322
l00009322:
	r7_102 = r8_83
	r5_112 = 4<32>
l0000931E:
	r5_112 = 0<32>
l00009326:
	word32 r12_118
	fn00006DDC(r0, r1, r2_109, r3_111, 0x000099B4<p32>, r5_112, r6_213, r7_102, 4<32>, 0x000099B4<p32>, Mem29[r6_213 + 752<i32>:word32], r7_102, lr, out r12_118, out lr_115)
	r4_208 = 0x000099B4<p32>
	bool N_122 = <invalid>
	bool V_121 = <invalid>
	branch N_122 | V_121 l0000934A
l0000934A:
	branch fn0000CAE0(r1, 0x000099B4<p32>, Mem29[r6_213 + 736<i32>:word32], r3_111, 0<32>, sp_130, r7_102, lr_115, out lr_115) l00009360
l00009360:
	Mem144[r2_109:word32] = 0<32>
l0000935C:
	word32 r10_145 = Mem29[sp_130:word32]
l0000938C:
	branch SLICE(CONVERT(Mem29[r7_102:byte], byte, word32) - 0x39<32>, byte, 0) >u 0<8> l00009366
l00009366:
	branch r7_102 != r10_145 l0000938A
l0000938A:
	r7_102 = r7_102 + 1<32>
l0000936A:
	r5_112 = r5_112 | 0x80<u32>
	branch SLICE(CONVERT(Mem29[r7_102 + -1<i32>:byte], byte, word32) - 0x42<32>, byte, 0) != 0<8> l00009386
l00009378:
	r5_112 = r5_112 | 0x100<u32>
	branch SLICE(CONVERT(Mem29[r7_102 + -2<i32>:byte], byte, word32) - 0x69<32>, byte, 0) != 0<8> l0000939A
l00009386:
	r5_112 = r5_112 | 0x20<u32>
l0000933A:
	r5_112 = r5_112 | Mem29[0x000099B4<p32> + r12_118 * 4<32>:word32]
	Mem178[r3_111:word64] = 1<64>
l00009302:
	lr_115 = fn000092B4(r4_208, r5_67, r6_213, r12_71, lr)
	word64 r11_r10_335 = <invalid>
	Mem189[r3_111:word64] = r11_r10_335
	r5_112 = r12_71
l0000939A:
	Mem195[r2_109:word32] = r5_112
l0000939E:
	word64 r9_r8_201 = Mem200[r3_111:word64]
	branch SLICE(r9_r8_201, word32, 32) != SLICE(cond(SLICE(r9_r8_201, word32, 0)), bool, 0) l000093B0
l000093A8:
	fn000092B4(r4_208, r5_112, r6_213, r7_102, lr_115)
	word64 r11_r10_336 = <invalid>
	Mem234[r3_111:word64] = r11_r10_336
l000093B0:
	return
fn000092D8_exit:


word32 fn000093B8(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r9, word32 r12, word64 qwArg00, word64 qwArg08, word32 dwArg10, word32 dwArg14, word64 qwArg18, word32 dwArg24, word32 dwArg28, word32 dwArg38, word32 dwArg3C, word32 dwArg40, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004374
//      fn00004864
//      fn00004968
//      fn0000511C
// MayUse:  r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31] Stack +0000:[0..63] Stack +0008:[0..63] Stack +0010:[0..31] Stack +0014:[0..31] Stack +0018:[0..63] Stack +0024:[0..31] Stack +0028:[0..31] Stack +0038:[0..31] Stack +003C:[0..31] Stack +0040:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000093B8_entry:
	word32 dwArg0C_1220 = SLICE(qwArg08, word32, 0)
	word32 dwArg08_1223 = SLICE(qwArg08, word32, 32)
	word32 dwArg04_1222 = SLICE(qwArg00, word32, 0)
	word32 dwArg00_1256 = SLICE(qwArg00, word32, 32)
	word32 dwArg1C_1244 = SLICE(qwArg18, word32, 0)
	word32 dwArg18_1246 = SLICE(qwArg18, word32, 32)
l000093B8:
	word32 r6_32 = 0x000093BE<p32> - Mem29[0x00009510<p32>:word32]
	word32 r11_46 = SLICE(qwArg08, word32, 32)
	word32 r9_44 = 0x3E8<32>
	branch (r9 & 0x20<32>) == 0<32> l000093E8
l000093E4_1:
	r9_44 = 0x400<32>
l000093E8:
	word32 r10_59 = SLICE(r9, word2, 0)
	word32 sp_76
	word32 r0_77
	word32 r1_78
	word32 r2_79
	word32 r4_81
	word32 r6_83
	word32 r7_84
	word32 lr_85
	word32 r9_86
	word32 r10_88
	word32 r12_89
	call Mem67[r6_32 + 436<i32>:word32] (retsize: 0;)
		uses: lr:fp,r0:r0,r1:r1,r10:r10_59,r11:r11_46,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r12,r8:SLICE(qwArg00, word32, 0),r9:SLICE(qwArg00, word32, 32),Stack +000C:qwArg00,Stack +0024:r10_59,Stack +0028:r9_55,Stack +009C:qwArg00,Stack +00A4:qwArg08
		defs: lr:lr_85,r0:r0_77,r1:r1_78,r10:r10_88,r12:r12_89,r2:r2_79,r4:r4_81,r6:r6_83,r7:r7_84,r9:r9_86,sp:sp_76
	word32 r11_93 = Mem67[sp_76 + 20<i32>:word32]
	word32 r3_96 = Mem67[r12_89:word32]
	Mem101[sp_76:word32] = r11_93 & 0x10<32>
	Mem102[sp_76 + 56<i32>:word32] = r7_84 + 0x288<32>
	word32 sp_103
	word32 r0_104
	word32 r1_105
	word32 r4_108
	word32 r5_109
	word32 r6_110
	word32 r7_111
	word32 lr_112
	word32 r10_115
	word32 r12_116
	word32 r11_117
	word32 r3_107
	call Mem102[r6_83 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_85,r0:r0_77,r1:r1_78,r10:r10_88,r11:r11_93 & 0x10<32>,r12:r3_96,r2:r2_79,r3:r3_96,r4:r4_81,r5:r12_89,r6:r6_83,r7:r7_84,r8:r7_84 + 0x288<32>,r9:r9_86,Stack +0000:qwArg00,Stack +0008:qwArg08
		defs: lr:lr_112,r0:r0_104,r1:r1_105,r10:r10_115,r11:r11_117,r12:r12_116,r3:r3_107,r4:r4_108,r5:r5_109,r6:r6_110,r7:r7_111,sp:sp_103
	word32 r2_120 = Mem102[r5_109 + 4<i32>:word32]
	word32 r8_121 = Mem102[r6_110 + 732<i32>:word32]
	word32 r9_122 = r12_116 - 1<32>
	branch r12_116 <u 0x11<32> l00009428
l00009424_1:
	r3_107 = r8_121
l00009428:
	branch r12_116 >=u 0x11<32> l0000942C
l00009428_1:
	r9_122 = r12_116
l0000942C:
	branch r12_116 <u 0x11<32> l00009430
l0000942C_1:
	r9_122 = 1<32>
l00009430:
	word32 r12_196
	Mem137[sp_103 + 64<i32>:word32] = r9_122
	Mem141[sp_103 + 60<i32>:word32] = r3_107
	word32 r5_149 = Mem141[r5_109 + 8<i32>:word32]
	Mem150[sp_103 + 68<i32>:word32] = r5_149
	word32 r2_178
	word32 r5_181
	word32 r12_188
	word32 pc_190
	word32 r4_180
	word32 r0_176
	word32 r1_1002
	word32 r7_1007
	word32 r6_1025
	call Mem150[r6_110 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_112,r0:r0_104,r1:r1_105,r10:r10_115,r11:r11_117,r12:r2_120,r2:r2_120,r3:r3_140,r4:r4_108,r5:r5_149,r6:r6_110,r7:r7_111,r9:r9_131,Stack +0000:qwArg00,Stack +0008:qwArg08
		defs: pc:pc_190,r0:r0_176,r1:r1_177,r12:r12_188,r2:r2_178,r4:r4_180,r5:r5_181,r6:r6_182,r7:r7_183
	word32 sp_1018 = fp
	word64 qwArg0C_1221 = SEQ(dwArg0C_1220, dwArg10)
	word32 r8_193 = Mem150[r6_1025 + 728<i32>:word32]
	r12_196 = r12_188
	branch r12_188 >u 0x10<32> l0000944C
l00009448_1:
	r12_196 = r2_178
l0000944C:
	branch r12_188 <=u 0x10<32> l00009450
l0000944C_1:
	r12_196 = r8_193
l00009450:
	word64 qwArg2C_1241
	word32 lr_1014
	word32 r3_364
	word64 qwArg04_1224 = SEQ(dwArg04_1222, dwArg08_1223)
	branch dwArg04_1222 - dwArg0C_1220 >u SLICE(cond(dwArg08_1223 - dwArg10), bool, 0) l000094AE
l000094AE:
	word64 qwArg0C_1228 = SEQ(dwArg0C_1220, dwArg10)
	branch dwArg0C_1220 == SLICE(cond(dwArg10), bool, 0) l00009546
l000094B8:
	word32 r11_236
	branch r11_236 != SLICE(cond(fn00010A4C(SEQ(dwArg04_1222, dwArg08_1223), qwArg0C_1228, out r11_236)), bool, 0) l00009546
l000094CA:
	word32 r11_1513
	word32 lr_1514
	word32 r9_1511
	word32 r10_1512
	fn000107C0(dwArg10, dwArg0C_1220, dwArg08_1223, dwArg04_1222, out r9_1511, out r10_1512, out r11_1513, out lr_1514)
	word64 r11_r10_1481 = <invalid>
	word32 r11_274
	word32 r10_273 = fn00010A4C(qwArg18, r11_r10_1481, out r11_274)
	word32 r11_256 = SLICE(r11_r10_1481, word32, 32)
	word32 r10_255 = SLICE(r11_r10_1481, word32, 0)
	word32 r11_294
	word32 r10_293 = fn00010A4C(SEQ(r11_274 * 0xA<32>, r10_273 *u 0xA<32>), r11_r10_1481, out r11_294)
	r1_1002 = r11_256
	r0_176 = r10_255
	word32 r11_305 = r11_294 * 2<32> + (r10_293 * 2<32> <u 0<32>)
	branch r11_305 - r11_256 >=u SLICE(cond(r10_293 * 2<32> - r10_255), bool, 0) l00009518
l00009518:
	bool C_311 = SLICE(cond(r10_255 - r10_293 * 2<32>), bool, 0)
	branch r11_256 - r11_305 <u C_311 l00009522
l0000951E_1:
	r4_180 = 2<32>
l00009522:
	branch r11_256 - r11_305 >=u C_311 l00009526
l00009522_1:
	r4_180 = 3<32>
l0000950A:
	r4_180 = CONVERT((r11_305 | r10_293 * 2<32>) != 0<32>, bool, word32)
l00009526:
	word32 r11_1517
	word32 lr_1518
	word32 r9_1515
	word32 r10_1516
	fn000107C0(r10_255, r11_256, SLICE(qwArg18, word32, 0), SLICE(qwArg18, word32, 32), out r9_1515, out r10_1516, out r11_1517, out lr_1518)
	word32 r10_355
	word32 r9_1519
	word32 r11_1520
	fn000107C0(r10_255, r11_256, r10_273 *u 0xA<32>, r11_274 * 0xA<32>, out r9_1519, out r10_355, out r11_1520, out lr_1014)
	word64 r11_r10_1482 = <invalid>
	qwArg2C_1241 = r11_r10_1482
	r3_364 = r10_355
l00009460:
	word32 r11_367
	branch r11_367 != SLICE(cond(fn00010A4C(qwArg0C_1221, qwArg04_1224, out r11_367)), bool, 0) l00009546
l0000946A:
	word32 r10_386
	word32 r11_387
	word32 lr_1509
	word32 r9_1508
	fn000107C0(dwArg08_1223, dwArg04_1222, dwArg10, dwArg0C_1220, out r9_1508, out r10_386, out r11_387, out lr_1509)
	word64 r11_r10_398 = r10_386 *u dwArg1C_1244
	word32 dwArg30_1249 = SLICE(r11_r10_398, word32, 0)
	word32 r11_406 = dwArg18_1246 * r10_386 + SLICE(r11_r10_398, word32, 32)
	word32 r10_413
	word32 r11_414
	word32 r9_1510
	fn000107C0(r10_386, r11_387, dwArg30_1249, r11_406, out r9_1510, out r10_413, out r11_414, out lr_1014)
	qwArg2C_1241 = SEQ(r11_406, dwArg30_1249) (alias)
	branch r11_414 - SLICE(qwArg18, word32, 32) != SLICE(cond(r10_413 - SLICE(qwArg18, word32, 0)), bool, 0) l00009546
l00009546:
	word32 r10_438
	word32 r11_439
	word32 r9_1501
	word32 lr_1502
	fn000101CC(SLICE(qwArg18, word32, 0), SLICE(qwArg18, word32, 32), pc_190, out r9_1501, out r10_438, out r11_439, out lr_1502)
	word32 r10_453
	word32 r11_454
	word32 r9_1503
	word32 lr_1504
	fn000101CC(dwArg10, dwArg0C_1220, pc_190, out r9_1503, out r10_453, out r11_454, out lr_1504)
	word32 r10_468
	word32 r11_469
	word32 lr_1506
	word32 r9_1505
	fn000101CC(dwArg08_1223, dwArg04_1222, pc_190, out r9_1505, out r10_468, out r11_469, out lr_1506)
	word32 r10_482
	word32 r11_483
	word32 r9_1507
	__avr32_f64_div(r10_453, r10_468, r11_469, r10_453, r11_454, out r9_1507, out r10_482, out r11_483)
	word32 r11_496
	word32 r10_495 = __avr32_f64_mul(r10_482, r11_483, r10_438, r11_439, out r11_496)
	branch dwArg00_1256 != 0<32> l000095AA
l000095AA:
	word64 r5_r4_510 = Mem430[pc_190 + 278<i32>:word64]
	word32 r4_513 = SLICE(r5_r4_510, word32, 0)
	word32 r5_514 = SLICE(r5_r4_510, word32, 32)
l000095B0_thunk_fn000095B2:
	word32 lr_515
	word32 r10_516
	word32 r11_517
	word32 r12_518
	word32 r3_520
	word32 r4_521
	word32 r5_522
	word32 r2_519 = fn000095B2(r4_513, r5_514, dwArg28, out r3_520, out r4_521, out r5_522, out r10_516, out r11_517, out r12_518, out lr_515)
	r1Out = r11_496
	r2Out = r2_519
	r3Out = r3_520
	r4Out = r4_521
	r5Out = r5_522
	r6Out = r6_1025
	r7Out = r7_1007
	r10Out = r10_516
	r11Out = r11_517
	r12Out = r12_518
	lrOut = lr_515
	return r10_495
l00009588:
	word32 lr_532
	word32 r9_1529
	word32 r11_1531
	word32 r10_1530
	fn00009248(r10_495, r11_496, dwArg24, pc_190, out r9_1529, out r10_1530, out r11_1531, out lr_532)
	word64 r11_r10_1488 = <invalid>
	word32 r0_560
	word32 r1_561
	word32 r2_562
	word32 r3_563
	word32 r4_564
	word32 r5_565
	word32 r6_566
	word32 r7_567
	word32 lr_568
	word32 r9_569
	word32 r10_571
	word32 r11_573
	call Mem547[r6_1025 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_532,r0:r10_495,r1:r11_496,r10:SLICE(r11_r10_1488, word32, 0),r11:Mem547[r6_182 + 364<i32>:word32],r12:r7_183,r2:r10_453,r3:r11_454,r4:dwArg00_1256,r5:r5_181,r6:r6_182,r7:r7_183,r9:0xFFFFFFFF<32>,Stack +0000:qwArg00,Stack +0008:qwArg08,Stack +0010:qwArg08,Stack +0018:dwArg10,Stack +0020:qwArg18,Stack +002C:dwArg24,Stack +0030:dwArg28,Stack +003C:0xFFFFFFFF<32>
		defs: lr:lr_568,r0:r0_560,r1:r1_561,r10:r10_571,r11:r11_573,r2:r2_562,r3:r3_563,r4:r4_564,r5:r5_565,r6:r6_566,r7:r7_567,r9:r9_569
	word32 sp_577
	word32 r6_584
	word32 r7_585
	word32 lr_586
	word32 r12_590
	call Mem547[r6_566 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_568,r0:r0_560,r1:r1_561,r10:r10_571,r11:r11_573,r12:r7_567,r2:r2_562,r3:r3_563,r4:r4_564,r5:r5_565,r6:r6_566,r7:r7_567,r9:r9_569,Stack +0000:qwArg00,Stack +0008:qwArg08,Stack +0010:dwArg10,Stack +0018:qwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28
		defs: lr:lr_586,r12:r12_590,r6:r6_584,r7:r7_585,sp:sp_577
l000095A8_thunk_fn0000967A:
	word32 r1_595
	word32 r10_596
	word32 r11_597
	word32 r12_598
	word32 r2_599
	word32 r3_600
	word32 r4_601
	word32 r5_602
	word32 r6_603
	word32 r7_604
	word32 r0_594 = fn0000967A(r6_584, r7_585, r12_590, Mem547[sp_577 + 28<i32>:word32], Mem547[sp_577 + 64<i32>:word32], Mem547[sp_577 + 80<i32>:word32], out r1_595, out r2_599, out r3_600, out r4_601, out r5_602, out r6_603, out r7_604, out r10_596, out r11_597, out r12_598)
	r1Out = r1_595
	r2Out = r2_599
	r3Out = r3_600
	r4Out = r4_601
	r5Out = r5_602
	r6Out = r6_603
	r7Out = r7_604
	r10Out = r10_596
	r11Out = r11_597
	r12Out = r12_598
	lrOut = lr_586
	return r0_594
l000094AC:
l00009696:
	r3_364 = 0<32>
	r4_180 = 0<32>
l0000969A:
	word32 r5_1024
	branch dwArg00_1256 != 0<32> l000096A8
l000096A8:
	r1_1002 = 0<32>
	r0_176 = dwArg28
	branch 0<32> - SLICE(qwArg2C_1241, word32, 32) <=u SLICE(cond(dwArg28 - SLICE(qwArg2C_1241, word32, 0)), bool, 0) l000096D0
l000096D0:
	word32 dwArg34_1280 = 0<32>
l000096D4:
	word32 r11_1525
	word32 r3_658 = r3_364 + fn00010A4C(qwArg2C_1241, CONVERT(dwArg28, word32, uint64), out r11_1525) *u 0xA<32>
	word32 r10_1527
	word32 r11_1528
	word32 r9_1526
	fn000107C0(dwArg28, 0<32>, SLICE(qwArg2C_1241, word32, 0), SLICE(qwArg2C_1241, word32, 32), out r9_1526, out r10_1527, out r11_1528, out lr_1014)
	word64 r11_r10_1487 = <invalid>
	word32 r5_678 = (r4_180 >> 1<32>) + (r3_658 << 1<8>)
	word32 r2_661 = r3_658 /u dwArg28
	r7_1007 = dwArg28
	qwArg2C_1241 = r11_r10_1487
	word32 r8_679 = r5_678 + r4_180
	r3_364 = r2_661
	branch dwArg28 <u r8_679 l00009714
l00009710_1:
	r4_180 = 2<32>
l00009714:
	branch dwArg28 >=u r8_679 l00009718
l00009714_1:
	r4_180 = 3<32>
l00009718:
	branch r5_678 >=u dwArg28 l00009720
l0000971C:
	r4_180 = CONVERT(r8_679 != 0<32>, bool, word32)
l00009720:
	dwArg34_1280 = dwArg34_1532 + 1<32>
	branch 0<32> - r11_667 >u SLICE(cond(dwArg28 - r10_666), bool, 0) l0000973A
l00009734:
	dwArg34_1532 = dwArg34_1280
	branch dwArg34_1532 <= 6<32> l000096D4
l0000973A:
	branch r11_667 <=u SLICE(cond(r10_666 - 9<32>), bool, 0) l0000974A
l0000974A:
	word32 r9_744
	branch dwArg24 != 1<32> l0000975C
l0000975C:
	r9_744 = CONVERT(dwArg24 == 0<32>, bool, word32) & CONVERT(r4_180 > 0<32>, bool, word32)
l00009750:
	r9_744 = CONVERT(SLICE(r2_661, bool, 0) + r4_180 > 2<32>, bool, word32)
l00009768:
	branch r9_744 == 0<32> l0000999E
l0000976E:
	r3_364 = r2_661 + 1<32>
	branch r2_661 != 9<32> l0000999C
l0000999C:
	r4_180 = 0<32>
l0000999E:
	branch r3_364 != 0<32> l000097A6
l000099A4:
l00009776:
	word32 r10_771 = SLICE(r11_r10_1487, word32, 0)
	word32 r11_776 = SLICE(r11_r10_1487, word32, 32) + (r10_771 <u 1<32>)
	qwArg2C_1241 = SEQ(r11_776, r10_771 + 1<32>)
	branch r11_776 != SLICE(cond(r10_771 - 9<32>), bool, 0) l00009794
l00009794:
	r3_364 = 0<32>
	r4_180 = 0<32>
l00009798:
	branch Test(NE,SLICE(dwArg14, bool, 3)) l000097A6
l000097A6:
	word32 r9_802 = r3_364 + 0x30<32>
	Mem805[dwArg38 - 1<32>:byte] = SLICE(r9_802, byte, 0)
	word32 r5_798 = dwArg38 - 1<32> - dwArg40
	call Mem805[r6_1025 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_665,r0:dwArg28,r1:0<32>,r10:dwArg40,r11:dwArg3C,r12:r5_798,r2:r2_661,r3:r3_800,r4:r4_836,r5:r5_798,r6:r6_182,r7:dwArg28,r8:dwArg38 - 1<32>,r9:r9_802,Stack +0000:qwArg00,Stack +0008:qwArg08,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:qwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +003C:dwArg3C,Stack +0040:dwArg40
		defs: lr:lr_863,r0:r0_855,r1:r1_856,r5:r5_860,r6:r6_861,r7:r7_862,sp:sp_854
l000097A0:
	r5_1024 = dwArg38
	r3_364 = 0<32>
l0000978E:
	r5_1024 = dwArg38
l000097C0:
	r3_364 = 0<32>
	r4_180 = 0<32>
l00009746:
	r5_1024 = dwArg38
l000096BA:
	r5_1024 = dwArg38
l000096A0:
	r5_1024 = dwArg38
	r7_1007 = 0xFFFFFFFF<32>
l000097C2:
	word32 r8_910
	branch Mem886[sp_1018 + 36<i32>:word32] != 1<32> l000097EA
l000097EA:
	word32 r8_906
	branch Mem886[sp_1018 + 36<i32>:word32] == 0<32> l000097F4
l000097F4:
	r8_906 = CONVERT(r4_180 + r3_364 <= 0<32>, bool, word32) ^ 0x10000<32>
l000097F0:
	r8_906 = 0<32>
l00009800:
	r8_910 = CONVERT(SLICE(r8_906, byte, 0), byte, word32)
l000097C8:
	word32 r10_921 = (Mem886[sp_1018 + 0x2C<32>:word32] & 1<32>) + r4_180
	r8_910 = CONVERT(CONVERT((SLICE(cond(r10_921), bool, 0) | r10_921) != 0<32>, bool, word32) + r3_364 > 5<32>, bool, word32)
l00009802:
	branch r8_910 == 0<32> l0000985E
l00009806:
	word64 r11_r10_940 = Mem886[sp_1018 + 44<i32>:word64]
	word32 r10_943 = SLICE(r11_r10_940, word32, 0)
	Mem950[sp_1018 + 44<i32>:word64] = SEQ(SLICE(r11_r10_940, word32, 32) + (r10_943 <u 1<32>), r10_943 + 1<32>)
	branch Mem950[sp_1018:word32] == 0<32> l0000985E
l0000981E:
	word64 r11_r10_954 = Mem950[sp_1018 + 44<i32>:word64]
	branch SLICE(r11_r10_954, word32, 32) != SLICE(cond(SLICE(r11_r10_954, word32, 0) - Mem950[sp_1018 + 40<i32>:word32]), bool, 0) l0000985E
l0000982E:
	word32 r10_963 = Mem950[sp_1018 + 52<i32>:word32]
	branch r10_963 > 7<32> l0000985E
l00009836:
	word32 r8_966 = Mem950[sp_1018 + 20<i32>:word32]
	Mem971[sp_1018 + 52<i32>:word32] = r10_963 + 1<32>
	word64 r3_r2_1483 = 1<64>
	branch (r8_966 & 8<32>) != 0<32> l0000985A
l00009842:
	word32 r8_973 = Mem971[sp_1018 + 64<i32>:word32]
	word32 r9_978 = r5_1024 - 1<32>
	word32 r11_981 = Mem971[sp_1018 + 60<i32>:word32]
	Mem985[r9_978:byte] = 0x30<8>
	word32 r5_979 = r9_978 - r8_973
	word64 r3_r2_1489
	call Mem985[r6_1025 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_1014,r0:r0_991,r1:r1_998,r10:r8_973,r11:r11_981,r12:r5_979,r2:1<32>,r3:0<32>,r4:r4_894,r5:r5_979,r6:r6_987,r7:r7_1007,r8:0x30<32>,r9:r9_978,Stack +0000:qwArg00,Stack +0008:qwArg08,Stack +0010:dwArg10,Stack +0014:dwArg14,Stack +0018:qwArg18,Stack +0024:dwArg24,Stack +0028:dwArg28,Stack +0038:dwArg38,Stack +003C:dwArg3C,Stack +0040:dwArg40
		defs: r5:r5_1024,r6:r6_1025,Sequence r3:r2:r3_r2_1489,sp:sp_1018
	r3_r2_1483 = r3_r2_1489 (alias)
l0000985A:
	Mem1039[sp_1018 + 44<i32>:word64] = r3_r2_1483
l0000985E:
	word32 r1_1042 = r5_1024
l00009860:
	r1_1042 = r1_1042 - 1<i32>
	word32 r11_1521
	Mem1068[r1_1042:byte] = SLICE(fn00010A4C(qwArg2C_1241, 0xA<64>, out r11_1521) + 0x30<32>, byte, 0)
	word32 lr_1071
	word32 r10_1523
	word32 r11_1524
	word32 r9_1522
	fn000107C0(0xA<32>, 0<32>, SLICE(qwArg2C_1241, word32, 0), SLICE(qwArg2C_1241, word32, 32), out r9_1522, out r10_1523, out r11_1524, out lr_1071)
	word64 r11_r10_1486 = <invalid>
	qwArg2C_1241 = r11_r10_1486
	branch SLICE(r11_r10_1486, word32, 32) != SLICE(cond(SLICE(r11_r10_1486, word32, 0)), bool, 0) l00009860
l00009888:
l00009888_thunk_fn0000988A:
	word32 r1_1093
	word32 r10_1094
	word32 r12_1095
	word32 r2_1096
	word32 r3_1097
	word32 r4_1098
	word32 r5_1099
	word32 r6_1100
	word32 r7_1101
	word32 r11_1103
	word32 r0_1092 = fn0000988A(r1_1042, r6_1025, r5_1024, dwArg14, r12_196, out r1_1093, out r2_1096, out r3_1097, out r4_1098, out r5_1099, out r6_1100, out r7_1101, out r10_1094, out r11_1103, out r12_1095)
	r1Out = r1_1093
	r2Out = r2_1096
	r3Out = r3_1097
	r4Out = r4_1098
	r5Out = r5_1099
	r6Out = r6_1100
	r7Out = r7_1101
	r10Out = r10_1094
	r11Out = r11_1103
	r12Out = r12_1095
	lrOut = lr_1071
	return r0_1092
fn000093B8_exit:


word32 fn000095B2(word32 r4, word32 r5, word32 dwArg28, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  r4:[0..31] r5:[0..31] Stack +0028:[0..31]
// LiveOut: lr r10 r11 r12 r2 r3 r4 r5
// Trashed: VNZC lr r10 r11 r12 r2 r3 r4 r5 r8 r9
// Preserved: sp
fn000095B2_entry:
l000095B2:
	word32 r11_7
	word32 r11_24
	__avr32_f64_mul(__avr32_u32_to_f64(dwArg28, out r11_7), r11_7, r4, r5, out r11_24)
l000095D4_thunk_fn000095D6:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg20 = <invalid>
	word32 stackArg32 = <invalid>
	word32 stackArg36 = <invalid>
	word32 stackArg56 = <invalid>
	word32 stackArg64 = <invalid>
	word32 stackArg72 = <invalid>
	word32 r12_42
	word32 r11_43
	word32 r3_44
	word32 r10_45
	word32 r4_49
	word32 r5_50
	word32 lr_51
	word32 r2_47 = fn000095D6(r0, r1, r2, r11_24, r6, r7, r8, r9, r10, r11, pc, stackArg20, stackArg32, stackArg36, dwArg34 + 1<32>, stackArg56, stackArg64, stackArg72, out r3_44, out r4_49, out r5_50, out r10_45, out r11_43, out r12_42, out lr_51)
	r3Out = r3_44
	r4Out = r4_49
	r5Out = r5_50
	r10Out = r10_45
	r11Out = r11_43
	r12Out = r12_42
	lrOut = lr_51
	return r2_47
fn000095B2_exit:


word32 fn000095D6(word32 r0, word32 r1, word32 r2, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 pc, word32 dwArg14, word32 dwArg20, word32 dwArg24, word32 dwArg34, word32 dwArg38, word32 dwArg40, word32 dwArg48, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095B2
// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0014:[0..31] Stack +0020:[0..31] Stack +0024:[0..31] Stack +0034:[0..31] Stack +0038:[0..31] Stack +0040:[0..31] Stack +0048:[0..31]
// LiveOut: lr r10 r11 r12 r2 r3 r4 r5
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn000095D6_entry:
l000095D6:
	word32 r11_9
	word32 lr_400
	word32 r12_399
	branch __avr32_f64_cmp_ge(__avr32_f64_mul(r8, r9, r10, r11, out r11_9), r11_9, r0, r1, out r12_399, out lr_400) l000095F2
l000095EA:
	branch dwArg34 <= 7<32> l000095B2
l000095EE_thunk_fn000095B2:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg40 = <invalid>
	word32 r10_37
	word32 r4_38
	word32 r11_40
	word32 r5_44
	word32 r12_45
	word32 r3_46
	word32 lr_51
	word32 r2_47 = fn000095B2(r4, r5_44, stackArg40, out r3_46, out r4_38, out r5_44, out r10_37, out r11_40, out r12_45, out lr_51)
	r3Out = r3_46
	r4Out = r4_38
	r5Out = r5_44
	r10Out = r10_37
	r11Out = r11_40
	r12Out = r12_45
	lrOut = lr_51
	return r2_47
l000095F2:
	word32 r9_401
	word32 r10_65
	word32 r11_66
	__avr32_f64_div(r2, r10, r5, r0, r1, out r9_401, out r10_65, out r11_66)
	word64 r11_r10_390 = <invalid>
	word32 r9_85
	word32 r10_105
	word32 r8_107
	word32 r11_108
	word32 r9_109
	word32 r0_110
	word32 r1_111
	word32 r5_112
	word32 r2_115
	word32 r7_116
	word32 r6_117
	word32 pc_118
	call Mem100[r6 + 100<i32>:word32] (retsize: 0;)
		uses: pc:pc,r0:r0,r1:r1,r10:SLICE(r11_r10_390, word32, 0),r11:Mem100[r6 + 724<i32>:word32],r12:r7,r2:r10_65,r4:dwArg40 + 1<32>,r5:r5,r6:r6,r7:r7,r8:fn00009248(r10_65, r11_66, dwArg24, pc, out r9_85, out r10_402, out r11_403, out lr_404),r9:r9_85,Stack +0000:r11_r10_390,Stack +002C:dwArg24,Stack +003C:dwArg34,Stack +0048:dwArg40
		defs: pc:pc_118,r0:r0_110,r1:r1_111,r10:r10_105,r11:r11_108,r2:r2_115,r5:r5_112,r6:r6_117,r7:r7_116,r8:r8_107,r9:r9_109
	word32 r4_124
	word32 r0_128
	word32 r1_129
	word32 r12_131
	word32 r3_132
	word32 r2_133
	word32 r7_134
	word32 r6_135
	word32 pc_136
	word32 lr_137
	word32 r8_125
	call Mem100[r6_117 + 16<i32>:word32] (retsize: 0;)
		uses: pc:pc_118,r0:r0_110,r1:r1_111,r10:r10_105,r11:r11_108,r12:r7_116,r2:r2_115,r5:r5_112,r6:r6_117,r7:r7_116,r8:r8_107,r9:r9_109,Stack +0024:dwArg24,Stack +0034:dwArg34,Stack +0040:dwArg40
		defs: lr:lr_137,pc:pc_136,r0:r0_128,r1:r1_129,r12:r12_131,r2:r2_133,r3:r3_132,r4:r4_124,r6:r6_135,r7:r7_134,r8:r8_125
	branch dwArg20 == 0<32> l00009628
l00009624_1:
	r8_125 = 1<32>
l00009628:
	branch dwArg20 != 0<32> l0000962C
l00009628_1:
	r8_125 = 2<32>
l0000962C:
	branch r8_125 + r4_124 <u r12_131 l0000964C
l00009634:
	branch Test(NE,SLICE(dwArg14, bool, 3)) l0000963A_thunk_fn0000967E
l0000963A_thunk_fn0000967E:
	word32 r10_170
	word32 r11_171
	word32 r12_172
	word32 r2_173
	word32 r3_174
	word32 r4_175
	word32 r5_176
	word32 r1_409
	word32 r6_410
	word32 r7_411
	fn0000967E(r12_131, r6_135, r7_134, dwArg14, dwArg38, dwArg48, out r1_409, out r2_173, out r3_174, out r4_175, out r5_176, out r6_410, out r7_411, out r10_170, out r11_171, out r12_172)
	r3Out = r3_174
	r4Out = r4_175
	r5Out = r5_176
	r10Out = r10_170
	r11Out = r11_171
	r12Out = r12_172
	lrOut = lr_137
	return r2_173
l0000963C:
	branch SLICE(CONVERT(Mem100[r12_131 + r7_134 + -1<i32>:byte], byte, word32) - 0x30<32>, byte, 0) != 0<8> l0000964A_thunk_fn0000967E
l0000964A_thunk_fn0000967E:
	word32 r10_192
	word32 r11_193
	word32 r12_194
	word32 r2_195
	word32 r3_196
	word32 r4_197
	word32 r5_198
	word32 r1_412
	word32 r6_413
	word32 r7_414
	fn0000967E(r12_131, r6_135, r7_134, dwArg14, dwArg38, dwArg48, out r1_412, out r2_195, out r3_196, out r4_197, out r5_198, out r6_413, out r7_414, out r10_192, out r11_193, out r12_194)
	r3Out = r3_196
	r4Out = r4_197
	r5Out = r5_198
	r10Out = r10_192
	r11Out = r11_193
	r12Out = r12_194
	lrOut = lr_137
	return r2_195
l0000964C:
	word64 r9_r8_211 = Mem100[pc_136 + 124<i32>:word64]
	word32 r9_405
	word32 r11_223
	word32 r10_239
	word32 r11_240
	word32 lr_406
	fn00009248(__avr32_f64_mul(SLICE(r9_r8_211, word32, 0), SLICE(r9_r8_211, word32, 32), r2_133, r3_132, out r11_223), r11_223, dwArg24, pc_136, out r9_405, out r10_239, out r11_240, out lr_406)
	word64 r9_r8_245 = Mem100[pc_136 + 104<i32>:word64]
	word64 r11_r10_391 = <invalid>
	word32 r9_252
	word32 r10_273
	word32 r8_275
	word32 r11_276
	word32 r9_277
	word32 r0_278
	word32 r1_279
	word32 r5_280
	word32 r2_283
	word32 r7_284
	word32 r6_285
	word32 pc_286
	call Mem262[r6_135 + 100<i32>:word32] (retsize: 0;)
		uses: pc:pc_136,r0:r0_128,r1:r1_129,r10:SLICE(r11_r10_391, word32, 0),r11:Mem262[r6_135 + 364<i32>:word32],r12:r7_134,r2:r2_133,r5:r12_131,r6:r6_135,r7:r7_134,r8:__avr32_f64_div(r2_133, SLICE(r9_r8_245, word32, 0), SLICE(r9_r8_245, word32, 32), r10_239, r11_240, out r9_252, out r10_407, out r11_408),r9:r9_252,Stack +0000:r11_r10_391,Stack +001C:dwArg14,Stack +0024:dwArg24,Stack +0028:dwArg20,Stack +002C:dwArg24,Stack +0034:dwArg34,Stack +003C:dwArg34,Stack +0040:dwArg40,Stack +0048:dwArg40,Stack +0050:dwArg48
		defs: pc:pc_286,r0:r0_278,r1:r1_279,r10:r10_273,r11:r11_276,r2:r2_283,r5:r5_280,r6:r6_285,r7:r7_284,r8:r8_275,r9:r9_277
	word32 sp_290
	word32 r12_299
	word32 r7_302
	word32 r6_303
	word32 lr_305
	call Mem262[r6_285 + 16<i32>:word32] (retsize: 0;)
		uses: pc:pc_286,r0:r0_278,r1:r1_279,r10:r10_273,r11:r11_276,r12:r7_284,r2:r2_283,r5:r5_280,r6:r6_285,r7:r7_284,r8:r8_275,r9:r9_277,Stack +0014:dwArg14,Stack +0020:dwArg20,Stack +0024:dwArg24,Stack +0034:dwArg34,Stack +0038:dwArg38,Stack +0040:dwArg40,Stack +0048:dwArg48
		defs: lr:lr_305,r12:r12_299,r6:r6_303,r7:r7_302,sp:sp_290
l00009676_thunk_fn0000967A:
	word32 r10_309
	word32 r11_310
	word32 r12_311
	word32 r2_312
	word32 r3_313
	word32 r4_314
	word32 r5_315
	word32 r1_415
	word32 r6_416
	word32 r7_417
	fn0000967A(r6_303, r7_302, r12_299, Mem262[sp_290 + 28<i32>:word32], Mem262[sp_290 + 64<i32>:word32], Mem262[sp_290 + 80<i32>:word32], out r1_415, out r2_312, out r3_313, out r4_314, out r5_315, out r6_416, out r7_417, out r10_309, out r11_310, out r12_311)
	r3Out = r3_313
	r4Out = r4_314
	r5Out = r5_315
	r10Out = r10_309
	r11Out = r11_310
	r12Out = r12_311
	lrOut = lr_305
	return r2_312
fn000095D6_exit:


word32 fn0000967A(word32 r6, word32 r7, word32 r12, word32 dwArg1C, word32 dwArg40, word32 dwArg50, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  r12:[0..31] r6:[0..31] r7:[0..31] Stack +001C:[0..31] Stack +0040:[0..31] Stack +0050:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000967A_entry:
l0000967A:
l0000967C_thunk_fn0000967E:
	word32 r1_11
	word32 r10_12
	word32 r11_13
	word32 r12_14
	word32 r2_15
	word32 r3_16
	word32 r4_17
	word32 r5_18
	word32 r6_19
	word32 r7_20
	word32 r0_10 = fn0000967E(r12, r6, r7, dwArg1C, dwArg40, dwArg50, out r1_11, out r2_15, out r3_16, out r4_17, out r5_18, out r6_19, out r7_20, out r10_12, out r11_13, out r12_14)
	r1Out = r1_11
	r2Out = r2_15
	r3Out = r3_16
	r4Out = r4_17
	r5Out = r5_18
	r6Out = r6_19
	r7Out = r7_20
	r10Out = r10_12
	r11Out = r11_13
	r12Out = r12_14
	return r0_10
fn0000967A_exit:


word32 fn0000967E(word32 r5, word32 r6, word32 r7, word32 dwArg14, word32 dwArg38, word32 dwArg48, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095D6
//      fn0000967A
// MayUse:  r5:[0..31] r6:[0..31] r7:[0..31] Stack +0014:[0..31] Stack +0038:[0..31] Stack +0048:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000967E_entry:
l0000967E:
	word32 r1_8 = dwArg38 - r5
	word32 r1_14
	word32 r5_17
	word32 r6_20
	word32 r4_22
	call Mem0[r6 + 576<i32>:word32] (retsize: 0;)
		uses: r1:r1_8,r10:r5,r11:r7,r12:r1_8,r5:r5,r6:r6,r7:r7,Stack +0038:dwArg38
		defs: r1:r1_14,r4:r4_22,r5:r5_17,r6:r6_20
	word32 r12_25 = r1_14 + r5_17 - r4_22
l00009694_thunk_fn0000988A:
	word32 r1_28
	word32 r10_29
	word32 r12_30
	word32 r2_31
	word32 r3_32
	word32 r4_33
	word32 r5_34
	word32 r6_35
	word32 r7_36
	word32 r11_38
	word32 r0_27 = fn0000988A(r1_14, r6_20, r12_25, dwArg14, dwArg48, out r1_28, out r2_31, out r3_32, out r4_33, out r5_34, out r6_35, out r7_36, out r10_29, out r11_38, out r12_30)
	r1Out = r1_28
	r2Out = r2_31
	r3Out = r3_32
	r4Out = r4_33
	r5Out = r5_34
	r6Out = r6_35
	r7Out = r7_36
	r10Out = r10_29
	r11Out = r11_38
	r12Out = r12_30
	return r0_27
fn0000967E_exit:


word32 fn0000988A(word32 r1, word32 r6, word32 r12, word32 dwArg14, word32 dwArg48, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn0000967E
// MayUse:  r1:[0..31] r12:[0..31] r6:[0..31] Stack +0014:[0..31] Stack +0048:[0..31]
// LiveOut: r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7
// Trashed: VNZC r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000988A_entry:
l0000988A:
	branch Test(NE,SLICE(dwArg14, bool, 2)) l000098F4
l00009892:
	word32 r5_10 = r12 - r1
	word32 sp_15
	word32 r9_26
	word32 r6_113
	call Mem0[r6 + 16<i32>:word32] (retsize: 0;)
		uses: r1:r1,r11:r1_18,r12:dwArg48,r3:r1 + r5_10,r5:r5_10,r6:r6,r9:r9_26,Stack +0014:dwArg14,Stack +0048:dwArg48
		defs: r1:r1_18,r6:r6_21,r9:r9_26,sp:sp_15
	word32 r12_256 = sp_15 + 0x4C<32>
l000098AC:
	word32 sp_41
	word32 r5_45
	word32 r3_46
	word32 r6_47
	word32 r7_50
	word32 r4_48
	call Mem37[r6_113 + 36<i32>:word32] (retsize: 0;)
		uses: r1:r1_39,r11:r11_56,r12:r12_38,r6:r6_36,r9:r9_57,Stack +0014:dwArg14,Stack +0048:dwArg48
		defs: r3:r3_46,r4:r4_48,r5:r5_45,r6:r6_47,r7:r7_50,sp:sp_41
	word32 r11_56 = Mem37[sp_41 + 68<i32>:word32]
	word32 r9_57 = CONVERT(Mem37[r11_56:byte], byte, word32)
	branch r9_57 == 0<32> l000098CA
l000098B8:
	branch SLICE(r9_57 - 0xFFFFFFFF<32>, byte, 0) == 0<8> l000098C4
l000098C0_1:
	r4_48 = r9_57
l000098C4:
	branch SLICE(r9_57 - 0xFFFFFFFF<32>, byte, 0) != 0<8> l000098C8
l000098C4_1:
	r4_48 = r5_45
l000098C8:
	Mem72[sp_41 + 68<i32>:word32] = r11_56 + 1<32>
l000098CA:
	branch r4_48 <=u r5_45 l000098D0
l000098CC_1:
	r4_48 = r5_45
l000098D0:
	word32 r5_88 = r5_45 - r4_48
	word32 r1_86 = r3_46 - r4_48
	word32 r5_111
	word32 r3_112
	word32 r9_118
	call Mem106[r6_47 + 36<i32>:word32] (retsize: 0;)
		uses: r1:r1_86,r10:r4_85,r11:sp_41 + 0x4C<32> + r5_88,r12:r1_86,r3:r1_86 - r7_50,r5:r5_88,r6:r6_47,r9:r9_118,Stack +0014:dwArg14,Stack +0048:dwArg48
		defs: r1:r1_110,r11:r11_117,r3:r3_112,r5:r5_111,r6:r6_113,r9:r9_118
	branch r5_111 == 0<32> l000098F4
l000098F4:
	branch Test(NE,SLICE(dwLoc88, bool, 7)) l000099A6
l000098FC:
	branch dwLoc68 >= 0<32> l00009936
l00009902:
	word32 r2_134 = 1<32>
	word32 r3_135 = 0<32>
	dwLoc68 = 0<32>
l0000992A:
	branch r3_135 - SLICE(qwLoc98, word32, 32) <u SLICE(cond(r2_134 - SLICE(qwLoc98, word32, 0)), bool, 0) l0000990C
l0000990C:
	dwLoc68 = dwLoc68 + 1<32>
	branch dwLoc68 == 7<32> l00009936
l00009916:
	word64 r3_r2_156 = r2_134 *u dwLoc74
	r2_134 = SLICE(r3_r2_156, word32, 0) (alias)
	r3_135 = r2_134 * 0<32> + SLICE(r3_r2_156, word32, 32)
l00009936:
	branch (dwLoc68 | dwLoc88 & 0x100<32>) == 0<32> l00009952
l00009942:
	branch Test(NE,SLICE(dwLoc88, bool, 6)) l00009952
l0000994A:
	Mem174[dwLoc64:byte] = 0x20<8>
	dwLoc64 = dwLoc64 + 1<i32>
l00009952:
	r11 = dwLoc68
	branch dwLoc68 == 0<32> l0000997A
l00009958:
	word32 r8_193
	branch dwLoc7C != 0<32> l00009966
l0000995E:
	branch dwLoc68 != 1<32> l00009966
l00009966:
	r8_193 = CONVERT(Mem178[dwLoc68 + 0x000099B4<p32> + 8<i32>:byte], byte, word32)
l00009962:
	r8_193 = 0x6B<32>
l00009974:
	Mem199[dwLoc64:byte] = SLICE(r8_193, byte, 0)
	r11 = dwLoc64 + 1<i32>
	dwLoc64 = dwLoc64 + 1<i32>
l0000997A:
	branch (dwLoc88 & 0x100<32>) == 0<32> l000099A6
l0000997E:
	branch dwLoc7C == 0<32> l00009992
l00009984:
	branch dwLoc68 == 0<32> l00009992
l0000998A:
	Mem218[dwLoc64:byte] = 0x69<8>
	dwLoc64 = dwLoc64 + 1<i32>
l00009992:
	Mem225[dwLoc64:byte] = 0x42<8>
	r11 = dwLoc64 + 1<i32>
	dwLoc64 = dwLoc64 + 1<i32>
l000099A6:
	Mem242[dwLoc64:byte] = 0<8>
	r1Out = dwLoc08
	r2Out = dwLoc0C
	r3Out = dwLoc10
	r4Out = dwLoc14
	r5Out = dwLoc18
	r6Out = dwLoc1C
	r7Out = dwLoc20
	r10Out = dwLoc64
	r11Out = r11
	r12Out = r1
	return dwLoc04
fn0000988A_exit:
l000098EC:
	r12_256 = r3_112


word32 fn00009A5C(word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004968
// MayUse:  lr:[0..31] r12:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8 r9
// Preserved: lr pc r10 r11 r4 r5 r6 r7 sp
fn00009A5C_entry:
l00009A5C:
	word32 r6_19 = 0x00009A60<p32> - Mem17[0x00009AC2<p32>:word32]
	word32 r12_24 = Mem17[Mem17[r6_19 + -20<i32>:word32]:word32]
l00009A76:
	word32 r7_109
	branch r12_24 != 0<32> l00009A6A
l00009A6A:
	branch Mem17[r12_24:word32] != r12 l00009A74
l00009A74:
	r12_24 = Mem17[r12_24 + 4<i32>:word32]
l00009A70:
	r7_109 = r12_24
l00009A7A:
l00009AA0:
	word32 r5_53
	word32 r4_42
	word32 r6_44
	word32 r7_45
	word32 lr_46
	word32 r12_48
	word32 r11_50
	byte VNZC_51
	word32 r10_131
	word32 pc_130
	call Mem17[r6_19 + 564<i32>:word32] (retsize: 0;)
		uses: lr:lr,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12,r4:r12,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_46,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12_48,r4:r4_42,r6:r6_44,r7:r7_45,VNZC:VNZC_51
	branch SLICE(VNZC_51, bool, 1) l00009A7C
l00009A7C:
	r5_53 = Mem17[r12_48:word32]
l00009AA8:
	r5_53 = Mem17[r6_44 + 360<i32>:word32]
l00009A7E:
	word32 r10_133
	word32 pc_132
	word32 r4_64
	word32 r5_65
	word32 r6_66
	word32 r7_67
	word32 lr_68
	word32 r12_70
	call Mem17[r6_44 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_46,pc:pc_132,r10:r10_133,r11:r11_101,r12:r5_55,r4:r4_42,r5:r5_55,r6:r6_44,r7:r7_45
		defs: lr:lr_68,pc:pc_132,r10:r10_133,r12:r12_70,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
	word32 r9_174
	word32 lr_76
	word32 r12_80
	word32 r11_175
	fn0000B95C(r4_64, r5_65, r6_66, r7_67, r12_70 + 9<32>, lr_68, out r9_174, out r11_175, out r12_80, out lr_76)
	Mem89[r12_80:word32] = r4_64
	word32 r6_95
	word32 r11_101
	call Mem89[r6_66 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_76,pc:pc_132,r10:r10_133,r11:r5_65,r12:r12_80 + 8<32>,r4:r4_64,r5:r5_65,r6:r6_66,r7:r12_80
		defs: r11:r11_101,r6:r6_95,r7:r7_96
	word32 r9_105 = Mem89[r6_95 + -20<i32>:word32]
	Mem107[r7_109 + 4<i32>:word32] = Mem89[r9_105:word32]
	Mem108[r9_105:word32] = r7_109
l00009AAE:
	word32 r12_112 = r7_109 + 8<32>
	branch Mem110[r7_109 + 8<i32>:byte] != 0<8> l00009AC0
l00009ABC_1:
	r12_112 = 0<32>
l00009AC0:
	return r12_112
fn00009A5C_exit:


word32 fn00009B5C(word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000330C
//      fn00003904
// MayUse:  lr:[0..31] r12:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8 r9
// Preserved: lr pc r10 r11 r4 r5 r6 r7 sp
fn00009B5C_entry:
l00009B5C:
	word32 r6_19 = 0x00009B60<p32> - Mem17[0x00009BC2<p32>:word32]
	word32 r12_24 = Mem17[Mem17[r6_19 + -20<i32>:word32] + 8<i32>:word32]
l00009B76:
	word32 r7_109
	branch r12_24 != 0<32> l00009B6A
l00009B6A:
	branch Mem17[r12_24:word32] != r12 l00009B74
l00009B74:
	r12_24 = Mem17[r12_24 + 4<i32>:word32]
l00009B70:
	r7_109 = r12_24
l00009B7A:
l00009BA0:
	word32 r5_53
	word32 r4_42
	word32 r6_44
	word32 r7_45
	word32 lr_46
	word32 r12_48
	word32 r11_50
	byte VNZC_51
	word32 r10_131
	word32 pc_130
	call Mem17[r6_19 + 464<i32>:word32] (retsize: 0;)
		uses: lr:lr,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12,r4:r12,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_46,pc:pc_130,r10:r10_131,r11:r11_50,r12:r12_48,r4:r4_42,r6:r6_44,r7:r7_45,VNZC:VNZC_51
	branch SLICE(VNZC_51, bool, 1) l00009B7C
l00009B7C:
	r5_53 = Mem17[r12_48:word32]
l00009BA8:
	r5_53 = Mem17[r6_44 + 360<i32>:word32]
l00009B7E:
	word32 r10_133
	word32 pc_132
	word32 r4_64
	word32 r5_65
	word32 r6_66
	word32 r7_67
	word32 lr_68
	word32 r12_70
	call Mem17[r6_44 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_46,pc:pc_132,r10:r10_133,r11:r11_101,r12:r5_55,r4:r4_42,r5:r5_55,r6:r6_44,r7:r7_45
		defs: lr:lr_68,pc:pc_132,r10:r10_133,r12:r12_70,r4:r4_64,r5:r5_65,r6:r6_66,r7:r7_67
	word32 r9_174
	word32 lr_76
	word32 r12_80
	word32 r11_175
	fn0000B95C(r4_64, r5_65, r6_66, r7_67, r12_70 + 9<32>, lr_68, out r9_174, out r11_175, out r12_80, out lr_76)
	Mem89[r12_80:word32] = r4_64
	word32 r6_95
	word32 r11_101
	call Mem89[r6_66 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_76,pc:pc_132,r10:r10_133,r11:r5_65,r12:r12_80 + 8<32>,r4:r4_64,r5:r5_65,r6:r6_66,r7:r12_80
		defs: r11:r11_101,r6:r6_95,r7:r7_96
	word32 r9_105 = Mem89[r6_95 + -20<i32>:word32]
	Mem107[r7_109 + 4<i32>:word32] = Mem89[r9_105 + 8<i32>:word32]
	Mem108[r9_105 + 8<i32>:word32] = r7_109
l00009BAE:
	word32 r12_112 = r7_109 + 8<32>
	branch Mem110[r7_109 + 8<i32>:byte] != 0<8> l00009BC0
l00009BBC_1:
	r12_112 = 0<32>
l00009BC0:
	return r12_112
fn00009B5C_exit:


word32 fn00009BC8(word32 r10, word32 r11, word32 r12, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009BC8_entry:
l00009BC8:
	word32 lr_111
	Mem23[r12 + 0x14<32>:byte] = 0<8>
	word32 r7_123 = r12 + 0x14<32>
	word64 r5_r4_168 = SEQ(r11, r10)
	word64 r5_r4_171 = SEQ(r11, r10)
	branch r11 >= SLICE(cond(r10), bool, 0) l00009C0E
l00009C0E:
	r7_123 = r7_123 - 1<i32>
	Mem58[r7_123:byte] = SLICE(__moddi3(r5_r4_168, 0xA<64>) + 0x30<32>, byte, 0)
	word32 r11_62
	word32 r10_61 = __avr32_sdiv64(r5_r4_168, 0xA<64>, out r11_62, out lr_111)
	r5_r4_168 = SEQ(r11_62, r10_61) (alias)
	branch r11_62 != SLICE(cond(r10_61), bool, 0) l00009C0E
l00009BE0:
	r7_123 = r7_123 - 1<i32>
	Mem100[r7_123:byte] = SLICE(0x30<32> - __moddi3(r5_r4_171, 0xA<64>), byte, 0)
	word32 r11_107
	word32 r10_106 = __avr32_sdiv64(r5_r4_171, 0xA<64>, out r11_107, out lr_111)
	r5_r4_171 = SEQ(r11_107, r10_106) (alias)
	branch r11_107 != SLICE(cond(r10_106), bool, 0) l00009BE0
l00009C08:
	Mem124[r7_123 - 1<i32>:byte] = 0x2D<8>
	r7_123 = r7_123 - 1<i32>
l00009C36:
	lrOut = lr_111
	return r7_123
fn00009BC8_exit:


word32 fn00009C40(word32 r0, word32 r1, word32 r2, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r10Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009C40
//      fn00009D6C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r9:[0..31]
// LiveOut: lr r0 r1 r10 r2 r3 r4 r5 r6
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009C40_entry:
l00009C40:
	word32 r6_32 = 0x00009C46<p32> - Mem29[0x00009D64<p32>:word32]
	branch r11 >u 2<32> l00009C70
l00009C70:
	word32 r1_53
	word32 r2_54
	word32 r4_451
	word32 r5_452
	word32 r3_187
	word32 r6_190
	word32 r0_184 = fn00009C40(r11 >>u 1<i32>, r1, r2, r9, r10, r11 - (r11 >>u 1<i32>), r12 + ((r11 >>u 1<i32>) << 2<8>), lr, out r1_53, out r2_54, out r3_187, out r4_451, out r5_452, out r6_190, out r10, out lr)
	word32 sp_183 = fp - 0x3C<32>
	branch r0_184 != 1<32> l00009C8E
l00009C8E:
	word32 r1_79
	word32 r2_80
	word32 r3_81
	word32 r4_82
	word32 lr_86
	word32 r5_103
	word32 r2_457
	word32 r5_453
	word32 r6_454
	word32 r10_455
	word32 r1_456
	word32 r3_101
	word32 r6_104
	word32 lr_106
	word32 r10_108
	word32 r4_102
	word32 r0_129 = fn00009C40(fn00009C40(r0_184, r1_53, r2_54, r9, r10, r0_184 - (r11 >>u 2<i32>), r3_187 + __align(r11, 4<i32>), lr, out r1_79, out r2_80, out r3_81, out r4_82, out r5_453, out r6_454, out r10_455, out lr_86), r1_79, r2_80, r9, r10, r4_82, r3_81, lr_86, out r1_456, out r2_457, out r3_101, out r4_102, out r5_103, out r6_104, out r10_108, out lr_106)
	word32 sp_120 = fp - 0x3C<32>
	word32 r1_113 = Mem50[r5_103:word32]
	word32 r2_115 = Mem50[r3_101:word32]
	word32 r5_116 = r10 + 4<32>
	word32 r7_118 = r4_102
	word32 r8_119 = 0<32>
l00009CBC:
	word32 r9_122 = Mem121[sp_120 + 4<i32>:word32]
	Mem128[sp_120:word32] = r8_119
	word32 r5_143
	word32 r9_149
	byte VNZC_152
	call r9_122 (retsize: 0;)
		uses: lr:lr_135,r0:r0_129,r1:r1_123,r10:r10_136,r11:r1_123,r12:r2_125,r2:r2_125,r3:r3_130,r4:r4_131,r5:r5_132,r6:r6_133,r7:r7_134,r8:r8_153,r9:r9_122
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r10:r10_148,r2:r2_140,r3:r3_141,r4:r4_142,r5:r5_143,r6:r6_144,r7:r7_145,r9:r9_149,sp:sp_137,VNZC:VNZC_152
	word32 r8_153 = Mem128[sp_120:word32]
	branch SLICE(VNZC_152, bool, 3) l00009CDC
l00009CDC:
	Mem155[r5_143 + -4<i32>:word32] = r1_113
	r7_118 = r7_118 + 1<32>
	branch r7_118 + 1<32> != r0_129 l00009CEA
l00009CEA:
	r1_113 = Mem155[r3_101 + (r7_118 + 1<32>) * 4<32>:word32]
	r8_119 = r8_153
l00009CE6:
	r7_118 = r8_153
l00009CCC:
	Mem161[r5_143 + -4<i32>:word32] = r2_115
	r8_119 = r8_153 + 1<32>
	branch r8_153 + 1<32> == r4_102 l00009CF0
l00009CF0:
	r4_102 = r0_129
l00009CF2:
	word32 r8_197
	call Mem176[r6_104 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_146,r0:r0_138,r1:r1_139,r10:r4_166 - r7_167 << 2<i32>,r11:r3_141 + (r7_167 << 2<8>),r12:r5_143,r2:r2_140,r3:r3_141,r4:r4_166,r5:r5_143,r6:r6_144,r7:r7_167,r8:r8_197,r9:r9_149
		defs: lr:lr_192,r0:r0_184,r10:r10_194,r3:r3_187,r6:r6_190,r8:r8_197,sp:sp_183
l00009CD6:
	r2_115 = Mem161[r3_101 + (r8_153 + 1<32>) * 4<32>:word32]
l00009CBA:
	r5_116 = r5_143 + 4<32>
l00009C86:
	Mem205[r10:word32] = Mem50[r3_187:word32]
l00009D02:
	word32 r9_209 = Mem207[sp_183 + 8<i32>:word32]
	word32 r2_210 = Mem207[Mem207[sp_183 + 16<i32>:word32]:word32]
	word32 r4_211 = Mem207[r9_209:word32]
	Mem218[sp_183 + 20<i32>:word32] = 1<32>
	word32 r5_214 = r3_187
	word32 r7_216 = r0_184
	word32 r1_217 = 0<32>
l00009D1E:
	word32 r5_241
	word32 r8_249
	byte VNZC_250
	call Mem220[sp_183 + 4<i32>:word32] (retsize: 0;)
		uses: lr:lr_232,r0:r0_226,r1:r1_227,r10:r10_233,r11:r2_222,r12:r4_224,r2:r2_222,r3:r3_228,r4:r4_224,r5:r5_229,r6:r6_230,r7:r7_231,r8:r8_249,r9:r9_234
		defs: lr:lr_244,r0:r0_236,r1:r1_237,r10:r10_246,r2:r2_238,r3:r3_239,r4:r4_240,r5:r5_241,r6:r6_242,r7:r7_243,r8:r8_249,sp:sp_235,VNZC:VNZC_250
	branch SLICE(VNZC_250, bool, 3) l00009D3A
l00009D3A:
	Mem252[r5_241:word32] = r2_210
	r7_216 = r7_216 + 1<32>
	branch r7_216 + 1<32> != Mem252[sp_183 + 12<i32>:word32] l00009D5C
l00009D5C:
	r2_210 = Mem252[r3_187 + (r7_216 + 1<32>) * 4<32>:word32]
l00009D44:
	word32 r9_258 = Mem252[sp_183 + 8<i32>:word32]
	word32 r8_259 = Mem252[sp_183 + 20<i32>:word32]
	call Mem252[r6_190 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_244,r0:r0_236,r1:r1_237,r10:r0_236 - r1_237 << 2<i32>,r11:r9_258 + (r1_237 << 2<8>),r12:r3_239 + (r8_259 << 2<8>),r2:r2_238,r3:r3_239,r4:r4_240,r5:r5_241,r6:r6_242,r7:r7_243 + 1<32>,r8:r8_259,r9:r9_258
		defs: lr:lr_275,r10:r10_277
l00009D2A:
	Mem282[r5_241:word32] = r4_211
	r1_217 = r1_217 + 1<32>
	branch r1_217 + 1<32> == r0_184 l00009D62
l00009D32:
	r4_211 = Mem282[Mem282[sp_183 + 8<i32>:word32] + (r1_217 + 1<32>) * 4<32>:word32]
l00009D16:
	word32 r9_290 = Mem289[sp_183 + 20<i32>:word32]
	Mem295[sp_183 + 20<i32>:word32] = r9_290 + 1<32>
	r5_214 = r5_241 + 4<32>
	r9_209 = r9_290 + 1<32>
l00009C56:
	branch r11 != 2<32> l00009D62
l00009C5A:
	word32 v19_298 = Mem38[r12:word32]
	word32 r7_301 = Mem38[r12 + 4<i32>:word32]
	word32 r3_308
	word32 r4_309
	word32 r5_310
	word32 r7_312
	word32 r8_318
	byte VNZC_319
	call r9 (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:r10,r11:r7_301,r12:v19_298,r2:r2,r3:r12,r4:v19_298,r5:r12 + 4<i32>,r6:r6_32,r7:r7_301,r8:r8_318,r9:r9
		defs: lr:lr_313,r10:r10_315,r3:r3_308,r4:r4_309,r5:r5_310,r7:r7_312,r8:r8_318,VNZC:VNZC_319
	branch SLICE(VNZC_319, bool, 3) l00009D62
l00009C6A:
	Mem321[r3_308:word32] = r7_312
	Mem322[r5_310:word32] = r4_309
l00009D62:
	r1Out = <invalid>
	r2Out = <invalid>
	r3Out = <invalid>
	r4Out = <invalid>
	r5Out = <invalid>
	r6Out = <invalid>
	r10Out = r10
	lrOut = lr
	return <invalid>
fn00009C40_exit:


word32 fn00009D6C(word32 r0, word32 r1, word32 r2, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000393C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31]
// LiveOut: lr r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009D6C_entry:
l00009D6C:
	word32 lr_29
	word32 r10_30
	word32 r1_50
	word32 r2_51
	word32 r3_52
	word32 r4_53
	word32 r5_54
	word32 r6_55
	fn00009C40(r0, r1, r2, r10, r12 + (r11 << 2<8>), r11, r12, lr, out r1_50, out r2_51, out r3_52, out r4_53, out r5_54, out r6_55, out r10_30, out lr_29)
	lrOut = lr_29
	return r10_30
fn00009D6C_exit:


word32 fn00009D80(word32 r0, word32 r1, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006D9C
//      fn00009D94
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009D80_entry:
l00009D80:
	word32 lr_27
	word32 r12_31 = fn0000A7C8(r0, r1, r4, r5, r7, r11, 6<32>, r12, lr, out lr_27)
	lrOut = lr_27
	return r12_31
fn00009D80_exit:


void fn00009D94(word32 r0, word32 r1, word32 r4, word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009D94_entry:
l00009D94:
	word32 lr_47
	fn00009D80(r0, r1, r4, r5, r7, r12, 0<32>, lr, out lr_47)
	return
fn00009D94_exit:


void fn00009DA8(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r12:[0..31]
// LiveOut:
// Trashed: VNZC r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00009DA8_entry:
l00009DA8:
	branch r12 != 0<32> l00009DB6
l00009DB2_1:
l00009DB6:
	return
fn00009DA8_exit:


void fn00009DC0(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC r12 r8
// Preserved: r4 r5 r6 r7 sp
fn00009DC0_entry:
l00009DC0:
	word32 r8_20 = Mem17[0x00009DC4<p32> - Mem17[0x00009DD6<p32>:word32] + -36<i32>:word32]
	branch r12 != 0<32> l00009DCE
l00009DCA_1:
	r12 = r8_20
l00009DCE:
	Mem28[r12:word32] = r11
	return
fn00009DC0_exit:


void fn00009DD8(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A708
// MayUse:  r10:[0..31] r11:[0..36] r12:[0..31]
// LiveOut:
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009DD8_entry:
l00009DD8:
	word32 r8_20 = Mem17[0x00009DDC<p32> - Mem17[0x00009E12<p32>:word32] + -36<i32>:word32]
	word32 r10_22 = SLICE(r10, bool, 0)
	branch r12 != 0<32> l00009DEA
l00009DE6_1:
	r12 = r8_20
l00009DEA:
	word32 r8_31 = r12 + (SLICE(r11, byte, 5) << 2<8>)
	word32 r9_34 = Mem17[r8_31 + 8<i32>:word32]
	word32 r11_35 = SLICE(r11, word5, 0)
	Mem44[r8_31 + 8<i32>:word32] = (SLICE(r9_34 >>u r11_35, bool, 0) ^ r10_22) << r11_35 ^ r9_34
	return
fn00009DD8_exit:


word32 fn00009E30(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A788
//      fn0000A7C8
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009E30_entry:
l00009E30:
	word32 r6_32 = 0x00009E36<p32> - Mem29[0x00009E70<p32>:word32]
	word32 r5_49
	word32 lr_52
	call Mem42[r6_32 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r10:0x20<32>,r11:0<32>,r12:fp - 0x44<32>,r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_32,r7:r7,r8:0<32>,Stack +0000:r11,Stack +0004:0<32>,Stack +0028:lr,Stack +002C:r7,Stack +0030:r6,Stack +0034:r5,Stack +0038:r4,Stack +003C:r3,Stack +0040:r2,Stack +0044:r1,Stack +0048:r0
		defs: lr:lr_52,r5:r5_49
	Mem62[r5_49 + -4<i32>:word32] = dwLoc40
	Mem63[r5_49 + -8<i32>:word32] = dwLoc44
	Mem64[r5_49 + -12<i32>:word32] = 0<32>
	Mem65[r5_49 + -16<i32>:word32] = r11
	Mem73[r5_49 + 0xC<32>:word32] = dwLoc30
	Mem74[r5_49 + 8<32>:word32] = dwLoc34
	Mem75[r5_49 + 4<32>:word32] = dwLoc38
	Mem76[r5_49:word32] = dwLoc3C
	Mem80[r5_49 + 32<i32>:word64] = qwLoc2C
	return lr_52
fn00009E30_exit:


word32 fn00009EDC(word32 r4, word32 r5, word32 r7, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A614
//      fn0000A850
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00009EDC_entry:
l00009EDC:
	word32 lr_22
	word32 r12_26
	word32 r9_44
	word32 r11_45
	fn0000B95C(r4, r5, 0x00009EE0<p32> - Mem17[0x00009EE6<p32>:word32], r7, r12, lr, out r9_44, out r11_45, out r12_26, out lr_22)
	lrOut = lr_22
	return r12_26
fn00009EDC_exit:


word32 fn00009EEC(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, word32 dwArg00, word32 dwArg04, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009EEC
//      fn0000A614
//      fn0000A850
//      fn0000A8DC
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: lr r10 r11 r12 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00009EEC_entry:
l00009EEC:
	word32 r3_1018
	word32 r6_32 = 0x00009EF2<p32> - Mem29[0x0000A010<p32>:word32]
	word32 r3_53
	word32 r7_57
	word32 r8_59
	word32 r12_60
	word32 r10_62
	word32 r9_63
	word32 sp_1067
	word32 r1_1209
	word32 r4_1241
	word32 r11_1048
	word32 r5_1276
	word32 r6_1311
	word32 r0_1129
	call Mem48[r6_32 + 172<i32>:word32] (retsize: 0;)
		uses: lr:dwArg04,r0:r11,r1:r1,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:dwArg00,r8:r8,r9:r9,Stack +0000:dwArg04,Stack +0004:dwArg00,Stack +0008:r8,Stack +000C:r9,Stack +0010:r10,Stack +0014:r12,Stack +003C:lr,Stack +0040:r7,Stack +0044:r6,Stack +0048:r5,Stack +004C:r4,Stack +0050:r3,Stack +0054:r2,Stack +0058:r1,Stack +005C:r0,Stack +0060:dwArg00,Stack +0064:dwArg04
		defs: r0:r0_50,r1:r1_51,r10:r10_62,r11:r11_61,r12:r12_60,r3:r3_53,r4:r4_54,r5:r5_55,r6:r6_56,r7:r7_57,r8:r8_59,r9:r9_63,sp:sp_49
	word32 lr_66 = Mem48[sp_1067 + 8<i32>:word32]
	Mem67[sp_1067 + 24<i32>:word32] = r12_60
	word32 r2_1051 = SLICE(r7_57, bool, 1)
	branch lr_66 >u 7<32> l0000A028
l0000A028:
	call Mem67[r6_1311 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_66,r0:r0_50,r1:r1_51,r10:r10_62,r11:r11_61,r12:r12_60,r2:r2_65,r3:r3_53,r4:r4_54,r5:r5_55,r6:r6_56,r7:r7_57,r8:r8_59,r9:r9_63,Stack +0000:dwArg00,Stack +0004:dwArg04
		defs: r0:r0_71,r1:r1_72,r11:r11_82,r4:r4_75,r5:r5_76,r6:r6_77,sp:sp_70
l00009F1C:
	switch (lr_66) { l00009F28 l00009F2C l00009F30 l00009F34 l00009F38 l00009F3C l00009F40 l00009F44 }
l00009F44:
l00009F40:
l00009FA2:
	word32 r8_90 = Mem67[r6_1311 + 176<i32>:word32]
	word32 r9_91 = Mem67[r6_1311 + 180<i32>:word32]
	word32 r7_93 = Mem67[sp_1067 + 8<i32>:word32]
	branch r7_93 != 7<32> l00009FB2
l00009FAE_1:
	r11_1048 = r8_90
l00009FB2:
	branch r7_93 == 7<32> l00009FB6
l00009FB2_1:
	r11_1048 = r9_91
l00009FB6:
	word32 r9_104 = Mem67[r6_1311 + 720<i32>:word32]
	branch r7_93 != 7<32> l00009FC0
l00009FBC_1:
	r9_104 = r8_90
l00009FC0:
	branch r2_1051 == 0<32> l00009FC8
l00009FC8:
	r3_1018 = r2_1051
l00009FD8:
	word32 r8_122 = CONVERT(Mem121[r3_1018 + r9_104:byte], byte, word32)
	branch r8_122 != 0<32> l00009FCC
l00009FCC:
	branch r3_1018 >=u r0_1129 l00009FD6
l00009FD0:
	Mem130[Mem121[sp_1067 + 20<i32>:word32]:byte] = SLICE(r8_122, byte, 0)
l00009FD6:
	r3_1018 = r3_1018 + 1<32>
l00009FC4:
	r3_1018 = 0<32>
l00009FE0:
	Mem140[sp_1067 + 40<i32>:word32] = 1<32>
	Mem148[sp_1067 + 32<i32>:word32] = r11_1048
	Mem149[sp_1067 + 36<i32>:word32] = 1<32>
l00009F3C:
l00009F96:
	Mem152[sp_1067 + 32<i32>:word32] = 0<32>
	Mem153[sp_1067 + 36<i32>:word32] = 0<32>
	Mem154[sp_1067 + 40<i32>:word32] = 1<32>
l00009F38:
l0000A5F6:
	r11_1048 = Mem67[r6_1311 + 176<i32>:word32]
	Mem160[sp_1067 + 40<i32>:word32] = 1<32>
	Mem161[sp_1067 + 32<i32>:word32] = r11_1048
	Mem162[sp_1067 + 36<i32>:word32] = 1<32>
	Mem163[sp_1067 + 8<i32>:word32] = 3<32>
	r3_1018 = 0<32>
	r2_1051 = 1<32>
l00009F34:
l00009F5E:
	branch r2_1051 == 0<32> l00009F72
l00009F72:
	branch r0_1129 != 0<32> l00009F82
l00009F82:
	r11_1048 = Mem67[r6_1311 + 176<i32>:word32]
	word32 r10_170 = Mem67[sp_1067 + 20<i32>:word32]
	Mem171[sp_1067 + 32<i32>:word32] = r11_1048
	Mem172[sp_1067 + 36<i32>:word32] = 1<32>
	Mem173[sp_1067 + 40<i32>:word32] = 1<32>
	Mem175[r10_170:byte] = 0x22<8>
	r3_1018 = 1<32>
l00009F76:
	Mem178[sp_1067 + 32<i32>:word32] = Mem67[r6_1311 + 176<i32>:word32]
	Mem179[sp_1067 + 36<i32>:word32] = 1<32>
	r3_1018 = 1<32>
l00009F62:
	word32 r7_180 = Mem67[r6_1311 + 176<i32>:word32]
	Mem183[sp_1067 + 40<i32>:word32] = 1<32>
	Mem184[sp_1067 + 32<i32>:word32] = r7_180
	Mem185[sp_1067 + 36<i32>:word32] = 1<32>
	r3_1018 = 0<32>
l00009F30:
l00009FEA:
	branch r2_1051 == 0<32> l00009FFE
l00009FFE:
	branch r0_1129 != 0<32> l0000A014
l0000A014:
	r11_1048 = Mem67[sp_1067 + 20<i32>:word32]
	Mem193[sp_1067 + 32<i32>:word32] = Mem67[r6_1311 + 180<i32>:word32]
	Mem194[sp_1067 + 36<i32>:word32] = 1<32>
	Mem195[sp_1067 + 40<i32>:word32] = r2_1051
	Mem197[r11_1048:byte] = 0x27<8>
	r3_1018 = 1<32>
l0000A002:
	Mem200[sp_1067 + 32<i32>:word32] = Mem67[r6_1311 + 180<i32>:word32]
	Mem201[sp_1067 + 36<i32>:word32] = 1<32>
	Mem202[sp_1067 + 40<i32>:word32] = r2_1051
	r3_1018 = 1<32>
l00009FEE:
	Mem206[sp_1067 + 32<i32>:word32] = Mem67[r6_1311 + 180<i32>:word32]
	Mem207[sp_1067 + 36<i32>:word32] = 1<32>
	r3_1018 = 0<32>
l00009FFA:
	Mem210[sp_1067 + 40<i32>:word32] = r3_1018
l00009F2C:
l00009F48:
	word32 r10_212 = Mem67[r6_1311 + 180<i32>:word32]
	Mem216[sp_1067 + 36<i32>:word32] = 1<32>
	Mem217[sp_1067 + 32<i32>:word32] = r10_212
	Mem218[sp_1067 + 40<i32>:word32] = 0<32>
	Mem219[sp_1067 + 8<i32>:word32] = 2<32>
	r11_1048 = 1<32>
	r3_1018 = 0<32>
	r2_1051 = 1<32>
l00009F28:
l0000A02C:
	Mem222[sp_1067 + 32<i32>:word32] = 0<32>
	Mem223[sp_1067 + 36<i32>:word32] = 0<32>
	Mem224[sp_1067 + 40<i32>:word32] = 0<32>
l0000A034:
	r3_1018 = 0<32>
	r2_1051 = 0<32>
l0000A036:
	Mem230[sp_1067 + 28<i32>:word32] = 0<32>
	word32 r10_1027 = 0<32>
l0000A56A:
	word32 r9_1360
	word32 r8_240
	branch Mem232[sp_1067 + 12<i32>:word32] != 0xFFFFFFFF<32> l0000A582
l0000A582:
	r9_1360 = Mem232[sp_1067 + 28<i32>:word32]
	r8_240 = CONVERT(r9_1360 != Mem232[sp_1067 + 12<i32>:word32], bool, word32)
l0000A570:
	r11_1048 = Mem232[sp_1067 + 16<i32>:word32]
	r10_1027 = Mem232[sp_1067 + 28<i32>:word32]
	r9_1360 = CONVERT(Mem232[r11_1048 + r10_1027:byte], byte, word32)
	r8_240 = CONVERT(SLICE(r9_1360, byte, 0) != 0<8>, bool, word32)
l0000A58A:
	word32 lr_1355
	branch r8_240 != 0<32> l0000A040
l0000A040:
	branch Mem232[sp_1067 + 40<i32>:word32] == 0<32> l0000A07E
l0000A046:
	branch Mem232[sp_1067 + 36<i32>:word32] == 0<32> l0000A07E
l0000A04C:
	word32 r7_260 = Mem232[sp_1067 + 36<i32>:word32]
	word32 lr_261 = Mem232[sp_1067 + 12<i32>:word32]
	word32 r8_262 = Mem232[sp_1067 + 28<i32>:word32] + r7_260
	branch r8_262 >u lr_261 l0000A07E
l0000A05A:
	word32 r9_266 = Mem232[sp_1067 + 28<i32>:word32]
	byte VNZC_300
	call Mem232[r6_1311 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_261,r0:r0_274,r1:r1_276,r10:r7_260,r11:Mem232[sp_231 + 32<i32>:word32],r12:Mem232[sp_231 + 16<i32>:word32] + r9_266,r2:r2_278,r3:r3_280,r4:r4_282,r5:r5_284,r6:r6_272,r7:r7_260,r8:r8_262,r9:r9_266,Stack +0000:dwArg00,Stack +0004:dwArg04
		defs: r0:r0_286,r1:r1_287,r10:r10_298,r2:r2_288,r3:r3_289,r4:r4_290,r5:r5_291,r6:r6_292,sp:sp_285,VNZC:VNZC_300
	branch SLICE(VNZC_300, bool, 1) l0000A07E
l0000A06A:
	branch r2_1051 != 0<32> l0000A5D4
l0000A070:
	branch r3_1018 >=u r0_1129 l0000A07C
l0000A074:
	Mem308[r3_1018:byte] = 0x5C<8>
l0000A07C:
	r3_1018 = r3_1018 + 1<32>
l0000A07E:
	word32 lr_316 = Mem314[sp_1067 + 16<i32>:word32]
	r11_1048 = Mem314[sp_1067 + 28<i32>:word32]
	word32 r7_1005 = CONVERT(Mem314[lr_316 + r11_1048:byte], byte, word32)
	branch r7_1005 == 0<32> l0000A1FC
l0000A1FC:
	r10_1027 = Mem314[sp_1067 + 40<i32>:word32]
	branch r10_1027 == 0<32> l0000A260
l0000A260:
	branch Test(EQ,Mem314[sp_1067 + 4<32>:bool]) l0000A564
l0000A26A:
l0000A202:
	branch r2_1051 != 0<32> l0000A5D4
l0000A208:
	branch r3_1018 >=u r0_1129 l0000A214
l0000A20C:
	Mem339[r3_1018:byte] = 0x5C<8>
l0000A214:
	r3_1018 = r3_1018 + 1<32>
	branch Mem341[sp_1067 + 28<i32>:word32] + 1<32> >=u Mem341[sp_1067 + 12<i32>:word32] l0000A52C
l0000A222:
	word32 r9_352 = CONVERT(Mem341[Mem341[sp_1067 + 28<i32>:word32] + Mem341[sp_1067 + 16<i32>:word32] + 1<i32>:byte], byte, word32)
	branch SLICE(r9_352 - 0x2F<32>, byte, 0) <=u 0<8> l0000A52C
l0000A234:
	branch SLICE(r9_352 - 0x39<32>, byte, 0) >u 0<8> l0000A52C
l0000A23E:
	branch r3_1018 >=u r0_1129 l0000A24A
l0000A242:
	r11_1048 = Mem341[sp_1067 + 20<i32>:word32]
	Mem364[r3_1018:byte] = 0x30<8>
l0000A24A:
	branch r3_1018 + 1<32> >=u r0_1129 l0000A25A
l0000A252:
	Mem374[r3_1018 + 1<32>:byte] = 0x30<8>
l0000A25A:
	r3_1018 = r3_1018 + 2<32>
l0000A52C:
	r7_1005 = 0x30<32>
l0000A08C:
	word32 r8_382
	branch SLICE(r7_1005 - 7<32>, byte, 0) == 0<8> l0000A302
l0000A302:
	r8_382 = 0x61<32>
l0000A096:
	branch SLICE(r7_1005 - 8<32>, byte, 0) == 0<8> l0000A306
l0000A306:
	r8_382 = 0x62<32>
l0000A0A0:
	branch SLICE(r7_1005 - 9<32>, byte, 0) == 0<8> l0000A1F8
l0000A1F8:
	r8_382 = 0x74<32>
l0000A0AA:
	branch SLICE(r7_1005 - 0xA<32>, byte, 0) == 0<8> l0000A30A
l0000A30A:
	r8_382 = 0x6E<32>
l0000A0B4:
	branch SLICE(r7_1005 - 0xB<32>, byte, 0) == 0<8> l0000A1F4
l0000A1F4:
	r8_382 = 0x76<32>
l0000A0BE:
	branch SLICE(r7_1005 - 0xC<32>, byte, 0) == 0<8> l0000A1EC
l0000A1EC:
	r8_382 = 0x66<32>
l0000A0C8:
	branch SLICE(r7_1005 - 0xD<32>, byte, 0) == 0<8> l0000A1F0
l0000A1F0:
	r8_382 = 0x72<32>
l0000A0D2:
	branch SLICE(r7_1005 - 0x20<32>, byte, 0) <u 0<8> l0000A3AE
l0000A0DC:
	branch SLICE(r7_1005 - 0x22<32>, byte, 0) <=u 0<8> l0000A362
l0000A0E6:
	branch SLICE(r7_1005 - 0x23<32>, byte, 0) == 0<8> l0000A35A
l0000A0F0:
	branch SLICE(r7_1005 - 0x24<32>, byte, 0) == 0<8> l0000A362
l0000A0FA:
	branch SLICE(r7_1005 - 0x25<32>, byte, 0) == 0<8> l0000A520
l0000A104:
	branch SLICE(r7_1005 - 0x26<32>, byte, 0) == 0<8> l0000A362
l0000A10E:
	branch SLICE(r7_1005 - 0x27<32>, byte, 0) == 0<8> l0000A372
l0000A372:
	branch Mem314[sp_1067 + 8<i32>:word32] != 2<32> l0000A520
l0000A37A:
	branch r2_1051 != 0<32> l0000A5D4
l0000A380:
	branch r3_1018 >=u r0_1129 l0000A38A
l0000A384:
	Mem436[r3_1018:byte] = SLICE(r7_1005, byte, 0)
l0000A38A:
	word32 r12_438 = r3_1018 + 1<32>
	branch r12_438 >=u r0_1129 l0000A39A
l0000A392:
	Mem446[r12_438:byte] = 0x5C<8>
l0000A39A:
	branch r12_438 + 1<32> >=u r0_1129 l0000A3A8
l0000A3A0:
	r10_1027 = Mem453[sp_1067 + 20<i32>:word32]
	Mem456[r12_438 + 1<32>:byte] = 0x27<8>
l0000A3A8:
	r3_1018 = r12_438 + 2<32>
l0000A118:
	branch SLICE(r7_1005 - 0x28<32>, byte, 0) <u 0<8> l0000A3AE
l0000A122:
	branch SLICE(r7_1005 - 0x2A<32>, byte, 0) <=u 0<8> l0000A362
l0000A12C:
	branch SLICE(r7_1005 - 0x2B<32>, byte, 0) <u 0<8> l0000A3AE
l0000A136:
	branch SLICE(r7_1005 - 0x3A<32>, byte, 0) <=u 0<8> l0000A520
l0000A140:
	branch SLICE(r7_1005 - 0x3B<32>, byte, 0) <u 0<8> l0000A3AE
l0000A14A:
	branch SLICE(r7_1005 - 0x3E<32>, byte, 0) <=u 0<8> l0000A362
l0000A154:
	branch SLICE(r7_1005 - 0x3F<32>, byte, 0) == 0<8> l0000A26C
l0000A26C:
	word32 r8_481 = Mem314[sp_1067 + 8<i32>:word32]
	branch r8_481 == 2<32> l0000A36A
l0000A272:
	branch r8_481 != 3<32> l0000A520
l0000A278:
	branch Test(NE,Mem314[sp_1067 + 4<32>:bool]) l0000A520
l0000A282:
	word32 lr_490 = Mem314[sp_1067 + 28<i32>:word32]
	branch lr_490 + 2<32> >=u Mem314[sp_1067 + 12<i32>:word32] l0000A520
l0000A28E:
	r10_1027 = Mem314[sp_1067 + 16<i32>:word32] + Mem314[sp_1067 + 28<i32>:word32]
	word32 r11_499 = CONVERT(Mem314[r10_1027 + 1<i32>:byte], byte, word32)
	branch SLICE(r11_499 - 0x3F<32>, byte, 0) != 0<8> l0000A520
l0000A2A0:
	r10_1027 = CONVERT(Mem314[r10_1027 + 2<i32>:byte], byte, word32)
	branch SLICE(r10_1027 - 0x3E<32>, byte, 0) >u 0<8> l0000A520
l0000A2B0:
	branch (1<32> << r10_1027 - 0x21<32> & Mem314[0x0000A3C6<p32>:word32]) == 0<32> l0000A520
l0000A2BE:
	branch r2_1051 != 0<32> l0000A5D4
l0000A2C4:
	branch r3_1018 >=u r0_1129 l0000A2CE
l0000A2C8:
	Mem519[r3_1018:byte] = SLICE(r11_499, byte, 0)
l0000A2CE:
	word32 r12_521 = r3_1018 + 1<32>
	branch r12_521 >=u r0_1129 l0000A2DE
l0000A2D6:
	Mem529[r12_521:byte] = 0x22<8>
l0000A2DE:
	branch r12_521 + 1<32> >=u r0_1129 l0000A2EC
l0000A2E4:
	Mem539[r12_521 + 1<32>:byte] = 0x22<8>
l0000A2EC:
	branch r12_521 + 2<32> >=u r0_1129 l0000A2F8
l0000A2F2:
	Mem551[r12_521 + 2<32>:byte] = SLICE(r11_499, byte, 0)
l0000A2F8:
	Mem565[sp_1067 + 28<i32>:word32] = lr_490 + 2<32>
	r3_1018 = r12_521 + 3<32>
	r7_1005 = r10_1027
l0000A15E:
	branch SLICE(r7_1005 - 0x41<32>, byte, 0) <u 0<8> l0000A3AE
l0000A168:
	branch SLICE(r7_1005 - 0x5A<32>, byte, 0) <=u 0<8> l0000A520
l0000A172:
	branch SLICE(r7_1005 - 0x5B<32>, byte, 0) == 0<8> l0000A362
l0000A17C:
	branch SLICE(r7_1005 - 0x5C<32>, byte, 0) == 0<8> l0000A30E
l0000A30E:
	branch Mem314[sp_1067 + 40<i32>:word32] == 0<32> l0000A320
l0000A314:
	branch r2_1051 == 0<32> l0000A320
l0000A318:
	r11_1048 = Mem314[sp_1067 + 36<i32>:word32]
	branch r11_1048 != 0<32> l0000A558
l0000A320:
	r8_382 = 0x5C<32>
l0000A322:
	r10_1027 = Mem314[sp_1067 + 8<i32>:word32]
	branch r10_1027 != 2<32> l0000A32E
l0000A328:
	branch r2_1051 != 0<32> l0000A5D4
l0000A32E:
	branch Mem314[sp_1067 + 40<i32>:word32] == 0<32> l0000A526
l0000A336:
	r7_1005 = r8_382
l0000A186:
	branch SLICE(r7_1005 - 0x5D<32>, byte, 0) == 0<8> l0000A520
l0000A190:
	branch SLICE(r7_1005 - 0x5E<32>, byte, 0) == 0<8> l0000A362
l0000A19A:
	branch SLICE(r7_1005 - 0x5F<32>, byte, 0) == 0<8> l0000A520
l0000A1A4:
	branch SLICE(r7_1005 - 0x60<32>, byte, 0) == 0<8> l0000A362
l0000A1AE:
	branch SLICE(r7_1005 - 0x61<32>, byte, 0) <u 0<8> l0000A3AE
l0000A1B8:
	branch SLICE(r7_1005 - 0x7A<32>, byte, 0) <=u 0<8> l0000A520
l0000A1C2:
	branch SLICE(r7_1005 - 0x7B<32>, byte, 0) == 0<8> l0000A33A
l0000A1CC:
	branch SLICE(r7_1005 - 0x7C<32>, byte, 0) == 0<8> l0000A362
l0000A1D6:
	branch SLICE(r7_1005 - 0x7D<32>, byte, 0) == 0<8> l0000A33A
l0000A33A:
	word32 r8_641
	branch Mem314[sp_1067 + 12<i32>:word32] != 0xFFFFFFFF<32> l0000A34E
l0000A34E:
	r8_641 = CONVERT(Mem314[sp_1067 + 12<i32>:word32] != 1<32>, bool, word32)
l0000A340:
	r8_641 = CONVERT(Mem314[Mem314[sp_1067 + 16<i32>:word32] + 1<i32>:byte] != 0<8>, bool, word32)
l0000A354:
	branch r8_641 != 0<32> l0000A520
l0000A1E0:
	branch SLICE(r7_1005 - 0x7E<32>, byte, 0) != 0<8> l0000A3AE
l0000A3AE:
	word32 r9_656 = Mem314[sp_1067 + 24<i32>:word32]
	branch r9_656 != 1<32> l0000A3CC
l0000A3CC:
	Mem662[sp_1067 + 48<i32>:word64] = 0<64>
	word32 r8_1537 = Mem662[sp_1067 + 12<i32>:word32]
	branch r8_1537 != 0xFFFFFFFF<32> l0000A3E2
l0000A3DA:
	word32 r12_701
	call Mem662[r6_1311 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_316,r0:r0_333,r1:r1_672,r10:r10_686,r11:r11_317,r12:Mem662[sp_312 + 16<i32>:word32],r2:r2_328,r3:r3_332,r4:r4_677,r5:r5_680,r6:r6_668,r7:r7_318,r8:r8_663,r9:0<32>,Stack +0000:dwArg00,Stack +0004:dwArg04
		defs: r0:r0_691,r12:r12_701,r2:r2_693,r3:r3_694,r6:r6_697,r7:r7_698,r8:r8_700,sp:sp_690
	Mem706[sp_1067 + 12<i32>:word32] = r12_701
l0000A3E2:
	Mem710[sp_1067 + 44<i32>:word32] = 1<32>
	word32 lr_707 = 1<32>
	r1_1209 = 0<32>
l0000A3E8:
	word32 r5_716 = r1_1209 + Mem712[sp_1067 + 28<i32>:word32]
	word32 r4_718 = Mem712[sp_1067 + 16<i32>:word32] + r5_716
	word32 lr_740
	word32 r12_742
	byte VNZC_746
	word32 r8_741
	word32 r9_745
	call Mem712[r6_1311 + 248<i32>:word32] (retsize: 0;)
		uses: lr:lr_729,r0:r0_725,r1:r1_715,r10:Mem712[sp_711 + 12<i32>:word32] - r5_716,r11:r4_718,r12:sp_711 + 0x38<32>,r2:r2_726,r3:r3_727,r4:r4_718,r5:r5_716,r6:r6_724,r7:r7_728,r8:r8_730,r9:sp_711 + 0x30<32>,Stack +0000:dwArg00,Stack +0004:dwArg04
		defs: lr:lr_740,r0:r0_732,r1:r1_733,r11:r11_743,r12:r12_742,r2:r2_734,r3:r3_735,r4:r4_736,r5:r5_737,r6:r6_738,r7:r7_739,r8:r8_741,r9:r9_745,sp:sp_731,VNZC:VNZC_746
	r10_1027 = r12_742
	branch SLICE(VNZC_746, bool, 1) l0000A494
l0000A408:
	branch r12_742 == 0xFFFFFFFF<32> l0000A490
l0000A40C:
	branch r12_742 != 0xFFFFFFFE<32> l0000A428
l0000A428:
	branch r2_1051 == 0<32> l0000A474
l0000A42C:
	r9_745 = Mem712[sp_1067 + 8<i32>:word32]
	branch r9_745 != 2<32> l0000A474
l0000A432:
	r11_1048 = r4_1241 + 1<32>
	word32 r12_760 = 1<32>
l0000A470:
	branch r12_760 != r12_742 l0000A43A
l0000A43A:
	r9_745 = CONVERT(Mem712[r11_1048:byte], byte, word32)
	r8_741 = 0x5B<32>
	branch SLICE(r9_745 - 0x5B<32>, byte, 0) <u 0<8> l0000A46C
l0000A444:
	branch SLICE(r9_745 - 0x5C<32>, byte, 0) <=u 0<8> l0000A5D4
l0000A44E:
	branch SLICE(r9_745 - 0x5E<32>, byte, 0) == 0<8> l0000A5D4
l0000A458:
	branch SLICE(r9_745 - 0x60<32>, byte, 0) == 0<8> l0000A5D4
l0000A462:
	r8_741 = 0x7C<32>
	branch SLICE(r9_745 - 0x7C<32>, byte, 0) == 0<8> l0000A5D4
l0000A46C:
	r12_760 = r12_760 + 1<32>
	r11_1048 = r11_1048 + 1<32>
l0000A474:
	word32 sp_830
	word32 r0_831
	word32 r1_832
	word32 r2_833
	word32 r3_834
	word32 r4_835
	word32 r5_836
	word32 r6_837
	word32 r7_838
	word32 lr_839
	word32 r11_842
	word32 r10_843
	word32 r9_844
	byte VNZC_845
	call Mem712[r6_1311 + 520<i32>:word32] (retsize: 0;)
		uses: lr:lr_740,r0:r0_732,r1:r1_733 + r12_742,r10:r12_742,r11:r11_826,r12:Mem712[sp_731 + 56<i32>:word32],r2:r2_734,r3:r3_735,r4:r4_736,r5:r5_737,r6:r6_738,r7:r7_739,r8:r8_823,r9:r9_827,Stack +0000:dwArg00,Stack +0004:dwArg04
		defs: lr:lr_839,r0:r0_831,r1:r1_832,r10:r10_843,r11:r11_842,r2:r2_833,r3:r3_834,r4:r4_835,r5:r5_836,r6:r6_837,r7:r7_838,r9:r9_844,sp:sp_830,VNZC:VNZC_845
	word32 r8_846 = Mem712[sp_830 + 44<i32>:word32]
	branch SLICE(VNZC_845, bool, 1) l0000A482
l0000A47E_1:
	r8_846 = 0<32>
l0000A482:
	Mem853[sp_830 + 44<i32>:word32] = r8_846
	byte VNZC_881
	call Mem853[r6_837 + 144<i32>:word32] (retsize: 0;)
		uses: lr:lr_839,r0:r0_831,r1:r1_832,r10:r10_843,r11:r11_842,r12:sp_830 + 0x30<32>,r2:r2_833,r3:r3_834,r4:r4_835,r5:r5_836,r6:r6_837,r7:r7_838,r8:r8_852,r9:r9_844,Stack +0000:dwArg00,Stack +0004:dwArg04
		defs: lr:lr_875,r0:r0_867,r1:r1_868,r10:r10_879,r11:r11_878,r2:r2_869,r3:r3_870,r4:r4_871,r5:r5_872,r6:r6_873,r7:r7_874,r8:r8_876,sp:sp_866,VNZC:VNZC_881
	branch SLICE(VNZC_881, bool, 1) l0000A494
l0000A48E:
l0000A410:
	word32 r9_883 = r5_1276
	r11_1048 = r4_1241
l0000A418:
	r10_1027 = Mem712[sp_1067 + 12<i32>:word32]
	branch r9_883 >=u r10_1027 l0000A490
l0000A41E:
	r11_1048 = r11_1048 + 1<i32>
	r9_883 = r9_883 + 1<32>
	branch CONVERT(Mem712[r11_1048:byte], byte, word32) != 0<32> l0000A416
l0000A416:
	r1_1209 = r1_1209 + 1<32>
l0000A426:
l0000A490:
	Mem903[sp_1067 + 44<i32>:word32] = 0<32>
l0000A494:
	branch r1_1209 >u 1<32> l0000A4A6
l0000A3B4:
	Mem914[sp_1067 + 44<i32>:word32] = SLICE(CONVERT(Mem314[Mem314[Mem314[r6_1311 + 156<i32>:word32]:word32] + r7_1005 * 2<32>:word16], word16, word32), bool, 6)
	r1_1209 = r9_656
l0000A49A:
	r11_1048 = Mem917[sp_1067 + 40<i32>:word32]
	branch r11_1048 == 0<32> l0000A526
l0000A4A0:
	branch Mem917[sp_1067 + 44<i32>:word32] != 0<32> l0000A52E
l0000A4A6:
	word32 r9_927 = Mem926[sp_1067 + 28<i32>:word32]
	r10_1027 = r1_1209 + r9_927
	word32 r9_1009 = Mem926[sp_1067 + 16<i32>:word32] + r9_927 + 1<32>
l0000A4B4:
	branch Mem936[sp_1067 + 40<i32>:word32] == 0<32> l0000A504
l0000A4BA:
	branch Mem936[sp_1067 + 44<i32>:word32] != 0<32> l0000A504
l0000A4C0:
	branch r2_1051 != 0<32> l0000A5D4
l0000A4C6:
	branch r3_1018 >=u r0_1129 l0000A4D2
l0000A4CA:
	r11_1048 = Mem936[sp_1067 + 20<i32>:word32]
	Mem952[r3_1018:byte] = 0x5C<8>
l0000A4D2:
	word32 r12_954 = r3_1018 + 1<32>
	branch r12_954 >=u r0_1129 l0000A4E6
l0000A4DA:
	Mem966[r12_954:byte] = SLICE((r7_1005 >>u 6<32>) + 0x30<32>, byte, 0)
l0000A4E6:
	branch r12_954 + 1<32> >=u r0_1129 l0000A4F8
l0000A4EC:
	r11_1048 = Mem975[sp_1067 + 20<i32>:word32]
	Mem979[r12_954 + 1<32>:byte] = SLICE(SLICE(r7_1005, word3, 3) + 0x30<32>, byte, 0)
l0000A4F8:
	r3_1018 = r12_954 + 2<32>
	r7_1005 = SLICE(r7_1005, word3, 0) + 0x30<32>
l0000A504:
	word32 r8_990 = Mem988[sp_1067 + 28<i32>:word32]
	branch r10_1027 <=u r8_990 + 1<32> l0000A558
l0000A50E:
	branch r3_1018 >=u r0_1129 l0000A518
l0000A512:
	Mem1006[r3_1018:byte] = SLICE(r7_1005, byte, 0)
l0000A518:
	r7_1005 = CONVERT(Mem1013[r9_1009:byte], byte, word32)
	Mem1022[sp_1067 + 28<i32>:word32] = r8_990 + 1<32>
	r9_1009 = r9_1009 + 1<i32>
	r3_1018 = r3_1018 + 1<32>
l0000A1EA:
l0000A35A:
	r10_1027 = Mem314[sp_1067 + 28<i32>:word32]
	branch r10_1027 != 0<32> l0000A520
l0000A362:
	branch Mem314[sp_1067 + 8<i32>:word32] != 2<32> l0000A520
l0000A36A:
	branch r2_1051 == 0<32> l0000A520
l0000A520:
	r11_1048 = Mem1045[sp_1067 + 40<i32>:word32]
	branch r11_1048 != 0<32> l0000A52E
l0000A526:
	branch r2_1051 == 0<32> l0000A558
l0000A52A:
l0000A52E:
	r10_1027 = Mem1071[sp_1067:word32]
	branch r10_1027 == 0<32> l0000A558
l0000A534:
	branch (1<32> << r7_1005 & Mem1071[r10_1027 + SLICE(r7_1005, byte, 5) *32 4<32>:word32]) == 0<32> l0000A558
l0000A546:
	branch r2_1051 != 0<32> l0000A5D4
l0000A54A:
	branch r3_1018 >=u r0_1129 l0000A556
l0000A54E:
	Mem1155[r3_1018:byte] = 0x5C<8>
l0000A556:
	r3_1018 = r3_1018 + 1<32>
l0000A558:
	branch r3_1018 >=u r0_1129 l0000A562
l0000A55C:
	Mem1172[r3_1018:byte] = SLICE(r7_1005, byte, 0)
l0000A562:
	r3_1018 = r3_1018 + 1<32>
l0000A564:
	Mem1183[sp_1067 + 28<i32>:word32] = Mem1178[sp_1067 + 28<i32>:word32] + 1<32>
l0000A370:
l0000A590:
	branch r3_1018 != 0<32> l0000A59E
l0000A594:
	branch Mem232[sp_1067 + 8<i32>:word32] != 2<32> l0000A59E
l0000A59A:
	branch r2_1051 != 0<32> l0000A5D4
l0000A5D4:
	Mem1197[sp_1067 + 4<i32>:word32] = Mem1192[sp_1067 + 4<i32>:word32] & 0xFFFFFFFD<u32>
	word32 r9_1198 = Mem1197[sp_1067 + 12<i32>:word32]
	word32 r8_1199 = Mem1197[sp_1067 + 8<i32>:word32]
	word32 r10_1200 = Mem1197[sp_1067 + 16<i32>:word32]
	word32 r12_1201 = Mem1197[sp_1067 + 20<i32>:word32]
	word32 sp_1202 = sp_1067 - 4<i32>
	Mem1203[sp_1202:word32] = 0<32>
	word32 r7_1204 = Mem1203[sp_1202 + 8<i32>:word32]
	Mem1208[sp_1202 - 4<i32>:word32] = r7_1204
	word32 r12_1357
	r9_1360 = fn00009EEC(r0_1129, r1_1209, r2_1051, r3_1018, r4_1241, r5_1276, r6_1311, r7_1204, r8_1199, r9_1198, r10_1200, r0_1129, r12_1201, 0<32>, dwArg00, dwArg04, out r10_1027, out r11_1048, out r12_1357, out lr_1355)
	r3_1018 = r12_1357
l0000A59E:
	lr_1355 = Mem232[sp_1067 + 32<i32>:word32]
	branch lr_1355 == 0<32> l0000A5C6
l0000A5A4:
	branch r2_1051 != 0<32> l0000A5C6
l0000A5A8:
	word32 r8_1375 = Mem232[sp_1067 + 20<i32>:word32] + r3_1018
l0000A5BE:
	r10_1027 = Mem1378[sp_1067 + 32<i32>:word32]
	r9_1360 = CONVERT(Mem1378[r10_1027:byte], byte, word32)
	branch r9_1360 != 0<32> l0000A5AE
l0000A5AE:
	branch r3_1018 >=u r0_1129 l0000A5B4
l0000A5B2:
	Mem1388[r8_1375:byte] = SLICE(r9_1360, byte, 0)
l0000A5B4:
	word32 r11_1391 = Mem1390[sp_1067 + 32<i32>:word32]
	Mem1398[sp_1067 + 32<i32>:word32] = r11_1391 + 1<32>
	r3_1018 = r3_1018 + 1<32>
	r11_1048 = r11_1391 + 1<32>
	r8_1375 = r8_1375 + 1<32>
l0000A5C6:
	branch r3_1018 >=u r0_1129 l0000A60E
l0000A5CA:
	r9_1360 = Mem1405[sp_1067 + 20<i32>:word32]
	Mem1408[r3_1018:byte] = 0<8>
l0000A60E:
	r10Out = r10_1027
	r11Out = r11_1048
	r12Out = r3_1018
	lrOut = lr_1355
	return r9_1360
fn00009EEC_exit:


word32 fn0000A614(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A708
//      fn0000A788
//      fn0000A7C8
//      fn0000A804
//      fn0000A828
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A614_entry:
l0000A614:
	word32 r6_32 = 0x0000A61A<p32> - Mem29[0x0000A700<p32>:word32]
	word32 r0_43
	word32 r4_47
	word32 r12_53
	word32 r11_54
	word32 r9_55
	word32 r5_48
	word32 r3_199
	word32 sp_106
	word32 lr_144
	word32 r1_185
	word32 r6_102
	call Mem39[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r9,r10:r10,r11:r11,r12:r12,r2:r2,r3:r12,r4:r4,r5:r5,r6:r6_32,r7:r7,r9:r9,Stack +0004:r10,Stack +0008:r11,Stack +0014:lr,Stack +0018:r7,Stack +001C:r6,Stack +0020:r5,Stack +0024:r4,Stack +0028:r3,Stack +002C:r2,Stack +0030:r1,Stack +0034:r0
		defs: lr:lr_51,r0:r0_43,r1:r1_44,r11:r11_54,r12:r12_53,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,r9:r9_55,sp:sp_42
	word32 r2_112 = Mem39[r6_102 + 212<i32>:word32]
	word32 r7_103 = Mem39[r2_112:word32]
	Mem60[sp_106 + 12<i32>:word32] = r12_53
	word32 r10_61 = Mem60[r12_53:word32]
	Mem62[sp_106 + 16<i32>:word32] = r10_61
	branch r3_199 >= 0<32> l0000A63C
l0000A638:
	call Mem62[r6_102 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_51,r0:r0_43,r1:r1_44,r10:r10_61,r11:r11_54,r12:r12_53,r2:r2_58,r3:r3_46,r4:r4_47,r5:r5_48,r6:r6_49,r7:r7_59,r9:r9_55
		defs: lr:lr_74,r1:r1_67,r2:r2_68,r3:r3_69,r5:r5_71,r6:r6_72,r7:r7_73,sp:sp_65
l0000A63C:
	word32 r0_83 = Mem62[r6_102 + 356<i32>:word32]
	branch Mem62[r0_83:word32] >u r3_199 l0000A69A
l0000A648:
	word32 r4_100 = r3_199 + 1<32>
	branch r4_100 <=u Mem62[0x0000A704<p32>:word32] l0000A658
l0000A654:
	word32 r10_448
	word32 r12_450
	word32 r11_449
	word32 r9_447
	word32 r5_445
	word32 r8_446
	r4_100 = fn00006CAC(r4_100, r5_48, r6_102, r7_103, lr_144, out r5_445, out r6_102, out r7_103, out r8_446, out r9_447, out r10_448, out r11_449, out r12_450, out lr_144)
	sp_106 = <invalid>
l0000A658:
	word32 r9_113 = r2_112 + 4<32>
	word32 r5_117 = CONVERT(r7_103 == r9_113, bool, word32)
	branch r5_117 != 0<32> l0000A666
l0000A662_1:
l0000A666:
	branch r5_117 == 0<32> l0000A66A
l0000A666_1:
l0000A66A:
	Mem134[sp_106:word32] = r9_113
	word32 lr_145
	word32 r12_149
	word32 r9_151 = fn0000B904(r4_100, r5_117, r6_102, r7_103, r4_100 << 3<32>, lr_144, out r12_149, out lr_145)
	Mem158[r2_112:word32] = r12_149
	branch r5_117 == 0<32> l0000A686
l0000A67C:
	word64 r9_r8_163 = Mem158[Mem158[sp_106:word32]:word64]
	Mem166[r12_149:word64] = r9_r8_163
	r9_151 = SLICE(r9_r8_163, word32, 32) (alias)
l0000A686:
	word32 r12_172 = Mem171[r0_83:word32]
	word32 r0_196
	word32 r4_200
	call Mem171[r6_102 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_145,r0:r0_83,r1:r1_185,r10:r4_125 - r12_172 << 3<i32>,r11:0<32>,r12:r12_149 + (r12_172 << 3<8>),r2:r2_112,r3:r3_85,r4:r4_125,r5:r5_117,r6:r6_139,r7:r12_149,r9:r9_193
		defs: lr:lr_204,r0:r0_196,r1:r1_197,r3:r3_199,r4:r4_200,r6:r6_202,r7:r7_203,sp:sp_195
	Mem212[r0_196:word32] = r4_200
l0000A69A:
	word32 r2_215 = r7_103 + (r3_199 << 3<8>)
	word32 r3_220 = Mem216[r1_185 + 4<i32>:word32]
	word32 r5_217 = Mem216[r2_215:word32]
	word32 r4_218 = Mem216[r2_215 + 4<i32>:word32]
	word32 r9_222 = Mem216[sp_106 + 4<i32>:word32]
	word32 r10_223 = Mem216[sp_106 + 8<i32>:word32]
	word32 r8_224 = Mem216[r1_185:word32]
	word32 r0_226 = r1_185 + 8<32>
	word32 sp_230 = sp_106 - 4<i32>
	Mem231[sp_230:word32] = r0_226
	Mem233[sp_230 - 4<i32>:word32] = r3_220 | 1<u32>
	word32 r3_225 = r3_220 | 1<u32>
	word32 r12_241
	word32 r10_237
	word32 r11_238
	word32 lr_236
	word32 r9_240 = fn00009EEC(r0_226, r1_185, r2_215, r3_220 | 1<u32>, r4_218, r5_217, r6_102, r7_103, r8_224, r9_222, r10_223, r5_217, r4_218, lr_144, Mem233[sp_230 - 4<i32>:word32], Mem233[sp_230:word32], out r10_237, out r11_238, out r12_241, out lr_236)
	word32 sp_246 = sp_230 + 4<32>
	branch r5_217 >u r12_241 l0000A6F4
l0000A6C4:
	word32 r8_249 = Mem233[r6_102 + -36<i32>:word32]
	Mem251[r2_215:word32] = r12_241 + 1<32>
	word32 r7_250 = r12_241 + 1<32>
	branch r4_218 == r8_249 + 0x28<32> l0000A6D8
l0000A6D2:
	call Mem251[r6_102 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_236,r0:r0_226,r1:r1_219,r10:r10_237,r11:r11_238,r12:r4_218,r2:r2_215,r3:r3_220 | 1<u32>,r4:r4_218,r5:r5_217,r6:r6_234,r7:r12_241 + 1<32>,r9:r9_240
		defs: lr:lr_265,r0:r0_257,r1:r1_258,r2:r2_259,r3:r3_260,r4:r4_261,r5:r5_262,r6:r6_263,r7:r7_264,sp:sp_256
l0000A6D8:
	word32 lr_278
	word32 r12_282 = fn00009EDC(r4_218, r5_217, r7_250, r7_250, lr_236, out lr_278)
	Mem291[r2_215 + 4<i32>:word32] = r12_282
	word32 sp_293 = sp_246 - 4<i32>
	Mem295[sp_293:word32] = r0_226
	Mem298[sp_293 - 4<i32>:word32] = r3_225
	word32 r12_451
	fn00009EEC(r0_226, r1_185, r2_215, r3_225, r12_282, r5_217, r6_102, r7_250, Mem298[r1_185:word32], Mem298[sp_293 + 8<i32>:word32], Mem298[sp_293 + 12<i32>:word32], r7_250, r12_282, lr_278, Mem298[sp_293 - 4<i32>:word32], Mem298[sp_293:word32], out r10_237, out r11_238, out r12_451, out lr_236)
	r4_218 = r12_282
l0000A6F4:
	Mem323[dwLoc2C:word32] = dwLoc28
	r9Out = dwLoc2C
	r10Out = r10_237
	r11Out = r11_238
	r12Out = r4_218
	lrOut = lr_236
	return dwLoc28
fn0000A614_exit:


word32 fn0000A708(word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A764
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A708_entry:
l0000A708:
	word32 r6_32 = 0x0000A70E<p32> - Mem29[0x0000A74C<p32>:word32]
	word32 r9_33 = Mem29[r6_32 + -36<i32>:word32]
	word32 r3_52 = Mem49[r9_33 + 16<i32>:word32]
	word32 r2_53 = Mem49[r9_33 + 20<i32>:word32]
	word32 r1_54 = Mem49[r9_33 + 24<i32>:word32]
	word32 r0_55 = Mem49[r9_33 + 28<i32>:word32]
	fn00009DD8(1<32>, r10, fp - 0x4C<32>)
	word32 lr_80
	word32 r10_82
	word32 r11_83
	word32 r12_84
	word32 r9_86
	word32 r8_85 = fn0000A614(r0_55, r1_54, r2_53, r3_52, r12, fp - 0x4C<32>, r6_32, r11, fp - 0x4C<32>, r11, r12, 0<32>, lr, out r9_86, out r10_82, out r11_83, out r12_84, out lr_80)
	r9Out = r9_86
	r10Out = r10_82
	r11Out = r11_83
	r12Out = r12_84
	lrOut = lr_80
	return r8_85
fn0000A708_exit:


word32 fn0000A764(word32 r11, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A778
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A764_entry:
l0000A764:
	word32 lr_25
	word32 r10_27
	word32 r11_28
	word32 r12_29
	word32 r9_31
	word32 r8_30 = fn0000A708(r11, 0xFFFFFFFF<32>, r12, lr, out r9_31, out r10_27, out r11_28, out r12_29, out lr_25)
	r9Out = r9_31
	r10Out = r10_27
	r11Out = r11_28
	r12Out = r12_29
	lrOut = lr_25
	return r8_30
fn0000A764_exit:


word32 fn0000A778(word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003168
//      fn00003334
//      fn0000511C
// MayUse:  lr:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A778_entry:
l0000A778:
	word32 lr_23
	word32 r10_25
	word32 r11_26
	word32 r12_27
	word32 r9_29
	word32 r8_28 = fn0000A764(0x3A<32>, r12, lr, out r9_29, out r10_25, out r11_26, out r12_27, out lr_23)
	r9Out = r9_29
	r10Out = r10_25
	r11Out = r11_26
	r12Out = r12_27
	lrOut = lr_23
	return r8_28
fn0000A778_exit:


void fn0000A788(word32 r0, word32 r4, word32 r5, word32 r7, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A788_entry:
l0000A788:
	word32 r6_32 = 0x0000A78E<p32> - Mem29[0x0000A7A8<p32>:word32]
	word32 r9_92
	word32 r10_93
	word32 r11_94
	word32 r12_95
	word32 lr_96
	fn0000A614(r0, r12, r10, r9, r4, fp - 0x4C<32>, r6_32, r7, fp - 0x4C<32>, r9, r10, r12, fn00009E30(r0, r12, r10, r9, r4, r5, r6_32, r7, r11, fp - 0x4C<32>, lr), out r9_92, out r10_93, out r11_94, out r12_95, out lr_96)
	return
fn0000A788_exit:


word32 fn0000A7C8(word32 r0, word32 r1, word32 r4, word32 r5, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006D9C
//      fn00009D80
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A7C8_entry:
l0000A7C8:
	word32 r6_32 = 0x0000A7CE<p32> - Mem29[0x0000A7E8<p32>:word32]
	word32 lr_55
	word32 r12_59
	word32 r9_91
	word32 r10_92
	word32 r11_93
	fn0000A614(r0, r1, r12, r10, r4, fp - 0x4C<32>, r6_32, r7, fp - 0x4C<32>, 0xFFFFFFFF<32>, r10, r12, fn00009E30(r0, r1, r12, r10, r4, r5, r6_32, r7, r11, fp - 0x4C<32>, lr), out r9_91, out r10_92, out r11_93, out r12_59, out lr_55)
	lrOut = lr_55
	return r12_59
fn0000A7C8_exit:


void fn0000A804(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A804_entry:
l0000A804:
	word32 r6_19 = 0x0000A808<p32> - Mem17[0x0000A80E<p32>:word32]
	word32 r9_50
	word32 r10_51
	word32 r11_52
	word32 r12_53
	word32 lr_54
	fn0000A614(r0, r1, r2, r3, r4, r5, r6_19, r7, Mem17[r6_19 + -36<i32>:word32], r10, r11, r12, lr, out r9_50, out r10_51, out r11_52, out r12_53, out lr_54)
	return
fn0000A804_exit:


void fn0000A828(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A83C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A828_entry:
l0000A828:
	word32 r6_19 = 0x0000A82C<p32> - Mem17[0x0000A83A<p32>:word32]
	word32 r9_50
	word32 r10_51
	word32 r11_52
	word32 r12_53
	word32 lr_54
	fn0000A614(r0, r1, r2, r3, r4, r5, r6_19, r7, Mem17[r6_19 + -36<i32>:word32], 0xFFFFFFFF<32>, r11, r12, lr, out r9_50, out r10_51, out r11_52, out r12_53, out lr_54)
	return
fn0000A828_exit:


void fn0000A83C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000A83C_entry:
l0000A83C:
	fn0000A828(r0, r1, r2, r3, r4, r5, r7, r12, 0<32>, lr)
	return
fn0000A83C_exit:


void fn0000A850(word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r8
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A850_entry:
l0000A850:
	word32 r6_32 = 0x0000A856<p32> - Mem29[0x0000A8C0<p32>:word32]
	word32 r8_33 = Mem29[r6_32 + -36<i32>:word32]
	branch r9 == 0<32> l0000A864
l0000A860_1:
	r3 = r9
l0000A864:
	branch r9 != 0<32> l0000A868
l0000A864_1:
	r3 = r8_33
l0000A868:
	word32 r0_76
	word32 r2_78
	word32 r3_79
	word32 r4_80
	word32 r6_82
	word32 r7_83
	word32 lr_84
	word32 r12_89
	call Mem37[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r12,r1:r1,r10:r10,r11:r11,r12:r12,r2:r2,r3:r3_57,r4:r4,r5:r5,r6:r6_32,r7:r10,r9:r9
		defs: lr:lr_84,r0:r0_76,r12:r12_89,r2:r2_78,r3:r3_79,r4:r4_80,r6:r6_82,r7:r7_83
	word32 r9_99 = Mem97[r12_89:word32]
	word32 r5_100 = CONVERT(r7_83 == 0<32>, bool, word32) | Mem97[r3_79 + 4<i32>:word32]
	word32 lr_111
	word32 r12_116
	word32 r10_232
	word32 r11_233
	fn00009EEC(r0_76, r3_79 + 8<32>, r2_78, r3_79, r4_80, r5_100, r6_82, r7_83, Mem106[r3_79:word32], r11, r0_76, 0<32>, 0<32>, lr_84, r5_100, r3_79 + 8<32>, out r10_232, out r11_233, out r12_116, out lr_111)
	word32 lr_125
	word32 r11_235
	word32 r12_236
	word32 lr_237
	word32 r10_234
	fn00009EEC(r0_76, r3_79 + 8<32>, r12_116 + 1<32>, r3_79, r12_116, r5_100, r6_82, r7_83, Mem141[r3_79:word32], r11, r0_76, r12_116 + 1<32>, fn00009EDC(r12_116, r5_100, r7_83, r12_116 + 1<32>, lr_111, out lr_125), lr_125, r5_100, r3_79 + 8<32>, out r10_234, out r11_235, out r12_236, out lr_237)
	Mem157[r12_89:word32] = r9_99
	branch r7_83 == 0<32> l0000A8BE
l0000A8BC:
	Mem161[r7_83:word32] = r12_116
l0000A8BE:
	return
fn0000A850_exit:


word32 fn0000A8DC(word32 r1, word32 r3, word32 r5, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000418C
// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r3:[0..31] r5:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A8DC_entry:
l0000A8DC:
	word32 r6_31 = 0x0000A8E0<p32> - Mem29[0x0000A91A<p32>:word32]
	word32 r12_34 = Mem29[r6_31 + -36<i32>:word32]
	branch r8 == 0<32> l0000A8EE
l0000A8EA_1:
	r5 = r8
l0000A8EE:
	branch r8 != 0<32> l0000A8F2
l0000A8EE_1:
	r5 = r12_34
l0000A8F2:
	word32 r0_76
	word32 r2_78
	word32 r4_80
	word32 r5_81
	word32 r6_82
	word32 r7_83
	word32 lr_84
	word32 r12_85
	call Mem29[r6_31 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r10,r1:r1,r10:r10,r11:r11,r12:r12_34,r2:r9,r3:r3,r4:r12,r5:r5_62,r6:r6_31,r7:r11,r8:r8,r9:r9
		defs: lr:lr_84,r0:r0_76,r12:r12_85,r2:r2_78,r4:r4_80,r5:r5_81,r6:r6_82,r7:r7_83
	word32 r1_93 = Mem29[r12_85:word32]
	word32 lr_105
	word32 r10_106
	word32 r11_107
	word32 r12_110
	fn00009EEC(r0_76, r1_93, r2_78, r12_85, r4_80, r5_81, r6_82, r7_83, Mem98[r5_81:word32], r2_78, r0_76, r7_83, r4_80, lr_84, Mem95[r5_81 + 4<i32>:word32], r5_81 + 8<32>, out r10_106, out r11_107, out r12_110, out lr_105)
	Mem117[r12_85:word32] = r1_93
	r11Out = r11_107
	r12Out = r12_110
	lrOut = lr_105
	return r10_106
fn0000A8DC_exit:


void fn0000A920(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000A920_entry:
l0000A920:
	word32 r6_31 = 0x0000A924<p32> - Mem29[0x0000A946<p32>:word32]
	word32 r0_36
	word32 r1_37
	word32 r4_40
	word32 r5_41
	word32 r6_42
	word32 r7_43
	word32 lr_44
	word32 r12_45
	call Mem29[r6_31 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r12:r12,r2:r2,r3:r3,r4:r4,r5:r12,r6:r6_31,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_44,r0:r0_36,r1:r1_37,r12:r12_45,r4:r4_40,r5:r5_41,r6:r6_42,r7:r7_43
	word32 r2_49 = Mem29[r12_45:word32]
	word32 r12_51 = Mem29[r6_42 + -36<i32>:word32]
	branch r5_41 == 0<32> l0000A93A
l0000A936_1:
	r12_51 = r5_41
l0000A93A:
	word32 lr_109
	word32 r12_108
	fn0000B978(r0_36, r1_37, r2_49, r4_40, r7_43, 0x28<32>, r12_51, lr_44, out r12_108, out lr_109)
	Mem75[r12_45:word32] = r2_49
	return
fn0000A920_exit:


void fn0000A968(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r8 r9
// Preserved: r12 r4 r5 r6 r7 sp
fn0000A968_entry:
l0000A968:
	word32 r6_19 = 0x0000A96C<p32> - Mem17[0x0000A996<p32>:word32]
	word32 r12_24 = r11 + r10
	word32 r11_25 = r12 + r10
l0000A986:
	r10 = r10 - 1<32>
	r12_24 = r12_24 - 1<32>
	r11_25 = r11_25 - 1<32>
	branch r10 != 0xFFFFFFFF<32> l0000A97A
l0000A97A:
	Mem41[r11_25:byte] = SLICE(CONVERT(Mem36[Mem36[Mem36[r6_19 + -32<i32>:word32]:word32] + CONVERT(Mem36[r12_24:byte], byte, word32) * 2<32>:int16], int16, int32), byte, 0)
l0000A990:
	return
fn0000A968_exit:


void fn0000A998(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r8 r9
// Preserved: r12 r4 r5 r6 r7 sp
fn0000A998_entry:
l0000A998:
	word32 r6_19 = 0x0000A99C<p32> - Mem17[0x0000A9CA<p32>:word32]
	word32 r12_24 = r11 + r10
	word32 r11_25 = r12 + r10
l0000A9B8:
	r10 = r10 - 1<32>
	r12_24 = r12_24 - 1<32>
	r11_25 = r11_25 - 1<32>
	branch r10 != 0xFFFFFFFF<32> l0000A9AA
l0000A9AA:
	Mem41[r11_25:byte] = SLICE(CONVERT(Mem36[Mem36[Mem36[r6_19 + 532<i32>:word32]:word32] + CONVERT(Mem36[r12_24:byte], byte, word32) * 2<32>:int16], int16, int32), byte, 0)
l0000A9C2:
	return
fn0000A998_exit:


byte fn0000A9CC(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: VN
// Trashed: VNZC r10 r8 r9
// Preserved: sp
fn0000A9CC_entry:
l0000A9CC:
	return <invalid>
fn0000A9CC_exit:


word32 fn0000A9DE(word32 r8, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
//      fn0000B7B2
// MayUse:  r8:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000A9DE_entry:
l0000A9DE:
	word32 lr_35 = Mem34[r8 + 8<i32>:word32]
	branch lr_35 <= 0xC<32> l0000AA12
l0000AA12:
	branch lr_35 != 0<32> l0000AA1C
l0000AA18_1:
l0000AA1C:
l0000AA0C:
l0000AA1E:
l0000AA26_thunk_fn0000AF76:
	word32 lr_74
	word32 r1_76
	word32 r12_79
	word32 r2_80
	word32 r3_81
	word32 r6_119
	word32 r0_75 = fn0000AF76(out r1_76, out r2_80, out r3_81, out r6_119, out r12_79, out lr_74)
	r1Out = r1_76
	r2Out = r2_80
	r3Out = r3_81
	r12Out = r12_79
	lrOut = lr_74
	return r0_75
fn0000A9DE_exit:


void fn0000ACAE(word32 r6, word32 r7)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000ACAE_entry:
l0000ACAE:
l0000ACAE_thunk_fn0000ACB0:
	word32 r1_28
	word32 r2_29
	word32 r3_30
	word32 r6_31
	word32 r12_32
	word32 lr_33
	fn0000ACB0(r6, r7, out r1_28, out r2_29, out r3_30, out r6_31, out r12_32, out lr_33)
	return
fn0000ACAE_exit:


word32 fn0000ACB0(word32 r6, word32 r7, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000ACAE
//      fn0000AE42
// MayUse:  r6:[0..31] r7:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000ACB0_entry:
	word32 sp_109 = fp
l0000ACB0:
l0000B706:
	word32 r10_12 = Mem4[sp_109 + 48<i32>:word32]
	word32 r3_106 = 1<32>
l0000B70E:
	word32 r5_11 = r10_12
	r10_12 = r10_12 - 1<32>
	branch SLICE(CONVERT(Mem4[r10_12:byte], byte, word32) - 0x25<32>, byte, 0) != 0<8> l0000B70C
l0000B70C:
	r3_106 = r3_106 + 1<32>
l0000B71C:
	word32 r10_21 = Mem4[sp_109 + 56<i32>:word32] - r3_106
	word32 r2_114 = max(r10_21, 0<32>) + r3_106
	branch r2_114 >=u Mem4[sp_109 + 28<i32>:word32] - Mem4[sp_109 + 44<i32>:word32] l0000B79C
l0000B734:
	branch r7 == 0<32> l0000B778
l0000B738:
	word32 r6_60
	branch r10_21 <= 0<32> l0000B75A
l0000B73E:
	branch Mem4[sp_109 + 52<i32>:word32] != 0x30<32> l0000B750
l0000B750:
l0000B74A:
l0000B754:
	word32 r4_55
	word32 lr_57
	word32 r11_59
	call Mem4[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_57,r11:r11_59,r6:r6_60,r7:r4_55
		defs: lr:lr_57,r11:r11_59,r2:r2_54,r3:r3_50,r4:r4_55,r5:r5_53,r6:r6_60,sp:sp_48
	r7 = r4_55
	r6 = r6_60
l0000B75A:
	word32 r6_89
	word32 lr_86
	word32 r7_85
	branch Mem4[sp_109 + 60<i32>:word32] == 0<32> l0000B76C
l0000B76C:
	call Mem4[r6 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_86,r10:r3_72,r11:r5_70,r12:r7_74,r6:r6_89,r7:r7_85
		defs: lr:lr_86,r2:r2_83,r3:r3_79,r6:r6_89,r7:r7_85,sp:sp_77
	r7 = r7_85
	lr = lr_86
	r6 = r6_89
l0000B760:
	fn0000A998(r3_106, r5_11, r7)
	lr = lr_96
l0000B776:
	r7 = r7 + r3_106
l0000B778:
	word32 r11_117 = Mem4[sp_109 + 44<i32>:word32] + r2_114
l0000B77C:
	Mem121[sp_109 + 44<i32>:word32] = r11_117
l0000B77E:
	Mem127[sp_109 + 48<i32>:word32] = Mem123[sp_109 + 48<i32>:word32] + 1<32>
l0000B784:
	word32 r9_129 = CONVERT(Mem127[Mem127[sp_109 + 48<i32>:word32]:byte], byte, word32)
	branch r9_129 != 0<32> l0000AA2A
l0000AA2A:
	branch SLICE(r9_129 - 0x25<32>, byte, 0) != 0<8> l0000AA3E
l0000AA3E:
	lr = Mem127[sp_109 + 44<i32>:word32]
	branch Mem127[sp_109 + 28<i32>:word32] - lr <=u 1<32> l0000B79C
l0000AA4A:
	branch r7 == 0<32> l0000AA50
l0000AA4E:
	Mem143[r7:byte] = SLICE(r9_129, byte, 0)
l0000AA50:
l0000AA54_thunk_fn0000AEFA:
	word32 r3_152
	word32 r2_156
	word32 lr_159
	word32 r12_160
	word32 r6_162
	word32 r1_163
	word32 r0_164 = fn0000AEFA(out r1_163, out r2_156, out r3_152, out r6_162, out r12_160, out lr_159)
	r1Out = r1_163
	r2Out = r2_156
	r3Out = r3_152
	r6Out = r6_162
	r12Out = r12_160
	lrOut = lr_159
	return r0_164
l0000AA32:
	word32 r2_167 = Mem127[sp_109 + 32<i32>:word32]
	Mem169[sp_109 + 52<i32>:word32] = 0<32>
	Mem170[sp_109 + 60<i32>:word32] = r2_167
	word32 r10_168 = 0<32>
l0000AA5A:
	word32 r11_173 = Mem172[sp_109 + 48<i32>:word32]
	Mem176[sp_109 + 48<i32>:word32] = r11_173 + 1<32>
	word32 r9_177 = CONVERT(Mem176[r11_173 + 1<32>:byte], byte, word32)
	branch SLICE(r9_177 - 0x23<32>, byte, 0) == 0<8> l0000AA58
l0000AA58:
	r10_168 = 1<32>
l0000AA6A:
	branch SLICE(r9_177 - 0x2D<32>, byte, 0) == 0<8> l0000AA92
l0000AA72:
	branch SLICE(r9_177 - 0x30<32>, byte, 0) == 0<8> l0000AA92
l0000AA7A:
	branch SLICE(r9_177 - 0x5E<32>, byte, 0) == 0<8> l0000AA8C
l0000AA8C:
	Mem191[sp_109 + 60<i32>:word32] = 1<32>
l0000AA82:
	branch SLICE(r9_177 - 0x5F<32>, byte, 0) != 0<8> l0000AA96
l0000AA96:
	branch r9_177 <=u 0x39<32> l0000AAA6
l0000AAA6:
	Mem199[sp_109 + 56<i32>:word32] = 0<32>
l0000AABC:
	branch Mem200[sp_109 + 56<i32>:word32] != Mem200[0x0000AB10<p32>:word32] l0000AAD6
l0000AAC4:
	branch CONVERT(Mem200[Mem200[sp_109 + 48<i32>:word32]:byte], byte, word32) <= 0x37<32> l0000AAD6
l0000AAD6:
	Mem221[sp_109 + 56<i32>:word32] = Mem200[sp_109 + 56<i32>:word32] * 0xA<32> - 0x30<32> + CONVERT(Mem200[Mem200[sp_109 + 48<i32>:word32]:byte], byte, word32)
l0000AAD0:
	Mem223[sp_109 + 56<i32>:word32] = Mem200[0x0000AB18<p32>:word32]
l0000AAE8:
	word32 r4_226 = Mem225[sp_109 + 48<i32>:word32]
	Mem228[sp_109 + 48<i32>:word32] = r4_226 + 1<32>
	branch CONVERT(Mem228[r4_226 + 1<32>:byte], byte, word32) <=u 0x39<32> l0000AAAC
l0000AAAC:
	branch Mem228[sp_109 + 56<i32>:word32] <= Mem228[0x0000AB10<p32>:word32] l0000AABC
l0000AAB6:
	Mem238[sp_109 + 56<i32>:word32] = Mem228[0x0000AB16<p32>:word32]
l0000AAA0:
	Mem240[sp_109 + 56<i32>:word32] = 0xFFFFFFFF<32>
l0000AAF8:
	word32 r4_255
	word32 r3_243 = Mem242[sp_109 + 48<i32>:word32]
	word32 r9_245 = CONVERT(Mem242[r3_243:byte], byte, word32)
	branch SLICE(r9_245 - 0x45<32>, byte, 0) == 0<8> l0000AB1C
l0000AB04:
	branch SLICE(r9_245 - 0x4F<32>, byte, 0) == 0<8> l0000AB1C
l0000AB1C:
	Mem258[sp_109 + 48<i32>:word32] = Mem242[sp_109 + 48<i32>:word32] + 1<32>
	r4_255 = r9_245
l0000AB0C:
	r4_255 = 0<32>
l0000AB24:
	lr = Mem261[sp_109 + 48<i32>:word32]
	word32 r0_263 = CONVERT(Mem261[lr:byte], byte, word32)
	Mem264[sp_109 + 64<i32>:word32] = r0_263
	branch r0_263 >u 0x7A<32> l0000B706
l0000AB32:
	word32 r11_1547
	word32 lr_1549
	word32 r0_1708
	word32 r12_1550
	word32 r5_1541
	word32 r3_1535
	word32 r5_1595
	switch (r0_263) { l0000AB3C l0000AB40 l0000AB44 l0000AB48 l0000AB4C l0000AB50 l0000AB54 l0000AB58 l0000AB5C l0000AB60 l0000AB64 l0000AB68 l0000AB6C l0000AB70 l0000AB74 l0000AB78 l0000AB7C l0000AB80 l0000AB84 l0000AB88 l0000AB8C l0000AB90 l0000AB94 l0000AB98 l0000AB9C l0000ABA0 l0000ABA4 l0000ABA8 l0000ABAC l0000ABB0 l0000ABB4 l0000ABB8 l0000ABBC l0000ABC0 l0000ABC4 l0000ABC8 l0000ABCC l0000ABD0 l0000ABD4 l0000ABD8 l0000ABDC l0000ABE0 l0000ABE4 l0000ABE8 l0000ABEC l0000ABF0 l0000ABF4 l0000ABF8 l0000ABFC l0000AC00 l0000AC04 l0000AC08 l0000AC0C l0000AC10 l0000AC14 l0000AC18 l0000AC1C l0000AC20 l0000AC24 l0000AC28 l0000AC2C l0000AC30 l0000AC34 l0000AC38 l0000AC3C l0000AC40 l0000AC44 l0000AC48 l0000AC4C l0000AC50 l0000AC54 l0000AC58 l0000AC5C l0000AC60 l0000AC64 l0000AC68 l0000AC6C l0000AC70 l0000AC74 l0000AC78 l0000AC7C l0000AC80 l0000AC84 l0000AC88 l0000AC8C l0000AC90 l0000AC94 l0000AC98 l0000AC9C l0000ACA0 l0000ACA4 l0000ACA8 l0000ACAC l0000ACB0 l0000ACB4 l0000ACB8 l0000ACBC l0000ACC0 l0000ACC4 l0000ACC8 l0000ACCC l0000ACD0 l0000ACD4 l0000ACD8 l0000ACDC l0000ACE0 l0000ACE4 l0000ACE8 l0000ACEC l0000ACF0 l0000ACF4 l0000ACF8 l0000ACFC l0000AD00 l0000AD04 l0000AD08 l0000AD0C l0000AD10 l0000AD14 l0000AD18 l0000AD1C l0000AD20 l0000AD24 }
l0000AD24:
l0000AD28:
	r5_1595 = 0<32>
l0000AD20:
l0000B56C:
	branch r4_255 == 0x45<32> l0000AE3E
l0000B570_thunk_fn0000AE3E:
	word32 r2_279
	word32 lr_282
	word32 r12_283
	word32 r6_285
	word32 r0_287 = fn0000AE3E(out r2_279, out r6_285, out r12_283, out lr_282)
	r1Out = r1_286
	r2Out = r2_279
	r3Out = r3_275
	r6Out = r6_285
	r12Out = r12_283
	lrOut = lr_282
	return r0_287
l0000B574:
	word32 r10_291 = Mem264[Mem264[sp_109 + 24<i32>:word32] + 20<i32>:word32]
	branch true l0000AF6C
l0000B582_thunk_fn0000AF6C:
	word32 r2_302
	word32 r6_308
	word32 r1_309
	word32 r0_310 = fn0000AF6C(out r1_309, out r2_302, out r6_308)
	r1Out = r1_309
	r2Out = r2_302
	r3Out = r3_298
	r6Out = r6_308
	r12Out = r12_306
	lrOut = lr_305
	return r0_310
l0000B586:
	branch r10_291 <= 0xFFFFF893<32> l0000B596
l0000B592_1:
l0000B596:
	branch r10_291 > 0xFFFFF893<32> l0000B59A
l0000B596_1:
l0000B59A:
l0000B59A_thunk_fn0000AF6C:
	word32 r2_328
	word32 r6_334
	word32 r1_335
	word32 r0_336 = fn0000AF6C(out r1_335, out r2_328, out r6_334)
	r1Out = r1_335
	r2Out = r2_328
	r3Out = r3_324
	r6Out = r6_334
	r12Out = r12_332
	lrOut = lr_331
	return r0_336
l0000AD1C:
l0000AD18:
l0000B538:
	branch r4_255 == 0x45<32> l0000B706
l0000B540:
l0000B546_thunk_fn0000AF6C:
	word32 r2_349
	word32 r6_355
	word32 r1_356
	word32 r0_357 = fn0000AF6C(out r1_356, out r2_349, out r6_355)
	r1Out = r1_356
	r2Out = r2_349
	r3Out = r3_345
	r6Out = r6_355
	r12Out = r12_353
	lrOut = lr_352
	return r0_357
l0000AD14:
l0000AD10:
l0000B3CA:
l0000B3DC_thunk_fn0000AF6C:
	word32 r2_373
	word32 r6_379
	word32 r1_380
	word32 r0_381 = fn0000AF6C(out r1_380, out r2_373, out r6_379)
	r1Out = r1_380
	r2Out = r2_373
	r3Out = r3_369
	r6Out = r6_379
	r12Out = r12_377
	lrOut = lr_376
	return r0_381
l0000AD0C:
l0000B37C:
	word32 r10_383 = Mem264[sp_109 + 56<i32>:word32]
	word32 r8_386 = max(r10_383 - 1<32>, 0<32>)
	word32 r4_387 = r8_386 + 1<32>
	branch r8_386 + 1<32> >=u Mem264[sp_109 + 28<i32>:word32] - Mem264[sp_109 + 44<i32>:word32] l0000B79C
l0000B396:
	branch r7 == 0<32> l0000B3C0
l0000B39A:
	word32 r6_434
	branch r10_383 <= 1<32> l0000B3BC
l0000B3A0:
	branch Mem264[sp_109 + 52<i32>:word32] != 0x30<32> l0000B3B2
l0000B3B2:
l0000B3AC:
l0000B3B6:
	word32 r5_427
	word32 lr_431
	word32 r11_433
	call Mem264[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_431,r11:r11_433,r6:r6_434,r7:r5_427
		defs: lr:lr_431,r11:r11_433,r4:r4_429,r5:r5_427,r6:r6_434,sp:sp_422
	r7 = r5_427
	r6 = r6_434
l0000B3BC:
	Mem441[r7:byte] = 9<8>
	r7 = r7 + 1<i32>
l0000B3C0:
	lr = Mem445[sp_109 + 44<i32>:word32] + r4_387
	Mem451[sp_109 + 44<i32>:word32] = lr
l0000AD08:
l0000B308:
	word32 r8_452 = Mem264[sp_109 + 24<i32>:word32]
	word32 r5_454 = Mem264[r8_452:word32]
	word32 r4_455 = Mem264[r8_452 + 4<i32>:word32]
	word32 r3_456 = Mem264[r8_452 + 8<i32>:word32]
	Mem459[sp_109 + -4<i32>:word32] = Mem264[r8_452 + 12<i32>:word32]
	Mem460[sp_109 + -8<i32>:word32] = r3_456
	Mem461[sp_109 + -12<i32>:word32] = r4_455
	Mem462[sp_109 + -16<i32>:word32] = r5_454
	word32 r4_468 = Mem462[sp_109 + 24<i32>:word32]
	word32 r3_463 = Mem462[r8_452 + 16<i32>:word32]
	word32 r2_464 = Mem462[r8_452 + 20<i32>:word32]
	word32 r1_465 = Mem462[r8_452 + 24<i32>:word32]
	word32 r8_467 = sp_109 + 0x458<32>
	word64 r11_r10_470 = Mem462[r4_468 + 32<i32>:word64]
	word32 lr_471 = Mem462[r4_468 + 40<i32>:word32]
	Mem472[r8_467 + -4<i32>:word32] = Mem462[r8_452 + 28<i32>:word32]
	Mem473[r8_467 + -8<i32>:word32] = r1_465
	Mem474[r8_467 + -12<i32>:word32] = r2_464
	Mem475[r8_467 + -16<i32>:word32] = r3_463
	word32 r9_453 = sp_109 + 0x448<32>
	word32 r5_476 = Mem475[sp_109:word32]
	word32 r4_477 = Mem475[sp_109 + 4<i32>:word32]
	word32 r3_478 = Mem475[sp_109 + 8<i32>:word32]
	Mem482[r9_453 + -4<i32>:word32] = Mem475[sp_109 + 12<i32>:word32]
	Mem483[r9_453 + -8<i32>:word32] = r3_478
	Mem484[r9_453 + -12<i32>:word32] = r4_477
	Mem485[r9_453 + -16<i32>:word32] = r5_476
	Mem488[sp_109 + 1128<i32>:word64] = r11_r10_470
	Mem489[sp_109 + 1136<i32>:word32] = lr_471
	r0_1708 = sp_109 + 0x482<32>
	word32 r12_493 = fn0000D1B8(r0_1708, r1_465, r9_453)
	r5_1541 = r12_493 >>u 0x1F<32>
	r12_1550 = r12_493
l0000B348:
	word32 r8_511
	word32 r8_504 = r12_1550 / 0xA<32>
	r0_1708 = r0_1708 - 1<32>
	r12_1550 = r8_504
	branch r12_493 >>u 0x1F<32> == 0<32> l0000B35C
l0000B35C:
	r8_511 = 0x3A<32>
l0000B356:
	r8_511 = 0x26<32>
l0000B360:
	Mem518[r0_1708:byte] = SLICE(r8_511, byte, 0)
	branch r8_504 != 0<32> l0000B348
l0000B36A:
	r3_1535 = 1<32>
l0000AD04:
l0000AD04_thunk_fn0000AE3E:
	word32 r2_529
	word32 lr_532
	word32 r12_533
	word32 r6_535
	word32 r0_537 = fn0000AE3E(out r2_529, out r6_535, out r12_533, out lr_532)
	r1Out = r1_536
	r2Out = r2_529
	r3Out = r3_525
	r6Out = r6_535
	r12Out = r12_533
	lrOut = lr_532
	return r0_537
l0000AD00:
l0000ACFC:
l0000AD34:
l0000ACF8:
l0000ACF4:
l0000B290:
	word32 r10_540 = Mem264[sp_109 + 56<i32>:word32]
	word32 r8_543 = max(r10_540 - 1<32>, 0<32>)
	word32 r4_544 = r8_543 + 1<32>
	branch r8_543 + 1<32> >=u Mem264[sp_109 + 28<i32>:word32] - Mem264[sp_109 + 44<i32>:word32] l0000B79C
l0000B2AA:
	branch r7 == 0<32> l0000B2D4
l0000B2AE:
	word32 r6_577
	word32 lr_574
	branch r10_540 <= 1<32> l0000B2D0
l0000B2B4:
	branch Mem264[sp_109 + 52<i32>:word32] != 0x30<32> l0000B2C6
l0000B2C6:
l0000B2C0:
l0000B2CA:
	word32 r5_570
	word32 r11_576
	call Mem264[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_574,r11:r11_576,r6:r6_577,r7:r5_570
		defs: lr:lr_574,r11:r11_576,r4:r4_572,r5:r5_570,r6:r6_577,sp:sp_565
	r7 = r5_570
	lr = lr_574
	r6 = r6_577
l0000B2D0:
	Mem584[r7:byte] = 0xA<8>
	r7 = r7 + 1<i32>
l0000B2D4:
	Mem594[sp_109 + 44<i32>:word32] = Mem588[sp_109 + 44<i32>:word32] + r4_544
l0000ACF0:
l0000B246:
	branch r4_255 == 0x45<32> l0000B706
l0000B24E:
l0000B25E_thunk_fn0000AF76:
	word32 r3_608
	word32 r2_612
	word32 lr_615
	word32 r12_616
	word32 r6_618
	word32 r1_619
	word32 r0_620 = fn0000AF76(out r1_619, out r2_612, out r3_608, out r6_618, out r12_616, out lr_615)
	r1Out = r1_619
	r2Out = r2_612
	r3Out = r3_608
	r6Out = r6_618
	r12Out = r12_616
	lrOut = lr_615
	return r0_620
l0000ACEC:
l0000B212:
	branch r4_255 == 0x45<32> l0000B706
l0000B21A:
l0000ACE8:
l0000B204:
	branch r4_255 == 0x45<32> l0000B706
l0000B20C:
l0000ACE4:
l0000B21E:
	branch r4_255 == 0x45<32> l0000B706
l0000B226:
l0000B236_thunk_fn0000AF76:
	word32 r3_642
	word32 r2_646
	word32 lr_649
	word32 r12_650
	word32 r6_652
	word32 r1_653
	word32 r0_654 = fn0000AF76(out r1_653, out r2_646, out r3_642, out r6_652, out r12_650, out lr_649)
	r1Out = r1_653
	r2Out = r2_646
	r3Out = r3_642
	r6Out = r6_652
	r12Out = r12_650
	lrOut = lr_649
	return r0_654
l0000ACE0:
l0000ACDC:
l0000ACD8:
l0000ACD4:
l0000ACD0:
l0000AF4E:
	branch r4_255 == 0x45<32> l0000B706
l0000AF56:
l0000AF5A:
	word32 r8_662 = Mem264[sp_109 + 52<i32>:word32]
	branch r8_662 == 0x30<32> l0000AF6C
l0000AF60_thunk_fn0000AF6C:
	word32 r2_671
	word32 r6_677
	word32 r1_678
	word32 r0_679 = fn0000AF6C(out r1_678, out r2_671, out r6_677)
	r1Out = r1_678
	r2Out = r2_671
	r3Out = r3_667
	r6Out = r6_677
	r12Out = r12_675
	lrOut = lr_674
	return r0_679
l0000AF62:
	branch r8_662 == 0x2D<32> l0000AF6C
l0000AF66_thunk_fn0000AF6C:
	word32 r2_689
	word32 r6_695
	word32 r1_696
	word32 r0_697 = fn0000AF6C(out r1_696, out r2_689, out r6_695)
	r1Out = r1_696
	r2Out = r2_689
	r3Out = r3_685
	r6Out = r6_695
	r12Out = r12_693
	lrOut = lr_692
	return r0_697
l0000AF68:
	Mem700[sp_109 + 52<i32>:word32] = 0x5F<32>
l0000AF6A_thunk_fn0000AF6C:
	word32 r2_707
	word32 r6_713
	word32 r1_714
	word32 r0_715 = fn0000AF6C(out r1_714, out r2_707, out r6_713)
	r1Out = r1_714
	r2Out = r2_707
	r3Out = r3_703
	r6Out = r6_713
	r12Out = r12_711
	lrOut = lr_710
	return r0_715
l0000ACCC:
l0000AF40:
	branch r4_255 == 0x45<32> l0000B706
l0000AF48:
l0000AF4C_thunk_fn0000AF6C:
	word32 r2_727
	word32 r6_733
	word32 r1_734
	word32 r0_735 = fn0000AF6C(out r1_734, out r2_727, out r6_733)
	r1Out = r1_734
	r2Out = r2_727
	r3Out = r3_723
	r6Out = r6_733
	r12Out = r12_731
	lrOut = lr_730
	return r0_735
l0000ACC8:
l0000ACC4:
l0000AD96:
	word32 r8_739 = Mem264[sp_109 + 60<i32>:word32]
	branch r10_168 == 0<32> l0000AD9E
l0000AD9A_1:
	r8_739 = 1<32>
l0000AD9E:
	Mem753[sp_109 + 60<i32>:word32] = r8_739
	branch r4_255 != 0<32> l0000B706
l0000ADA6:
l0000ADA6_thunk_fn0000AE3E:
	word32 r2_764
	word32 lr_767
	word32 r12_768
	word32 r6_770
	word32 r0_772 = fn0000AE3E(out r2_764, out r6_770, out r12_768, out lr_767)
	r1Out = r1_771
	r2Out = r2_764
	r3Out = r3_760
	r6Out = r6_770
	r12Out = r12_768
	lrOut = lr_767
	return r0_772
l0000ACC0:
l0000ACBC:
l0000ACB8:
l0000ACB4:
l0000ACAC:
l0000ACA8:
l0000ACA4:
l0000B59E:
	word32 r8_774 = Mem264[r6 + 700<i32>:word32]
	word32 r12_775 = Mem264[sp_109 + 60<i32>:word32]
	word32 r11_776 = Mem264[sp_109 + 40<i32>:word32]
	branch r10_168 == 0<32> l0000B5AC
l0000B5A8_1:
	r12_775 = 0<32>
l0000B5AC:
	branch r11_776 != 0<32> l0000B5B2
l0000B5AE_1:
	r11_776 = r8_774
l0000B5B2:
	Mem789[sp_109 + 60<i32>:word32] = r12_775
	branch r10_168 != 0<32> l0000B5BC
l0000B5B8_1:
l0000B5BC:
	branch r10_168 == 0<32> l0000B5C0
l0000B5BC_1:
l0000B5C0:
	Mem803[sp_109 + 40<i32>:word32] = r11_776
	word32 r7_816
	word32 r12_818
	word32 r11_819
	word32 r6_820
	word32 r2_814
	call Mem803[r6 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_817,r11:r11_819,r6:r6_820,r7:r7_816
		defs: lr:lr_817,r11:r11_819,r12:r12_818,r2:r2_814,r6:r6_820,r7:r7_816,sp:sp_808
	word32 r4_824 = Mem803[sp_109 + 44<i32>:word32]
	word32 r10_827 = Mem803[sp_109 + 56<i32>:word32] - r12_818
	word32 r3_829 = max(r10_827, 0<32>) + r12_818
	word32 r5_831 = r12_818
	branch r3_829 >=u Mem803[sp_109 + 28<i32>:word32] - r4_824 l0000B79C
l0000B5E2:
	r7 = r7_816
	r6 = r6_820
	branch r7_816 == 0<32> l0000B636
l0000B5E6:
	word32 r7_866
	word32 r6_862
	r7_866 = r7_816
	r6 = r6_820
	branch r10_827 <= 0<32> l0000B608
l0000B5EC:
	branch Mem803[sp_109 + 52<i32>:word32] != 0x30<32> l0000B5FE
l0000B5FE:
l0000B5F8:
l0000B602:
	word32 r4_857
	word32 lr_859
	word32 r11_861
	call Mem803[r6_820 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_859,r11:r11_861,r6:r6_862,r7:r4_857
		defs: lr:lr_859,r11:r11_861,r2:r2_856,r3:r3_852,r4:r4_857,r5:r5_855,r6:r6_862,sp:sp_850
	r7_866 = r4_857
	r6 = r6_862
l0000B608:
	word32 r6_893
	word32 lr_890
	word32 r7_889
	branch r2_814 == 0<32> l0000B618
l0000B618:
	branch Mem803[sp_109 + 60<i32>:word32] == 0<32> l0000B62A
l0000B62A:
	call Mem803[r6 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_890,r10:r5_876,r11:Mem803[sp_870 + 40<i32>:word32],r12:r7_878,r6:r6_893,r7:r7_889
		defs: lr:lr_890,r3:r3_883,r5:r5_886,r6:r6_893,r7:r7_889,sp:sp_881
	r7_866 = r7_889
	lr = lr_890
	r6 = r6_893
l0000B61E:
	fn0000A998(r5_831, Mem803[sp_109 + 40<i32>:word32], r7_866)
l0000B60C:
	fn0000A968(r5_831, Mem803[sp_109 + 40<i32>:word32], r7_866)
l0000B634:
	r7 = r7_866 + r5_831
l0000B636:
	r11_117 = Mem803[sp_109 + 44<i32>:word32] + r3_829
l0000ACA0:
l0000B54A:
	branch r4_255 == 0x45<32> l0000AE3E
l0000B54E_thunk_fn0000AE3E:
	word32 r2_943
	word32 lr_946
	word32 r12_947
	word32 r6_949
	word32 r0_951 = fn0000AE3E(out r2_943, out r6_949, out r12_947, out lr_946)
	r1Out = r1_950
	r2Out = r2_943
	r3Out = r3_939
	r6Out = r6_949
	r12Out = r12_947
	lrOut = lr_946
	return r0_951
l0000B552:
	branch r4_255 == 0x4F<32> l0000B706
l0000B55A:
	word32 r8_957 = Mem264[Mem264[sp_109 + 24<i32>:word32] + 20<i32>:word32]
	r3_1535 = 4<32>
	r5_1541 = CONVERT(r8_957 < 0xFFFFF894<32>, bool, word32)
	r11_1547 = r8_957 + 0x76C<32>
l0000AC9C:
l0000B370:
	branch r4_255 != 0x4F<32> l0000AE3E
l0000B374_thunk_fn0000AE3E:
	word32 r2_973
	word32 lr_976
	word32 r12_977
	word32 r6_979
	word32 r0_981 = fn0000AE3E(out r2_973, out r6_979, out r12_977, out lr_976)
	r1Out = r1_980
	r2Out = r2_973
	r3Out = r3_969
	r6Out = r6_979
	r12Out = r12_977
	lrOut = lr_976
	return r0_981
l0000B378:
l0000AC98:
l0000B510:
	branch r4_255 == 0x45<32> l0000B706
l0000B518:
l0000B534_thunk_fn0000AF6C:
	word32 r2_1004
	word32 r6_1010
	word32 r1_1011
	word32 r0_1012 = fn0000AF6C(out r1_1011, out r2_1004, out r6_1010)
	r1Out = r1_1011
	r2Out = r2_1004
	r3Out = r3_1000
	r6Out = r6_1010
	r12Out = r12_1008
	lrOut = lr_1007
	return r0_1012
l0000AC94:
l0000AC90:
l0000B3E0:
	branch r4_255 == 0x45<32> l0000B706
l0000B3E8:
l0000B3FC_thunk_fn0000AF6C:
	word32 r2_1032
	word32 r6_1038
	word32 r1_1039
	word32 r0_1040 = fn0000AF6C(out r1_1039, out r2_1032, out r6_1038)
	r1Out = r1_1039
	r2Out = r2_1032
	r3Out = r3_1028
	r6Out = r6_1038
	r12Out = r12_1036
	lrOut = lr_1035
	return r0_1040
l0000AC8C:
l0000ADB4:
l0000AC88:
l0000B2F8:
	branch r4_255 == 0x45<32> l0000B706
l0000B300:
l0000B304_thunk_fn0000AF6C:
	word32 r2_1053
	word32 r6_1059
	word32 r1_1060
	word32 r0_1061 = fn0000AF6C(out r1_1060, out r2_1053, out r6_1059)
	r1Out = r1_1060
	r2Out = r2_1053
	r3Out = r3_1049
	r6Out = r6_1059
	r12Out = r12_1057
	lrOut = lr_1056
	return r0_1061
l0000AC84:
l0000AD2E:
l0000AC80:
l0000AC7C:
l0000B2DE:
	Mem1066[sp_109 + 64<i32>:word32] = 0x70<32>
l0000B2E4:
	word32 r12_1069 = Mem1068[sp_109 + 60<i32>:word32]
	branch r10_168 == 0<32> l0000B2F0
l0000B2E8_1:
l0000B2EC_1:
	r12_1069 = 0<32>
l0000B2F0:
	Mem1078[sp_109 + 60<i32>:word32] = r12_1069
l0000B2F4_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg24 = <invalid>
	word32 stackArg64 = <invalid>
	word32 r3_1081
	word32 r2_1085
	word32 lr_1088
	word32 r12_1089
	word32 r6_1091
	word32 r1_1092
	word32 r0_1093 = fn0000AE42(r4, r6_1091, stackArg24, stackArg64, out r1_1092, out r2_1085, out r3_1081, out r6_1091, out r12_1089, out lr_1088)
	r1Out = r1_1092
	r2Out = r2_1085
	r3Out = r3_1081
	r6Out = r6_1091
	r12Out = r12_1089
	lrOut = lr_1088
	return r0_1093
l0000AC78:
l0000AC74:
l0000B260:
	branch r4_255 == 0x45<32> l0000B706
l0000B268:
	branch Mem264[sp_109 + 56<i32>:word32] != 0xFFFFFFFF<32> l0000B276
l0000B276:
	word32 r10_1100 = Mem264[sp_109 + 56<i32>:word32]
l0000B286:
	branch r10_1100 <= 8<32> l0000B27C
l0000B27C:
	r10_1100 = r10_1100 + 1<32>
l0000B26E:
	Mem1113[sp_109 + 56<i32>:word32] = 9<32>
l0000B28C:
l0000B28E_thunk_fn0000AF6C:
	word32 r2_1125
	word32 r6_1131
	word32 r1_1132
	word32 r0_1133 = fn0000AF6C(out r1_1132, out r2_1125, out r6_1131)
	r1Out = r1_1132
	r2Out = r2_1125
	r3Out = r3_1121
	r6Out = r6_1131
	r12Out = r12_1129
	lrOut = lr_1128
	return r0_1133
l0000AC70:
l0000B238:
	branch r4_255 == 0x45<32> l0000B706
l0000B240:
l0000B244_thunk_fn0000AF6C:
	word32 r2_1145
	word32 r6_1151
	word32 r1_1152
	word32 r0_1153 = fn0000AF6C(out r1_1152, out r2_1145, out r6_1151)
	r1Out = r1_1152
	r2Out = r2_1145
	r3Out = r3_1141
	r6Out = r6_1151
	r12Out = r12_1149
	lrOut = lr_1148
	return r0_1153
l0000AC6C:
l0000AC68:
l0000AC64:
l0000AC60:
l0000B1F8:
	branch r4_255 == 0x45<32> l0000B706
l0000B200:
l0000B202_thunk_fn0000AF6C:
	word32 r2_1164
	word32 r6_1170
	word32 r1_1171
	word32 r0_1172 = fn0000AF6C(out r1_1171, out r2_1164, out r6_1170)
	r1Out = r1_1171
	r2Out = r2_1164
	r3Out = r3_1160
	r6Out = r6_1170
	r12Out = r12_1168
	lrOut = lr_1167
	return r0_1172
l0000AC5C:
l0000B1EA:
	branch r4_255 == 0x45<32> l0000B706
l0000B1F2:
l0000B1F6_thunk_fn0000AF6C:
	word32 r2_1184
	word32 r6_1190
	word32 r1_1191
	word32 r0_1192 = fn0000AF6C(out r1_1191, out r2_1184, out r6_1190)
	r1Out = r1_1191
	r2Out = r2_1184
	r3Out = r3_1180
	r6Out = r6_1190
	r12Out = r12_1188
	lrOut = lr_1187
	return r0_1192
l0000AC58:
l0000B400:
	branch r4_255 == 0x45<32> l0000B706
l0000B408:
	word32 r10_1199 = Mem264[sp_109 + 24<i32>:word32]
	word32 r9_1201 = Mem264[r10_1199 + 24<i32>:word32]
	word32 r1_1202 = Mem264[r10_1199 + 20<i32>:word32]
	Mem1203[sp_109 + 68<i32>:word32] = r9_1201
	word32 r8_1200 = 0x12C<32>
	word32 r2_1204 = Mem1203[r10_1199 + 28<i32>:word32]
	branch r1_1202 < 0<32> l0000B41C
l0000B418_1:
	r8_1200 = 0xFFFFFF9C<32>
l0000B41C:
	word32 r11_1244
	word32 r12_1246
	fn0000A9CC(r9_1201, r2_1204)
	word32 r3_1214 = r8_1200 + r1_1202
	bool N_1220 = <invalid>
	bool V_1219 = <invalid>
	branch N_1220 | V_1219 l0000B466
l0000B466:
	word32 r8_1235
	branch SLICE(r3_1214, word2, 0) == 0<32> l0000B470
l0000B470:
	branch false l0000B47E
l0000B47E:
	r8_1235 = CONVERT(false, bool, word32)
l0000B47A:
	r8_1235 = 1<32>
l0000B46C:
	r8_1235 = 0<32>
l0000B48A:
	r11_1244 = Mem1203[sp_109 + 68<i32>:word32]
	r12_1246 = r2_1204 - 0x16D<32> - r8_1235
	fn0000A9CC(r11_1244, r12_1246)
	bool N_1252 = <invalid>
	bool V_1251 = <invalid>
	bool v30_2454 = N_1252 | V_1251
	v30_2454 = N_1252 | V_1251
	branch N_1252 | V_1251 l0000B49E
l0000B496_1:
l0000B49A_1:
	r12_1246 = 1<32>
l0000B49E:
	branch v30_2454 l0000B4A2
l0000B49E_1:
	r12_1246 = 0<32>
l0000B42C:
	word32 r8_1274
	branch SLICE(r3_1214 - 1<32>, word2, 0) == 0<32> l0000B43A
l0000B43A:
	branch false l0000B448
l0000B448:
	r8_1274 = CONVERT(false, bool, word32)
l0000B444:
	r8_1274 = 1<32>
l0000B436:
	r8_1274 = 0<32>
l0000B454:
	r11_1244 = Mem1203[sp_109 + 68<i32>:word32]
	fn0000A9CC(r11_1244, r2_1204 + 0x16D<32> + r8_1274)
	r12_1246 = 0xFFFFFFFF<32>
l0000B4A2:
	branch SLICE(r0_263 - 0x47<32>, byte, 0) == 0<8> l0000B4E6
l0000B4E6:
l0000B4FC_thunk_fn0000AF76:
	word32 r3_1323
	word32 r2_1327
	word32 lr_1330
	word32 r12_1331
	word32 r6_1333
	word32 r1_1334
	word32 r0_1335 = fn0000AF76(out r1_1334, out r2_1327, out r3_1323, out r6_1333, out r12_1331, out lr_1330)
	r1Out = r1_1334
	r2Out = r2_1327
	r3Out = r3_1323
	r6Out = r6_1333
	r12Out = r12_1331
	lrOut = lr_1330
	return r0_1335
l0000B4AA:
	branch SLICE(r0_263 - 0x67<32>, byte, 0) != 0<8> l0000B500
l0000B500:
l0000B50C_thunk_fn0000AF6C:
	word32 r2_1354
	word32 r6_1360
	word32 r1_1361
	word32 r0_1362 = fn0000AF6C(out r1_1361, out r2_1354, out r6_1360)
	r1Out = r1_1361
	r2Out = r2_1354
	r3Out = r3_1350
	r6Out = r6_1360
	r12Out = r12_1358
	lrOut = lr_1357
	return r0_1362
l0000B4B2:
	branch r11_1244 < 0<32> l0000B4CC
l0000B4CC:
	word32 r10_1376 = 0xFFFFF894<32> - r12_1246
	branch r1_1202 < r10_1376 l0000B4DE
l0000B4DA_1:
l0000B4DE:
	branch r1_1202 >= r10_1376 l0000B4E2
l0000B4DE_1:
l0000B4E2:
l0000B4E2_thunk_fn0000AF6C:
	word32 r2_1392
	word32 r6_1398
	word32 r1_1399
	word32 r0_1400 = fn0000AF6C(out r1_1399, out r2_1392, out r6_1398)
	r1Out = r1_1399
	r2Out = r2_1392
	r3Out = r3_1388
	r6Out = r6_1398
	r12Out = r12_1396
	lrOut = lr_1395
	return r0_1400
l0000B4C6:
l0000B4C8_thunk_fn0000AF6C:
	word32 r2_1409
	word32 r6_1415
	word32 r1_1416
	word32 r0_1417 = fn0000AF6C(out r1_1416, out r2_1409, out r6_1415)
	r1Out = r1_1416
	r2Out = r2_1409
	r3Out = r3_1405
	r6Out = r6_1415
	r12Out = r12_1413
	lrOut = lr_1412
	return r0_1417
l0000AC54:
l0000B1DC:
	branch r4_255 != 0<32> l0000B706
l0000B1E2:
l0000AC50:
l0000AC4C:
l0000AF34:
	branch r4_255 != 0<32> l0000B706
l0000AF3A:
l0000ADB8:
	word32 r12_1429 = Mem264[sp_109 + 60<i32>:word32]
	word32 sp_1431 = sp_109 - 4<i32>
	Mem1432[sp_1431:word32] = Mem264[sp_109 + 16<i32>:word32]
	Mem1438[sp_1431 - 4<i32>:word32] = Mem1432[sp_1431 + 24<i32>:word32]
	word32 r3_3499
	word32 r12_3500
	word32 lr_3501
	word32 r1_3497
	word32 r2_3498
	fn0000A9DE(r8, out r1_3497, out r2_3498, out r3_3499, out r12_3500, out lr_3501)
	word32 r2_1439 = Mem1438[sp_1431 + 32<i32>:word32]
	lr = Mem1438[sp_1431 + 48<i32>:word32]
	word32 r10_1442 = Mem1438[sp_1431 + 60<i32>:word32] - r12_1429
	word32 r1_1445 = max(r10_1442, 0<32>) + r12_1429
	word32 r5_1447 = r12_1429
	sp_109 = sp_1431 + 4<32>
	branch r1_1445 >=u r2_1439 - lr l0000B79C
l0000ADEA:
	branch r7 == 0<32> l0000AE2A
l0000ADEE:
	word32 r6_1480
	word32 lr_1477
	branch r10_1442 <= 0<32> l0000AE10
l0000ADF4:
	branch Mem1438[sp_1431 + 0x38<32>:word32] != 0x30<32> l0000AE06
l0000AE06:
l0000AE00:
l0000AE0A:
	word32 r4_1475
	word32 r11_1479
	call Mem1438[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1477,r11:r11_1479,r6:r6_1480,r7:r4_1475
		defs: lr:lr_1477,r1:r1_1481,r11:r11_1479,r4:r4_1475,r5:r5_1473,r6:r6_1480,sp:sp_1468
	r7 = r4_1475
	lr = lr_1477
	r6 = r6_1480
l0000AE10:
	word32 sp_1495 = sp_109 - 4<i32>
	Mem1496[sp_1495:word32] = Mem1438[sp_109 + 16<i32>:word32]
	Mem1503[sp_1495 - 4<i32>:word32] = Mem1496[sp_1495 + 24<i32>:word32]
	word32 r2_3503
	word32 r12_3505
	word32 lr_3506
	word32 r3_3504
	word32 r1_3502
	fn0000A9DE(r8, out r1_3502, out r2_3503, out r3_3504, out r12_3505, out lr_3506)
	r7 = r7 + r5_1447
	sp_109 = sp_1495 + 4<32>
l0000AE2A:
	Mem1513[sp_109 + 44<i32>:word32] = Mem1507[sp_109 + 44<i32>:word32] + r1_1445
l0000AC48:
l0000AF00:
	branch r4_255 == 0x4F<32> l0000B706
l0000AF08:
	branch r4_255 == 0x45<32> l0000AE3E
l0000AF0C_thunk_fn0000AE3E:
	word32 r2_1524
	word32 lr_1527
	word32 r12_1528
	word32 r6_1530
	word32 r0_1532 = fn0000AE3E(out r2_1524, out r6_1530, out r12_1528, out lr_1527)
	r1Out = r1_1531
	r2Out = r2_1524
	r3Out = r3_1520
	r6Out = r6_1530
	r12Out = r12_1528
	lrOut = lr_1527
	return r0_1532
l0000AF0E:
	word32 r8_1536 = Mem264[Mem264[sp_109 + 24<i32>:word32] + 20<i32>:word32]
	r3_1535 = 2<32>
	r5_1541 = CONVERT(r8_1536 < 0xFFFFF894<32>, bool, word32)
	r11_1547 = r8_1536 / 0x64<32> + 0x13<32>
l0000B7A2:
	lr_1549 = 0<32>
	r12_1550 = 0<32>
l0000AC44:
l0000AC40:
l0000ADA8:
	branch r4_255 != 0<32> l0000B706
l0000ADAE:
	branch r10_168 != 0<32> l0000AE34
l0000AE34:
	Mem1561[sp_109 + 60<i32>:word32] = 1<32>
l0000AE3C_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg24 = <invalid>
	word32 stackArg64 = <invalid>
	word32 r3_1564
	word32 r2_1568
	word32 lr_1571
	word32 r12_1572
	word32 r6_1574
	word32 r1_1575
	word32 r0_1576 = fn0000AE42(r4, r6_1574, stackArg24, stackArg64, out r1_1575, out r2_1568, out r3_1564, out r6_1574, out r12_1572, out lr_1571)
	r1Out = r1_1575
	r2Out = r2_1568
	r3Out = r3_1564
	r6Out = r6_1574
	r12Out = r12_1572
	lrOut = lr_1571
	return r0_1576
l0000ADB2:
l0000ADB2_thunk_fn0000AE3E:
	word32 r2_1584
	word32 lr_1587
	word32 r12_1588
	word32 r6_1590
	word32 r0_1592 = fn0000AE3E(out r2_1584, out r6_1590, out r12_1588, out lr_1587)
	r1Out = r1_1591
	r2Out = r2_1584
	r3Out = r3_1580
	r6Out = r6_1590
	r12Out = r12_1588
	lrOut = lr_1587
	return r0_1592
l0000AC3C:
l0000AC38:
l0000AC34:
l0000AC30:
l0000AC2C:
l0000AC28:
l0000AC24:
l0000AD3A:
	r5_1595 = 1<32>
	word32 r9_1596 = Mem264[sp_109 + 48<i32>:word32] + 1<32>
l0000B63E:
	r9_1596 = r9_1596 + 1<i32>
	word32 r10_1603 = CONVERT(Mem264[r9_1596:byte], byte, word32)
	branch SLICE(r10_1603 - 0x3A<32>, byte, 0) == 0<8> l0000B63C
l0000B63C:
	r5_1595 = r5_1595 + 1<32>
l0000B64A:
	branch SLICE(r10_1603 - 0x7A<32>, byte, 0) != 0<8> l0000B706
l0000B652:
	Mem1614[sp_109 + 48<i32>:word32] = r9_1596
l0000B654:
	word32 r10_1617 = Mem1616[sp_109 + 24<i32>:word32]
	branch Mem1616[r10_1617 + 32<i32>:word32] < 0<32> l0000B77E
l0000B65E:
	word32 r12_1621 = Mem1616[r10_1617 + 36<i32>:word32]
	lr = r3_243
	branch r5_1595 >u 3<32> l0000B706
l0000B67C:
	switch (r5_1595) { l0000B68C l0000B690 l0000B694 l0000B698 }
l0000B698:
l0000B6E8:
	branch r3_243 != 0<32> l0000B6C8
l0000B6EC:
	branch true l0000B6B2
l0000B6F0:
	r5_1541 = r12_1621 >>u 0x1F<32>
	r11_1547 = r12_1621 / 0xE10<32>
	lr_1549 = 0x3C<32>
	r3_1535 = 3<32>
l0000B694:
l0000B6C8:
	r5_1541 = SLICE(r12_1621 >>u 0x1F<32>, byte, 0)
	r3_1535 = 9<32>
	r11_1547 = r12_1621 / 0xE10<32> * 0x2710<32> + r3_243 + 0x1770<32>
	lr_1549 = 0x14<32>
l0000B690:
l0000B6B2:
	r5_1541 = SLICE(r12_1621 >>u 0x1F<32>, byte, 0)
	r3_1535 = 6<32>
	r11_1547 = r12_1621 / 0xE10<32> * 0x64<32> + 0x3C<32>
	lr_1549 = 4<32>
l0000B68C:
l0000B69C:
	r5_1541 = SLICE(r12_1621 >>u 0x1F<32>, byte, 0)
	r3_1535 = 5<32>
	r11_1547 = r12_1621 / 0xE10<32> * 0x64<32> + 0x3C<32>
	lr_1549 = 0<32>
l0000AF78:
	r12_1550 = 1<32>
	branch r4_255 != 0x4F<32> l0000AF86
l0000AF86:
	branch r5_1541 == 0<32> l0000AF8C
l0000AF7E:
	branch r5_1541 != 0<32> l0000AF8A
l0000AF8A:
	r11_1547 = -r11_1547
l0000AF8C:
	r0_1708 = sp_109 + 0x482<32>
l0000AF90:
	branch Test(NE,SLICE(lr_1549, bool, 0)) l0000AF9A
l0000AF96:
	r0_1708 = r0_1708 - 1<i32>
	Mem1717[r0_1708:byte] = 0x3A<8>
l0000AF9A:
	r0_1708 = r0_1708 - 1<i32>
	Mem1727[r0_1708:byte] = 0x3A<8>
	word32 r8_1721 = r11_1547 /u 0xA<32>
	lr_1549 = lr_1549 >> 1<i32>
	r11_1547 = r8_1721
	branch r8_1721 != 0<32> l0000AF90
l0000AFAE:
	branch lr_1549 != 0<32> l0000AF90
l0000AFB2:
	word32 r2_1739 = Mem1738[sp_109 + 56<i32>:word32]
	word32 r4_1748 = max(r2_1739, r3_1535)
	branch r5_1541 == 0<32> l0000AFC0
l0000AFC0:
	branch r12_1550 != 0<32> l0000AFC6
l0000AFC2_1:
	r2_1739 = r12_1550
l0000AFC6:
	branch r12_1550 == 0<32> l0000AFCA
l0000AFC6_1:
	r2_1739 = 0x2B<32>
l0000AFBC:
	r2_1739 = 0x2D<32>
l0000AFCA:
	lr = Mem1738[sp_109 + 52<i32>:word32]
	branch lr != 0x2D<32> l0000B018
l0000B018:
	word32 r12_1882
	word32 r3_1791 = r4_1748 - ((sp_109 + 0x482<32>) - r0_1708) - CONVERT(SLICE(r2_1739, byte, 0) != 0<8>, bool, word32)
	branch r3_1791 <= 0<32> l0000B118
l0000B118:
	branch r2_1739 == 0<32> l0000B168
l0000B11C:
	word32 r10_1796 = Mem1738[sp_109 + 56<i32>:word32]
	word32 r8_1799 = max(r10_1796 - 1<32>, 0<32>)
	word32 r3_1800 = r8_1799 + 1<32>
	branch r8_1799 + 1<32> >=u Mem1738[sp_109 + 28<i32>:word32] - Mem1738[sp_109 + 44<i32>:word32] l0000B79C
l0000B136:
	branch r7 == 0<32> l0000B162
l0000B13A:
	word32 r6_1867
	word32 lr_1864
	branch r4_1748 != 0<32> l0000B160
l0000B13E:
	branch r10_1796 <= 1<32> l0000B160
l0000B144:
	branch Mem1738[sp_109 + 52<i32>:word32] != 0x30<32> l0000B156
l0000B156:
l0000B150:
l0000B15A:
	word32 r5_1860
	word32 r11_1866
	call Mem1738[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1864,r11:r11_1866,r6:r6_1867,r7:r5_1860
		defs: lr:lr_1864,r0:r0_1869,r11:r11_1866,r2:r2_1861,r3:r3_1857,r4:r4_1862,r5:r5_1860,r6:r6_1867,sp:sp_1855
	r7 = r5_1860
	lr = lr_1864
	r6 = r6_1867
l0000B160:
	Mem1874[r7:byte] = SLICE(r2_1739, byte, 0)
	r7 = r7 + 1<i32>
l0000B162:
	r12_1882 = Mem1878[sp_109 + 44<i32>:word32] + r3_1800
l0000B034:
	word32 r9_1887 = Mem1738[sp_109 + 28<i32>:word32] - Mem1738[sp_109 + 44<i32>:word32]
	branch Mem1738[sp_109 + 52<i32>:word32] != 0x5F<32> l0000B0AE
l0000B0AE:
	branch r4_1748 >=u r9_1887 l0000B79C
l0000B0B4:
	branch r2_1739 == 0<32> l0000B0FC
l0000B0B8:
	word32 r10_1894 = Mem1738[sp_109 + 56<i32>:word32]
	word32 r8_1897 = max(r10_1894 - 1<32>, 0<32>)
	word32 r1_1898 = r8_1897 + 1<32>
	branch r8_1897 + 1<32> >=u r9_1887 l0000B79C
l0000B0CC:
	branch r7 == 0<32> l0000B0F6
l0000B0D0:
	word32 r6_1929
	word32 lr_1926
	branch r4_1748 != 0<32> l0000B0F4
l0000B0D4:
	branch r10_1894 <= 1<32> l0000B0F4
l0000B0DA:
	branch Mem1738[sp_109 + 52<i32>:word32] != 0x30<32> l0000B0EA
l0000B0EA:
l0000B0E6:
l0000B0EE:
	word32 r5_1922
	word32 r11_1928
	call Mem1738[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1926,r11:r11_1928,r6:r6_1929,r7:r5_1922
		defs: lr:lr_1926,r0:r0_1931,r1:r1_1930,r11:r11_1928,r2:r2_1923,r3:r3_1919,r4:r4_1924,r5:r5_1922,r6:r6_1929,sp:sp_1917
	r7 = r5_1922
	r6 = r6_1929
	lr = lr_1926
l0000B0F4:
	Mem1936[r7:byte] = SLICE(r2_1739, byte, 0)
	r7 = r7 + 1<i32>
l0000B0F6:
	Mem1946[sp_109 + 44<i32>:word32] = Mem1940[sp_109 + 44<i32>:word32] + r1_1898
l0000B0FC:
	word32 r7_1978
	word32 r6_1974
	word32 lr_1971
	branch r7 == 0<32> l0000B10C
l0000B100:
	word32 r7_1970
	call Mem1960[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_1971,r10:r3_1952,r11:0x30<32>,r12:r7_1947,r6:r6_1974,r7:r7_1978
		defs: lr:lr_1971,r0:r0_1976,r3:r3_1964,r4:r4_1969,r6:r6_1974,r7:r7_1970,sp:sp_1962
	r7_1978 = r7_1970 + r3_1791
	lr = lr_1971
	r7 = r7_1978
	r6 = r6_1974
l0000B10C:
	Mem1987[sp_109 + 44<i32>:word32] = Mem1960[sp_109 + 44<i32>:word32] + r3_1791
	Mem1988[sp_109 + 56<i32>:word32] = 0<32>
l0000B042:
	branch r3_1791 >=u r9_1887 l0000B79C
l0000B048:
	word32 r7_2012
	word32 r6_2008
	branch r7 == 0<32> l0000B058
l0000B04C:
	word32 r7_2004
	word32 lr_2005
	call Mem1738[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_2005,r10:r3_1791,r11:0x20<32>,r12:r7_140,r6:r6_2008,r7:r7_2012
		defs: lr:lr_2005,r0:r0_2010,r2:r2_2002,r3:r3_1998,r4:r4_2003,r6:r6_2008,r7:r7_2004,sp:sp_1996
	r7_2012 = r7_2004 + r3_1791
	r7 = r7_2012
	r6 = r6_2008
l0000B058:
	word32 r5_2023
	word32 r5_2017 = Mem1738[sp_109 + 56<i32>:word32]
	word32 lr_2018 = Mem1738[sp_109 + 44<i32>:word32]
	word32 r8_2020 = Mem1738[sp_109 + 56<i32>:word32] - r3_1791
	r5_2023 = r5_2017
	branch r5_2017 <= r3_1791 l0000B066
l0000B062_1:
	r5_2023 = r8_2020
l0000B066:
	branch r5_2017 > r3_1791 l0000B06A
l0000B066_1:
	r5_2023 = 0<32>
l0000B06A:
	Mem2035[sp_109 + 56<i32>:word32] = r5_2023
	lr = lr_2018 + r3_1791
	Mem2036[sp_109 + 44<i32>:word32] = lr
	branch r2_1739 == 0<32> l0000B168
l0000B074:
	word32 r3_2043 = r5_2023 - 1<32>
	word32 r8_2045 = max(r3_2043, 0<32>)
	word32 r5_2046 = r8_2045 + 1<32>
	branch r8_2045 + 1<32> >=u Mem2036[sp_109 + 28<i32>:word32] - lr l0000B79C
l0000B08C:
	branch r7 == 0<32> l0000B0A8
l0000B090:
	word32 r7_2085
	word32 r6_2081
	word32 lr_2078
	branch r4_1748 != 0<32> l0000B0A6
l0000B094:
	branch r3_2043 <= 0<32> l0000B0A6
l0000B09A:
	word32 r3_2071
	word32 r7_2077
	call Mem2036[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_2078,r10:r3_2043,r11:0x20<32>,r12:r7_2053,r6:r6_2081,r7:r7_2085
		defs: lr:lr_2078,r0:r0_2083,r2:r2_2075,r3:r3_2071,r4:r4_2076,r5:r5_2074,r6:r6_2081,r7:r7_2077,sp:sp_2069
	r7_2085 = r7_2077 + r3_2071
	lr = lr_2078
	r7 = r7_2085
	r6 = r6_2081
l0000B0A6:
	Mem2089[r7:byte] = SLICE(r2_1739, byte, 0)
	r7 = r7 + 1<i32>
l0000B0A8:
	r12_1882 = Mem2093[sp_109 + 44<i32>:word32] + r5_2046
l0000B166:
	Mem2101[sp_109 + 44<i32>:word32] = r12_1882
l0000AFD2:
	branch r2_1739 == 0<32> l0000B168
l0000AFD8:
	word32 r3_2104 = Mem1738[sp_109 + 56<i32>:word32]
	word32 r8_2107 = max(r3_2104 - 1<32>, 0<32>)
	word32 r5_2108 = r8_2107 + 1<32>
	branch r8_2107 + 1<32> >=u Mem1738[sp_109 + 28<i32>:word32] - Mem1738[sp_109 + 44<i32>:word32] l0000B79C
l0000AFF2:
	branch r7 == 0<32> l0000B00E
l0000AFF6:
	word32 r7_2139
	word32 r6_2135
	word32 lr_2132
	branch r4_1748 != 0<32> l0000B00C
l0000AFFA:
	branch r3_2104 <= 1<32> l0000B00C
l0000B000:
	word32 r3_2125
	word32 r7_2131
	call Mem1738[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_2132,r10:r3_2104 - 1<32>,r11:0x20<32>,r12:r7_140,r6:r6_2135,r7:r7_2139
		defs: lr:lr_2132,r0:r0_2137,r2:r2_2129,r3:r3_2125,r4:r4_2130,r5:r5_2128,r6:r6_2135,r7:r7_2131,sp:sp_2123
	r7_2139 = r7_2131 + r3_2125
	lr = lr_2132
	r7 = r7_2139
	r6 = r6_2135
l0000B00C:
	Mem2143[r7:byte] = SLICE(r2_1739, byte, 0)
	r7 = r7 + 1<i32>
l0000B00E:
	Mem2153[sp_109 + 44<i32>:word32] = Mem2147[sp_109 + 44<i32>:word32] + r5_2108
l0000B168:
	word32 r5_2173 = sp_109 + 0x482<32> - r0_1708
	word32 r10_2174 = Mem2156[sp_109 + 56<i32>:word32] - r5_2173
	word32 r3_2177 = max(r10_2174, 0<32>) + r5_2173
	branch r3_2177 >=u Mem2156[sp_109 + 28<i32>:word32] - Mem2156[sp_109 + 44<i32>:word32] l0000B79C
l0000B18A:
	branch r7 == 0<32> l0000B1D2
l0000B18E:
	word32 r6_2239
	branch r4_1748 != 0<32> l0000B1B4
l0000B192:
	branch r10_2174 <= 0<32> l0000B1B4
l0000B198:
	branch Mem2156[sp_109 + 52<i32>:word32] != 0x30<32> l0000B1AA
l0000B1AA:
l0000B1A4:
l0000B1AE:
	word32 r4_2234
	word32 lr_2236
	word32 r11_2238
	call Mem2156[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_2236,r11:r11_2238,r6:r6_2239,r7:r4_2234
		defs: lr:lr_2236,r0:r0_2241,r11:r11_2238,r3:r3_2229,r4:r4_2234,r5:r5_2232,r6:r6_2239,sp:sp_2227
	r7 = r4_2234
	r6 = r6_2239
l0000B1B4:
	word32 r6_2268
	word32 lr_2265
	word32 r7_2264
	branch Mem2156[sp_109 + 60<i32>:word32] == 0<32> l0000B1C6
l0000B1C6:
	call Mem2156[r6 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_2265,r10:r5_2251,r11:r0_2249,r12:r7_2253,r6:r6_2268,r7:r7_2264
		defs: lr:lr_2265,r3:r3_2258,r5:r5_2261,r6:r6_2268,r7:r7_2264,sp:sp_2256
	lr = lr_2265
	r7 = r7_2264
	r6 = r6_2268
l0000B1BA:
	fn0000A998(r5_2173, r0_1708, r7)
l0000B1D0:
	r7 = r7 + r5_2173
l0000B1D2:
	Mem2298[sp_109 + 44<i32>:word32] = Mem2156[sp_109 + 44<i32>:word32] + r3_2177
l0000AF82:
l0000AF84_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg24 = <invalid>
	word32 stackArg64 = <invalid>
	word32 r3_2302
	word32 r2_2306
	word32 lr_2309
	word32 r12_2310
	word32 r6_2312
	word32 r1_2313
	word32 r0_2314 = fn0000AE42(r4, r6_2312, stackArg24, stackArg64, out r1_2313, out r2_2306, out r3_2302, out r6_2312, out r12_2310, out lr_2309)
	r1Out = r1_2313
	r2Out = r2_2306
	r3Out = r3_2302
	r6Out = r6_2312
	r12Out = r12_2310
	lrOut = lr_2309
	return r0_2314
l0000AC20:
l0000AC1C:
l0000AC18:
l0000AC14:
l0000AC10:
l0000AC0C:
l0000AC08:
l0000AC04:
l0000AC00:
l0000ABFC:
l0000ABF8:
l0000ABF4:
l0000ABF0:
l0000ABEC:
l0000ABE8:
l0000ABE4:
l0000ABE0:
l0000ABDC:
l0000ABD8:
l0000ABD4:
l0000ABD0:
l0000AD44:
	branch r4_255 != 0<32> l0000B706
l0000AD4A:
	word32 r10_2318 = Mem264[sp_109 + 56<i32>:word32]
	word32 r12_2319 = Mem264[sp_109 + 44<i32>:word32]
	word32 r8_2321 = max(r10_2318 - 1<32>, r4_255)
	word32 r4_2322 = r8_2321 + 1<32>
	branch r8_2321 + 1<32> >=u Mem264[sp_109 + 28<i32>:word32] - r12_2319 l0000B79C
l0000B79C:
	Mem2329[sp_109 + 44<i32>:word32] = 0<32>
l0000AD62:
	branch r7 == 0<32> l0000AD8C
l0000AD66:
	word32 r6_2356
	word32 lr_2353
	branch r10_2318 <= 1<32> l0000AD86
l0000AD6C:
	branch Mem264[sp_109 + 52<i32>:word32] != 0x30<32> l0000AD7C
l0000AD7C:
l0000AD78:
l0000AD80:
	word32 r5_2349
	word32 r11_2355
	call Mem264[r6 + 44<i32>:word32] (retsize: 0;)
		uses: lr:lr_2353,r11:r11_2355,r6:r6_2356,r7:r5_2349
		defs: lr:lr_2353,r11:r11_2355,r4:r4_2351,r5:r5_2349,r6:r6_2356,sp:sp_2344
	r7 = r5_2349
	lr = lr_2353
	r6 = r6_2356
l0000AD86:
	Mem2366[r7:byte] = Mem264[Mem264[sp_109 + 48<i32>:word32]:byte]
	r7 = r7 + 1<i32>
l0000AD8C:
	Mem2375[sp_109 + 44<i32>:word32] = Mem2369[sp_109 + 44<i32>:word32] + r4_2322
l0000ABCC:
l0000ABC8:
l0000ABC4:
l0000ABC0:
l0000ABBC:
l0000ABB8:
l0000ABB4:
l0000ABB0:
l0000ABAC:
l0000ABA8:
l0000ABA4:
l0000ABA0:
l0000AB9C:
l0000AB98:
l0000AB94:
l0000AB90:
l0000AB8C:
l0000AB88:
l0000AB84:
l0000AB80:
l0000AB7C:
l0000AB78:
l0000AB74:
l0000AB70:
l0000AB6C:
l0000AB68:
l0000AB64:
l0000AB60:
l0000AB5C:
l0000AB58:
l0000AB54:
l0000AB50:
l0000AB4C:
l0000AB48:
l0000AB44:
l0000AB40:
l0000AB3C:
l0000B700:
	Mem2379[sp_109 + 48<i32>:word32] = Mem264[sp_109 + 48<i32>:word32] - 1<32>
l0000AA8A:
l0000AA92:
	Mem2382[sp_109 + 52<i32>:word32] = r9_177
l0000B78E:
	branch r7 == 0<32> l0000B7AA
l0000B792:
	branch Mem127[sp_109 + 28<i32>:word32] == 0<32> l0000B7AA
l0000B798:
	Mem2388[r7:byte] = SLICE(r9_129, byte, 0)
l0000B7AA:
	r1Out = dwLoc08
	r2Out = dwLoc0C
	r3Out = dwLoc10
	r6Out = dwLoc1C
	r12Out = dwLoc047C
	lrOut = lr
	return dwLoc04
fn0000ACB0_exit:


word32 fn0000AE3E(ptr32 & r2Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AE42
// MayUse: 
// LiveOut: lr r0 r12 r2 r6
// Trashed: r1 r3
// Preserved: sp
fn0000AE3E_entry:
l0000AE3E:
l0000AE40_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg24 = <invalid>
	word32 stackArg64 = <invalid>
	word32 r1_17
	word32 r2_18
	word32 r3_19
	word32 r6_20
	word32 r12_21
	word32 lr_22
	fn0000AE42(r4, r6, stackArg24, stackArg64, out r1_17, out r2_18, out r3_19, out r6_20, out r12_21, out lr_22)
	r2Out = <invalid>
	r6Out = <invalid>
	r12Out = <invalid>
	lrOut = <invalid>
	return <invalid>
fn0000AE3E_exit:


word32 fn0000AE42(word32 r4, word32 r6, word32 dwArg18, word32 dwArg40, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000ACB0
//      fn0000AE3E
//      fn0000AEFA
// MayUse:  r4:[0..31] r6:[0..31] Stack +0018:[0..31] Stack +0040:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000AE42_entry:
l0000AE42:
	word32 lr_10
	branch r4 != 0<32> l0000AE58
l0000AE58:
	lr_10 = fp + 0x44B<32>
l0000AE52:
	lr_10 = fp + 0x44A<32>
l0000AE60:
	Mem20[lr_10 + 1<i32>:byte] = 0<8>
	Mem26[lr_10:byte] = SLICE(dwArg40, byte, 0)
	word32 r12_37
	word32 r3_42
	byte VNZC_45
	word32 r1_121
	word32 sp_108
	word32 r7_124
	word32 r6_116
	call Mem26[r6 + 440<i32>:word32] (retsize: 0;)
		uses: r10:fp + 0x448<32>,r11:0x400<32>,r12:fp + 0x48<32>,r4:r4,r6:r6,r8:dwArg40,r9:dwArg18,Stack +0018:dwArg18,Stack +0040:dwArg40
		defs: r1:r1_43,r12:r12_37,r3:r3_42,r6:r6_38,r7:r7_41,sp:sp_30,VNZC:VNZC_45
	branch SLICE(VNZC_45, bool, 1) l0000B77E
l0000AE7A_thunk_fn0000ACB0:
	word32 lr_50
	word32 r12_54
	word32 r6_55
	word32 r2_57
	word32 r3_59
	word32 r1_60
	word32 r0_61 = fn0000ACB0(r6_116, r7, out r1_60, out r2_57, out r3_59, out r6_55, out r12_54, out lr_50)
	r1Out = r1_60
	r2Out = r2_57
	r3Out = r3_59
	r6Out = r6_55
	r12Out = r12_54
	lrOut = lr_50
	return r0_61
l0000AE7E:
	word32 r10_65 = Mem26[sp_108 + 56<i32>:word32] - (r12_37 - 1<32>)
	word32 r2_68 = max(r10_65, 0<32>) + (r12_37 - 1<32>)
	word32 r4_110 = Mem26[sp_108 + 44<i32>:word32]
	word32 r5_117 = r12_37 - 1<32>
	branch r2_68 >=u Mem26[sp_108 + 28<i32>:word32] - r4_110 l0000B79C
l0000AE98_thunk_fn0000ACB0:
	word32 lr_77
	word32 r12_81
	word32 r6_82
	word32 r2_84
	word32 r3_86
	word32 r1_87
	word32 r0_88 = fn0000ACB0(r6_116, r7, out r1_87, out r2_84, out r3_86, out r6_82, out r12_81, out lr_77)
	r1Out = r1_87
	r2Out = r2_84
	r3Out = r3_86
	r6Out = r6_82
	r12Out = r12_81
	lrOut = lr_77
	return r0_88
l0000AE9C:
	branch r7_124 == 0<32> l0000AEF6
l0000AEA0:
	branch r3_42 != 0<32> l0000AEC6
l0000AEA4:
	branch r10_65 <= 0<32> l0000AEC6
l0000AEAA:
	word32 r4_97 = r7_124 + r10_65
	branch Mem26[sp_108 + 52<i32>:word32] != 0x30<32> l0000AEBC
l0000AEBC:
l0000AEB6:
l0000AEC0:
	call Mem26[r6_116 + 44<i32>:word32] (retsize: 0;)
		uses: r4:r4_97,r6:r6_38,Stack +0018:dwArg18,Stack +0040:dwArg40
		defs: r1:r1_121,r4:r4_110,r5:r5_117,r6:r6_116,sp:sp_108
	r7_124 = r4_110
l0000AEC6:
	branch r1_121 == 0<32> l0000AED8
l0000AED8:
	word32 r11_131 = sp_108 + 0x49<32>
	branch Mem26[sp_108 + 60<i32>:word32] == 0<32> l0000AEEC
l0000AEEC:
	call Mem26[r6_116 + 36<i32>:word32] (retsize: 0;)
		uses: r10:r5_134,r12:r7_136,r4:r4_139,r6:r6_138,Stack +0018:dwArg18,Stack +0040:dwArg40
l0000AEE2:
	fn0000A998(r5_117, r11_131, r7_124)
l0000AECA:
	fn0000A968(r5_117, sp_108 + 0x49<32>, r7_124)
l0000AEF4:
l0000AEF6:
l0000AEF8_thunk_fn0000AEFA:
	word32 lr_201
	word32 r12_205
	word32 r6_206
	word32 r2_208
	word32 r3_210
	word32 r1_211
	word32 r0_212 = fn0000AEFA(out r1_211, out r2_208, out r3_210, out r6_206, out r12_205, out lr_201)
	r1Out = r1_211
	r2Out = r2_208
	r3Out = r3_210
	r6Out = r6_206
	r12Out = r12_205
	lrOut = lr_201
	return r0_212
fn0000AE42_exit:


word32 fn0000AEFA(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AE42
//      fn0000AF76
// MayUse: 
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000AEFA_entry:
l0000AEFA:
l0000AEFC_thunk_fn0000AE42:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	word32 stackArg24 = <invalid>
	word32 stackArg64 = <invalid>
	word32 r12_6
	word32 r6_12
	word32 r3_14
	word32 r2_15
	word32 r1_16
	word32 lr_19
	word32 r0_17 = fn0000AE42(r4, r6, stackArg24, stackArg64, out r1_16, out r2_15, out r3_14, out r6_12, out r12_6, out lr_19)
	r1Out = r1_16
	r2Out = r2_15
	r3Out = r3_14
	r6Out = r6_12
	r12Out = r12_6
	lrOut = lr_19
	return r0_17
fn0000AEFA_exit:


word32 fn0000AF6C(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r6Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000AF76
// MayUse: 
// LiveOut: r0 r1 r2 r6
// Trashed: NZC lr r11 r12 r3 r5
// Preserved: sp
fn0000AF6C_entry:
l0000AF6C:
l0000AF6E:
l0000AF72_thunk_fn0000AF76:
	word32 r1_23
	word32 r2_24
	word32 r3_25
	word32 r6_26
	word32 r12_27
	word32 lr_28
	fn0000AF76(out r1_23, out r2_24, out r3_25, out r6_26, out r12_27, out lr_28)
	r1Out = <invalid>
	r2Out = <invalid>
	r6Out = <invalid>
	return <invalid>
fn0000AF6C_exit:


word32 fn0000AF76(ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
//      fn0000AEFA
//      fn0000AF6C
// MayUse: 
// LiveOut: lr r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000AF76_entry:
l0000AF76:
l0000AF76_thunk_fn0000AEFA:
	word32 lr_6
	word32 r12_7
	word32 r1_10
	word32 r6_15
	word32 r2_16
	word32 r3_18
	word32 r0_19 = fn0000AEFA(out r1_10, out r2_16, out r3_18, out r6_15, out r12_7, out lr_6)
	r1Out = r1_10
	r2Out = r2_16
	r3Out = r3_18
	r6Out = r6_15
	r12Out = r12_7
	lrOut = lr_6
	return r0_19
fn0000AF76_exit:


word32 fn0000B7B2(word32 r9, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00004968
// MayUse:  r9:[0..31]
// LiveOut: lr r0 r1 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B7B2_entry:
l0000B7B2:
	word32 lr_36
	word32 r1_38
	word32 r12_41
	word32 r2_42
	word32 r3_43
	word32 r0_37 = fn0000A9DE(r9, out r1_38, out r2_42, out r3_43, out r12_41, out lr_36)
	r1Out = r1_38
	r2Out = r2_42
	r3Out = r3_43
	r12Out = r12_41
	lrOut = lr_36
	return r0_37
fn0000B7B2_exit:


word32 fn0000B7D4(word32 r10, word32 r11, word32 r12, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003334
//      fn00004374
//      fn00004864
//      fn00004968
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11 r12 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B7D4_entry:
l0000B7D4:
	Mem28[r12 + 0x14<32>:byte] = 0<8>
	word32 r7_21 = r12 + 0x14<32>
	word64 r5_r4_91 = SEQ(r11, r10)
l0000B7E6:
	r7_21 = r7_21 - 1<i32>
	word32 r11_99
	Mem55[r7_21:byte] = SLICE(fn00010A4C(r5_r4_91, 0xA<64>, out r11_99) + 0x30<32>, byte, 0)
	word32 lr_56
	word32 r10_57
	word32 r11_58
	word32 r9_61
	word32 r8_60 = fn000107C0(0xA<32>, 0<32>, SLICE(r5_r4_91, word32, 0), SLICE(r5_r4_91, word32, 32), out r9_61, out r10_57, out r11_58, out lr_56)
	r5_r4_91 = SEQ(r11_58, r10_57) (alias)
	branch r11_58 != SLICE(cond(r10_57), bool, 0) l0000B7E6
l0000B80E:
	r9Out = r9_61
	r10Out = r10_57
	r11Out = r11_58
	r12Out = r7_21
	lrOut = lr_56
	return r8_60
fn0000B7D4_exit:


void fn0000B818(word32 r0, word32 r1, word32 r2, word32 r10, word32 r11, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006B5C
// MayUse:  pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r2:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000B818_entry:
l0000B818:
	word32 lr_47
	word32 pc_48
	word32 r0_49
	word32 r1_50
	word32 r12_53
	word32 r2_54
	word32 r6_58
	word32 r3_113
	branch fn0000D220(r0, r1, r2, r10, r11, fp - 0x28<32>, pc, out r0_49, out r1_50, out r2_54, out r3_113, out r6_58, out r12_53, out lr_47, out pc_48) l0000B876
l0000B844:
	word32 sp_72
	word32 r0_73
	word32 r1_74
	word32 r2_75
	word32 r3_76
	word32 r4_77
	word32 r5_78
	word32 r6_79
	word32 r7_80
	word32 lr_81
	word32 r10_83
	word32 r12_85
	word32 r11_86
	word32 pc_87
	call Mem37[r6_58 + 432<i32>:word32] (retsize: 0;)
		uses: lr:lr_47,pc:pc_48,r0:r0_49,r1:r1_50,r10:0x7D0<32>,r11:1<32>,r12:r12_53,r2:r2_54,r3:r3_55,r4:fp - 0x7F8<32>,r5:0x7D0<32>,r6:r6_58,r7:r12_53,r9:r3_55
		defs: lr:lr_81,pc:pc_87,r0:r0_73,r1:r1_74,r10:r10_83,r11:r11_86,r12:r12_85,r2:r2_75,r3:r3_76,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80,sp:sp_72
	branch r12_85 >=u r5_78 l0000B86A
l0000B86A:
	branch r5_78 >= 0<32> l0000B880
l0000B880:
l0000B86E:
	word32 r12_107
	call Mem37[r6_79 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_81,pc:pc_87,r0:r0_73,r1:r1_74,r10:r10_83,r11:r11_86,r12:r12_85,r2:r2_75,r3:r3_76,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80
		defs: r12:r12_107,r3:r3_98
	Mem112[r12_107:word32] = 0x4B<32>
l0000B876:
	fn0000BD82(r3_113)
l0000B852:
	branch r7_80 == sp_72 l0000B87C
l0000B87C:
l0000B856:
	word32 r0_124
	word32 r1_125
	word32 r2_126
	word32 r4_128
	word32 r6_130
	word32 r7_131
	word32 lr_132
	word32 r10_134
	word32 r12_136
	word32 r11_137
	word32 pc_138
	call Mem37[r6_79 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_81,pc:pc_87,r0:r0_73,r1:r1_74,r10:r10_83,r11:r11_86,r12:r12_85,r2:r2_75,r3:r3_76,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80
		defs: lr:lr_132,pc:pc_138,r0:r0_124,r1:r1_125,r10:r10_134,r11:r11_137,r12:r12_136,r2:r2_126,r4:r4_128,r6:r6_130,r7:r7_131
	word32 r3_147
	word32 r5_149
	call Mem37[r6_130 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_132,pc:pc_138,r0:r0_124,r1:r1_125,r10:r10_134,r11:r11_137,r12:r7_131,r2:r2_126,r3:Mem37[r12_136:word32],r4:r4_128,r5:r12_136,r6:r6_130,r7:r7_131
		defs: r3:r3_147,r5:r5_149
	Mem160[r5_149:word32] = r3_147
l0000B882:
	return
fn0000B818_exit:


byte fn0000B88C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r12, word32 lr, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000418C
//      fn00006998
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31]
// LiveOut: VN lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B88C_entry:
l0000B88C:
	word32 r6_19 = 0x0000B890<p32> - Mem17[0x0000B8E6<p32>:word32]
	word32 lr_27
	word32 r12_30 = fn0000BD8C(r0, r1, r2, r3, r4, r5, r6_19, r12, lr, out lr_27)
	branch SLICE(CONVERT(Mem17[r12_30:byte], byte, word32) - 0x55<32>, byte, 0) != 0<8> l0000B8DE
l0000B8A2:
	branch SLICE(CONVERT(Mem17[r12_30 + 1<i32>:byte], byte, word32) - 0x54<32>, byte, 0) != 0<8> l0000B8DE
l0000B8AC:
	branch SLICE(CONVERT(Mem17[r12_30 + 2<i32>:byte], byte, word32) - 0x46<32>, byte, 0) != 0<8> l0000B8DE
l0000B8B6:
	branch SLICE(CONVERT(Mem17[r12_30 + 3<i32>:byte], byte, word32) - 0x2D<32>, byte, 0) != 0<8> l0000B8DE
l0000B8C0:
	branch SLICE(CONVERT(Mem17[r12_30 + -4<i32>:byte], byte, word32) - 0x38<32>, byte, 0) != 0<8> l0000B8DE
l0000B8CA:
	branch Mem17[r12_30 + -3<i32>:byte] != 0<8> l0000B8DE
l0000B8DE:
	word32 lr_78
	word32 r12_79
	word32 r11_82
	word32 r0_83
	word32 r1_84
	word32 r2_85
	word32 r3_86
	word32 r10_87
	call Mem17[r6_19 + 492<i32>:word32] (retsize: 0;)
		uses: lr:lr_27,r0:r0,r1:r1,r12:r12,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_19,r7:r12
		defs: lr:lr_78,r0:r0_83,r1:r1_84,r10:r10_87,r11:r11_82,r12:r12_79,r2:r2_85,r3:r3_86
	r0Out = r0_83
	r1Out = r1_84
	r2Out = r2_85
	r3Out = r3_86
	r10Out = r10_87
	r11Out = r11_82
	r12Out = r12_79
	lrOut = lr_78
	return <invalid>
l0000B8D4:
	word32 lr_96
	word32 r0_97
	word32 r1_98
	word32 r10_99
	word32 r11_100
	word32 r12_101
	word32 r2_102
	word32 r3_103
	fn0000C058(r0, r12_30, r12, out r0_97, out r1_98, out r2_102, out r3_103, out r10_99, out r11_100, out r12_101, out lr_96)
	r0Out = r0_97
	r1Out = r1_98
	r2Out = r2_102
	r3Out = r3_103
	r10Out = r10_99
	r11Out = r11_100
	r12Out = r12_101
	lrOut = lr_96
	return <invalid>
fn0000B88C_exit:


word32 fn0000B904(word32 r4, word32 r5, word32 r6, word32 r7, word32 r11, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003210
//      fn0000A614
// MayUse:  lr:[0..31] r11:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B904_entry:
l0000B904:
	word32 r6_19 = 0x0000B908<p32> - Mem17[0x0000B91A<p32>:word32]
	word32 r4_24
	word32 r5_25
	word32 r6_26
	word32 r7_27
	byte VNZC_30
	word32 lr_28
	word32 r12_38
	word32 r9_44
	call Mem17[r6_19 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr,r11:r11,r4:r4,r5:r5,r6:r6_19,r7:r11,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r12:r12_64,r4:r4_24,r5:r5_25,r6:r6_26,r7:r7_27,r9:r9_66,VNZC:VNZC_30
	branch SLICE(VNZC_30, bool, 1) l0000B91A
l0000B912:
	branch r7_27 == 0<32> l0000B91A
l0000B916:
	word32 r6_91
	word32 r5_90
	word32 r7_92
	word32 r8_93
	word32 r10_94
	word32 r11_95
	fn00006CAC(r4_24, r5_25, r6_26, r7_27, lr_28, out r5_90, out r6_91, out r7_92, out r8_93, out r9_44, out r10_94, out r11_95, out r12_38, out lr_28)
l0000B91A:
	r12Out = r12_38
	lrOut = lr_28
	return r9_44
fn0000B904_exit:


word32 fn0000B95C(word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003094
//      fn000030B4
//      fn00003120
//      fn00003334
//      fn0000511C
//      fn00009A5C
//      fn00009B5C
//      fn00009EDC
//      fn0000B978
// MayUse:  lr:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r11 r12 r8 r9
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B95C_entry:
l0000B95C:
	word32 r6_19 = 0x0000B960<p32> - Mem17[0x0000B972<p32>:word32]
	word32 r4_24
	word32 r5_25
	word32 r6_26
	word32 r7_27
	byte VNZC_30
	word32 lr_28
	word32 r11_37
	word32 r12_29
	word32 r8_43
	word32 r9_44
	call Mem17[r6_19 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,r12:r12,r4:r4,r5:r5,r6:r6_19,r7:r12,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r11:r11_64,r12:r12_29,r4:r4_24,r5:r5_25,r6:r6_26,r7:r7_27,r8:r8_65,r9:r9_66,VNZC:VNZC_30
	branch SLICE(VNZC_30, bool, 1) l0000B972
l0000B96A:
	branch r7_27 == 0<32> l0000B972
l0000B96E:
	word32 r5_92
	word32 r6_93
	word32 r7_94
	word32 r10_95
	fn00006CAC(r4_24, r5_25, r6_26, r7_27, lr_28, out r5_92, out r6_93, out r7_94, out r8_43, out r9_44, out r10_95, out r11_37, out r12_29, out lr_28)
l0000B972:
	r9Out = r9_44
	r11Out = r11_37
	r12Out = r12_29
	lrOut = lr_28
	return r8_43
fn0000B95C_exit:


word32 fn0000B978(word32 r0, word32 r1, word32 r2, word32 r4, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A920
//      fn0000B994
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r7:[0..31]
// LiveOut: lr r11 r12
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000B978_entry:
l0000B978:
	word32 r6_31 = 0x0000B97C<p32> - Mem29[0x0000B992<p32>:word32]
	word32 lr_38
	word32 r12_42
	word32 r9_93
	word32 r11_94
	fn0000B95C(r4, r11, r6_31, r7, r11, lr, out r9_93, out r11_94, out r12_42, out lr_38)
	word32 lr_60
	word32 r12_61
	word32 r11_62
	call Mem29[r6_31 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_38,r0:r0,r1:r1,r10:r11,r11:r12,r12:r12_42,r2:r2,r3:r12,r4:r4,r5:r11,r6:r6_31,r7:r7
		defs: lr:lr_60,r11:r11_62,r12:r12_61
	r12Out = r12_61
	lrOut = lr_60
	return r11_62
fn0000B978_exit:


word32 fn0000B994(word32 r0, word32 r1, word32 r2, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00003120
//      fn00003334
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r0 r1 r10 r11 r12 r2 r8 r9
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000B994_entry:
l0000B994:
	word32 r6_19 = 0x0000B998<p32> - Mem17[0x0000B9AA<p32>:word32]
	word32 r4_24
	word32 r5_25
	word32 r7_27
	word32 lr_28
	word32 r12_29
	word32 r0_59
	word32 r1_60
	word32 r2_61
	word32 r10_63
	word32 r8_64
	word32 r9_65
	call Mem17[r6_19 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r12:r12,r2:r2,r4:r4,r5:r12,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_28,r0:r0_59,r1:r1_60,r10:r10_63,r12:r12_29,r2:r2_61,r4:r4_24,r5:r5_25,r7:r7_27,r8:r8_64,r9:r9_65
	word32 lr_38
	word32 r12_42
	word32 r11_41 = fn0000B978(r0, r1, r2, r4_24, r7_27, r12_29 + 1<32>, r5_25, lr_28, out r12_42, out lr_38)
	r1Out = r1_60
	r2Out = r2_61
	r8Out = r8_64
	r9Out = r9_65
	r10Out = r10_63
	r11Out = r11_41
	r12Out = r12_42
	lrOut = lr_38
	return r0_59
fn0000B994_exit:


void fn0000B9C8(word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000B9C8_entry:
l0000B9C8:
	word32 r6_100 = 0x0000B9CE<p32> - Mem17[0x0000BA3C<p32>:word32]
	word32 lr_105 = r12 - 1<32>
	word32 r7_104 = r8
	word32 r5_103 = Mem17[Mem17[r6_100 + 192<i32>:word32]:word32]
	word32 r12_106 = r10
	branch r12 >u 4<32> l0000BA3A
l0000B9E4:
	word32 r10_33
	switch (r12 - 1<32>) { l0000B9EC l0000B9F0 l0000B9F4 l0000B9F8 }
l0000B9F8:
l0000BA08:
	r10_33 = Mem17[r6_100 + 688<i32>:word32]
l0000B9F4:
l0000B9F0:
l0000B9FC:
	r10_33 = Mem17[r6_100 + 696<i32>:word32]
l0000B9EC:
l0000BA02:
	r10_33 = Mem17[r6_100 + 692<i32>:word32]
l0000BA0C:
	word32 r8_43
	word32 lr_51
	word32 r9_49
	branch r11 >= 0<32> l0000BA20
l0000BA20:
	r8_43 = r11 << 4<32>
	r9_49 = Mem17[(r11 << 4<32>) + r9:word32]
	lr_51 = Mem17[r6_100 + 352<i32>:word32]
l0000BA10:
	r8_43 = 0<32>
	lr_51 = Mem17[r6_100 + 352<i32>:word32] - r11
	r9_49 = fp - 0x18<32>
l0000BA2C:
	call Mem79[r6_100 + 68<i32>:word32] (retsize: 0;)
		uses: lr:lr_78,r10:r10_86,r11:0<32>,r12:r5_26,r4:r4,r5:r5_26,r6:r6_20,r7:r8,r8:r8_84,r9:r9_75,Stack +0000:lr_78,Stack +0004:r9_75,Stack +0008:r8
		defs: lr:lr_92,r10:r10_95,r11:r11_97,r12:r12_93,r4:r4_88,r5:r5_89,r6:r6_90,r7:r7_91,r8:r8_94,r9:r9_98
l0000BA3A:
	word32 r4_113
	word32 r5_114
	word32 r6_115
	word32 r7_116
	word32 lr_117
	word32 r12_118
	word32 r8_119
	word32 r10_120
	word32 pc_121
	word32 r11_122
	word32 r9_123
	byte VNZC_124
	call Mem101[r6_100 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_105,r10:r10_108,r11:r11_109,r12:r12_106,r4:r4_102,r5:r5_103,r6:r6_100,r7:r7_104,r8:r8_107,r9:r9_110
		defs: lr:lr_117,pc:pc_121,r10:r10_120,r11:r11_122,r12:r12_118,r4:r4_113,r5:r5_114,r6:r6_115,r7:r7_116,r8:r8_119,r9:r9_123,VNZC:VNZC_124
	branch SLICE(VNZC_124, bool, 2) l0000BA40_thunk_fn0000BA44
l0000BA40_thunk_fn0000BA44:
	fn0000BA44(r11_122, r12_118)
	return
l0000BA40_1:
	call CONVERT(Mem101[pc_121 + -34<i32>:byte], byte, word32) (retsize: 0;)
		uses: lr:lr_117,r10:r10_120,r11:r11_122,r12:r12_118,r4:r4_113,r5:r5_114,r6:r6_115,r7:r7_116,r8:r8_119,r9:r9_123
	return
fn0000B9C8_exit:


word32 fn0000BA44(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B9C8
//      fn0000BA66
//      fn0000BA8C
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
fn0000BA44_entry:
l0000BA44:
	word32 r9_15
	word32 r11_11 = Mem5[r12:word32]
	branch 0xFFFFFFFF<32> /u r11 >=u r11_11 l0000BA5A
l0000BA5A:
	Mem16[r12:word32] = r11 * r11_11
	r9_15 = 0<32>
l0000BA54:
	Mem18[r12:word32] = 0xFFFFFFFF<32>
	r9_15 = 1<32>
l0000BA62:
	return r9_15
fn0000BA44_exit:


word32 fn0000BA66(word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000BA8C
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r12 r8 r9
// Preserved: r0 r1 r11 r2 r3 r4 r5 r6 r7 sp
fn0000BA66_entry:
l0000BA66:
	word32 r7_38 = r10
	word32 r5_39 = 0<32>
l0000BA7A:
	r7_38 = r7_38 - 1<32>
	branch r7_38 != 0xFFFFFFFF<32> l0000BA76
l0000BA76:
	r5_39 = r5_39 | fn0000BA44(r11, r12)
l0000BA84:
	return r5_39
fn0000BA66_exit:


void fn0000BA8C(word32 r1, word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000BA8C_entry:
l0000BA8C:
	word32 sp_30 = fp - 0x2C<32>
	word32 r6_32 = 0x0000BA92<p32> - Mem29[0x0000BB94<p32>:word32]
	word32 r2_112 = r10
	word32 r5_36 = r12
	word32 r7_38 = r11
	word32 r0_104 = r9
	word32 r3_116 = r8
	branch r10 <=u 0x24<32> l0000BAB8
l0000BAA6:
	call Mem29[r6_32 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r9,r1:r1,r10:0x53<32>,r11:Mem29[r6_32 + 684<i32>:word32],r12:Mem29[r6_32 + 680<i32>:word32],r2:r10,r3:r8,r4:r4,r5:r12,r6:r6_32,r7:r11,r8:r8,r9:0x0000BC84<p32>
		defs: lr:lr_59,r0:r0_51,r1:r1_52,r11:r11_62,r12:r12_61,r2:r2_53,r3:r3_54,r4:r4_55,r5:r5_56,r6:r6_57,r7:r7_58,sp:sp_50
l0000BAB8:
	word32 r9_70 = CONVERT(Mem29[r5_36:byte], byte, word32)
	word32 r10_71 = Mem29[Mem29[r6_32 + 156<i32>:word32]:word32]
	word32 r8_73 = sp_30 + 4<32>
	branch r7_38 == 0<32> l0000BACA
l0000BAC6_1:
	r1 = r7_38
l0000BACA:
	branch r7_38 != 0<32> l0000BACE
l0000BACA_1:
	r1 = r8_73
l0000BACE:
	word32 r8_83 = r5_36
l0000BAD4:
	word32 r7_87 = CONVERT(Mem29[r10_71 + r9_70 * 2<32>:word16], word16, word32)
	r8_83 = r8_83 + 1<32>
	branch (r7_87 & 0x20<32>) != 0<32> l0000BAD2
l0000BAD2:
	r9_70 = CONVERT(Mem29[r8_83:byte], byte, word32)
l0000BAE0:
	branch SLICE(r9_70 - 0x2D<32>, byte, 0) == 0<8> l0000BC7C
l0000BAEA:
	word32 r4_184
	word32 r0_138
	word32 r1_139
	word32 r2_140
	word32 r3_141
	word32 r5_143
	word32 r6_144
	word32 r7_145
	word32 lr_146
	word32 r12_148
	word32 r9_150
	word32 r8_151
	call Mem29[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,r0:r0_104,r1:r1_106,r10:r10_71,r11:r11_133,r12:r12_129,r2:r2_112,r3:r3_116,r4:r4_120,r5:r5_69,r6:r6_66,r7:r7_87 & 0x20<32>,r8:0x2D<32>,r9:r9_85
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r12:r12_148,r2:r2_140,r3:r3_141,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
	Mem154[r12_148:word32] = r7_145
	word32 r4_163
	word32 r5_164
	word32 r7_166
	word32 r12_169
	word32 r1_160
	word32 r3_162
	word32 r6_165
	word32 r2_161
	word32 lr_167
	word32 r10_168
	word32 r9_171
	word32 sp_158
	word32 r0_159
	call Mem154[r6_144 + 536<i32>:word32] (retsize: 0;)
		uses: lr:lr_146,r0:r0_138,r1:r1_139,r10:r2_140,r11:r1_139,r12:r5_143,r2:r2_140,r3:r3_141,r4:r12_148,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
		defs: lr:lr_167,r0:r0_159,r1:r1_160,r10:r10_168,r12:r12_169,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r9:r9_171,sp:sp_158
	Mem174[sp_158:word32] = r12_169
	word32 r11_175 = Mem174[r1_160:word32]
	word32 r8_176 = r12_169
	branch r11_175 != r5_164 l0000BB26
l0000BB26:
	word32 r12_179 = Mem174[r4_163:word32]
	branch r12_179 != 0<32> l0000BB30
l0000BB30:
	branch r12_179 != 0x22<32> l0000BC7C
l0000BB38:
	r4_184 = 1<32>
l0000BB2C:
	r4_184 = r12_179
l0000BB3A:
	branch r3_162 == 0<32> l0000BC78
l0000BB06:
	branch r3_162 == 0<32> l0000BC7C
l0000BB0C:
	word32 r11_191 = CONVERT(Mem174[r11_175:byte], byte, word32)
	branch r11_191 == 0<32> l0000BC7C
l0000BB14:
	word32 r7_203
	byte VNZC_210
	call Mem174[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_167,r0:r0_159,r1:r1_160,r10:r10_168,r11:r11_191,r12:r3_162,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r8:r12_169,r9:r9_171
		defs: lr:lr_204,r0:r0_196,r1:r1_197,r10:r10_205,r2:r2_198,r3:r3_199,r6:r6_202,r7:r7_203,r9:r9_208,sp:sp_195,VNZC:VNZC_210
	branch SLICE(VNZC_210, bool, 1) l0000BC7C
l0000BC7C:
l0000BB1E:
	Mem215[sp_158:word32] = 1<32>
	r8_176 = 1<32>
	r4_184 = r7_203
l0000BB40:
	word32 r5_220 = Mem218[r1_160:word32]
	word32 r7_221 = CONVERT(Mem218[r5_220:byte], byte, word32)
	branch r7_221 == 0<32> l0000BC76
l0000BB4A:
	word32 r1_247
	word32 r2_248
	word32 r3_249
	word32 r4_250
	word32 r5_251
	word32 r6_252
	word32 r7_253
	word32 lr_254
	word32 r10_255
	word32 r9_258
	word32 r8_259
	byte VNZC_260
	call Mem218[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_235,r0:r0_229,r1:r1_216,r10:r10_237,r11:r7_221,r12:r3_225,r2:r2_231,r3:r3_225,r4:r4_233,r5:r5_220,r6:r6_227,r7:r7_221,r8:r8_241,r9:r9_239
		defs: lr:lr_254,r0:r0_246,r1:r1_247,r10:r10_255,r2:r2_248,r3:r3_249,r4:r4_250,r5:r5_251,r6:r6_252,r7:r7_253,r8:r8_259,r9:r9_258,sp:sp_245,VNZC:VNZC_260
	branch SLICE(VNZC_260, bool, 1) l0000BC58
l0000BB56:
	word32 r5_289
	word32 r11_288
	word32 r1_266
	word32 r5_270
	word32 r7_272
	byte VNZC_279
	call Mem218[r6_252 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_254,r0:r0_246,r1:r1_247,r10:r10_255,r11:0x30<32>,r12:r3_249,r2:r2_248,r3:r3_249,r4:r4_250,r5:r5_251,r6:r6_252,r7:r7_253,r8:r8_259,r9:r9_258
		defs: r0:r0_265,r1:r1_266,r5:r5_270,r7:r7_272,sp:sp_264,VNZC:VNZC_279
	branch SLICE(VNZC_279, bool, 1) l0000BB98
l0000BB60:
	word32 r9_281 = CONVERT(Mem218[r5_270 + 1<i32>:byte], byte, word32)
	branch SLICE(r9_281 - 0x42<32>, byte, 0) == 0<8> l0000BB7C
l0000BB6A:
	branch SLICE(r9_281 - 0x44<32>, byte, 0) == 0<8> l0000BB7C
l0000BB7C:
	r11_288 = 0x3E8<32>
	r5_289 = 2<32>
l0000BB72:
	branch SLICE(r9_281 - 0x69<32>, byte, 0) != 0<8> l0000BB98
l0000BB7A:
l0000BB84:
	branch SLICE(CONVERT(Mem218[r5_270 + 2<i32>:byte], byte, word32) - 0x42<32>, byte, 0) != 0<8> l0000BB98
l0000BB98:
	r11_288 = 0x400<32>
	r5_289 = 1<32>
l0000BB8C:
	r11_288 = 0x400<32>
	r5_289 = 3<32>
l0000BB9E:
	word32 r11_306
	branch SLICE(r7_272 - 0x42<32>, byte, 0) == 0<8> l0000BC26
l0000BC26:
	r11_306 = 0x400<32>
l0000BBA6:
	word32 r10_310
	branch SLICE(r7_272 - 0x45<32>, byte, 0) == 0<8> l0000BC30
l0000BC30:
	r10_310 = 6<32>
l0000BBAE:
	branch SLICE(r7_272 - 0x47<32>, byte, 0) == 0<8> l0000BC34
l0000BBB6:
	branch SLICE(r7_272 - 0x4B<32>, byte, 0) == 0<8> l0000BC38
l0000BBBE:
	branch SLICE(r7_272 - 0x4D<32>, byte, 0) == 0<8> l0000BC3C
l0000BBC6:
	branch SLICE(r7_272 - 0x50<32>, byte, 0) == 0<8> l0000BC40
l0000BC40:
	r10_310 = 5<32>
l0000BBCE:
	branch SLICE(r7_272 - 0x54<32>, byte, 0) == 0<8> l0000BC44
l0000BBD6:
	branch SLICE(r7_272 - 0x59<32>, byte, 0) == 0<8> l0000BC4C
l0000BC4C:
	r10_310 = 8<32>
l0000BBDE:
	branch SLICE(r7_272 - 0x5A<32>, byte, 0) == 0<8> l0000BC50
l0000BC50:
	r10_310 = 7<32>
l0000BBE6:
	branch SLICE(r7_272 - 0x62<32>, byte, 0) == 0<8> l0000BC20
l0000BC20:
	r11_306 = 0x200<32>
l0000BBEE:
	branch SLICE(r7_272 - 0x63<32>, byte, 0) == 0<8> l0000BC5C
l0000BC5C:
l0000BBF6:
	branch SLICE(r7_272 - 0x67<32>, byte, 0) == 0<8> l0000BC34
l0000BC34:
	r10_310 = 3<32>
l0000BBFE:
	branch SLICE(r7_272 - 0x6B<32>, byte, 0) == 0<8> l0000BC38
l0000BC38:
	r10_310 = 1<32>
l0000BC06:
	branch SLICE(r7_272 - 0x6D<32>, byte, 0) == 0<8> l0000BC3C
l0000BC3C:
	r10_310 = 2<32>
l0000BC0E:
	branch SLICE(r7_272 - 0x74<32>, byte, 0) == 0<8> l0000BC44
l0000BC44:
	r10_310 = 4<32>
l0000BC52:
	fn0000BA66(r10_310, r11_288, sp_158)
l0000BC16:
	branch SLICE(r7_272 - 0x77<32>, byte, 0) != 0<8> l0000BC58
l0000BC58:
l0000BC1E:
l0000BC48:
	r11_306 = 2<32>
l0000BC2A:
	fn0000BA44(r11_306, sp_158)
l0000BC5E:
	word32 r8_445 = Mem218[r1_266:word32] + r5_289
	Mem446[r1_266:word32] = r8_445
	branch Mem446[r8_445:byte] == 0<8> l0000BC76
l0000BC72_1:
l0000BC76:
	r8_176 = Mem457[sp_158:word32]
l0000BC78:
	Mem474[r0_159:word32] = r8_176
l0000BC7E:
	return
fn0000BA8C_exit:


word32 fn0000BC98(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006768
// MayUse:  r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r12 r8
// Preserved: sp
fn0000BC98_entry:
l0000BC98:
	branch r12 >u 0x39<32> l0000BCA4
l0000BCA4:
	return CONVERT((r12 & 0xFFFFFFDF<u32>) <=u 0x5A<32>, bool, word32)
l0000BCA2:
	return 1<32>
fn0000BC98_exit:


void fn0000BCB0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00006768
//      fn000067DC
// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn0000BCB0_entry:
l0000BCB0:
	return
fn0000BCB0_exit:


void fn0000BCDC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000067DC
//      fn00006814
// MayUse: 
// LiveOut:
// Trashed: VNZC
// Preserved: sp
fn0000BCDC_entry:
l0000BCDC:
	return
fn0000BCDC_exit:


void fn0000BD82(word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B818
// MayUse:  r12:[0..31]
// LiveOut:
// Trashed: VNZC r8
// Preserved: r12 sp
fn0000BD82_entry:
l0000BD82:
	Mem7[r12:word16] = SLICE(CONVERT(Mem0[r12:int16], int16, int32) | 8<u32>, word16, 0)
	return
fn0000BD82_exit:


word32 fn0000BD8C(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B88C
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000BD8C_entry:
l0000BD8C:
	word32 r6_32 = 0x0000BD92<p32> - Mem29[0x0000BE98<p32>:word32]
	word32 sp_35
	word32 r7_43
	word32 r12_45
	word32 r6_162
	word32 r0_171
	word32 r1_157
	word32 r2_158
	word32 r3_159
	word32 r4_160
	word32 lr_164
	call Mem29[r6_32 + 320<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r12:0xA<32>,r2:r2,r3:r3,r4:r4,r5:r5,r6:r6_32,r7:r7,Stack +0070:lr,Stack +0074:r7,Stack +0078:r6,Stack +007C:r5,Stack +0080:r4,Stack +0084:r3,Stack +0088:r2,Stack +008C:r1,Stack +0090:r0
		defs: lr:lr_44,r0:r0_36,r1:r1_37,r12:r12_45,r2:r2_38,r3:r3_39,r4:r4_40,r6:r6_42,r7:r7_43,sp:sp_35
	word32 r5_52 = Mem29[Mem29[r6_162 + 348<i32>:word32]:word32]
	word32 r8_53 = Mem29[r6_162 + 252<i32>:word32]
	branch r12_45 != 0<32> l0000BDAA
l0000BDA6_1:
	r12_45 = r8_53
l0000BDAA:
	Mem59[sp_35:word32] = r12_45
	branch r5_52 != 0<32> l0000BF94
l0000BDB2:
	word32 r0_73
	word32 r1_74
	word32 r2_75
	word32 r4_77
	word32 r5_78
	word32 r6_79
	word32 r7_80
	word32 lr_81
	word32 r12_82
	byte VNZC_87
	call Mem59[r6_162 + 56<i32>:word32] (retsize: 0;)
		uses: lr:lr_44,r0:r0_36,r1:r1_37,r12:Mem59[r6_42 + 676<i32>:word32],r2:r2_38,r3:r3_39,r4:r4_40,r5:r5_52,r6:r6_42,r7:r7_43
		defs: lr:lr_81,r0:r0_73,r1:r1_74,r12:r12_82,r2:r2_75,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80,VNZC:VNZC_87
	word32 r3_88 = r12_82
	branch SLICE(VNZC_87, bool, 1) l0000BDC6
l0000BDBE:
	branch SLICE(CONVERT(Mem59[r12_82:byte], byte, word32) - r5_78, byte, 0) != 0<8> l0000BDCA
l0000BDC6:
	r3_88 = Mem59[r6_79 + 672<i32>:word32]
l0000BDCA:
	word32 r7_139
	word32 r0_117
	word32 r1_118
	word32 r2_119
	word32 r3_120
	word32 r4_121
	word32 r6_123
	word32 lr_125
	word32 r12_126
	byte VNZC_131
	call Mem59[r6_79 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_81,r0:r0_73,r1:r1_74,r12:r3_96,r2:r2_75,r3:r3_96,r4:r4_77,r5:r5_78,r6:r6_79,r7:r7_80
		defs: lr:lr_125,r0:r0_117,r1:r1_118,r12:r12_126,r2:r2_119,r3:r3_120,r4:r4_121,r6:r6_123,VNZC:VNZC_131
	branch SLICE(VNZC_131, bool, 1) l0000BDD8
l0000BDD8:
	r7_139 = CONVERT(SLICE(CONVERT(Mem59[r3_120 + r12_126 + -1<i32>:byte], byte, word32) - 0x2F<32>, byte, 0) != 0<8>, bool, word32)
l0000BDD4:
	r7_139 = r12_126
l0000BDE8:
	word32 r5_161
	word32 r7_163
	word32 r12_165
	byte VNZC_170
	call Mem59[r6_123 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,r0:r0_117,r1:r1_118,r12:r12_126 + 0xE<32> + r7_143,r2:r2_119,r3:r3_120,r4:r4_121,r5:r12_126,r6:r6_123,r7:r7_143
		defs: lr:lr_164,r1:r1_157,r12:r12_165,r2:r2_158,r3:r3_159,r4:r4_160,r5:r5_161,r6:r6_162,r7:r7_163,VNZC:VNZC_170
	r0_171 = r12_165
	branch SLICE(VNZC_170, bool, 1) l0000BDFC
l0000BDFC:
	word32 r0_176
	word32 r1_177
	word32 r2_178
	word32 r4_180
	word32 r5_181
	word32 r6_182
	word32 r7_183
	call Mem59[r6_162 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_164,r0:r12_165,r1:r1_157,r10:r5_161,r11:r3_159,r2:r2_158,r3:r3_159,r4:r4_160,r5:r5_161,r6:r6_162,r7:r7_163
		defs: r0:r0_176,r1:r1_177,r2:r2_178,r4:r4_180,r5:r5_181,r6:r6_182,r7:r7_183
	branch r7_183 == 0<32> l0000BE0E
l0000BE08:
	Mem194[r5_181:byte] = 0x2F<8>
l0000BE0E:
	word32 r5_598
	word32 r9_197 = Mem196[r6_182 + 668<i32>:word32]
	word32 r3_201 = CONVERT(Mem196[r9_197 + 12<i32>:byte], byte, word32)
	word32 r5_202 = CONVERT(Mem196[r9_197 + 13<i32>:byte], byte, word32)
	word32 r11_203 = Mem196[r6_182 + 664<i32>:word32]
	word32 r8_205 = r0_176 + r5_181 + r7_183
	word32 r10_207 = Mem196[r9_197:word32]
	word32 lr_208 = Mem196[r9_197 + 4<i32>:word32]
	word32 r9_210 = Mem196[r9_197 + 8<i32>:word32]
	Mem211[r8_205 + 8<i32>:word32] = r9_210
	Mem212[r8_205 + 13<i32>:byte] = SLICE(r5_202, byte, 0)
	Mem213[r8_205:word32] = r10_207
	Mem214[r8_205 + 4<i32>:word32] = lr_208
	Mem215[r8_205 + 12<i32>:byte] = SLICE(r3_201, byte, 0)
	word32 sp_220
	word32 r12_230
	byte VNZC_235
	word32 r5_226
	word32 r0_221
	word32 r6_227
	word32 r1_222
	word32 r2_223
	word32 r3_224
	word32 r4_225
	word32 lr_229
	call Mem215[r6_182 + 392<i32>:word32] (retsize: 0;)
		uses: lr:lr_208,r0:r0_176,r1:r1_177,r10:r10_207,r11:r11_203,r12:r0_176,r2:r2_178,r3:r3_201,r4:r4_180,r5:r5_202,r6:r6_182,r7:r7_183,r8:r8_205,r9:r9_210
		defs: lr:lr_229,r0:r0_221,r1:r1_222,r12:r12_230,r2:r2_223,r3:r3_224,r4:r4_225,r5:r5_226,r6:r6_227,sp:sp_220,VNZC:VNZC_235
	word32 r7_236 = r12_230
	branch SLICE(VNZC_235, bool, 1) l0000BF3C
l0000BE42:
	Mem240[sp_220 + 4<i32>:word32] = 0<32>
	word32 r4_239 = 0<32>
l0000BE48:
	word32 r12_267
	word32 r9_243 = Mem242[r7_236 + 16<i32>:word32]
	branch r9_243 >=u Mem242[r7_236 + 24<i32>:word32] l0000BE56
l0000BE56:
	call Mem242[r6_227 + 332<i32>:word32] (retsize: 0;)
		uses: lr:lr_255,r0:r0_249,r1:r1_250,r12:r7_241,r2:r2_251,r3:r3_252,r4:r4_253,r5:r5_254,r6:r6_248,r7:r7_241
		defs: lr:lr_266,r0:r0_258,r1:r1_259,r12:r12_267,r2:r2_260,r3:r3_261,r4:r4_262,r5:r5_263,r6:r6_264,r7:r7_265
	branch r12_267 == 0xFFFFFFFF<32> l0000BF32
l0000BE50:
	r12_267 = CONVERT(Mem242[r9_243:byte], byte, word32)
	Mem278[r7_236 + 16<i32>:word32] = r9_243 + 1<i32>
l0000BE60:
	branch r12_267 == 0xA<32> l0000BE48
l0000BE64:
	branch r12_267 == 0x20<32> l0000BE48
l0000BE6A:
	branch r12_267 == 9<32> l0000BE48
l0000BE6E:
	branch r12_267 != 0x23<32> l0000BE9C
l0000BE9C:
	word32 sp_300
	word32 r0_301
	word32 r1_302
	word32 r2_303
	word32 r4_305
	word32 r6_307
	word32 r7_308
	word32 lr_309
	call Mem291[r6_227 + 588<i32>:word32] (retsize: 0;)
		uses: lr:lr_298,r0:r0_292,r1:r1_293,r11:r7_288,r2:r2_294,r3:r3_295,r4:r4_296,r5:r5_297,r6:r6_290,r7:r7_288
		defs: lr:lr_309,r0:r0_301,r1:r1_302,r2:r2_303,r4:r4_305,r6:r6_307,r7:r7_308,sp:sp_300
	Mem320[sp_300 - 4<i32>:word32] = sp_300 + 8<32>
	Mem322[sp_300 - 8<i32>:word32] = sp_300 + 0x3C<32>
	word32 r12_335
	call Mem322[r6_307 + 552<i32>:word32] (retsize: 0;)
		uses: lr:lr_309,r0:r0_301,r1:r1_302,r11:Mem322[r6_307 + 660<i32>:word32],r12:r7_308,r2:r2_303,r3:sp_300 + 8<32>,r4:r4_305,r5:sp_300 + 0x3C<32>,r6:r6_307,r7:r7_308
		defs: lr:lr_334,r0:r0_326,r1:r1_327,r12:r12_335,r2:r2_328,r3:r3_329,r4:r4_330,r5:r5_331,r6:r6_332,r7:r7_333
	branch r12_335 <= 1<32> l0000BF32
l0000BEC0:
	word32 sp_388
	word32 r4_393
	word32 r12_398
	word32 r0_346
	word32 r2_348
	word32 r3_349
	word32 r4_350
	word32 r5_351
	word32 r6_352
	word32 r7_353
	word32 lr_354
	word32 r12_355
	call Mem322[r6_227 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_334,r0:r0_326,r1:r1_327,r12:r5_331,r2:r2_328,r3:r3_329,r4:r4_330,r5:r5_331,r6:r6_332,r7:r7_333
		defs: lr:lr_354,r0:r0_346,r12:r12_355,r2:r2_348,r3:r3_349,r4:r4_350,r5:r5_351,r6:r6_352,r7:r7_353
	word32 sp_363
	word32 r0_364
	word32 r1_365
	word32 r3_367
	word32 r4_368
	word32 r5_369
	word32 r6_370
	word32 r7_371
	word32 lr_372
	word32 r12_373
	call Mem322[r6_352 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_354,r0:r0_346,r1:r12_355,r12:r3_349,r2:r2_348,r3:r3_349,r4:r4_350,r5:r5_351,r6:r6_352,r7:r7_353
		defs: lr:lr_372,r0:r0_364,r1:r1_365,r12:r12_373,r3:r3_367,r4:r4_368,r5:r5_369,r6:r6_370,r7:r7_371,sp:sp_363
	word32 r8_380 = r1_365 + r12_373
	branch r4_368 != 0<32> l0000BEE6
l0000BEE6:
	word32 r4_384 = r4_368 + (r8_380 + 2<32>)
	call Mem322[r6_370 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_372,r0:r0_364,r1:r1_365,r11:r4_384 + 1<32>,r12:Mem322[sp_363 + 4<i32>:word32],r2:r12_373,r3:r3_367,r4:r4_384,r5:r5_369,r6:r6_370,r7:r7_371,r8:r8_380 + 2<32>
		defs: lr:lr_397,r0:r0_389,r1:r1_390,r12:r12_398,r2:r2_391,r4:r4_393,r5:r5_394,r6:r6_395,r7:r7_396,sp:sp_388
l0000BED8:
	call Mem322[r6_370 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_372,r0:r0_364,r1:r1_365,r12:r8_380 + 3<32>,r2:r12_373,r3:r3_367,r4:r8_380 + 2<32>,r5:r5_369,r6:r6_370,r7:r7_371
		defs: lr:lr_416,r0:r0_408,r1:r1_409,r12:r12_417,r2:r2_410,r4:r4_412,r5:r5_413,r6:r6_414,r7:r7_415,sp:sp_407
l0000BEF4:
	r3_224 = r12_398
	branch r12_398 != 0<32> l0000BF0C
l0000BF0C:
	word32 r5_430 = r12_398 + r4_393 - r2_223
	word32 sp_442
	word32 r0_443
	word32 r1_444
	word32 r2_445
	word32 r3_446
	word32 r4_447
	word32 r5_448
	word32 r6_449
	word32 r7_450
	word32 lr_451
	call Mem322[r6_227 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_441,r0:r0_439,r1:r1_431,r11:sp_433 + 0x3C<32>,r12:r5_430 - r1_431 - 2<32>,r2:r2_429,r3:r12_423,r4:r4_427,r5:r5_430,r6:r6_437,r7:r7_440
		defs: lr:lr_451,r0:r0_443,r1:r1_444,r2:r2_445,r3:r3_446,r4:r4_447,r5:r5_448,r6:r6_449,r7:r7_450,sp:sp_442
	Mem458[sp_442 + 4<i32>:word32] = r3_446
	call Mem458[r6_449 + 128<i32>:word32] (retsize: 0;)
		uses: lr:lr_451,r0:r0_443,r1:r1_444,r11:sp_442 + 8<32>,r12:r5_448 - 1<32>,r2:r2_445,r3:r3_446,r4:r4_447,r5:r5_448,r6:r6_449,r7:r7_450
		defs: lr:lr_471,r0:r0_463,r1:r1_464,r2:r2_465,r3:r3_466,r4:r4_467,r5:r5_468,r6:r6_469,r7:r7_470
l0000BEFA:
	word32 r9_478 = Mem322[sp_388 + 4<i32>:word32]
	branch r9_478 == 0<32> l0000BF30
l0000BF30:
	r4_239 = Mem322[sp_388 + 4<i32>:word32]
l0000BF00:
	word32 sp_484
	call Mem322[r6_227 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_441,r0:r0_439,r1:r1_431,r12:r9_478,r2:r2_429,r3:r12_423,r4:r4_427,r5:r5_483,r6:r6_437,r7:r7_440
		defs: lr:lr_493,r0:r0_485,r1:r1_486,r2:r2_487,r3:r3_488,r5:r5_490,r6:r6_491,r7:r7_492,sp:sp_484
	Mem501[sp_484 + 4<i32>:word32] = r3_224
	r4_239 = r3_224
l0000BE74:
	word32 r12_528
	word32 r9_504 = Mem503[r7_236 + 16<i32>:word32]
	branch r9_504 >=u Mem503[r7_236 + 24<i32>:word32] l0000BE82
l0000BE82:
	call Mem503[r6_227 + 332<i32>:word32] (retsize: 0;)
		uses: lr:lr_516,r0:r0_510,r1:r1_511,r12:r7_502,r2:r2_512,r3:r3_513,r4:r4_514,r5:r5_515,r6:r6_509,r7:r7_502
		defs: lr:lr_527,r0:r0_519,r1:r1_520,r12:r12_528,r2:r2_521,r3:r3_522,r4:r4_523,r5:r5_524,r6:r6_525,r7:r7_526
l0000BE7C:
	r12_528 = CONVERT(Mem503[r9_504:byte], byte, word32)
	Mem537[r7_236 + 16<i32>:word32] = r9_504 + 1<i32>
l0000BE88:
	branch r12_528 == 0xFFFFFFFF<32> l0000BE90
l0000BE8C:
	branch r12_528 != 0xA<32> l0000BE74
l0000BE90:
	branch r12_528 != 0xFFFFFFFF<32> l0000BE48
l0000BE94:
l0000BF32:
	word32 sp_580
	call Mem553[r6_227 + 296<i32>:word32] (retsize: 0;)
		uses: lr:lr_574,r0:r0_556,r1:r1_559,r12:r7_546,r2:r2_562,r3:r3_565,r4:r4_568,r5:r5_571,r6:r6_550,r7:r7_546
		defs: lr:lr_589,r0:r0_581,r1:r1_582,r2:r2_583,r3:r3_584,r4:r4_585,r6:r6_587,r7:r7_588,sp:sp_580
	branch r4_225 != 0<32> l0000BF42
l0000BF42:
	r5_598 = Mem553[sp_580 + 4<i32>:word32]
	Mem600[r4_225:byte] = 0<8>
l0000BF3C:
	r5_598 = Mem602[r6_227 + 252<i32>:word32]
l0000BF4A:
	call Mem608[r6_227 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_620,r0:r0_604,r1:r1_609,r12:r0_604,r2:r2_611,r3:r3_613,r4:r4_615,r5:r5_617,r6:r6_607,r7:r7_618
		defs: lr:lr_633,r0:r0_625,r1:r1_626,r2:r2_627,r3:r3_628,r4:r4_629,r5:r5_630,r6:r6_631
l0000BDF6:
	r5_52 = Mem59[r6_162 + 252<i32>:word32]
l0000BF50:
	Mem645[Mem642[r6_162 + 348<i32>:word32]:word32] = r5_52
l0000BF94:
	word32 r7_648 = CONVERT(Mem647[r5_52:byte], byte, word32)
	branch r7_648 != 0<32> l0000BF58
l0000BF58:
	word32 r0_662
	word32 r1_663
	word32 r2_664
	word32 r3_665
	word32 r4_666
	word32 r5_667
	word32 r6_668
	word32 r7_669
	word32 lr_670
	byte VNZC_676
	call Mem647[r6_162 + 24<i32>:word32] (retsize: 0;)
		uses: lr:lr_660,r0:r0_655,r1:r1_656,r2:r2_657,r3:r3_658,r4:r4_659,r5:r5_646,r6:r6_654,r7:r7_648
		defs: lr:lr_670,r0:r0_662,r1:r1_663,r2:r2_664,r3:r3_665,r4:r4_666,r5:r5_667,r6:r6_668,r7:r7_669,VNZC:VNZC_676
	branch SLICE(VNZC_676, bool, 1) l0000BF72
l0000BF5E:
	branch SLICE(r7_669 - 0x2A<32>, byte, 0) != 0<8> l0000BF82
l0000BF68:
	branch Mem647[r5_667 + 1<i32>:byte] != 0<8> l0000BF82
l0000BF82:
	word32 r0_698
	word32 r1_699
	word32 r2_700
	word32 r3_701
	word32 r4_702
	word32 r5_703
	word32 r6_704
	word32 r7_705
	word32 lr_706
	word32 r12_707
	call Mem647[r6_668 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_670,r0:r0_662,r1:r1_663,r2:r2_664,r3:r3_665,r4:r4_666,r5:r5_667,r6:r6_668,r7:r7_669
		defs: lr:lr_706,r0:r0_698,r1:r1_699,r12:r12_707,r2:r2_700,r3:r3_701,r4:r4_702,r5:r5_703,r6:r6_704,r7:r7_705
	word32 r5_713 = r5_703 + r12_707
	word32 r5_723
	word32 r12_727
	call Mem647[r6_704 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_706,r0:r0_698,r1:r1_699,r12:r5_713 + 1<32>,r2:r2_700,r3:r3_701,r4:r4_702,r5:r5_713 + 1<32>,r6:r6_704,r7:r7_705
		defs: lr:lr_726,r0:r0_718,r1:r1_719,r12:r12_727,r2:r2_720,r3:r3_721,r4:r4_722,r5:r5_723,r6:r6_724
	r5_52 = r5_723 + r12_727 + 1<32>
l0000BF72:
	word32 sp_748
	word32 r5_754
	word32 r12_758
	call Mem647[r6_668 + 16<i32>:word32] (retsize: 0;)
		uses: lr:lr_670,r0:r0_662,r1:r1_663,r12:r5_667,r2:r2_664,r3:r3_665,r4:r4_666,r5:r5_667,r6:r6_668,r7:r7_669
		defs: lr:lr_757,r12:r12_758,r5:r5_754,r6:r6_755,sp:sp_748
	Mem767[sp_748:word32] = r5_754 + r12_758 + 1<32>
l0000BF9E:
	word32 r12_774 = Mem769[r6_162 + 656<i32>:word32]
	branch Mem769[dwLoc94:byte] == 0<8> l0000BFB2
l0000BFAE_1:
	r12_774 = dwLoc94
l0000BFB2:
	lrOut = lr_164
	return r12_774
fn0000BD8C_exit:


word32 fn0000BFB8(word32 r0, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, word32 dwArg14, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r4Out, ptr32 & r5Out, ptr32 & r6Out, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C058
//      fn0000C2C8
// MayUse:  r0:[0..31] r10:[0..7] r11:[0..31] r12:[0..31] r8:[0..7] r9:[0..7] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31] Stack +0014:[0..31]
// LiveOut: r0 r12 r2 r3 r4 r5 r6 sp
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000BFB8_entry:
l0000BFB8:
	word32 r6_31 = 0x0000BFBC<p32> - Mem29[0x0000C056<p32>:word32]
	word32 r7_33 = CONVERT(Mem29[r12:byte], byte, word32)
	branch SLICE(r7_33 - r10, byte, 0) != 0<8> l0000C03C
l0000BFDA:
	branch r7_33 == 0<32> l0000C042
l0000BFDE:
	word32 r10_49 = CONVERT(Mem29[r12 + 1<i32>:byte], byte, word32)
	branch SLICE(r10_49 - r9, byte, 0) != 0<8> l0000C03C
l0000BFE6:
	branch r10_49 == 0<32> l0000C042
l0000BFEA:
	word32 r9_55 = CONVERT(Mem29[r12 + 2<i32>:byte], byte, word32)
	branch SLICE(r9_55 - r8, byte, 0) != 0<8> l0000C03C
l0000BFF2:
	branch r9_55 == 0<32> l0000C042
l0000BFF6:
	word32 r8_61 = CONVERT(Mem29[r12 + 3<i32>:byte], byte, word32)
	branch SLICE(r8_61 - dwArg00, byte, 0) != 0<8> l0000C03C
l0000BFFE:
	branch r8_61 == 0<32> l0000C042
l0000C002:
	word32 r8_66 = CONVERT(Mem29[r12 + -4<i32>:byte], byte, word32)
	branch SLICE(r8_66 - dwArg04, byte, 0) != 0<8> l0000C03C
l0000C00A:
	branch r8_66 == 0<32> l0000C042
l0000C00E:
	word32 r8_71 = CONVERT(Mem29[r12 + -3<i32>:byte], byte, word32)
	branch SLICE(r8_71 - dwArg08, byte, 0) != 0<8> l0000C03C
l0000C016:
	branch r8_71 == 0<32> l0000C042
l0000C01A:
	word32 r8_76 = CONVERT(Mem29[r12 + -2<i32>:byte], byte, word32)
	branch SLICE(r8_76 - dwArg0C, byte, 0) != 0<8> l0000C03C
l0000C022:
	branch r8_76 == 0<32> l0000C042
l0000C026:
	word32 r8_81 = CONVERT(Mem29[r12 + -1<i32>:byte], byte, word32)
	branch SLICE(r8_81 - dwArg10, byte, 0) != 0<8> l0000C03C
l0000C02E:
	branch r8_81 == 0<32> l0000C042
l0000C032:
	word32 r8_86 = CONVERT(Mem29[r12 + 8<i32>:byte], byte, word32)
	branch SLICE(r8_86 - dwArg14, byte, 0) == 0<8> l0000C03E
l0000C03E:
	branch r8_86 != 0<32> l0000C044
l0000C044:
	byte VNZC_109
	call Mem29[r6_31 + 24<i32>:word32] (retsize: 0;)
		uses: lr:r12,r0:r0,r1:r11,r10:r10_49,r11:r11 + 9<32>,r12:r12 + 9<32>,r2:dwArg14,r3:dwArg0C,r4:dwArg08,r5:dwArg04,r6:r6_31,r7:r7_33,r8:r8_86,r9:r9_55,Stack +0024:dwArg00,Stack +0028:dwArg04,Stack +002C:dwArg08,Stack +0030:dwArg0C,Stack +0034:dwArg10,Stack +0038:dwArg14
		defs: VNZC:VNZC_109
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r12Out = CONVERT(SLICE(VNZC_109, bool, 1), bool, word32)
	return r0
l0000C042:
	r2Out = r1
	r3Out = r2
	r4Out = r3
	r5Out = r4
	r6Out = r5
	r12Out = r7
	return dwArg00
l0000C03C:
	r2Out = r2
	r3Out = r3
	r4Out = r4
	r5Out = r5
	r6Out = r6
	r12Out = dwArg10
	return r0
fn0000BFB8_exit:


byte fn0000C058(word32 r0, word32 r11, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B88C
// MayUse:  r0:[0..31] r11:[0..31] r12:[0..34]
// LiveOut: VN lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9 sp
// Preserved:
fn0000C058_entry:
l0000C058:
	word32 r6_31 = 0x0000C05C<p32> - Mem29[0x0000C0CE<p32>:word32]
	branch r12 >>u 9<32> >u 0xEF<32> l0000C0A2
l0000C0A2:
	branch r12 >>u 9<32> != 0x700<32> l0000C0DC
l0000C0A8:
	branch r12 <=u 0xE00FF<32> l0000C0BA
l0000C0BA:
	word32 r8_46
	branch r12 <=u 0xE001F<32> l0000C0D0
l0000C0D0:
	r8_46 = CONVERT(r12 == 0xE0001<32>, bool, word32)
l0000C0C2:
	r8_46 = CONVERT(r12 <=u 0xE007F<32>, bool, word32)
l0000C0D6:
	branch r8_46 != 0<32> l0000C2D8
l0000C0B0:
	branch r12 >u 0xE01EF<32> l0000C0E4
l0000C0B4_thunk_fn0000C0E4:
	word32 r0_55
	word32 r1_56
	word32 r12_57
	word32 r2_58
	word32 r3_59
	word32 lr_66
	word32 r10_67
	word32 r11_68
	fn0000C0E4(r0, r11, r6_31, r12, out r0_55, out r1_56, out r2_58, out r3_59, out r10_67, out r11_68, out r12_57, out lr_66)
	r0Out = r0_55
	r1Out = r1_56
	r2Out = r2_58
	r3Out = r3_59
	r10Out = r10_67
	r11Out = r11_68
	r12Out = r12_57
	lrOut = lr_66
	return <invalid>
l0000C0B8:
l0000C06C:
	word32 r8_74 = CONVERT(Mem29[0x0000C2E0<p32> + (r12 >>u 9<32>):int8], int8, int32)
	branch r8_74 < 0<32> l0000C0DC
l0000C078:
	branch Test(NE,SLICE(CONVERT(Mem29[(r8_74 << 6<i32>) + 0x0000C2E0<p32> + SLICE(r12, word6, 3) + 240<i32>:byte], byte, word32) >> SLICE(r12, word3, 0), bool, 0)) l0000C0DC
l0000C0DC:
	branch r12 <=u 0x10FF<32> l0000C190
l0000C0E0_thunk_fn0000C0E4:
	word32 r0_99
	word32 r1_100
	word32 r12_101
	word32 r2_102
	word32 r3_103
	word32 lr_110
	word32 r10_111
	word32 r11_112
	fn0000C0E4(r0, r11, r6_31, r12, out r0_99, out r1_100, out r2_102, out r3_103, out r10_111, out r11_112, out r12_101, out lr_110)
	r0Out = r0_99
	r1Out = r1_100
	r2Out = r2_102
	r3Out = r3_103
	r10Out = r10_111
	r11Out = r11_112
	r12Out = r12_101
	lrOut = lr_110
	return <invalid>
l0000C0E0_thunk_fn0000C0E4:
	word32 r0_117
	word32 r1_118
	word32 r12_119
	word32 r2_120
	word32 r3_121
	word32 lr_128
	word32 r10_129
	word32 r11_130
	fn0000C0E4(r0, r11, r6_31, r12, out r0_117, out r1_118, out r2_120, out r3_121, out r10_129, out r11_130, out r12_119, out lr_128)
	r0Out = r0_117
	r1Out = r1_118
	r2Out = r2_120
	r3Out = r3_121
	r10Out = r10_129
	r11Out = r11_130
	r12Out = r12_119
	lrOut = lr_128
	return <invalid>
l0000C094:
	branch r12 >u 0x9F<32> l0000C2D8
l0000C2D8:
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r10Out = r10
	r11Out = r11
	r12Out = r12
	lrOut = lr
	return <invalid>
l0000C0A0:
	r0Out = r0
	r1Out = r1
	r2Out = r2
	r3Out = r3
	r10Out = r10
	r11Out = r11
	r12Out = r12
	lrOut = lr
	return <invalid>
fn0000C058_exit:


byte fn0000C0E4(word32 r0, word32 r5, word32 r6, word32 r12, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C058
// MayUse:  r0:[0..31] r12:[0..31] r5:[0..31] r6:[0..31]
// LiveOut: VN lr r0 r1 r10 r11 r12 r2 r3
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000C0E4_entry:
l0000C0E4:
	branch r12 <=u 0x115F<32> l0000C2DA
l0000C0E8_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_6
	r1Out = r1_7
	r2Out = r2_9
	r3Out = r3_10
	r10Out = r10
	r11Out = r11
	r12Out = r12_8
	lrOut = lr
	return <invalid>
l0000C0EC:
	branch r12 <=u 0x232A<32> l0000C2DA
l0000C0F2_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_19
	r1Out = r1_20
	r2Out = r2_22
	r3Out = r3_23
	r10Out = r10
	r11Out = r11
	r12Out = r12_21
	lrOut = lr
	return <invalid>
l0000C0F6:
	branch r12 >u 0xA4CF<32> l0000C114
l0000C102:
	branch r12 == 0x303F<32> l0000C114
l0000C108:
	branch r12 >u 0x4DFF<32> l0000C2DA
l0000C110_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_37
	r1Out = r1_38
	r2Out = r2_40
	r3Out = r3_41
	r10Out = r10
	r11Out = r11
	r12Out = r12_39
	lrOut = lr
	return <invalid>
l0000C114:
	branch r12 <=u 0xFFFF285D<32> l0000C2DA
l0000C120_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_52
	r1Out = r1_53
	r2Out = r2_55
	r3Out = r3_56
	r10Out = r10
	r11Out = r11
	r12Out = r12_54
	lrOut = lr
	return <invalid>
l0000C124:
	branch r12 <=u 0xFFFF0501<32> l0000C2DA
l0000C130_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_66
	r1Out = r1_67
	r2Out = r2_69
	r3Out = r3_70
	r10Out = r10
	r11Out = r11
	r12Out = r12_68
	lrOut = lr
	return <invalid>
l0000C134:
	branch r12 <=u 0xFFFF01E1<32> l0000C2DA
l0000C13E_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_80
	r1Out = r1_81
	r2Out = r2_83
	r3Out = r3_84
	r10Out = r10
	r11Out = r11
	r12Out = r12_82
	lrOut = lr
	return <invalid>
l0000C142:
	branch r12 <=u 0xFFFF0191<32> l0000C2DA
l0000C14E_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_94
	r1Out = r1_95
	r2Out = r2_97
	r3Out = r3_98
	r10Out = r10
	r11Out = r11
	r12Out = r12_96
	lrOut = lr
	return <invalid>
l0000C152:
	branch r12 <=u 0xFFFF00A0<32> l0000C2DA
l0000C15E_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_108
	r1Out = r1_109
	r2Out = r2_111
	r3Out = r3_112
	r10Out = r10
	r11Out = r11
	r12Out = r12_110
	lrOut = lr
	return <invalid>
l0000C162:
	branch r12 <=u 0xFFFF001A<32> l0000C2DA
l0000C16C_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_122
	r1Out = r1_123
	r2Out = r2_125
	r3Out = r3_126
	r10Out = r10
	r11Out = r11
	r12Out = r12_124
	lrOut = lr
	return <invalid>
l0000C170:
	branch r12 <=u 0xFFFD592A<32> l0000C2DA
l0000C17C_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_136
	r1Out = r1_137
	r2Out = r2_139
	r3Out = r3_140
	r10Out = r10
	r11Out = r11
	r12Out = r12_138
	lrOut = lr
	return <invalid>
l0000C180:
	branch r12 <=u 0xFFFD05E3<32> l0000C2DA
l0000C18C_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_150
	r1Out = r1_151
	r2Out = r2_153
	r3Out = r3_154
	r10Out = r10
	r11Out = r11
	r12Out = r12_152
	lrOut = lr
	return <invalid>
l0000C190:
	branch r12 >u 0xFF60<32> l0000C2DE
l0000C198_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_163
	r1Out = r1_164
	r2Out = r2_166
	r3Out = r3_167
	r10Out = r10
	r11Out = r11
	r12Out = r12_165
	lrOut = lr
	return <invalid>
l0000C19C:
	branch r12 == 0x20A9<32> l0000C2DE
l0000C1A0_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_175
	r1Out = r1_176
	r2Out = r2_178
	r3Out = r3_179
	r10Out = r10
	r11Out = r11
	r12Out = r12_177
	lrOut = lr
	return <invalid>
l0000C1A4:
	word32 r12_217
	word32 r5_223
	word32 r6_224
	word32 r2_725
	word32 r3_726
	word32 r4_727
	word32 r0_218 = fn0000BFB8(r0, 0x43<32>, 0x55<32>, 0x45<32>, Mem0[r6 + 652<i32>:word32], r5, 0x2D<32>, 0x4A<32>, 0x50<32>, 0<32>, 0<32>, 0<32>, out r2_725, out r3_726, out r4_727, out r5_223, out r6_224, out r12_217)
	word32 sp_226 = <invalid>
	branch r12_217 != 0<32> l0000C2DA
l0000C1CC_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_238
	r1Out = r1_239
	r2Out = r2_241
	r3Out = r3_242
	r10Out = r10_227
	r11Out = r11_216
	r12Out = r12_240
	lrOut = lr_215
	return <invalid>
l0000C1D0:
	Mem250[sp_226 + 0x14<32>:word32] = r12_217
	Mem253[sp_226 + 0x10<32>:word32] = r12_217
	word32 r11_254 = Mem253[r6_224 + 648<i32>:word32]
	Mem256[sp_226 + 0xC<32>:word32] = r12_217
	Mem258[sp_226 + 8<32>:word32] = 0x32<32>
	Mem261[sp_226 + 4<32>:word32] = 0x31<32>
	Mem267[sp_226:word32] = 0x33<32>
	word32 r12_270
	word32 r5_276
	word32 r6_277
	word32 r2_728
	word32 r3_729
	word32 r4_730
	word32 r0_271 = fn0000BFB8(r0_218, 0x32<32>, 0x42<32>, 0x47<32>, r11_254, r5_223, Mem267[sp_226:word32], Mem267[sp_226 + 4<i32>:word32], Mem267[sp_226 + 8<i32>:word32], Mem267[sp_226 + 12<i32>:word32], Mem267[sp_226 + 16<i32>:word32], Mem267[sp_226 + 20<i32>:word32], out r2_728, out r3_729, out r4_730, out r5_276, out r6_277, out r12_270)
	word32 sp_279 = <invalid>
	branch r12_270 != 0<32> l0000C2DA
l0000C1F6_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_291
	r1Out = r1_292
	r2Out = r2_294
	r3Out = r3_295
	r10Out = r10_280
	r11Out = r11_269
	r12Out = r12_293
	lrOut = r12_270
	return <invalid>
l0000C1F8:
	word32 r11_301 = Mem267[r6_277 + 644<i32>:word32]
	Mem307[sp_279 + 0x14<32>:word32] = r12_270
	Mem309[sp_279 + 0x10<32>:word32] = r12_270
	Mem311[sp_279 + 0xC<32>:word32] = r12_270
	Mem313[sp_279 + 8<32>:word32] = r12_270
	Mem315[sp_279 + 4<32>:word32] = r12_270
	Mem317[sp_279:word32] = r12_270
	word32 r12_320
	word32 r4_325
	word32 r5_326
	word32 r6_327
	word32 r2_731
	word32 r3_732
	word32 r0_321 = fn0000BFB8(r0_271, 0x4B<32>, 0x42<32>, 0x47<32>, r11_301, r5_276, Mem317[sp_279:word32], Mem317[sp_279 + 4<i32>:word32], Mem317[sp_279 + 8<i32>:word32], Mem317[sp_279 + 12<i32>:word32], Mem317[sp_279 + 16<i32>:word32], Mem317[sp_279 + 20<i32>:word32], out r2_731, out r3_732, out r4_325, out r5_326, out r6_327, out r12_320)
	word32 sp_329 = <invalid>
	branch r12_320 != 0<32> l0000C2DA
l0000C218_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_341
	r1Out = r1_342
	r2Out = r2_344
	r3Out = r3_345
	r10Out = r10_330
	r11Out = r11_319
	r12Out = r12_343
	lrOut = r12_320
	return <invalid>
l0000C21A:
	Mem352[sp_329 + 0x14<32>:word32] = r12_320
	word32 r11_353 = Mem352[r6_327 + 640<i32>:word32]
	Mem355[sp_329 + 0x10<32>:word32] = r12_320
	Mem357[sp_329 + 0xC<32>:word32] = r12_320
	Mem360[sp_329 + 8<32>:word32] = 0x57<32>
	Mem367[sp_329 + 4<32>:word32] = 0x54<32>
	Mem369[sp_329:word32] = r4_325
	word32 r12_372
	word32 r5_378
	word32 r6_379
	word32 r2_733
	word32 r3_734
	word32 r4_735
	word32 r0_373 = fn0000BFB8(r0_321, 0x43<32>, 0x55<32>, 0x45<32>, r11_353, r5_326, Mem369[sp_329:word32], Mem369[sp_329 + 4<i32>:word32], Mem369[sp_329 + 8<i32>:word32], Mem369[sp_329 + 12<i32>:word32], Mem369[sp_329 + 16<i32>:word32], Mem369[sp_329 + 20<i32>:word32], out r2_733, out r3_734, out r4_735, out r5_378, out r6_379, out r12_372)
	word32 sp_381 = <invalid>
	branch r12_372 != 0<32> l0000C2DA
l0000C23E_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_393
	r1Out = r1_394
	r2Out = r2_396
	r3Out = r3_397
	r10Out = r10_382
	r11Out = r11_371
	r12Out = r12_395
	lrOut = r12_372
	return <invalid>
l0000C240:
	word32 r11_403 = Mem369[r6_379 + 636<i32>:word32]
	Mem405[sp_381 + 0x14<32>:word32] = r12_372
	Mem408[sp_381 + 0x10<32>:word32] = r12_372
	Mem411[sp_381 + 0xC<32>:word32] = r12_372
	Mem414[sp_381 + 8<32>:word32] = r12_372
	Mem417[sp_381 + 4<32>:word32] = r12_372
	Mem420[sp_381:word32] = 0x35<32>
	word32 r12_423
	word32 r4_428
	word32 r5_429
	word32 r6_430
	word32 r2_736
	word32 r3_737
	word32 r0_424 = fn0000BFB8(r0_373, 0x47<32>, 0x49<32>, 0x42<32>, r11_403, r5_378, Mem420[sp_381:word32], Mem420[sp_381 + 4<i32>:word32], Mem420[sp_381 + 8<i32>:word32], Mem420[sp_381 + 12<i32>:word32], Mem420[sp_381 + 16<i32>:word32], Mem420[sp_381 + 20<i32>:word32], out r2_736, out r3_737, out r4_428, out r5_429, out r6_430, out r12_423)
	word32 sp_432 = <invalid>
	branch r12_423 != 0<32> l0000C2DA
l0000C262_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_444
	r1Out = r1_445
	r2Out = r2_447
	r3Out = r3_448
	r10Out = r10_433
	r11Out = r11_422
	r12Out = r12_446
	lrOut = r12_423
	return <invalid>
l0000C264:
	Mem455[sp_432 + 0x14<32>:word32] = r12_423
	word32 r11_456 = Mem455[r6_430 + 632<i32>:word32]
	Mem458[sp_432 + 0x10<32>:word32] = r12_423
	Mem460[sp_432 + 0xC<32>:word32] = r12_423
	Mem463[sp_432 + 8<32>:word32] = 0x52<32>
	Mem470[sp_432 + 4<32>:word32] = 0x4B<32>
	Mem472[sp_432:word32] = r4_428
	word32 r12_475
	word32 r3_479
	word32 r5_481
	word32 r6_482
	word32 r2_738
	word32 r4_739
	word32 r0_476 = fn0000BFB8(r0_424, 0x43<32>, 0x55<32>, 0x45<32>, r11_456, r5_429, Mem472[sp_432:word32], Mem472[sp_432 + 4<i32>:word32], Mem472[sp_432 + 8<i32>:word32], Mem472[sp_432 + 12<i32>:word32], Mem472[sp_432 + 16<i32>:word32], Mem472[sp_432 + 20<i32>:word32], out r2_738, out r3_479, out r4_739, out r5_481, out r6_482, out r12_475)
	word32 sp_484 = <invalid>
	branch r12_475 != 0<32> l0000C2DA
l0000C288_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_496
	r1Out = r1_497
	r2Out = r2_499
	r3Out = r3_500
	r10Out = r10_485
	r11Out = r11_474
	r12Out = r12_498
	lrOut = lr_473
	return <invalid>
l0000C28A:
	word32 r11_507 = Mem472[r6_482 + 628<i32>:word32]
	Mem509[sp_484 + 0x14<32>:word32] = r12_475
	Mem512[sp_484 + 0x10<32>:word32] = r12_475
	Mem515[sp_484 + 0xC<32>:word32] = r12_475
	Mem518[sp_484 + 8<32>:word32] = r12_475
	Mem521[sp_484 + 4<32>:word32] = 0x39<32>
	Mem524[sp_484:word32] = 0x34<32>
	word32 r12_527
	word32 r2_530
	word32 r5_533
	word32 r6_534
	word32 r3_740
	word32 r4_741
	word32 r0_528 = fn0000BFB8(r0_476, 0x39<32>, r3_479, 0x43<32>, r11_507, r5_481, Mem524[sp_484:word32], Mem524[sp_484 + 4<i32>:word32], Mem524[sp_484 + 8<i32>:word32], Mem524[sp_484 + 12<i32>:word32], Mem524[sp_484 + 16<i32>:word32], Mem524[sp_484 + 20<i32>:word32], out r2_530, out r3_740, out r4_741, out r5_533, out r6_534, out r12_527)
	word32 sp_536 = <invalid>
	branch r12_527 != 0<32> l0000C2DA
l0000C2AE_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_548
	r1Out = r1_549
	r2Out = r2_551
	r3Out = r3_552
	r10Out = r10_537
	r11Out = r11_526
	r12Out = r12_550
	lrOut = r12_527
	return <invalid>
l0000C2B0:
	Mem559[sp_536 + 0x14<32>:word32] = r12_527
	word32 r11_560 = Mem559[r6_534 + 624<i32>:word32]
	Mem562[sp_536 + 0x10<32>:word32] = r12_527
	Mem564[sp_536 + 0xC<32>:word32] = r12_527
	Mem566[sp_536 + 8<32>:word32] = r12_527
	Mem569[sp_536 + 4<32>:word32] = 0x42<32>
	Mem576[sp_536:word32] = 0x41<32>
	word32 r12_579
	word32 r2_742
	word32 r3_743
	word32 r4_744
	word32 r5_745
	word32 r6_746
	fn0000BFB8(r0_528, 0x48<32>, 0x4F<32>, r2_530, r11_560, r5_533, Mem576[sp_536:word32], Mem576[sp_536 + 4<i32>:word32], Mem576[sp_536 + 8<i32>:word32], Mem576[sp_536 + 12<i32>:word32], Mem576[sp_536 + 16<i32>:word32], Mem576[sp_536 + 20<i32>:word32], out r2_742, out r3_743, out r4_744, out r5_745, out r6_746, out r12_579)
l0000C2D2_thunk_fn0000C2D4:
	fn0000C2D4()
	r0Out = r0_598
	r1Out = r1_599
	r2Out = r2_601
	r3Out = r3_602
	r10Out = r10_589
	r11Out = r11_578
	r12Out = r12_600
	lrOut = lr_577
	return <invalid>
fn0000C0E4_exit:


void fn0000C2C8(word32 r0, word32 r8, word32 r10, word32 r11, word32 r12, word32 lr, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut:
// Trashed: VNZC lr r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000C2C8_entry:
l0000C2C8:
	word32 r2_53
	word32 r3_54
	word32 r4_55
	word32 r5_56
	word32 r6_57
	word32 r12_58
	fn0000BFB8(r0, r8, 0x4F<32>, r10, r11, r12, lr, dwArg00, dwArg04, dwArg08, dwArg0C, dwArg10, out r2_53, out r3_54, out r4_55, out r5_56, out r6_57, out r12_58)
l0000C2D2_thunk_fn0000C2D4:
	fn0000C2D4()
	return
fn0000C2C8_exit:


void fn0000C2D4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C058
//      fn0000C2C8
// MayUse: 
// LiveOut:
// Trashed: r0 r1 r12 r2 r3 r4 r5 r6 r7 sp
// Preserved:
fn0000C2D4_entry:
l0000C2D4:
	branch Z l0000C2DA
l0000C2DA:
	return
l0000C2D6:
l0000C2DE:
	return
fn0000C2D4_exit:


void fn0000C2E2(word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r9, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..31] r1:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31] r9:[0..31]
// LiveOut:
// Trashed: VNZC pc r1 r10 r2 r3 r4 r5 r6 r7 r9
// Preserved: sp
fn0000C2E2_entry:
l0000C2E2:
	word32 r3_5 = r3 + r1
	call CONVERT(Mem0[r6 + -1<i32>:byte], byte, word32) (retsize: 0;)
		uses: pc:pc,r1:r1,r10:CONVERT(Mem0[pc + 2828<i32>:int16], int16, int32),r2:r2,r3:r3_5,r4:r4,r5:r5 + r2,r6:r6,r7:r7 + r3_5,r9:r9 + r4
	return
fn0000C2E2_exit:


void fn0000C67A(word32 r1, word32 r3, word32 r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000C77E
// MayUse:  r1:[0..31] r3:[0..31] r8:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C67A_exit:
fn0000C67A_entry:
l0000C67A:
	Mem12[r8 + 6<i32>:word16] = SLICE(0x0000C686<p32>, word16, 0)
	Mem40[r3:word32] = r1


void fn0000C77E(word32 r1, word32 r3, word32 r12, word32 pc, word32 dwArg0100)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  pc:[0..31] r1:[0..31] r12:[0..7] r3:[0..31] Stack +0100:[0..31]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn0000C77E_exit:
fn0000C77E_entry:
l0000C77E:
	Mem44[pc + -1<i32>:byte] = SLICE(0x0000C7CC<p32>, byte, 0)
	Mem49[0xFFFFFFFF<32>:byte] = SLICE(r12, byte, 0)
	fn0000C67A(r1, r3 + 1<i32>, dwArg0100)


void fn0000CA50(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000CA50_entry:
l0000CA50:
	word32 r6_19 = 0x0000CA54<p32> - Mem17[0x0000CA66<p32>:word32]
	word32 r4_22
	word32 r5_23
	word32 r6_24
	word32 r7_25
	word32 lr_26
	byte VNZC_27
	call Mem17[r6_19 + 580<i32>:word32] (retsize: 0;)
		uses: lr:lr,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: lr:lr_26,r4:r4_22,r5:r5_23,r6:r6_24,r7:r7_25,VNZC:VNZC_27
	branch SLICE(VNZC_27, bool, 1) l0000CA60
l0000CA5C:
	word32 r8_84
	word32 r7_83
	word32 r6_82
	word32 r5_81
	word32 r9_85
	word32 r10_86
	word32 r11_87
	word32 r12_88
	word32 lr_89
	fn00006CAC(r4_22, r5_23, r6_24, r7_25, lr_26, out r5_81, out r6_82, out r7_83, out r8_84, out r9_85, out r10_86, out r11_87, out r12_88, out lr_89)
l0000CA60:
	return
fn0000CA50_exit:


word32 fn0000CA68(word32 r11, word32 r12, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CAB8
//      fn0000CAE0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CA68_entry:
l0000CA68:
	word64 r3_r2_43 = Mem29[r12:word64]
	word32 lr_44
	word32 r10_45
	word32 r11_46
	word32 r9_128
	fn000107C0(r11, r11 >> 0x1F<32>, 0xFFFFFFFF<32>, 0xFFFFFFFF<32>, out r9_128, out r10_45, out r11_46, out lr_44)
	word32 r2_54 = SLICE(r3_r2_43, word32, 0)
	word32 r3_56 = SLICE(r3_r2_43, word32, 32)
	branch r11_46 - r3_56 >=u SLICE(cond(r10_45 - r2_54), bool, 0) l0000CA9A
l0000CA9A:
	word64 r9_r8_60 = r11 *u r2_54
	Mem68[r12:word64] = SEQ(r3_56 * r11 + SLICE(r9_r8_60, word32, 32), SLICE(r9_r8_60, word32, 0))
	lrOut = <invalid>
	return 0<32>
l0000CA8E:
	Mem82[r12:word64] = 0xFFFFFFFFFFFFFFFF<64>
	lrOut = <invalid>
	return 1<32>
fn0000CA68_exit:


word32 fn0000CAB8(word32 r10, word32 r11, word32 r12, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CAE0
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r12 r8 r9
// Preserved: r0 r1 r11 r2 r3 r4 r5 r6 r7 sp
fn0000CAB8_entry:
l0000CAB8:
	word32 r7_38 = r10
	word32 r5_39 = 0<32>
l0000CACC:
	r7_38 = r7_38 - 1<32>
	branch r7_38 != 0xFFFFFFFF<32> l0000CAC8
l0000CAC8:
	r5_39 = r5_39 | fn0000CA68(r11, r12, out lr)
l0000CAD6:
	lrOut = lr
	return r5_39
fn0000CAB8_exit:


bool fn0000CAE0(word32 r1, word32 r4, word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000092D8
// MayUse:  lr:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CAE0_entry:
l0000CAE0:
	word32 sp_30 = fp - 0x30<32>
	word32 r6_32 = 0x0000CAE6<p32> - Mem29[0x0000CBEC<p32>:word32]
	word32 r2_112 = r10
	word32 r5_36 = r12
	word32 r7_38 = r11
	word32 r0_104 = r9
	word32 r3_116 = r8
	branch r10 <=u 0x24<32> l0000CB0C
l0000CAFA:
	call Mem29[r6_32 + 60<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r9,r1:r1,r10:0x53<32>,r11:Mem29[r6_32 + 620<i32>:word32],r12:Mem29[r6_32 + 616<i32>:word32],r2:r10,r3:r8,r4:r4,r5:r12,r6:r6_32,r7:r11,r8:r8,r9:0x0000CCE4<p32>
		defs: lr:lr_59,r0:r0_51,r1:r1_52,r11:r11_62,r12:r12_61,r2:r2_53,r3:r3_54,r4:r4_55,r5:r5_56,r6:r6_57,r7:r7_58,sp:sp_50
l0000CB0C:
	word32 r9_70 = CONVERT(Mem29[r5_36:byte], byte, word32)
	word32 r10_71 = Mem29[Mem29[r6_32 + 156<i32>:word32]:word32]
	word32 r8_73 = sp_30 + 8<32>
	branch r7_38 == 0<32> l0000CB1E
l0000CB1A_1:
	r1 = r7_38
l0000CB1E:
	branch r7_38 != 0<32> l0000CB22
l0000CB1E_1:
	r1 = r8_73
l0000CB22:
	word32 r8_83 = r5_36
l0000CB28:
	word32 r7_87 = CONVERT(Mem29[r10_71 + r9_70 * 2<32>:word16], word16, word32)
	r8_83 = r8_83 + 1<32>
	branch (r7_87 & 0x20<32>) != 0<32> l0000CB26
l0000CB26:
	r9_70 = CONVERT(Mem29[r8_83:byte], byte, word32)
l0000CB34:
	branch SLICE(r9_70 - 0x2D<32>, byte, 0) == 0<8> l0000CCDC
l0000CB3E:
	word32 r4_184
	word32 r0_138
	word32 r1_139
	word32 r2_140
	word32 r3_141
	word32 r5_143
	word32 r6_144
	word32 r7_145
	word32 lr_146
	word32 r12_148
	word32 r9_150
	word32 r8_151
	call Mem29[r6_32 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_125,r0:r0_104,r1:r1_106,r10:r10_71,r11:r11_133,r12:r12_129,r2:r2_112,r3:r3_116,r4:r4_120,r5:r5_69,r6:r6_66,r7:r7_87 & 0x20<32>,r8:0x2D<32>,r9:r9_85
		defs: lr:lr_146,r0:r0_138,r1:r1_139,r12:r12_148,r2:r2_140,r3:r3_141,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
	Mem154[r12_148:word32] = r7_145
	word32 r4_163
	word32 r5_164
	word32 r7_166
	word64 r11_r10_702
	word32 r1_160
	word32 r3_162
	word32 r6_165
	word32 r2_161
	word32 r9_171
	word32 sp_158
	word32 r0_159
	call Mem154[r6_144 + 540<i32>:word32] (retsize: 0;)
		uses: lr:lr_146,r0:r0_138,r1:r1_139,r10:r2_140,r11:r1_139,r12:r5_143,r2:r2_140,r3:r3_141,r4:r12_148,r5:r5_143,r6:r6_144,r7:r7_145,r8:r8_151,r9:r9_150
		defs: lr:lr_167,r0:r0_159,r1:r1_160,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r9:r9_171,Sequence r11:r10:r11_r10_702,sp:sp_158
	Mem175[sp_158:word64] = r11_r10_702
	word32 r10_168 = SLICE(r11_r10_702, word32, 0)
	word32 r8_176 = Mem175[r1_160:word32]
	branch r8_176 != r5_164 l0000CB7E
l0000CB7E:
	word32 r12_179 = Mem175[r4_163:word32]
	branch r12_179 != 0<32> l0000CB88
l0000CB88:
	branch r12_179 != 0x22<32> l0000CCDC
l0000CB90:
	r4_184 = 1<32>
l0000CB84:
	r4_184 = r12_179
l0000CB92:
	branch r3_162 != 0<32> l0000CB9C
l0000CB96:
	Mem193[r0_159:word64] = r11_r10_702
l0000CB5A:
	branch r3_162 == 0<32> l0000CCDC
l0000CB60:
	word32 r11_196 = CONVERT(Mem175[r8_176:byte], byte, word32)
	branch r11_196 == 0<32> l0000CCDC
l0000CB68:
	word32 r7_208
	byte VNZC_215
	call Mem175[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_167,r0:r0_159,r1:r1_160,r10:r10_168,r11:r11_196,r12:r3_162,r2:r2_161,r3:r3_162,r4:r4_163,r5:r5_164,r6:r6_165,r7:r7_166,r8:r8_176,r9:r9_171
		defs: lr:lr_209,r0:r0_201,r1:r1_202,r10:r10_210,r2:r2_203,r3:r3_204,r6:r6_207,r7:r7_208,sp:sp_200,VNZC:VNZC_215
	branch SLICE(VNZC_215, bool, 1) l0000CCDC
l0000CCDC:
l0000CB72:
	Mem222[sp_158:word64] = 1<64>
	r8_176 = 1<32>
	r9_171 = 0<32>
	r4_184 = r7_208
l0000CB9C:
	word32 r5_227 = Mem225[r1_160:word32]
	word32 r7_228 = CONVERT(Mem225[r5_227:byte], byte, word32)
	branch r7_228 == 0<32> l0000CCD2
l0000CBA6:
	word32 r1_252
	word32 r2_253
	word32 r3_254
	word32 r4_255
	word32 r5_256
	word32 r6_257
	word32 r7_258
	word32 r10_260
	word32 r9_263
	word32 r8_264
	byte VNZC_265
	call Mem225[r6_165 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_241,r0:r0_236,r1:r1_223,r10:r10_243,r11:r7_228,r12:r3_232,r2:r2_237,r3:r3_232,r4:r4_239,r5:r5_227,r6:r6_234,r7:r7_228,r8:r8_246,r9:r9_244
		defs: lr:lr_259,r0:r0_251,r1:r1_252,r10:r10_260,r2:r2_253,r3:r3_254,r4:r4_255,r5:r5_256,r6:r6_257,r7:r7_258,r8:r8_264,r9:r9_263,sp:sp_250,VNZC:VNZC_265
	branch SLICE(VNZC_265, bool, 1) l0000CCB4
l0000CBB2:
	word32 r5_294
	word32 r11_293
	word32 r1_271
	word32 r5_275
	word32 r7_277
	byte VNZC_284
	call Mem225[r6_257 + 120<i32>:word32] (retsize: 0;)
		uses: lr:lr_259,r0:r0_251,r1:r1_252,r10:r10_260,r11:0x30<32>,r12:r3_254,r2:r2_253,r3:r3_254,r4:r4_255,r5:r5_256,r6:r6_257,r7:r7_258,r8:r8_264,r9:r9_263
		defs: lr:lr_278,r0:r0_270,r1:r1_271,r5:r5_275,r7:r7_277,sp:sp_269,VNZC:VNZC_284
	branch SLICE(VNZC_284, bool, 1) l0000CBF4
l0000CBBC:
	word32 r9_286 = CONVERT(Mem225[r5_275 + 1<i32>:byte], byte, word32)
	branch SLICE(r9_286 - 0x42<32>, byte, 0) == 0<8> l0000CBD8
l0000CBC6:
	branch SLICE(r9_286 - 0x44<32>, byte, 0) == 0<8> l0000CBD8
l0000CBD8:
	r11_293 = 0x3E8<32>
	r5_294 = 2<32>
l0000CBCE:
	branch SLICE(r9_286 - 0x69<32>, byte, 0) != 0<8> l0000CBF4
l0000CBD6:
l0000CBE0:
	branch SLICE(CONVERT(Mem225[r5_275 + 2<i32>:byte], byte, word32) - 0x42<32>, byte, 0) != 0<8> l0000CBF4
l0000CBF4:
	r11_293 = 0x400<32>
	r5_294 = 1<32>
l0000CBE8:
	r11_293 = 0x400<32>
	r5_294 = 3<32>
l0000CBFA:
	word32 r11_311
	branch SLICE(r7_277 - 0x42<32>, byte, 0) == 0<8> l0000CC82
l0000CC82:
	r11_311 = 0x400<32>
l0000CC02:
	word32 r10_315
	branch SLICE(r7_277 - 0x45<32>, byte, 0) == 0<8> l0000CC8C
l0000CC8C:
	r10_315 = 6<32>
l0000CC0A:
	branch SLICE(r7_277 - 0x47<32>, byte, 0) == 0<8> l0000CC90
l0000CC12:
	branch SLICE(r7_277 - 0x4B<32>, byte, 0) == 0<8> l0000CC94
l0000CC1A:
	branch SLICE(r7_277 - 0x4D<32>, byte, 0) == 0<8> l0000CC98
l0000CC22:
	branch SLICE(r7_277 - 0x50<32>, byte, 0) == 0<8> l0000CC9C
l0000CC9C:
	r10_315 = 5<32>
l0000CC2A:
	branch SLICE(r7_277 - 0x54<32>, byte, 0) == 0<8> l0000CCA0
l0000CC32:
	branch SLICE(r7_277 - 0x59<32>, byte, 0) == 0<8> l0000CCA8
l0000CCA8:
	r10_315 = 8<32>
l0000CC3A:
	branch SLICE(r7_277 - 0x5A<32>, byte, 0) == 0<8> l0000CCAC
l0000CCAC:
	r10_315 = 7<32>
l0000CC42:
	branch SLICE(r7_277 - 0x62<32>, byte, 0) == 0<8> l0000CC7C
l0000CC7C:
	r11_311 = 0x200<32>
l0000CC4A:
	branch SLICE(r7_277 - 0x63<32>, byte, 0) == 0<8> l0000CCB8
l0000CCB8:
l0000CC52:
	branch SLICE(r7_277 - 0x67<32>, byte, 0) == 0<8> l0000CC90
l0000CC90:
	r10_315 = 3<32>
l0000CC5A:
	branch SLICE(r7_277 - 0x6B<32>, byte, 0) == 0<8> l0000CC94
l0000CC94:
	r10_315 = 1<32>
l0000CC62:
	branch SLICE(r7_277 - 0x6D<32>, byte, 0) == 0<8> l0000CC98
l0000CC98:
	r10_315 = 2<32>
l0000CC6A:
	branch SLICE(r7_277 - 0x74<32>, byte, 0) == 0<8> l0000CCA0
l0000CCA0:
	r10_315 = 4<32>
l0000CCAE:
	fn0000CAB8(r10_315, r11_293, sp_158, out lr)
l0000CC72:
	branch SLICE(r7_277 - 0x77<32>, byte, 0) != 0<8> l0000CCB4
l0000CCB4:
l0000CC7A:
l0000CCA4:
	r11_311 = 2<32>
l0000CC86:
	fn0000CA68(r11_311, sp_158, out lr)
l0000CCBA:
	word32 r8_450 = Mem225[r1_271:word32] + r5_294
	Mem451[r1_271:word32] = r8_450
	branch Mem451[r8_450:byte] == 0<8> l0000CCD2
l0000CCCE_1:
l0000CCD2:
	Mem479[r0_159:word64] = Mem462[sp_158:word64]
l0000CCDE:
	lrOut = lr
	return SLICE(cond(fp - 36<i32>), bool, 1)
fn0000CAE0_exit:


bool fn0000CCF0(word32 r4, word32 r5, word32 r7, word32 r11, word32 r12, word32 lr, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r11Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
// MayUse:  lr:[0..31] r11:[0..31] r12:[0..31] r4:[0..31] r5:[0..31] r7:[0..31]
// LiveOut: Z lr r11 r12 r8 r9
// Trashed: VNZC lr r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000CCF0_entry:
l0000CCF0:
	bool Z_100
	word32 r9_59
	word32 lr_53
	word32 r8_57
	word32 r11_55
	word32 r6_19 = 0x0000CCF4<p32> - Mem17[0x0000CD26<p32>:word32]
	branch r12 == 0<32> l0000CD16
l0000CCFA:
	branch r11 == 0<32> l0000CD16
l0000CD16:
	r12 = 1<32>
	r11 = 1<32>
l0000CCFE:
	branch r11 * r12 /u r11 == r12 l0000CD1A
l0000CD1A:
	word32 r12_54
	byte VNZC_58
	call Mem17[r6_19 + 516<i32>:word32] (retsize: 0;)
		uses: lr:lr,r11:r11_45,r12:r12_44,r4:r4,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_53,r11:r11_55,r12:r12_54,r8:r8_57,VNZC:VNZC_58
	Z_100 = SLICE(VNZC_58, bool, 1) (alias)
	r9_59 = r12_54
l0000CD0A:
	word32 r12_66
	byte VNZC_70
	call Mem17[r6_19 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr,r11:r11,r12:r12,r4:r4,r5:r5,r6:r6_19,r7:r7
		defs: lr:lr_65,r11:r11_67,r12:r12_66,VNZC:VNZC_70
	Mem73[r12_66:word32] = 0xC<32>
	Z_100 = SLICE(VNZC_70, bool, 1) (alias)
	r8_57 = 0xC<32>
	r9_59 = 0<32>
l0000CD20:
	r8Out = r8_57
	r9Out = r9_59
	r11Out = r11_55
	r12Out = r9_59
	lrOut = lr_53
	return Z_100
fn0000CCF0_exit:


void fn0000CD28(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r12, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut:
// Trashed: VNZC lr r12 r8
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CD28_entry:
l0000CD28:
	word32 r6_31 = 0x0000CD2C<p32> - Mem29[0x0000CD76<p32>:word32]
	word32 r0_36
	word32 r1_37
	word32 r2_38
	word32 r3_39
	word32 r4_40
	word32 r6_42
	word32 lr_44
	word32 r12_45
	call Mem29[r6_31 + 568<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r1,r12:r12,r2:r2,r3:r12,r4:r4,r5:r5,r6:r6_31,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_44,r0:r0_36,r1:r1_37,r12:r12_45,r2:r2_38,r3:r3_39,r4:r4_40,r6:r6_42
	word32 r0_54
	word32 r1_55
	word32 r2_56
	word32 r4_58
	word32 r5_59
	word32 r6_60
	word32 r7_61
	word32 lr_62
	word32 r12_63
	byte VNZC_65
	call Mem29[r6_42 + 296<i32>:word32] (retsize: 0;)
		uses: lr:lr_44,r0:r0_36,r1:r1_37,r12:r3_39,r2:r2_38,r3:r3_39,r4:r4_40,r5:CONVERT(Mem29[r3_39:uint16], uint16, word32) & 8<32>,r6:r6_42,r7:r12_45
		defs: lr:lr_62,r0:r0_54,r1:r1_55,r12:r12_63,r2:r2_56,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61,VNZC:VNZC_65
	word32 r3_67 = CONVERT(SLICE(VNZC_65, bool, 1), bool, word32)
	branch r5_59 != 0<32> l0000CD5C
l0000CD5C:
	branch r3_67 != 0<32> l0000CD6E
l0000CD60:
	word32 r3_76
	word32 r12_82
	call Mem29[r6_60 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_62,r0:r0_54,r1:r1_55,r12:r12_63,r2:r2_56,r3:r3_67,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61
		defs: r12:r12_82,r3:r3_76
	Mem86[r12_82:word32] = r3_76
l0000CD48:
	branch r3_67 == 0<32> l0000CD6A
l0000CD4C:
	branch r7_61 != 0<32> l0000CD6E
l0000CD50:
	word32 r12_101
	call Mem29[r6_60 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_62,r0:r0_54,r1:r1_55,r12:r12_63,r2:r2_56,r3:r3_67,r4:r4_58,r5:r5_59,r6:r6_60,r7:r7_61
		defs: r12:r12_101
	branch Mem29[r12_101:word32] == 9<32> l0000CD6A
l0000CD6A:
l0000CD5A:
l0000CD6E:
l0000CD70:
	return
fn0000CD28_exit:


word32 fn0000CD78(word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, word32 dwArg08, word32 dwArg0C, word32 dwArg10, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CE10
//      fn0000CEEE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31] Stack +0008:[0..31] Stack +000C:[0..31] Stack +0010:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CD78_entry:
l0000CD78:
	word32 r5_41 = SLICE(dwArg00, word2, 0)
	word32 lr_39 = (r12 >> 2<32>) + 0x1DB<32> - CONVERT(SLICE(r12, word2, 0) == 0<32>, bool, word32)
	word32 r1_66 = lr_39 / 0x19<32> - (r5_41 >>u 31<i32>)
	word32 r0_48 = (dwArg00 >> 2<32>) + 0x1DB<32> - CONVERT(r5_41 == 0<32>, bool, word32)
	word32 lr_84 = r10 - dwArg08 + (((((((lr_39 + r11) + (r12 - dwArg00) * 0x16D<32>) - dwArg04) + (r1_66 >> 2<32>)) - r0_48) - (r0_48 / 0x19<32> >> 2<32>)) - (r1_66 - r0_48 / 0x19<32>)) * 0x18<32>
	lrOut = lr_84
	word32 r10_87 = r9 - dwArg0C + ((lr_84 << 4<32>) - lr_84 << 2<8>)
	return r8 - dwArg10 + ((r10_87 << 4<32>) - r10_87 << 2<8>)
fn0000CD78_exit:


word32 fn0000CE10(word32 r8, word32 r9, word32 r10, word32 r11, word32 r12, word32 dwArg00, word32 dwArg04, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEEE
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31] r8:[0..31] r9:[0..31] Stack +0000:[0..31] Stack +0004:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000CE10_entry:
l0000CE10:
	word32 lr_57
	branch dwArg04 == 0<32> l0000CE4A
l0000CE22:
	word32 lr_142
	word32 r12_48 = fn0000CD78(r8, r9, r10, r11, r12, Mem36[dwArg04 + 20<i32>:word32], Mem33[dwArg04 + 28<i32>:word32], Mem30[dwArg04 + 8<i32>:word32], Mem27[dwArg04 + 4<i32>:word32], Mem17[dwArg04:word32], out lr_142)
	word32 r8_56 = Mem39[dwArg00:word32]
	lr_57 = r8_56 + r12_48
	branch (CONVERT(lr_57 >= r8_56, bool, word32) ^ r12_48 << 0x1F<8>) != 0<32> l0000CE6E
l0000CE4A:
	word32 lr_66 = Mem65[dwArg00:word32]
	branch lr_66 >= 0<32> l0000CE60
l0000CE60:
	branch lr_66 > Mem65[0x0000CE80<p32>:word32] l0000CE6C
l0000CE6C:
	lr_57 = lr_66 - 1<32>
l0000CE68:
	lr_57 = Mem65[0x0000CE84<p32>:word32]
l0000CE50:
	branch lr_66 <= Mem65[0x0000CE78<p32>:word32] l0000CE5C
l0000CE5C:
	lr_57 = lr_66 + 1<32>
l0000CE58:
	lr_57 = Mem65[0x0000CE7C<p32>:word32]
l0000CE6E:
	lrOut = lr_57
	return lr_57
fn0000CE10_exit:


word32 fn0000CE88(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000CEEE
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CE88_entry:
l0000CE88:
	byte VNZC_53
	word32 r8_137
	word32 r2_127
	word32 r3_128
	word32 r1_101
	word32 r0_105
	word32 r6_110
	word32 r10_119
	word32 lr_115
	word32 r12_135
	word32 r5_130
	call r12 (retsize: 0;)
		uses: lr:lr,r0:r0,r1:r12,r10:r10,r11:r10,r12:r11,r2:r10,r3:r11,r4:r4,r5:r5,r6:r6,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4,Stack +0014:r3,Stack +0018:r2,Stack +001C:r1,Stack +0020:r0
		defs: lr:lr_47,r0:r0_39,r1:r1_40,r10:r10_50,r12:r12_49,r2:r2_41,r3:r3_42,r5:r5_44,r6:r6_45,r8:r8_51,VNZC:VNZC_53
	branch SLICE(VNZC_53, bool, 1) l0000CEEC
l0000CE98:
	word32 r7_132 = Mem29[r3_128:word32]
	branch r7_132 == 0<32> l0000CEEC
l0000CE9E:
	word32 r4_129 = r12_135
l0000CEC6:
	branch r7_132 < 0<32> l0000CECC
l0000CEC8_1:
	r8_137 = 1<32>
l0000CECC:
	branch r7_132 >= 0<32> l0000CED0
l0000CECC_1:
	r8_137 = 0xFFFFFFFF<32>
l0000CED0:
	word32 r9_70 = r7_132 - r4_129
	branch r7_132 != r8_137 + r4_129 l0000CEA2
l0000CEA2:
	word32 r5_80
	branch r7_132 >= 0<32> l0000CEB2
l0000CEB2:
	r5_80 = (r9_70 >> 1<i32>) + r4_129
l0000CEA6:
	r5_80 = (r4_129 - r7_132 >> 1<i32>) + r7_132
l0000CEB6:
	Mem97[r3_128:word32] = r5_80
	byte VNZC_139
	call r1_101 (retsize: 0;)
		uses: lr:lr_115,r0:r0_105,r1:r1_101,r10:r10_119,r11:r2_89,r12:r3_94,r2:r2_89,r3:r3_94,r4:r4_69,r5:r5_96,r6:r6_110,r7:r7_59
		defs: lr:lr_133,r0:r0_125,r1:r1_126,r10:r10_136,r12:r12_135,r2:r2_127,r3:r3_128,r4:r4_129,r5:r5_130,r6:r6_131,r7:r7_132,r8:r8_137,VNZC:VNZC_139
	bool Z_140 = SLICE(VNZC_139, bool, 1)
	branch Z_140 l0000CEC2
l0000CEBE_1:
	r7_132 = r5_130
l0000CEC2:
	branch Z_140 l0000CEC6
l0000CEC2_1:
	r4_129 = r5_130
l0000CEDC:
	branch r12_135 != 0<32> l0000CEEC
l0000CEE0:
	branch r4_129 == 0<32> l0000CEEC
l0000CEE4:
	Mem155[r3_128:word32] = r4_129
	call r1_101 (retsize: 0;)
		uses: lr:lr_115,r0:r0_105,r1:r1_101,r10:r10_119,r11:r2_89,r12:r3_94,r2:r2_89,r3:r3_94,r4:r4_69,r5:r5_158,r6:r6_110,r7:r7_59
		defs: lr:lr_168,r12:r12_170
l0000CEEC:
	lrOut = lr_115
	return r12_135
fn0000CE88_exit:


word32 fn0000CEEE(word32 r0, word32 r1, word32 r10, word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D1B8
// MayUse:  r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000CEEE_entry:
l0000CEEE:
	word32 r10_74
	word32 r3_35 = Mem34[r12 + 16<i32>:word32]
	word32 r4_39 = Mem34[r12 + 20<i32>:word32]
	word32 r8_38 = Mem34[r12 + 32<i32>:word32]
	word32 r8_60 = r4_39 + r3_35 / 0xC<32> - (r3_35 >>u 0x1F<32>)
	word32 r6_32 = 0x0000CEF6<p32> - Mem29[0x0000D028<p32>:word32]
	word32 r9_44 = CONVERT(r8_38 != 0<32>, bool, word32) | r8_38 >> 31<i32>
	word32 lr_50 = Mem49[r12:word32]
	word32 r11_52 = Mem51[r12 + 4<i32>:word32]
	word32 r10_54 = Mem53[r12 + 8<i32>:word32]
	word32 r5_56 = Mem55[r12 + 12<i32>:word32]
	branch SLICE(r8_60, word2, 0) == 0<32> l0000CF3A
l0000CF3A:
	branch r9_44 == 0<32> l0000CF4A
l0000CF4A:
	r10_74 = CONVERT(SLICE(r8_60 / 0x64<32>, word2, 0) == 1<32>, bool, word32)
l0000CF46:
	r10_74 = 1<32>
l0000CF36:
	r10_74 = 0<32>
l0000CF52:
	word32 dwLocA8_558
	word32 r2_94 = Mem62[r10:word32]
	word32 r8_95 = r5_56 - 1<32> + CONVERT(Mem62[0x0000D1D0<p32> + ((r10_74 * 0xD<32> + (((r3_35 >>u 0x1F<32>) << 1<32>) + (r3_35 >>u 0x1F<32>) << 2<8>)) + r3_35) * 2<32>:word16], word16, word32)
	word32 dwLoc90_556 = r2_94
	branch lr_50 >= 0<32> l0000CF8A
l0000CF8A:
	dwLocA8_558 = min(lr_50, 0x3B<32>)
l0000CF84:
	dwLocA8_558 = 0<32>
l0000CF94:
	word32 r12_447
	word32 lr_129
	word32 r12_132 = fn0000CD78(dwLocA8_558, r11_52, r10_54, r8_95, r8_60, 0x46<32>, 0<32>, 0<32>, 0<32>, -r2_94, out lr_129)
	word32 r9_153 = (r4_39 >> 1<32>) + (r5_56 >> 0xA<32>) - 0x23<32> + (r10_54 >> 14<i32>) + (r11_52 >> 20<i32>)
	word32 r3_151 = r12_132
	branch abs((r12_132 >> 0x1A<32>) - r9_153) <= 0x15<32> l0000CFFC
l0000CFDE:
	word32 r10_160 = 0xFFFFFFFF<32> - r12_132
	branch abs((r10_160 >> 0x1A<32>) - r9_153) > 0x15<32> l0000D19C
l0000CFF0:
	r3_151 = r10_160
	dwLoc90_556 = r2_94 + (r10_160 - r12_132)
l0000CFFC:
	word32 r2_174 = 0<32>
	word32 r4_175 = 6<32>
	word32 r7_177 = r3_151
	word32 dwLoc2C_575 = r3_151
	word32 dwLoc28_576 = r3_151
l0000D050:
	r4_175 = r4_175 - 1<32>
	word32 lr_823
	word32 r12_218 = fn0000CE10(dwLocA8_558, r11_52, r10_54, r8_95, r8_60, fp - 0x28<32>, fn0000CE88(r0, r1, r2_174, r3_151, r4_175, fp - 0x28<32>, r6_32, r7_177, fp - 0x5C<32>, fp - 0x28<32>, r11, lr_129, out lr_823), out lr_129)
	branch dwLoc28_576 != r12_218 l0000D008
l0000D008:
	branch dwLoc28_576 != r7_177 l0000D03E
l0000D00C:
	branch dwLoc28_576 == dwLoc2C_575 l0000D03E
l0000D012:
	branch dwLoc3C < 0<32> l0000D0EC
l0000D018:
	branch r9_44 >= 0<32> l0000D030
l0000D030:
	branch (CONVERT(r9_44 != 0<32>, bool, word32) ^ CONVERT(dwLoc3C != 0<32>, bool, word32)) != 0<32> l0000D0EC
l0000D01E:
	branch r2_174 > CONVERT(dwLoc3C != 0<32>, bool, word32) l0000D03E
l0000D03E:
	branch r4_175 == 0<32> l0000D19C
l0000D044:
	r7_177 = dwLoc2C_575
	r2_174 = CONVERT(dwLoc3C != 0<32>, bool, word32)
	dwLoc28_576 = r12_218
	dwLoc2C_575 = dwLoc28_576
l0000D028:
l0000D078:
	word32 lr_272 = r9_44
	branch r9_44 == dwLoc3C l0000D0EC
l0000D080:
	branch r9_44 < 0<32> l0000D0EC
l0000D084:
	branch dwLoc3C >= 0<32> l0000D1A0
l0000D1A0:
	r7_177 = 0x92C70<32>
l0000D1A4:
	r0 = r7_177 << 1<32>
	word32 r4_282 = 0<32> - r7_177
	word32 r5_284 = 0xFFFFFFFF<32>
l0000D08C:
	r5_284 = r5_284 + 2<32>
	branch (CONVERT(r4_282 + dwLoc28_576 >= dwLoc28_576, bool, word32) ^ r5_284 << 0x1F<8>) == 0<32> l0000D0DC
l0000D0A2:
	fn0000CE88(r0, fp - 0x30<32>, fp - 0x88<32>, r3_151, r4_282, r5_284, r6_32, r7_177, fp - 0x88<32>, fp - 0x30<32>, r11, lr_272, out lr_272)
	branch dwLoc68 != r9_44 l0000D0DC
l0000D0DC:
	r4_282 = r4_282 + r0
	branch r5_284 != 3<32> l0000D08C
l0000D0E2:
	r7_177 = r7_177 + 0x92C70<32>
	branch r7_177 != Mem295[0x0000D1B6<p32>:word32] l0000D1A4
l0000D0BA:
	word32 lr_345
	dwLoc28_576 = fn0000CE10(dwLocA8_558, r11_52, r10_54, r8_95, r8_60, fp - 0x30<32>, fp - 0x88<32>, out lr_345)
	word32 lr_824
	fn0000CE88(r0, fp - 0x30<32>, fp - 0x88<32>, r3_151, r4_282, r5_284, r6_32, r7_177, fp - 0x5C<32>, fp - 0x28<32>, r11, lr_345, out lr_824)
l0000D08A:
l0000D0EC:
	word32 r4_380 = dwLoc90_556 + dwLoc28_576 - r3_151
	Mem382[r10:word32] = r4_380
	word32 sp_371 = fp - 0xD4<32>
	branch lr_50 == dwLoc5C l0000D152
l0000D104:
	word32 r1_391
	branch dwLocA8_558 == 0<32> l0000D10E
l0000D10E:
	r1_391 = CONVERT(dwLoc5C == 0x3C<32>, bool, word32)
l0000D10A:
	r1_391 = 0<32>
l0000D114:
	word32 r5_398 = dwLoc28_576 + lr_50
	word32 r1_400 = r1_391 - dwLocA8_558
	word32 r3_402 = r1_400 + r5_398
	word32 r1_417
	word32 r2_418
	word32 r3_419
	word32 r5_421
	word32 r12_425
	call r11 (retsize: 0;)
		uses: lr:dwLocA8_561,r0:r0_408,r1:r1_400,r10:r11,r11:fp - 0x5C<32>,r12:fp - 0x2C<32>,r2:dwLoc28_616,r3:r3_402,r4:r4_380,r5:r5_398,r6:r6_32,r7:r7_414,Stack +006C:dwLoc68,Stack +0078:dwLoc5C,Stack +0098:dwLoc3C,Stack +00A8:r3_402
		defs: r1:r1_417,r12:r12_425,r2:r2_418,r3:r3_419,r5:r5_421,sp:sp_415
	branch (CONVERT(r3_419 < r5_421, bool, word32) ^ r1_417 << 0x1F<8> | CONVERT(r5_421 < r2_418, bool, word32) ^ Mem406[sp_371 + 72<i32>:word32] << 0x1F<8> | CONVERT(r12_425 == 0<32>, bool, word32)) != 0<32> l0000D19C
l0000D19C:
	r12_447 = 0xFFFFFFFF<32>
l0000D14E:
	Mem449[sp_371 + 172<i32>:word32] = Mem406[sp_371 + 168<i32>:word32]
l0000D152:
	word32 r8_451 = sp_371 + 0x78<32>
	word32 r5_453 = Mem452[r8_451:word32]
	word32 r4_454 = Mem452[r8_451 + 4<i32>:word32]
	word32 r3_455 = Mem452[r8_451 + 8<i32>:word32]
	Mem458[sp_371 + -4<i32>:word32] = Mem452[r8_451 + 12<i32>:word32]
	Mem459[sp_371 + -8<i32>:word32] = r3_455
	Mem460[sp_371 + -12<i32>:word32] = r4_454
	Mem461[sp_371 + -16<i32>:word32] = r5_453
	word32 r8_457 = sp_371 + 0x88<32>
	word32 lr_462 = sp_371 + 0x10<32>
	word32 r5_463 = Mem461[r8_457:word32]
	word32 r4_464 = Mem461[r8_457 + 4<i32>:word32]
	word32 r3_465 = Mem461[r8_457 + 8<i32>:word32]
	word64 r11_r10_467 = Mem461[sp_371 + 152<i32>:word64]
	Mem468[lr_462 + -4<i32>:word32] = Mem461[r8_457 + 12<i32>:word32]
	Mem469[lr_462 + -8<i32>:word32] = r3_465
	Mem470[lr_462 + -12<i32>:word32] = r4_464
	Mem471[lr_462 + -16<i32>:word32] = r5_463
	word32 r5_472 = Mem471[sp_371:word32]
	word32 r4_473 = Mem471[sp_371 + 4<i32>:word32]
	word32 r3_474 = Mem471[sp_371 + 8<i32>:word32]
	word32 lr_476 = Mem471[sp_371 + 40<i32>:word32]
	Mem477[lr_476 + -4<i32>:word32] = Mem471[sp_371 + 12<i32>:word32]
	Mem478[lr_476 + -8<i32>:word32] = r3_474
	Mem479[lr_476 + -12<i32>:word32] = r4_473
	Mem480[lr_476 + -16<i32>:word32] = r5_472
	word32 r4_481 = sp_371 + 0x10<32>
	word64 r3_r2_483 = Mem480[r4_481 + 8<i32>:word64]
	word64 r5_r4_486 = Mem480[r4_481:word64]
	word32 r9_487 = Mem480[sp_371 + 160<i32>:word32]
	r12_447 = Mem480[sp_371 + 172<i32>:word32]
	Mem490[lr_476 + 0xC<32>:word32] = SLICE(r3_r2_483, word32, 0)
	Mem492[lr_476 + 8<32>:word32] = SLICE(r3_r2_483, word32, 32)
	Mem494[lr_476 + 4<32>:word32] = SLICE(r5_r4_486, word32, 0)
	Mem496[lr_476:word32] = SLICE(r5_r4_486, word32, 32)
	Mem497[lr_476 + -24<i32>:word32] = r9_487
	Mem500[lr_476 + 32<i32>:word64] = r11_r10_467
l0000D1B0:
	return r12_447
fn0000CEEE_exit:


word32 fn0000D1B8(word32 r0, word32 r1, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000A9DE
// MayUse:  r0:[0..31] r1:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000D1B8_entry:
l0000D1B8:
	word32 r6_19 = 0x0000D1BC<p32> - Mem17[0x0000D1CE<p32>:word32]
	return fn0000CEEE(r0, r1, Mem17[r6_19 + 612<i32>:word32], Mem17[r6_19 + 444<i32>:word32], r12)
fn0000D1B8_exit:


word32 fn0000D204(word32 r4, word32 r5, word32 r6, word32 r7, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: r12
// Trashed: VNZC lr r12
// Preserved: r4 r5 r6 r7 sp
fn0000D204_entry:
l0000D204:
	word32 r6_19 = 0x0000D208<p32> - Mem17[0x0000D21A<p32>:word32]
	word32 r12_28
	call Mem17[r6_19 + 320<i32>:word32] (retsize: 0;)
		uses: lr:lr,r12:0x100<32>,r4:r4,r5:r5,r6:r6_19,r7:r7,Stack +0000:lr,Stack +0004:r7,Stack +0008:r6,Stack +000C:r5,Stack +0010:r4
		defs: r12:r12_28
	word32 r12_30 = CONVERT(Mem17[r12_28:byte], byte, word32)
	branch r12_30 != 0<32> l0000D21A
l0000D216_1:
	r12_30 = 0x2E<32>
l0000D21A:
	return r12_30
fn0000D204_exit:


bool fn0000D220(word32 r0, word32 r1, word32 r2, word32 r9, word32 r10, word32 lr, word32 pc, ptr32 & r0Out, ptr32 & r1Out, ptr32 & r2Out, ptr32 & r3Out, ptr32 & r6Out, ptr32 & r12Out, ptr32 & lrOut, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000B818
// MayUse:  lr:[0..31] pc:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r2:[0..31] r9:[0..31]
// LiveOut: Z lr pc r0 r1 r12 r2 r3 r6
// Trashed: VNZC lr pc r0 r1 r10 r11 r12 r2 r3 r4 r5 r6 r7 r8 r9
// Preserved: sp
fn0000D220_entry:
l0000D220:
	word32 r6_1002 = 0x0000D22A<p32> - Mem29[0x0000D390<p32>:word32]
	word32 lr_3829
	fn0000EB48(r0, r1, r2, fp - 0x30<32>, r10, r9, r6_1002, fp - 36<i32>, fp - 0x30<32>, fp - 0x40<32>, r10, lr, out lr_3829)
	word32 r7_1003 = fp - 36<i32>
	word32 r4_1012 = r10
	word32 r3_122 = fp - 0x30<32>
	word32 r5_1001 = r9
	bool N_55 = <invalid>
	bool V_54 = <invalid>
	branch N_55 | V_54 l0000D258
l0000D258:
	word32 r12_3831
	word32 r8_3838
	word32 r9_65
	word32 r11_130
	word32 r10_1049
	word32 lr_1004
	fn0000EA4C(fp - 0x30<32>, r9, out r9_65, out r10_1049, out r11_130, out lr_1004)
	bool N_68 = <invalid>
	bool V_67 = <invalid>
	branch N_68 | V_67 l0000D284
l0000D284:
	word32 r8_74 = dwLoc38 + 7<32>
	branch dwLoc38 >u 1<32> l0000D294
l0000D290_1:
	r8_74 = 0xFFFFFFFF<32>
l0000D294:
	word32 r9_1067 = r8_74 + dwLoc34
	branch r9_1067 >=u r8_74 l0000D29E
l0000D29A_1:
	r9_1067 = 0xFFFFFFFF<32>
l0000D29E:
	word32 r12_85 = r9_1067 + 6<32>
	branch r12_85 <u r9_1067 l0000E654
l0000D2A8:
	word32 sp_118
	branch r12_85 >u 0xF9F<32> l0000D2C6
l0000D2C6:
	branch r12_85 == 0xFFFFFFFF<32> l0000E654
l0000D2CC:
	word32 r12_129
	byte VNZC_134
	call Mem47[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_61,pc:pc_133,r0:r0,r1:r1,r10:r10_62,r11:r11_63,r12:r12_85,r2:r2,r3:fp - 0x30<32>,r4:r10,r5:r9,r6:r6_33,r7:fp - 36<i32>,r9:r9_84,Stack +0320:dwLoc3C,Stack +0324:dwLoc38,Stack +0328:dwLoc34
		defs: lr:lr_127,pc:pc_133,r0:r0_119,r1:r1_120,r10:r10_128,r11:r11_130,r12:r12_129,r2:r2_121,r3:r3_122,r4:r4_123,r5:r5_124,r6:r6_125,r7:r7_126,r9:r9_131,sp:sp_118,VNZC:VNZC_134
	branch SLICE(VNZC_134, bool, 1) l0000E654
l0000D2D4:
	Mem136[r7_1003 + -796<i32>:word32] = r12_129
	Mem137[r7_1003 + -800<i32>:word32] = r12_129
l0000D2B0:
	sp_118 = fp - 0x35C<32> - (r9_1067 + 0xC<32> & 0xFFFFFFFC<32>)
l0000D2DC:
	word32 r9_147 = Mem146[r7_1003 + -804<i32>:word32]
	branch r9_147 != 0<32> l0000D2EE
l0000D2EE:
	word32 r12_151 = Mem146[r7_1003 + -804<i32>:word32]
	Mem153[r7_1003 + -736<i32>:word32] = Mem146[Mem146[r7_1003 + -808<i32>:word32]:word32]
	Mem154[r7_1003 + -788<i32>:word32] = r12_151
l0000D2E4:
	Mem155[r7_1003 + -788<i32>:word32] = r9_147
	Mem156[r7_1003 + -736<i32>:word32] = r9_147
l0000D300:
	word32 r8_159 = Mem158[r7_1003 + -24<i32>:word32]
	Mem164[r7_1003 + -784<i32>:word32] = 0<32>
	Mem165[r7_1003 + -740<i32>:word32] = r8_159 + 0x24<32>
	Mem166[r7_1003 + -744<i32>:word32] = r8_159 + 0x28<32>
	Mem167[r7_1003 + -792<i32>:word32] = 0<32>
	word32 r11_1016 = 0<32>
l0000D31C:
	word32 pc_399
	r9_1067 = Mem169[r7_1003 + -744<i32>:word32]
	r10_1049 = Mem169[r9_1067 + -40<i32>:word32]
	branch r4_1012 == r10_1049 l0000D3D8
l0000D328:
	word32 r8_175 = Mem169[r7_1003 + -784<i32>:word32]
	r2 = r10_1049 - r4_1012
	r1 = r2 + r8_175
	word32 r12_178 = Mem169[r7_1003 + -736<i32>:word32]
	branch r1 >=u r8_175 l0000D33E
l0000D33A_1:
	r1 = 0xFFFFFFFF<32>
l0000D33E:
	branch r1 <=u r12_178 l0000D3C2
l0000D344:
	branch r12_178 != 0<32> l0000D34C
l0000D34C:
	word32 r8_190 = Mem169[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem169[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000D35C
l0000D358_1:
	r12_178 = r8_190 << 1<i32>
l0000D35C:
	branch r11_1016 >= 0<32> l0000D360
l0000D35C_1:
	r12_178 = 0xFFFFFFFF<32>
l0000D348:
	r12_178 = 0xC<32>
l0000D360:
	branch r12_178 >=u r1 l0000D366
l0000D362_1:
	r12_178 = r1
l0000D366:
	Mem210[r7_1003 + -736<i32>:word32] = r12_178
	branch r12_178 == 0xFFFFFFFF<32> l0000E630
l0000D370:
	word32 r12_269
	word32 r10_213 = Mem210[r7_1003 + -788<i32>:word32]
	word32 r9_214 = Mem210[r7_1003 + -804<i32>:word32]
	word32 r3_217 = CONVERT(r10_213 == r9_214, bool, word32)
	branch r3_217 != 0<32> l0000D384
l0000D380:
	branch r10_213 != 0<32> l0000D394
l0000D394:
	word32 pc_273
	call Mem210[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_251,pc:pc_273,r0:r0_232,r1:r1_182,r10:r10_213,r11:Mem210[r7_168 + -736<i32>:word32],r12:Mem210[r7_168 + -788<i32>:word32],r2:r2_176,r3:r3_217,r4:r4_172,r5:r5_246,r6:r6_227,r7:r7_168,r9:r9_214,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_267,pc:pc_273,r0:r0_259,r1:r1_260,r10:r10_268,r11:r11_270,r12:r12_269,r2:r2_261,r3:r3_262,r4:r4_263,r6:r6_265,r7:r7_266,r9:r9_271
l0000D384:
	word32 pc_310
	call Mem210[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_251,pc:pc_310,r0:r0_232,r1:r1_182,r10:r10_213,r11:r11_289,r12:Mem210[r7_168 + -736<i32>:word32],r2:r2_176,r3:r3_217,r4:r4_172,r5:r5_246,r6:r6_227,r7:r7_168,r9:r9_214,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_304,pc:pc_310,r0:r0_296,r1:r1_297,r10:r10_305,r11:r11_307,r12:r12_306,r2:r2_298,r3:r3_299,r4:r4_300,r6:r6_302,r7:r7_303,r9:r9_308
l0000D3A0:
	r5_1001 = r12_269
	branch r12_269 == 0<32> l0000E630
l0000D3A8:
	branch r3_122 == 0<32> l0000D3BE
l0000D3AC:
	word32 r8_321 = Mem210[r7_1003 + -784<i32>:word32]
	branch r8_321 == 0<32> l0000D3BE
l0000D3B4:
	word32 pc_349
	call Mem210[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_331,pc:pc_349,r0:r0_327,r1:r1_328,r10:r8_321,r11:Mem210[r7_319 + -788<i32>:word32],r12:r12_312,r2:r2_329,r3:r3_316,r4:r4_330,r5:r12_312,r6:r6_326,r7:r7_319,r9:r9_332,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_343,pc:pc_349,r0:r0_335,r1:r1_336,r2:r2_337,r3:r3_338,r4:r4_339,r5:r5_340,r6:r6_341,r7:r7_342,r9:r9_347
l0000D3BE:
	Mem353[r7_1003 + -788<i32>:word32] = r5_1001
l0000D3C2:
	call Mem355[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_377,pc:pc_399,r0:r0_368,r1:r1_370,r10:r2_358,r11:r4_363,r12:Mem355[r7_354 + -788<i32>:word32] + Mem355[r7_354 + -784<i32>:word32],r2:r2_358,r3:r3_372,r4:r4_363,r5:r5_376,r6:r6_366,r7:r7_354,r9:r9_379,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_393,pc:pc_399,r0:r0_385,r1:r1_386,r2:r2_387,r3:r3_388,r4:r4_389,r5:r5_390,r6:r6_391,r7:r7_392,r9:r9_397,sp:sp_384
	Mem401[r7_1003 + -784<i32>:word32] = r1
	pc = pc_399
l0000D3D8:
	word32 r8_404 = Mem403[r7_1003 + -28<i32>:word32]
	r10_1049 = Mem403[r7_1003 + -792<i32>:word32]
	branch r10_1049 == r8_404 l0000E4CE
l0000E4CE:
	word32 r3_408 = Mem403[r7_1003 + -784<i32>:word32]
	word32 r12_409 = Mem403[r7_1003 + -784<i32>:word32]
	r3_122 = r3_408 + 1<32>
	word32 r11_411 = Mem403[r7_1003 + -736<i32>:word32]
	branch r3_408 + 1<32> <u r12_409 l0000E4E2
l0000E4DE_1:
	r8_404 = r3_408 + 1<32>
l0000E4E2:
	branch r3_408 + 1<32> >=u r12_409 l0000E4E6
l0000E4E2_1:
	r8_404 = 0xFFFFFFFF<32>
l0000E4E6:
	branch r8_404 <=u r11_411 l0000E58A
l0000E4EC:
	branch r11_411 != 0<32> l0000E4F8
l0000E4F8:
	word32 r8_429 = Mem403[r7_1003 + -736<i32>:word32]
	word32 r9_430 = Mem403[r7_1003 + -736<i32>:word32]
	r8_404 = r8_429 << 1<i32>
	r9_1067 = r9_430
	branch r9_430 < 0<32> l0000E508
l0000E504_1:
	r9_1067 = r8_429 << 1<i32>
l0000E508:
	branch r9_430 >= 0<32> l0000E50C
l0000E508_1:
	r9_1067 = 0xFFFFFFFF<32>
l0000E50C:
	Mem441[r7_1003 + -736<i32>:word32] = r9_1067
l0000E4F0:
	Mem443[r7_1003 + -736<i32>:word32] = 0xC<32>
	r10_1049 = 0xC<32>
l0000E510:
	word32 r12_446 = Mem445[r7_1003 + -784<i32>:word32]
	r11_1016 = Mem445[r7_1003 + -736<i32>:word32]
	branch r3_408 + 1<32> <u r12_446 l0000E51E
l0000E51A_1:
	r8_404 = r3_408 + 1<32>
l0000E51E:
	branch r3_408 + 1<32> >=u r12_446 l0000E522
l0000E51E_1:
	r8_404 = 0xFFFFFFFF<32>
l0000E522:
	branch r8_404 <=u r11_1016 l0000E532
l0000E528:
	branch r3_408 + 1<32> <u r12_446 l0000E630
l0000E52E:
	Mem475[r7_1003 + -736<i32>:word32] = r3_408 + 1<32>
l0000E532:
	r10_1049 = Mem477[r7_1003 + -736<i32>:word32]
	branch r10_1049 == 0xFFFFFFFF<32> l0000E630
l0000E53A:
	word32 r12_571
	word32 r9_483 = Mem477[r7_1003 + -788<i32>:word32]
	word32 r4_487 = CONVERT(r9_483 == Mem477[r7_1003 + -804<i32>:word32], bool, word32)
	branch r4_487 != 0<32> l0000E54E
l0000E54A:
	branch r9_483 != 0<32> l0000E55C
l0000E55C:
	word32 pc_575
	call Mem477[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,pc:pc_575,r0:r0_509,r1:r1_518,r10:r10_480,r11:Mem477[r7_402 + -736<i32>:word32],r12:Mem477[r7_402 + -788<i32>:word32],r2:r2_528,r3:r3_408 + 1<32>,r4:r4_487,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_483,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_569,pc:pc_575,r0:r0_561,r1:r1_562,r10:r10_570,r11:r11_572,r12:r12_571,r2:r2_563,r3:r3_564,r4:r4_565,r6:r6_567,r7:r7_568,r9:r9_573
l0000E54E:
	word32 pc_608
	call Mem477[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,pc:pc_608,r0:r0_509,r1:r1_518,r10:r10_480,r11:r11_447,r12:Mem477[r7_402 + -736<i32>:word32],r2:r2_528,r3:r3_408 + 1<32>,r4:r4_487,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_483,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_602,pc:pc_608,r0:r0_594,r1:r1_595,r10:r10_603,r11:r11_605,r12:r12_604,r2:r2_596,r3:r3_597,r4:r4_598,r6:r6_600,r7:r7_601,r9:r9_606
l0000E568:
	r5_1001 = r12_571
	branch r12_571 == 0<32> l0000E630
l0000E56E:
	branch r4_1012 == 0<32> l0000E586
l0000E572:
	word32 r12_619 = Mem477[r7_1003 + -784<i32>:word32]
	branch r12_619 == 0<32> l0000E586
l0000E57A:
	word32 pc_648
	call Mem477[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_630,pc:pc_648,r0:r0_626,r1:r1_627,r10:r12_619,r11:Mem477[r7_617 + -788<i32>:word32],r12:r12_610,r2:r2_628,r3:r3_629,r4:r4_614,r5:r12_610,r6:r6_625,r7:r7_617,r9:r9_631,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_642,pc:pc_648,r0:r0_634,r1:r1_635,r2:r2_636,r3:r3_637,r4:r4_638,r5:r5_639,r6:r6_640,r7:r7_641
l0000E586:
	Mem652[r7_1003 + -788<i32>:word32] = r5_1001
l0000E58A:
	word32 r11_655 = Mem654[r7_1003 + -788<i32>:word32]
	word32 r10_656 = Mem654[r7_1003 + -784<i32>:word32]
	Mem658[r10_656:byte] = 0<8>
	word32 r9_659 = Mem658[r7_1003 + -804<i32>:word32]
	branch r11_655 == r9_659 l0000E5BE
l0000E5A0:
	branch r3_122 >=u Mem658[r7_1003 + -736<i32>:word32] l0000E5BE
l0000E5A8:
	word32 r12_698
	word32 pc_702
	byte VNZC_703
	call Mem658[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_683,pc:pc_702,r0:r0_671,r1:r1_673,r10:r10_656,r11:r3_663,r12:Mem658[r7_653 + -788<i32>:word32],r2:r2_675,r3:r3_663,r4:r4_677,r5:r5_682,r6:r6_669,r7:r7_653,r9:r9_659,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_696,pc:pc_702,r0:r0_688,r1:r1_689,r12:r12_698,r2:r2_690,r3:r3_691,r4:r4_692,r5:r5_693,r6:r6_694,r7:r7_695,r9:r9_700,VNZC:VNZC_703
	r11_655 = Mem658[r7_1003 + -788<i32>:word32]
	branch SLICE(VNZC_703, bool, 1) l0000E5BA
l0000E5B6_1:
	r11_655 = r12_698
l0000E5BA:
	Mem709[r7_1003 + -788<i32>:word32] = r11_655
l0000E5BE:
	word32 r10_712 = Mem711[r7_1003 + -796<i32>:word32]
	branch r10_712 == 0<32> l0000E5CC
l0000E5C6:
	word32 pc_752
	call Mem711[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_730,pc:pc_752,r0:r0_718,r1:r1_720,r10:r10_712,r11:r11_732,r12:r10_712,r2:r2_722,r3:r3_724,r4:r4_726,r5:r5_728,r6:r6_716,r7:r7_710,r9:r9_733,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_746,pc:pc_752,r0:r0_738,r1:r1_739,r10:r10_747,r11:r11_749,r2:r2_740,r3:r3_741,r4:r4_742,r5:r5_743,r6:r6_744,r7:r7_745,r9:r9_750
l0000E5CC:
	word32 r0_770
	word32 r1_771
	word32 r2_772
	word32 r3_773
	word32 r4_774
	word32 r5_775
	word32 r6_776
	word32 r10_779
	word32 r11_781
	word32 r9_782
	call Mem711[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_764,pc:pc_784,r0:r0_758,r1:r1_759,r10:r10_765,r11:r11_766,r12:Mem711[r7_754 + -24<i32>:word32],r2:r2_760,r3:r3_761,r4:r4_762,r5:r5_763,r6:r6_757,r7:r7_754,r9:r9_767,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_778,pc:pc_784,r0:r0_770,r1:r1_771,r10:r10_779,r11:r11_781,r2:r2_772,r3:r3_773,r4:r4_774,r5:r5_775,r6:r6_776,r7:r7_777,r9:r9_782
	word32 r12_786 = Mem711[r7_1003 + -8<i32>:word32]
	branch r12_786 == 0<32> l0000E5E0
l0000E5DC:
	call Mem711[r6_776 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_778,pc:pc_804,r0:r0_770,r1:r1_771,r10:r10_779,r11:r11_781,r12:r12_786,r2:r2_772,r3:r3_773,r4:r4_774,r5:r5_775,r6:r6_776,r7:r7_777,r9:r9_782,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_798,pc:pc_804,r7:r7_797
l0000E5E0:
	Mem810[Mem711[r7_1003 + -808<i32>:word32]:word32] = Mem711[r7_1003 + -784<i32>:word32]
l0000D3E6:
	word32 r12_3656
	word32 pc_3640
	r10_1049 = Mem403[r7_1003 + -744<i32>:word32]
	r9_1067 = CONVERT(Mem403[Mem403[r7_1003 + -740<i32>:word32]:byte], byte, word32)
	r11_1016 = 0x25<32>
	word32 r12_1006 = Mem403[r10_1049:word32]
	branch SLICE(r9_1067 - 0x25<32>, byte, 0) != 0<8> l0000D4A4
l0000D4A4:
	branch r12_1006 == 0xFFFFFFFF<32> l0000E330
l0000D4AA:
	branch SLICE(r9_1067 - 0x6E<32>, byte, 0) != 0<8> l0000D528
l0000D528:
	branch SLICE(r9_1067 - 0x61<32>, byte, 0) == 0<8> l0000D53A
l0000D530:
	branch SLICE(r9_1067 - 0x41<32>, byte, 0) != 0<8> l0000DE30
l0000DE30:
	word32 r9_833 = Mem403[r7_1003 + -8<i32>:word32]
	word32 r10_832 = Mem403[Mem403[r7_1003 + -744<i32>:word32] + -32<i32>:word32]
	word32 r4_834 = Mem403[r7_1003 + -800<i32>:word32]
	Mem836[r7_1003 + -748<i32>:word32] = Mem403[r9_833 + r12_1006 * 0xC<32>:word32]
	Mem837[r4_834:byte] = 0x25<8>
	r4_1012 = r4_834 + 1<i32>
	branch Test(NE,SLICE(r10_832, bool, 0)) l0000DE58
l0000DE54:
	Mem843[r4_834 + 1<i32>:byte] = 0x27<8>
	r4_1012 = r4_834 + 2<i32>
l0000DE58:
	branch Test(NE,SLICE(r10_832, bool, 1)) l0000DE62
l0000DE5E:
	Mem851[r4_1012:byte] = 0x2D<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE62:
	branch Test(NE,SLICE(r10_832, bool, 2)) l0000DE6C
l0000DE68:
	Mem859[r4_1012:byte] = 0x2B<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE6C:
	branch Test(NE,SLICE(r10_832, bool, 3)) l0000DE76
l0000DE72:
	Mem867[r4_1012:byte] = 0x20<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE76:
	branch Test(NE,SLICE(r10_832, bool, 4)) l0000DE80
l0000DE7C:
	Mem875[r4_1012:byte] = 0x23<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE80:
	branch Test(NE,SLICE(r10_832, bool, 5)) l0000DE8A
l0000DE86:
	Mem883[r4_1012:byte] = 0x30<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DE8A:
	word32 r8_897 = Mem891[r7_1003 + -744<i32>:word32]
	word32 r11_898 = Mem891[r8_897 + -28<i32>:word32]
	word32 r5_899 = Mem891[r8_897 + -24<i32>:word32]
	branch r11_898 == r5_899 l0000DEA6
l0000DE9A:
	word32 r5_902 = r5_899 - r11_898
	word32 r4_961
	word32 r5_962
	word32 pc_971
	call Mem891[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,pc:pc_971,r0:r0_509,r1:r1_518,r10:r5_902,r11:r11_898,r12:r4_904,r2:r2_528,r3:r3_937,r4:r4_904,r5:r5_902,r6:r6_500,r7:r7_402,r9:r9_833,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_965,pc:pc_971,r0:r0_957,r1:r1_958,r2:r2_959,r3:r3_960,r4:r4_961,r5:r5_962,r6:r6_963,r7:r7_964,r9:r9_969,sp:sp_956
	r4_1012 = r4_961 + r5_962
l0000DEA6:
	r12_1006 = Mem891[r7_1003 + -744<i32>:word32]
	word32 r11_978 = Mem891[r12_1006 + -16<i32>:word32]
	r5_1001 = Mem891[r12_1006 + -12<i32>:word32]
	branch r11_978 == r5_1001 l0000DEC2
l0000DEB6:
	word32 r5_982 = r5_1001 - r11_978
	word32 r4_1000
	word32 pc_1010
	call Mem891[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_992,pc:pc_1010,r0:r0_988,r1:r1_989,r10:r5_982,r11:r11_978,r12:r4_984,r2:r2_990,r3:r3_991,r4:r4_984,r5:r5_982,r6:r6_987,r7:r7_975,r9:r9_993,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_1004,pc:pc_1010,r1:r1_997,r12:r12_1006,r2:r2_998,r3:r3_999,r4:r4_1000,r5:r5_1001,r6:r6_1002,r7:r7_1003,sp:sp_995
	r4_1012 = r4_1000 + r5_1001
l0000DEC2:
	r11_1016 = Mem891[r7_1003 + -748<i32>:word32]
	branch r11_1016 >u 0x10<32> l0000DEF8
l0000DECC:
	word32 r8_1030
	word32 r9_1020 = 1<32> << r11_1016
	branch (r9_1020 & 0x1FFFF<32> & 0xFFFF4180<32>) != 0<32> l0000DEF0
l0000DEDE:
	branch Test(EQ,SLICE(r9_1020, bool, 12)) l0000DEF4
l0000DEF4:
	r8_1030 = 0x4C<32>
l0000DEE4:
	branch (r9_1020 & 0x600<32>) == 0<32> l0000DEF8
l0000DEEC:
	Mem1037[r4_1012:byte] = 0x6C<8>
	r4_1012 = r4_1012 + 1<i32>
l0000DEF0:
	r8_1030 = 0x6C<32>
l0000DEF6:
	Mem1043[r4_1012:byte] = SLICE(r8_1030, byte, 0)
	r4_1012 = r4_1012 + 1<i32>
l0000DEF8:
	r10_1049 = Mem1048[r7_1003 + -740<i32>:word32]
	Mem1053[r4_1012:byte] = Mem1048[r10_1049:byte]
	r0 = r4_1012 + 1<i32>
	Mem1056[r0:byte] = 0x25<8>
	Mem1058[r4_1012 + 3<i32>:byte] = 0<8>
	Mem1060[r4_1012 + 2<i32>:byte] = 0x6E<8>
	word32 r8_1062 = Mem1060[Mem1060[r7_1003 + -744<i32>:word32] + -20<i32>:word32]
	branch r8_1062 != 0xFFFFFFFF<32> l0000DF1E
l0000DF1E:
	r9_1067 = Mem1060[r7_1003 + -8<i32>:word32] + r8_1062 * 0xC<32>
	branch Mem1060[r9_1067:word32] != 5<32> l0000E330
l0000DF32:
	Mem1073[r7_1003 + -728<i32>:word32] = Mem1060[r9_1067 + 4<i32>:word32]
	r2 = 1<32>
l0000DF1A:
	r2 = 0<32>
l0000DF3A:
	r12_1006 = Mem1076[r7_1003 + -744<i32>:word32]
	word32 r8_1078 = Mem1076[r12_1006 + -8<i32>:word32]
	branch r8_1078 == 0xFFFFFFFF<32> l0000DF66
l0000DF46:
	r9_1067 = Mem1076[r7_1003 + -8<i32>:word32] + r8_1078 * 0xC<32>
	branch Mem1076[r9_1067:word32] != 5<32> l0000E330
l0000DF5A:
	r8_1078 = r7_1003 + (r2 << 2<8>)
	Mem1092[r8_1078 + -728<i32>:word32] = Mem1076[r9_1067 + 4<i32>:word32]
	r2 = r2 + 1<32>
l0000DF66:
	word32 r9_1095 = Mem1094[r7_1003 + -784<i32>:word32]
	r11_1016 = Mem1094[r7_1003 + -784<i32>:word32]
	r9_1067 = r9_1095 + 2<32>
	word32 r10_1098 = Mem1094[r7_1003 + -736<i32>:word32]
	branch r9_1095 + 2<32> <u r11_1016 l0000DF7A
l0000DF76_1:
	r8_1078 = r9_1095 + 2<32>
l0000DF7A:
	branch r9_1095 + 2<32> >=u r11_1016 l0000DF7E
l0000DF7A_1:
	r8_1078 = 0xFFFFFFFF<32>
l0000DF7E:
	branch r8_1078 <=u r10_1098 l0000E022
l0000DF84:
	word32 r8_1119
	branch r10_1098 != 0<32> l0000DF90
l0000DF90:
	word32 r12_1122
	word32 r8_1117 = Mem1094[r7_1003 + -736<i32>:word32]
	word32 r12_1118 = Mem1094[r7_1003 + -736<i32>:word32]
	r8_1119 = r8_1117 << 1<i32>
	r12_1122 = r12_1118
	branch r12_1118 < 0<32> l0000DFA0
l0000DF9C_1:
	r12_1122 = r8_1117 << 1<i32>
l0000DFA0:
	branch r12_1118 >= 0<32> l0000DFA4
l0000DFA0_1:
	r12_1122 = 0xFFFFFFFF<32>
l0000DFA4:
	Mem1129[r7_1003 + -736<i32>:word32] = r12_1122
l0000DF88:
	Mem1131[r7_1003 + -736<i32>:word32] = 0xC<32>
	r8_1119 = 0xC<32>
l0000DFA8:
	r11_1016 = Mem1133[r7_1003 + -784<i32>:word32]
	r10_1049 = Mem1133[r7_1003 + -736<i32>:word32]
	branch r9_1095 + 2<32> <u r11_1016 l0000DFB6
l0000DFB2_1:
	r8_1119 = r9_1095 + 2<32>
l0000DFB6:
	branch r9_1095 + 2<32> >=u r11_1016 l0000DFBA
l0000DFB6_1:
	r8_1119 = 0xFFFFFFFF<32>
l0000DFBA:
	branch r8_1119 <=u r10_1049 l0000DFCA
l0000DFC0:
	branch r9_1095 + 2<32> <u r11_1016 l0000E630
l0000DFC6:
	Mem1163[r7_1003 + -736<i32>:word32] = r9_1095 + 2<32>
l0000DFCA:
	r9_1067 = Mem1165[r7_1003 + -736<i32>:word32]
	branch r9_1067 == 0xFFFFFFFF<32> l0000E630
l0000DFD4:
	word32 r12_1297
	word32 r8_1171 = Mem1165[r7_1003 + -788<i32>:word32]
	word32 r4_1175 = CONVERT(r8_1171 == Mem1165[r7_1003 + -804<i32>:word32], bool, word32)
	branch r4_1175 != 0<32> l0000DFE8
l0000DFE4:
	branch r8_1171 != 0<32> l0000DFF2
l0000DFF2:
	word32 pc_1301
	call Mem1165[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_1266,pc:pc_1301,r0:r0_1054,r1:r1_1215,r10:r10_1135,r11:Mem1165[r7_1014 + -736<i32>:word32],r12:Mem1165[r7_1014 + -788<i32>:word32],r2:r2_1226,r3:r3_1238,r4:r4_1175,r5:r5_1252,r6:r6_1191,r7:r7_1014,r9:r9_1168,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_1295,pc:pc_1301,r0:r0_1287,r1:r1_1288,r10:r10_1296,r11:r11_1298,r12:r12_1297,r2:r2_1289,r3:r3_1290,r4:r4_1291,r6:r6_1293,r7:r7_1294,r9:r9_1299,sp:sp_1286
l0000DFE8:
	word32 pc_1334
	call Mem1165[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_1266,pc:pc_1334,r0:r0_1054,r1:r1_1215,r10:r10_1135,r11:r11_1134,r12:Mem1165[r7_1014 + -736<i32>:word32],r2:r2_1226,r3:r3_1238,r4:r4_1175,r5:r5_1252,r6:r6_1191,r7:r7_1014,r9:r9_1168,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_1328,pc:pc_1334,r0:r0_1320,r1:r1_1321,r10:r10_1329,r11:r11_1331,r12:r12_1330,r2:r2_1322,r3:r3_1323,r4:r4_1324,r6:r6_1326,r7:r7_1327,r9:r9_1332,sp:sp_1319
l0000DFFE:
	r5_1001 = r12_1297
	branch r12_1297 == 0<32> l0000E630
l0000E006:
	branch r4_1012 == 0<32> l0000E01E
l0000E00A:
	r11_1016 = Mem1165[r7_1003 + -784<i32>:word32]
	branch r11_1016 == 0<32> l0000E01E
l0000E012:
	word32 pc_1373
	call Mem1165[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_1355,pc:pc_1373,r0:r0_1351,r1:r1_1352,r10:Mem1165[r7_1343 + -784<i32>:word32],r11:Mem1165[r7_1343 + -788<i32>:word32],r12:r12_1336,r2:r2_1353,r3:r3_1354,r4:r4_1340,r5:r12_1336,r6:r6_1350,r7:r7_1343,r9:r9_1356,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_1367,pc:pc_1373,r0:r0_1359,r11:r11_1370,r2:r2_1361,r4:r4_1363,r5:r5_1364,r6:r6_1365,r7:r7_1366,sp:sp_1358
l0000E01E:
	Mem1377[r7_1003 + -788<i32>:word32] = r5_1001
l0000E022:
	r10_1049 = Mem1379[r7_1003 + -788<i32>:word32]
	Mem1383[Mem1379[r7_1003 + -784<i32>:word32]:byte] = 0<8>
	r3_122 = Mem1383[r7_1003 + -728<i32>:word32]
	r1 = Mem1383[r7_1003 + -724<i32>:word32]
l0000D53A:
	lr_1004 = Mem403[r7_1003 + -8<i32>:word32]
	word32 r9_1388 = Mem403[r7_1003 + -744<i32>:word32]
	r5_1001 = Mem403[lr_1004 + r12_1006 * 0xC<32>:word32]
	r10_1049 = Mem403[r9_1388 + -28<i32>:word32]
	r4_1012 = Mem403[r9_1388 + -24<i32>:word32]
	Mem1396[r7_1003 + -780<i32>:word32] = Mem403[r9_1388 + -32<i32>:word32]
	branch r10_1049 != r4_1012 l0000D56A
l0000D56A:
	r11_1016 = Mem1396[r7_1003 + -744<i32>:word32]
	word32 r8_1400 = Mem1396[r11_1016 + -20<i32>:word32]
	branch r8_1400 == 0xFFFFFFFF<32> l0000D5B0
l0000D5B0:
	Mem1404[r7_1003 + -772<i32>:word32] = 0<32>
l0000D5B6:
	word32 r9_1418
	r10_1049 = r10_1049 + 1<i32>
	word32 r11_1412 = CONVERT(Mem1405[r10_1049:byte], byte, word32)
	branch Mem1405[r7_1003 + -772<i32>:word32] <=u Mem1405[0x0000D636<p32>:word32] l0000D5C8
l0000D5C8:
	r9_1418 = Mem1405[r7_1003 + -772<i32>:word32] * 0xA<32>
l0000D5C4:
	r9_1418 = 0xFFFFFFFF<32>
l0000D5D4:
	word32 r8_1424 = r9_1418 + (r11_1412 - 0x30<32>)
	branch r8_1424 >=u r9_1418 l0000D5E2
l0000D5DE_1:
	r8_1424 = 0xFFFFFFFF<32>
l0000D5E2:
	Mem1431[r7_1003 + -772<i32>:word32] = r8_1424
	branch r10_1049 != r4_1012 l0000D5B6
l0000D5EA:
	Mem1440[r7_1003 + -776<i32>:word32] = 1<32>
	r11_1016 = 1<32>
l0000D576:
	r9_1067 = lr_1004 + r8_1400 * 0xC<32>
	branch Mem1396[r9_1067:word32] != 5<32> l0000E330
l0000D586:
	word32 r8_1446 = Mem1396[r9_1067 + 4<i32>:word32]
	branch r8_1446 >= 0<32> l0000D5A4
l0000D5A4:
	Mem1449[r7_1003 + -772<i32>:word32] = r8_1446
	Mem1451[r7_1003 + -776<i32>:word32] = 1<32>
l0000D58C:
	Mem1458[r7_1003 + -780<i32>:word32] = Mem1396[r7_1003 + -780<i32>:word32] | 2<u32>
	Mem1459[r7_1003 + -772<i32>:word32] = -r8_1446
	Mem1460[r7_1003 + -776<i32>:word32] = 1<32>
l0000D55E:
	Mem1462[r7_1003 + -772<i32>:word32] = 0<32>
	Mem1463[r7_1003 + -776<i32>:word32] = 0<32>
l0000D5F0:
	r10_1049 = Mem1465[r7_1003 + -744<i32>:word32]
	r9_1067 = Mem1465[r10_1049 + -16<i32>:word32]
	r12_1006 = Mem1465[r10_1049 + -12<i32>:word32]
	branch r9_1067 == r12_1006 l0000D666
l0000D600:
	word32 r8_1471 = Mem1465[r10_1049 + -8<i32>:word32]
	branch r8_1471 == 0xFFFFFFFF<32> l0000D622
l0000D622:
	r10_1049 = r9_1067 + 1<32>
	r1 = 0<32>
l0000D654:
	branch r10_1049 != r12_1006 l0000D62A
l0000D62A:
	r11_1016 = CONVERT(Mem1465[r10_1049:byte], byte, word32)
	branch r1 <=u Mem1465[0x0000D63A<p32>:word32] l0000D63C
l0000D63C:
	r9_1067 = r1 * 0xA<32>
l0000D634:
	r9_1067 = 0xFFFFFFFF<32>
l0000D644:
	r1 = r9_1067 + (r11_1016 - 0x30<32>)
	branch r1 >=u r9_1067 l0000D652
l0000D64E_1:
	r1 = 0xFFFFFFFF<32>
l0000D652:
	r10_1049 = r10_1049 + 1<32>
l0000D608:
	r9_1067 = lr_1004 + r8_1471 * 0xC<32>
	branch Mem1465[r9_1067:word32] != 5<32> l0000E330
l0000D618:
	word32 r8_1512 = Mem1465[r9_1067 + 4<i32>:word32]
	branch r8_1512 < 0<32> l0000D666
l0000D666:
	r1 = 0<32>
	r9_1067 = 0xE<32>
	r3_122 = 0<32>
l0000D61E:
	r1 = r8_1512
l0000D658:
	branch r1 <u 0xF<32> l0000D65E
l0000D65A_1:
	r9_1067 = r1
l0000D65E:
	branch r1 >=u 0xF<32> l0000D662
l0000D65E_1:
	r9_1067 = 0xE<32>
l0000D662:
	r3_122 = 1<32>
l0000D66C:
	word32 r8_1532 = r9_1067 + 0xC<32>
	branch r8_1532 >=u r9_1067 l0000D678
l0000D678:
	r9_1067 = Mem1465[r7_1003 + -772<i32>:word32]
	branch r8_1532 >=u r9_1067 l0000D682
l0000D67E_1:
	r8_1532 = r9_1067
l0000D674:
	r8_1532 = 0xFFFFFFFF<32>
l0000D682:
	word32 r12_1554 = r8_1532 + 1<32>
	Mem1556[r7_1003 + -732<i32>:word32] = r12_1554
	branch r12_1554 <u r8_1532 l0000E630
l0000D690:
	word32 pc_1685
	branch r12_1554 >u 0x2BC<32> l0000D6A2
l0000D6A2:
	r10_1049 = Mem1556[r7_1003 + -732<i32>:word32]
	branch r10_1049 == 0xFFFFFFFF<32> l0000E630
l0000D6AC:
	word32 r12_1681
	byte VNZC_1686
	call Mem1556[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_1389,pc:pc_1685,r0:r0_509,r1:r1_1594,r10:r10_1561,r11:r11_1646,r12:r10_1561,r2:r2_528,r3:r3_1612,r4:r4_1394,r5:r5_1392,r6:r6_500,r7:r7_402,r9:r9_1655,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_1679,pc:pc_1685,r0:r0_1671,r1:r1_1672,r10:r10_1680,r11:r11_1682,r12:r12_1681,r2:r2_1673,r3:r3_1674,r4:r4_1675,r5:r5_1676,r6:r6_1677,r7:r7_1678,r9:r9_1683,sp:sp_1670,VNZC:VNZC_1686
	branch SLICE(VNZC_1686, bool, 1) l0000E630
l0000D6B6:
	Mem1688[r7_1003 + -768<i32>:word32] = r12_1681
	pc = pc_1685
l0000D698:
	Mem1691[r7_1003 + -768<i32>:word32] = r7_1003 - 0x2D8<32>
l0000D6BA:
	word32 r9_3059
	word32 r8_2509
	word32 r9_2508
	word32 r10_3073
	word32 r10_2373
	word32 r11_1695 = Mem1693[r7_1003 + -8<i32>:word32]
	word32 r12_1696 = Mem1693[Mem1693[r7_1003 + -744<i32>:word32]:word32]
	branch r5_1001 != 0xC<32> l0000D9A6
l0000D9A6:
	word64 r5_r4_1703 = Mem1693[r11_1695 + r12_1696 * 0xC<32> + 4<i32>:word64]
	word32 r4_1704 = SLICE(r5_r4_1703, word32, 0)
	word32 r5_1706 = SLICE(r5_r4_1703, word32, 32)
	branch fn00010CFC(pc, out r12_1006, out lr_1004) l0000D9F6
l0000D9F6:
	word32 pc_1746
	branch fn0000F278(r5_r4_1703, r7_1003, pc, out pc_1746) l0000DA16
l0000DA16:
	branch Test(NE,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000DA2E
l0000DA2E:
	branch Test(EQ,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000DA42
l0000DA42:
	Mem1760[r7_1003 + -824<i32>:word32] = Mem1693[r7_1003 + -768<i32>:word32]
	word32 r12_1761 = Mem1760[r7_1003 + -824<i32>:word32]
	Mem1763[r12_1761:byte] = 0x20<8>
	Mem1765[r7_1003 + -824<i32>:word32] = r12_1761 + 1<i32>
l0000DA38:
	Mem1767[r7_1003 + -824<i32>:word32] = Mem1693[r7_1003 + -768<i32>:word32]
l0000DA20:
	word32 r10_1768 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem1770[r10_1768:byte] = 0x2B<8>
	Mem1772[r7_1003 + -824<i32>:word32] = r10_1768 + 1<i32>
l0000DA00:
	word32 r11_1774 = Mem1693[r7_1003 + -768<i32>:word32]
	r5_1706 = r5_1706 ^ Mem1693[0x0000DAC4<p32>:word32]
	Mem1779[r11_1774:byte] = 0x2D<8>
	Mem1781[r7_1003 + -824<i32>:word32] = r11_1774 + 1<i32>
l0000DA56:
	word32 r12_1790
	word32 lr_6151
	word32 r9_6150
	branch __avr32_f64_cmp_lt(r4_1704, r5_1706, 0<32>, 0<32>, out r9_6150, out r12_1790, out lr_6151) l0000DAD8
l0000DAD8:
	Mem1800[r7_1003 + -756<i32>:word64] = 0<64>
	Mem1801[r7_1003 + -4<i32>:word32] = r12_1790
l0000DA64:
	word32 r10_1807
	word32 r11_1808
	word32 r8_6152
	word32 r9_6153
	word32 r5_1810 = __avr32_f64_add(r4_1704, r5_1706, r4_1704, r5_1706, out r6_1002, out r7_1003, out r8_6152, out r9_6153, out r10_1807, out r11_1808, out lr_1004)
	branch __avr32_f64_cmp_eq(r4_1704, r5_1810, r10_1807, r11_1808, out r12_1006) l0000DAB2
l0000DAB2:
	fn0000E684(r4_1704, r5_1810, r7_1003 - 4<32>, pc_1746)
	word64 r11_r10_6104 = <invalid>
	Mem1844[r7_1003 + -756<i32>:word64] = r11_r10_6104
l0000DAE4:
	branch r3_122 == 0<32> l0000DBB8
l0000DAE8:
	branch r1 >u 0xD<32> l0000DBB8
l0000DAEE:
	word64 r5_r4_1857 = Mem1856[r7_1003 + -756<i32>:word64]
	word32 r4_1859 = SLICE(r5_r4_1857, word32, 0)
	word32 r5_1861 = SLICE(r5_r4_1857, word32, 32)
	word32 r0_1858 = r1
l0000DAF4:
	word32 r12_1864 = __avr32_f64_to_s32(r4_1859, r5_1861)
	Mem1871[r7_1003 + -816<i32>:word32] = r12_1864
	word32 lr_1872
	word32 r11_1874
	word32 r10_1887
	word32 r11_1888
	word32 lr_6173
	word32 r8_6171
	word32 r9_6172
	word32 r6_6170
	__avr32_f64_sub(__avr32_s32_to_f64(r12_1864, out r11_1874, out lr_1872), r11_1874, r4_1859, r5_1861, lr_1872, out r6_6170, out r7_1003, out r8_6171, out r9_6172, out r10_1887, out r11_1888, out lr_6173)
	branch r0_1858 != 0<32> l0000DB6E
l0000DB6E:
	word64 r9_r8_1905 = Mem1871[pc_1746 + 322<i32>:word64]
	r0_1858 = r0_1858 - 1<32>
	word32 r11_1912
	r4_1859 = __avr32_f64_mul(SLICE(r9_r8_1905, word32, 0), SLICE(r9_r8_1905, word32, 32), r10_1887, r11_1888, out r11_1912)
	r5_1861 = r11_1912
l0000DB18:
	word32 lr_1935
	word32 r8_1943
	branch Test(NE,Mem1871[r7_1003 + 0xFFFFFCD0<32>:bool]) l0000DB3A
l0000DB3A:
	word64 r11_r10_1927 = Mem1871[pc_1746 + -114<i32>:word64]
	word32 r8_1940 = r0_1858
	word32 r12_6157
	word32 r9_6156
	branch __avr32_f64_cmp_lt(r10_1887, r11_1888, SLICE(r11_r10_1927, word32, 0), SLICE(r11_r10_1927, word32, 32), out r9_6156, out r12_6157, out lr_1935) l0000DB4C
l0000DB48_1:
	r8_1940 = 1<32>
l0000DB4C:
	r8_1943 = CONVERT(SLICE(r8_1940, byte, 0), byte, word32)
l0000DB22:
	word64 r9_r8_1945 = Mem1871[pc_1746 + -90<i32>:word64]
	word32 r5_1958 = r0_1858
	word32 r12_6158
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_1945, word32, 0), SLICE(r9_r8_1945, word32, 32), r10_1887, r11_1888, out r12_6158, out lr_1935) l0000DB34
l0000DB30_1:
	r5_1958 = 1<32>
l0000DB34:
	r8_1943 = SLICE(r5_1958, byte, 0)
l0000DB4E:
	word32 r5_1977
	word32 r4_1973
	branch r8_1943 == 0<32> l0000DB64
l0000DB64:
	r4_1973 = r10_1887
	r5_1977 = r11_1888 ^ Mem1871[0x0000DCA8<p32>:word32]
l0000DB52:
	word64 r11_r10_1982 = Mem1871[pc_1746 + -130<i32>:word64]
	word32 r10_1991
	word32 r11_1992
	word32 r9_6161
	word32 r6_6159
	word32 r8_6160
	word32 lr_6162
	__avr32_f64_sub(r10_1887, r11_1888, SLICE(r11_r10_1982, word32, 0), SLICE(r11_r10_1982, word32, 32), lr_1935, out r6_6159, out r7_1003, out r8_6160, out r9_6161, out r10_1991, out r11_1992, out lr_6162)
	r4_1973 = r10_1991
	r5_1977 = r11_1992
l0000DB80:
	word32 r12_6163
	branch __avr32_f64_cmp_eq(0<32>, 0<32>, r4_1973, r5_1977, out r12_6163) l0000DBA8
l0000DB8E:
	word32 r3_2023 = r1
l0000DBA4:
	branch r3_2023 != 0<32> l0000DB92
l0000DB92:
	word64 r9_r8_2029 = Mem1871[pc_1746 + 294<i32>:word64]
	r3_2023 = r3_2023 - 1<32>
	word32 r11_2037
	r4_1973 = __avr32_f64_mul(SLICE(r9_r8_2029, word32, 0), SLICE(r9_r8_2029, word32, 32), r4_1973, r5_1977, out r11_2037)
	r5_1977 = r11_2037
l0000DBA8:
	word64 r11_r10_2058 = Mem1871[r7_1003 + -756<i32>:word64]
	word32 lr_6169
	word32 r11_6168
	word32 r10_6167
	word32 r8_6165
	word32 r9_6166
	word32 r6_6164
	__avr32_f64_add(r4_1973, r5_1977, SLICE(r11_r10_2058, word32, 0), SLICE(r11_r10_2058, word32, 32), out r6_6164, out r7_1003, out r8_6165, out r9_6166, out r10_6167, out r11_6168, out lr_6169)
	word64 r11_r10_6105 = <invalid>
	Mem2079[r7_1003 + -756<i32>:word64] = r11_r10_6105
l0000DBB8:
	word32 r9_2149
	word32 r9_2082 = Mem2081[r7_1003 + -824<i32>:word32]
	Mem2084[r9_2082:byte] = 0x30<8>
	word32 r12_2086 = Mem2084[r7_1003 + -740<i32>:word32]
	Mem2087[r7_1003 + -824<i32>:word32] = r9_2082 + 1<i32>
	word64 r11_r10_2089 = Mem2087[r7_1003 + -756<i32>:word64]
	Mem2092[r9_2082 + 1<i32>:byte] = SLICE(CONVERT(Mem2087[r12_2086:byte], byte, word32) + 0x17<32>, byte, 0)
	word32 lr_2106
	word32 r11_2108
	word32 r10_2107 = __avr32_s32_to_f64(__avr32_f64_to_s32(SLICE(r11_r10_2089, word32, 0), SLICE(r11_r10_2089, word32, 32)), out r11_2108, out lr_2106)
	word64 r11_r10_2120 = Mem2092[r7_1003 + -756<i32>:word64]
	word32 r10_2124
	word32 r11_2125
	word32 r9_6155
	word32 r8_6154
	word32 r7_2129
	word32 r6_2128
	word32 lr_2123
	word32 r5_2127 = __avr32_f64_sub(r10_2107, r11_2108, SLICE(r11_r10_2120, word32, 0), SLICE(r11_r10_2120, word32, 32), lr_2106, out r6_2128, out r7_2129, out r8_6154, out r9_6155, out r10_2124, out r11_2125, out lr_2123)
	Mem2136[r9_2082 + 2<i32>:byte] = SLICE(r5_2127, byte, 0)
	word32 r4_2137 = r9_2082 + 3<i32>
	word32 r2_2139 = r10_2124
	word32 r3_2140 = r11_2125
	branch Test(EQ,Mem2136[r7_2129 + 0xFFFFFCF4<32>:bool]) l0000DC10
l0000DBFE:
	word32 r12_6174
	branch __avr32_f64_cmp_lt(r10_2124, r11_2125, 0<32>, 0<32>, out r9_2149, out r12_6174, out lr_2123) l0000DC10
l0000DC0C:
	branch r1 == 0<32> l0000DC8C
l0000DC10:
	Mem2172[r9_2082 + 3<i32>:byte] = SLICE(fn0000D204(r9_2082 + 3<i32>, r5_2127, r6_2128, r7_2129, lr_2123), byte, 0)
	word32 r5_2174 = r9_2082 + 4<i32>
l0000DC6A:
	word32 r9_6175
	word32 r12_6176
	branch __avr32_f64_cmp_lt(r2_2139, r3_2140, 0<32>, 0<32>, out r9_6175, out r12_6176, out lr_2123) l0000DC1A
l0000DC1A:
	word32 r9_2223
	word64 r9_r8_2191 = Mem2190[pc_1746 + 150<i32>:word64]
	word32 r11_2197
	word32 r10_2196 = __avr32_f64_mul(SLICE(r9_r8_2191, word32, 0), SLICE(r9_r8_2191, word32, 32), r2_2139, r3_2140, out r11_2197)
	word32 r12_2210 = __avr32_f64_to_s32(r10_2196, r11_2197)
	branch r12_2210 > 9<32> l0000DC3A
l0000DC3A:
	r9_2223 = SLICE(CONVERT(Mem2190[Mem2190[r7_2129 + -740<i32>:word32]:byte], byte, word32) - 0xA<32>, byte, 0)
l0000DC36:
	r9_2223 = 0x30<32>
l0000DC46:
	Mem2234[r5_2174:byte] = SLICE(r9_2223 + r12_2210, byte, 0)
	word32 r8_2231 = r1 - 1<32>
	branch r1 == 0<32> l0000DC54
l0000DC50_1:
	r1 = r8_2231
l0000DC54:
	word32 lr_2239
	word32 r11_2241
	word32 r10_2261
	word32 r11_2262
	word32 r9_6178
	word32 r8_6177
	word32 lr_6179
	r5_2174 = __avr32_f64_sub(__avr32_s32_to_f64(r12_2210, out r11_2241, out lr_2239), r11_2241, r10_2196, r11_2197, lr_2239, out r6_2128, out r7_2129, out r8_6177, out r9_6178, out r10_2261, out r11_2262, out lr_6179)
	r2_2139 = r10_2261
	r3_2140 = r11_2262
l0000DC78:
	r9_2149 = r5_2174
	r5_2127 = r5_2174
l0000DC84:
	branch r1 != 0<32> l0000DC7E
l0000DC7E:
	Mem2284[r5_2127:byte] = 0x30<8>
	r1 = r1 - 1<32>
	r5_2127 = r5_2127 + 1<i32>
l0000DC88:
	r4_2137 = r5_2174 + r1
l0000DC8C:
	word32 r10_2294 = Mem2292[r7_2129 + -740<i32>:word32]
	word32 r11_2298 = Mem2292[r6_2128 + 344<i32>:word32]
	Mem2303[r4_2137:byte] = SLICE(CONVERT(Mem2292[r10_2294:byte], byte, word32) + 0xF<32>, byte, 0)
	word32 r8_2305 = Mem2303[r7_2129 + -4<i32>:word32]
	Mem2325[sp_118 - 4<i32>:word32] = r8_2305
	word32 r4_2304 = r4_2137 + 1<i32>
	word32 r4_2346
	word32 pc_2356
	call Mem2325[r6_2128 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_2338,pc:pc_2356,r0:r9_2082 + 2<i32>,r1:r1_2332,r10:r10_2294,r11:r11_2298,r12:r4_2304,r2:r2_2333,r3:r3_2335,r4:r4_2304,r5:r5_2337,r6:r6_2295,r7:r7_2290,r8:r8_2305,r9:r9_2340,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_2350,pc:pc_2356,r0:r0_2342,r1:r1_2343,r11:r11_2353,r12:r12_2352,r2:r2_2344,r3:r3_2345,r4:r4_2346,r6:r6_2348,r7:r7_2349
	r5_1001 = r4_2346
l0000DCC2:
	branch Mem2325[r5_1001:byte] != 0<8> l0000DCC0
l0000DCC0:
	r5_1001 = r5_1001 + 1<32>
l0000D9C0:
	r11_1016 = CONVERT(Mem1693[Mem1693[r7_1003 + -740<i32>:word32]:byte], byte, word32)
	r10_2373 = Mem1693[r7_1003 + -768<i32>:word32] + 1<32>
	branch SLICE(r11_1016 - 0x41<32>, byte, 0) != 0<8> l0000D9E8
l0000D9E8:
	r12_1006 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem2378[r12_1006:byte] = 0x6E<8>
l0000D9D4:
	Mem2381[Mem1693[r7_1003 + -768<i32>:word32]:byte] = 0x4E<8>
l0000D6CA:
	word64 r5_r4_2385 = Mem1693[r11_1695 + r12_1696 * 0xC<32> + 4<i32>:word64]
	word32 r4_2386 = SLICE(r5_r4_2385, word32, 0)
	word32 r5_2388 = SLICE(r5_r4_2385, word32, 32)
	branch fn00010CFC(pc, out r12_1006, out lr_1004) l0000D70C
l0000D70C:
	word32 pc_2411
	branch fn0000F278(r5_r4_2385, r7_1003, pc, out pc_2411) l0000D72C
l0000D72C:
	branch Test(NE,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000D744
l0000D744:
	branch Test(EQ,Mem1693[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000D758
l0000D758:
	word32 r12_2424 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem2426[r12_2424:byte] = 0x20<8>
	Mem2428[r7_1003 + -824<i32>:word32] = r12_2424 + 1<i32>
l0000D74E:
	Mem2430[r7_1003 + -824<i32>:word32] = Mem1693[r7_1003 + -768<i32>:word32]
l0000D736:
	word32 r9_2431 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem2433[r9_2431:byte] = 0x2B<8>
	Mem2435[r7_1003 + -824<i32>:word32] = r9_2431 + 1<i32>
l0000D716:
	word32 r10_2440 = Mem1693[r7_1003 + -768<i32>:word32]
	r5_2388 = r5_2388 ^ Mem1693[0x0000D856<p32>:word32]
	Mem2442[r10_2440:byte] = 0x2D<8>
	Mem2444[r7_1003 + -824<i32>:word32] = r10_2440 + 1<i32>
l0000D764:
	word32 lr_6121
	word32 r12_2453
	word32 r9_6120
	branch __avr32_f64_cmp_lt(r4_2386, r5_2388, 0<32>, 0<32>, out r9_6120, out r12_2453, out lr_6121) l0000D79C
l0000D79C:
	Mem2463[r7_1003 + -764<i32>:word64] = 0<64>
	Mem2464[r7_1003 + -4<i32>:word32] = r12_2453
l0000D772:
	word32 r10_2470
	word32 r11_2471
	word32 r8_6122
	word32 r9_6123
	word32 r5_2473 = __avr32_f64_add(r4_2386, r5_2388, r4_2386, r5_2388, out r6_1002, out r7_1003, out r8_6122, out r9_6123, out r10_2470, out r11_2471, out lr_1004)
	branch __avr32_f64_cmp_eq(r4_2386, r5_2473, r10_2470, r11_2471, out r12_1006) l0000DA7A
l0000DA7A:
	r11_1016 = Mem2492[r7_1003 + -740<i32>:word32]
	word32 r10_2496 = Mem2492[r7_1003 + -824<i32>:word32]
	branch SLICE(CONVERT(Mem2492[r11_1016:byte], byte, word32) - 0x41<32>, byte, 0) != 0<8> l0000DAA0
l0000DAA0:
	r12_1006 = Mem2492[r7_1003 + -824<i32>:word32]
	Mem2504[r12_1006:byte] = 0x69<8>
	Mem2506[r10_2496 + 1<32>:byte] = 0x6E<8>
	r9_2508 = 0x66<32>
	r8_2509 = r10_2496 + 2<32>
l0000DA8E:
	Mem2512[Mem2492[r7_1003 + -824<i32>:word32]:byte] = 0x49<8>
	Mem2514[r10_2496 + 1<32>:byte] = 0x4E<8>
	r9_2508 = 0x46<32>
	r8_2509 = r10_2496 + 2<32>
l0000D78A:
	fn0000E868(r4_2386, r5_2473, r7_1003 - 4<32>, pc_2411)
	word64 r11_r10_6102 = <invalid>
	Mem2534[r7_1003 + -764<i32>:word64] = r11_r10_6102
l0000D7A8:
	branch r3_122 == 0<32> l0000D8A2
l0000D7AC:
	branch r1 >u 0xD<32> l0000D8A2
l0000D7B2:
	word64 r5_r4_2545 = Mem2544[r7_1003 + -764<i32>:word64]
	word32 r4_2547 = SLICE(r5_r4_2545, word32, 0)
	word32 r5_2549 = SLICE(r5_r4_2545, word32, 32)
	word32 r0_2546 = r1
l0000D7B8:
	word32 r12_2552 = __avr32_f64_to_s32(r4_2547, r5_2549)
	Mem2559[r7_1003 + -812<i32>:word32] = r12_2552
	word32 lr_2560
	word32 r11_2562
	word32 r10_2575
	word32 r11_2576
	word32 r8_6141
	word32 r9_6142
	word32 lr_6143
	word32 r6_6140
	__avr32_f64_sub(__avr32_s32_to_f64(r12_2552, out r11_2562, out lr_2560), r11_2562, r4_2547, r5_2549, lr_2560, out r6_6140, out r7_1003, out r8_6141, out r9_6142, out r10_2575, out r11_2576, out lr_6143)
	branch r0_2546 != 0<32> l0000D832
l0000D832:
	word64 r9_r8_2593 = Mem2559[pc_2411 + 66<i32>:word64]
	r0_2546 = r0_2546 - 1<32>
	word32 r11_2600
	r4_2547 = __avr32_f64_mul(SLICE(r9_r8_2593, word32, 0), SLICE(r9_r8_2593, word32, 32), r10_2575, r11_2576, out r11_2600)
	r5_2549 = r11_2600
l0000D7DC:
	word32 lr_2623
	word32 r8_2631
	branch Test(NE,Mem2559[r7_1003 + 0xFFFFFCD4<32>:bool]) l0000D7FE
l0000D7FE:
	word64 r11_r10_2615 = Mem2559[pc_2411 + 94<i32>:word64]
	word32 r8_2628 = r0_2546
	word32 r12_6127
	word32 r9_6126
	branch __avr32_f64_cmp_lt(r10_2575, r11_2576, SLICE(r11_r10_2615, word32, 0), SLICE(r11_r10_2615, word32, 32), out r9_6126, out r12_6127, out lr_2623) l0000D810
l0000D80C_1:
	r8_2628 = 1<32>
l0000D810:
	r8_2631 = CONVERT(SLICE(r8_2628, byte, 0), byte, word32)
l0000D7E6:
	word64 r9_r8_2633 = Mem2559[pc_2411 + 118<i32>:word64]
	word32 r5_2646 = r0_2546
	word32 r12_6128
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_2633, word32, 0), SLICE(r9_r8_2633, word32, 32), r10_2575, r11_2576, out r12_6128, out lr_2623) l0000D7F8
l0000D7F4_1:
	r5_2646 = 1<32>
l0000D7F8:
	r8_2631 = SLICE(r5_2646, byte, 0)
l0000D812:
	word32 r5_2665
	word32 r4_2661
	branch r8_2631 == 0<32> l0000D828
l0000D828:
	r4_2661 = r10_2575
	r5_2665 = r11_2576 ^ Mem2559[0x0000D858<p32>:word32]
l0000D816:
	word64 r11_r10_2670 = Mem2559[pc_2411 + 78<i32>:word64]
	word32 r10_2679
	word32 r11_2680
	word32 r9_6131
	word32 r8_6130
	word32 lr_6132
	word32 r6_6129
	__avr32_f64_sub(r10_2575, r11_2576, SLICE(r11_r10_2670, word32, 0), SLICE(r11_r10_2670, word32, 32), lr_2623, out r6_6129, out r7_1003, out r8_6130, out r9_6131, out r10_2679, out r11_2680, out lr_6132)
	r4_2661 = r10_2679
	r5_2665 = r11_2680
l0000D844:
	word32 r12_6133
	branch __avr32_f64_cmp_eq(0<32>, 0<32>, r4_2661, r5_2665, out r12_6133) l0000D892
l0000D852:
	word32 r3_2711 = r1
l0000D88E:
	branch r3_2711 != 0<32> l0000D87C
l0000D87C:
	word64 r9_r8_2717 = Mem2559[pc_2411 + -16<i32>:word64]
	r3_2711 = r3_2711 - 1<32>
	word32 r11_2725
	r4_2661 = __avr32_f64_mul(SLICE(r9_r8_2717, word32, 0), SLICE(r9_r8_2717, word32, 32), r4_2661, r5_2665, out r11_2725)
	r5_2665 = r11_2725
l0000D892:
	word64 r11_r10_2746 = Mem2559[r7_1003 + -764<i32>:word64]
	word32 r10_6137
	word32 lr_6139
	word32 r8_6135
	word32 r9_6136
	word32 r6_6134
	word32 r11_6138
	__avr32_f64_add(r4_2661, r5_2665, SLICE(r11_r10_2746, word32, 0), SLICE(r11_r10_2746, word32, 32), out r6_6134, out r7_1003, out r8_6135, out r9_6136, out r10_6137, out r11_6138, out lr_6139)
	word64 r11_r10_6103 = <invalid>
	Mem2767[r7_1003 + -764<i32>:word64] = r11_r10_6103
l0000D8A2:
	word32 r9_2837
	word32 r9_2770 = Mem2769[r7_1003 + -824<i32>:word32]
	Mem2772[r9_2770:byte] = 0x30<8>
	word32 r12_2774 = Mem2772[r7_1003 + -740<i32>:word32]
	Mem2775[r7_1003 + -824<i32>:word32] = r9_2770 + 1<i32>
	word64 r11_r10_2777 = Mem2775[r7_1003 + -764<i32>:word64]
	Mem2780[r9_2770 + 1<i32>:byte] = SLICE(CONVERT(Mem2775[r12_2774:byte], byte, word32) + 0x17<32>, byte, 0)
	word32 lr_2794
	word32 r11_2796
	word32 r10_2795 = __avr32_s32_to_f64(__avr32_f64_to_s32(SLICE(r11_r10_2777, word32, 0), SLICE(r11_r10_2777, word32, 32)), out r11_2796, out lr_2794)
	word64 r11_r10_2808 = Mem2780[r7_1003 + -764<i32>:word64]
	word32 r9_6125
	word32 r10_2812
	word32 r11_2813
	word32 r8_6124
	word32 r7_2817
	word32 r6_2816
	word32 lr_2811
	word32 r5_2815 = __avr32_f64_sub(r10_2795, r11_2796, SLICE(r11_r10_2808, word32, 0), SLICE(r11_r10_2808, word32, 32), lr_2794, out r6_2816, out r7_2817, out r8_6124, out r9_6125, out r10_2812, out r11_2813, out lr_2811)
	Mem2824[r9_2770 + 2<i32>:byte] = SLICE(r5_2815, byte, 0)
	word32 r4_2825 = r9_2770 + 3<i32>
	word32 r2_2827 = r10_2812
	word32 r3_2828 = r11_2813
	branch Test(EQ,Mem2824[r7_2817 + 0xFFFFFCF4<32>:bool]) l0000D8FA
l0000D8E8:
	word32 r12_6144
	branch __avr32_f64_cmp_lt(r10_2812, r11_2813, 0<32>, 0<32>, out r9_2837, out r12_6144, out lr_2811) l0000D8FA
l0000D8F6:
	branch r1 == 0<32> l0000D976
l0000D8FA:
	Mem2860[r9_2770 + 3<i32>:byte] = SLICE(fn0000D204(r9_2770 + 3<i32>, r5_2815, r6_2816, r7_2817, lr_2811), byte, 0)
	word32 r5_2862 = r9_2770 + 4<i32>
l0000D954:
	word32 r9_6145
	word32 r12_6146
	branch __avr32_f64_cmp_lt(r2_2827, r3_2828, 0<32>, 0<32>, out r9_6145, out r12_6146, out lr_2811) l0000D904
l0000D904:
	word32 r9_2911
	word64 r9_r8_2879 = Mem2878[pc_2411 + -144<i32>:word64]
	word32 r11_2885
	word32 r10_2884 = __avr32_f64_mul(SLICE(r9_r8_2879, word32, 0), SLICE(r9_r8_2879, word32, 32), r2_2827, r3_2828, out r11_2885)
	word32 r12_2898 = __avr32_f64_to_s32(r10_2884, r11_2885)
	branch r12_2898 > 9<32> l0000D924
l0000D924:
	r9_2911 = SLICE(CONVERT(Mem2878[Mem2878[r7_2817 + -740<i32>:word32]:byte], byte, word32) - 0xA<32>, byte, 0)
l0000D920:
	r9_2911 = 0x30<32>
l0000D930:
	Mem2922[r5_2862:byte] = SLICE(r9_2911 + r12_2898, byte, 0)
	word32 r8_2919 = r1 - 1<32>
	branch r1 == 0<32> l0000D93E
l0000D93A_1:
	r1 = r8_2919
l0000D93E:
	word32 lr_2927
	word32 r11_2929
	word32 r10_2949
	word32 r11_2950
	word32 r9_6148
	word32 r8_6147
	word32 lr_6149
	r5_2862 = __avr32_f64_sub(__avr32_s32_to_f64(r12_2898, out r11_2929, out lr_2927), r11_2929, r10_2884, r11_2885, lr_2927, out r6_2816, out r7_2817, out r8_6147, out r9_6148, out r10_2949, out r11_2950, out lr_6149)
	r2_2827 = r10_2949
	r3_2828 = r11_2950
l0000D962:
	r9_2837 = r5_2862
	r5_2815 = r5_2862
l0000D96E:
	branch r1 != 0<32> l0000D968
l0000D968:
	Mem2972[r5_2815:byte] = 0x30<8>
	r1 = r1 - 1<32>
	r5_2815 = r5_2815 + 1<i32>
l0000D972:
	r4_2825 = r5_2862 + r1
l0000D976:
	word32 r10_2982 = Mem2980[r7_2817 + -740<i32>:word32]
	word32 r11_2986 = Mem2980[r6_2816 + 344<i32>:word32]
	Mem2991[r4_2825:byte] = SLICE(CONVERT(Mem2980[r10_2982:byte], byte, word32) + 0xF<32>, byte, 0)
	word32 r8_2993 = Mem2991[r7_2817 + -4<i32>:word32]
	Mem3012[sp_118 - 4<i32>:word32] = r8_2993
	word32 r4_2992 = r4_2825 + 1<i32>
	word32 r4_3033
	word32 pc_3043
	call Mem3012[r6_2816 + 100<i32>:word32] (retsize: 0;)
		uses: lr:lr_3025,pc:pc_3043,r0:r9_2770 + 2<i32>,r1:r1_3019,r10:r10_2982,r11:r11_2986,r12:r4_2992,r2:r2_3020,r3:r3_3022,r4:r4_2992,r5:r5_3024,r6:r6_2983,r7:r7_2978,r8:r8_2993,r9:r9_3027,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3037,pc:pc_3043,r0:r0_3029,r1:r1_3030,r11:r11_3040,r12:r12_3039,r2:r2_3031,r3:r3_3032,r4:r4_3033,r6:r6_3035,r7:r7_3036
	r5_1001 = r4_3033
l0000D998:
	branch Mem3012[r5_1001:byte] != 0<8> l0000D996
l0000D996:
	r5_1001 = r5_1001 + 1<32>
l0000D9A2:
l0000DCCC:
	r9_3059 = r0
l0000D6E4:
	r11_1016 = CONVERT(Mem1693[Mem1693[r7_1003 + -740<i32>:word32]:byte], byte, word32)
	r10_2373 = Mem1693[r7_1003 + -768<i32>:word32] + 1<32>
	branch SLICE(r11_1016 - 0x41<32>, byte, 0) != 0<8> l0000D702
l0000D702:
	r11_1016 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem3069[r11_1016:byte] = 0x6E<8>
l0000D9F0:
	Mem3072[r10_2373:byte] = 0x61<8>
	r9_2508 = 0x6E<32>
	r10_3073 = r10_2373 + 1<i32>
l0000D6F8:
	r12_1006 = Mem1693[r7_1003 + -768<i32>:word32]
	Mem3076[r12_1006:byte] = 0x4E<8>
l0000D9DC:
	Mem3079[r10_2373:byte] = SLICE(r11_1016, byte, 0)
	r9_2508 = 0x4E<32>
	r10_3073 = r10_2373 + 1<i32>
l0000D9DE:
	r8_2509 = r10_3073
l0000D9E0:
	Mem3088[r8_2509:byte] = SLICE(r9_2508, byte, 0)
	r9_3059 = 0<32>
	r5_1001 = r8_2509 + 1<i32>
l0000DCCE:
	branch Mem3100[r7_1003 + -776<i32>:word32] == 0<32> l0000DD50
l0000DCD6:
	r12_1006 = Mem3100[r7_1003 + -768<i32>:word32]
	r11_1016 = Mem3100[r7_1003 + -772<i32>:word32]
	word32 r8_3109 = r5_1001 - r12_1006
	branch r8_3109 >=u r11_1016 l0000DD50
l0000DCE6:
	word32 r10_3113 = r11_1016 - r8_3109
	r12_1006 = r5_1001 + r10_3113
	branch (Mem3100[r7_1003 + -780<i32>:word32] & 2<32>) != 0<32> l0000DD00
l0000DD00:
	branch r10_3113 != 0<32> l0000DCFA
l0000DCFA:
	Mem3127[r5_1001:byte] = 0x20<8>
	r10_3113 = r10_3113 - 1<32>
	r5_1001 = r5_1001 + 1<i32>
l0000DD04:
l0000DCF8:
l0000DD06:
	branch Test(NE,Mem3100[r7_1003 + 0xFFFFFCF4<32>:bool]) l0000DD14
l0000DD10:
	branch r9_3059 != 0<32> l0000DD18
l0000DD18:
	r11_1016 = r12_1006
l0000DD20:
	branch r5_1001 >u r9_3059 l0000DD1C
l0000DD1C:
	r5_1001 = r5_1001 - 1<i32>
	r11_1016 = r11_1016 - 1<i32>
	Mem3147[r11_1016:byte] = Mem3142[r5_1001:byte]
l0000DD26:
l0000DD2E:
	branch r10_3113 != 0<32> l0000DD28
l0000DD28:
	Mem3155[r5_1001:byte] = 0x30<8>
	r10_3113 = r10_3113 - 1<32>
	r5_1001 = r5_1001 + 1<i32>
l0000DD32:
l0000DD14:
	word32 r9_3158 = r12_1006
l0000DD38:
	r11_1016 = Mem3160[r7_1003 + -768<i32>:word32]
	branch r5_1001 >u r11_1016 l0000DD34
l0000DD34:
	r5_1001 = r5_1001 - 1<i32>
	r9_3158 = r9_3158 - 1<i32>
	Mem3170[r9_3158:byte] = Mem3160[r5_1001:byte]
l0000DD42:
l0000DD4A:
	branch r10_3113 != 0<32> l0000DD44
l0000DD44:
	Mem3178[r5_1001:byte] = 0x20<8>
	r10_3113 = r10_3113 - 1<32>
	r5_1001 = r5_1001 + 1<i32>
l0000DD4E:
	r5_1001 = r12_1006
l0000DD50:
	r10_1049 = Mem3193[r7_1003 + -768<i32>:word32]
	r9_1067 = Mem3193[r7_1003 + -732<i32>:word32]
	r4_1012 = r5_1001 - r10_1049
	branch r4_1012 >=u r9_1067 l0000E330
l0000DD62:
	word32 r12_3205 = Mem3193[r7_1003 + -784<i32>:word32]
	branch r4_1012 <u Mem3193[r7_1003 + -736<i32>:word32] - r12_3205 l0000DDFE
l0000DD70:
	r10_1049 = r4_1012 + r12_3205
	r11_1016 = Mem3193[r7_1003 + -736<i32>:word32]
	branch r10_1049 >=u r12_3205 l0000DD7E
l0000DD7A_1:
	r10_1049 = 0xFFFFFFFF<32>
l0000DD7E:
	branch r10_1049 <=u r11_1016 l0000DDFE
l0000DD84:
	branch r11_1016 != 0<32> l0000DD8C
l0000DD8C:
	word32 r8_3222 = Mem3193[r7_1003 + -736<i32>:word32]
	r9_1067 = Mem3193[r7_1003 + -736<i32>:word32]
	branch r9_1067 < 0<32> l0000DD9C
l0000DD98_1:
	r12_3205 = r8_3222 << 1<i32>
l0000DD9C:
	branch r9_1067 >= 0<32> l0000DDA0
l0000DD9C_1:
	r12_3205 = 0xFFFFFFFF<32>
l0000DD88:
	r12_3205 = 0xC<32>
l0000DDA0:
	branch r12_3205 >=u r10_1049 l0000DDA6
l0000DDA2_1:
	r12_3205 = r10_1049
l0000DDA6:
	Mem3243[r7_1003 + -736<i32>:word32] = r12_3205
	branch r12_3205 == 0xFFFFFFFF<32> l0000E630
l0000DDB0:
	word32 r12_3411
	word32 r8_3246 = Mem3243[r7_1003 + -788<i32>:word32]
	word32 r3_3250 = CONVERT(r8_3246 == Mem3243[r7_1003 + -804<i32>:word32], bool, word32)
	branch r3_3250 != 0<32> l0000DDC4
l0000DDC0:
	branch r8_3246 != 0<32> l0000DDCE
l0000DDCE:
	word32 pc_3415
	call Mem3243[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_3357,pc:pc_3415,r0:r0_3283,r1:r1_3304,r10:r10_3214,r11:Mem3243[r7_3092 + -736<i32>:word32],r12:Mem3243[r7_3092 + -788<i32>:word32],r2:r2_3325,r3:r3_3250,r4:r4_3201,r5:r5_3200,r6:r6_3261,r7:r7_3092,r9:r9_3376,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3409,pc:pc_3415,r0:r0_3401,r1:r1_3402,r10:r10_3410,r11:r11_3412,r12:r12_3411,r2:r2_3403,r3:r3_3404,r4:r4_3405,r6:r6_3407,r7:r7_3408,r9:r9_3413
l0000DDC4:
	word32 pc_3450
	call Mem3243[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_3357,pc:pc_3450,r0:r0_3283,r1:r1_3304,r10:r10_3214,r11:r11_3210,r12:Mem3243[r7_3092 + -736<i32>:word32],r2:r2_3325,r3:r3_3250,r4:r4_3201,r5:r5_3200,r6:r6_3261,r7:r7_3092,r9:r9_3376,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3444,pc:pc_3450,r0:r0_3436,r1:r1_3437,r10:r10_3445,r11:r11_3447,r12:r12_3446,r2:r2_3438,r3:r3_3439,r4:r4_3440,r6:r6_3442,r7:r7_3443,r9:r9_3448
l0000DDDA:
	r5_1001 = r12_3411
	branch r12_3411 == 0<32> l0000E630
l0000DDE2:
	branch r3_122 == 0<32> l0000DDFA
l0000DDE6:
	branch Mem3243[r7_1003 + -784<i32>:word32] == 0<32> l0000DDFA
l0000DDEE:
	word32 pc_3489
	call Mem3243[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_3471,pc:pc_3489,r0:r0_3467,r1:r1_3468,r10:Mem3243[r7_3459 + -784<i32>:word32],r11:Mem3243[r7_3459 + -788<i32>:word32],r12:r12_3452,r2:r2_3469,r3:r3_3456,r4:r4_3470,r5:r12_3452,r6:r6_3466,r7:r7_3459,r9:r9_3472,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3483,pc:pc_3489,r0:r0_3475,r1:r1_3476,r2:r2_3477,r3:r3_3478,r4:r4_3479,r5:r5_3480,r6:r6_3481,r7:r7_3482
l0000DDFA:
	Mem3493[r7_1003 + -788<i32>:word32] = r5_1001
l0000DDFE:
	word32 pc_3573
	word32 r9_3497 = Mem3495[r7_1003 + -784<i32>:word32]
	word32 r10_3547
	word32 r11_3549
	word32 r9_3550
	word32 pc_3552
	word32 r4_3542
	call Mem3495[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_3533,pc:pc_3552,r0:r0_3506,r1:r1_3508,r10:r4_3499,r11:Mem3495[r7_3494 + -768<i32>:word32],r12:Mem3495[r7_3494 + -788<i32>:word32] + r9_3497,r2:r2_3510,r3:r3_3512,r4:r4_3499,r5:r5_3532,r6:r6_3504,r7:r7_3494,r9:r9_3497,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3546,pc:pc_3552,r0:r0_3538,r1:r1_3539,r10:r10_3547,r11:r11_3549,r2:r2_3540,r3:r3_3541,r4:r4_3542,r5:r5_3543,r6:r6_3544,r7:r7_3545,r9:r9_3550,sp:sp_3537
	word32 r12_3554 = Mem3495[r7_1003 + -768<i32>:word32]
	pc = pc_3552
	branch r12_3554 == r7_1003 - 0x2D8<32> l0000DE22
l0000DE1E:
	call Mem3495[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3546,pc:pc_3573,r0:r0_3538,r1:r1_3539,r10:r10_3547,r11:r11_3549,r12:r12_3554,r2:r2_3540,r3:r3_3541,r4:r4_3542,r5:r5_3543,r6:r6_3544,r7:r7_3545,r9:r9_3550,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3567,pc:pc_3573,r0:r0_3559,r1:r1_3560,r2:r2_3561,r3:r3_3562,r4:r4_3563,r5:r5_3564,r6:r6_3565,r7:r7_3566,sp:sp_3558
	pc = pc_3573
l0000DE22:
	Mem3581[r7_1003 + -784<i32>:word32] = Mem3495[r7_1003 + -784<i32>:word32] + r4_3542
l0000D4B2:
	r12_1006 = Mem403[r7_1003 + -8<i32>:word32] + r12_1006 * 0xC<32>
	word32 r8_3585 = Mem403[r12_1006:word32]
	r9_1067 = r8_3585 - 0x12<32>
	branch r8_3585 >u 0x16<32> l0000E330
l0000D4CA:
	switch (r8_3585 - 0x12<32>) { l0000D4D4 l0000D4D8 l0000D4DC l0000D4E0 l0000D4E4 }
l0000D4E4:
l0000D518:
	word32 r9_3591 = Mem403[r12_1006 + 4<i32>:word32]
	Mem3593[r9_3591:word32] = 0<32>
	Mem3595[r9_3591 + 4<i32>:word32] = Mem3593[r7_1003 + -784<i32>:word32]
l0000D4E0:
l0000D50C:
	Mem3598[Mem403[r12_1006 + 4<i32>:word32]:word32] = Mem403[r7_1003 + -784<i32>:word32]
l0000D4DC:
l0000D500:
	Mem3601[Mem403[r12_1006 + 4<i32>:word32]:word32] = Mem403[r7_1003 + -784<i32>:word32]
l0000D4D8:
l0000D4F4:
	Mem3604[Mem403[r12_1006 + 4<i32>:word32]:word16] = Mem403[r7_1003 + 0xFFFFFCF0<32>:word16]
l0000D4D4:
l0000D4E8:
	Mem3607[Mem403[r12_1006 + 4<i32>:word32]:byte] = Mem403[r7_1003 + 0xFFFFFCF0<32>:byte]
l0000D3FA:
	branch r12_1006 != 0xFFFFFFFF<32> l0000E330
l0000E330:
	call Mem3611[r6_1002 + 76<i32>:word32] (retsize: 0;)
		uses: lr:lr_3619,pc:pc_3640,r0:r0_3612,r1:r1_3613,r10:r10_3620,r11:r11_3622,r12:r12_3621,r2:r2_3614,r3:r3_3615,r4:r4_3616,r5:r5_3617,r6:r6_3610,r7:r7_3618,r9:r9_3623,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3634,pc:pc_3640,r0:r0_3626,r1:r1_3627,r10:r10_3635,r12:r12_3636,r2:r2_3628,r3:r3_3629,r4:r4_3630,r5:r5_3631,r6:r6_3632,r7:r7_3633,sp:sp_3625
	pc = pc_3640
l0000E334:
	branch r12_1006 <= r10_1049 l0000E396
l0000E33A:
l0000E392:
	Mem3648[r7_1003 + -4<i32>:word32] = r12_1006
l0000E396:
	word32 r9_3653 = Mem3651[r7_1003 + -4<i32>:word32]
	branch r9_3653 >= 0<32> l0000E3E2
l0000E3E2:
	r12_3656 = Mem3651[r7_1003 + -824<i32>:word32]
	branch r9_3653 + 1<32> <u r12_3656 l0000E49E
l0000E49E:
	Mem3663[r7_1003 + -784<i32>:word32] = Mem3651[r7_1003 + -784<i32>:word32] + r9_3653
l0000E3EE:
	branch r12_3656 == Mem3651[0x0000E556<p32>:word32] l0000E5EC
l0000E5EC:
	word32 r12_3667 = Mem3651[r7_1003 + -788<i32>:word32]
	word32 r11_3668 = Mem3651[r7_1003 + -804<i32>:word32]
	branch r12_3667 == r11_3668 l0000E600
l0000E5F8:
	branch r12_3667 == 0<32> l0000E600
l0000E5FC:
	word32 pc_3717
	call Mem3651[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3694,pc:pc_3717,r0:r0_3676,r1:r1_3679,r10:r10_3697,r11:r11_3668,r12:r12_3667,r2:r2_3682,r3:r3_3685,r4:r4_3688,r5:r5_3691,r6:r6_3673,r7:r7_3649,r9:r9_3653,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3711,pc:pc_3717,r0:r0_3703,r1:r1_3704,r11:r11_3714,r2:r2_3705,r3:r3_3706,r4:r4_3707,r5:r5_3708,r6:r6_3709,r7:r7_3710,r9:r9_3715
l0000E600:
	word32 r10_3721 = Mem3651[r7_1003 + -796<i32>:word32]
	branch r10_3721 == 0<32> l0000E60E
l0000E608:
	word32 pc_3751
	call Mem3651[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3732,pc:pc_3751,r0:r0_3726,r1:r1_3727,r10:r10_3721,r11:r11_3733,r12:r10_3721,r2:r2_3728,r3:r3_3729,r4:r4_3730,r5:r5_3731,r6:r6_3725,r7:r7_3719,r9:r9_3734,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3745,pc:pc_3751,r0:r0_3737,r1:r1_3738,r10:r10_3746,r11:r11_3748,r2:r2_3739,r3:r3_3740,r4:r4_3741,r5:r5_3742,r6:r6_3743,r7:r7_3744,r9:r9_3749
l0000E60E:
	word32 pc_3783
	word32 r6_3775
	word32 r0_3769
	word32 r1_3770
	word32 r2_3771
	word32 r3_3772
	word32 r4_3773
	word32 r5_3774
	word32 r7_3776
	word32 lr_3777
	word32 r10_3778
	word32 r11_3780
	word32 r9_3781
	call Mem3651[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3763,pc:pc_3783,r0:r0_3757,r1:r1_3758,r10:r10_3764,r11:r11_3765,r12:Mem3651[r7_3753 + -24<i32>:word32],r2:r2_3759,r3:r3_3760,r4:r4_3761,r5:r5_3762,r6:r6_3756,r7:r7_3753,r9:r9_3766,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3777,pc:pc_3783,r0:r0_3769,r1:r1_3770,r10:r10_3778,r11:r11_3780,r2:r2_3771,r3:r3_3772,r4:r4_3773,r5:r5_3774,r6:r6_3775,r7:r7_3776,r9:r9_3781
	word32 r12_3785 = Mem3651[r7_3776 + -8<i32>:word32]
	branch r12_3785 == 0<32> l0000E622
l0000E61E:
	word32 pc_3803
	call Mem3651[r6_3775 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3777,pc:pc_3803,r0:r0_3769,r1:r1_3770,r10:r10_3778,r11:r11_3780,r12:r12_3785,r2:r2_3771,r3:r3_3772,r4:r4_3773,r5:r5_3774,r6:r6_3775,r7:r7_3776,r9:r9_3781,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3797,pc:pc_3803,r0:r0_3789,r1:r1_3790,r10:r10_3798,r11:r11_3800,r12:r12_3799,r2:r2_3791,r3:r3_3792,r4:r4_3793,r5:r5_3794,r6:r6_3795,r7:r7_3796,r9:r9_3801
l0000E622:
	call Mem3651[r6_3775 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_3814,pc:pc_3835,r0:r0_3807,r1:r1_3808,r10:r10_3815,r11:r11_3817,r12:r12_3816,r2:r2_3809,r3:r3_3810,r4:r4_3811,r5:r5_3812,r6:r6_3805,r7:r7_3813,r9:r9_3818,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3829,pc:pc_3835,r12:r12_3831,r7:r7_3828
	Mem3839[r7_1003 + -788<i32>:word32] = 0<32>
	r8_3838 = 0x4B<32>
l0000E3F6:
	r11_1016 = Mem3651[r7_1003 + -784<i32>:word32]
	r10_1049 = Mem3651[r7_1003 + -736<i32>:word32]
	word32 r8_3844 = r9_3653 + 2<32> + r11_1016
	r9_1067 = Mem3651[r7_1003 + -736<i32>:word32] << 1<i32>
	branch r10_1049 >= 0<32> l0000E410
l0000E40C_1:
	r9_1067 = 0xFFFFFFFF<32>
l0000E410:
	branch r8_3844 >=u r11_1016 l0000E416
l0000E412_1:
	r8_3844 = 0xFFFFFFFF<32>
l0000E416:
	branch r8_3844 <u r9_1067 l0000E41C
l0000E418_1:
	r9_1067 = r8_3844
l0000E41C:
	branch r9_1067 <=u r10_1049 l0000E038
l0000E422:
	branch r10_1049 != 0<32> l0000E42A
l0000E42A:
	word32 r8_3874 = Mem3651[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem3651[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000E43A
l0000E436_1:
	r12_3656 = r8_3874 << 1<i32>
l0000E43A:
	branch r11_1016 >= 0<32> l0000E43E
l0000E43A_1:
	r12_3656 = 0xFFFFFFFF<32>
l0000E426:
	r12_3656 = 0xC<32>
l0000E43E:
	branch r12_3656 >=u r9_1067 l0000E444
l0000E440_1:
	r12_3656 = r9_1067
l0000E444:
	Mem3895[r7_1003 + -736<i32>:word32] = r12_3656
	branch r12_3656 == 0xFFFFFFFF<32> l0000E630
l0000E44E:
	word32 r12_3928
	word32 r10_3898 = Mem3895[r7_1003 + -788<i32>:word32]
	word32 r9_3899 = Mem3895[r7_1003 + -804<i32>:word32]
	word32 r4_3902 = CONVERT(r10_3898 == r9_3899, bool, word32)
	branch r4_3902 != 0<32> l0000E462
l0000E45E:
	branch r10_3898 != 0<32> l0000E46C
l0000E46C:
	word32 pc_3932
	call Mem3895[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_3915,pc:pc_3932,r0:r0_3910,r1:r1_3911,r10:r10_3898,r11:Mem3895[r7_3894 + -736<i32>:word32],r12:Mem3895[r7_3894 + -788<i32>:word32],r2:r2_3912,r3:r3_3913,r4:r4_3902,r5:r5_3914,r6:r6_3909,r7:r7_3894,r9:r9_3899,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3926,pc:pc_3932,r0:r0_3918,r1:r1_3919,r10:r10_3927,r11:r11_3929,r12:r12_3928,r2:r2_3920,r3:r3_3921,r4:r4_3922,r6:r6_3924,r7:r7_3925,r9:r9_3930,sp:sp_3917
l0000E462:
	word32 pc_3965
	call Mem3895[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_3915,pc:pc_3965,r0:r0_3910,r1:r1_3911,r10:r10_3898,r11:r11_3947,r12:Mem3895[r7_3894 + -736<i32>:word32],r2:r2_3912,r3:r3_3913,r4:r4_3902,r5:r5_3914,r6:r6_3909,r7:r7_3894,r9:r9_3899,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3959,pc:pc_3965,r0:r0_3951,r1:r1_3952,r10:r10_3960,r11:r11_3962,r12:r12_3961,r2:r2_3953,r3:r3_3954,r4:r4_3955,r6:r6_3957,r7:r7_3958,r9:r9_3963,sp:sp_3950
l0000E478:
	r5_1001 = r12_3928
	branch r12_3928 == 0<32> l0000E630
l0000E480:
	branch r4_1012 == 0<32> l0000E496
l0000E484:
	word32 r8_3976 = Mem3895[r7_1003 + -784<i32>:word32]
	branch r8_3976 == 0<32> l0000E496
l0000E48C:
	word32 pc_4004
	call Mem3895[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_3986,pc:pc_4004,r0:r0_3982,r1:r1_3983,r10:r8_3976,r11:Mem3895[r7_3974 + -788<i32>:word32],r12:r12_3967,r2:r2_3984,r3:r3_3985,r4:r4_3971,r5:r12_3967,r6:r6_3981,r7:r7_3974,r9:r9_3987,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_3998,pc:pc_4004,r0:r0_3990,r1:r1_3991,r10:r10_3999,r11:r11_4001,r2:r2_3992,r3:r3_3993,r4:r4_3994,r5:r5_3995,r6:r6_3996,r7:r7_3997,sp:sp_3989
l0000E496:
	Mem4008[r7_1003 + -788<i32>:word32] = r5_1001
l0000E038:
	Mem4011[r7_1003 + -4<i32>:word32] = 0xFFFFFFFF<32>
	r12_1006 = Mem4011[r7_1003 + -784<i32>:word32]
	word32 r8_4014 = Mem4011[r7_1003 + -736<i32>:word32] - r12_1006
	Mem4016[r7_1003 + -824<i32>:word32] = r8_4014
	branch r8_4014 >= 0<32> l0000E054
l0000E04E:
	r11_1016 = Mem4016[0x0000E1B6<p32>:word32]
	Mem4019[r7_1003 + -824<i32>:word32] = r11_1016
l0000E054:
	word32 r9_4022 = Mem4021[r7_1003 + -748<i32>:word32]
	r9_1067 = r9_4022 - 1<32>
	branch r9_4022 >u 0x11<32> l0000E330
l0000E060:
	word64 r5_r4_4033
	word64 r5_r4_4128
	word32 r11_4049
	word32 r12_4050
	word32 r10_4048
	word32 r11_4041
	word32 r12_4042
	word32 r10_4040
	word32 r11_4057
	word32 r12_4058
	word32 r10_4056
	word32 r5_4122
	word32 r4_4123
	word32 pc_4500
	word32 pc_4430
	word32 pc_4361
	word32 pc_4280
	r10_1049 = Mem4021[r7_1003 + -744<i32>:word32]
	r11_1016 = Mem4021[r7_1003 + -8<i32>:word32]
	r12_1006 = Mem4021[r10_1049:word32]
	switch (r9_4022 - 1<32>) { l0000E074 l0000E078 l0000E07C l0000E080 l0000E084 l0000E088 l0000E08C l0000E090 l0000E094 l0000E098 l0000E09C l0000E0A0 l0000E0A4 l0000E0A8 l0000E0AC l0000E0B0 l0000E0B4 }
l0000E0B4:
l0000E0B0:
l0000E0AC:
l0000E0A8:
l0000E0A4:
l0000E0A0:
l0000E214:
	r5_r4_4033 = Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4033, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4033, word32, 0) (alias)
	branch r2 == 0<32> l0000E230
l0000E230:
	r10_4040 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4041 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4042 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
l0000E224:
	branch r2 == 1<32> l0000E24C
l0000E24C:
	r9_1067 = Mem4021[r7_1003 + -784<i32>:word32]
	r10_4048 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4049 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4050 = Mem4021[r7_1003 + -788<i32>:word32] + r9_1067
l0000E228:
	branch r2 != 2<32> l0000E330
l0000E22E:
l0000E268:
	r10_4056 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4057 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4058 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
l0000E09C:
l0000E1BC:
	r5_r4_4033 = Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4033, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4033, word32, 0) (alias)
	branch r2 == 0<32> l0000E1D8
l0000E1D8:
	r9_1067 = Mem4021[r7_1003 + -784<i32>:word32]
	r10_4040 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4041 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4042 = Mem4021[r7_1003 + -788<i32>:word32] + r9_1067
l0000E242:
	word32 sp_4077 = sp_118 - 4<i32>
	Mem4078[sp_4077:word32] = r7_1003 - 4<32>
	Mem4087[sp_4077 - 8<i32>:word64] = r5_r4_4033
	r4_1012 = SLICE(r5_r4_4033, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4033, word32, 32) (alias)
l0000E1CC:
	branch r2 == 1<32> l0000E1EC
l0000E1EC:
	r10_4048 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4049 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4050 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
l0000E25E:
	word32 sp_4100 = sp_118 - 4<i32>
	Mem4101[sp_4100:word32] = r7_1003 - 4<32>
	Mem4106[sp_4100 - 8<i32>:word64] = r5_r4_4033
	r4_1012 = SLICE(r5_r4_4033, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4033, word32, 32) (alias)
l0000E1D0:
	branch r2 != 2<32> l0000E330
l0000E1D6:
l0000E200:
	r9_1067 = Mem4021[r7_1003 + -784<i32>:word32]
	r10_4056 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4057 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4058 = Mem4021[r7_1003 + -788<i32>:word32] + r9_1067
l0000E27A:
	word32 sp_4119 = sp_118 - 4<i32>
	Mem4120[sp_4119:word32] = r7_1003 - 4<32>
	Mem4125[sp_4119 - 8<i32>:word64] = r5_r4_4033
	r4_4123 = SLICE(r5_r4_4033, word32, 0) (alias)
	r5_4122 = SLICE(r5_r4_4033, word32, 32) (alias)
l0000E098:
l0000E150:
	r5_r4_4128 = Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4128, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4128, word32, 0) (alias)
	branch r2 == 0<32> l0000E16C
l0000E16C:
	r10_4040 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4041 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4042 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
l0000E160:
	branch r2 == 1<32> l0000E180
l0000E180:
	r9_1067 = Mem4021[r7_1003 + -784<i32>:word32]
	r10_4048 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4049 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4050 = Mem4021[r7_1003 + -788<i32>:word32] + r9_1067
l0000E164:
	branch r2 != 2<32> l0000E330
l0000E16A:
l0000E19C:
	r10_4056 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4057 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4058 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
l0000E094:
l0000E0EA:
	r5_r4_4128 = Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word64]
	r5_1001 = SLICE(r5_r4_4128, word32, 32) (alias)
	r4_1012 = SLICE(r5_r4_4128, word32, 0) (alias)
	branch r2 == 0<32> l0000E106
l0000E106:
	r9_1067 = Mem4021[r7_1003 + -784<i32>:word32]
	r10_4040 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4041 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4042 = Mem4021[r7_1003 + -788<i32>:word32] + r9_1067
l0000E118:
	word32 sp_4168 = sp_118 - 4<i32>
	Mem4169[sp_4168:word32] = r7_1003 - 4<32>
	Mem4178[sp_4168 - 8<i32>:word64] = r5_r4_4128
	r4_1012 = SLICE(r5_r4_4128, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4128, word32, 32) (alias)
l0000E0FA:
	branch r2 == 1<32> l0000E128
l0000E128:
	r10_4048 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4049 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4050 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
l0000E192:
	word32 sp_4191 = sp_118 - 4<i32>
	Mem4192[sp_4191:word32] = r7_1003 - 4<32>
	Mem4197[sp_4191 - 8<i32>:word64] = r5_r4_4128
	r4_1012 = SLICE(r5_r4_4128, word32, 0) (alias)
	r5_1001 = SLICE(r5_r4_4128, word32, 32) (alias)
l0000E0FE:
	branch r2 != 2<32> l0000E330
l0000E104:
l0000E13C:
	r9_1067 = Mem4021[r7_1003 + -784<i32>:word32]
	r10_4056 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4057 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4058 = Mem4021[r7_1003 + -788<i32>:word32] + r9_1067
l0000E1AE:
	word32 sp_4210 = sp_118 - 4<i32>
	Mem4211[sp_4210:word32] = r7_1003 - 4<32>
	Mem4216[sp_4210 - 8<i32>:word64] = r5_r4_4128
	r4_4123 = SLICE(r5_r4_4128, word32, 0) (alias)
	r5_4122 = SLICE(r5_r4_4128, word32, 32) (alias)
l0000E282:
	word32 sp_4217 = sp_118 - 12<i32>
	Mem4224[sp_4217 - 4<i32>:word32] = r1
	Mem4231[sp_4217 - 8<i32>:word32] = r3_122
	word32 sp_4265
	call Mem4231[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4251,pc:pc_4280,r0:r0_4240,r1:r1_4222,r10:r10_4253,r11:r11_4259,r12:r12_4256,r2:r2_4035,r3:r3_4229,r4:r4_4245,r5:r5_4246,r6:r6_4235,r7:r7_4010,r9:r9_4262,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4274,pc:pc_4280,r0:r0_4266,r1:r1_4267,r11:r11_4277,r12:r12_4276,r2:r2_4268,r3:r3_4269,r4:r4_4270,r5:r5_4271,r6:r6_4272,r7:r7_4273,sp:sp_4265
	sp_118 = sp_4265 + 0x14<32>
	pc = pc_4280
l0000E090:
l0000E08C:
l0000E088:
l0000E084:
l0000E28E:
	r9_1067 = Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:word32]
l0000E080:
l0000E0DE:
	r9_1067 = CONVERT(Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:uint16], uint16, word32)
l0000E07C:
l0000E0D2:
	r9_1067 = CONVERT(Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:int16], int16, int32)
l0000E078:
l0000E0C6:
	r9_1067 = CONVERT(Mem4021[r11_1016 + r12_1006 * 0xC<32> + -4<i32>:byte], byte, word32)
l0000E074:
l0000E0B8:
	r9_1067 = CONVERT(Mem4021[r11_1016 + r12_1006 * 0xC<32> + 4<i32>:int8], int8, int32)
l0000E298:
	branch r2 == 0<32> l0000E2A6
l0000E2A6:
	word32 r10_4316 = Mem4021[r7_1003 + -800<i32>:word32]
	word32 r11_4317 = Mem4021[r7_1003 + -824<i32>:word32]
	word32 r12_4318 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
	word32 r8_4319 = r7_1003 - 4<32>
	word32 sp_4323 = sp_118 - 4<i32>
	Mem4324[sp_4323:word32] = r8_4319
	Mem4327[sp_4323 - 4<i32>:word32] = r9_1067
	word32 sp_4346
	call Mem4327[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4251,pc:pc_4361,r0:r0_4240,r1:r1_4222,r10:r10_4316,r11:r11_4317,r12:r12_4318,r2:r2_4035,r3:r3_4229,r4:r4_4339,r5:r5_4343,r6:r6_4235,r7:r7_4010,r8:r8_4319,r9:r9_4326,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4355,pc:pc_4361,r0:r0_4347,r1:r1_4348,r11:r11_4358,r12:r12_4357,r2:r2_4349,r3:r3_4350,r4:r4_4351,r5:r5_4352,r6:r6_4353,r7:r7_4354,sp:sp_4346
	sp_118 = sp_4346 + 8<32>
	pc = pc_4361
l0000E29C:
	branch r2 == 1<32> l0000E2C8
l0000E2C8:
	r10_4040 = Mem4021[r7_1003 + -800<i32>:word32]
	r11_4041 = Mem4021[r7_1003 + -824<i32>:word32]
	r12_4042 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
	word32 sp_4374 = sp_118 - 4<i32>
	Mem4375[sp_4374:word32] = r7_1003 - 4<32>
	Mem4377[sp_4374 - 4<i32>:word32] = r9_1067
	Mem4379[sp_4374 - 8<i32>:word32] = r3_122
l0000E120:
	word32 sp_4415
	call Mem4383[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4251,pc:pc_4430,r0:r0_4240,r1:r1_4222,r10:r10_4402,r11:r11_4408,r12:r12_4405,r2:r2_4035,r3:r3_4229,r4:r4_4396,r5:r5_4397,r6:r6_4235,r7:r7_4010,r9:r9_4411,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4424,pc:pc_4430,r0:r0_4416,r1:r1_4417,r11:r11_4427,r12:r12_4426,r2:r2_4418,r3:r3_4419,r4:r4_4420,r5:r5_4421,r6:r6_4422,r7:r7_4423,sp:sp_4415
	sp_118 = sp_4415 + 0xC<32>
	pc = pc_4430
l0000E2A0:
	branch r2 != 2<32> l0000E330
l0000E2A4:
l0000E2E6:
	r10_4048 = Mem4021[r7_1003 + -800<i32>:word32]
	r12_4050 = Mem4021[r7_1003 + -788<i32>:word32] + Mem4021[r7_1003 + -784<i32>:word32]
	r11_4049 = Mem4021[r7_1003 + -824<i32>:word32]
	word32 sp_4443 = sp_118 - 4<i32>
	Mem4444[sp_4443:word32] = r7_1003 - 4<32>
	Mem4446[sp_4443 - 4<i32>:word32] = r9_1067
	Mem4448[sp_4443 - 8<i32>:word32] = r1
l0000E302:
	Mem4454[sp_118 - 16<i32>:word32] = r3_122
	word32 sp_4485
	call Mem4454[r6_1002 + 204<i32>:word32] (retsize: 0;)
		uses: lr:lr_4251,pc:pc_4500,r0:r0_4240,r1:r1_4222,r10:r10_4473,r11:r11_4479,r12:r12_4476,r2:r2_4035,r3:r3_4229,r4:r4_4467,r5:r5_4468,r6:r6_4235,r7:r7_4010,r9:r9_4482,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4494,pc:pc_4500,r0:r0_4486,r1:r1_4487,r11:r11_4497,r12:r12_4496,r2:r2_4488,r3:r3_4489,r4:r4_4490,r5:r5_4491,r6:r6_4492,r7:r7_4493,sp:sp_4485
	sp_118 = sp_4485 + 0x10<32>
	pc = pc_4500
l0000E30A:
	r10_1049 = Mem4505[r7_1003 + -4<i32>:word32]
	branch r10_1049 < 0<32> l0000E33C
l0000E33C:
	r9_1067 = 0<32>
	branch Mem4505[r0:byte] == 0<8> l0000E34A
l0000E34A:
	branch r12_1006 >= 0<32> l0000E392
l0000E34E:
	r12_3656 = Mem4505[r7_1003 + -736<i32>:word32]
	word32 r8_4519 = Mem4505[r7_1003 + -736<i32>:word32] << 1<i32>
	branch r12_3656 >= 0<32> l0000E35E
l0000E35A_1:
	r8_4519 = 0xFFFFFFFF<32>
l0000E35E:
	r10_1049 = r8_4519 + 0xC<32>
	branch r10_1049 >=u r8_4519 l0000E368
l0000E364_1:
	r10_1049 = 0xFFFFFFFF<32>
l0000E368:
	branch r10_1049 <=u r12_3656 l0000E038
l0000E36E:
	branch r12_3656 != 0<32> l0000E376
l0000E376:
	word32 r8_4539 = Mem4505[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem4505[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000E386
l0000E382_1:
	r12_3656 = r8_4539 << 1<i32>
l0000E386:
	branch r11_1016 >= 0<32> l0000E38A
l0000E386_1:
	r12_3656 = 0xFFFFFFFF<32>
l0000E372:
	r12_3656 = 0xC<32>
l0000E38A:
	branch r12_3656 >=u r10_1049 l0000E390
l0000E38C_1:
	r12_3656 = r10_1049
l0000E390:
l0000E346:
	Mem4555[r0:byte] = 0<8>
l0000E312:
	r11_1016 = Mem4505[r7_1003 + -824<i32>:word32]
	branch r10_1049 >=u r11_1016 l0000E334
l0000E31A:
	r9_1067 = CONVERT(Mem4505[Mem4505[r7_1003 + -784<i32>:word32] + Mem4505[r7_1003 + -788<i32>:word32] + r10_1049:byte], byte, word32)
	branch SLICE(r9_1067, byte, 0) == 0<8> l0000E334
l0000E39E:
	word32 r12_4566 = Mem3651[r7_1003 + -788<i32>:word32]
	word32 r11_4567 = Mem3651[r7_1003 + -804<i32>:word32]
	branch r12_4566 == r11_4567 l0000E3B2
l0000E3AA:
	branch r12_4566 == 0<32> l0000E3B2
l0000E3AE:
	word32 pc_4587
	call Mem3651[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_3694,pc:pc_4587,r0:r0_3676,r1:r1_3679,r10:r10_3697,r11:r11_4567,r12:r12_4566,r2:r2_3682,r3:r3_3685,r4:r4_3688,r5:r5_3691,r6:r6_3673,r7:r7_3649,r9:r9_3653,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4581,pc:pc_4587,r0:r0_4573,r1:r1_4574,r11:r11_4584,r2:r2_4575,r3:r3_4576,r4:r4_4577,r5:r5_4578,r6:r6_4579,r7:r7_4580,r9:r9_4585
l0000E3B2:
	word32 r10_4591 = Mem3651[r7_1003 + -796<i32>:word32]
	branch r10_4591 == 0<32> l0000E3C0
l0000E3BA:
	word32 pc_4621
	call Mem3651[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4602,pc:pc_4621,r0:r0_4596,r1:r1_4597,r10:r10_4591,r11:r11_4603,r12:r10_4591,r2:r2_4598,r3:r3_4599,r4:r4_4600,r5:r5_4601,r6:r6_4595,r7:r7_4589,r9:r9_4604,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4615,pc:pc_4621,r0:r0_4607,r1:r1_4608,r10:r10_4616,r11:r11_4618,r2:r2_4609,r3:r3_4610,r4:r4_4611,r5:r5_4612,r6:r6_4613,r7:r7_4614,r9:r9_4619
l0000E3C0:
	word32 pc_4653
	word32 r6_4645
	word32 r0_4639
	word32 r1_4640
	word32 r2_4641
	word32 r3_4642
	word32 r4_4643
	word32 r5_4644
	word32 r7_4646
	word32 lr_4647
	word32 r10_4648
	word32 r11_4650
	word32 r9_4651
	call Mem3651[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4633,pc:pc_4653,r0:r0_4627,r1:r1_4628,r10:r10_4634,r11:r11_4635,r12:Mem3651[r7_4623 + -24<i32>:word32],r2:r2_4629,r3:r3_4630,r4:r4_4631,r5:r5_4632,r6:r6_4626,r7:r7_4623,r9:r9_4636,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4647,pc:pc_4653,r0:r0_4639,r1:r1_4640,r10:r10_4648,r11:r11_4650,r2:r2_4641,r3:r3_4642,r4:r4_4643,r5:r5_4644,r6:r6_4645,r7:r7_4646,r9:r9_4651
	word32 r12_4655 = Mem3651[r7_4646 + -8<i32>:word32]
	branch r12_4655 == 0<32> l0000E3D4
l0000E3D0:
	word32 pc_4673
	call Mem3651[r6_4645 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4647,pc:pc_4673,r0:r0_4639,r1:r1_4640,r10:r10_4648,r11:r11_4650,r12:r12_4655,r2:r2_4641,r3:r3_4642,r4:r4_4643,r5:r5_4644,r6:r6_4645,r7:r7_4646,r9:r9_4651,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4667,pc:pc_4673,r0:r0_4659,r1:r1_4660,r10:r10_4668,r11:r11_4670,r12:r12_4669,r2:r2_4661,r3:r3_4662,r4:r4_4663,r5:r5_4664,r6:r6_4665,r7:r7_4666,r9:r9_4671
l0000E3D4:
	call Mem3651[r6_4645 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_4684,pc:pc_4705,r0:r0_4677,r1:r1_4678,r10:r10_4685,r11:r11_4687,r12:r12_4686,r2:r2_4679,r3:r3_4680,r4:r4_4681,r5:r5_4682,r6:r6_4675,r7:r7_4683,r9:r9_4688,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4699,pc:pc_4705,r12:r12_4701,r7:r7_4698
	Mem4708[r7_1003 + -788<i32>:word32] = 0<32>
l0000D400:
	word32 r4_4709 = Mem403[r7_1003 + -784<i32>:word32]
	r9_1067 = Mem403[r7_1003 + -784<i32>:word32]
	r4_1012 = r4_4709 + 1<32>
	word32 r8_4712 = Mem403[r7_1003 + -736<i32>:word32]
	branch r4_4709 + 1<32> >=u r9_1067 l0000D414
l0000D410_1:
	r4_1012 = 0xFFFFFFFF<32>
l0000D414:
	branch r4_1012 <=u r8_4712 l0000D48E
l0000D41A:
	branch r8_4712 != 0<32> l0000D422
l0000D422:
	word32 r8_4724 = Mem403[r7_1003 + -736<i32>:word32]
	r11_1016 = Mem403[r7_1003 + -736<i32>:word32]
	branch r11_1016 < 0<32> l0000D432
l0000D42E_1:
	r12_1006 = r8_4724 << 1<i32>
l0000D41E:
	r12_1006 = 0xC<32>
l0000D432:
	branch r12_1006 >=u r4_1012 l0000D438
l0000D434_1:
	r12_1006 = r4_1012
l0000D438:
	Mem4740[r7_1003 + -736<i32>:word32] = r12_1006
	branch r12_1006 == 0xFFFFFFFF<32> l0000E630
l0000D442:
	word32 r12_4787
	word32 pc_4826
	word32 pc_4791
	word32 r10_4743 = Mem4740[r7_1003 + -788<i32>:word32]
	word32 r9_4744 = Mem4740[r7_1003 + -804<i32>:word32]
	word32 r3_4747 = CONVERT(r10_4743 == r9_4744, bool, word32)
	branch r3_4747 != 0<32> l0000D456
l0000D452:
	branch r10_4743 != 0<32> l0000D460
l0000D460:
	call Mem4740[r6_1002 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,pc:pc_4791,r0:r0_509,r1:r1_518,r10:r10_4743,r11:Mem4740[r7_402 + -736<i32>:word32],r12:Mem4740[r7_402 + -788<i32>:word32],r2:r2_528,r3:r3_4747,r4:r4_4716,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_4744,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4785,pc:pc_4791,r0:r0_4777,r1:r1_4778,r10:r10_4786,r11:r11_4788,r12:r12_4787,r2:r2_4779,r3:r3_4780,r4:r4_4781,r6:r6_4783,r7:r7_4784,r9:r9_4789,sp:sp_4776
	pc = pc_4791
l0000D456:
	call Mem4740[r6_1002 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_548,pc:pc_4826,r0:r0_509,r1:r1_518,r10:r10_4743,r11:r11_4807,r12:Mem4740[r7_402 + -736<i32>:word32],r2:r2_528,r3:r3_4747,r4:r4_4716,r5:r5_539,r6:r6_500,r7:r7_402,r9:r9_4744,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4820,pc:pc_4826,r0:r0_4812,r1:r1_4813,r10:r10_4821,r11:r11_4823,r12:r12_4822,r2:r2_4814,r3:r3_4815,r4:r4_4816,r6:r6_4818,r7:r7_4819,r9:r9_4824,sp:sp_4811
	pc = pc_4826
l0000D46C:
	r5_1001 = r12_4787
	branch r12_4787 == 0<32> l0000E630
l0000E630:
	word32 r8_4836 = Mem4834[r7_1003 + -788<i32>:word32]
	branch r8_4836 == Mem4834[r7_1003 + -804<i32>:word32] l0000E646
l0000E63C:
	branch r8_4836 == 0<32> l0000E646
l0000E640:
	word32 pc_4971
	call Mem4834[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4893,pc:pc_4971,r0:r0_4845,r1:r1_4847,r10:r10_4895,r11:r11_4926,r12:r8_4836,r2:r2_4849,r3:r3_4851,r4:r4_4862,r5:r5_4892,r6:r6_4843,r7:r7_4832,r9:r9_4933,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4965,pc:pc_4971,r0:r0_4957,r1:r1_4958,r10:r10_4966,r2:r2_4959,r3:r3_4960,r4:r4_4961,r5:r5_4962,r6:r6_4963,r7:r7_4964,r9:r9_4969
l0000E646:
	r11_130 = Mem4834[r7_1003 + -796<i32>:word32]
	branch r11_130 == 0<32> l0000E654
l0000E64E:
	word32 pc_5005
	call Mem4834[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_4986,pc:pc_5005,r0:r0_4980,r1:r1_4981,r10:r10_4987,r11:r11_4975,r12:r11_4975,r2:r2_4982,r3:r3_4983,r4:r4_4984,r5:r5_4985,r6:r6_4979,r7:r7_4973,r9:r9_4988,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_4999,pc:pc_5005,r0:r0_4991,r1:r1_4992,r10:r10_5000,r11:r11_5002,r2:r2_4993,r3:r3_4994,r4:r4_4995,r5:r5_4996,r6:r6_4997,r7:r7_4998,r9:r9_5003
l0000E654:
	word32 pc_5037
	word32 r6_5029
	word32 r0_5023
	word32 r1_5024
	word32 r2_5025
	word32 r3_5026
	word32 r4_5027
	word32 r5_5028
	word32 r7_5030
	word32 lr_5031
	word32 r10_5032
	word32 r11_5034
	word32 r9_5035
	call Mem5008[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_5017,pc:pc_5037,r0:r0_5011,r1:r1_5012,r10:r10_5018,r11:r11_5019,r12:Mem5008[r7_5007 + -24<i32>:word32],r2:r2_5013,r3:r3_5014,r4:r4_5015,r5:r5_5016,r6:r6_5010,r7:r7_5007,r9:r9_5020,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_5031,pc:pc_5037,r0:r0_5023,r1:r1_5024,r10:r10_5032,r11:r11_5034,r2:r2_5025,r3:r3_5026,r4:r4_5027,r5:r5_5028,r6:r6_5029,r7:r7_5030,r9:r9_5035
	word32 r12_5039 = Mem5008[r7_5030 + -8<i32>:word32]
	branch r12_5039 == 0<32> l0000E668
l0000E664:
	word32 pc_5057
	call Mem5008[r6_5029 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_5031,pc:pc_5057,r0:r0_5023,r1:r1_5024,r10:r10_5032,r11:r11_5034,r12:r12_5039,r2:r2_5025,r3:r3_5026,r4:r4_5027,r5:r5_5028,r6:r6_5029,r7:r7_5030,r9:r9_5035,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_5051,pc:pc_5057,r0:r0_5043,r1:r1_5044,r10:r10_5052,r11:r11_5054,r12:r12_5053,r2:r2_5045,r3:r3_5046,r4:r4_5047,r5:r5_5048,r6:r6_5049,r7:r7_5050,r9:r9_5055
l0000E668:
	call Mem5008[r6_5029 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_5068,pc:pc_5089,r0:r0_5061,r1:r1_5062,r10:r10_5069,r11:r11_5071,r12:r12_5070,r2:r2_5063,r3:r3_5064,r4:r4_5065,r5:r5_5066,r6:r6_5059,r7:r7_5067,r9:r9_5072,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_5083,pc:pc_5089,r12:r12_5085,r7:r7_5082
	Mem5093[r7_1003 + -788<i32>:word32] = 0<32>
	r8_3838 = 0xC<32>
l0000D474:
	word32 pc_5116
	branch r3_122 == 0<32> l0000D48A
l0000D478:
	word32 r8_5096 = Mem4740[r7_1003 + -784<i32>:word32]
	branch r8_5096 == 0<32> l0000D48A
l0000D480:
	call Mem4740[r6_1002 + 36<i32>:word32] (retsize: 0;)
		uses: lr:lr_4894,pc:pc_5116,r0:r0_4846,r1:r1_4848,r10:r8_5096,r11:Mem4740[r7_4833 + -788<i32>:word32],r12:r12_4828,r2:r2_4850,r3:r3_4858,r4:r4_4863,r5:r12_4828,r6:r6_4844,r7:r7_4833,r9:r9_4940,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_5110,pc:pc_5116,r0:r0_5102,r1:r1_5103,r2:r2_5104,r3:r3_5105,r4:r4_5106,r5:r5_5107,r6:r6_5108,r7:r7_5109,sp:sp_5101
	pc = pc_5116
l0000D48A:
	Mem5120[r7_1003 + -788<i32>:word32] = r5_1001
l0000D48E:
	Mem5126[Mem5122[r7_1003 + -784<i32>:word32]:byte] = 0x25<8>
	Mem5129[r7_1003 + -784<i32>:word32] = r4_1012
l0000E4A8:
	word32 r11_5132 = Mem5131[r7_1003 + -744<i32>:word32]
	word32 r9_5134 = Mem5131[r7_1003 + -740<i32>:word32]
	r4_1012 = Mem5131[r11_5132 + -36<i32>:word32]
	Mem5140[r7_1003 + -792<i32>:word32] = Mem5131[r7_1003 + -792<i32>:word32] + 1<32>
	Mem5141[r7_1003 + -744<i32>:word32] = r11_5132 + 0x2C<32>
	Mem5142[r7_1003 + -740<i32>:word32] = r9_5134 + 0x2C<32>
	r11_1016 = r11_5132 + 0x2C<32>
l0000D262:
	word32 pc_5159
	word32 r6_5151
	word32 r0_5145
	word32 r1_5146
	word32 r2_5147
	word32 r3_5148
	word32 r4_5149
	word32 r5_5150
	word32 r7_5152
	word32 lr_5153
	word32 r10_5154
	word32 r11_5156
	word32 r9_5157
	call Mem47[r6_1002 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_61,pc:pc_5159,r0:r0,r1:r1,r10:r10_62,r11:r11_63,r12:dwLoc3C,r2:r2,r3:fp - 0x30<32>,r4:r10,r5:r9,r6:r6_33,r7:fp - 36<i32>,r9:r9_65,Stack +0320:dwLoc3C,Stack +0324:dwLoc38,Stack +0328:dwLoc34
		defs: lr:lr_5153,pc:pc_5159,r0:r0_5145,r1:r1_5146,r10:r10_5154,r11:r11_5156,r2:r2_5147,r3:r3_5148,r4:r4_5149,r5:r5_5150,r6:r6_5151,r7:r7_5152,r9:r9_5157
	word32 r12_5161 = Mem47[r7_5152 + -8<i32>:word32]
	branch r12_5161 == 0<32> l0000D276
l0000D272:
	word32 pc_5179
	call Mem47[r6_5151 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_5153,pc:pc_5179,r0:r0_5145,r1:r1_5146,r10:r10_5154,r11:r11_5156,r12:r12_5161,r2:r2_5147,r3:r3_5148,r4:r4_5149,r5:r5_5150,r6:r6_5151,r7:r7_5152,r9:r9_5157,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_5173,pc:pc_5179,r0:r0_5165,r1:r1_5166,r10:r10_5174,r11:r11_5176,r12:r12_5175,r2:r2_5167,r3:r3_5168,r4:r4_5169,r5:r5_5170,r6:r6_5171,r7:r7_5172,r9:r9_5177
l0000D276:
	call Mem47[r6_5151 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_5190,pc:pc_5211,r0:r0_5183,r1:r1_5184,r10:r10_5191,r11:r11_5193,r12:r12_5192,r2:r2_5185,r3:r3_5186,r4:r4_5187,r5:r5_5188,r6:r6_5181,r7:r7_5189,r9:r9_5194,Stack +FFFFFFC4:dwLoc3C,Stack +FFFFFFC8:dwLoc38,Stack +FFFFFFCC:dwLoc34
		defs: lr:lr_5205,pc:pc_5211,r12:r12_5207,r7:r7_5204
	Mem5214[r7_1003 + -788<i32>:word32] = 0<32>
l0000E3DE:
	r8_3838 = 0x16<32>
l0000E674:
	Mem5219[r12_3831:word32] = r8_3838
l0000D24E:
l0000E676:
	word32 sp_5227 = Mem5225[r7_1003 + -820<i32>:word32]
	word32 r12_5226 = Mem5225[r7_1003 + -788<i32>:word32]
	word32 r6_5231 = Mem5225[sp_5227 + 0x340<32>:word32]
	word32 r3_5234 = Mem5225[sp_5227 + 0x34C<32>:word32]
	word32 r2_5235 = Mem5225[sp_5227 + 0x350<32>:word32]
	word32 r1_5236 = Mem5225[sp_5227 + 0x354<32>:word32]
	r0Out = Mem5225[sp_5227 + 0x358<32>:word32]
	r1Out = r1_5236
	r2Out = r2_5235
	r3Out = r3_5234
	r6Out = r6_5231
	r12Out = r12_5226
	lrOut = lr_3829
	pcOut = pc
	return SLICE(cond(sp_5227 + 0x338<32>), bool, 1)
fn0000D220_exit:


void fn0000E684(word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000E684_entry:
l0000E684:
	word32 r0_135
	word32 r1_141
	word64 r9_r8_35 = Mem29[pc + 382<i32>:word64]
	word32 r12_46
	word32 lr_534
	bool Z_50 = __avr32_f64_cmp_ge(SLICE(r9_r8_35, word32, 0), SLICE(r9_r8_35, word32, 32), r10, r11, out r12_46, out lr_534)
	word32 r4_115 = r10
	word32 r5_117 = r11
	word64 r11_r10_52 = Mem41[pc + 376<i32>:word64]
	word64 r9_r8_53 = Mem41[pc + 380<i32>:word64]
	branch Z_50 l0000E718
l0000E718:
	r1_141 = r12_46
	word32 lr_225 = r12_46
	word64 qwLoc0440_425 = r11_r10_52
	word64 qwLoc042C_426 = r9_r8_53
l0000E724:
	r0_135 = lr_225 - (1<32> << r1_141)
	word32 r9_77 = SLICE(qwLoc0440_425, word32, 32)
	word32 r8_78 = SLICE(qwLoc0440_425, word32, 0)
	branch r0_135 < 0xFFFFFC02<32> l0000E794
l0000E794:
	r0_135 = lr_225
l0000E73C:
	word32 r11_80
	word32 r10_79 = __avr32_f64_mul(r8_78, r9_77, r4_115, r5_117, out r11_80)
	word64 r9_r8_90 = Mem72[pc + 204<i32>:word64]
	word32 r12_98
	word32 lr_537
	__avr32_f64_cmp_ge(SLICE(r9_r8_90, word32, 0), SLICE(r9_r8_90, word32, 32), r10_79, r11_80, out r12_98, out lr_537)
	r5_117 = r11_80
	r4_115 = r10_79
	word32 r8_106 = SLICE(qwLoc0440_425, word32, 0)
	word32 r9_108 = SLICE(qwLoc0440_425, word32, 32)
	branch r12_98 != 0<32> l0000E796
l0000E796:
	word64 r9_r8_114 = Mem72[pc + 118<i32>:word64]
	word32 lr_540
	word32 r9_538
	word32 r12_539
	branch __avr32_f64_cmp_lt(SLICE(r9_r8_114, word32, 0), SLICE(r9_r8_114, word32, 32), r4_115, r5_117, out r9_538, out r12_539, out lr_540) l0000E7EE
l0000E7A4:
	word32 r7_133 = fp - 0x24<32> + (r1_141 << 3<8>) - 0x208<32>
	word32 r9_136 = r0_135
l0000E7E2:
	branch r1_141 > 0<32> l0000E7B4
l0000E7B4:
	r1_141 = r1_141 - 1<32>
	r0_135 = r9_136 - (1<32> << r1_141)
	branch r0_135 < 0xFFFFFC02<32> l0000E7E0
l0000E7C6:
	word64 r9_r8_153 = Mem72[r7_133:word64]
	word32 r11_157
	word32 r10_156 = __avr32_f64_mul(SLICE(r9_r8_153, word32, 0), SLICE(r9_r8_153, word32, 32), r4_115, r5_117, out r11_157)
	word64 r9_r8_167 = Mem72[pc + 62<i32>:word64]
	r5_117 = r11_157
	r4_115 = r10_156
	r9_136 = r0_135
	word32 lr_544
	word32 r12_543
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_167, word32, 0), SLICE(r9_r8_167, word32, 32), r10_156, r11_157, out r12_543, out lr_544) l0000E7EE
l0000E7E0:
	r7_133 = r7_133 - 8<32>
l0000E7EC:
	r0_135 = r9_136
l0000E75E:
	word32 r11_541
	__avr32_f64_mul(r8_106, r9_108, r8_106, r9_108, out r11_541)
	word64 r11_r10_532 = <invalid>
	word32 r8_211 = SLICE(qwLoc042C_426, word32, 0)
	word32 r9_213 = SLICE(qwLoc042C_426, word32, 32)
	word32 r11_542
	__avr32_f64_mul(r8_211, r9_213, r8_211, r9_213, out r11_542)
	word64 r11_r10_533 = <invalid>
	r1_141 = r1_141 + 1<32>
	qwLoc0440_425 = r11_r10_532
	lr_225 = r0_135
	qwLoc042C_426 = r11_r10_533
l0000E6A6:
	r1_141 = 0<32>
	r0_135 = 0<32>
	word64 qwLoc0434_433 = r11_r10_52
	word64 r3_r2_528 = r9_r8_53
l0000E6B2:
	word32 r12_244
	word32 lr_536
	__avr32_f64_cmp_ge(SLICE(qwLoc0434_433, word32, 0), SLICE(qwLoc0434_433, word32, 32), r4_115, r5_117, out r12_244, out lr_536)
	word32 r3_257 = SLICE(r3_r2_528, word32, 32)
	word32 r2_255 = SLICE(r3_r2_528, word32, 0)
	word32 lr_252 = 1<32> << r1_141
	branch r12_244 == 0<32> l0000E7EE
l0000E7EE:
	word32 r8_262 = r1_141 - 1<32>
	word32 r3_268 = fp - 0x224<32> + (r8_262 << 3<i32>)
	word32 r7_270 = fp - 0x424<32> + (r8_262 << 3<i32>)
l0000E84E:
	branch r1_141 > 0<32> l0000E824
l0000E824:
	word64 r9_r8_281 = Mem411[r3_268:word64]
	word32 r12_289
	word32 lr_545
	__avr32_f64_cmp_ge(SLICE(r9_r8_281, word32, 0), SLICE(r9_r8_281, word32, 32), r4_115, r5_117, out r12_289, out lr_545)
	r1_141 = r1_141 - 1<32>
	r3_268 = r3_268 - 8<32>
	word32 lr_296 = 1<32> << r1_141
	branch r12_289 == 0<32> l0000E84C
l0000E83E:
	word64 r9_r8_302 = Mem411[r7_270:word64]
	r0_135 = r0_135 + lr_296
	word32 r11_309
	r4_115 = __avr32_f64_mul(SLICE(r9_r8_302, word32, 0), SLICE(r9_r8_302, word32, 32), r4_115, r5_117, out r11_309)
	r5_117 = r11_309
l0000E84C:
	r7_270 = r7_270 - 8<32>
l0000E858:
	Mem327[r12:word32] = r0_135
	return
fn0000E684_exit:
l0000E6D2:
	word32 r11_344
	r4_115 = __avr32_f64_mul(r2_255, r3_257, r4_115, r5_117, out r11_344)
	word32 r8_367 = SLICE(qwLoc0434_433, word32, 0)
	word32 r9_369 = SLICE(qwLoc0434_433, word32, 32)
	word32 r11_535
	__avr32_f64_mul(r8_367, r9_369, r8_367, r9_369, out r11_535)
	word64 r11_r10_531 = <invalid>
	r0_135 = r0_135 + lr_252
	r5_117 = r11_344
	r1_141 = r1_141 + 1<32>
	qwLoc0434_433 = r11_r10_531
	word32 r11_388
	r3_r2_528 = SEQ(r11_388, __avr32_f64_mul(r2_255, r3_257, r2_255, r3_257, out r11_388)) (alias)


void fn0000E868(word32 r10, word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut:
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000E868_entry:
l0000E868:
	word32 r0_135
	word32 r1_141
	word64 r9_r8_35 = Mem29[pc + 382<i32>:word64]
	word32 r12_46
	word32 lr_534
	bool Z_50 = __avr32_f64_cmp_ge(SLICE(r9_r8_35, word32, 0), SLICE(r9_r8_35, word32, 32), r10, r11, out r12_46, out lr_534)
	word32 r4_115 = r10
	word32 r5_117 = r11
	word64 r11_r10_52 = Mem41[pc + 376<i32>:word64]
	word64 r9_r8_53 = Mem41[pc + 380<i32>:word64]
	branch Z_50 l0000E8FC
l0000E8FC:
	r1_141 = r12_46
	word32 lr_225 = r12_46
	word64 qwLoc0440_425 = r11_r10_52
	word64 qwLoc042C_426 = r9_r8_53
l0000E908:
	r0_135 = lr_225 - (1<32> << r1_141)
	word32 r9_77 = SLICE(qwLoc0440_425, word32, 32)
	word32 r8_78 = SLICE(qwLoc0440_425, word32, 0)
	branch r0_135 < 0xFFFFFC02<32> l0000E978
l0000E978:
	r0_135 = lr_225
l0000E920:
	word32 r11_80
	word32 r10_79 = __avr32_f64_mul(r8_78, r9_77, r4_115, r5_117, out r11_80)
	word64 r9_r8_90 = Mem72[pc + 204<i32>:word64]
	word32 r12_98
	word32 lr_537
	__avr32_f64_cmp_ge(SLICE(r9_r8_90, word32, 0), SLICE(r9_r8_90, word32, 32), r10_79, r11_80, out r12_98, out lr_537)
	r5_117 = r11_80
	r4_115 = r10_79
	word32 r8_106 = SLICE(qwLoc0440_425, word32, 0)
	word32 r9_108 = SLICE(qwLoc0440_425, word32, 32)
	branch r12_98 != 0<32> l0000E97A
l0000E97A:
	word64 r9_r8_114 = Mem72[pc + 118<i32>:word64]
	word32 lr_540
	word32 r9_538
	word32 r12_539
	branch __avr32_f64_cmp_lt(SLICE(r9_r8_114, word32, 0), SLICE(r9_r8_114, word32, 32), r4_115, r5_117, out r9_538, out r12_539, out lr_540) l0000E9D2
l0000E988:
	word32 r7_133 = fp - 0x24<32> + (r1_141 << 3<8>) - 0x208<32>
	word32 r9_136 = r0_135
l0000E9C6:
	branch r1_141 > 0<32> l0000E998
l0000E998:
	r1_141 = r1_141 - 1<32>
	r0_135 = r9_136 - (1<32> << r1_141)
	branch r0_135 < 0xFFFFFC02<32> l0000E9C4
l0000E9AA:
	word64 r9_r8_153 = Mem72[r7_133:word64]
	word32 r11_157
	word32 r10_156 = __avr32_f64_mul(SLICE(r9_r8_153, word32, 0), SLICE(r9_r8_153, word32, 32), r4_115, r5_117, out r11_157)
	word64 r9_r8_167 = Mem72[pc + 62<i32>:word64]
	r5_117 = r11_157
	r4_115 = r10_156
	r9_136 = r0_135
	word32 lr_544
	word32 r12_543
	branch __avr32_f64_cmp_ge(SLICE(r9_r8_167, word32, 0), SLICE(r9_r8_167, word32, 32), r10_156, r11_157, out r12_543, out lr_544) l0000E9D2
l0000E9C4:
	r7_133 = r7_133 - 8<32>
l0000E9D0:
	r0_135 = r9_136
l0000E942:
	word32 r11_541
	__avr32_f64_mul(r8_106, r9_108, r8_106, r9_108, out r11_541)
	word64 r11_r10_532 = <invalid>
	word32 r8_211 = SLICE(qwLoc042C_426, word32, 0)
	word32 r9_213 = SLICE(qwLoc042C_426, word32, 32)
	word32 r11_542
	__avr32_f64_mul(r8_211, r9_213, r8_211, r9_213, out r11_542)
	word64 r11_r10_533 = <invalid>
	r1_141 = r1_141 + 1<32>
	qwLoc0440_425 = r11_r10_532
	lr_225 = r0_135
	qwLoc042C_426 = r11_r10_533
l0000E88A:
	r1_141 = 0<32>
	r0_135 = 0<32>
	word64 qwLoc0434_433 = r11_r10_52
	word64 r3_r2_528 = r9_r8_53
l0000E896:
	word32 r12_244
	word32 lr_536
	__avr32_f64_cmp_ge(SLICE(qwLoc0434_433, word32, 0), SLICE(qwLoc0434_433, word32, 32), r4_115, r5_117, out r12_244, out lr_536)
	word32 r3_257 = SLICE(r3_r2_528, word32, 32)
	word32 r2_255 = SLICE(r3_r2_528, word32, 0)
	word32 lr_252 = 1<32> << r1_141
	branch r12_244 == 0<32> l0000E9D2
l0000E9D2:
	word32 r8_262 = r1_141 - 1<32>
	word32 r3_268 = fp - 0x224<32> + (r8_262 << 3<i32>)
	word32 r7_270 = fp - 0x424<32> + (r8_262 << 3<i32>)
l0000EA32:
	branch r1_141 > 0<32> l0000EA08
l0000EA08:
	word64 r9_r8_281 = Mem411[r3_268:word64]
	word32 r12_289
	word32 lr_545
	__avr32_f64_cmp_ge(SLICE(r9_r8_281, word32, 0), SLICE(r9_r8_281, word32, 32), r4_115, r5_117, out r12_289, out lr_545)
	r1_141 = r1_141 - 1<32>
	r3_268 = r3_268 - 8<32>
	word32 lr_296 = 1<32> << r1_141
	branch r12_289 == 0<32> l0000EA30
l0000EA22:
	word64 r9_r8_302 = Mem411[r7_270:word64]
	r0_135 = r0_135 + lr_296
	word32 r11_309
	r4_115 = __avr32_f64_mul(SLICE(r9_r8_302, word32, 0), SLICE(r9_r8_302, word32, 32), r4_115, r5_117, out r11_309)
	r5_117 = r11_309
l0000EA30:
	r7_270 = r7_270 - 8<32>
l0000EA3C:
	Mem327[r12:word32] = r0_135
	return
fn0000E868_exit:
l0000E8B6:
	word32 r11_344
	r4_115 = __avr32_f64_mul(r2_255, r3_257, r4_115, r5_117, out r11_344)
	word32 r8_367 = SLICE(qwLoc0434_433, word32, 0)
	word32 r9_369 = SLICE(qwLoc0434_433, word32, 32)
	word32 r11_535
	__avr32_f64_mul(r8_367, r9_369, r8_367, r9_369, out r11_535)
	word64 r11_r10_531 = <invalid>
	r0_135 = r0_135 + lr_252
	r5_117 = r11_344
	r1_141 = r1_141 + 1<32>
	qwLoc0434_433 = r11_r10_531
	word32 r11_388
	r3_r2_528 = SEQ(r11_388, __avr32_f64_mul(r2_255, r3_257, r2_255, r3_257, out r11_388)) (alias)


byte fn0000EA4C(word32 r11, word32 r12, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: VN lr r10 r11 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000EA4C_entry:
l0000EA4C:
	word32 r6_19 = 0x0000EA50<p32> - Mem17[0x0000EB26<p32>:word32]
	word32 r10_110 = Mem17[r11 + 4<i32>:word32] + 4<32>
	word32 r11_108 = 0<32>
l0000EB20:
	branch r11_108 <u Mem27[r11:word32] l0000EA5E
l0000EA5E:
	word32 r8_33 = Mem27[r10_110 + -4<i32>:word32]
	r9 = r8_33 - 1<32>
	branch r8_33 >u 0x16<32> l0000EACC
l0000EACC:
	r9Out = r8_33 - 1<32>
	r10Out = <invalid>
	r11Out = <invalid>
	lrOut = <invalid>
	return <invalid>
l0000EA6C:
	word32 r8_51
	switch (r8_33 - 1<32>) { l0000EA74 l0000EA78 l0000EA7C l0000EA80 l0000EA84 l0000EA88 l0000EA8C l0000EA90 l0000EA94 l0000EA98 l0000EA9C l0000EAA0 l0000EAA4 l0000EAA8 l0000EAAC l0000EAB0 l0000EAB4 l0000EAB8 l0000EABC l0000EAC0 l0000EAC4 l0000EAC8 }
l0000EAC8:
l0000EAC4:
l0000EAC0:
l0000EABC:
l0000EAB8:
l0000EAB4:
l0000EAB0:
l0000EB06:
	word32 r8_46 = Mem27[r12:word32]
	Mem47[r10_110:word32] = r8_46
	r12 = r12 + 4<32>
	branch r8_46 != 0<32> l0000EB1C
l0000EB10:
	r8_51 = 0x0000EB2C<p32>
l0000EAAC:
l0000EAF6:
	word32 r8_53 = Mem27[r12:word32]
	Mem54[r10_110:word32] = r8_53
	r12 = r12 + 4<32>
	branch r8_53 != 0<32> l0000EB1C
l0000EB00:
	r8_51 = Mem54[r6_19 + 608<i32>:word32]
l0000EAA8:
l0000EAA4:
l0000EAA0:
l0000EA9C:
l0000EAEA:
	word64 r9_r8_62 = Mem27[r12:word64]
	Mem68[r10_110:word64] = r9_r8_62
	r9 = SLICE(r9_r8_62, word32, 32) (alias)
	r12 = r12 + 8<32>
l0000EA98:
l0000EA94:
l0000EADE:
	word64 r9_r8_71 = Mem27[r12:word64]
	Mem77[r10_110:word64] = r9_r8_71
	r9 = SLICE(r9_r8_71, word32, 32) (alias)
	r12 = r12 + 8<32>
l0000EA90:
l0000EA8C:
l0000EA88:
l0000EA84:
l0000EB16:
	r8_51 = Mem27[r12:word32]
	r12 = r12 + 4<32>
l0000EB1A:
	Mem86[r10_110:word32] = r8_51
l0000EA80:
l0000EA7C:
l0000EAD6:
	Mem93[r10_110:word16] = Mem27[r12:word16]
	r12 = r12 + 4<32>
l0000EA78:
l0000EA74:
l0000EACE:
	Mem100[r10_110:byte] = Mem27[r12:byte]
	r12 = r12 + 4<32>
l0000EB1C:
	r11_108 = r11_108 + 1<32>
	r10_110 = r10_110 + 0xC<32>
l0000EB26:
	r9Out = r9
	r10Out = <invalid>
	r11Out = <invalid>
	lrOut = <invalid>
	return <invalid>
fn0000EA4C_exit:


byte fn0000EB48(word32 r0, word32 r1, word32 r2, word32 r3, word32 r4, word32 r5, word32 r6, word32 r7, word32 r10, word32 r11, word32 r12, word32 lr, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  lr:[0..31] r0:[0..31] r1:[0..31] r10:[0..31] r11:[0..31] r12:[0..31] r2:[0..31] r3:[0..31] r4:[0..31] r5:[0..31] r6:[0..31] r7:[0..31]
// LiveOut: VN lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn0000EB48_entry:
l0000EB48:
	word32 r12_1518
	word32 r8_1525
	word32 r6_32 = 0x0000EB4E<p32> - Mem29[0x0000EC88<p32>:word32]
	Mem42[r11:word32] = 0<32>
	byte VNZC_58
	word32 r5_1201
	word32 r7_1056
	word32 r12_1620
	word32 sp_114
	word32 r10_1024
	word32 r3_1278
	word32 r2_1082
	word32 r1_1276
	word32 r6_1281
	word32 r0_1275
	word32 r4_1183
	word32 lr_122
	word32 r11_103
	call Mem42[r6_32 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr,r0:r11,r1:r10,r10:r10,r11:r11,r12:0x2C<32>,r2:r2,r3:r3,r4:r4,r5:0<32>,r6:r6_32,r7:r12,Stack +0018:lr,Stack +001C:r7,Stack +0020:r6,Stack +0024:r5,Stack +0028:r4,Stack +002C:r3,Stack +0030:r2,Stack +0034:r1,Stack +0038:r0
		defs: lr:lr_52,r0:r0_44,r1:r1_45,r10:r10_55,r11:r11_54,r12:r12_53,r2:r2_46,r3:r3_47,r4:r4_48,r5:r5_49,r6:r6_50,r7:r7_51,sp:sp_43,VNZC:VNZC_58
	Mem59[r0_1275 + 4<i32>:word32] = r12_1620
	branch SLICE(VNZC_58, bool, 1) l0000F25E
l0000EB66:
	Mem62[sp_114:word32] = r5_1201
	Mem63[sp_114 + 8<i32>:word32] = r5_1201
	Mem64[sp_114 + 4<i32>:word32] = 1<32>
	Mem65[sp_114 + 12<i32>:word32] = r5_1201
	Mem67[r1_1276:word32] = r5_1201
	Mem68[r1_1276 + 4<i32>:word32] = r5_1201
	r2_1082 = r5_1201
l0000F20C:
	word32 r12_71 = CONVERT(Mem70[r7_1056:byte], byte, word32)
	branch r12_71 != 0<32> l0000EB7A
l0000EB7A:
	r7_1056 = r7_1056 + 1<32>
	branch SLICE(r12_71 - 0x25<32>, byte, 0) != 0<8> l0000F20C
l0000EB86:
	r3_1278 = Mem70[r0_1275:word32] * 0x2C<32> + Mem70[r0_1275 + 4<i32>:word32]
	Mem86[r3_1278 + 28<i32>:word32] = 0<32>
	Mem87[r3_1278 + 8<i32>:word32] = 0<32>
	Mem88[r3_1278 + 12<i32>:word32] = 0<32>
	Mem89[r3_1278 + 16<i32>:word32] = 0<32>
	Mem90[r3_1278 + 24<i32>:word32] = 0<32>
	Mem91[r3_1278:word32] = r7_1056 + 0xFFFFFFFF<32>
	Mem92[r3_1278 + -24<i32>:word32] = 0xFFFFFFFF<32>
	Mem93[r3_1278 + 20<i32>:word32] = 0xFFFFFFFF<32>
	Mem94[r3_1278 + -32<i32>:word32] = 0xFFFFFFFF<32>
	branch SLICE(CONVERT(Mem94[r7_1056:byte], byte, word32) - 0x39<32>, byte, 0) >u 0<8> l0000EC24
l0000EBBA:
	word32 r10_100 = r7_1056
l0000EBBC:
	r11_103 = CONVERT(Mem94[r10_100:byte], byte, word32)
	r10_100 = r10_100 + 1<32>
	branch SLICE(r11_103 - 0x39<32>, byte, 0) <=u 0<8> l0000EBBC
l0000EBCE:
	branch SLICE(r11_103 - 0x24<32>, byte, 0) != 0<8> l0000EC24
l0000EC24:
	Mem116[sp_114 + 16<i32>:word32] = 0xFFFFFFFF<32>
l0000EBD6:
	word32 r12_118 = r7_1056
	r10_1024 = 0<32>
l0000EBF8:
	lr_122 = CONVERT(Mem94[r12_118:byte], byte, word32)
	r7_1056 = r10_1024 * 5<32>
	r11_103 = 0xFFFFFFFF<32>
	branch SLICE(lr_122 - 0x39<32>, byte, 0) <=u 0<8> l0000EBDC
l0000EBDC:
	branch r10_1024 >u Mem94[0x0000EC8C<p32>:word32] l0000EBE8
l0000EBE4:
	r11_103 = r7_1056 << 1<32>
l0000EBE8:
	r10_1024 = r11_103 + (lr_122 - 0x30<32>)
	branch r10_1024 >=u r11_103 l0000EBF6
l0000EBF2_1:
	r10_1024 = 0xFFFFFFFF<32>
l0000EBF6:
	r12_118 = r12_118 + 1<32>
l0000EC0E:
	branch r10_1024 == 0<32> l0000F22C
l0000EC14:
	branch r10_1024 == 0xFFFFFFFF<32> l0000F22C
l0000EC1A:
	Mem156[sp_114 + 16<i32>:word32] = r10_1024 + 0xFFFFFFFF<32>
	r7_1056 = r12_118 + 1<32>
l0000EC28:
	word32 r12_159 = r7_1056 + 1<32>
l0000EC32:
	word32 r8_1702
	r7_1056 = r12_159 - 1<32>
	word32 r9_164 = CONVERT(Mem163[r7_1056:byte], byte, word32)
	branch SLICE(r9_164 - 0x27<32>, byte, 0) != 0<8> l0000EC46
l0000EC46:
	branch SLICE(r9_164 - 0x2D<32>, byte, 0) != 0<8> l0000EC54
l0000EC54:
	branch SLICE(r9_164 - 0x2B<32>, byte, 0) != 0<8> l0000EC62
l0000EC62:
	branch SLICE(r9_164 - 0x20<32>, byte, 0) != 0<8> l0000EC70
l0000EC70:
	branch SLICE(r9_164 - 0x23<32>, byte, 0) != 0<8> l0000EC7E
l0000EC7E:
	branch SLICE(r9_164 - 0x30<32>, byte, 0) != 0<8> l0000EC94
l0000EC94:
	branch SLICE(r9_164 - 0x2A<32>, byte, 0) != 0<8> l0000EDC0
l0000EDC0:
	branch SLICE(r9_164 - 0x39<32>, byte, 0) >u 0<8> l0000EDF2
l0000EDCC:
	Mem191[r3_1278 + 12<i32>:word32] = r7_1056
l0000EDD2:
	branch SLICE(CONVERT(Mem191[r7_1056:byte], byte, word32) - 0x39<32>, byte, 0) <=u 0<8> l0000EDD0
l0000EDD0:
	r7_1056 = r7_1056 + 1<32>
l0000EDE0:
	word32 r8_202 = Mem191[r3_1278 + 12<i32>:word32]
	Mem203[r3_1278 + 16<i32>:word32] = r7_1056
	word32 r10_206 = Mem203[sp_114 + 8<i32>:word32]
	word32 r8_207 = r7_1056 - r8_202
	branch r10_206 >=u r8_207 l0000EDF0
l0000EDEC_1:
	r10_206 = r8_207
l0000EDF0:
	Mem213[sp_114 + 8<i32>:word32] = r10_206
l0000EC9E:
	Mem214[r3_1278 + 12<i32>:word32] = r7_1056
	Mem215[r3_1278 + 16<i32>:word32] = r12_159
	word32 r8_216 = CONVERT(Mem215[r12_159:byte], byte, word32)
	r10_1024 = Mem215[sp_114 + 8<i32>:word32]
	branch r10_1024 != 0<32> l0000ECAE
l0000ECAA_1:
	r10_1024 = 1<32>
l0000ECAE:
	Mem224[sp_114 + 8<i32>:word32] = r10_1024
	r7_1056 = r12_159
	branch SLICE(r8_216 - 0x39<32>, byte, 0) >u 0<8> l0000ED24
l0000ECBC:
	r10_1024 = r12_159
l0000ECBE:
	r11_103 = CONVERT(Mem224[r10_1024:byte], byte, word32)
	r10_1024 = r10_1024 + 1<32>
	branch SLICE(r11_103 - 0x39<32>, byte, 0) <=u 0<8> l0000ECBE
l0000ECD0:
	branch SLICE(r11_103 - 0x24<32>, byte, 0) != 0<8> l0000ED24
l0000ECD8:
	r10_1024 = 0<32>
l0000ECF8:
	lr_122 = CONVERT(Mem224[r12_159:byte], byte, word32)
	r7_1056 = r10_1024 * 5<32>
	r11_103 = 0xFFFFFFFF<32>
	branch SLICE(lr_122 - 0x39<32>, byte, 0) <=u 0<8> l0000ECDC
l0000ECDC:
	branch r10_1024 >u Mem224[0x0000EE4C<p32>:word32] l0000ECE8
l0000ECE4:
	r11_103 = r7_1056 << 1<32>
l0000ECE8:
	r10_1024 = r11_103 + (lr_122 - 0x30<32>)
	branch r10_1024 >=u r11_103 l0000ECF6
l0000ECF2_1:
	r10_1024 = 0xFFFFFFFF<32>
l0000ECF6:
	r12_159 = r12_159 + 1<32>
l0000ED0E:
	branch r10_1024 == 0<32> l0000F22C
l0000ED14:
	branch r10_1024 == 0xFFFFFFFF<32> l0000F22C
l0000ED1A:
	Mem283[r3_1278 + 20<i32>:word32] = r10_1024 + 0xFFFFFFFF<32>
	r7_1056 = r12_159 + 1<32>
l0000ED24:
	branch Mem285[r3_1278 + 20<i32>:word32] != 0xFFFFFFFF<32> l0000ED38
l0000ED2A:
	word32 r8_294 = Mem285[sp_114:word32]
	Mem295[r3_1278 + 20<i32>:word32] = r8_294
	branch r8_294 == 0xFFFFFFFF<32> l0000F22C
l0000ED34:
	Mem300[sp_114:word32] = r8_294 + 1<32>
l0000ED38:
	r5_1201 = Mem302[r3_1278 + 20<i32>:word32]
	branch r5_1201 <u r2_1082 l0000ED92
l0000ED3E:
	word32 r8_314 = r2_1082 << 1<32>
	branch r2_1082 < 0<32> l0000ED48
l0000ED44_1:
	r2_1082 = r8_314
l0000ED48:
	branch r2_1082 >= 0<32> l0000ED4C
l0000ED48_1:
	r2_1082 = 0xFFFFFFFF<32>
l0000ED4C:
	branch r2_1082 >u r5_1201 l0000ED5C
l0000ED52:
	r2_1082 = r5_1201 + 1<32>
	branch r5_1201 + 1<32> >=u r5_1201 l0000ED5C
l0000ED58_1:
	r2_1082 = 0xFFFFFFFF<32>
l0000ED5C:
	branch r2_1082 >u Mem302[0x0000EE50<p32>:word32] l0000F24A
l0000ED64:
	word32 r12_430
	word32 r9_348 = Mem302[r1_1276 + 4<i32>:word32]
	word32 r8_349 = r2_1082 * 3<32>
	branch r9_348 == 0<32> l0000ED7C
l0000ED7C:
	call Mem302[r6_1281 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_400,r0:r0_78,r1:r1_1337,r10:r10_415,r11:r11_408,r12:r8_349 << 2<32>,r2:r2_334,r3:r3_83,r4:r4_1385,r5:r5_303,r6:r6_1347,r7:r7_394
		defs: lr:lr_429,r0:r0_421,r1:r1_422,r10:r10_432,r11:r11_431,r12:r12_430,r2:r2_423,r3:r3_424,r4:r4_425,r5:r5_426,r6:r6_427,r7:r7_428,sp:sp_420
l0000ED72:
	call Mem302[r6_1281 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_400,r0:r0_78,r1:r1_1337,r10:r10_415,r11:r8_349 << 2<32>,r12:r9_348,r2:r2_334,r3:r3_83,r4:r4_1385,r5:r5_303,r6:r6_1347,r7:r7_394
		defs: lr:lr_447,r0:r0_439,r1:r1_440,r10:r10_450,r11:r11_449,r12:r12_448,r2:r2_441,r3:r3_442,r4:r4_443,r5:r5_444,r6:r6_445,r7:r7_446,sp:sp_438
l0000ED80:
	branch r12_430 == 0<32> l0000F24A
l0000ED86:
	Mem458[r1_1276 + 4<i32>:word32] = r12_430
l0000ED92:
	word32 r8_461 = Mem460[r1_1276:word32]
	word32 r9_462 = Mem460[r1_1276 + 4<i32>:word32]
	r10_1024 = r8_461 * 3<32>
	r11_103 = r8_461 + 1<32>
	branch r8_461 <=u r5_1201 l0000ED8A
l0000ED8A:
	Mem469[r8_461 * 0xC<32>:word32] = 0<32>
	Mem470[r1_1276:word32] = r8_461 + 1<32>
l0000EDA4:
	word32 r9_472 = r9_462 + r5_1201 * 0xC<32>
	word32 r8_473 = Mem460[r9_472:word32]
	branch r8_473 != 0<32> l0000EDB8
l0000EDB8:
	branch r8_473 == 5<32> l0000EDF2
l0000EDBC:
l0000EDB2:
	Mem479[r9_472:word32] = 5<32>
l0000EDF2:
	branch SLICE(CONVERT(Mem484[r7_1056:byte], byte, word32) - 0x2E<32>, byte, 0) != 0<8> l0000EF60
l0000EDFE:
	r7_1056 = r7_1056 + 1<32>
	branch SLICE(CONVERT(Mem484[r7_1056:byte], byte, word32) - 0x2A<32>, byte, 0) != 0<8> l0000EF3A
l0000EF3A:
	Mem499[r3_1278 + 24<i32>:word32] = r7_1056 - 1<32>
l0000EF40:
	branch SLICE(CONVERT(Mem499[r7_1056:byte], byte, word32) - 0x39<32>, byte, 0) <=u 0<8> l0000EF3E
l0000EF3E:
	r7_1056 = r7_1056 + 1<32>
l0000EF4E:
	word32 r8_510 = Mem499[r3_1278 + 24<i32>:word32]
	Mem511[r3_1278 + 28<i32>:word32] = r7_1056
	word32 r10_516 = Mem511[sp_114 + 12<i32>:word32]
	word32 r8_517 = r7_1056 - r8_510
	branch r10_516 >=u r8_517 l0000EF5E
l0000EF5A_1:
	r10_516 = r8_517
l0000EF5E:
	Mem523[sp_114 + 12<i32>:word32] = r10_516
l0000EE10:
	Mem525[r3_1278 + 24<i32>:word32] = r7_1056 - 1<32>
	Mem526[r3_1278 + 28<i32>:word32] = r7_1056 + 1<32>
	r7_1056 = r7_1056 + 1<32>
	word32 r8_527 = CONVERT(Mem526[r7_1056 + 1<32>:byte], byte, word32)
	r10_1024 = Mem526[sp_114 + 12<i32>:word32]
	branch r10_1024 >u 1<32> l0000EE22
l0000EE1E_1:
	r10_1024 = 2<32>
l0000EE22:
	Mem535[sp_114 + 12<i32>:word32] = r10_1024
	branch SLICE(r8_527 - 0x39<32>, byte, 0) >u 0<8> l0000EEA0
l0000EE2E:
	r10_1024 = r7_1056 + 1<32>
l0000EE30:
	r11_103 = CONVERT(Mem535[r10_1024:byte], byte, word32)
	r10_1024 = r10_1024 + 1<32>
	branch SLICE(r11_103 - 0x39<32>, byte, 0) <=u 0<8> l0000EE30
l0000EE42:
	branch SLICE(r11_103 - 0x24<32>, byte, 0) != 0<8> l0000EEA0
l0000EE4A:
	word32 r12_555 = r7_1056 + 1<32>
	r10_1024 = 0<32>
l0000EE74:
	lr_122 = CONVERT(Mem535[r12_555:byte], byte, word32)
	r7_1056 = r10_1024 * 5<32>
	r11_103 = 0xFFFFFFFF<32>
	branch SLICE(lr_122 - 0x39<32>, byte, 0) <=u 0<8> l0000EE58
l0000EE58:
	branch r10_1024 >u Mem535[0x0000EFAC<p32>:word32] l0000EE64
l0000EE60:
	r11_103 = r7_1056 << 1<32>
l0000EE64:
	r10_1024 = r11_103 + (lr_122 - 0x30<32>)
	branch r10_1024 >=u r11_103 l0000EE72
l0000EE6E_1:
	r10_1024 = 0xFFFFFFFF<32>
l0000EE72:
	r12_555 = r12_555 + 1<32>
l0000EE8A:
	branch r10_1024 == 0<32> l0000F22C
l0000EE90:
	branch r10_1024 == 0xFFFFFFFF<32> l0000F22C
l0000EE96:
	Mem595[r3_1278 + -32<i32>:word32] = r10_1024 + 0xFFFFFFFF<32>
	r7_1056 = r12_555 + 1<32>
l0000EEA0:
	branch Mem597[r3_1278 + 32<i32>:word32] != 0xFFFFFFFF<32> l0000EEB4
l0000EEA6:
	word32 r8_606 = Mem597[sp_114:word32]
	Mem607[r3_1278 + -32<i32>:word32] = r8_606
	branch r8_606 == 0xFFFFFFFF<32> l0000F22C
l0000EEB0:
	Mem612[sp_114:word32] = r8_606 + 1<32>
l0000EEB4:
	r5_1201 = Mem614[r3_1278 + 32<i32>:word32]
	branch r5_1201 <u r2_1082 l0000EF0E
l0000EEBA:
	word32 r8_630 = r2_1082 << 1<32>
	branch r2_1082 < 0<32> l0000EEC4
l0000EEC0_1:
	r2_1082 = r8_630
l0000EEC4:
	branch r2_1082 >= 0<32> l0000EEC8
l0000EEC4_1:
	r2_1082 = 0xFFFFFFFF<32>
l0000EEC8:
	branch r2_1082 >u r5_1201 l0000EED8
l0000EECE:
	r2_1082 = r5_1201 + 1<32>
	branch r5_1201 + 1<32> >=u r5_1201 l0000EED8
l0000EED4_1:
	r2_1082 = 0xFFFFFFFF<32>
l0000EED8:
	branch r2_1082 >u Mem614[0x0000EFB0<p32>:word32] l0000F24A
l0000EEE0:
	word32 r12_765
	word32 r9_666 = Mem614[r1_1276 + 4<i32>:word32]
	word32 r8_667 = r2_1082 * 3<32>
	branch r9_666 == 0<32> l0000EEF8
l0000EEF8:
	call Mem614[r6_1281 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_729,r0:r0_692,r1:r1_659,r10:r10_750,r11:r11_741,r12:r8_667 << 2<32>,r2:r2_650,r3:r3_495,r4:r4_710,r5:r5_615,r6:r6_677,r7:r7_724
		defs: lr:lr_764,r0:r0_756,r1:r1_757,r10:r10_767,r11:r11_766,r12:r12_765,r2:r2_758,r3:r3_759,r4:r4_760,r5:r5_761,r6:r6_762,r7:r7_763,sp:sp_755
l0000EEEE:
	call Mem614[r6_1281 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_729,r0:r0_692,r1:r1_659,r10:r10_750,r11:r8_667 << 2<32>,r12:r9_666,r2:r2_650,r3:r3_495,r4:r4_710,r5:r5_615,r6:r6_677,r7:r7_724
		defs: lr:lr_782,r0:r0_774,r1:r1_775,r10:r10_785,r11:r11_784,r12:r12_783,r2:r2_776,r3:r3_777,r4:r4_778,r5:r5_779,r6:r6_780,r7:r7_781,sp:sp_773
l0000EEFC:
	branch r12_765 == 0<32> l0000F24A
l0000EF02:
	Mem793[r1_1276 + 4<i32>:word32] = r12_765
l0000EF0E:
	word32 r8_796 = Mem795[r1_1276:word32]
	word32 r9_797 = Mem795[r1_1276 + 4<i32>:word32]
	r10_1024 = r8_796 * 3<32>
	r11_103 = r8_796 + 1<32>
	branch r8_796 <=u r5_1201 l0000EF06
l0000EF06:
	Mem804[r8_796 * 0xC<32>:word32] = 0<32>
	Mem805[r1_1276:word32] = r8_796 + 1<32>
l0000EF20:
	word32 r9_807 = r9_797 + r5_1201 * 0xC<32>
	word32 r8_808 = Mem795[r9_807:word32]
	branch r8_808 != 0<32> l0000EF34
l0000EF34:
	branch r8_808 == 5<32> l0000EF60
l0000EF38:
l0000EF2E:
	Mem814[r9_807:word32] = 5<32>
l0000EF60:
	word32 r12_1699 = r7_1056 + 1<32>
	r10_1024 = 0<32>
l0000EF6A:
	word32 r8_823 = r12_1699 - 1<32>
	Mem825[sp_114 + 20<i32>:word32] = r8_823
	r5_1201 = CONVERT(Mem825[r8_823:byte], byte, word32)
	branch SLICE(r5_1201 - 0x68<32>, byte, 0) != 0<8> l0000EF88
l0000EF88:
	branch SLICE(r5_1201 - 0x4C<32>, byte, 0) != 0<8> l0000EF94
l0000EF94:
	branch SLICE(r5_1201 - 0x6C<32>, byte, 0) != 0<8> l0000EFA0
l0000EFA0:
	branch SLICE(r5_1201 - 0x6A<32>, byte, 0) != 0<8> l0000EFB4
l0000EFB4:
	branch SLICE(r5_1201 - 0x7A<32>, byte, 0) == 0<8> l0000EF68
l0000EFBC:
	branch SLICE(r5_1201 - 0x5A<32>, byte, 0) == 0<8> l0000EF68
l0000EFC4:
	branch SLICE(r5_1201 - 0x74<32>, byte, 0) == 0<8> l0000EF68
l0000EFCC:
	branch SLICE(r5_1201 - 0x25<32>, byte, 0) == 0<8> l0000F1D8
l0000EFD6:
	branch SLICE(r5_1201 - 0x41<32>, byte, 0) == 0<8> l0000F0DA
l0000EFDE:
	branch SLICE(r5_1201 - 0x43<32>, byte, 0) == 0<8> l0000F0F6
l0000F0F6:
	r5_1201 = 0x63<32>
	r4_1183 = 0xE<32>
l0000EFE8:
	branch SLICE(r5_1201 - 0x45<32>, byte, 0) <u 0<8> l0000F22C
l0000EFF2:
	branch SLICE(r5_1201 - 0x47<32>, byte, 0) <=u 0<8> l0000F0DA
l0000EFFC:
	branch SLICE(r5_1201 - 0x53<32>, byte, 0) == 0<8> l0000F074
l0000F074:
	r5_1201 = 0x73<32>
	r4_1183 = 0x10<32>
l0000F004:
	branch SLICE(r5_1201 - 0x58<32>, byte, 0) == 0<8> l0000F0AC
l0000F00C:
	branch SLICE(r5_1201 - 0x61<32>, byte, 0) == 0<8> l0000F0DA
l0000F014:
	branch SLICE(r5_1201 - 0x63<32>, byte, 0) == 0<8> l0000F0EA
l0000F0EA:
	branch r10_1024 >= 8<32> l0000F0F0
l0000F0EC_1:
	r4_1183 = 0xD<32>
l0000F0F0:
	branch r10_1024 < 8<32> l0000F0F4
l0000F0F0_1:
	r4_1183 = 0xE<32>
l0000F0F4:
l0000F01C:
	branch SLICE(r5_1201 - 0x64<32>, byte, 0) == 0<8> l0000F07E
l0000F024:
	branch SLICE(r5_1201 - 0x65<32>, byte, 0) <u 0<8> l0000F22C
l0000F02E:
	branch SLICE(r5_1201 - 0x67<32>, byte, 0) <=u 0<8> l0000F0DA
l0000F0DA:
	branch r10_1024 > 0xF<32> l0000F13E
l0000F0E0:
	branch Test(EQ,SLICE(r10_1024, bool, 2)) l0000F13E
l0000F13E:
	r4_1183 = 0xC<32>
l0000F0E6:
	r4_1183 = 0xB<32>
l0000F038:
	branch SLICE(r5_1201 - 0x69<32>, byte, 0) == 0<8> l0000F07E
l0000F07E:
	branch r10_1024 > 0xF<32> l0000F136
l0000F084:
	branch Test(EQ,SLICE(r10_1024, bool, 2)) l0000F136
l0000F136:
	r4_1183 = 9<32>
l0000F08A:
	branch r10_1024 <= 7<32> l0000F094
l0000F094:
	branch Test(NE,SLICE(r10_1024, bool, 1)) l0000F09E
l0000F09E:
	word32 r8_917 = SLICE(r10_1024, bool, 0)
	branch r8_917 != 0<32> l0000F0A6
l0000F0A2_1:
	r4_1183 = 5<32>
l0000F0A6:
	branch r8_917 == 0<32> l0000F0AA
l0000F0A6_1:
	r4_1183 = 3<32>
l0000F0AA:
l0000F09A:
	r4_1183 = 1<32>
l0000F090:
	r4_1183 = 7<32>
l0000F040:
	branch SLICE(r5_1201 - 0x6E<32>, byte, 0) == 0<8> l0000F108
l0000F108:
	branch r10_1024 > 0xF<32> l0000F13A
l0000F10E:
	branch Test(EQ,SLICE(r10_1024, bool, 2)) l0000F13A
l0000F13A:
	r4_1183 = 0x16<32>
l0000F114:
	branch r10_1024 <= 7<32> l0000F11E
l0000F11E:
	branch Test(NE,SLICE(r10_1024, bool, 1)) l0000F128
l0000F128:
	word32 r8_939 = SLICE(r10_1024, bool, 0)
	branch r8_939 != 0<32> l0000F130
l0000F12C_1:
	r4_1183 = 0x14<32>
l0000F130:
	branch r8_939 == 0<32> l0000F134
l0000F130_1:
	r4_1183 = 0x13<32>
l0000F134:
l0000F124:
	r4_1183 = 0x12<32>
l0000F11A:
	r4_1183 = 0x15<32>
l0000F048:
	branch SLICE(r5_1201 - 0x6F<32>, byte, 0) == 0<8> l0000F0AC
l0000F050:
	branch SLICE(r5_1201 - 0x70<32>, byte, 0) == 0<8> l0000F07A
l0000F07A:
	r4_1183 = 0x11<32>
l0000F058:
	branch SLICE(r5_1201 - 0x73<32>, byte, 0) == 0<8> l0000F0FC
l0000F0FC:
	branch r10_1024 >= 8<32> l0000F102
l0000F0FE_1:
	r4_1183 = 0xF<32>
l0000F102:
	branch r10_1024 < 8<32> l0000F106
l0000F102_1:
	r4_1183 = 0x10<32>
l0000F106:
l0000F060:
	branch SLICE(r5_1201 - 0x75<32>, byte, 0) == 0<8> l0000F0AC
l0000F068:
	branch SLICE(r5_1201 - 0x78<32>, byte, 0) != 0<8> l0000F22C
l0000F072:
l0000F0AC:
	branch r10_1024 > 0xF<32> l0000F142
l0000F0B2:
	branch Test(EQ,SLICE(r10_1024, bool, 2)) l0000F142
l0000F142:
	r4_1183 = 0xA<32>
l0000F0B8:
	branch r10_1024 <= 7<32> l0000F0C2
l0000F0C2:
	branch Test(NE,SLICE(r10_1024, bool, 1)) l0000F0CC
l0000F0CC:
	word32 r8_980 = SLICE(r10_1024, bool, 0)
	branch r8_980 != 0<32> l0000F0D4
l0000F0D0_1:
	r4_1183 = 6<32>
l0000F0D4:
	branch r8_980 == 0<32> l0000F0D8
l0000F0D4_1:
	r4_1183 = 4<32>
l0000F0D8:
l0000F0C8:
	r4_1183 = 2<32>
l0000F0BE:
	r4_1183 = 8<32>
l0000F144:
	r10_1024 = Mem825[sp_114 + 16<i32>:word32]
	Mem1044[r3_1278 + -24<i32>:word32] = r10_1024
	branch r10_1024 != 0xFFFFFFFF<32> l0000F158
l0000F14C:
	word32 r9_1047 = Mem1044[sp_114:word32]
	Mem1048[r3_1278 + -24<i32>:word32] = r9_1047
	branch r9_1047 == 0xFFFFFFFF<32> l0000F22C
l0000F154:
	Mem1053[sp_114:word32] = r9_1047 + 1<32>
l0000F158:
	r7_1056 = Mem1055[r3_1278 + 40<i32>:word32]
	branch r7_1056 <u r2_1082 l0000F1B0
l0000F15E:
	word32 r8_1079 = r2_1082 << 1<32>
	branch r2_1082 < 0<32> l0000F168
l0000F164_1:
	r2_1082 = r8_1079
l0000F168:
	branch r2_1082 >= 0<32> l0000F16C
l0000F168_1:
	r2_1082 = 0xFFFFFFFF<32>
l0000F16C:
	branch r2_1082 >u r7_1056 l0000F17C
l0000F172:
	r2_1082 = r7_1056 + 1<32>
	branch r7_1056 + 1<32> >=u r7_1056 l0000F17C
l0000F178_1:
	r2_1082 = 0xFFFFFFFF<32>
l0000F17C:
	branch r2_1082 >u Mem1055[0x0000F26C<p32>:word32] l0000F24A
l0000F184:
	word32 r12_1284
	word32 r9_1125 = Mem1055[r1_1276 + 4<i32>:word32]
	word32 r8_1126 = r2_1082 * 3<32>
	branch r9_1125 == 0<32> l0000F19C
l0000F19C:
	call Mem1055[r6_1281 + 32<i32>:word32] (retsize: 0;)
		uses: lr:lr_1815,r0:r0_1807,r1:r1_1799,r10:r10_1024,r11:r11_1819,r12:r8_1126 << 2<32>,r2:r2_1099,r3:r3_1792,r4:r4_1183,r5:r5_1201,r6:r6_1803,r7:r7_1056
		defs: lr:lr_1283,r0:r0_1275,r1:r1_1276,r10:r10_1286,r11:r11_1285,r12:r12_1284,r2:r2_1277,r3:r3_1278,r4:r4_1279,r5:r5_1280,r6:r6_1281,r7:r7_1282,sp:sp_1274
l0000F192:
	call Mem1055[r6_1281 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_1815,r0:r0_1807,r1:r1_1799,r10:r10_1024,r11:r8_1126 << 2<32>,r12:r9_1125,r2:r2_1099,r3:r3_1792,r4:r4_1183,r5:r5_1201,r6:r6_1803,r7:r7_1056
		defs: lr:lr_1301,r0:r0_1293,r1:r1_1294,r10:r10_1304,r11:r11_1303,r12:r12_1302,r2:r2_1295,r3:r3_1296,r4:r4_1297,r5:r5_1298,r6:r6_1299,r7:r7_1300,sp:sp_1292
l0000F1A0:
	branch r12_1284 == 0<32> l0000F24A
l0000F1A4:
	Mem1312[r1_1276 + 4<i32>:word32] = r12_1284
l0000F1B0:
	word32 r8_1315 = Mem1314[r1_1276:word32]
	word32 r9_1316 = Mem1314[r1_1276 + 4<i32>:word32]
	r10_1024 = r8_1315 * 3<32>
	r11_103 = r8_1315 + 1<32>
	branch r8_1315 <=u r7_1056 l0000F1A8
l0000F1A8:
	Mem1323[r8_1315 * 0xC<32>:word32] = 0<32>
	Mem1324[r1_1276:word32] = r8_1315 + 1<32>
l0000F1C2:
	word32 r9_1326 = r9_1316 + r7_1056 * 0xC<32>
	word32 r8_1327 = Mem1314[r9_1326:word32]
	branch r8_1327 != 0<32> l0000F1D4
l0000F1D4:
	branch r8_1327 != r4_1183 l0000F22C
l0000F22C:
	word32 r12_1341 = Mem1340[r1_1276 + 4<i32>:word32]
	branch r12_1341 == 0<32> l0000F236
l0000F232:
	call Mem1340[r6_1281 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1434,r0:r0_1354,r1:r1_1334,r10:r10_1440,r11:r11_1439,r12:r12_1341,r2:r2_1363,r3:r3_1373,r4:r4_1382,r5:r5_1390,r6:r6_1344,r7:r7_1414
		defs: lr:lr_1455,r0:r0_1447,r1:r1_1448,r10:r10_1458,r11:r11_1457,r2:r2_1449,r3:r3_1450,r4:r4_1451,r5:r5_1452,r6:r6_1453,r7:r7_1454
l0000F236:
	word32 r12_1464 = Mem1340[r0_1275 + 4<i32>:word32]
	branch r12_1464 == 0<32> l0000F240
l0000F23C:
	call Mem1340[r6_1281 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1474,r0:r0_1462,r1:r1_1468,r10:r10_1476,r11:r11_1475,r12:r12_1464,r2:r2_1469,r3:r3_1470,r4:r4_1471,r5:r5_1472,r6:r6_1467,r7:r7_1473
		defs: lr:lr_1487,r0:r0_1479,r1:r1_1480,r10:r10_1490,r11:r11_1489,r12:r12_1488,r2:r2_1481,r3:r3_1482,r4:r4_1483,r5:r5_1484,r6:r6_1485,r7:r7_1486
l0000F240:
	call Mem1340[r6_1281 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_1503,r0:r0_1496,r1:r1_1497,r10:r10_1506,r11:r11_1505,r12:r12_1504,r2:r2_1498,r3:r3_1499,r4:r4_1500,r5:r5_1501,r6:r6_1494,r7:r7_1502
		defs: lr:lr_1517,r12:r12_1518
	r8_1525 = 0x16<32>
l0000F1D0:
	Mem1526[r9_1326:word32] = r4_1183
l0000F1D8:
	word32 r7_1529 = Mem1528[sp_114 + 20<i32>:word32]
	Mem1532[r3_1278 + 36<i32>:byte] = SLICE(r5_1201, byte, 0)
	Mem1534[r3_1278 + 4<i32>:word32] = r7_1529 + 1<32>
	word32 r8_1536 = Mem1534[r0_1275:word32]
	Mem1538[r0_1275:word32] = r8_1536 + 1<32>
	r7_1056 = r7_1529 + 1<32>
	r10_1024 = Mem1538[sp_114 + 4<i32>:word32]
	branch r8_1536 + 1<32> <u r10_1024 l0000F20C
l0000F1EE:
	branch r10_1024 < 0<32> l0000F24A
l0000F1F2:
	word32 r8_1545 = Mem1538[0x0000F270<p32>:word32]
	Mem1546[sp_114 + 4<i32>:word32] = r10_1024 << 1<i32>
	r10_1024 = r10_1024 << 1<i32>
	branch r10_1024 << 1<i32> >u r8_1545 l0000F24A
l0000F1FE:
	word32 r12_1566
	byte VNZC_1571
	call Mem1546[r6_1281 + 80<i32>:word32] (retsize: 0;)
		uses: lr:lr_1555,r0:r0_1535,r1:r1_1552,r10:r10_1539 << 1<i32>,r11:(r10_1539 << 1<i32>) * 0x2C<32>,r12:Mem1546[r0_1535 + 4<i32>:word32],r2:r2_1553,r3:r3_1531,r4:r4_1554,r5:r5_1530,r6:r6_1551,r7:r7_1529 + 1<32>
		defs: lr:lr_1565,r0:r0_1557,r1:r1_1558,r10:r10_1568,r11:r11_1567,r12:r12_1566,r2:r2_1559,r3:r3_1560,r4:r4_1561,r5:r5_1562,r6:r6_1563,r7:r7_1564,sp:sp_1556,VNZC:VNZC_1571
	branch SLICE(VNZC_1571, bool, 1) l0000F24A
l0000F24A:
	word32 r12_1578 = Mem1574[r1_1276 + 4<i32>:word32]
	branch r12_1578 == 0<32> l0000F254
l0000F250:
	call Mem1574[r6_1281 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1591,r0:r0_1582,r1:r1_1573,r10:r10_1597,r11:r11_1592,r12:r12_1578,r2:r2_1583,r3:r3_1584,r4:r4_1585,r5:r5_1586,r6:r6_1581,r7:r7_1589
		defs: lr:lr_1611,r0:r0_1603,r1:r1_1604,r10:r10_1614,r11:r11_1613,r2:r2_1605,r3:r3_1606,r4:r4_1607,r5:r5_1608,r6:r6_1609,r7:r7_1610
l0000F254:
	r12_1620 = Mem1574[r0_1275 + 4<i32>:word32]
	branch r12_1620 == 0<32> l0000F25E
l0000F25A:
	call Mem1574[r6_1281 + 12<i32>:word32] (retsize: 0;)
		uses: lr:lr_1630,r0:r0_1618,r1:r1_1624,r10:r10_1632,r11:r11_1631,r12:r12_1620,r2:r2_1625,r3:r3_1626,r4:r4_1627,r5:r5_1628,r6:r6_1623,r7:r7_1629
		defs: lr:lr_1643,r0:r0_1635,r1:r1_1636,r10:r10_1646,r11:r11_1645,r12:r12_1644,r2:r2_1637,r3:r3_1638,r4:r4_1639,r5:r5_1640,r6:r6_1641,r7:r7_1642
l0000F25E:
	call Mem1651[r6_1281 + 28<i32>:word32] (retsize: 0;)
		uses: lr:lr_1659,r0:r0_1652,r1:r1_1653,r10:r10_1662,r11:r11_1661,r12:r12_1660,r2:r2_1654,r3:r3_1655,r4:r4_1656,r5:r5_1657,r6:r6_1650,r7:r7_1658
		defs: lr:lr_1673,r12:r12_1674
	r8_1525 = 0xC<32>
l0000F266:
	Mem1684[r12_1518:word32] = r8_1525
l0000F20A:
	Mem1685[r0_1275 + 4<i32>:word32] = r12_1566
l0000EFA8:
	r10_1024 = r10_1024 + 0x10<32>
l0000EF9C:
	r10_1024 = r10_1024 + 8<32>
l0000EF90:
	r10_1024 = r10_1024 | 4<u32>
l0000EF7A:
	r10_1024 = r10_1024 | 1<32> << SLICE(r10_1024, bool, 0)
l0000EF68:
	r12_1699 = r12_1699 + 1<32>
l0000EC86:
	r8_1702 = Mem163[r3_1278 + 8<i32>:word32] | 0x20<u32>
l0000EC78:
	r8_1702 = Mem163[r3_1278 + 8<i32>:word32] | 0x10<u32>
l0000EC6A:
	r8_1702 = Mem163[r3_1278 + 8<i32>:word32] | 8<u32>
l0000EC5C:
	r8_1702 = Mem163[r3_1278 + 8<i32>:word32] | 4<u32>
l0000EC4E:
	r8_1702 = Mem163[r3_1278 + 8<i32>:word32] | 2<u32>
l0000EC40:
	r8_1702 = Mem163[r3_1278 + 8<i32>:word32] | 1<u32>
l0000EC2E:
	Mem1724[r3_1278 + 8<i32>:word32] = r8_1702
	r12_159 = r12_159 + 1<32>
l0000F214:
	Mem1728[Mem70[r0_1275 + 4<i32>:word32]:word32] = r7_1056
	Mem1730[r0_1275 + 12<i32>:word32] = Mem1728[sp_114 + 12<i32>:word32]
	Mem1732[r0_1275 + 8<i32>:word32] = Mem1730[sp_114 + 8<i32>:word32]
l0000F268:
	lrOut = lr_122
	return <invalid>
fn0000EB48_exit:


bool fn0000F278(word64 r11_r10, word32 r7, word32 pc, ptr32 & pcOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  pc:[0..31] r7:[0..31] Sequence r11:r10:[0..63]
// LiveOut: Z pc
// Trashed: VNZC lr pc r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn0000F278_entry:
	word32 r10 = SLICE(r11_r10, word32, 0)
	word32 r11 = SLICE(r11_r10, word32, 32)
l0000F278:
	word32 r6_20 = 0x0000F27E<p32> - Mem17[0x0000F2C8<p32>:word32]
	word32 r12_131
	word32 lr_132
	branch fn00010CFC(pc, out r12_131, out lr_132) l0000F2C4
l0000F28E:
	word32 lr_46
	word32 r9_133
	word32 r12_134
	branch __avr32_f64_cmp_lt(0<32>, 0<32>, r10, r11, out r9_133, out r12_134, out lr_46) l0000F2A0
l0000F2A0:
	word32 r12_135
	branch __avr32_f64_cmp_eq(0<32>, 0<32>, r10, r11, out r12_135) l0000F2C4
l0000F2C4:
l0000F2AE:
	call Mem67[r6_20 + 168<i32>:word32] (retsize: 0;)
		uses: lr:lr_46,pc:pc,r10:8<32>,r11:fp - 0x1C<32>,r12:Mem67[r6_20 + 604<i32>:word32],r4:r10,r5:r11,r6:r6_20,r7:r7,Stack +0000:r11_r10
		defs: pc:pc_82
l0000F29C:
l0000F2C6:
	pcOut = pc
	return SLICE(cond(fp - 20<i32>), bool, 1)
fn0000F278_exit:


word32 __avr32_f64_mul(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
//      fn0000D220
//      fn0000E684
//      fn0000E868
//      fn000101CC
// MayUse:  r10:[0..31] r11:[0..51] r8:[0..31] r9:[0..51]
// LiveOut: r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
__avr32_f64_mul_entry:
l0000F2D0:
	branch (r10 | r11 << 1<8>) == 0<32> l0000F48E
l0000F48E:
	word32 r11_10 = (r11 ^ r9) & 0x80000000<32>
	branch SLICE(r9, word11, 20) == 0x7FF<32> l0000F4A0
l0000F4A0:
	r11Out = 0xFFFFFFFF<32>
	return 0xFFFFFFFF<32>
l0000F49E_1:
	r11Out = r11_10
	return r10
l0000F2D8:
	word32 r10_185
	word32 r11_179
	word32 lr_39 = r11 ^ r9
	word32 r7_166 = SLICE(r11, word11, 20)
	branch r7_166 == 0<32> l0000F36A
l0000F36A:
	word32 r6_51
	word32 r12_46 = __clz(r10)
	word32 r6_47 = __clz(r11 & 0xFFFFF<32>)
	r6_51 = r6_47
	branch Test(UGE,r6_47 == 0x20<32>) l0000F37E
l0000F376_1:
l0000F37A_1:
	r6_51 = r12_46 + 0x1F<32>
l0000F37E:
	branch Test(ULT,r6_47 == 0x20<32>) l0000F382
l0000F37E_1:
	r6_51 = r6_51 - 1<32>
l0000F382:
	branch r6_51 >= 0x20<32> l0000F3A0
l0000F3A0:
	r11_179 = r10 << r6_51
	branch r11_179 == 0<32> l0000F46C
l0000F3A6:
	r10_185 = 0<32>
	r7_166 = r7_166 - (r6_51 - 0xB<32>)
l0000F388:
	r11_179 = (r11 & 0xFFFFF<32>) << r6_51 | r10 >>u 0x20<32> - r6_51
	r10_185 = r10 << r6_51
	r7_166 = r7_166 - (r6_51 - 0xB<32>)
l0000F2E6:
	r10_185 = r10 << 10<i32>
	r11_179 = 0<i2>
l0000F2F2:
	word32 r9_110
	word32 r8_140
	word32 r6_144 = SLICE(r9, word11, 20)
	branch r6_144 == 0<32> l0000F3AE
l0000F3AE:
	word32 r5_101
	word32 r12_96 = __clz(r8)
	word32 r5_97 = __clz(r9 & 0xFFFFF<32>)
	r5_101 = r5_97
	branch Test(UGE,r5_97 == 0x20<32>) l0000F3C2
l0000F3BA_1:
l0000F3BE_1:
	r5_101 = r12_96 + 0x16<32>
l0000F3C2:
	branch Test(ULT,r5_97 == 0x20<32>) l0000F3C6
l0000F3C2_1:
	r5_101 = r5_101 - 0xA<32>
l0000F3C6:
	branch r5_101 >= 0x20<32> l0000F3E4
l0000F3E4:
	r9_110 = r8 << r5_101
	branch r9_110 == 0<32> l0000F46C
l0000F46C:
	r11Out = lr_39 & 0x80000000<32>
	return 0<32>
l0000F3EA:
	r8_140 = 0<32>
	r6_144 = r6_144 - (r5_101 - 2<32>)
l0000F3CC:
	r9_110 = (r9 & 0xFFFFF<32>) << r5_101 | r8 >>u 0x20<32> - r5_101
	r8_140 = r8 << r5_101
	r6_144 = r6_144 - (r5_101 - 2<32>)
l0000F2F8:
	r8_140 = r8 << 1<i32>
	r9_110 = 0<i11>
l0000F300:
	branch r7_166 == 0x7FF<32> l0000F3F2
l0000F306:
	branch r6_144 == 0x7FF<32> l0000F3F2
l0000F3F2:
	word32 r11_188 = r11_179 & 0xFFFFF<32> | r10_185
	word32 r9_191 = r9_110 & 0xFFFFF<32> | r8_140
	branch r7_166 != 0x7FF<32> l0000F414
l0000F414:
	branch r9_191 == 0<32> l0000F47C
l0000F418:
l0000F404:
	branch r11_188 != 0<32> l0000F476
l0000F408:
	branch r6_144 != 0x7FF<32> l0000F47C
l0000F40E:
	branch r9_191 == 0<32> l0000F47C
l0000F412:
l0000F476:
	r11Out = 0xFFFFFFFF<32>
	return 0xFFFFFFFF<32>
l0000F30C:
	word64 r7_r6_223 = r10_185 *u r8_140
	word64 r11_r10_224 = r11_179 *u r9_110
	ui64 r10_r7_362 = SEQ(SLICE(r11_r10_224, word32, 0), SLICE(r7_r6_223, word32, 32)) + (r11_179 *u r8_140 + r10_185 *u r9_110)
	word32 r10_232 = SLICE(r10_r7_362, word32, 32)
	word32 r12_217 = r7_166 + r6_144
	word32 r11_236 = SLICE(r11_r10_224, word32, 32) + (r10_232 <u 0<32>)
	word32 r12_218 = r12_217 - 0x3FE<32>
	word32 r6_272 = SLICE(r7_r6_223, word32, 0)
	word32 r7_227 = SLICE(r10_r7_362, word32, 0)
	branch Test(EQ,SLICE(r11_236, bool, 20)) l0000F33A
l0000F332:
	r10_232 = __rcl(r10_232, 1<i32>, SLICE(cond(r7_227 << 1<i32>), bool, 0))
	r7_227 = r7_227 << 1<i32>
	r11_236 = __rcl(r11_236, 1<i32>, SLICE(cond(r10_232), bool, 0))
	r12_218 = r12_217 - 0x3FF<32>
l0000F33A:
	word32 r11_291
	branch r12_218 <= 0<32> l0000F41A
l0000F41A:
	word32 r12_255 = __satu(-r12_218 + 1<32>, 6<i32>)
	branch r12_255 >= 0x20<32> l0000F448
l0000F448:
	word32 r8_259 = 0x20<32> - r12_255
	branch r8_259 != 0<32> l0000F450
l0000F44C_1:
	r9_110 = 0<32>
l0000F450:
	branch r8_259 == 0<32> l0000F456
l0000F452:
	r9_110 = r11_236 << r8_259
l0000F456:
	r6_272 = r6_272 | r7_227 | r10_232 << 1<8>
	r7_227 = r9_110 | r10_232 >>u r12_255
	r10_232 = r11_236 >>u r12_255
	r11_291 = 0<32>
l0000F428:
	word32 r8_292 = 0x20<32> - r12_255
	r6_272 = r6_272 | r7_227
	r7_227 = r7_227 >>u r12_255 | r10_232 << r8_292
	r10_232 = r10_232 >>u r12_255 | r11_236 << r8_292
	r11_291 = r11_236 >>u r12_255
l0000F340:
	branch r12_218 >= 0x7FF<32> l0000F47C
l0000F47C:
	r11Out = __setbit(0xFFF00000<32>, 31<i32>, SLICE(lr_39, bool, 31))
	return 0<32>
l0000F348:
	r11_291 = SLICE(r12_218, int11, 20)
l0000F34C:
	word32 r10_336 = r10_232 + __satu((r7_227 | (r6_272 | r10_232 << 0x1F<8>) << 1<8>) ^ 0x80000000<32>, 1<i32>)
	r11Out = __setbit(r11_291 + (r10_336 <u 0<32>), 31<i32>, SLICE(lr_39, bool, 31))
	return r10_336
__avr32_f64_mul_exit:


word32 __avr32_f64_sub(word32 r8, word32 r9, word32 r10, word32 r11, word32 lr, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      __avr32_f64_add
// MayUse:  lr:[0..31] r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r5 r6 r7 r8 r9
// Trashed: VNZC lr r10 r11 r12 r5 r6 r7 r8 r9
// Preserved: sp
__avr32_f64_sub_entry:
l0000F4B4:
	branch (r11 ^ r9) < 0<32> l0000F64C
l0000F64C:
l0000F64C_thunk___avr32_f64_add:
	word32 r11_11
	word32 r9_12
	word32 r6_15
	word32 r7_16
	word32 lr_17
	word32 r10_18
	word32 r8_19
	word32 r5_14 = __avr32_f64_add(r8_19, r9 ^ 0x80000000<32>, r10_18, r11, out r6_15, out r7_16, out r8_19, out r9_12, out r10_18, out r11_11, out lr_17)
	r6Out = r6_15
	r7Out = r7_16
	r8Out = r8_19
	r9Out = r9_12
	r10Out = r10_18
	r11Out = r11_11
	lrOut = lr_17
	return r5_14
l0000F4BC:
	word32 r12_128 = r11 & 0x80000000<32>
	word32 r11_32 = r11 & 0x7FFFFFFF<u32>
	word32 r9_33 = r9 & 0x7FFFFFFF<u32>
	branch (r11 & 0x7FFFFFFF<u32>) - (r9 & 0x7FFFFFFF<u32>) >=u SLICE(cond(r10 - r8), bool, 0) l0000F4E2
l0000F4D2:
	r11_32 = r9 & 0x7FFFFFFF<u32>
	r9_33 = r11 & 0x7FFFFFFF<u32>
	r10 = r8
	r8 = r10
	r12_128 = r11 & 0x80000000<32> ^ 0x80000000<32>
l0000F4E2:
	ui64 r9_r8_428
	word32 r11_52 = r11_32 << 11<i32> | r10 << 0x15<8>
	word32 r7_208 = r11_32 >>u 0x14<32>
	word32 r10_53 = r10 << 11<i32>
	word32 r11_54 = r11_52 | 0x80000000<u32>
	word32 r6_103 = r9_33 >>u 0x14<32>
	branch r6_103 == 0<32> l0000F57E
l0000F57E:
	word32 r9_61 = r9_33 << 11<i32> | r8 << 0x15<8>
	word32 r8_62 = r8 << 11<i32>
	branch (r9_61 | r8_62) == 0<32> l0000F58E
l0000F58A_1:
	r6_103 = 1<32>
l0000F58E:
	word32 lr_69 = 0<32> - r7_208
	bool C_76 = SLICE(cond(lr_69), bool, 0)
	branch lr_69 != 0<32> l0000F596
l0000F592_1:
	r7_208 = 1<32>
l0000F596:
	r11_54 = __setbit(r11_52 | 0x80000000<u32>, 31<i32>, C_76)
	lr = r11_54 | r10_53
	branch lr != 0<32> l0000F5A2
l0000F59E_1:
	r7_208 = 0<32>
l0000F5A2:
	r9_r8_428 = SEQ(r9_61, r8_62) (alias)
l0000F4F6:
	r9_r8_428 = SEQ(r9_33 << 11<i32> | r8 << 0x15<8> | 0x80000000<u32>, r8 << 11<i32>) (alias)
l0000F500:
	word32 r9_154 = SLICE(r9_r8_428, word32, 32)
	word32 r8_147 = SLICE(r9_r8_428, word32, 0)
	branch r7_208 == 0x7FF<32> l0000F5A4
l0000F5A4:
	word32 lr_100 = r11_54 & 0x7FFFFFFF<u32> | r10_53
	branch lr_100 != 0<32> l0000F5BA
l0000F5AC:
	branch r6_103 == 0x7FF<32> l0000F5BA
l0000F5BA:
	r6Out = r6
	r7Out = r7
	r8Out = r8_147
	r9Out = r9_154
	r10Out = 0xFFFFFFFF<32>
	r11Out = 0xFFFFFFFF<32>
	lrOut = lr_100
	return r5
l0000F5B2:
	r6Out = r6
	r7Out = r7
	r8Out = r8_147
	r9Out = r9_154
	r10Out = r10_53
	r11Out = r12_128 | r7_208 << 0x14<8>
	lrOut = lr_100
	return r5
l0000F506:
	word32 r6_138 = r7_208 - r6_103
	ui64 r9_r8_424 = r9_r8_428
	branch r6_138 == 0<32> l0000F52C
l0000F50A:
	word32 r5_141 = 0x20<32> - r6_138
	branch r6_138 >=u 0x20<32> l0000F60C
l0000F60C:
	word32 r6_144 = __satu(r6_138, 6<i32>)
	branch r6_138 != 0x20<32> l0000F614
l0000F610_1:
	lr = r8_147
l0000F614:
	branch r6_138 == 0x20<32> l0000F61C
l0000F616:
	lr = r9_154 << r5_141 | r8_147
l0000F61C:
	lr = CONVERT(lr != 0<32>, bool, word32)
	r9_r8_424 = CONVERT(r9_154 >>u r6_144 | lr, word32, uint64) (alias)
l0000F514:
	lr = CONVERT(r8_147 << r5_141 != 0<32>, bool, word32)
	r9_r8_424 = SEQ(r9_154 >>u r6_138, r8_147 >>u r6_138 | r9_154 << r5_141 | lr) (alias)
l0000F52C:
	ui64 r11_r10_327 = SEQ(r11_54, r10_53) - r9_r8_424
	word32 r11_200 = SLICE(r11_r10_327, word32, 32)
	word32 r8_192 = SLICE(r9_r8_424, word32, 0)
	word32 r10_193 = SLICE(r11_r10_327, word32, 0)
	word32 r6_202 = __clz(r11_200)
	branch Test(EQ,r6_202 == 0<32>) l0000F552
l0000F538:
	branch Test(ULT,r6_202 == 0x20<32>) l0000F62A
l0000F62A:
	word32 r6_209
	word32 r6_205 = __clz(r10_193)
	r6_209 = r6_205
	branch Test(UGE,r6_205 == 0x20<32>) l0000F63A
l0000F62E_1:
	r7_208 = 0<32>
l0000F632_1:
	r6_209 = 0<32>
l0000F636_1:
	r12_128 = 0<32>
l0000F63A:
	branch Test(ULT,r6_205 == 0x20<32>) l0000F63E
l0000F63A_1:
	r6_209 = r6_209 + 0x20<32>
l0000F63E:
	r11_200 = r10_193 << r6_209
	r10_193 = 0<32>
	r7_208 = r7_208 - r6_209
	branch r7_208 <= 0<32> l0000F5C2
l0000F64A:
l0000F53A:
	lr = r10_193 >>u 0x20<32> - r6_202
	r11_200 = r11_200 << r6_202 | lr
	r10_193 = r10_193 << r6_202
	r7_208 = r7_208 - r6_202
	branch r7_208 <= 0<32> l0000F5C2
l0000F5C2:
	word32 r7_238 = __satu(-r7_208 + 1<32>, 6<i32>)
	branch r7_238 >= 0x20<32> l0000F5F0
l0000F5F0:
	r8_192 = 0x40<32> - r7_238
	r10_193 = r11_200 >>u r7_238 | CONVERT((r11_200 << r8_192 | r10_193) != 0<32>, bool, word32)
	r11_200 = 0<32>
	r7_208 = 0<32>
l0000F5D0:
	r8_192 = 0x20<32> - r7_238
	r10_193 = r10_193 >>u r7_238 | CONVERT(r10_193 << r8_192 != 0<32>, bool, word32) | r11_200 << r8_192
	r11_200 = r10_193 >>u r7_238
	r7_208 = 0<32>
l0000F552:
	word32 r10_274 = r10_193 >>u 11<i32> | r11_200 << 0x15<8>
	word32 r9_271 = r10_193 << 0x15<32>
	word32 r11_285 = SLICE(r7_208, int11, 20) | r12_128
	word32 r7_287 = 0x80000000<32>
	branch Test(EQ,SLICE(r10_274, bool, 0)) l0000F572
l0000F56E_1:
	r7_287 = 0x80000001<32>
l0000F572:
	word32 r9_297 = CONVERT(r9_271 >=u r7_287, bool, word32)
	r6Out = r6
	r7Out = r7
	r8Out = r8_192
	r9Out = r9_297
	word32 r10_299 = r10_274 + r9_297
	r10Out = r10_299
	r11Out = r11_285 + (r10_299 <u 0<32>)
	lrOut = lr
	return r5
__avr32_f64_sub_exit:


word32 __avr32_f64_add(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r6Out, ptr32 & r7Out, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      __avr32_f64_sub
//      fn000101CC
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r5 r6 r7 r8 r9
// Trashed: VNZC lr r10 r11 r12 r5 r6 r7 r8 r9
// Preserved: sp
__avr32_f64_add_entry:
l0000F650:
	branch (r11 ^ r9) < 0<32> l0000F4B0
l0000F4B0:
l0000F4B0_thunk___avr32_f64_sub:
	word32 r11_11
	word32 r9_12
	word32 r6_15
	word32 r7_16
	word32 lr_17
	word32 r10_18
	word32 r8_19
	word32 r5_14 = __avr32_f64_sub(r8_19, r9 ^ 0x80000000<32>, r10_18, r11, lr_17, out r6_15, out r7_16, out r8_19, out r9_12, out r10_18, out r11_11, out lr_17)
	r6Out = r6_15
	r7Out = r7_16
	r8Out = r8_19
	r9Out = r9_12
	r10Out = r10_18
	r11Out = r11_11
	lrOut = lr_17
	return r5_14
l0000F658:
	word32 r11_32 = r11 & 0x7FFFFFFF<u32>
	ui64 r9_r8_304 = SEQ(r9 & 0x7FFFFFFF<u32>, r8)
	branch (r11 & 0x7FFFFFFF<u32>) >=u (r9 & 0x7FFFFFFF<u32>) l0000F676
l0000F66A:
	r11_32 = r9 & 0x7FFFFFFF<u32>
	r10 = r8
	r9_r8_304 = SEQ(r11 & 0x7FFFFFFF<u32>, r10) (alias)
l0000F676:
	word32 r9_142 = SLICE(r9_r8_304, word32, 32)
	word32 r8_140 = SLICE(r9_r8_304, word32, 0)
	word32 lr_126 = 0<32>
	word32 r7_181 = SLICE(r11_32, word11, 20)
	word32 r11_47 = SLICE(r11_32, word20, 0)
	word32 r6_50 = SLICE(r9_142, word11, 20)
	branch r6_50 == 0<32> l0000F744
l0000F744:
	r6_50 = 1<32>
	branch r7_181 != 0<32> l0000F68E
l0000F74A:
	r6Out = r6
	r7Out = r7
	r8Out = r8_140
	r9Out = r9_142
	ui64 r11_r10_227 = SEQ((r11_47 | 0x100000<u32>) & 0xFFEFFFFF<u32>, r10) + r9_r8_304
	r10Out = SLICE(r11_r10_227, word32, 0)
	r11Out = SLICE(r11_r10_227, word32, 32) | r11 & 0x80000000<32>
	lrOut = 0<32>
	return r5
l0000F688:
	r9_142 = SLICE(r9_142, word20, 0) | 0x100000<u32>
l0000F68E:
	branch r7_181 == 0x7FF<32> l0000F6DC
l0000F6DC:
	word32 r11_81 = (r11_47 | 0x100000<u32>) & 0xFFEFFFFF<u32>
	word32 lr_264 = r11_81 | r10
	branch lr_264 != 0<32> l0000F702
l0000F6E4:
	branch r6_50 == 0x7FF<32> l0000F6EE
l0000F6EE:
	r9_142 = r9_142 & 0xFFEFFFFF<u32>
	lr_264 = r9_142 | r8_140
	branch lr_264 != 0<32> l0000F702
l0000F702:
	r6Out = r6
	r7Out = r7
	r8Out = r8_140
	r9Out = r9_142
	r10Out = 0xFFFFFFFF<32>
	r11Out = 0xFFFFFFFF<32>
	lrOut = lr_264
	return r5
l0000F6F6:
	r6Out = r6
	r7Out = r7
	r8Out = r8_140
	r9Out = r9_142
	r10Out = 0<32>
	r11Out = 0x7FF00000<32>
	lrOut = lr_264
	return r5
l0000F6EA:
	r6Out = r6
	r7Out = r7
	r8Out = r8_140
	r9Out = r9_142
	r10Out = r10
	r11Out = r11_81
	lrOut = lr_264
	return r5
l0000F694:
	word32 r6_117 = r7_181 - r6_50
	branch r6_117 == 0<32> l0000F6B4
l0000F698:
	word32 r5_120 = 0x20<32> - r6_117
	branch r6_117 >=u 0x20<32> l0000F70A
l0000F70A:
	word32 r6_123 = __satu(r6_117, 6<i32>)
	branch r6_117 != 0x20<32> l0000F712
l0000F70E_1:
	lr_126 = r8_140
l0000F712:
	branch r6_117 == 0x20<32> l0000F71E
l0000F714:
	lr_126 = r9_142 << r5_120 | CONVERT(r8_140 != 0<32>, bool, word32)
l0000F71E:
	r8_140 = r9_142 >>u r6_123
	r9_142 = 0<32>
l0000F6A2:
	lr_126 = r8_140 << r5_120
	r9_142 = r9_142 >>u r6_117
	r8_140 = r8_140 >>u r6_117 | r9_142 << r5_120
l0000F6B4:
	word32 r10_154 = r10 + r8_140
	word32 r11_161 = (r11_47 | 0x100000<u32>) + r9_142 + (r10_154 <u 0<32>)
	branch Test(EQ,SLICE(r11_161, bool, 21)) l0000F726
l0000F726:
	r10_154 = __rcr(r10_154, 1<i32>, SLICE(cond(r11_161 >>u 1<i32>), bool, 0))
	lr_126 = __rcr(lr_126 | lr_126 << 1<8>, 1<i32>, SLICE(cond(r10_154), bool, 0))
	r7_181 = r7_181 + 1<32>
	branch r7_181 != 0x7FE<32> l0000F742
l0000F736_1:
	r10_154 = 0<32>
l0000F73A_1:
l0000F73E_1:
	lr_126 = 0<32>
l0000F742:
l0000F6C0:
	word32 lr_204 = __satu((lr_126 | SLICE(r10_154, bool, 0)) ^ 0x80000000<32>, 1<i32>)
	r6Out = r6
	r7Out = r7
	r8Out = r8_140
	r9Out = r9_142
	word32 r10_206 = r10_154 + lr_204
	r10Out = r10_206
	r11Out = (SLICE(r7_181, int11, 20) | r11 & 0x80000000<32>) + (r10_206 <u 0<32>)
	lrOut = lr_204
	return r5
__avr32_f64_add_exit:


void __avr32_f64_to_u32(word32 r10, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  r10:[0..31] r11:[0..31]
// LiveOut:
// Trashed: VNZC r11 r12 r9
// Preserved: sp
__avr32_f64_to_u32_entry:
l0000F760:
	branch r11 >= 0<32> l0000F762_thunk___avr32_f64_to_s32
l0000F762_thunk___avr32_f64_to_s32:
	__avr32_f64_to_s32(r10, r11)
	return
l0000F762_1:
	return
__avr32_f64_to_u32_exit:


word32 __avr32_f64_to_s32(word32 r10, word32 r11)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      __avr32_f64_to_u32
// MayUse:  r10:[0..31] r11:[0..31]
// LiveOut: r12
// Trashed: VNZC r11 r12 r9
// Preserved: sp
__avr32_f64_to_s32_entry:
l0000F764:
	word32 r12_5 = r11 << 1<32> >>u 21<i32>
	branch r12_5 >=u 0x3FF<32> l0000F770
l0000F770:
	word32 r11_16 = (r11 << 11<i32> | 0x80000000<u32> | r10 << 0x15<8>) >>u 0x1F<32> - (r12_5 - 0x3FF<32>)
	branch r11 << 1<i32> <u 0<32> l0000F786
l0000F786:
	return -r11_16
l0000F784_1:
	return r11_16
l0000F76E_1:
	return 0<32>
__avr32_f64_to_s32_exit:


word32 fn0000F792(word32 r10, word32 r11, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
// MayUse:  r10:[0..31] r11:[0..31]
// LiveOut: r10 r11
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: sp
fn0000F792_entry:
l0000F792:
	branch r11 >= 0<32> l0000F79E
l0000F79E:
	word32 r9_7 = r11 << 1<32> >>u 21<i32>
	branch r9_7 >=u 0x3FF<32> l0000F7B2
l0000F7B2:
	word32 r11_15 = r11 << 11<i32> | 0x80000000<u32> | r10 << 0x15<8>
	word32 r10_16 = r10 << 11<i32>
	word32 r9_17 = 0x3F<32> - (r9_7 - 0x3FF<32>)
	branch r9_17 == 0<32> l0000F7E6
l0000F7C4:
	branch r9_17 >=u 0x20<32> l0000F7E0
l0000F7E0:
	r10_16 = r11_15 >>u r9_17
	r11_15 = 0<32>
l0000F7CA:
	r11_15 = r11_15 >>u r9_17
	r10_16 = r10 << 11<i32> >>u r9_17 | r11_15 << 0x20<32> - r9_17
l0000F7E6:
	branch r11 << 1<i32> <u 0<32> l0000F7EA
l0000F7EA:
	word32 r10_41 = -r10_16
	r11Out = -r11_15 - (r10_41 <u 0<32>)
	return r10_41
l0000F7E8_1:
	r11Out = r11_15
	return r10_16
l0000F7A8_1:
l0000F7AC_1:
l0000F7B0_1:
	r11Out = 0<32>
	return 0<32>
l0000F794_1:
l0000F798_1:
l0000F79C_1:
	r11Out = 0<32>
	return 0<32>
fn0000F792_exit:


word32 __avr32_u32_to_f64(word32 r12, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095D6
//      fn000101CC
// MayUse:  r12:[0..31]
// LiveOut: r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
__avr32_u32_to_f64_entry:
l0000F7FA:
l0000F800_thunk_fn0000F806:
	word32 r11_9
	word32 lr_18
	word32 r10_8 = fn0000F806(r12, 0<32>, out r11_9, out lr_18)
	r11Out = r11_9
	return r10_8
__avr32_u32_to_f64_exit:


word32 __avr32_s32_to_f64(word32 r12, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
// MayUse:  r12:[0..31]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
__avr32_s32_to_f64_entry:
l0000F802:
	word32 r11_6 = abs(r12)
l0000F804_thunk_fn0000F806:
	word32 lr_8
	word32 r11_10
	word32 r10_9 = fn0000F806(r11_6, r12, out r11_10, out lr_8)
	r11Out = r11_10
	lrOut = lr_8
	return r10_9
__avr32_s32_to_f64_exit:


word32 fn0000F806(word32 r11, word32 r12, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __avr32_u32_to_f64
//      __avr32_s32_to_f64
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
fn0000F806_entry:
l0000F806:
	branch Z l0000F808_thunk_fn0000F80A
l0000F808_thunk_fn0000F80A:
	word32 r11_26
	word32 lr_30
	word32 r10_25 = fn0000F80A(0<32>, r11, r12, out r11_26, out lr_30)
	r11Out = r11_26
	lrOut = lr_30
	return r10_25
l0000F808_1:
	r11Out = r11
	lrOut = lr
	return 0<32>
fn0000F806_exit:


word32 fn0000F80A(word32 r10, word32 r11, word32 r12, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      __avr32_s32_to_f64
//      fn0000F806
// MayUse:  r10:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: sp
fn0000F80A_entry:
l0000F80A:
	word32 r9_26 = 0x41E<32>
	word32 r8_8 = __clz(r11)
	branch Test(EQ,r8_8 == 0<32>) l0000F842
l0000F816:
	branch Test(ULT,r8_8 == 0x20<32>) l0000F82E
l0000F82E:
	word32 r8_15
	word32 r8_12 = __clz(r10)
	r8_15 = r8_12
	branch Test(UGE,r8_12 == 0x20<32>) l0000F836
l0000F832_1:
	r8_15 = 0<32>
l0000F836:
	branch Test(ULT,r8_12 == 0x20<32>) l0000F83A
l0000F836_1:
	r8_15 = r8_15 + 0x20<32>
l0000F83A:
	r11 = r10 << r8_15
	r10 = 0<32>
	r9_26 = 0x41E<32> - r8_15
l0000F818:
	lr = r10 >>u 0x20<32> - r8_8
	r11 = r11 << r8_8 | lr
	r10 = r10 << r8_8
	r9_26 = 0x41E<32> - r8_8
l0000F842:
	branch r9_26 > 0<32> l0000F8A4
l0000F8A4:
	word32 r8_38 = 0x3FF<32>
	branch Test(NE,SLICE(r10, bool, 11)) l0000F8B0
l0000F8AC_1:
	r8_38 = 0x400<32>
l0000F8B0:
	word32 r10_46 = r10 + r8_38
	word32 r11_51 = r11 + (r10_46 <u 0<32>)
	branch r11_51 >=u 0<32> l0000F8B8
l0000F8B4_1:
	r9_26 = r9_26 + 2<32>
l0000F8B8:
	word32 r11_73
	word32 r10_183
	branch r9_26 < 0x7FF<32> l0000F8C8
l0000F8C8:
	branch Test(EQ,SLICE(r11_51, bool, 31)) l0000F8D0
l0000F8CC_1:
	r9_26 = r9_26 - 1<32>
l0000F8D0:
	r10_183 = r10_46 >>u 11<i32> | r11_51 << 0x15<8>
	r11_73 = r11_51 << 1<i32> >>u 11<i32> | r9_26 << 0x15<8>
l0000F8BE:
	r10_183 = 0<32>
	r11_73 = 0xFFE00000<32>
l0000F8DE:
	r11Out = __rcr(r11_73, 1<i32>, SLICE(cond(r12 << 1<i32>), bool, 0))
	lrOut = lr
	return r10_183
l0000F848:
	word32 r10_151
	word32 r11_147
	word32 r9_101 = -r9_26
	branch r9_101 <u 0x35<32> l0000F858
l0000F858:
	word32 r10_113
	word32 r11_112
	word32 r8_106 = 0x20<32> - (r9_101 + 0xB<32>)
	branch r9_101 >=u 0x15<32> l0000F878
l0000F878:
	lr = r11 << r8_106 | r10
	r11_112 = 0<32>
	r10_113 = r11 >>u r9_101 + 0xB<32>
l0000F864:
	lr = r10 << r8_106
	r10_113 = r10 >>u r9_101 + 0xB<32>
	r11_112 = r11 >>u r9_101 + 0xB<32> | r11 << r8_106
l0000F886:
	bool v14_123 = SLICE(r10_113, bool, 0)
	bool C_125 = v14_123
	branch Test(UGE,v14_123) l0000F89C
l0000F88C:
	branch lr != 0<32> l0000F896
l0000F890:
	bool v15_129 = SLICE(r10_113, bool, 1)
	C_125 = v15_129
	branch Test(UGE,v15_129) l0000F89C
l0000F896:
	r10_113 = r10_113 + 1<32>
	C_125 = SLICE(cond(r10_113), bool, 0) (alias)
	branch r10_113 <u 0<32> l0000F89C
l0000F898_1:
	r11_112 = r11_112 + 1<32>
l0000F89C:
	r11_147 = __rcr(r11_112, 1<i32>, SLICE(cond(__rcl(r12, 1<i32>, C_125)), bool, 0))
	r10_151 = __rcr(r10_113, 1<i32>, SLICE(cond(r11_147), bool, 0))
l0000F852:
	r11_147 = 0<32>
	r10_151 = 0<32>
l0000F8A2:
	r11Out = r11_147
	lrOut = lr
	return r10_151
fn0000F80A_exit:


bool __avr32_f64_cmp_eq(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
//      fn0000D220
//      fn0000F278
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z r12
// Trashed: VNZC r11 r12 r9
// Preserved: sp
__avr32_f64_cmp_eq_entry:
l0000F8EC:
	branch r11 - r9 == SLICE(cond(r10 - r8), bool, 0) l0000F902
l0000F902:
	branch (r11 << 1<i32>) - 0xFFE00000<32> >u SLICE(cond(r10), bool, 0) l0000F912
l0000F912:
	r12Out = 0<32>
	return true
l0000F910_1:
	r12Out = 1<32>
	return false
l0000F8F4:
	branch (r11 << 1<i32> | r10 | r9 << 1<i32> | r8) != 0<32> l0000F900
l0000F900:
	r12Out = 0<32>
	return true
l0000F8FE_1:
	r12Out = 1<32>
	return false
__avr32_f64_cmp_eq_exit:


bool __avr32_f64_cmp_ge(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000095D6
//      fn0000D220
//      fn0000E684
//      fn0000E868
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r11 r12 r9
// Preserved: r10 r8 sp
__avr32_f64_cmp_ge_entry:
l0000F91C:
	bool v17_116 = r11 << 1<i32> == 0<32>
	word32 r12_7 = CONVERT(r11 << 1<i32> <u 0<32>, bool, word32)
	branch r11 << 1<i32> != 0<32> l0000F924
l0000F920_1:
	v17_116 = r10 == 0<32>
l0000F924:
	branch v17_116 l0000F96A
l0000F96A:
	bool v20_119 = r9 << 1<i32> != 0<32>
	word32 r12_19 = CONVERT(r9 << 1<i32> <u 0<32>, bool, word32)
	branch r9 << 1<i32> != 0<32> l0000F972
l0000F96E_1:
	v20_119 = r8 != 0<32>
l0000F972:
	branch v20_119 l0000F974
l0000F974:
	r12Out = r12_19
	lrOut = lr
	return SLICE(cond(r12_19), bool, 1)
l0000F972_1:
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F926:
	bool C_52 = SLICE(cond(r10), bool, 0)
	word32 r12_41 = __rcl(r12_7, 1<i32>, SLICE(cond(r9 << 1<i32>), bool, 0))
	word32 lr_131 = 0xFFE00000<32>
	bool Z_163 = SLICE(cond((r11 << 1<i32>) - 0xFFE00000<32> - C_52), bool, 1)
	branch (r11 << 1<i32>) - 0xFFE00000<32> >u C_52 l0000F968
l0000F93C:
	bool C_56 = SLICE(cond(r8), bool, 0)
	Z_163 = SLICE(cond((r9 << 1<i32>) - 0xFFE00000<32> - C_56), bool, 1) (alias)
	branch (r9 << 1<i32>) - 0xFFE00000<32> >u C_56 l0000F968
l0000F946:
	lr_131 = lr
	branch r12_41 == 3<32> l0000F95E
l0000F94C:
	branch r12_41 <u 1<32> l0000F954
l0000F950:
	branch r12_41 != 1<32> l0000F952
l0000F952:
	branch r12_41 == 1<32> l0000F954
l0000F954:
	bool C_71 = SLICE(cond(r10 - r8), bool, 0)
	branch (r11 << 1<i32>) - (r9 << 1<i32>) <u C_71 l0000F95C
l0000F95C:
	branch (r11 << 1<i32>) - (r9 << 1<i32>) >=u C_71 l0000F95E
l0000F95E:
	bool C_79 = SLICE(cond(r8 - r10), bool, 0)
	Z_163 = SLICE(cond((r9 << 1<i32>) - (r11 << 1<i32>) - C_79), bool, 1) (alias)
	branch (r9 << 1<i32>) - (r11 << 1<i32>) <u C_79 l0000F966
l0000F966:
	branch (r9 << 1<i32>) - (r11 << 1<i32>) >=u C_79 l0000F968
l0000F968:
	r12Out = r12_41
	lrOut = lr_131
	return Z_163
l0000F966_1:
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F964_1:
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F95C_1:
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F95A_1:
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F952_1:
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F950_1:
	r12Out = 1<32>
	lrOut = lr
	return false
__avr32_f64_cmp_ge_exit:


bool __avr32_f64_cmp_lt(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r9Out, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
//      fn0000D220
//      fn0000E684
//      fn0000E868
//      fn0000F278
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: Z lr r12 r9
// Trashed: VNZC lr r11 r12 r9
// Preserved: r10 r8 sp
__avr32_f64_cmp_lt_entry:
l0000F976:
	bool v17_116 = r11 << 1<i32> == 0<32>
	word32 r12_7 = CONVERT(r11 << 1<i32> <u 0<32>, bool, word32)
	branch r11 << 1<i32> != 0<32> l0000F97E
l0000F97A_1:
	v17_116 = r10 == 0<32>
l0000F97E:
	branch v17_116 l0000F9C4
l0000F9C4:
	bool v20_119 = r9 << 1<i32> != 0<32>
	word32 r12_19 = CONVERT(r9 << 1<i32> >=u 0<32>, bool, word32)
	branch r9 << 1<i32> != 0<32> l0000F9CC
l0000F9C8_1:
	v20_119 = r8 != 0<32>
l0000F9CC:
	branch v20_119 l0000F9CE
l0000F9CE:
	r9Out = <invalid>
	r12Out = r12_19
	lrOut = lr
	return SLICE(cond(r12_19), bool, 1)
l0000F9CC_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F980:
	bool C_52 = SLICE(cond(r10), bool, 0)
	word32 r12_41 = __rcl(r12_7, 1<i32>, SLICE(cond(r9 << 1<i32>), bool, 0))
	word32 lr_131 = 0xFFE00000<32>
	bool Z_163 = SLICE(cond((r11 << 1<i32>) - 0xFFE00000<32> - C_52), bool, 1)
	branch (r11 << 1<i32>) - 0xFFE00000<32> >u C_52 l0000F9C2
l0000F996:
	bool C_56 = SLICE(cond(r8), bool, 0)
	Z_163 = SLICE(cond((r9 << 1<i32>) - 0xFFE00000<32> - C_56), bool, 1) (alias)
	branch (r9 << 1<i32>) - 0xFFE00000<32> >u C_56 l0000F9C2
l0000F9A0:
	lr_131 = lr
	branch r12_41 == 3<32> l0000F9B8
l0000F9A6:
	branch r12_41 <u 1<32> l0000F9AE
l0000F9AA:
	branch r12_41 != 1<32> l0000F9AC
l0000F9AC:
	branch r12_41 == 1<32> l0000F9AE
l0000F9AE:
	bool C_71 = SLICE(cond(r10 - r8), bool, 0)
	branch (r11 << 1<i32>) - (r9 << 1<i32>) <u C_71 l0000F9B6
l0000F9B6:
	branch (r11 << 1<i32>) - (r9 << 1<i32>) >=u C_71 l0000F9B8
l0000F9B8:
	bool C_79 = SLICE(cond(r8 - r10), bool, 0)
	Z_163 = SLICE(cond((r9 << 1<i32>) - (r11 << 1<i32>) - C_79), bool, 1) (alias)
	branch (r9 << 1<i32>) - (r11 << 1<i32>) <u C_79 l0000F9C0
l0000F9C0:
	branch (r9 << 1<i32>) - (r11 << 1<i32>) >=u C_79 l0000F9C2
l0000F9C2:
	r9Out = <invalid>
	r12Out = r12_41
	lrOut = lr_131
	return Z_163
l0000F9C0_1:
	r9Out = <invalid>
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F9BE_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F9B6_1:
	r9Out = <invalid>
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F9B4_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
l0000F9AC_1:
	r9Out = <invalid>
	r12Out = 1<32>
	lrOut = lr
	return false
l0000F9AA_1:
	r9Out = <invalid>
	r12Out = 0<32>
	lrOut = lr
	return true
__avr32_f64_cmp_lt_exit:


bool fn0000F9D0(word32 r11, word32 r12, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008BE0
//      fn00008E88
//      fn000090C0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: Z r10 r8 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: sp
fn0000F9D0_entry:
l0000F9D0:
	bool v17_87 = r11 << 1<32> != 0<32>
	branch r11 << 1<32> != 0<32> l0000F9DC
l0000F9D8_1:
	v17_87 = r12 << 1<32> != 0<32>
l0000F9DC:
	branch v17_87 l0000F9DE
l0000F9DE:
	branch r12 << 1<32> <=u 0xFF000000<32> l0000F9E8
l0000F9E8:
	branch r11 << 1<32> <=u 0xFF000000<32> l0000F9EC
l0000F9EC:
	bool v16_25 = SLICE(r12, bool, 31)
	word32 r8_28 = CONVERT(Test(UGE,v16_25), bool, word32)
	branch (r11 ^ r12) >= 0<32> l0000F9F8
l0000F9F8:
	branch Test(ULT,v16_25) l0000FA00
l0000F9FA:
	branch r12 <u r11 l0000F9FE
l0000F9FE:
	branch r12 >=u r11 l0000FA00
l0000FA00:
	branch r11 <u r12 l0000FA04
l0000FA04:
	branch r11 >=u r12 l0000FA06
l0000FA06:
	branch r11 << 2<32> != 0<32> l0000FA0C
l0000FA08_1:
l0000FA0C:
	r8Out = r8_28
	r9Out = r11 << 2<32>
	r10Out = <invalid>
	return SLICE(cond(r12), bool, 1)
l0000FA04_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA02_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000F9FE_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000F9FC_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000F9F6_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return SLICE(cond(r8_28), bool, 1)
l0000F9EA_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000F9E6_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000F9DC_1:
	r8Out = r8
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
fn0000F9D0_exit:


bool fn0000FA0E(word32 r11, word32 r12, ptr32 & r8Out, ptr32 & r9Out, ptr32 & r10Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008BE0
//      fn0000901C
//      fn000090C0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: Z r10 r8 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: sp
fn0000FA0E_entry:
l0000FA0E:
	bool v17_87 = r11 << 1<32> != 0<32>
	branch r11 << 1<32> != 0<32> l0000FA1A
l0000FA16_1:
	v17_87 = r12 << 1<32> != 0<32>
l0000FA1A:
	branch v17_87 l0000FA1C
l0000FA1C:
	branch r12 << 1<32> <=u 0xFF000000<32> l0000FA26
l0000FA26:
	branch r11 << 1<32> <=u 0xFF000000<32> l0000FA2A
l0000FA2A:
	bool v16_25 = SLICE(r12, bool, 31)
	word32 r8_28 = CONVERT(Test(ULT,v16_25), bool, word32)
	branch (r11 ^ r12) >= 0<32> l0000FA36
l0000FA36:
	branch Test(ULT,v16_25) l0000FA3E
l0000FA38:
	branch r12 <u r11 l0000FA3C
l0000FA3C:
	branch r12 >=u r11 l0000FA3E
l0000FA3E:
	branch r11 <u r12 l0000FA42
l0000FA42:
	branch r11 >=u r12 l0000FA44
l0000FA44:
	branch r11 << 2<32> != 0<32> l0000FA4A
l0000FA46_1:
l0000FA4A:
	r8Out = r8_28
	r9Out = r11 << 2<32>
	r10Out = <invalid>
	return SLICE(cond(r12), bool, 1)
l0000FA42_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000FA40_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA3C_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return false
l0000FA3A_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA34_1:
	r8Out = r8_28
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return SLICE(cond(r8_28), bool, 1)
l0000FA28_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA24_1:
	r8Out = 0xFF000000<32>
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
l0000FA1A_1:
	r8Out = r8
	r9Out = r11 << 1<32>
	r10Out = <invalid>
	return true
fn0000FA0E_exit:


word32 __avr32_f64_div(word32 r2, word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn000095D6
// MayUse:  r10:[0..31] r11:[0..31] r2:[0..31] r8:[0..31] r9:[0..51]
// LiveOut: r10 r11 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
__avr32_f64_div_entry:
l0000FA54:
	word32 lr_24 = r11 ^ r9
	word32 r10_29 = r10 << 9<i32>
	word32 r11_32 = (r11 << 9<i32> | r10 << 0x17<8> | 0x20000000<u32>) & 0x3FFFFFFF<32>
	word32 r7_34 = r11 >>u 0x14<32> & 0xFFFFF7FF<u32>
	branch Test(EQ,false) l0000FC0A
l0000FC0A:
	word32 r11_37 = r11_32 << 3<i32> | r10 << 0x26<32>
	word32 r10_38 = r10 << 12<i32>
	branch (r10 << 12<i32> | r11_37) == 0<32> l0000FD50
l0000FD50:
	branch (r8 | r9 << 1<8>) == 0<32> l0000FD38
l0000FD56:
	branch SLICE(r9, word11, 20) != 0x7FF<32> l0000FD2C
l0000FD60:
	branch (r8 | r9 << 0xC<8>) == 0<32> l0000FD2C
l0000FD66:
l0000FC1A:
	word32 r4_53 = __clz(r11_37)
	branch Test(EQ,r4_53 == 0<32>) l0000FC4C
l0000FC20:
	branch Test(ULT,r4_53 == 0x20<32>) l0000FC38
l0000FC38:
	word32 r4_59
	word32 r4_56 = __clz(r10 << 12<i32>)
	r4_59 = r4_56
	branch Test(UGE,r4_56 == 0x20<32>) l0000FC40
l0000FC3C_1:
	r4_59 = 0<32>
l0000FC40:
	branch Test(ULT,r4_56 == 0x20<32>) l0000FC44
l0000FC40_1:
	r4_59 = r4_59 + 0x20<32>
l0000FC44:
	r11_37 = r10 << 12<i32> << r4_59
	r10_38 = 0<32>
	r7_34 = r7_34 - r4_59
l0000FC22:
	r11_37 = r11_37 << r4_53 | (r10 << 12<i32>) >>u 0x20<32> - r4_53
	r10_38 = r10 << 12<i32> << r4_53
	r7_34 = r7_34 - r4_53
l0000FC4C:
	r10_29 = r10_38 >>u 2<i32> | r11_37 << 0x1E<8>
	r11_32 = r11_37 >>u 2<i32>
l0000FA74:
	branch r7_34 >= 0x7FF<32> l0000FBE4
l0000FBE4:
	branch (r11_32 & 0xFFFFF<32> | r10_29) != 0<32> l0000FD38
l0000FBEE:
	branch (r9 >>u 0x14<32> & 0xFFFFFEFF<u32>) != 0x7FF<32> l0000FD40
l0000FBFC:
l0000FA7C:
	r8 = r8 << 9<i32>
	word32 r9_113 = (r9 << 9<i32> | r8 << 0x17<8> | 0x20000000<u32>) & 0x3FFFFFFF<32>
	word32 r6_115 = r9 >>u 0x14<32> & 0xFFFFF7FF<u32>
	branch Test(EQ,false) l0000FC56
l0000FC56:
	r9 = r9_113 << 3<i32> | r8 << 0x26<32>
	r8 = r8 << 12<i32>
	branch (r9 | r8 << 12<i32>) == 0<32> l0000FD40
l0000FD40:
	r9Out = r9
	r10Out = 0<32>
	r11Out = lr_24 & 0x80000000<32> | 0x7FF00000<32>
	return r8
l0000FC64:
	word32 r4_153 = __clz(r9)
	branch Test(EQ,r4_153 == 0<32>) l0000FC96
l0000FC6A:
	branch Test(ULT,r4_153 == 0x20<32>) l0000FC82
l0000FC82:
	word32 r4_159
	word32 r4_156 = __clz(r8 << 12<i32>)
	r4_159 = r4_156
	branch Test(UGE,r4_156 == 0x20<32>) l0000FC8A
l0000FC86_1:
	r4_159 = 0<32>
l0000FC8A:
	branch Test(ULT,r4_156 == 0x20<32>) l0000FC8E
l0000FC8A_1:
	r4_159 = r4_159 + 0x20<32>
l0000FC8E:
	r9 = r8 << 12<i32> << r4_159
	r8 = 0<32>
	r6_115 = r6_115 - r4_159
l0000FC6C:
	r9 = r9 << r4_153 | (r8 << 12<i32>) >>u 0x20<32> - r4_153
	r8 = r8 << 12<i32> << r4_153
	r6_115 = r6_115 - r4_153
l0000FC96:
	r8 = r8 >>u 2<i32> | r9 << 0x1E<8>
	r9_113 = r9 >>u 2<i32>
l0000FA94:
	branch r6_115 >= 0x7FF<32> l0000FBFE
l0000FBFE:
	r9 = r9_113 & 0xFFFFF<32> | r8
	branch r9 != 0<32> l0000FD38
l0000FD38:
	r9Out = r9
	r10Out = 0xFFFFFFFF<32>
	r11Out = 0xFFFFFFFF<32>
	return r8
l0000FC08:
l0000FD2C:
	r9Out = r9
	r10Out = 0<32>
	r11Out = lr_24 & 0x80000000<32>
	return r8
l0000FA9C:
	word32 r11_368
	word32 r10_367
	word32 r3_247 = SLICE(~SLICE(r9_113, word2, 27), int2, 28)
	word32 r5_252 = SLICE(r3_247 *u (0x80000000<32> - (SLICE(r3_247 *u r9_113, word32, 32) << 2<8>)), word32, 32)
	word32 r5_258 = SLICE((r5_252 << 2<32>) *u (0x80000000<32> - (SLICE((r5_252 << 2<32>) *u r9_113, word32, 32) << 2<8>)), word32, 32)
	word32 r5_264 = SLICE((r5_258 << 2<32>) *u (0x80000000<32> - (SLICE((r5_258 << 2<32>) *u r9_113, word32, 32) << 2<8>)), word32, 32)
	word64 r5_r4_278 = (r5_264 << 2<32>) *u r9_113
	word32 r4_281 = SLICE(r5_r4_278, word32, 0) + SLICE((r5_264 << 2<32>) *u r8 + r2 *u r9_113, word32, 32)
	word32 r4_289 = -(r4_281 << 2<i32>)
	word32 r5_292 = 0x80000000<32> - (SLICE(r5_r4_278, word32, 32) + (r4_281 <u 0<32>) << 2<i32> | r4_281 << 0x1E<8>) - (r4_289 <u 0<32>)
	word64 r5_r4_297 = (r5_264 << 2<32>) *u r5_292
	word32 r4_300 = SLICE(r5_r4_297, word32, 0) + SLICE((r5_264 << 2<32>) *u r4_289 + r2 *u r5_292, word32, 32)
	word32 r3_306 = SLICE(r5_r4_297, word32, 32) + (r4_300 <u 0<32>) << 2<32> | r4_300 << 0x1E<8>
	word64 r5_r4_312 = r3_306 *u r9_113
	word32 r4_315 = SLICE(r5_r4_312, word32, 0) + SLICE(r3_306 *u r8 + (r4_300 << 2<32>) *u r9_113, word32, 32)
	word32 r4_323 = -(r4_315 << 2<i32>)
	word32 r5_326 = 0x80000000<32> - (SLICE(r5_r4_312, word32, 32) + (r4_315 <u 0<32>) << 2<i32> | r4_315 << 0x1E<8>) - (r4_323 <u 0<32>)
	word64 r5_r4_331 = r3_306 *u r5_326
	word32 r4_334 = SLICE(r5_r4_331, word32, 0) + SLICE(r3_306 *u r4_323 + (r4_300 << 2<32>) *u r5_326, word32, 32)
	word32 r3_340 = SLICE(r5_r4_331, word32, 32) + (r4_334 <u 0<32>) << 2<32> | r4_334 << 0x1E<8>
	word64 r1_r0_353 = r3_340 *u r10_29 + (r4_334 << 2<32>) *u r11_32
	word64 r3_r2_354 = r3_340 *u r11_32
	word32 r2_357 = SLICE(r3_r2_354, word32, 0) + SLICE(r1_r0_353, word32, 32)
	word32 r7_240 = r7_34 - r6_115
	word32 r3_361 = SLICE(r3_r2_354, word32, 32) + (r2_357 <u 0<32>)
	word32 r7_241 = r7_240 + 0x3FF<32>
	word32 r12_243 = 0x80000000<32>
	word32 r0_392 = SLICE(r1_r0_353, word32, 0)
	branch Test(EQ,SLICE(r3_361, bool, 28)) l0000FB80
l0000FB80:
	r10_367 = r10_29 >>u 4<i32> | r11_32 << 0x1C<8>
	r11_368 = r11_32 >>u 4<i32>
l0000FB70:
	r2_357 = r2_357 << 1<i32>
	r3_361 = __rcl(r3_361, 1<i32>, SLICE(cond(r2_357 << 1<i32>), bool, 0))
	r7_241 = r7_240 + 0x3FE<32>
	r10_367 = r10_29 >>u 3<i32> | r11_32 << 0x1D<8>
	r11_368 = r11_32 >>u 3<i32>
l0000FB88:
	word32 r2_436
	word32 r12_465
	word32 r9_463
	bool C_504
	word32 r8_459
	branch r7_241 <= 0<32> l0000FCA0
l0000FCA0:
	word32 r1_415
	word32 r2_408
	word32 r7_385 = __satu(-r7_241 + 1<32>, 6<i32>)
	branch r7_385 >= 0x20<32> l0000FCD6
l0000FCD6:
	word32 r6_389 = 0x20<32> - r7_385
	branch r6_389 != 0<32> l0000FCE2
l0000FCDA_1:
	r0_392 = 0<32>
l0000FCDE_1:
	r12_243 = 0<32>
l0000FCE2:
	branch r6_389 == 0<32> l0000FCEC
l0000FCE4:
	r0_392 = r10_367 << r6_389
	r12_243 = r11_368 << r6_389
l0000FCEC:
	r2_408 = r3_361 >>u r7_385
	r3_361 = 0<32>
	r1_415 = r10_367 >>u r7_385 | r12_243
	r10_367 = r11_368 >>u r7_385
	r11_368 = 0<32>
l0000FCAE:
	word32 r6_420 = 0x20<32> - r7_385
	r2_408 = r2_357 >>u r7_385 | r3_361 << r6_420
	r3_361 = r3_361 >>u r7_385
	r1_415 = r10_367 << r6_420
	r10_367 = r10_367 >>u r7_385 | r11_368 << r6_420
	r11_368 = r11_368 >>u r7_385
	r0_392 = 0<32>
l0000FCFE:
	word32 r2_435 = r2_408 & 0xFFFFFF00<32>
	word64 r5_r4_450 = (r2_435 | 0x80<32>) *u r8
	word64 r9_r8_451 = r3_361 *u r9_113
	ui64 r8_r5_569 = SEQ(SLICE(r9_r8_451, word32, 0), SLICE(r5_r4_450, word32, 32)) + (r3_361 *u r8 + (r2_435 | 0x80<32>) *u r9_113)
	r8_459 = SLICE(r8_r5_569, word32, 32) (alias)
	r2_436 = r2_435 | 0x80<32>
	r9_463 = SLICE(r9_r8_451, word32, 32) + (r8_459 <u 0<32>)
	r7_241 = 0<32>
	r12_465 = SLICE(r2_435 | 0x80<32>, bool, 8)
	C_504 = SLICE(cond(SLICE(r8_r5_569, word32, 0) - r1_415 - SLICE(cond(SLICE(r5_r4_450, word32, 0) - r0_392), bool, 0)), bool, 0) (alias)
l0000FB8E:
	word32 r2_476 = r2_357 & 0xFFFFFF00<32>
	word64 r5_r4_482 = (r2_476 | 0x80<32>) *u r8
	word64 r9_r8_483 = r3_361 *u r9_113
	ui64 r8_r5_566 = SEQ(SLICE(r9_r8_483, word32, 0), SLICE(r5_r4_482, word32, 32)) + (r3_361 *u r8 + (r2_476 | 0x80<32>) *u r9_113)
	r8_459 = SLICE(r8_r5_566, word32, 32) (alias)
	r2_436 = r2_476 | 0x80<32>
	r9_463 = SLICE(r9_r8_483, word32, 32) + (r8_459 <u 0<32>)
	r12_465 = SLICE(r2_476 | 0x80<32>, bool, 8)
	C_504 = SLICE(cond(SLICE(r8_r5_566, word32, 0) - SLICE(cond(SLICE(r5_r4_482, word32, 0)), bool, 0)), bool, 0) (alias)
l0000FBB6:
	bool C_511 = SLICE(cond(r8_459 - r10_367 - C_504), bool, 0)
	word32 r6_514 = CONVERT(r9_463 - r11_368 <u C_511, bool, word32)
	branch r9_463 - r11_368 != C_511 l0000FBC4
l0000FBC0_1:
	r6_514 = r12_465
l0000FBC4:
	word32 r10_538 = (r2_436 >>u 8<32> | r3_361 << 0x18<8>) + r6_514
	word32 r11_541 = __setbit(SLICE(r7_241, int11, 20), 31<i32>, SLICE(lr_24, bool, 31)) + (r10_538 <u 0<32>)
	r9Out = r9_463
	r10Out = r10_538
	r11Out = r11_541
	return r8_459
__avr32_f64_div_exit:


word32 fn0000FD70(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: r5 r6 r7 sp
fn0000FD70_entry:
l0000FD70:
	word32 r8_5 = r11 ^ r12
	word32 r12_15 = r12 << 1<i32>
	branch r12 << 1<i32> != 0<32> l0000FD78
l0000FD78:
	branch r11 << 1<i32> == 0<32> l0000FE62
l0000FE62:
	branch r12 << 1<i32> != 0<32> l0000FE66
l0000FE66:
	r12_15 = 0xFF000000<32>
l0000FE64_1:
	return 0xFFFFFFFF<32>
l0000FD7C:
	word32 r12_111
	word32 r9_104 = r12 << 1<i32> >>u 0x18<32>
	branch r9_104 == 0<32> l0000FE6E
l0000FE6E:
	word32 r9_26 = __clz(r12 << 8<i32>)
	r12_111 = r12 << 8<i32> << r9_26
	r9_104 = 1<32> - r9_26
l0000FD82:
	branch r9_104 >=u 0xFF<32> l0000FE50
l0000FE50:
	branch r9_104 == 0xFF<32> l0000FE52
l0000FE52:
	branch r11 << 1<i32> <u 0xFF000000<32> l0000FE4A
l0000FE4A:
	return __rcr(r12_15, 1<i32>, SLICE(cond(r8_5 << 1<i32>), bool, 0))
l0000FE5C:
	return 0xFFFFFFFF<32>
l0000FE50_1:
	return 0xFFFFFFFF<32>
l0000FD88:
	r12_111 = r12 << 8<i32> | 0x80000000<u32>
l0000FD8C:
	word32 r11_113
	word32 r10_105 = r11 << 1<i32> >>u 0x18<32>
	branch r10_105 == 0<32> l0000FE7E
l0000FE7E:
	word32 r10_66 = __clz(r11 << 8<i32>)
	r11_113 = r11 << 8<i32> << r10_66
	r10_105 = 1<32> - r10_66
l0000FD92:
	branch r11 << 1<i32> >>u 0x18<32> >=u 0xFF<32> l0000FE5E
l0000FE5E:
	branch r11 << 1<i32> >>u 0x18<32> != 0xFF<32> l0000FE60
l0000FE60:
	return 0xFFFFFFFF<32>
l0000FE5E_1:
	return 0<32>
l0000FD98:
	r11_113 = r11 << 8<i32> | 0x80000000<u32>
l0000FD9C:
	word32 r5_114 = r11_113 >>u 2<32>
	word32 r11_118 = SLICE(~SLICE(r5_114, word2, 27), int2, 28)
	word32 r7_123 = SLICE(r11_118 *u (0x80000000<32> - (SLICE(r11_118 *u r5_114, word32, 32) << 2<8>)), word32, 32)
	word32 r7_129 = SLICE((r7_123 << 2<32>) *u (0x80000000<32> - (SLICE((r7_123 << 2<32>) *u r5_114, word32, 32) << 2<8>)), word32, 32)
	word32 r7_135 = SLICE((r7_129 << 2<32>) *u (0x80000000<32> - (SLICE((r7_129 << 2<32>) *u r5_114, word32, 32) << 2<8>)), word32, 32)
	word32 r12_112 = r12_111 >>u 2<i32>
	word32 r9_106 = r9_104 - r10_105
	word32 r7_147 = SLICE((SLICE((r7_135 << 2<32>) *u (0x80000000<32> - (SLICE((r7_135 << 2<32>) *u r5_114, word32, 32) << 2<8>)), word32, 32) << 2<32>) *u r12_112, word32, 32)
	word32 r9_107 = r9_106 + 0x7F<32>
	word32 r12_145 = r12_112 >>u 4<i32>
	branch Test(EQ,SLICE(r7_147, bool, 28)) l0000FE10
l0000FE0A:
	r7_147 = r7_147 << 1<i32>
	r9_107 = r9_106 + 0x7E<32>
	r12_145 = r12_112 >>u 4<i32> << 1<i32>
l0000FE10:
	word32 r5_174
	bool C_187
	word32 r11_183
	branch r9_107 <= 0<32> l0000FE8E
l0000FE8E:
	word32 r9_161 = __satu(-r9_107 + 1<32>, 5<i32>)
	word32 r7_170 = r7_147 >>u r9_161 & 0xFFFFFFE0<32> | 0x10<32>
	word64 r11_r10_172 = r5_114 *u r7_170
	r12_145 = r12_145 >>u r9_161
	r11_183 = SLICE(r11_r10_172, word32, 32) (alias)
	r9_107 = 0<32>
	r5_174 = SLICE(r7_170, bool, 5)
	C_187 = SLICE(cond(SLICE(r11_r10_172, word32, 0) - (r12_145 << 0x20<32> - r9_161)), bool, 0) (alias)
l0000FE16:
	word32 r7_177 = r7_147 & 0xFFFFFFE0<32>
	word64 r11_r10_179 = r5_114 *u (r7_177 | 0x10<32>)
	r11_183 = SLICE(r11_r10_179, word32, 32) (alias)
	r5_174 = SLICE(r7_177 | 0x10<32>, bool, 5)
	C_187 = SLICE(cond(SLICE(r11_r10_179, word32, 0)), bool, 0) (alias)
l0000FE28:
	word32 r11_192 = CONVERT(r11_183 - r12_145 <u C_187, bool, word32)
	branch r11_183 - r12_145 != C_187 l0000FE32
l0000FE2E_1:
	r11_192 = r5_174
l0000FE32:
	return __setbit(SLICE(r9_107, int8, 23), 31<i32>, SLICE(r8_5, bool, 31)) + r11_192
l0000FD76_1:
	return 0<32>
fn0000FD70_exit:


word32 fn0000FF9C(word32 r11, word32 r12)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008BE0
// MayUse:  r11:[0..31] r12:[0..31]
// LiveOut: r12
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: sp
fn0000FF9C_entry:
l0000FF9C:
	branch (r11 ^ r12) < 0<32> l0000FEC4
l0000FEC4:
	word32 r11_8 = r11 ^ 0x80000000<32>
	branch (r11_8 ^ r12) < 0<32> l0000FF98
l0000FF98:
	r11 = r11_8 ^ 0x80000000<32>
l0000FECE:
	word32 r10_18 = max(r12 & 0x7FFFFFFF<u32>, r11_8 & 0x7FFFFFFF<u32>)
	word32 r12_15 = r12 & 0x80000000<32>
	word32 r9_19 = min(r12 & 0x7FFFFFFF<u32>, r11_8 & 0x7FFFFFFF<u32>)
	branch r10_18 == (r12 & 0x7FFFFFFF<u32>) l0000FEE6
l0000FEE2_1:
	r12_15 = (r12 & 0x80000000<32>) - 1<32>
l0000FEE6:
	word32 r12_24 = r12_15 & 0x80000000<32>
	word32 r8_100 = r10_18 << 8<32> | 0x80000000<u32>
	word32 r10_28 = r10_18 >>u 23<i32>
	branch r10_18 >>u 23<i32> == 0xFF<32> l0000FF68
l0000FF68:
	branch r8_100 << 1<32> == 0<32> l0000FF6E
l0000FF6E:
	word32 r12_34 = SLICE(r10_18 >>u 23<i32>, int8, 23)
	branch r9_19 >>u 0x17<32> == 0xFF<32> l0000FF7C
l0000FF7C:
	return 0xFFFFFFFF<32>
l0000FF7A_1:
	return r12_34
l0000FF6C_1:
	return 0xFFFFFFFF<32>
l0000FEF8:
	word32 r11_101 = r9_19 << 8<32> | 0x80000000<u32>
	word32 r9_134 = r9_19 >>u 23<i32>
	branch r9_19 >>u 23<i32> == 0<32> l0000FF56
l0000FF56:
	r11_101 = r11_101 & 0x7FFFFFFF<u32>
	branch Test(EQ,false) l0000FF5C
l0000FF58_1:
	r9_134 = 1<32>
l0000FF5C:
	branch r10_18 >>u 23<i32> != 0<32> l0000FF04
l0000FF60:
	r8_100 = r8_100 & 0x7FFFFFFF<u32>
	branch Test(EQ,false) l0000FF66
l0000FF62_1:
	r10_28 = 1<32>
l0000FF66:
l0000FF04:
	word32 r12_77 = r10_28 - r9_134
	branch r12_77 == 0<32> l0000FF20
l0000FF0A:
	word32 r12_80 = __satu(r12_77, 5<i32>)
	word32 r9_87 = r11_101 << 0x20<32> - r12_80
	branch r9_87 == 0<32> l0000FF1A
l0000FF16_1:
	r8_100 = r8_100 - 1<32>
l0000FF1A:
	r9_134 = CONVERT(r9_87 != 0<32>, bool, word32)
	r11_101 = r11_101 >>u r12_80
l0000FF20:
	word32 r8_102 = r8_100 - r11_101
	word32 r11_117 = __clz(r8_102)
	branch Test(UGE,r11_117 == 0x20<32>) l0000FF2A
l0000FF2A:
	word32 r12_131
	word32 r9_135
	word32 r8_120 = r8_102 << r11_117
	word32 r10_123 = r10_28 - r11_117
	branch r10_123 <= 0<32> l0000FF7E
l0000FF7E:
	word32 r10_126 = 9<32> - r10_123
	word32 r11_127 = 0x20<32> - r10_126
	branch r11_127 >=u 0<32> l0000FF88
l0000FF88:
	r12_131 = r12_24 | r8_120 >>u r10_126
	r9_135 = r9_134 | r8_120 << r11_127
l0000FF86_1:
	return 0<32>
l0000FF34:
	r9_135 = r9_134 | r8_120 << 0x18<8>
	r12_131 = SLICE(r10_123, int8, 23)
l0000FF40:
	word32 r10_147 = 0x80000000<32>
	branch Test(EQ,SLICE(r12_131, bool, 0)) l0000FF4E
l0000FF4A_1:
	r10_147 = 0x80000001<32>
l0000FF4E:
	branch r9_135 <u r10_147 l0000FF54
l0000FF50_1:
	r12_131 = r12_131 + 1<32>
l0000FF54:
	return r12_131
l0000FF28_1:
	return 0<32>
l0000FFA2:
	word32 r11_173 = r11 & 0x7FFFFFFF<u32>
	word32 r10_175 = max(r12 & 0x7FFFFFFF<u32>, r11_173)
	word32 r9_176 = min(r12 & 0x7FFFFFFF<u32>, r11_173)
	word32 r8_178 = r10_175 << 8<32> | 0x80000000<u32>
	word32 r10_179 = r10_175 >>u 23<i32>
	branch r10_175 >>u 23<i32> == 0xFF<32> l0001001C
l0001001C:
	branch r8_178 << 1<32> == 0<32> l00010022
l00010022:
	word32 r12_185 = SLICE(r10_175 >>u 23<i32>, int8, 23)
	branch r9_176 >>u 0x17<32> == 0xFF<32> l00010030
l00010030:
	branch r9_176 << 9<i32> != 0<32> l00010034
l00010034:
	return 0xFFFFFFFF<32>
l00010032_1:
	return r12_185
l0001002E_1:
	return r12_185
l00010020_1:
	return 0xFFFFFFFF<32>
l0000FFC2:
	word32 r11_211 = r9_176 << 8<32> | 0x80000000<u32>
	word32 r9_212 = r9_176 >>u 23<i32>
	branch r9_176 >>u 23<i32> == 0<32> l00010008
l00010008:
	r11_211 = r11_211 & 0x7FFFFFFF<u32>
	branch Test(EQ,false) l0001000E
l0001000A_1:
	r9_212 = 1<32>
l0001000E:
	branch r10_175 >>u 23<i32> != 0<32> l0000FFCC
l00010012:
	return r12 & 0x80000000<32> | (r11_211 & 0x7FFFFFFF<u32>) + (r8_178 & 0x7FFFFFFF<u32>) << 8<8>
l0000FFCC:
	word32 r12_243 = r11_211 >>u __satu((r10_175 >>u 23<i32>) - r9_212, 5<i32>)
	word32 r11_246 = SLICE(r12_243, int8, 24)
	branch r8_178 + r12_243 <u 0<32> l00010036
l00010036:
	r10_179 = (r10_175 >>u 23<i32>) + 1<32>
	branch r10_179 != 0xFF<32> l00010046
l0001003E_1:
l00010042_1:
	r11_246 = 0<32>
l00010046:
l0000FFEA:
	word32 r12_267 = SLICE(r10_179, int8, 23)
	word32 r10_269 = 0x80000000<32>
	branch Test(EQ,SLICE(r12_267, bool, 0)) l00010000
l0000FFFC_1:
	r10_269 = 0x80000001<32>
l00010000:
	branch r11_246 <u r10_269 l00010006
l00010002_1:
	r12_267 = r12_267 + 1<32>
l00010006:
	return r12_267
fn0000FF9C_exit:


word32 fn00010050(word32 r9, word32 r11, word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000901C
//      fn000090C0
// MayUse:  r11:[0..54] r12:[0..31] r9:[0..31]
// LiveOut: r12 r9
// Trashed: VNZC r10 r11 r12 r8 r9
// Preserved: sp
fn00010050_entry:
l00010050:
	word32 r12_6 = r12 ^ r11
	branch Test(EQ,false) l00010126
l00010126:
	word32 r10_11 = SLICE(r11, byte, 23)
	branch r10_11 == 0xFF<32> l00010130
l00010130:
	branch r10_11 != 0xFF<32> l00010132
l00010132:
	branch r9 << 1<i32> != 0<32> l00010138
l00010134_1:
l00010138:
	r12Out = r12_6 & 0x80000000<32>
	return r9 << 1<i32>
l00010130_1:
	r12Out = 0xFFFFFFFF<32>
	return r9
l0001012E_1:
	r12Out = r12_6 & 0x80000000<32>
	return r9
l0001005C:
	word32 r10_35 = max(r12 & 0x7FFFFFFF<u32>, r11 & 0x7FFFFFFF<u32>)
	word32 r9_36 = min(r12 & 0x7FFFFFFF<u32>, r11 & 0x7FFFFFFF<u32>)
	word32 r8_112 = r10_35 << 8<32> | 0x80000000<u32>
	word32 r10_109 = r10_35 >>u 23<i32>
	branch r10_35 >>u 23<i32> == 0xFF<32> l000100EC
l000100EC:
	branch r8_112 << 1<32> == 0<32> l000100F2
l000100F2:
	branch r9_36 != 0<32> l000100F6
l000100F6:
	word32 r12_47 = SLICE(r10_35 >>u 23<i32>, int8, 23)
	branch r9_36 >>u 0x17<32> == 0xFF<32> l00010104
l00010104:
	branch r9_36 << 9<i32> != 0<32> l00010108
l00010108:
	r12Out = 0xFFFFFFFF<32>
	return r9_36 << 9<i32>
l00010106_1:
	r12Out = r12_47
	return r9_36 << 9<i32>
l00010102_1:
	r12Out = r12_47
	return r9_36
l000100F4_1:
	r12Out = 0xFFFFFFFF<32>
	return r9_36
l000100F0_1:
	r12Out = 0xFFFFFFFF<32>
	return r9_36
l00010074:
	word32 r11_113 = r9_36 << 8<32> | 0x80000000<u32>
	word32 r9_108 = r9_36 >>u 23<i32>
	branch r9_36 >>u 23<i32> == 0<32> l000100C6
l000100C6:
	word32 r9_83 = __clz(r11_113 & 0x7FFFFFFF<u32>)
	branch Test(UGE,r9_83 == 0x20<32>) l000100CE
l000100CE:
	r11_113 = (r11_113 & 0x7FFFFFFF<u32>) << r9_83
	r9_108 = 1<32> - r9_83
	branch r10_35 >>u 23<i32> != 0<32> l0001007E
l000100DA:
	word32 r10_92 = __clz(r11_113)
	branch Test(UGE,r10_92 == 0x20<32>) l000100E2
l000100E2:
	r8_112 = (r8_112 & 0x7FFFFFFF<u32>) << r10_92
	r10_109 = 1<32> - r10_92
l000100E0_1:
	r12Out = 0<32>
	return r9_108
l000100CC_1:
	r12Out = 0<32>
	return r9_83
l0001007E:
	word32 r9_110 = r9_108 + r10_109
	word32 r11_115 = SLICE(r8_112 *u r11_113, word32, 32)
	branch r11_115 << 1<32> <u 0<32> l00010090
l00010088_1:
	r11_115 = r11_115 << 1<32>
l0001008C_1:
	r9_110 = r9_110 - 1<32>
l00010090:
	word32 r12_137
	word32 r10_125 = SLICE(r11_115, int8, 24)
	word32 r9_127 = r9_110 - 0x7E<32>
	branch r9_127 <= 0<32> l0001010A
l0001010A:
	word32 r9_130 = 9<32> - r9_127
	word32 r8_131 = 0x20<32> - r9_130
	branch r8_131 >=u 0<32> l00010114
l00010114:
	r9_127 = r11_115 >>u r9_130
	r12_137 = r12_6 & 0x80000000<32> | r9_127
	r10_125 = r10_125 & 0xFFFFFF<32> | r11_115 << r8_131
l00010112_1:
	r12Out = 0<32>
	return r9_130
l0001009C:
	branch r9_127 >= 0xFF<32> l000100C0
l000100C0:
	r12Out = r12_6 & 0x80000000<32> | 0x7F800000<32>
	return r9_127
l000100A2:
	r12_137 = SLICE(r9_127, int8, 23)
l000100AA:
	word32 r8_159 = 0x80000000<32>
	branch Test(EQ,SLICE(r12_137, bool, 0)) l000100B8
l000100B4_1:
	r8_159 = 0x80000001<32>
l000100B8:
	branch r10_125 <u r8_159 l000100BE
l000100BA_1:
	r12_137 = r12_137 + 1<32>
l000100BE:
	r12Out = r12_137
	return r9_127
fn00010050_exit:


word32 fn0001013A(word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
//      fn0000901C
//      fn000090C0
// MayUse:  r12:[0..31]
// LiveOut: r12 r9
// Trashed: VNZC r10 r12 r8 r9
// Preserved: sp
fn0001013A_entry:
l0001013A:
	branch r12 != 0<32> l0001013E
l0001013E:
	word32 r9_100 = __clz(r12)
	word32 r10_62 = 0x9E<32> - r9_100
	word32 r12_16 = r12 << r9_100
	branch r10_62 <= 0<32> l00010176
l00010176:
	word32 r10_13 = 1<32> - r10_62
	branch r10_13 <u 0x19<32> l00010182
l0001017E_1:
	r12_16 = 0<32>
l00010182:
	branch r10_13 >=u 0x19<32> l000101A8
l00010184:
	word32 r12_27 = r12_16 >>u r10_13 | CONVERT(r12_16 << 0x20<32> - r10_13 != 0<32>, bool, word32)
	r9_100 = 0x7F<32>
	branch Test(NE,SLICE(r12_27, bool, 8)) l0001019E
l0001019A_1:
	r9_100 = 0x80<32>
l0001019E:
	r12_16 = __rcr(r12_27 + r9_100 >>u 7<32>, 1<i32>, SLICE(cond(0<32>), bool, 0))
l000101A8:
	r12Out = r12_16
	return r9_100
l00010152:
	word32 r9_51 = 0x7F<32>
	branch Test(NE,SLICE(r12_16, bool, 8)) l0001015C
l00010158_1:
	r9_51 = 0x80<32>
l0001015C:
	word32 r12_58 = r12_16 + r9_51
	branch r12_58 >=u 0<32> l00010162
l0001015E_1:
	r10_62 = r10_62 + 2<32>
l00010162:
	branch Test(EQ,SLICE(r12_58, bool, 31)) l0001016A
l00010166_1:
	r10_62 = r10_62 - 1<32>
l0001016A:
	r12Out = SLICE(r10_62, int8, 24) >>u 1<i32>
	return r9_51
l0001013C_1:
	r12Out = r12
	return r9
fn0001013A_exit:


word32 fn000101B2(word32 r12, ptr32 & r12Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00008E88
//      fn0000901C
//      fn000090C0
// MayUse:  r12:[0..54]
// LiveOut: r11 r12
// Trashed: VNZC r11 r12
// Preserved: sp
fn000101B2_entry:
l000101B2:
	branch r12 >= 0<32> l000101B6
l000101B6:
	word32 r11_6 = SLICE(r12, byte, 23)
	branch r11_6 >=u 0x7F<32> l000101BE
l000101BE:
	word32 r11_10 = 0x1F<32> - (r11_6 - 0x7F<32>)
	r12Out = (r12 << 8<i32> | 0x80000000<u32>) >>u r11_10
	return r11_10
l000101BC_1:
	r12Out = 0<32>
	return r11_6 - 0x7F<32>
l000101B4_1:
	r12Out = 0<32>
	return r11
fn000101B2_exit:


word32 fn000101CC(word32 r10, word32 r11, word32 pc, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009248
//      fn000093B8
// MayUse:  pc:[0..31] r10:[0..31] r11:[0..31]
// LiveOut: lr r10 r11 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000101CC_entry:
l000101CC:
	word32 r11_40
	word32 r10_39 = __avr32_u32_to_f64(r11, out r11_40)
	word64 r9_r8_49 = Mem29[pc + 36<i32>:word64]
	word32 r11_53
	word32 r11_67
	word32 lr_79
	word32 r10_80
	word32 r11_81
	word32 r8_86
	word32 r9_87
	word32 r6_114
	word32 r7_115
	__avr32_f64_add(__avr32_u32_to_f64(r10, out r11_67), r11_67, __avr32_f64_mul(SLICE(r9_r8_49, word32, 0), SLICE(r9_r8_49, word32, 32), r10_39, r11_40, out r11_53), r11_53, out r6_114, out r7_115, out r8_86, out r9_87, out r10_80, out r11_81, out lr_79)
	r9Out = r9_87
	r10Out = r10_80
	r11Out = r11_81
	lrOut = lr_79
	return r8_86
fn000101CC_exit:


word32 __avr32_sdiv64(ui64 r11_r10, word64 r9_r8, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009BC8
// MayUse:  Sequence r11:r10:[0..63] Sequence r9:r8:[0..63]
// LiveOut: lr r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
__avr32_sdiv64_entry:
	word32 r11 = SLICE(r11_r10, word32, 32)
	word32 r10 = SLICE(r11_r10, word32, 0)
	word32 r8 = SLICE(r9_r8, word32, 0)
	word32 r9 = SLICE(r9_r8, word32, 32)
l00010208:
	word32 r9_186
	word32 r8_51
	word32 r3_33 = r11
	word32 r2_35 = r10
	word32 r10_40 = r8
	word32 r11_41 = r9
	branch r11 < 0<32> l00010222
l00010222:
	ui64 r3_r2_459 = 0<64> - r11_r10
	r9_186 = 0<32>
	r2_35 = SLICE(r3_r2_459, word32, 0) (alias)
	r3_33 = SLICE(r3_r2_459, word32, 32) (alias)
	r8_51 = 0xFFFFFFFF<32>
l0001021E:
	r8_51 = 0<32>
	r9_186 = r9
l00010230:
	word32 dwLoc2C_473 = r8_51
	branch r9 >= 0<32> l0001024E
l00010238:
	ui64 r11_r10_461 = 0<64> - r9_r8
	r9_186 = 0<32>
	r10_40 = SLICE(r11_r10_461, word32, 0) (alias)
	r11_41 = SLICE(r11_r10_461, word32, 32) (alias)
	dwLoc2C_473 = ~r8_51
l0001024E:
	ui64 r2_r12_673
	word32 r12_149
	word32 r12_323 = r3_33
	word32 r1_188 = r10_40
	word32 r5_248 = r2_35
	branch r11_41 != 0<32> l000103F4
l000103F4:
	branch r11_41 >u r3_33 l000104CA
l000103FA:
	lr = __clz(r11_41)
	branch Test(NE,lr == 0<32>) l00010410
l00010410:
	word32 r10_90 = 0x20<32> - lr
	word32 r3_93 = r10_40 >>u r10_90 | r11_41 << lr
	word32 r9_95 = r3_33 >>u r10_90
	word32 r8_96 = r9_95 /u (r3_93 >>u 0x10<32>)
	word32 r2_100 = SLICE(r3_93, word16, 0)
	word32 r11_102 = r2_35 >>u r10_90 | r3_33 << lr
	word32 r0_104 = r10_40 << lr
	word32 r12_105 = r8_96 * r2_100
	word32 r10_106 = r11_102 >>u 0x10<32> | r9_95 << 0x10<8>
	word32 r1_107 = r8_96
	branch r10_106 >=u r12_105 l0001046E
l00010456:
	r10_106 = r10_106 + r3_93
	r1_107 = r8_96 - 1<32>
	branch r10_106 <u r3_93 l0001046E
l0001045E:
	word32 r9_115 = r10_106 + r3_93
	branch r10_106 >=u r12_105 l0001046E
l0001046A:
	r1_107 = r8_96 - 2<32>
	r10_106 = r9_115
l0001046E:
	word32 r9_122 = r10_106 - r12_105
	word32 r8_126 = r9_122 /u (r3_93 >>u 0x10<32>)
	word32 r2_130 = r8_126 * r2_100
	word32 r11_131 = SLICE(r11_102, word16, 0) | r9_122 << 0x10<8>
	word32 r12_132 = r8_126
	branch r11_131 >=u r2_130 l000104A4
l0001048C:
	r11_131 = r11_131 + r3_93
	r12_132 = r8_126 - 1<32>
	branch r11_131 <u r3_93 l000104A4
l00010494:
	word32 r9_140 = r11_131 + r3_93
	branch r11_131 >=u r2_130 l000104A4
l000104A0:
	r12_132 = r8_126 - 2<32>
	r11_131 = r9_140
l000104A4:
	r12_149 = r12_132 | r1_107 << 0x10<8>
	word64 r9_r8_152 = r12_149 *u r0_104
	word32 r9_156 = SLICE(r9_r8_152, word32, 32)
	word32 r8_158 = SLICE(r9_r8_152, word32, 0)
	word32 r11_155 = r11_131 - r2_130
	branch r9_156 >u r11_155 l000104C4
l000104B8:
	branch r9_156 != r11_155 l000104C6
l000104BA:
	branch r8_158 <=u r2_35 << lr l000104C6
l000104C4:
	r12_149 = r12_149 - 1<32>
l00010400:
	branch r3_33 >u r11_41 l0001040A
l00010406:
	branch r2_35 <u r10_40 l000104CA
l000104CA:
	r2_r12_673 = 0<64> (alias)
l0001040A:
	r2_r12_673 = SEQ(lr, 1<32>) (alias)
l0001025C:
	branch r10_40 <=u r3_33 l000102E8
l000102E8:
	branch r10_40 != 0<32> l000102F4
l000102EC:
	r9_186 = 1<32>
	r1_188 = 1<32> /u r10_40
l000102F4:
	word32 r2_256
	word32 r11_251
	word32 r2_190 = __clz(r1_188)
	branch Test(NE,r2_190 == 0<32>) l00010302
l00010302:
	word32 r10_194 = 0x20<32> - r2_190
	r1_188 = r1_188 << r2_190
	word32 r9_196 = r3_33 >>u r10_194
	word32 r8_198 = r9_196 /u (r1_188 >>u 0x10<32>)
	word32 r3_202 = SLICE(r1_188, word16, 0)
	word32 r11_203 = r2_35 >>u r10_194 | r3_33 << r2_190
	word32 r12_205 = r8_198 * r3_202
	word32 r10_206 = r11_203 >>u 0x10<32> | r9_196 << 0x10<8>
	word32 lr_207 = r8_198
	branch r10_206 >=u r12_205 l00010350
l00010338:
	r10_206 = r10_206 + r1_188
	lr_207 = r8_198 - 1<32>
	branch r10_206 <u r1_188 l00010350
l00010340:
	word32 r9_215 = r10_206 + r1_188
	branch r10_206 >=u r12_205 l00010350
l0001034C:
	lr_207 = r8_198 - 2<32>
	r10_206 = r9_215
l00010350:
	r9_186 = r10_206 - r12_205
	word32 r8_224 = r9_186 /u (r1_188 >>u 0x10<32>)
	word32 r3_228 = r8_224 * r3_202
	word32 r11_229 = SLICE(r11_203, word16, 0) | r9_186 << 0x10<8>
	word32 r12_230 = r8_224
	branch r11_229 >=u r3_228 l00010382
l0001036A:
	r11_229 = r11_229 + r1_188
	r12_230 = r8_224 - 1<32>
	branch r11_229 <u r1_188 l00010382
l00010372:
	r9_186 = r11_229 + r1_188
	branch r11_229 >=u r3_228 l00010382
l0001037E:
	r12_230 = r8_224 - 2<32>
	r11_229 = r9_186
l00010382:
	r5_248 = r2_35 << r2_190
	r11_251 = r11_229 - r3_228
	r2_256 = r12_230 | lr_207 << 0x10<8>
l000102FA:
	r11_251 = r3_33 - r1_188
	r2_256 = 1<32>
l0001038C:
	word32 lr_263 = r1_188 >>u 0x10<32>
	word32 r8_265 = r11_251 /u lr_263
	word32 r0_266 = SLICE(r1_188, word16, 0)
	word32 r12_269 = r8_265 * r0_266
	word32 r11_275 = r5_248 >>u 0x10<32> | r9_186 << 0x10<8>
	word32 r3_276 = r8_265
	branch r11_275 >=u r12_269 l000103C2
l000103AA:
	r11_275 = r11_275 + r1_188
	r3_276 = r8_265 - 1<32>
	branch r11_275 <u r1_188 l000103C2
l000103B2:
	word32 r9_284 = r11_275 + r1_188
	branch r11_275 >=u r12_269 l000103C2
l000103BE:
	r3_276 = r8_265 - 2<32>
	r11_275 = r9_284
l000103C2:
	word32 r9_291 = r11_275 - r12_269
	word32 r8_293 = r9_291 /u lr_263
	lr = r8_293 * r0_266
	word32 r11_298 = SLICE(r5_248, word16, 0) | r9_291 << 0x10<8>
	word32 r12_299 = r8_293
	branch r11_298 >=u lr l000103EE
l000103DC:
	word32 r11_303 = r11_298 + r1_188
	r12_299 = r8_293 - 1<32>
	branch r11_303 <u r1_188 l000103EE
l000103E4:
	branch r11_303 >=u lr l000103EE
l000103EA_1:
	r12_299 = r8_293 - 2<32>
l000103EE:
	r2_r12_673 = SEQ(r2_256, r12_299 | r3_276 << 0x10<8>) (alias)
l00010262:
	word32 r10_316 = __clz(r10_40)
	branch Test(EQ,r10_316 == 0<32>) l00010280
l00010268:
	r9_186 = r3_33 << r10_316
	r12_323 = r2_35 >>u 0x20<32> - r10_316 | r9_186
	r5_248 = r2_35 << r10_316
	r1_188 = r10_40 << r10_316
l00010280:
	word32 lr_328 = r1_188 >>u 0x10<32>
	word32 r8_330 = r12_323 /u lr_328
	word32 r2_331 = SLICE(r1_188, word16, 0)
	word32 r12_334 = r8_330 * r2_331
	word32 r11_336 = r5_248 >>u 0x10<32> | r9_186 << 0x10<8>
	word32 r3_337 = r8_330
	branch r11_336 >=u r12_334 l000102B6
l0001029E:
	r11_336 = r11_336 + r1_188
	r3_337 = r8_330 - 1<32>
	branch r11_336 <u r1_188 l000102B6
l000102A6:
	word32 r9_345 = r11_336 + r1_188
	branch r11_336 >=u r12_334 l000102B6
l000102B2:
	r3_337 = r8_330 - 2<32>
	r11_336 = r9_345
l000102B6:
	word32 r9_352 = r11_336 - r12_334
	word32 r8_354 = r9_352 /u lr_328
	lr = r8_354 * r2_331
	word32 r11_359 = SLICE(r5_248, word16, 0) | r9_352 << 0x10<8>
	word32 r12_360 = r8_354
	branch r11_359 >=u lr l000102E2
l000102D0:
	word32 r11_364 = r11_359 + r1_188
	r12_360 = r8_354 - 1<32>
	branch r11_364 <u r1_188 l000102E2
l000102D8:
	branch r11_364 >=u lr l000102E2
l000102DE_1:
	r12_360 = r8_354 - 2<32>
l000102E2:
	r12_149 = r12_360 | r3_337 << 0x10<8>
l000104C6:
	r2_r12_673 = CONVERT(r12_149, word32, uint64) (alias)
l000104CE:
	word32 r10_412 = SLICE(r2_r12_673, word32, 0)
	word32 r11_417 = SLICE(r2_r12_673, word32, 32)
	branch dwLoc2C_473 == 0<32> l000104E6
l000104DA:
	ui64 r11_r10_463 = 0<64> - r2_r12_673
	r10_412 = SLICE(r11_r10_463, word32, 0) (alias)
	r11_417 = SLICE(r11_r10_463, word32, 32) (alias)
l000104E6:
	r11Out = r11_417
	lrOut = lr
	return r10_412
__avr32_sdiv64_exit:


word32 __moddi3(word64 r11_r10, word64 r9_r8)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00009BC8
// MayUse:  Sequence r11:r10:[0..63] Sequence r9:r8:[0..63]
// LiveOut: r10
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
__moddi3_entry:
	word32 r9 = SLICE(r9_r8, word32, 32)
	word32 r11 = SLICE(r11_r10, word32, 32)
l000104EA:
	word32 dwLoc40_477
	branch r11 < 0<32> l0001050C
l0001050C:
	r11_r10 = 0<64> - r11_r10
	dwLoc40_477 = 0xFFFFFFFF<32>
l00010504:
	dwLoc40_477 = 0<32>
l0001051E:
	word32 r11_84 = SLICE(r11_r10, word32, 32)
	word32 r10_80 = SLICE(r11_r10, word32, 0)
	ui64 r3_r2_455 = r9_r8
	branch r9 >= 0<32> l0001052E
l00010522:
	r3_r2_455 = 0<64> - r9_r8
l0001052E:
	word32 r2_72 = SLICE(r3_r2_455, word32, 0)
	word32 r3_76 = SLICE(r3_r2_455, word32, 32)
	word32 r12_248 = r2_72
	word32 r9_246 = r3_76
	word32 r5_305 = r10_80
	word32 r8_322 = r11_84
	branch r3_76 != 0<32> l00010670
l00010670:
	branch r3_76 <=u r11_84 l00010680
l00010680:
	word32 r2_91 = __clz(r3_76)
	branch Test(NE,r2_91 == 0<32>) l000106A2
l000106A2:
	word32 r8_94 = 0x20<32> - r2_91
	word32 r3_99 = r2_72 >>u r8_94 | r3_76 << r2_91
	word32 r9_100 = r11_84 >>u r8_94
	word32 r8_102 = r9_100 /u (r3_99 >>u 0x10<32>)
	word32 r12_105 = SLICE(r3_99, word16, 0)
	word32 r11_108 = r10_80 >>u r8_94 | r11_84 << r2_91
	word32 r5_110 = r2_72 << r2_91
	word32 r0_111 = r10_80 << r2_91
	word32 r12_112 = r8_102 * r12_105
	word32 r10_113 = r11_108 >>u 0x10<32> | r9_100 << 0x10<8>
	word32 r1_114 = r8_102
	branch r10_113 >=u r12_112 l00010710
l000106F8:
	r10_113 = r10_113 + r3_99
	r1_114 = r8_102 - 1<32>
	branch r10_113 <u r3_99 l00010710
l00010700:
	word32 r9_122 = r10_113 + r3_99
	branch r10_113 >=u r12_112 l00010710
l0001070C:
	r1_114 = r8_102 - 2<32>
	r10_113 = r9_122
l00010710:
	word32 r9_129 = r10_113 - r12_112
	word32 r8_133 = r9_129 /u (r3_99 >>u 0x10<32>)
	word32 lr_137 = r8_133 * r12_105
	word32 r11_138 = SLICE(r11_108, word16, 0) | r9_129 << 0x10<8>
	word32 r12_139 = r8_133
	branch r11_138 >=u lr_137 l0001074A
l00010732:
	r11_138 = r11_138 + r3_99
	r12_139 = r8_133 - 1<32>
	branch r11_138 <u r3_99 l0001074A
l0001073A:
	word32 r9_148 = r11_138 + r3_99
	branch r11_138 >=u lr_137 l0001074A
l00010746:
	r12_139 = r8_133 - 2<32>
	r11_138 = r9_148
l0001074A:
	word64 r9_r8_159 = (r12_139 | r1_114 << 0x10<8>) *u r5_110
	word32 r9_163 = SLICE(r9_r8_159, word32, 32)
	word32 r8_165 = SLICE(r9_r8_159, word32, 0)
	word32 r11_162 = r11_138 - lr_137
	branch r9_163 >u r11_162 l00010766
l0001075E:
	branch r9_163 != r11_162 l00010770
l00010760:
	branch r8_165 <=u r0_111 l00010770
l00010766:
l00010770:
l00010686:
	branch r11_84 >u r3_76 l00010690
l0001068C:
	branch r10_80 <u r2_72 l00010698
l00010690:
l00010698:
l00010676:
l00010792:
l0001054A:
	word32 lr_311
	word32 r8_314
	branch r2_72 <=u r11_84 l00010576
l00010576:
	branch r2_72 != 0<32> l00010582
l0001057A:
	r9_246 = 1<32>
	r12_248 = 1<32> /u r2_72
l00010582:
	word32 r11_298
	word32 r2_250 = __clz(r12_248)
	branch Test(NE,r2_250 == 0<32>) l0001058E
l0001058E:
	word32 r10_254 = 0x20<32> - r2_250
	r12_248 = r12_248 << r2_250
	word32 r9_256 = r11_84 >>u r10_254
	word32 lr_262 = SLICE(r12_248, word16, 0)
	word32 r11_263 = r10_80 >>u r10_254 | r11_84 << r2_250
	word32 r3_265 = lr_262 * (r9_256 /u (r12_248 >>u 0x10<32>))
	word32 r9_266 = r11_263 >>u 0x10<32> | r9_256 << 0x10<8>
	branch r9_266 >=u r3_265 l000105D2
l000105C2:
	r9_266 = r9_266 + r12_248
	branch r9_266 <u r12_248 l000105D2
l000105C8:
	word32 r8_272 = r9_266 + r12_248
	branch r9_266 >=u r3_265 l000105D2
l000105CE_1:
	r9_266 = r8_272
l000105D2:
	r9_246 = r9_266 - r3_265
	word32 r3_284 = lr_262 * (r9_246 /u (r12_248 >>u 0x10<32>))
	word32 r11_285 = SLICE(r11_263, word16, 0) | r9_246 << 0x10<8>
	branch r11_285 >=u r3_284 l000105F8
l000105E8:
	r11_285 = r11_285 + r12_248
	branch r11_285 <u r12_248 l000105F8
l000105EE:
	word32 r8_292 = r11_285 + r12_248
	branch r11_285 >=u r3_284 l000105F8
l000105F4_1:
	r11_285 = r8_292
l000105F8:
	r11_298 = r11_285 - r3_284
	r5_305 = r10_80 << r2_250
l00010588:
	r11_298 = r11_84 - r12_248
l000105FE:
	lr_311 = r12_248 >>u 0x10<32>
	r8_314 = r11_298 /u lr_311
l00010550:
	word32 r2_315 = __clz(r2_72)
	branch Test(EQ,r2_315 == 0<32>) l0001056C
l00010556:
	r9_246 = r11_84 << r2_315
	r8_322 = r10_80 >>u 0x20<32> - r2_315 | r9_246
	r12_248 = r2_72 << r2_315
	r5_305 = r10_80 << r2_315
l0001056C:
	lr_311 = r12_248 >>u 0x10<32>
	r8_314 = r8_322 /u lr_311
l00010606:
	word32 r1_332 = SLICE(r12_248, word16, 0)
	word32 r3_334 = r1_332 * r8_314
	word32 r11_344 = r5_305 >>u 0x10<32> | r9_246 << 0x10<8>
	branch r11_344 >=u r3_334 l0001062A
l0001061A:
	r11_344 = r11_344 + r12_248
	branch r11_344 <u r12_248 l0001062A
l00010620:
	word32 r8_350 = r11_344 + r12_248
	branch r11_344 >=u r3_334 l0001062A
l00010626_1:
	r11_344 = r8_350
l0001062A:
	word32 r9_356 = r11_344 - r3_334
	word32 r3_363 = r1_332 * (r9_356 /u lr_311)
	word32 r11_364 = SLICE(r5_305, word16, 0) | r9_356 << 0x10<8>
	branch r11_364 >=u r3_363 l00010652
l00010642:
	word32 r11_368 = r11_364 + r12_248
	branch r11_368 <u r12_248 l00010652
l00010648:
	branch r11_368 >=u r3_363 l00010652
l0001064E_1:
l00010652:
l0001079E:
	branch dwLoc40_477 == 0<32> l000107B8
l000107A6:
	qwLoc2C = 0<64> - qwLoc2C
l000107B8:
	return SLICE(qwLoc2C, word32, 0)
__moddi3_exit:


word32 fn000107C0(word32 r8, word32 r9, word32 r10, word32 r11, ptr32 & r9Out, ptr32 & r10Out, ptr32 & r11Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn0000B7D4
//      fn0000CA68
// MayUse:  r10:[0..31] r11:[0..31] r8:[0..31] r9:[0..31]
// LiveOut: lr r10 r11 r8 r9
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn000107C0_entry:
l000107C0:
	word32 r12_108
	word32 r2_135
	word32 r5_276 = r11
	word32 lr_114 = r8
	word32 r1_203 = r10
	branch r9 != 0<32> l0001096C
l0001096C:
	branch r9 >u r11 l00010A40
l00010972:
	r2_135 = __clz(r9)
	branch Test(NE,r2_135 == 0<32>) l00010986
l00010986:
	word32 r10_47 = 0x20<32> - r2_135
	word32 lr_50 = r8 >>u r10_47 | r9 << r2_135
	word32 r9_52 = r11 >>u r10_47
	word32 r8_53 = r9_52 /u (lr_50 >>u 0x10<32>)
	word32 r5_56 = SLICE(lr_50, word16, 0)
	word32 r11_57 = r10 >>u r10_47 | r11 << r2_135
	word32 r3_58 = r8 << r2_135
	word32 r12_61 = r8_53 * r5_56
	word32 r10_62 = r11_57 >>u 0x10<32> | r9_52 << 0x10<8>
	word32 r3_107 = r8_53
	branch r10_62 >=u r12_61 l000109E4
l000109CC:
	r10_62 = r10_62 + lr_50
	r3_107 = r8_53 - 1<32>
	branch r10_62 <u lr_50 l000109E4
l000109D4:
	word32 r9_71 = r10_62 + lr_50
	branch r10_62 >=u r12_61 l000109E4
l000109E0:
	r3_107 = r8_53 - 2<32>
	r10_62 = r9_71
l000109E4:
	word32 r9_78 = r10_62 - r12_61
	word32 r8_80 = r9_78 /u (lr_50 >>u 0x10<32>)
	word32 r5_84 = r8_80 * r5_56
	word32 r11_110 = SLICE(r11_57, word16, 0) | r9_78 << 0x10<8>
	word32 r12_105 = r8_80
	branch r11_110 >=u r5_84 l00010A16
l000109FE:
	r11_110 = r11_110 + lr_50
	r12_105 = r8_80 - 1<32>
	branch r11_110 <u lr_50 l00010A16
l00010A06:
	word32 r9_94 = r11_110 + lr_50
	branch r11_110 >=u r5_84 l00010A16
l00010A12:
	r12_105 = r8_80 - 2<32>
	r11_110 = r9_94
l00010A16:
	r12_108 = r12_105 | r3_107 << 0x10<8>
	word64 r9_r8_109 = r12_108 *u r3_58
	word32 r9_113 = SLICE(r9_r8_109, word32, 32)
	r8 = SLICE(r9_r8_109, word32, 0) (alias)
	word32 r11_112 = r11_110 - r5_84
	lr_114 = r9_113
	r9 = r8
	branch r9_113 >u r11_112 l00010A3A
l00010A2E:
	branch r9_113 != r11_112 l00010A3C
l00010A30:
	r8 = r10 << r2_135
	branch r8 <=u r8 l00010A3C
l00010A3A:
	r12_108 = r12_108 - 1<32>
l00010978:
	branch r11 >u r9 l00010982
l0001097E:
	branch r10 <u r8 l00010A40
l00010A40:
	r12_108 = 0<32>
	r2_135 = 0<32>
l00010982:
	r12_108 = 1<32>
l000107D4:
	branch r8 <=u r11 l00010860
l00010860:
	branch r8 != 0<32> l0001086C
l00010864:
	r9 = 1<32>
	lr_114 = 1<32> /u r8
l0001086C:
	word32 r11_206
	word32 r2_145 = __clz(lr_114)
	branch Test(NE,r2_145 == 0<32>) l0001087A
l0001087A:
	word32 r10_149 = 0x20<32> - r2_145
	lr_114 = lr_114 << r2_145
	word32 r9_151 = r11 >>u r10_149
	word32 r8_153 = r9_151 /u (lr_114 >>u 0x10<32>)
	word32 r5_157 = SLICE(lr_114, word16, 0)
	word32 r11_158 = r10 >>u r10_149 | r11 << r2_145
	word32 r12_160 = r8_153 * r5_157
	word32 r10_161 = r11_158 >>u 0x10<32> | r9_151 << 0x10<8>
	word32 r3_162 = r8_153
	branch r10_161 >=u r12_160 l000108C8
l000108B0:
	r10_161 = r10_161 + lr_114
	r3_162 = r8_153 - 1<32>
	branch r10_161 <u lr_114 l000108C8
l000108B8:
	word32 r9_170 = r10_161 + lr_114
	branch r10_161 >=u r12_160 l000108C8
l000108C4:
	r3_162 = r8_153 - 2<32>
	r10_161 = r9_170
l000108C8:
	r9 = r10_161 - r12_160
	word32 r8_179 = r9 /u (lr_114 >>u 0x10<32>)
	word32 r5_183 = r8_179 * r5_157
	word32 r11_184 = SLICE(r11_158, word16, 0) | r9 << 0x10<8>
	word32 r12_185 = r8_179
	branch r11_184 >=u r5_183 l000108FA
l000108E2:
	r11_184 = r11_184 + lr_114
	r12_185 = r8_179 - 1<32>
	branch r11_184 <u lr_114 l000108FA
l000108EA:
	r9 = r11_184 + lr_114
	branch r11_184 >=u r5_183 l000108FA
l000108F6:
	r12_185 = r8_179 - 2<32>
	r11_184 = r9
l000108FA:
	r1_203 = r10 << r2_145
	r11_206 = r11_184 - r5_183
	r2_135 = r12_185 | r3_162 << 0x10<8>
l00010872:
	r11_206 = r11 - lr_114
	r2_135 = 1<32>
l00010904:
	word32 r3_218 = lr_114 >>u 0x10<32>
	word32 r8_220 = r11_206 /u r3_218
	word32 r0_221 = SLICE(lr_114, word16, 0)
	word32 r12_224 = r8_220 * r0_221
	word32 r11_228 = r1_203 >>u 0x10<32> | r9 << 0x10<8>
	word32 r5_229 = r8_220
	branch r11_228 >=u r12_224 l0001093A
l00010922:
	r11_228 = r11_228 + lr_114
	r5_229 = r8_220 - 1<32>
	branch r11_228 <u lr_114 l0001093A
l0001092A:
	word32 r9_237 = r11_228 + lr_114
	branch r11_228 >=u r12_224 l0001093A
l00010936:
	r5_229 = r8_220 - 2<32>
	r11_228 = r9_237
l0001093A:
	r9 = r11_228 - r12_224
	r8 = r9 /u r3_218
	word32 r3_250 = r8 * r0_221
	word32 r11_251 = SLICE(r1_203, word16, 0) | r9 << 0x10<8>
	word32 r12_252 = r8
	branch r11_251 >=u r3_250 l00010966
l00010954:
	word32 r11_256 = r11_251 + lr_114
	r12_252 = r8 - 1<32>
	branch r11_256 <u lr_114 l00010966
l0001095C:
	r8 = r8 - 2<32>
	branch r11_256 >=u r3_250 l00010966
l00010962_1:
	r12_252 = r8 - 2<32>
l00010966:
	r12_108 = r12_252 | r5_229 << 0x10<8>
l000107DA:
	word32 r12_269 = __clz(r8)
	branch Test(EQ,r12_269 == 0<32>) l000107F8
l000107E0:
	r9 = r11 << r12_269
	r5_276 = r10 >>u 0x20<32> - r12_269 | r9
	r1_203 = r10 << r12_269
	lr_114 = r8 << r12_269
l000107F8:
	word32 r3_281 = lr_114 >>u 0x10<32>
	word32 r8_283 = r5_276 /u r3_281
	word32 r2_284 = SLICE(lr_114, word16, 0)
	word32 r12_287 = r8_283 * r2_284
	word32 r11_289 = r1_203 >>u 0x10<32> | r9 << 0x10<8>
	word32 r5_290 = r8_283
	branch r11_289 >=u r12_287 l0001082E
l00010816:
	r11_289 = r11_289 + lr_114
	r5_290 = r8_283 - 1<32>
	branch r11_289 <u lr_114 l0001082E
l0001081E:
	word32 r9_298 = r11_289 + lr_114
	branch r11_289 >=u r12_287 l0001082E
l0001082A:
	r5_290 = r8_283 - 2<32>
	r11_289 = r9_298
l0001082E:
	r9 = r11_289 - r12_287
	r8 = r9 /u r3_281
	word32 r3_311 = r8 * r2_284
	word32 r11_312 = SLICE(r1_203, word16, 0) | r9 << 0x10<8>
	word32 r12_313 = r8
	branch r11_312 >=u r3_311 l0001085A
l00010848:
	word32 r11_317 = r11_312 + lr_114
	r12_313 = r8 - 1<32>
	branch r11_317 <u lr_114 l0001085A
l00010850:
	r8 = r8 - 2<32>
	branch r11_317 >=u r3_311 l0001085A
l00010856_1:
	r12_313 = r8 - 2<32>
l0001085A:
	r12_108 = r12_313 | r5_290 << 0x10<8>
l00010A3C:
	r2_135 = 0<32>
l00010A44:
	r9Out = r9
	r10Out = r12_108
	r11Out = r2_135
	lrOut = lr_114
	return r8
fn000107C0_exit:


word32 fn00010A4C(word64 r11_r10, word64 r9_r8, ptr32 & r11Out)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn000093B8
//      fn0000B7D4
// MayUse:  Sequence r11:r10:[0..63] Sequence r9:r8:[0..63]
// LiveOut: r10 r11
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 r4 r5 r6 r7 sp
fn00010A4C_entry:
	word32 r8 = SLICE(r9_r8, word32, 0)
	word32 r10 = SLICE(r11_r10, word32, 0)
	word32 r9 = SLICE(r9_r8, word32, 32)
	word32 r11 = SLICE(r11_r10, word32, 32)
l00010A4C:
	word32 r10_169
	word64 qwLoc38_461
	word32 dwLoc34_443
	word32 dwLoc2C_435 = r10
	word32 lr_201 = r8
	word32 r1_183 = r11
	branch r9 != 0<32> l00010BD0
l00010BD0:
	branch r9 <=u r11 l00010BE0
l00010BE0:
	word32 r0_51 = __clz(r9)
	branch Test(NE,r0_51 == 0<32>) l00010C0A
l00010C0A:
	word32 r11_54 = 0x20<32> - r0_51
	word32 lr_57 = r8 >>u r11_54 | r9 << r0_51
	word32 r9_59 = r11 >>u r11_54
	word32 r8_60 = r9_59 /u (lr_57 >>u 0x10<32>)
	word32 r5_66 = SLICE(lr_57, word16, 0)
	word32 r11_67 = r10 >>u r11_54 | r11 << r0_51
	word32 r1_69 = r8 << r0_51
	word32 r2_70 = r10 << r0_51
	word32 r12_71 = r8_60 * r5_66
	word32 r10_72 = r11_67 >>u 0x10<32> | r9_59 << 0x10<8>
	word32 r3_114 = r8_60
	branch r10_72 >=u r12_71 l00010C74
l00010C5C:
	r10_72 = r10_72 + lr_57
	r3_114 = r8_60 - 1<32>
	branch r10_72 <u lr_57 l00010C74
l00010C64:
	word32 r9_81 = r10_72 + lr_57
	branch r10_72 >=u r12_71 l00010C74
l00010C70:
	r3_114 = r8_60 - 2<32>
	r10_72 = r9_81
l00010C74:
	word32 r9_91 = r10_72 - r12_71
	word32 r8_92 = r9_91 /u (lr_57 >>u 0x10<32>)
	word32 r5_96 = r8_92 * r5_66
	word32 r11_102 = SLICE(r11_67, word16, 0) | r9_91 << 0x10<8>
	word32 r12_103 = r8_92
	branch r11_102 >=u r5_96 l00010CAA
l00010C92:
	r11_102 = r11_102 + lr_57
	r12_103 = r8_92 - 1<32>
	branch r11_102 <u lr_57 l00010CAA
l00010C9A:
	word32 r9_107 = r11_102 + lr_57
	branch r11_102 >=u r5_96 l00010CAA
l00010CA6:
	r12_103 = r8_92 - 2<32>
	r11_102 = r9_107
l00010CAA:
	ui64 r12_r9_628
	word64 r9_r8_118 = (r12_103 | r3_114 << 0x10<8>) *u r1_69
	word32 r9_122 = SLICE(r9_r8_118, word32, 32)
	word32 r8_124 = SLICE(r9_r8_118, word32, 0)
	word32 r11_121 = r11_102 - r5_96
	branch r9_122 >u r11_121 l00010CC6
l00010CBE:
	r12_r9_628 = r9_r8_118 (alias)
	branch r9_122 != r11_121 l00010CD0
l00010CC0:
	r12_r9_628 = r9_r8_118 (alias)
	branch r8_124 <=u r2_70 l00010CD0
l00010CC6:
	r12_r9_628 = r9_r8_118 - SEQ(lr_57, r1_69) (alias)
l00010CD0:
	ui64 r10_r8_424 = SEQ(r11_121, r2_70) - r12_r9_628
	word32 r10_160 = SLICE(r10_r8_424, word32, 32)
	r10_169 = r10_160 >>u r0_51
	dwLoc34_443 = SLICE(r10_r8_424, word32, 0) >>u r0_51 | r10_160 << r11_54
l00010BE6:
	branch r11 >u r9 l00010BF0
l00010BEC:
	branch r10 <u r8 l00010BFC
l00010BF0:
	ui64 r1_r4_418 = r11_r10 - r9_r8
	r1_183 = SLICE(r1_r4_418, word32, 32) (alias)
	dwLoc2C_435 = SLICE(r1_r4_418, word32, 0)
l00010BFC:
	qwLoc38_461 = SEQ(r1_183, dwLoc2C_435) (alias)
l00010BD6:
	qwLoc38_461 = r11_r10 (alias)
l00010A70:
	word32 r0_203
	word32 r9_293
	word32 r10_300
	word32 r8_296
	word32 r3_272
	branch r8 <=u r11 l00010AD8
l00010AD8:
	branch r8 != 0<32> l00010AE4
l00010ADC:
	r9 = 1<32>
	lr_201 = 1<32> /u r8
l00010AE4:
	word32 r11_251
	r0_203 = __clz(lr_201)
	branch Test(NE,r0_203 == 0<32>) l00010AF0
l00010AF0:
	word32 r10_207 = 0x20<32> - r0_203
	lr_201 = lr_201 << r0_203
	word32 r9_209 = r11 >>u r10_207
	word32 r5_215 = SLICE(lr_201, word16, 0)
	word32 r11_216 = r10 >>u r10_207 | r11 << r0_203
	word32 r12_218 = r5_215 * (r9_209 /u (lr_201 >>u 0x10<32>))
	word32 r9_219 = r11_216 >>u 0x10<32> | r9_209 << 0x10<8>
	branch r9_219 >=u r12_218 l00010B34
l00010B24:
	r9_219 = r9_219 + lr_201
	branch r9_219 <u lr_201 l00010B34
l00010B2A:
	word32 r8_225 = r9_219 + lr_201
	branch r9_219 >=u r12_218 l00010B34
l00010B30_1:
	r9_219 = r8_225
l00010B34:
	r9 = r9_219 - r12_218
	word32 r12_237 = r5_215 * (r9 /u (lr_201 >>u 0x10<32>))
	word32 r11_238 = SLICE(r11_216, word16, 0) | r9 << 0x10<8>
	branch r11_238 >=u r12_237 l00010B5A
l00010B4A:
	r11_238 = r11_238 + lr_201
	branch r11_238 <u lr_201 l00010B5A
l00010B50:
	word32 r8_245 = r11_238 + lr_201
	branch r11_238 >=u r12_237 l00010B5A
l00010B56_1:
	r11_238 = r8_245
l00010B5A:
	r11_251 = r11_238 - r12_237
	dwLoc2C_435 = r10 << r0_203
l00010AEA:
	r11_251 = r11 - lr_201
l00010B68:
	word32 r5_269 = lr_201 >>u 0x10<32>
	r3_272 = SLICE(lr_201, word16, 0)
	word32 r12_277 = r3_272 * (r11_251 /u r5_269)
	word32 r11_281 = dwLoc2C_435 >>u 16<i32> | r9 << 0x10<8>
	branch r11_281 >=u r12_277 l00010B96
l00010B86:
	r11_281 = r11_281 + lr_201
	branch r11_281 <u lr_201 l00010B96
l00010B8C:
	word32 r8_287 = r11_281 + lr_201
	branch r11_281 >=u r12_277 l00010B96
l00010B92_1:
	r11_281 = r8_287
l00010B96:
	r9_293 = r11_281 - r12_277
	r8_296 = r9_293 /u r5_269
	r10_300 = SLICE(dwLoc2C_435, word16, 0)
l00010A76:
	r0_203 = __clz(r8)
	branch Test(EQ,r0_203 == 0<32>) l00010A98
l00010A7C:
	r9 = r11 << r0_203
	r1_183 = r10 >>u 0x20<32> - r0_203 | r9
	lr_201 = r8 << r0_203
	dwLoc2C_435 = r10 << r0_203
l00010A98:
	word32 r5_315 = lr_201 >>u 0x10<32>
	r3_272 = SLICE(lr_201, word16, 0)
	word32 r12_323 = r3_272 * (r1_183 /u r5_315)
	word32 r11_325 = dwLoc2C_435 >>u 16<i32> | r9 << 0x10<8>
	branch r11_325 >=u r12_323 l00010AC6
l00010AB6:
	r11_325 = r11_325 + lr_201
	branch r11_325 <u lr_201 l00010AC6
l00010ABC:
	word32 r8_331 = r11_325 + lr_201
	branch r11_325 >=u r12_323 l00010AC6
l00010AC2_1:
	r11_325 = r8_331
l00010AC6:
	r9_293 = r11_325 - r12_323
	r8_296 = r9_293 /u r5_315
	r10_300 = SLICE(dwLoc2C_435, word16, 0)
l00010BA6:
	word32 r12_350 = r3_272 * r8_296
	word32 r11_353 = r10_300 | r9_293 << 0x10<8>
	branch r11_353 >=u r12_350 l00010BC2
l00010BB2:
	r11_353 = r11_353 + lr_201
	branch r11_353 <u lr_201 l00010BC2
l00010BB8:
	word32 r8_362 = r11_353 + lr_201
	branch r11_353 >=u r12_350 l00010BC2
l00010BBE_1:
	r11_353 = r8_362
l00010BC2:
	r10_169 = 0<32>
	dwLoc34_443 = r11_353 - r12_350 >>u r0_203
l00010CEE:
	qwLoc38_461 = SEQ(r10_169, dwLoc34_443) (alias)
l00010CF2:
	r11Out = SLICE(qwLoc38_461, word32, 32)
	return SLICE(qwLoc38_461, word32, 0)
fn00010A4C_exit:


bool fn00010CFC(word32 pc, ptr32 & r12Out, ptr32 & lrOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn0000D220
//      fn0000F278
// MayUse:  pc:[0..31]
// LiveOut: Z lr r12
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r4 r5 r6 r7 sp
fn00010CFC_entry:
l00010CFC:
	word32 r12_62
	fn00010D38(fp - 0x38<32>, fp - 0x1C<32>, pc)
	word32 lr_46 = fn00010D38(fp - 0x4C<32>, fp - 0x24<32>, pc)
	branch dwLoc38 >u 1<32> l00010D2A
l00010D2A:
	r12_62 = CONVERT(dwLoc4C <=u 1<32>, bool, word32)
l00010D26:
	r12_62 = 1<32>
l00010D30:
	r12Out = r12_62
	lrOut = lr_46
	return SLICE(cond(fp - 0x14<32>), bool, 1)
fn00010CFC_exit:


word32 fn00010D38(word32 r11, word32 r12, word32 pc)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn00010CFC
// MayUse:  pc:[0..31] r11:[0..31] r12:[0..31]
// LiveOut: lr
// Trashed: VNZC lr r10 r11 r12 r8 r9
// Preserved: r0 r1 r2 r3 sp
fn00010D38_entry:
l00010D38:
	word32 r8_121
	word64 r3_r2_19 = Mem17[r12:word64]
	word32 r3_22 = SLICE(r3_r2_19, word32, 32)
	word64 r9_r8_28 = Mem17[pc + 160<i32>:word64]
	Mem29[r11 + 4<i32>:word32] = SLICE(r3_22 >>u 0x1F<32>, bool, 0)
	word32 lr_26 = SLICE(r3_22 >>u 0x14<32>, word11, 0)
	word32 r2_32 = SLICE(r3_r2_19, word32, 0) & SLICE(r9_r8_28, word32, 0)
	word32 r3_34 = r3_22 & SLICE(r9_r8_28, word32, 32)
	branch lr_26 != 0<32> l00010DA0
l00010DA0:
	branch lr_26 != 0x7FF<32> l00010DCC
l00010DCC:
	word64 r11_r10_39 = Mem29[pc + 60<i32>:word64]
	Mem49[r11 + 12<i32>:word64] = SEQ(r3_34 << 8<32> | r2_32 << 0x18<8> | SLICE(r11_r10_39, word32, 32), SLICE(r11_r10_39, word32, 0) | r2_32 << 8<8>)
	Mem51[r11 + 8<i32>:word32] = lr_26 - 0x3FF<32>
	r8_121 = 3<32>
l00010DA6:
	branch r3_34 != SLICE(cond(r2_32), bool, 0) l00010DB0
l00010DB0:
	word32 r8_65
	word64 r9_r8_56 = Mem29[pc + 80<i32>:word64]
	branch (SLICE(r9_r8_56, word32, 32) & r3_34) == SLICE(cond(SLICE(r9_r8_56, word32, 0) & r2_32), bool, 0) l00010DC2
l00010DC2:
	r8_65 = 0<32>
l00010DBE:
	r8_65 = 1<32>
l00010DC4:
	Mem69[r11:word32] = r8_65
	Mem73[r11 + 12<i32>:word64] = SEQ(r3_34, r2_32)
	return
l00010DAC:
	r8_121 = 4<32>
l00010D5E:
	branch r3_34 != SLICE(cond(r2_32), bool, 0) l00010D68
l00010D68:
	Mem87[r11 + 8<i32>:word32] = 0xFFFFFC02<32>
	Mem92[r11:word32] = 3<32>
	word64 r11_r10_197 = SEQ(r3_34 << 8<32> | r2_32 << 0x18<8>, r2_32 << 8<32>)
l00010D8C:
	word64 r9_r8_95 = Mem94[pc + 108<i32>:word64]
	word32 r10_96 = SLICE(r11_r10_197, word32, 0)
	word32 r11_99 = SLICE(r11_r10_197, word32, 32)
	branch r11_99 - SLICE(r9_r8_95, word32, 32) <=u SLICE(cond(r10_96 - SLICE(r9_r8_95, word32, 0)), bool, 0) l00010D80
l00010D80:
	Mem112[r11 + 8<i32>:word32] = Mem94[r11 + 8<i32>:word32] - 1<32>
	r11_r10_197 = SEQ(r11_99 * 2<32> + (r10_96 * 2<32> <u 0<32>), r10_96 * 2<32>) (alias)
l00010D9A:
	Mem114[r11 + 12<i32>:word64] = r11_r10_197
	return
l00010D64:
	r8_121 = 2<32>
l00010DEA:
	Mem124[r11:word32] = r8_121
	return
fn00010D38_exit:


void fn00010E10(word32 r4, word32 r5, word32 lr)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  lr:[0..31] r4:[0..31] r5:[0..31]
// LiveOut:
// Trashed: VNZC lr r8
// Preserved: r4 r5 r6 r7 sp
fn00010E10_entry:
l00010E10:
	word32 r6_19 = 0x00010E14<p32> - Mem17[0x00010E2E<p32>:word32]
	word32 r7_21 = Mem17[r6_19 + 600<i32>:word32] - 4<32>
l00010E22:
	word32 r8_25 = Mem17[r7_21:word32]
	word32 r7_26 = r7_21 - 4<32>
	branch r8_25 != 0xFFFFFFFF<32> l00010E20
l00010E20:
	call r8_25 (retsize: 0;)
		uses: lr:lr_32,r4:r4_29,r5:r5_30,r6:r6_31,r7:r7_26
		defs: lr:lr_39,r4:r4_35,r5:r5_36,r6:r6_37,r7:r7_38
l00010E2A:
	return
fn00010E10_exit:


