void fn1483_0ADB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: Top
// Preserved: sp
fn1483_0ADB_entry:
l1483_0ADB:
	return
fn1483_0ADB_exit:


void fn1483_0ADC(segptr32 ds_di, segptr32 ss_bp, word16 ax, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector es, selector fs, word16 wArg00, word16 wArg04, word16 wArg0A, selector psegArg01A2, byte bArg02BF, byte bArg0F9E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..15] bh:[0..7] bl:[0..7] cs:[0..15] cx:[0..15] dx:[0..15] es:[0..15] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000A:[0..15] Stack +01A2:[0..15] Stack +02BF:[0..7] Stack +0F9E:[0..7]
// LiveOut:
// Trashed: SCZDOP ax bp bx cx di ds dx es si Top
// Preserved: sp
fn1483_0ADC_entry:
l1483_0ADC:
	int8 Top_29 = <invalid>
	ST39[Top_29:real64] = CONVERT(Mem0[fn1483_0D3F(ds_di, ss_bp, ax, cx, dx, bl, bh, si, es, fs, wArg00, wArg04, wArg0A, psegArg01A2, bArg02BF, bArg0F9E) + 0xE086<16>:real32], real32, real64) - ST[Top_29:real64]
	return
fn1483_0ADC_exit:


word16 fn1483_0C11(segptr32 ds_si, segptr32 es_di, byte al, word16 cx, word16 bx, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0C55
// MayUse:  ax:[0..7] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..15] Sequence ds:si:[0..31] Sequence es:di:[0..31] ss:[0..15]
// LiveOut: ax
// Trashed: SCZDO bp di ds dx eax ebx ecx es si ss Top
// Preserved: sp
fn1483_0C11_entry:
	word16 si = SLICE(ds_si, word16, 0)
	byte al = SLICE(ax, byte, 0)
	selector ds = SLICE(ds_si, selector, 16)
	word16 di = SLICE(es_di, word16, 0)
	selector es = SLICE(es_di, selector, 16)
l1483_0C11:
	branch al != Mem11[ss:si:byte] l1483_0C4D
l1483_0C4D:
l1483_0C53_thunk_fn1483_0C55:
	return SLICE(fn1483_0C55(), word16, 0)
l1483_0C1B:
	branch al - 0x8C<8> - CONVERT(al <u Mem11[ss:si:byte], bool, byte) != 0<8> && cx != 1<16> l1483_0C6C
l1483_0C6C:
	word16 ax_52
	word16 bx_54
	word16 di_55
	selector ds_56
	selector es_59
	word16 si_60
	word16 cx_191
	byte dh_192
	segptr32 ss_bp_190 = fn1483_1BB8(ds_si, 0x55<8>, 0x19<8>, cx - 1<16>, 0x8000<16>, bx, bp, di, es, out ax_52, out cx_191, out dh_192, out bx_54, out si_60, out di_55, out es_59, out ds_56)
	word16 dx_57 = <invalid>
	ui24 dh_ax_142 = SEQ(SLICE(dx_57, byte, 8), ax_52) + SEQ(Mem35[ds_56:si_60 + 0x147C<16>:byte], Mem35[ds_56:bx_54 + 0x3303<16>:word16])
	word16 di_66 = di_55 + Mem35[ds_56:bx_54:word16]
	word16 ax_67 = SLICE(dh_ax_142, word16, 0)
	word16 v23_86 = Mem35[ds_56:ax_67 + 0x20E<16> + di_66:word16] + di_66
	Mem87[ds_56:ax_67 + 0x20E<16> + di_66:word16] = v23_86
	word32 ecx_58 = <invalid>
	word16 ax_82 = bx_54 - 0x903<16> - CONVERT(SLICE(dh_ax_142, byte, 16) <u 0<8>, bool, word16)
	word16 cx_89 = SLICE(ecx_58, word16, 0)
	selector ss_61 = SLICE(ss_bp_190, selector, 16)
	byte al_94 = SLICE(ax_82, byte, 0)
	byte ah_95 = SLICE(ax_82, byte, 8)
	byte ch_113 = SLICE(cx_89 - 1<16>, byte, 8)
	byte cl_122 = SLICE(cx_89, byte, 0) - 1<8>
	branch v23_86 != 0<16> && cx_89 != 1<16> l1483_0C85_thunk_fn1483_0CA0
l1483_0C85_thunk_fn1483_0CA0:
	word16 di_193
	return fn1483_0CA0(SEQ(es_59, di_66), ss_bp_190, al_94, ah_95, ax_67, si_60, ds_56, out di_193)
l1483_0C87:
	byte al_114 = Mem87[ds_56:ax_67:byte]
	Mem112[ss_61:bx:word16] = si_60
	Mem117[es_59:di_66:byte] = Mem112[ds_56:si_60:byte]
	word16 cx_123 = SEQ(ch_113 + al_114, cl_122)
l1483_0C8F_thunk_fn1483_0C91:
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	selector stackArg0 = <invalid>
	word16 di_195
	selector es_196
	return fn1483_0C91(SEQ(ds, bx), SEQ(ss, bp), ax, cx_123, si_60 + 1<i16>, di_66 + 1<i16>, stackArg0, out di_195, out es_196)
fn1483_0C11_exit:
l1483_0C24:
	Mem135[es_di:word16] = 0x1955<16>


word32 fn1483_0C55()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0C11
//      fn1483_0C91
// MayUse: 
// LiveOut: eax
// Trashed: SCZO ax di dx si sp Top
// Preserved: ax
fn1483_0C55_entry:
l1483_0C55:
	branch Z l1483_0C55_thunk_fn1483_0C11
l1483_0C55_thunk_fn1483_0C11:
	word16 ax_6 = fn1483_0C11(SEQ(ds, si), SEQ(es, di), SLICE(ax_6, byte, 0), cx, bx, bp)
	return
l1483_0C57:
	return
fn1483_0C55_exit:


word16 fn1483_0C91(segptr32 ds_bx, segptr32 ss_bp, word16 ax, word16 cx, word16 si, word16 di, selector psegArg00, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0C11
//      fn1483_0CFA
//      fn1483_0CFC
// MayUse:  ax:[0..15] cx:[0..15] di:[0..15] Sequence ds:bx:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15]
// LiveOut: di eax es
// Trashed: SCZO ax bp bx cx di dx es sp Top
// Preserved:
fn1483_0C91_entry:
	byte al_12 = SLICE(ax, byte, 0)
	byte ah_17 = SLICE(ax, byte, 8)
	byte ch = SLICE(cx, byte, 8)
	selector ds = SLICE(ds_bx, selector, 16)
	word16 bx = SLICE(ds_bx, word16, 0)
l1483_0C91:
	byte al_14 = al_12 + ch
	branch !OVERFLOW(al_14) l1483_0C96_thunk_fn1483_0C55
l1483_0C96_thunk_fn1483_0C55:
	word16 ax_21 = fn1483_0C55()
	diOut = di
	esOut = <invalid>
	return ax_21
l1483_0C98:
	branch Mem0[ds_bx + si:word16] *s 0x18<16> == 0<16> && cx != 1<16> l1483_0CA9
l1483_0C9B_thunk_fn1483_0CA0:
	word16 di_43
	word16 ax_39 = fn1483_0CA0(SEQ(psegArg00, di), ss_bp, al_14, ah_17, bx, si, ds, out di_43)
	diOut = di_43
	esOut = <invalid>
	return ax_39
l1483_0C9D:
	Mem50[ds:bx + 0x2203<16> + si:word16] = Mem0[ds:bx + 0x2203<16> + si:word16] + (cx - 1<16>)
l1483_0C9D_thunk_fn1483_0CA0:
	word16 di_58
	word16 ax_54 = fn1483_0CA0(SEQ(psegArg00, di), ss_bp, al_14, ah_17, bx, si, ds, out di_58)
	diOut = di_58
	esOut = <invalid>
	return ax_54
fn1483_0C91_exit:


word16 fn1483_0CA0(segptr32 es_di, segptr32 ss_bp, byte al, byte ah, word16 bx, word16 si, selector ds, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0C11
//      fn1483_0C91
// MayUse:  ah:[0..7] al:[0..7] bx:[0..15] ds:[0..15] Sequence es:di:[0..31] Sequence ss:bp:[0..31] si:[0..15]
// LiveOut: ax di
// Trashed: SCZO ax bp bx cx di dx Top
// Preserved: sp
fn1483_0CA0_entry:
	word16 bp = SLICE(ss_bp, word16, 0)
	word16 di = SLICE(es_di, word16, 0)
l1483_0CA0:
	word16 ax_85
	word16 bx_86
	call fn1483_FD4E (retsize: 2;)
		uses: ah:ah + Mem0[ds:bx + si:byte],al:al & Mem0[ds:0x3101<16>:byte],bx:bx
		defs: ax:ax_85,bx:bx_86
	byte bl_99 = SLICE(bx_86, byte, 0)
	byte ah_100 = SLICE(ax_85, byte, 8)
	byte bh_103 = SLICE(bx_86, byte, 8)
l1483_0CA9_in_fn1483_0CA0:
	word16 dx_93 = Mem0[ds:si + 0x173E<16>:word16] *s 0xC62<16>
	Mem96[ds:bx_86:byte] = Mem0[ds:bx_86:byte] + SLICE(dx_93, byte, 0)
	byte bl_101 = bl_99 + ah_100
	word16 bx_104 = SEQ(bh_103, bl_101)
	Mem107[ds:bx_104 - 0x56<16> + di:byte] = __rol<byte,byte>(Mem96[ds:bx_104 - 0x56<16> + di:byte], 0xE2<8>)
	bool v19_109 = (Mem107[ss_bp + 0x7B<16>:word16] & 2<16>) != 0<16>
	Mem110[ss_bp + 0x7B<16>:word16] = __ror<word16,byte>(Mem107[ss_bp + 0x7B<16>:word16], 1<8>)
	Mem113[ds:bx_104:byte] = Mem110[ds:bx_104:byte] + bl_101 + v19_109
	byte bl_114 = bl_101 & Mem113[ds:bx_104:byte]
	Mem118[es_di:byte] = SLICE(ax_85, byte, 0) - 0xAC<8>
	word16 bx_121 = SEQ(bh_103, bl_114)
	Mem123[ds:bx_121:word16] = Mem118[ds:bx_121:word16] + bx_121
	word16 v25_127 = Mem123[ds:di + 0x15<16>:word16]
	Mem128[ds:di + 0x15<16>:word16] = ax_85 - 0xBDCB<16>
	word16 bx_132
	word16 dx_133
	call fn1483_4FE0 (retsize: 2;)
		uses: ax:v25_127,bx:bx_121,cx:di + 1<i16> - si,dx:dx_93
		defs: bx:bx_132,dx:dx_133
	Mem138[ds:0xF7E3<16>:word16] = Mem128[ds:0xF7E3<16>:word16] - dx_133
	Mem141[ds:bx_132 + (di + 1<i16>):word16] = Mem138[ds:bx_132 + (di + 1<i16>):word16] + (bp - 1<16>)
	word16 ax_153 = __in<word16>(0x8B<8>)
	diOut = di + 1<i16>
	return ax_153
fn1483_0CA0_exit:


word16 fn1483_0CED(segptr32 es_di, segptr32 ss_bp, word16 ax, word16 dx, word16 bx, word16 si, selector ds, selector fs, word16 wArg00, selector psegArg02, word16 wArg06, word16 wArg0A, word16 wArg10, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0D3F
// MayUse:  ax:[0..15] bx:[0..15] ds:[0..15] dx:[0..15] fs:[0..15] Sequence es:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0002:[0..15] Stack +0006:[0..15] Stack +000A:[0..15] Stack +0010:[0..15]
// LiveOut: di es
// Trashed: SCZO ax bp bx cx di dx es si sp Top
// Preserved:
fn1483_0CED_entry:
	word16 di = SLICE(es_di, word16, 0)
	byte bl_17 = SLICE(bx, byte, 0)
	byte bh_24 = SLICE(bx, byte, 8)
	byte al_33 = SLICE(ax, byte, 0)
	byte ah_34 = SLICE(ax, byte, 8)
	selector es = SLICE(es_di, selector, 16)
l1483_0CED:
	word16 si_8 = si + Mem0[ds:di:word16]
	word16 v8_10 = Mem0[ds:bx + 0xF7E2<16> + si_8:word16] + fp
	Mem11[ds:bx + 0xF7E2<16> + si_8:word16] = v8_10
	Mem15[es_di:word16] = ax
	bool C_27 = SLICE(cond(v8_10), bool, 1)
	word16 bx_25 = SEQ(bh_24, bl_17 + 1<8>)
	branch bl_17 != 1<8> l1483_0CE5_in_fn1483_0CED
l1483_0CE5_in_fn1483_0CED:
	esOut = es
	return di + 2<i16>
l1483_0CF8:
	Mem28[ds:bx_25 + si_8:byte] = __rcr<byte,byte,bool>(Mem15[ds:bx_25 + si_8:byte], 0xAC<8>, C_27)
l1483_0CF9_thunk_fn1483_0CFC:
	selector es_43
	word16 di_41 = fn1483_0CFC(SEQ(ds, di + 2<i16>), ss_bp, al_33, ah_34, wArg00, dx, bl_17 + 1<8>, bh_24, si_8, fs, psegArg02, wArg06, wArg10, out es_43)
	esOut = es_43
	return di_41
fn1483_0CED_exit:


word16 fn1483_0CFA(segptr32 ds_di, segptr32 ss_bp, byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector fs, selector psegArg00, word16 wArg04, word16 wArg0E, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0D3F
// MayUse:  ah:[0..7] al:[0..7] bh:[0..7] bl:[0..7] cx:[0..15] dx:[0..15] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000E:[0..15]
// LiveOut: di es
// Trashed: SCZO ax bp bx cx di dx es si Top
// Preserved: sp
fn1483_0CFA_entry:
	selector ds = SLICE(ds_di, selector, 16)
	byte ch = SLICE(cx, byte, 8)
l1483_0CFA:
	Mem10[ds:si + 0xD832<16>:byte] = Mem0[ds:si + 0xD832<16>:byte] - ch - CONVERT(C, bool, byte)
l1483_0CFA_thunk_fn1483_0CFC:
	selector es_31
	word16 di_29 = fn1483_0CFC(ds_di, ss_bp, al, ah, cx, dx, bl, bh, si, fs, psegArg00, wArg04, wArg0E, out es_31)
	esOut = es_31
	return di_29
fn1483_0CFA_exit:


word16 fn1483_0CFC(segptr32 ds_di, segptr32 ss_bp, byte al, byte ah, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector fs, selector psegArg00, word16 wArg04, word16 wArg0E, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0CED
//      fn1483_0CFA
// MayUse:  ah:[0..7] al:[0..7] bh:[0..7] bl:[0..7] cx:[0..15] dx:[0..15] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000E:[0..15]
// LiveOut: di es
// Trashed: SCZO ax bp bx cx di dx es si Top
// Preserved: sp
fn1483_0CFC_entry:
	selector ds = SLICE(ds_di, selector, 16)
	word16 di = SLICE(ds_di, word16, 0)
l1483_0CFC:
	word16 bx_56 = SEQ(bh, bl ^ al)
	byte al_59 = Mem0[bx_56 + ds_di:byte]
	Mem63[ss_bp + si:word16] = 0xD1FF<16>
	word16 ax_68 = SEQ(ah, al_59)
	branch cx == 0<16> l1483_0D04_thunk_fn1483_0C91
l1483_0D04_thunk_fn1483_0C91:
	selector es_73
	word16 di_76
	fn1483_0C91(SEQ(ds, bx_56), ss_bp, ax_68, cx, si, di, psegArg00, out di_76, out es_73)
	esOut = es_73
	return di_76
l1483_0D04_thunk_fn1483_0D06:
	word16 di_88 = fn1483_0D06(SEQ(ds, bx_56), dx, fs, psegArg00, wArg04, wArg0E)
	esOut = es
	return di_88
fn1483_0CFC_exit:


word16 fn1483_0D06(segptr32 ds_bx, word16 dx, selector fs, word16 wArg00, word16 wArg04, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0CFA
//      fn1483_0CFC
// MayUse:  dx:[0..15] fs:[0..15] Sequence ds:bx:[0..31] Stack +0000:[0..15] Stack +0004:[0..15] Stack +000E:[0..15]
// LiveOut: di
// Trashed: SCZO ax bp bx cx di dx si sp Top
// Preserved:
fn1483_0D06_entry:
	selector ds = SLICE(ds_bx, selector, 16)
	word16 bx = SLICE(ds_bx, word16, 0)
l1483_0D06:
	Mem10[ds_bx + 0xE209<16>:word16] = Mem0[ds_bx + 0xE209<16>:word16] - dx - CONVERT(C, bool, word16)
	branch bx == dx l1483_0D2B
l1483_0D11:
	msdos_display_string(SEQ(ds, 0xD21<16>))
	Mem42[fs:wArg04 + 0x52<16> + wArg00:byte] = Mem10[fs:wArg04 + 0x52<16> + wArg00:byte] & SLICE(wArg0E, byte, 0)
	di = wArg00
l1483_0D2B:
	return di
fn1483_0D06_exit:


segptr32 fn1483_0D3F(segptr32 ds_di, segptr32 ss_bp, word16 ax, word16 cx, word16 dx, byte bl, byte bh, word16 si, selector es, selector fs, word16 wArg02, word16 wArg06, word16 wArg0C, selector psegArg01A4, byte bArg02C1, byte bArg0FA0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0ADC
// MayUse:  ax:[0..15] bh:[0..7] bl:[0..7] cs:[0..15] cx:[0..15] dx:[0..15] es:[0..15] fs:[0..15] Sequence ds:di:[0..31] Sequence ss:bp:[0..31] si:[0..15] Stack +0002:[0..15] Stack +0006:[0..15] Stack +000C:[0..15] Stack +01A4:[0..15] Stack +02C1:[0..7] Stack +0FA0:[0..7]
// LiveOut: es:di Top
// Trashed: SCZDOP ax bp bx cx di ds dx es si sp Top
// Preserved:
fn1483_0D3F_entry:
	word16 di = SLICE(ds_di, word16, 0)
	byte al_17 = SLICE(ax, byte, 0)
	byte ah_19 = SLICE(ax, byte, 8)
	selector ss = SLICE(ss_bp, selector, 16)
	byte ch_34 = SLICE(cx, byte, 8)
	byte cl_100 = SLICE(cx, byte, 0)
	word16 bp = SLICE(ss_bp, word16, 0)
	selector ds = SLICE(ds_di, selector, 16)
	byte dh_45 = SLICE(dx, byte, 8)
	byte dl_53 = SLICE(dx, byte, 0)
	segptr32 es_di_51 = SEQ(es, di)
l1483_0D3F:
	branch P l1483_0D40_thunk_fn1483_0CFA
l1483_0D40_thunk_fn1483_0CFA:
	selector es_28
	return SEQ(es_28, fn1483_0CFA(ds_di, ss_bp, al_17, ah_19, cx, dx, bl, bh, si, fs, ax, wArg02, wArg0C, out es_28))
l1483_0D42:
	word16 bx_37 = SEQ(bh, 0xB4<8>)
	ui24 ax_ch_503 = SEQ(ax_40, ch_34) - SEQ(0xFC68<16>, Mem7[ds:(bx_37 + 2<16>) + si:byte])
	word16 ax_42 = SLICE(ax_ch_503, word16, 8)
	byte ch_38 = SLICE(ax_ch_503, byte, 0)
	word16 ax_40 = SEQ(ah_19, al_17 + ch_34)
	byte ah_68 = SLICE(ax_42, byte, 8)
	byte al_96 = SLICE(ax_42, byte, 0)
	word16 dx_54 = SEQ(dh_45 ^ 0x17<8>, dl_53)
	branch (dh_45 ^ 0x17<8>) < 0<8> l1483_0D50_thunk_fn1483_0CED
l1483_0D50_thunk_fn1483_0CED:
	selector es_62
	return SEQ(es_62, fn1483_0CED(es_di_51, ss_bp, ax_42, dx_54, bx_37, si, ds, fs, si, ax, wArg02, wArg06, wArg0C, out es_62))
l1483_0D52:
	byte ah_69 = ah_68 + Mem44[ds_di:byte]
	word16 v19_74 = Mem73[ds:bx_37 + 0x43<16> + si:word16]
	Mem75[ds:bx_37 + 0x43<16> + si:word16] = bp
	Mem78[ds_di:byte] = Mem75[ds_di:byte] << 0x68<8>
	word16 v23_82 = -Mem78[ss:v19_74 - 6<16>:word16]
	Mem83[ss:v19_74 - 6<16>:word16] = v23_82
	word16 bp_183 = v19_74
	word16 ax_97 = SEQ(ah_69, al_96)
	branch !OVERFLOW(v23_82) l1483_0D69
l1483_0D68_1:
	__syscall(4<8>)
l1483_0D69:
	word16 cx_684
	segptr32 ds_bx_687
	bool v77_512
	selector ds_410
	segptr32 ds_bx_693
	word16 cx_690
	Mem91[ds:si + 0x5C87<16>:byte] = ch_38
	word16 sp_110
	word16 ax_111
	word16 cx_112
	word16 bx_113
	word16 dx_114
	byte SCZDOP_116
	call fn1483_8A82 (retsize: 2;)
		uses: ax:ax_97,bh:bh,bl:0xB4<8>,cx:SEQ(ch_38, cl_100),dx:dx_54,Stack +0000:wArg06,Stack +0006:wArg0C,Stack +FFFFFFFC:wArg02
		defs: ax:ax_111,bx:bx_113,cx:cx_112,dx:dx_114,SCZDOP:SCZDOP_116,sp:sp_110
	Mem119[ss:sp_110 - 2<i16>:word16] = ax_111
	Mem121[ss:sp_110 - 4<i16>:word16] = cx_112
	Mem123[ss:sp_110 - 6<i16>:word16] = dx_114
	Mem125[ss:sp_110 - 8<i16>:word16] = bx_113
	Mem127[ss:sp_110 - 10<i16>:word16] = sp_110
	Mem129[ss:sp_110 - 12<i16>:word16] = v19_74
	Mem131[ss:sp_110 - 14<i16>:word16] = si
	Mem133[ss:sp_110 - 16<i16>:word16] = di
	word16 bx_135 = bx_113 + Mem133[ds:(bx_113 - 0x79<16>) + di:word16] + CONVERT(SCZDOP_116, byte, word16)
	byte dh_137 = SLICE(dx_114, byte, 8)
	Mem140[ss:v19_74 + 0xF512<16> + di:byte] = Mem133[ss:v19_74 + 0xF512<16> + di:byte] + dh_137 + CONVERT(bx_135 <u 0<16>, bool, byte)
	Mem143[ds:bx_135 + 0x7D<16>:byte] = Mem140[ds:bx_135 + 0x7D<16>:byte] & SLICE(ax_111, byte, 0)
	byte ch_149 = SLICE(cx_112, byte, 8)
	word16 ax_157 = __aad(si)
	word16 ax_154 = SEQ(SLICE(ax_111 - 0x8747<16>, byte, 8), SLICE(ax_111, byte, 0) - 0x47<8> + ch_149 + CONVERT(ax_111 <u 0x8747<16>, bool, byte))
	word16 v32_158 = Mem143[ds:ax_154 + 0x995D<16>:word16]
	Mem159[ds:ax_154 + 0x995D<16>:word16] = ax_154
	Mem163[ss:sp_110 - 18<i16>:word16] = sp_110 - 16<i16>
	ui16 dh_al_505 = SEQ(dh_137, SLICE(ax_157, byte, 0)) + SEQ(SLICE(bx_135, byte, 8), 0x2A<8>)
	word16 bx_170 = bx_135 + Mem163[ds:bx_135 + v32_158:word16]
	byte ah_362 = SLICE(ax_157, byte, 8)
	byte al_171 = SLICE(dh_al_505, byte, 0) + ch_149
	byte dl_483 = SLICE(dx_114, byte, 0)
	word16 si_160 = v32_158
	byte bl_176 = SLICE(bx_170, byte, 0)
	byte bh_385 = SLICE(bx_170, byte, 8)
	bool P_327 = Mem163[ss:sp_110 + 0x12<16>:bool]
	word16 sp_173 = sp_110 - 16<i16>
	word16 ax_224 = SEQ(ah_362, al_171)
	byte cl_452 = SLICE(cx_112, byte, 0) - 1<8>
	word16 dx_484 = SEQ(SLICE(dh_al_505, byte, 8), dl_483)
	byte ch_487 = SLICE(cx_112 - 1<16>, byte, 8)
	branch sp_110 - 18<i16> && cx_112 != 1<16> l1483_0D99
l1483_0D99:
	byte v38_177 = Mem163[ds:bx_170 + v32_158:byte] - bl_176
	Mem178[ds:bx_170 + v32_158:byte] = v38_177
	bool v74_509 = v38_177 <=u 0<8>
l1483_0D9B:
	cx_684 = SEQ(ch_487, cl_452) (alias)
	segptr32 ds_bx_700 = SEQ(ds, bx_170)
	branch v38_177 < 0<8> l1483_0DF7
l1483_0DF7:
	word16 bx_200 = SLICE(ds_bx_700, word16, 0)
	P_327 = SLICE(P_327, bool, 5) (alias)
	bool P_329 = SLICE(P_327, bool, 5)
	byte bl_367 = SLICE(bx_200, byte, 0)
	byte bh_368 = SLICE(bx_200, byte, 8)
	sp_173 = fp + 420<i16>
	byte cl_186 = SLICE(cx_684, byte, 0)
	branch v74_509 l1483_0E14
l1483_0E14:
	Mem188[ss:bp_183 + di:byte] = Mem185[ss:bp_183 + di:byte] ^ cl_186
	v77_512 = Mem188[ss:bp_183 + di:byte] >= 0<8>
	__in<word16>(dx_484)
	ds_bx_693 = ds_bx_700 (alias)
	branch Mem188[ss:bp_183 + di:byte] != 0<8> l1483_0DA8
l1483_0E19:
	si_160 = si_160 + 1<16>
	byte ah_213 = SLICE(fp + 0x8FAA<16>, byte, 8) | Mem208[ss:(fp + 0xD8F<16>) + si_160:byte]
	es = psegArg01A4
	bp_183 = fp + 0x18A<16>
	byte bl_220 = SLICE(bx_200, byte, 0) + 1<8>
	byte bh_494 = SLICE(bx_200 + 1<16>, byte, 8)
	ax_224 = SEQ(ah_213, SLICE(fp, byte, 0) + 0xAA<8>) (alias)
	byte ch_258 = SLICE(cx_684 - 1<16>, byte, 8)
	branch ah_213 == 0<8> && cx_684 != 1<16> l1483_0DF3
l1483_0DF3:
	Mem222[bx_200:bx_200 + 1<16> + si_160:byte] = Mem208[bx_200:bx_200 + 1<16> + si_160:byte] + bl_220
	v74_509 = ax_224 <=u fp + 0x18A<16>
	cx_684 = SEQ(ch_258, cl_186 - 1<8>) (alias)
	ds_bx_700 = SEQ(bx_200, bx_200 + 1<16>) (alias)
l1483_0E35:
	Mem227[bx_200:bx_200 + 1<16> + si_160:word16] = Mem208[bx_200:bx_200 + 1<16> + si_160:word16] + ax_224
	byte cl_252 = cl_186 - 1<8> - Mem250[bx_200:si_160 + 0x5F<16>:byte]
	byte al_228 = Mem227[bx_200:si_160:byte]
	byte ah_244 = ah_213 ^ Mem243[bx_200:(bx_200 + 2<16>) + (si_160 + 1<i16>):byte]
	Mem254[bx_200:si_160 + 0x6347<16>:byte] = Mem250[bx_200:si_160 + 0x6347<16>:byte] ^ cl_252
	ui16 v59_v58_508 = SEQ(bArg02C1, bArg0FA0) + SEQ(0xE8<8>, dl_483)
	byte al_259 = al_228 | ch_258
	word16 si_229 = si_160 + 1<i16> + 2<i16>
	word16 di_231 = 0<16>
	byte v58_235 = SLICE(v59_v58_508, byte, 0)
	byte v59_242 = SLICE(v59_v58_508, byte, 8)
	byte SCZOP_330 = cond(al_259) | P_329
	word16 cx_263 = SEQ(ch_258, cl_252)
	branch al_259 == 0<8> l1483_0ED9
l1483_0ED9:
	byte cl_500 = SLICE(cx_263, byte, 0)
	branch cx_263 == 0<16> l1483_0EEE
l1483_0EEE:
	word16 si_268 = Mem267[bx_200:0x9004<16>:word16]
	Mem272[bx_200:0x300<16>:word16] = Mem267[bx_200:0x300<16>:word16] + SEQ(ah_244, al_259 | 0x20<8>)
	__cli()
	Mem275[bx_200:0x8602<16>:word16] = Mem272[bx_200:0x8602<16>:word16] + dx_484
	call fn3024_8E10 (retsize: 0;)
		uses: ax:Mem275[bx_200:si_268:word16],bh:bh_494,bl:bl_220,cx:cx_263,dx:dx_484,Stack +0000:wArg02,Stack +0002:wArg02,Stack +0004:wArg06,Stack +0006:wArg06,Stack +000A:wArg0C,Stack +000C:wArg0C,Stack +02BF:v59_242,Stack +0F9E:v58_235
	return SEQ(psegArg01A4, di_231)
l1483_0EDB:
	word16 si_298 = si_229 + 0<i16>
	ah_244 = 0<8>
	word16 cx_319 = SEQ(0x2A<8>, cl_500)
l1483_0EE4:
	di_231 = di_231 + CONVERT(Mem307[bx_200:si_298:byte], byte, uint16)
	Mem317[psegArg01A4:di_231:word16] = Mem307[psegArg01A4:di_231:word16] + dx_484
	cx_319 = cx_319 - 1<16>
	si_298 = si_298 + 1<i16>
	byte ch_489 = SLICE(cx_319, byte, 8)
	branch cx_319 != 0<16> l1483_0EE4
l1483_0EEC:
l1483_0ED6:
	al_259 = Mem317[bx_200:si_298:byte]
	si_229 = si_298 + 1<i16>
	cx_263 = SEQ(ch_489, al_259) (alias)
l1483_0E5E:
	word16 ax_338 = SEQ(SCZOP_330, al_259)
	branch (ch_258 | al_259) != 0<8> l1483_0E70
l1483_0E70:
l1483_0E64:
	__out<word16>(dx_484, ax_338 + 0xE80C<16>)
l1483_0E72:
	return SEQ(psegArg01A4, 0<16>)
l1483_0DF9:
	call fn1483_E62A (retsize: 2;)
		uses: ax:ax_361,bh:bh_368,bl:bl_367,cx:cx_686,dx:dx_484,Stack +0002:es_359,Stack +0004:wArg02,Stack +0008:wArg06,Stack +000E:wArg0C,Stack +0121:bArg02C1,Stack +0E00:bArg0FA0,Stack +FFFFFE62:wArg02,Stack +FFFFFE66:wArg06,Stack +FFFFFE6C:wArg0C
	return SEQ(es, di)
l1483_0D97:
	byte v37_382 = Mem163[ds:bx_170 + 0x28<16> + di:byte] - ah_362 - (sp_110 - 18<i16>)
	Mem383[ds:bx_170 + 0x28<16> + di:byte] = v37_382
l1483_0D9A:
	Mem388[ds:v32_158 + 0x5A<16>:byte] = Mem383[ds:v32_158 + 0x5A<16>:byte] - bh_385 - CONVERT(v37_382 <u 0<8>, bool, byte)
l1483_0D9D:
	byte v40_396 = Mem395[ds_di + 0x2D<16>:byte] - (al_171 | 0x3F<8>)
	Mem397[ds_di + 0x2D<16>:byte] = v40_396
	Mem401[es:di:byte] = al_171 | 0x3F<8>
	v77_512 = v40_396 >= 0<8>
	di = di + 1<i16>
	ds_bx_687 = SEQ(ds, bx_170) (alias)
	cx_684 = SEQ(ch_487, cl_452) (alias)
	branch v40_396 >= 0<8> l1483_0DB9
l1483_0DA7:
	Mem404[es:di + 1<i16>:byte] = al_171 | 0x3F<8>
	di = di + 2<i16>
	ds_bx_693 = SEQ(ds, bx_170) (alias)
	cx_684 = SEQ(ch_487, cl_452) (alias)
l1483_0DA8:
	word16 bx_428 = SLICE(ds_bx_693, word16, 0)
	ds_410 = SLICE(ds_bx_693, selector, 16) (alias)
	branch v77_512 l1483_0DBE
l1483_0DBE:
	cx_690 = cx_684 (alias)
l1483_0DAA:
	Mem423[ss:bp_183 + si_160:word16] = -Mem412[ss:bp_183 + si_160:word16]
	__cli()
	di = di - 1<16>
	Mem430[ds_410:bx_428 + 0x45<16> + di:word16] = Mem423[ss:sp_173:word16]
	word16 bp_434 = bp_183 + 1<16>
	Mem436[ds_410:bx_428 + 0xC079<16> + si_160:word16] = Mem430[ds_410:bx_428 + 0xC079<16> + si_160:word16] + bp_434
	sp_173 = sp_173 + 4<i16>
	bp_183 = bp_434 - 1<16>
	ds_bx_687 = ds_bx_693 (alias)
l1483_0DB9:
	Mem449[ds_bx_687 + di:byte] = Mem442[ds_bx_687 + di:byte] >>u 1<8>
	word16 bx_446 = SLICE(ds_bx_687, word16, 0)
	ds_410 = SLICE(ds_bx_687, selector, 16) (alias)
	Mem455[ds_410:bx_446 + 2<16> + di:byte] = Mem449[ds_410:bx_446 + 2<16> + di:byte] + SLICE(cx_684, byte, 0)
	sp_173 = sp_173 + 2<i16>
	cx_690 = cx_684 (alias)
l1483_0DBF:
	Mem464[ss:sp_173 - 2<i16>:word16] = cs
	Mem470[ss:0xB01<16>:word16] = es
	byte cl_472 = SLICE(cx_690, byte, 0)
	Mem474[ds_410:0x8C00<16>:byte] = Mem470[ds_410:0x8C00<16>:byte] + cl_472
	Mem479[ss:bp_183 + 0x8CC3<16>:word16] = __ror<word16,byte>(Mem474[ss:bp_183 + 0x8CC3<16>:word16], cl_472)
	return SEQ(es, di)
fn1483_0D3F_exit:


void fn1483_1104(byte al, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax:[0..7] bp:[0..15] bx:[0..15] di:[0..15] dl:[0..7] ds:[0..15] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1104_exit:
fn1483_1104_entry:
	word16 sp_2 = fp
	int8 Top_3 = 0<i8>
l1483_1104:
	byte al_12 = SLICE(SEQ(SLICE(__aam(SLICE(ax, byte, 0) - 0x97<8>), byte, 0), ax) - 0x755D97<24>, byte, 16)
l1483_110D:
	Mem22[ss:bp + 0x450F<16>:word16] = Mem18[ss:bp + 0x450F<16>:word16] + si + CONVERT(al_12 <u 0<8>, bool, word16)
	word16 sp_27 = sp_2 - 2<i16>
	Mem29[ss:sp_27:word16] = es
	word16 dx_32 = SEQ(0x34<8>, dl)
	Mem33[ss:bp + 0x5E<16> + si:word16] = dx_32
	Mem38[ds:bx + 0x675E<16> + di:word16] = Mem33[ds:bx + 0x675E<16> + di:word16] - 0x7D<16>
	Mem46[ss:sp_27 - 2<i16>:word16] = dx_32
	ST51[Top_3 + 1<i8>:real64] = ST50[Top_3 + 1<i8>:real64] * lg2(ST50[Top_3:real64] + 1.0)
	ptr32 es_bx_65 = Mem46[ds:0x9F59<16>:segptr32]
	Top_3 = Top_3 + 1<i8>
	ST67[Top_3:real64] = scalbn(ST51[Top_3:real64], ST51[Top_3 + 1<i8>:real64])
	Mem70[ss:bp + 0x1EC4<16>:word16] = Mem46[ss:bp + 0x1EC4<16>:word16] + bp
	sp_2 = sp_27
	si = 0x9F59<16>
	es = SLICE(es_bx_65, selector, 16) (alias)
	bx = SLICE(es_bx_65, word16, 0) (alias)
	di = 0xBFC4<16>


void fn1483_1777(byte al, byte bl, byte bh, word16 si, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al:[0..7] bh:[0..7] bl:[0..7] ds:[0..15] si:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1777_exit:
fn1483_1777_entry:
l1483_1777:
	fn1483_467E(SEQ(ds, bh, bl - al - CONVERT(C, bool, byte)), al, si)


byte fn1483_1B91(byte al, word16 cx, word16 bx, word16 di, selector ds, selector psegArg00)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_1BB9
// MayUse:  al:[0..7] bx:[0..15] cx:[0..15] di:[0..15] ds:[0..15] Stack +0000:[0..15]
// LiveOut: SCZO
// Trashed: SCZO ax bx di ds dx ecx Top
// Preserved: sp
fn1483_1B91_entry:
	byte bh = SLICE(bx, byte, 8)
l1483_1B91:
	Mem19[ds:bx + 0x10F8<16> + di:word16] = ~Mem0[ds:bx + 0x10F8<16> + di:word16]
	word16 v18_34 = Mem29[psegArg00:bx + 0x3201<16> + di:word16]
	Mem35[psegArg00:bx + 0x3201<16> + di:word16] = di
	__in<byte>(0x41<8>)
	__sti()
	Mem45[psegArg00:0xFF1F<16>:word16] = Mem35[psegArg00:0xFF1F<16>:word16] + 1<16>
	__in<byte>(fp)
	word16 ax_23 = SEQ(ah ^ 0x2E<8>, (al - 0x28<8> ^ 0xF9<8>) - bh)
l1483_1BB7_thunk_fn1483_1BB9:
	word16 cx_75
	byte dh_76
	word16 bx_77
	word16 bp_78
	word16 si_79
	word16 di_80
	selector es_81
	selector ds_82
	fn1483_1BB9(ax, ax_23, dx, bx, bp, si, v18_34, es, psegArg00, out cx_75, out dh_76, out bx_77, out bp_78, out si_79, out di_80, out es_81, out ds_82)
	return <invalid>
fn1483_1B91_exit:


segptr32 fn1483_1BB8(segptr32 ds_si, byte al, byte ah, word16 cx, word16 dx, word16 bx, word16 bp, word16 di, selector es, ptr16 & axOut, ptr16 & cxOut, ptr16 & dhOut, ptr16 & bxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_0C11
// MayUse:  ah:[0..7] al:[0..7] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..15] di:[0..15] dx:[0..15] es:[0..15] Sequence ds:si:[0..31] ss:[0..15]
// LiveOut: ax bx di ds dx ecx es si ss:bp
// Trashed: SCZO ax bp bx di ds dx ecx es si ss Top
// Preserved: sp
fn1483_1BB8_entry:
	selector ds = SLICE(ds_si, selector, 16)
	word16 si = SLICE(ds_si, word16, 0)
l1483_1BB8:
	word16 ax_15 = SEQ(ah, al | Mem0[ds_si:byte])
l1483_1BB8_thunk_fn1483_1BB9:
	word16 bp_22
	word16 bx_23
	word16 di_24
	selector ds_25
	word16 si_28
	selector es_30
	word16 cx_45
	byte dh_46
	axOut = fn1483_1BB9(ax_15, cx, dx, bx, bp, si, di, es, ds, out cx_45, out dh_46, out bx_23, out bp_22, out si_28, out di_24, out es_30, out ds_25)
	cxOut = <invalid>
	dhOut = <invalid>
	bxOut = bx_23
	siOut = si_28
	diOut = di_24
	esOut = es_30
	dsOut = ds_25
	selector ss_31 = <invalid>
	return SEQ(ss_31, bp_22)
fn1483_1BB8_exit:


word16 fn1483_1BB9(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dhOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_1B91
//      fn1483_1BB8
// MayUse:  ax:[0..15] bp:[0..15] bx:[0..15] cs:[0..15] cx:[0..15] di:[0..15] ds:[0..15] dx:[0..15] es:[0..15] si:[0..15] ss:[0..15]
// LiveOut: ax bp bx di ds dx ecx es si ss
// Trashed: SCZO ax bp bx di ds dx ecx es si sp ss Top
// Preserved:
fn1483_1BB9_entry:
	word16 sp_115 = fp
l1483_1BB9:
	byte bh_32 = SLICE(bx, byte, 8)
	byte al_109 = SLICE(ax, byte, 0)
	byte ah_125 = SLICE(ax, byte, 8)
	byte cl_185 = SLICE(cx, byte, 0)
	branch C l1483_1BBF
l1483_1BBF:
l1483_1BBC:
l1483_1B38:
	word16 dx_9 = dx - 1<16>
	byte dh_177 = SLICE(dx_9, byte, 8)
	branch dx_9 != 0<16> l1483_1B7F
l1483_1B3B:
	word16 bx_85
	branch dx_9 == 0<16> && cx != 1<16> l1483_1B6D
l1483_1B3D:
	selector es_16 = Mem6[ss:sp_115:selector]
	word16 sp_17 = sp_115 + 2<i16>
	branch si == bx l1483_1B51
l1483_1B44:
	word16 ax_26 = si - 1<16>
	byte ah_47 = SLICE(sp_17, byte, 8)
	branch SLICE(sp_17, byte, 0) + bh_32 + CONVERT(si <u bx, bool, byte) == 0<8> l1483_1B13
l1483_1B13:
	__sti()
	word16 dx_42
	word32 ecx_43
	word16 ax_44
	word16 bx_45
	call Mem6[0x1483<16>:bx:segptr32] (retsize: 0;)
		uses: ax:ax_44,bx:bx_45,cx:cx_258,dx:dx_42
		defs: ax:ax_44,bx:bx_45,dx:dx_42,ecx:ecx_43
	cxOut = <invalid>
	dhOut = <invalid>
	bxOut = bx_45
	bpOut = bp
	siOut = ax
	diOut = di
	esOut = es_16
	dsOut = <invalid>
	word16 cx_258 = SLICE(ecx_43, word16, 0)
	return ax_44
l1483_1B4E:
	Mem49[ds:ax:byte] = Mem6[ds:ax:byte] + ah_47
	Mem53[ss:ax_26 - 2<i16>:word16] = cs
	sp_17 = ax_26 - 2<i16>
l1483_1B51:
	es = Mem56[ss:sp_17:selector]
	byte al_62 = Mem56[ds:ax:byte]
	Mem64[es:0x2FB<16>:byte] = al_62
	// Failed to bind call argument.
	// Please report this issue at https://github.com/uxmal/reko
	selector stackArg0 = <invalid>
	byte SCZO_73 = fn1483_1B91(al_62, cx_89, bx_85, 0x2FC<16>, ds, stackArg0)
	__cli()
	Mem76[es:0x2FB<16>:word16] = 0xA0D<16>
	word16 sp_58 = sp_17 + 2<i16>
	word16 cx_89 = Mem76[ss:sp_58 + 0xC<16>:word16]
	word16 ax_91 = Mem76[ss:sp_58 + 0xE<16>:word16]
	word16 di_78 = Mem76[ss:sp_58:word16]
	si = Mem76[ss:sp_58 + 2<16>:word16]
	bp = Mem76[ss:sp_58 + 4<16>:word16]
	bx_85 = Mem76[ss:sp_58 + 8<16>:word16]
	Mem94[es:di_78:byte] = SLICE(ax_91, byte, 0)
	word16 v37_101 = Mem94[ds:bx_85 + (di_78 + 1<i16>):word16] + bx_85
	Mem102[ds:bx_85 + (di_78 + 1<i16>):word16] = v37_101
	Mem107[ds:di_78 + 1<i16>:byte] = __rcl<byte,byte,bool>(Mem102[ds:di_78 + 1<i16>:byte], SLICE(cx_89, byte, 0), SLICE(cond(v37_101), bool, 1))
	word16 ax_97 = ax_91 - 0xECBA<16> - CONVERT(SCZO_73, byte, word16)
	sp_115 = sp_58 + 0x10<16>
	di = di_78 + 1<i16>
	al_109 = SLICE(ax_97, byte, 0) (alias)
	ah_125 = SLICE(ax_97, byte, 8) (alias)
	bx = bx_85
l1483_1B6D:
	word16 sp_116 = sp_115 - 2<i16>
	Mem119[ss:sp_116:word16] = si
	byte al_112 = al_109 & 0x5C<8>
	byte bl_134 = SLICE(bx, byte, 0)
	byte bh_131 = SLICE(bx, byte, 8)
	word16 ax_128 = SEQ(ah_125, al_112)
	branch al_112 != 0<8> l1483_1BE8
l1483_1BE8:
	byte bh_137 = bh_131 | Mem119[ds:bx + 3<16>:byte]
	Mem141[ss:sp_116 - 2<i16>:word16] = es
	cxOut = <invalid>
	dhOut = <invalid>
	bxOut = SEQ(bh_137, bl_134)
	bpOut = bp - 2<16>
	siOut = 0x7269<16>
	diOut = di
	esOut = es
	dsOut = <invalid>
	return ax_128 - 0x85FE<16>
fn1483_1BB9_exit:
l1483_1B75:
	Mem148[ss:sp_116 - 2<i16>:word16] = 0x6365<16>
	di = Mem148[ss:Mem148[ds:bx + 0x726A<16>:word16] *s 0x46<16>:word16]
	si = Mem148[ss:Mem148[ds:bx + 0x726A<16>:word16] *s 0x46<16> + 2<16>:word16]
	bx = Mem148[ss:Mem148[ds:bx + 0x726A<16>:word16] *s 0x46<16> + 8<16>:word16]
	dh_177 = Mem148[ss:Mem148[ds:bx + 0x726A<16>:word16] *s 0x46<16> + 0xB<16>:byte] (alias)
	cl_185 = Mem148[ss:Mem148[ds:bx + 0x726A<16>:word16] *s 0x46<16> + 0xC<16>:byte] (alias)
	al_109 = Mem148[ss:Mem148[ds:bx + 0x726A<16>:word16] *s 0x46<16> + 0xE<16>:byte] (alias)
	sp_115 = Mem148[ds:bx + 0x726A<16>:word16] *s 0x46<16> + 0x10<16>
l1483_1B7F:
	bp = Mem168[ds:si + 0x65<16>:word16] *s 0x3A64<16>
	Mem174[ss:Mem168[ds:si + 0x65<16>:word16] *s 0x3A64<16> + si:byte] = Mem168[ss:Mem168[ds:si + 0x65<16>:word16] *s 0x3A64<16> + si:byte] & al_109
	byte dh_182 = dh_177 ^ Mem174[ds:bx + di:byte]
	word16 ax_184 = __in<word16>(0xC<8>)
	Mem189[ds:0x2CF2<16>:byte] = Mem174[ds:0x2CF2<16>:byte] ^ cl_185
	Mem192[ds:di:byte] = Mem189[ds:di:byte] - dh_182
	Mem198[ds:di + 0xEA01<16>:word16] = ~Mem192[ds:di + 0xEA01<16>:word16]
	word16 sp_207 = sp_115 - 2<i16>
	Mem208[ss:sp_207:word16] = sp_115
	ds = Mem208[ss:sp_207 + 2<i16>:selector]
	dx = Mem208[ss:sp_207:word16]
	word16 v34_213 = Mem208[ds:di + 0xB0A<16>:word16]
	Mem214[ds:di + 0xB0A<16>:word16] = di
	__in<byte>(0x41<8>)
	__sti()
	Mem227[ds:0xFF1F<16>:word16] = Mem214[ds:0xFF1F<16>:word16] + 1<16>
	byte al_193 = SLICE(ax_184, byte, 0)
	bx = 0xD909<16>
	cx = SEQ(SLICE(ax_184, byte, 8), al_193 - 0xD9<8>)
	sp_115 = sp_207 + 4<i16>
	di = v34_213
	C = false
	ax = SEQ(SLICE(SLICE(SEQ(0xAF<8>, cl_185, al_193) - 0xA587D9<24>, word16, 8), byte, 8), __in<byte>(dx) - 0xF8<8> & 0xA<8>) (alias)


void fn1483_1C50(byte ah, word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah:[0..7] dx:[0..15]
// LiveOut:
// Trashed: ax dx Top
// Preserved: sp
fn1483_1C50_entry:
l1483_1C50:
	byte al_5 = __in<byte>(dx)
	call SEQ(ah, al_5) (retsize: 0;)
		uses: ah:ah,al:al_5,dx:dx
	return
fn1483_1C50_exit:


void fn1483_467E(segptr32 ds_bx, byte al, word16 si)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// Called from:
//      fn1483_1777
// MayUse:  al:[0..7] Sequence ds:bx:[0..31] si:[0..15]
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_467E_exit:
fn1483_467E_entry:
l1483_467E:
	Mem10[ds_bx + si:byte] = Mem0[ds_bx + si:byte] + al
	Mem12[ds_bx + si:byte] = Mem10[ds_bx + si:byte] + al
	Mem14[ds_bx + si:byte] = Mem12[ds_bx + si:byte] + al
	Mem16[ds_bx + si:byte] = Mem14[ds_bx + si:byte] + al
	Mem18[ds_bx + si:byte] = Mem16[ds_bx + si:byte] + al
	Mem20[ds_bx + si:byte] = Mem18[ds_bx + si:byte] + al
	Mem22[ds_bx + si:byte] = Mem20[ds_bx + si:byte] + al
	Mem24[ds_bx + si:byte] = Mem22[ds_bx + si:byte] + al
	Mem26[ds_bx + si:byte] = Mem24[ds_bx + si:byte] + al
	Mem28[ds_bx + si:byte] = Mem26[ds_bx + si:byte] + al
	Mem30[ds_bx + si:byte] = Mem28[ds_bx + si:byte] + al
	Mem32[ds_bx + si:byte] = Mem30[ds_bx + si:byte] + al
	Mem34[ds_bx + si:byte] = Mem32[ds_bx + si:byte] + al
	Mem36[ds_bx + si:byte] = Mem34[ds_bx + si:byte] + al
	Mem38[ds_bx + si:byte] = Mem36[ds_bx + si:byte] + al
	Mem40[ds_bx + si:byte] = Mem38[ds_bx + si:byte] + al
	Mem42[ds_bx + si:byte] = Mem40[ds_bx + si:byte] + al
	Mem44[ds_bx + si:byte] = Mem42[ds_bx + si:byte] + al
	Mem46[ds_bx + si:byte] = Mem44[ds_bx + si:byte] + al
	Mem48[ds_bx + si:byte] = Mem46[ds_bx + si:byte] + al
	Mem50[ds_bx + si:byte] = Mem48[ds_bx + si:byte] + al
	Mem52[ds_bx + si:byte] = Mem50[ds_bx + si:byte] + al
	Mem54[ds_bx + si:byte] = Mem52[ds_bx + si:byte] + al
	Mem56[ds_bx + si:byte] = Mem54[ds_bx + si:byte] + al
	Mem58[ds_bx + si:byte] = Mem56[ds_bx + si:byte] + al
	Mem60[ds_bx + si:byte] = Mem58[ds_bx + si:byte] + al
	Mem62[ds_bx + si:byte] = Mem60[ds_bx + si:byte] + al
	Mem64[ds_bx + si:byte] = Mem62[ds_bx + si:byte] + al
	Mem66[ds_bx + si:byte] = Mem64[ds_bx + si:byte] + al
	Mem68[ds_bx + si:byte] = Mem66[ds_bx + si:byte] + al
	Mem70[ds_bx + si:byte] = Mem68[ds_bx + si:byte] + al
	Mem72[ds_bx + si:byte] = Mem70[ds_bx + si:byte] + al
	Mem74[ds_bx + si:byte] = Mem72[ds_bx + si:byte] + al
	Mem76[ds_bx + si:byte] = Mem74[ds_bx + si:byte] + al
	Mem78[ds_bx + si:byte] = Mem76[ds_bx + si:byte] + al
	Mem80[ds_bx + si:byte] = Mem78[ds_bx + si:byte] + al
	Mem82[ds_bx + si:byte] = Mem80[ds_bx + si:byte] + al
	Mem84[ds_bx + si:byte] = Mem82[ds_bx + si:byte] + al
	Mem86[ds_bx + si:byte] = Mem84[ds_bx + si:byte] + al
	Mem88[ds_bx + si:byte] = Mem86[ds_bx + si:byte] + al
	Mem90[ds_bx + si:byte] = Mem88[ds_bx + si:byte] + al
	Mem92[ds_bx + si:byte] = Mem90[ds_bx + si:byte] + al
	Mem94[ds_bx + si:byte] = Mem92[ds_bx + si:byte] + al
	Mem96[ds_bx + si:byte] = Mem94[ds_bx + si:byte] + al
	Mem98[ds_bx + si:byte] = Mem96[ds_bx + si:byte] + al
	Mem100[ds_bx + si:byte] = Mem98[ds_bx + si:byte] + al
	Mem102[ds_bx + si:byte] = Mem100[ds_bx + si:byte] + al
	Mem104[ds_bx + si:byte] = Mem102[ds_bx + si:byte] + al
	Mem106[ds_bx + si:byte] = Mem104[ds_bx + si:byte] + al
	Mem108[ds_bx + si:byte] = Mem106[ds_bx + si:byte] + al
	Mem110[ds_bx + si:byte] = Mem108[ds_bx + si:byte] + al
	Mem112[ds_bx + si:byte] = Mem110[ds_bx + si:byte] + al
	Mem114[ds_bx + si:byte] = Mem112[ds_bx + si:byte] + al
	Mem116[ds_bx + si:byte] = Mem114[ds_bx + si:byte] + al
	Mem118[ds_bx + si:byte] = Mem116[ds_bx + si:byte] + al
	Mem120[ds_bx + si:byte] = Mem118[ds_bx + si:byte] + al
	Mem122[ds_bx + si:byte] = Mem120[ds_bx + si:byte] + al
	Mem124[ds_bx + si:byte] = Mem122[ds_bx + si:byte] + al
	Mem126[ds_bx + si:byte] = Mem124[ds_bx + si:byte] + al
	Mem128[ds_bx + si:byte] = Mem126[ds_bx + si:byte] + al
	Mem130[ds_bx + si:byte] = Mem128[ds_bx + si:byte] + al
	Mem132[ds_bx + si:byte] = Mem130[ds_bx + si:byte] + al
	Mem134[ds_bx + si:byte] = Mem132[ds_bx + si:byte] + al
	Mem136[ds_bx + si:byte] = Mem134[ds_bx + si:byte] + al
	Mem138[ds_bx + si:byte] = Mem136[ds_bx + si:byte] + al
	Mem140[ds_bx + si:byte] = Mem138[ds_bx + si:byte] + al
	Mem142[ds_bx + si:byte] = Mem140[ds_bx + si:byte] + al
	Mem144[ds_bx + si:byte] = Mem142[ds_bx + si:byte] + al
	Mem146[ds_bx + si:byte] = Mem144[ds_bx + si:byte] + al
	Mem148[ds_bx + si:byte] = Mem146[ds_bx + si:byte] + al
	Mem150[ds_bx + si:byte] = Mem148[ds_bx + si:byte] + al
	Mem152[ds_bx + si:byte] = Mem150[ds_bx + si:byte] + al
	Mem154[ds_bx + si:byte] = Mem152[ds_bx + si:byte] + al
	Mem156[ds_bx + si:byte] = Mem154[ds_bx + si:byte] + al
	Mem158[ds_bx + si:byte] = Mem156[ds_bx + si:byte] + al
	Mem160[ds_bx + si:byte] = Mem158[ds_bx + si:byte] + al
	Mem162[ds_bx + si:byte] = Mem160[ds_bx + si:byte] + al
	Mem164[ds_bx + si:byte] = Mem162[ds_bx + si:byte] + al
	Mem166[ds_bx + si:byte] = Mem164[ds_bx + si:byte] + al
	Mem168[ds_bx + si:byte] = Mem166[ds_bx + si:byte] + al
	Mem170[ds_bx + si:byte] = Mem168[ds_bx + si:byte] + al
	Mem172[ds_bx + si:byte] = Mem170[ds_bx + si:byte] + al
	Mem174[ds_bx + si:byte] = Mem172[ds_bx + si:byte] + al
	Mem176[ds_bx + si:byte] = Mem174[ds_bx + si:byte] + al
	Mem178[ds_bx + si:byte] = Mem176[ds_bx + si:byte] + al
	Mem180[ds_bx + si:byte] = Mem178[ds_bx + si:byte] + al
	Mem182[ds_bx + si:byte] = Mem180[ds_bx + si:byte] + al
	Mem184[ds_bx + si:byte] = Mem182[ds_bx + si:byte] + al
	Mem186[ds_bx + si:byte] = Mem184[ds_bx + si:byte] + al
	Mem188[ds_bx + si:byte] = Mem186[ds_bx + si:byte] + al
	Mem190[ds_bx + si:byte] = Mem188[ds_bx + si:byte] + al
	Mem192[ds_bx + si:byte] = Mem190[ds_bx + si:byte] + al
	Mem194[ds_bx + si:byte] = Mem192[ds_bx + si:byte] + al
	Mem196[ds_bx + si:byte] = Mem194[ds_bx + si:byte] + al
	Mem198[ds_bx + si:byte] = Mem196[ds_bx + si:byte] + al
	Mem200[ds_bx + si:byte] = Mem198[ds_bx + si:byte] + al
	Mem202[ds_bx + si:byte] = Mem200[ds_bx + si:byte] + al
	Mem204[ds_bx + si:byte] = Mem202[ds_bx + si:byte] + al
	Mem206[ds_bx + si:byte] = Mem204[ds_bx + si:byte] + al
	Mem208[ds_bx + si:byte] = Mem206[ds_bx + si:byte] + al
	Mem210[ds_bx + si:byte] = Mem208[ds_bx + si:byte] + al
	Mem212[ds_bx + si:byte] = Mem210[ds_bx + si:byte] + al
	Mem214[ds_bx + si:byte] = Mem212[ds_bx + si:byte] + al
	Mem216[ds_bx + si:byte] = Mem214[ds_bx + si:byte] + al
	Mem218[ds_bx + si:byte] = Mem216[ds_bx + si:byte] + al
	Mem220[ds_bx + si:byte] = Mem218[ds_bx + si:byte] + al
	Mem222[ds_bx + si:byte] = Mem220[ds_bx + si:byte] + al
	Mem224[ds_bx + si:byte] = Mem222[ds_bx + si:byte] + al
	Mem226[ds_bx + si:byte] = Mem224[ds_bx + si:byte] + al
	Mem228[ds_bx + si:byte] = Mem226[ds_bx + si:byte] + al
	Mem230[ds_bx + si:byte] = Mem228[ds_bx + si:byte] + al
	Mem232[ds_bx + si:byte] = Mem230[ds_bx + si:byte] + al
	Mem234[ds_bx + si:byte] = Mem232[ds_bx + si:byte] + al
	Mem236[ds_bx + si:byte] = Mem234[ds_bx + si:byte] + al
	Mem238[ds_bx + si:byte] = Mem236[ds_bx + si:byte] + al
	Mem240[ds_bx + si:byte] = Mem238[ds_bx + si:byte] + al
	Mem242[ds_bx + si:byte] = Mem240[ds_bx + si:byte] + al
	Mem244[ds_bx + si:byte] = Mem242[ds_bx + si:byte] + al
	Mem246[ds_bx + si:byte] = Mem244[ds_bx + si:byte] + al
	Mem248[ds_bx + si:byte] = Mem246[ds_bx + si:byte] + al
	Mem250[ds_bx + si:byte] = Mem248[ds_bx + si:byte] + al
	Mem252[ds_bx + si:byte] = Mem250[ds_bx + si:byte] + al
	Mem254[ds_bx + si:byte] = Mem252[ds_bx + si:byte] + al
	Mem256[ds_bx + si:byte] = Mem254[ds_bx + si:byte] + al
	Mem258[ds_bx + si:byte] = Mem256[ds_bx + si:byte] + al
	Mem260[ds_bx + si:byte] = Mem258[ds_bx + si:byte] + al
	Mem262[ds_bx + si:byte] = Mem260[ds_bx + si:byte] + al
	Mem264[ds_bx + si:byte] = Mem262[ds_bx + si:byte] + al
	Mem266[ds_bx + si:byte] = Mem264[ds_bx + si:byte] + al
	Mem268[ds_bx + si:byte] = Mem266[ds_bx + si:byte] + al
	Mem270[ds_bx + si:byte] = Mem268[ds_bx + si:byte] + al
	Mem272[ds_bx + si:byte] = Mem270[ds_bx + si:byte] + al
	Mem274[ds_bx + si:byte] = Mem272[ds_bx + si:byte] + al
	Mem276[ds_bx + si:byte] = Mem274[ds_bx + si:byte] + al
	Mem278[ds_bx + si:byte] = Mem276[ds_bx + si:byte] + al
	Mem280[ds_bx + si:byte] = Mem278[ds_bx + si:byte] + al
	Mem282[ds_bx + si:byte] = Mem280[ds_bx + si:byte] + al
	Mem284[ds_bx + si:byte] = Mem282[ds_bx + si:byte] + al
	Mem286[ds_bx + si:byte] = Mem284[ds_bx + si:byte] + al
	Mem288[ds_bx + si:byte] = Mem286[ds_bx + si:byte] + al
	Mem290[ds_bx + si:byte] = Mem288[ds_bx + si:byte] + al
	Mem292[ds_bx + si:byte] = Mem290[ds_bx + si:byte] + al
	Mem294[ds_bx + si:byte] = Mem292[ds_bx + si:byte] + al
	Mem296[ds_bx + si:byte] = Mem294[ds_bx + si:byte] + al
	Mem298[ds_bx + si:byte] = Mem296[ds_bx + si:byte] + al
	Mem300[ds_bx + si:byte] = Mem298[ds_bx + si:byte] + al
	Mem302[ds_bx + si:byte] = Mem300[ds_bx + si:byte] + al
	Mem304[ds_bx + si:byte] = Mem302[ds_bx + si:byte] + al
	Mem306[ds_bx + si:byte] = Mem304[ds_bx + si:byte] + al
	Mem308[ds_bx + si:byte] = Mem306[ds_bx + si:byte] + al
	Mem310[ds_bx + si:byte] = Mem308[ds_bx + si:byte] + al
	Mem312[ds_bx + si:byte] = Mem310[ds_bx + si:byte] + al
	Mem314[ds_bx + si:byte] = Mem312[ds_bx + si:byte] + al
	Mem316[ds_bx + si:byte] = Mem314[ds_bx + si:byte] + al
	Mem318[ds_bx + si:byte] = Mem316[ds_bx + si:byte] + al
	Mem320[ds_bx + si:byte] = Mem318[ds_bx + si:byte] + al
	Mem322[ds_bx + si:byte] = Mem320[ds_bx + si:byte] + al
	Mem324[ds_bx + si:byte] = Mem322[ds_bx + si:byte] + al
	Mem326[ds_bx + si:byte] = Mem324[ds_bx + si:byte] + al
	Mem328[ds_bx + si:byte] = Mem326[ds_bx + si:byte] + al
	Mem330[ds_bx + si:byte] = Mem328[ds_bx + si:byte] + al
	Mem332[ds_bx + si:byte] = Mem330[ds_bx + si:byte] + al
	Mem334[ds_bx + si:byte] = Mem332[ds_bx + si:byte] + al
	Mem336[ds_bx + si:byte] = Mem334[ds_bx + si:byte] + al
	Mem338[ds_bx + si:byte] = Mem336[ds_bx + si:byte] + al
	Mem340[ds_bx + si:byte] = Mem338[ds_bx + si:byte] + al
	Mem342[ds_bx + si:byte] = Mem340[ds_bx + si:byte] + al
	Mem344[ds_bx + si:byte] = Mem342[ds_bx + si:byte] + al
	Mem346[ds_bx + si:byte] = Mem344[ds_bx + si:byte] + al
	Mem348[ds_bx + si:byte] = Mem346[ds_bx + si:byte] + al
	Mem350[ds_bx + si:byte] = Mem348[ds_bx + si:byte] + al
	Mem352[ds_bx + si:byte] = Mem350[ds_bx + si:byte] + al
	Mem354[ds_bx + si:byte] = Mem352[ds_bx + si:byte] + al
	Mem356[ds_bx + si:byte] = Mem354[ds_bx + si:byte] + al
	Mem358[ds_bx + si:byte] = Mem356[ds_bx + si:byte] + al
	Mem360[ds_bx + si:byte] = Mem358[ds_bx + si:byte] + al
	Mem362[ds_bx + si:byte] = Mem360[ds_bx + si:byte] + al
	Mem364[ds_bx + si:byte] = Mem362[ds_bx + si:byte] + al
	Mem366[ds_bx + si:byte] = Mem364[ds_bx + si:byte] + al
	Mem368[ds_bx + si:byte] = Mem366[ds_bx + si:byte] + al
	Mem370[ds_bx + si:byte] = Mem368[ds_bx + si:byte] + al
	Mem372[ds_bx + si:byte] = Mem370[ds_bx + si:byte] + al
	Mem374[ds_bx + si:byte] = Mem372[ds_bx + si:byte] + al
	Mem376[ds_bx + si:byte] = Mem374[ds_bx + si:byte] + al
	Mem378[ds_bx + si:byte] = Mem376[ds_bx + si:byte] + al
	Mem380[ds_bx + si:byte] = Mem378[ds_bx + si:byte] + al
	Mem382[ds_bx + si:byte] = Mem380[ds_bx + si:byte] + al
	Mem384[ds_bx + si:byte] = Mem382[ds_bx + si:byte] + al
	Mem386[ds_bx + si:byte] = Mem384[ds_bx + si:byte] + al
	Mem388[ds_bx + si:byte] = Mem386[ds_bx + si:byte] + al
	Mem390[ds_bx + si:byte] = Mem388[ds_bx + si:byte] + al
	Mem392[ds_bx + si:byte] = Mem390[ds_bx + si:byte] + al
	Mem394[ds_bx + si:byte] = Mem392[ds_bx + si:byte] + al
	Mem396[ds_bx + si:byte] = Mem394[ds_bx + si:byte] + al
	Mem398[ds_bx + si:byte] = Mem396[ds_bx + si:byte] + al
	Mem400[ds_bx + si:byte] = Mem398[ds_bx + si:byte] + al
	Mem402[ds_bx + si:byte] = Mem400[ds_bx + si:byte] + al
	Mem404[ds_bx + si:byte] = Mem402[ds_bx + si:byte] + al
	Mem406[ds_bx + si:byte] = Mem404[ds_bx + si:byte] + al
	Mem408[ds_bx + si:byte] = Mem406[ds_bx + si:byte] + al
	Mem410[ds_bx + si:byte] = Mem408[ds_bx + si:byte] + al
	Mem412[ds_bx + si:byte] = Mem410[ds_bx + si:byte] + al
	Mem414[ds_bx + si:byte] = Mem412[ds_bx + si:byte] + al
	Mem416[ds_bx + si:byte] = Mem414[ds_bx + si:byte] + al
	Mem418[ds_bx + si:byte] = Mem416[ds_bx + si:byte] + al
	Mem420[ds_bx + si:byte] = Mem418[ds_bx + si:byte] + al
	Mem422[ds_bx + si:byte] = Mem420[ds_bx + si:byte] + al
	Mem424[ds_bx + si:byte] = Mem422[ds_bx + si:byte] + al
	Mem426[ds_bx + si:byte] = Mem424[ds_bx + si:byte] + al
	Mem428[ds_bx + si:byte] = Mem426[ds_bx + si:byte] + al
	Mem430[ds_bx + si:byte] = Mem428[ds_bx + si:byte] + al
	Mem432[ds_bx + si:byte] = Mem430[ds_bx + si:byte] + al
	Mem434[ds_bx + si:byte] = Mem432[ds_bx + si:byte] + al
	Mem436[ds_bx + si:byte] = Mem434[ds_bx + si:byte] + al
	Mem438[ds_bx + si:byte] = Mem436[ds_bx + si:byte] + al
	Mem440[ds_bx + si:byte] = Mem438[ds_bx + si:byte] + al
	Mem442[ds_bx + si:byte] = Mem440[ds_bx + si:byte] + al
	Mem444[ds_bx + si:byte] = Mem442[ds_bx + si:byte] + al
	Mem446[ds_bx + si:byte] = Mem444[ds_bx + si:byte] + al
	Mem448[ds_bx + si:byte] = Mem446[ds_bx + si:byte] + al
	Mem450[ds_bx + si:byte] = Mem448[ds_bx + si:byte] + al
	Mem452[ds_bx + si:byte] = Mem450[ds_bx + si:byte] + al
	Mem454[ds_bx + si:byte] = Mem452[ds_bx + si:byte] + al
	Mem456[ds_bx + si:byte] = Mem454[ds_bx + si:byte] + al
	Mem458[ds_bx + si:byte] = Mem456[ds_bx + si:byte] + al
	Mem460[ds_bx + si:byte] = Mem458[ds_bx + si:byte] + al
	Mem462[ds_bx + si:byte] = Mem460[ds_bx + si:byte] + al
	Mem464[ds_bx + si:byte] = Mem462[ds_bx + si:byte] + al
	Mem466[ds_bx + si:byte] = Mem464[ds_bx + si:byte] + al
	Mem468[ds_bx + si:byte] = Mem466[ds_bx + si:byte] + al
	Mem470[ds_bx + si:byte] = Mem468[ds_bx + si:byte] + al
	Mem472[ds_bx + si:byte] = Mem470[ds_bx + si:byte] + al
	Mem474[ds_bx + si:byte] = Mem472[ds_bx + si:byte] + al
	Mem476[ds_bx + si:byte] = Mem474[ds_bx + si:byte] + al
	Mem478[ds_bx + si:byte] = Mem476[ds_bx + si:byte] + al
	Mem480[ds_bx + si:byte] = Mem478[ds_bx + si:byte] + al
	Mem482[ds_bx + si:byte] = Mem480[ds_bx + si:byte] + al
	Mem484[ds_bx + si:byte] = Mem482[ds_bx + si:byte] + al
	Mem486[ds_bx + si:byte] = Mem484[ds_bx + si:byte] + al
	Mem488[ds_bx + si:byte] = Mem486[ds_bx + si:byte] + al
	Mem490[ds_bx + si:byte] = Mem488[ds_bx + si:byte] + al
	Mem492[ds_bx + si:byte] = Mem490[ds_bx + si:byte] + al
	Mem494[ds_bx + si:byte] = Mem492[ds_bx + si:byte] + al
	Mem496[ds_bx + si:byte] = Mem494[ds_bx + si:byte] + al
	Mem498[ds_bx + si:byte] = Mem496[ds_bx + si:byte] + al
	Mem500[ds_bx + si:byte] = Mem498[ds_bx + si:byte] + al
	Mem502[ds_bx + si:byte] = Mem500[ds_bx + si:byte] + al
	Mem504[ds_bx + si:byte] = Mem502[ds_bx + si:byte] + al
	Mem506[ds_bx + si:byte] = Mem504[ds_bx + si:byte] + al
	Mem508[ds_bx + si:byte] = Mem506[ds_bx + si:byte] + al
	Mem510[ds_bx + si:byte] = Mem508[ds_bx + si:byte] + al
	Mem512[ds_bx + si:byte] = Mem510[ds_bx + si:byte] + al
	Mem514[ds_bx + si:byte] = Mem512[ds_bx + si:byte] + al
	Mem516[ds_bx + si:byte] = Mem514[ds_bx + si:byte] + al
	Mem518[ds_bx + si:byte] = Mem516[ds_bx + si:byte] + al
	Mem520[ds_bx + si:byte] = Mem518[ds_bx + si:byte] + al
	Mem522[ds_bx + si:byte] = Mem520[ds_bx + si:byte] + al
	Mem524[ds_bx + si:byte] = Mem522[ds_bx + si:byte] + al
	Mem526[ds_bx + si:byte] = Mem524[ds_bx + si:byte] + al
	Mem528[ds_bx + si:byte] = Mem526[ds_bx + si:byte] + al
	Mem530[ds_bx + si:byte] = Mem528[ds_bx + si:byte] + al
	Mem532[ds_bx + si:byte] = Mem530[ds_bx + si:byte] + al
	Mem534[ds_bx + si:byte] = Mem532[ds_bx + si:byte] + al
	Mem536[ds_bx + si:byte] = Mem534[ds_bx + si:byte] + al
	Mem538[ds_bx + si:byte] = Mem536[ds_bx + si:byte] + al
	Mem540[ds_bx + si:byte] = Mem538[ds_bx + si:byte] + al
	Mem542[ds_bx + si:byte] = Mem540[ds_bx + si:byte] + al
	Mem544[ds_bx + si:byte] = Mem542[ds_bx + si:byte] + al
	Mem546[ds_bx + si:byte] = Mem544[ds_bx + si:byte] + al
	Mem548[ds_bx + si:byte] = Mem546[ds_bx + si:byte] + al
	Mem550[ds_bx + si:byte] = Mem548[ds_bx + si:byte] + al
	Mem552[ds_bx + si:byte] = Mem550[ds_bx + si:byte] + al
	Mem554[ds_bx + si:byte] = Mem552[ds_bx + si:byte] + al
	Mem556[ds_bx + si:byte] = Mem554[ds_bx + si:byte] + al
	Mem558[ds_bx + si:byte] = Mem556[ds_bx + si:byte] + al
	Mem560[ds_bx + si:byte] = Mem558[ds_bx + si:byte] + al
	Mem562[ds_bx + si:byte] = Mem560[ds_bx + si:byte] + al
	Mem564[ds_bx + si:byte] = Mem562[ds_bx + si:byte] + al
	Mem566[ds_bx + si:byte] = Mem564[ds_bx + si:byte] + al
	Mem568[ds_bx + si:byte] = Mem566[ds_bx + si:byte] + al
	Mem570[ds_bx + si:byte] = Mem568[ds_bx + si:byte] + al
	Mem572[ds_bx + si:byte] = Mem570[ds_bx + si:byte] + al
	Mem574[ds_bx + si:byte] = Mem572[ds_bx + si:byte] + al
	Mem576[ds_bx + si:byte] = Mem574[ds_bx + si:byte] + al
	Mem578[ds_bx + si:byte] = Mem576[ds_bx + si:byte] + al
	Mem580[ds_bx + si:byte] = Mem578[ds_bx + si:byte] + al
	Mem582[ds_bx + si:byte] = Mem580[ds_bx + si:byte] + al
	Mem584[ds_bx + si:byte] = Mem582[ds_bx + si:byte] + al
	Mem586[ds_bx + si:byte] = Mem584[ds_bx + si:byte] + al
	Mem588[ds_bx + si:byte] = Mem586[ds_bx + si:byte] + al
	Mem590[ds_bx + si:byte] = Mem588[ds_bx + si:byte] + al
	Mem592[ds_bx + si:byte] = Mem590[ds_bx + si:byte] + al
	Mem594[ds_bx + si:byte] = Mem592[ds_bx + si:byte] + al
	Mem596[ds_bx + si:byte] = Mem594[ds_bx + si:byte] + al
	Mem598[ds_bx + si:byte] = Mem596[ds_bx + si:byte] + al
	Mem600[ds_bx + si:byte] = Mem598[ds_bx + si:byte] + al
	Mem602[ds_bx + si:byte] = Mem600[ds_bx + si:byte] + al
	Mem604[ds_bx + si:byte] = Mem602[ds_bx + si:byte] + al
	Mem606[ds_bx + si:byte] = Mem604[ds_bx + si:byte] + al
	Mem608[ds_bx + si:byte] = Mem606[ds_bx + si:byte] + al
	Mem610[ds_bx + si:byte] = Mem608[ds_bx + si:byte] + al
	Mem612[ds_bx + si:byte] = Mem610[ds_bx + si:byte] + al
	Mem614[ds_bx + si:byte] = Mem612[ds_bx + si:byte] + al
	Mem616[ds_bx + si:byte] = Mem614[ds_bx + si:byte] + al
	Mem618[ds_bx + si:byte] = Mem616[ds_bx + si:byte] + al
	Mem620[ds_bx + si:byte] = Mem618[ds_bx + si:byte] + al
	Mem622[ds_bx + si:byte] = Mem620[ds_bx + si:byte] + al
	Mem624[ds_bx + si:byte] = Mem622[ds_bx + si:byte] + al
	Mem626[ds_bx + si:byte] = Mem624[ds_bx + si:byte] + al
	Mem628[ds_bx + si:byte] = Mem626[ds_bx + si:byte] + al
	Mem630[ds_bx + si:byte] = Mem628[ds_bx + si:byte] + al
	Mem632[ds_bx + si:byte] = Mem630[ds_bx + si:byte] + al
	Mem634[ds_bx + si:byte] = Mem632[ds_bx + si:byte] + al
	Mem636[ds_bx + si:byte] = Mem634[ds_bx + si:byte] + al
	Mem638[ds_bx + si:byte] = Mem636[ds_bx + si:byte] + al
	Mem640[ds_bx + si:byte] = Mem638[ds_bx + si:byte] + al
	Mem642[ds_bx + si:byte] = Mem640[ds_bx + si:byte] + al
	Mem644[ds_bx + si:byte] = Mem642[ds_bx + si:byte] + al
	Mem646[ds_bx + si:byte] = Mem644[ds_bx + si:byte] + al
	Mem648[ds_bx + si:byte] = Mem646[ds_bx + si:byte] + al
	Mem650[ds_bx + si:byte] = Mem648[ds_bx + si:byte] + al
	Mem652[ds_bx + si:byte] = Mem650[ds_bx + si:byte] + al
	Mem654[ds_bx + si:byte] = Mem652[ds_bx + si:byte] + al
	Mem656[ds_bx + si:byte] = Mem654[ds_bx + si:byte] + al
	Mem658[ds_bx + si:byte] = Mem656[ds_bx + si:byte] + al
	Mem660[ds_bx + si:byte] = Mem658[ds_bx + si:byte] + al
	Mem662[ds_bx + si:byte] = Mem660[ds_bx + si:byte] + al
	Mem664[ds_bx + si:byte] = Mem662[ds_bx + si:byte] + al
	Mem666[ds_bx + si:byte] = Mem664[ds_bx + si:byte] + al
	Mem668[ds_bx + si:byte] = Mem666[ds_bx + si:byte] + al
	Mem670[ds_bx + si:byte] = Mem668[ds_bx + si:byte] + al
	Mem672[ds_bx + si:byte] = Mem670[ds_bx + si:byte] + al
	Mem674[ds_bx + si:byte] = Mem672[ds_bx + si:byte] + al
	Mem676[ds_bx + si:byte] = Mem674[ds_bx + si:byte] + al
	Mem678[ds_bx + si:byte] = Mem676[ds_bx + si:byte] + al
	Mem680[ds_bx + si:byte] = Mem678[ds_bx + si:byte] + al
	Mem682[ds_bx + si:byte] = Mem680[ds_bx + si:byte] + al
	Mem684[ds_bx + si:byte] = Mem682[ds_bx + si:byte] + al
	Mem686[ds_bx + si:byte] = Mem684[ds_bx + si:byte] + al
	Mem688[ds_bx + si:byte] = Mem686[ds_bx + si:byte] + al
	Mem690[ds_bx + si:byte] = Mem688[ds_bx + si:byte] + al
	Mem692[ds_bx + si:byte] = Mem690[ds_bx + si:byte] + al
	Mem694[ds_bx + si:byte] = Mem692[ds_bx + si:byte] + al
	Mem696[ds_bx + si:byte] = Mem694[ds_bx + si:byte] + al
	Mem698[ds_bx + si:byte] = Mem696[ds_bx + si:byte] + al
	Mem700[ds_bx + si:byte] = Mem698[ds_bx + si:byte] + al
	Mem702[ds_bx + si:byte] = Mem700[ds_bx + si:byte] + al
	Mem704[ds_bx + si:byte] = Mem702[ds_bx + si:byte] + al
	Mem706[ds_bx + si:byte] = Mem704[ds_bx + si:byte] + al
	Mem708[ds_bx + si:byte] = Mem706[ds_bx + si:byte] + al
	Mem710[ds_bx + si:byte] = Mem708[ds_bx + si:byte] + al
	Mem712[ds_bx + si:byte] = Mem710[ds_bx + si:byte] + al
	Mem714[ds_bx + si:byte] = Mem712[ds_bx + si:byte] + al
	Mem716[ds_bx + si:byte] = Mem714[ds_bx + si:byte] + al
	Mem718[ds_bx + si:byte] = Mem716[ds_bx + si:byte] + al
	Mem720[ds_bx + si:byte] = Mem718[ds_bx + si:byte] + al
	Mem722[ds_bx + si:byte] = Mem720[ds_bx + si:byte] + al
	Mem724[ds_bx + si:byte] = Mem722[ds_bx + si:byte] + al
	Mem726[ds_bx + si:byte] = Mem724[ds_bx + si:byte] + al
	Mem728[ds_bx + si:byte] = Mem726[ds_bx + si:byte] + al
	Mem730[ds_bx + si:byte] = Mem728[ds_bx + si:byte] + al
	Mem732[ds_bx + si:byte] = Mem730[ds_bx + si:byte] + al
	Mem734[ds_bx + si:byte] = Mem732[ds_bx + si:byte] + al
	Mem736[ds_bx + si:byte] = Mem734[ds_bx + si:byte] + al
	Mem738[ds_bx + si:byte] = Mem736[ds_bx + si:byte] + al
	Mem740[ds_bx + si:byte] = Mem738[ds_bx + si:byte] + al
	Mem742[ds_bx + si:byte] = Mem740[ds_bx + si:byte] + al
	Mem744[ds_bx + si:byte] = Mem742[ds_bx + si:byte] + al
	Mem746[ds_bx + si:byte] = Mem744[ds_bx + si:byte] + al
	Mem748[ds_bx + si:byte] = Mem746[ds_bx + si:byte] + al
	Mem750[ds_bx + si:byte] = Mem748[ds_bx + si:byte] + al
	Mem752[ds_bx + si:byte] = Mem750[ds_bx + si:byte] + al
	Mem754[ds_bx + si:byte] = Mem752[ds_bx + si:byte] + al
	Mem756[ds_bx + si:byte] = Mem754[ds_bx + si:byte] + al
	Mem758[ds_bx + si:byte] = Mem756[ds_bx + si:byte] + al
	Mem760[ds_bx + si:byte] = Mem758[ds_bx + si:byte] + al
	Mem762[ds_bx + si:byte] = Mem760[ds_bx + si:byte] + al
	Mem764[ds_bx + si:byte] = Mem762[ds_bx + si:byte] + al
	Mem766[ds_bx + si:byte] = Mem764[ds_bx + si:byte] + al
	Mem768[ds_bx + si:byte] = Mem766[ds_bx + si:byte] + al
	Mem770[ds_bx + si:byte] = Mem768[ds_bx + si:byte] + al
	Mem772[ds_bx + si:byte] = Mem770[ds_bx + si:byte] + al
	Mem774[ds_bx + si:byte] = Mem772[ds_bx + si:byte] + al
	Mem776[ds_bx + si:byte] = Mem774[ds_bx + si:byte] + al
	Mem778[ds_bx + si:byte] = Mem776[ds_bx + si:byte] + al
	Mem780[ds_bx + si:byte] = Mem778[ds_bx + si:byte] + al
	Mem782[ds_bx + si:byte] = Mem780[ds_bx + si:byte] + al
	Mem784[ds_bx + si:byte] = Mem782[ds_bx + si:byte] + al
	Mem786[ds_bx + si:byte] = Mem784[ds_bx + si:byte] + al
	Mem788[ds_bx + si:byte] = Mem786[ds_bx + si:byte] + al
	Mem790[ds_bx + si:byte] = Mem788[ds_bx + si:byte] + al
	Mem792[ds_bx + si:byte] = Mem790[ds_bx + si:byte] + al
	Mem794[ds_bx + si:byte] = Mem792[ds_bx + si:byte] + al
	Mem796[ds_bx + si:byte] = Mem794[ds_bx + si:byte] + al
	Mem798[ds_bx + si:byte] = Mem796[ds_bx + si:byte] + al
	Mem800[ds_bx + si:byte] = Mem798[ds_bx + si:byte] + al
	Mem802[ds_bx + si:byte] = Mem800[ds_bx + si:byte] + al
	Mem804[ds_bx + si:byte] = Mem802[ds_bx + si:byte] + al
	Mem806[ds_bx + si:byte] = Mem804[ds_bx + si:byte] + al
	Mem808[ds_bx + si:byte] = Mem806[ds_bx + si:byte] + al
	Mem810[ds_bx + si:byte] = Mem808[ds_bx + si:byte] + al
	Mem812[ds_bx + si:byte] = Mem810[ds_bx + si:byte] + al
	Mem814[ds_bx + si:byte] = Mem812[ds_bx + si:byte] + al
	Mem816[ds_bx + si:byte] = Mem814[ds_bx + si:byte] + al
	Mem818[ds_bx + si:byte] = Mem816[ds_bx + si:byte] + al
	Mem820[ds_bx + si:byte] = Mem818[ds_bx + si:byte] + al
	Mem822[ds_bx + si:byte] = Mem820[ds_bx + si:byte] + al
	Mem824[ds_bx + si:byte] = Mem822[ds_bx + si:byte] + al
	Mem826[ds_bx + si:byte] = Mem824[ds_bx + si:byte] + al
	Mem828[ds_bx + si:byte] = Mem826[ds_bx + si:byte] + al
	Mem830[ds_bx + si:byte] = Mem828[ds_bx + si:byte] + al
	Mem832[ds_bx + si:byte] = Mem830[ds_bx + si:byte] + al
	Mem834[ds_bx + si:byte] = Mem832[ds_bx + si:byte] + al
	Mem836[ds_bx + si:byte] = Mem834[ds_bx + si:byte] + al
	Mem838[ds_bx + si:byte] = Mem836[ds_bx + si:byte] + al
	Mem840[ds_bx + si:byte] = Mem838[ds_bx + si:byte] + al
	Mem842[ds_bx + si:byte] = Mem840[ds_bx + si:byte] + al
	Mem844[ds_bx + si:byte] = Mem842[ds_bx + si:byte] + al
	Mem846[ds_bx + si:byte] = Mem844[ds_bx + si:byte] + al
	Mem848[ds_bx + si:byte] = Mem846[ds_bx + si:byte] + al
	Mem850[ds_bx + si:byte] = Mem848[ds_bx + si:byte] + al
	Mem852[ds_bx + si:byte] = Mem850[ds_bx + si:byte] + al
	Mem854[ds_bx + si:byte] = Mem852[ds_bx + si:byte] + al
	Mem856[ds_bx + si:byte] = Mem854[ds_bx + si:byte] + al
	Mem858[ds_bx + si:byte] = Mem856[ds_bx + si:byte] + al
	Mem860[ds_bx + si:byte] = Mem858[ds_bx + si:byte] + al
	Mem862[ds_bx + si:byte] = Mem860[ds_bx + si:byte] + al
	Mem864[ds_bx + si:byte] = Mem862[ds_bx + si:byte] + al
	Mem866[ds_bx + si:byte] = Mem864[ds_bx + si:byte] + al
	Mem868[ds_bx + si:byte] = Mem866[ds_bx + si:byte] + al
	Mem870[ds_bx + si:byte] = Mem868[ds_bx + si:byte] + al
	Mem872[ds_bx + si:byte] = Mem870[ds_bx + si:byte] + al
	Mem874[ds_bx + si:byte] = Mem872[ds_bx + si:byte] + al
	Mem876[ds_bx + si:byte] = Mem874[ds_bx + si:byte] + al
	Mem878[ds_bx + si:byte] = Mem876[ds_bx + si:byte] + al
	Mem880[ds_bx + si:byte] = Mem878[ds_bx + si:byte] + al
	Mem882[ds_bx + si:byte] = Mem880[ds_bx + si:byte] + al
	Mem884[ds_bx + si:byte] = Mem882[ds_bx + si:byte] + al
	Mem886[ds_bx + si:byte] = Mem884[ds_bx + si:byte] + al
	Mem888[ds_bx + si:byte] = Mem886[ds_bx + si:byte] + al
	Mem890[ds_bx + si:byte] = Mem888[ds_bx + si:byte] + al
	Mem892[ds_bx + si:byte] = Mem890[ds_bx + si:byte] + al
	Mem894[ds_bx + si:byte] = Mem892[ds_bx + si:byte] + al
	Mem896[ds_bx + si:byte] = Mem894[ds_bx + si:byte] + al
	Mem898[ds_bx + si:byte] = Mem896[ds_bx + si:byte] + al
	Mem900[ds_bx + si:byte] = Mem898[ds_bx + si:byte] + al
	Mem902[ds_bx + si:byte] = Mem900[ds_bx + si:byte] + al
	Mem904[ds_bx + si:byte] = Mem902[ds_bx + si:byte] + al
	Mem906[ds_bx + si:byte] = Mem904[ds_bx + si:byte] + al
	Mem908[ds_bx + si:byte] = Mem906[ds_bx + si:byte] + al
	Mem910[ds_bx + si:byte] = Mem908[ds_bx + si:byte] + al
	Mem912[ds_bx + si:byte] = Mem910[ds_bx + si:byte] + al
	Mem914[ds_bx + si:byte] = Mem912[ds_bx + si:byte] + al
	Mem916[ds_bx + si:byte] = Mem914[ds_bx + si:byte] + al
	Mem918[ds_bx + si:byte] = Mem916[ds_bx + si:byte] + al
	Mem920[ds_bx + si:byte] = Mem918[ds_bx + si:byte] + al
	Mem922[ds_bx + si:byte] = Mem920[ds_bx + si:byte] + al
	Mem924[ds_bx + si:byte] = Mem922[ds_bx + si:byte] + al
	Mem926[ds_bx + si:byte] = Mem924[ds_bx + si:byte] + al
	Mem928[ds_bx + si:byte] = Mem926[ds_bx + si:byte] + al
	Mem930[ds_bx + si:byte] = Mem928[ds_bx + si:byte] + al
	Mem932[ds_bx + si:byte] = Mem930[ds_bx + si:byte] + al
	Mem934[ds_bx + si:byte] = Mem932[ds_bx + si:byte] + al
	Mem936[ds_bx + si:byte] = Mem934[ds_bx + si:byte] + al
	Mem938[ds_bx + si:byte] = Mem936[ds_bx + si:byte] + al
	Mem940[ds_bx + si:byte] = Mem938[ds_bx + si:byte] + al
	Mem942[ds_bx + si:byte] = Mem940[ds_bx + si:byte] + al
	Mem944[ds_bx + si:byte] = Mem942[ds_bx + si:byte] + al
	Mem946[ds_bx + si:byte] = Mem944[ds_bx + si:byte] + al
	Mem948[ds_bx + si:byte] = Mem946[ds_bx + si:byte] + al
	Mem950[ds_bx + si:byte] = Mem948[ds_bx + si:byte] + al
	Mem952[ds_bx + si:byte] = Mem950[ds_bx + si:byte] + al
	Mem954[ds_bx + si:byte] = Mem952[ds_bx + si:byte] + al
	Mem956[ds_bx + si:byte] = Mem954[ds_bx + si:byte] + al
	Mem958[ds_bx + si:byte] = Mem956[ds_bx + si:byte] + al
	Mem960[ds_bx + si:byte] = Mem958[ds_bx + si:byte] + al
	Mem962[ds_bx + si:byte] = Mem960[ds_bx + si:byte] + al
	Mem964[ds_bx + si:byte] = Mem962[ds_bx + si:byte] + al
	Mem966[ds_bx + si:byte] = Mem964[ds_bx + si:byte] + al
	Mem968[ds_bx + si:byte] = Mem966[ds_bx + si:byte] + al
	Mem970[ds_bx + si:byte] = Mem968[ds_bx + si:byte] + al
	Mem972[ds_bx + si:byte] = Mem970[ds_bx + si:byte] + al
	Mem974[ds_bx + si:byte] = Mem972[ds_bx + si:byte] + al
	Mem976[ds_bx + si:byte] = Mem974[ds_bx + si:byte] + al
	Mem978[ds_bx + si:byte] = Mem976[ds_bx + si:byte] + al
	Mem980[ds_bx + si:byte] = Mem978[ds_bx + si:byte] + al
	Mem982[ds_bx + si:byte] = Mem980[ds_bx + si:byte] + al
	Mem984[ds_bx + si:byte] = Mem982[ds_bx + si:byte] + al
	Mem986[ds_bx + si:byte] = Mem984[ds_bx + si:byte] + al
	Mem988[ds_bx + si:byte] = Mem986[ds_bx + si:byte] + al
	Mem990[ds_bx + si:byte] = Mem988[ds_bx + si:byte] + al
	Mem992[ds_bx + si:byte] = Mem990[ds_bx + si:byte] + al
	Mem994[ds_bx + si:byte] = Mem992[ds_bx + si:byte] + al
	Mem996[ds_bx + si:byte] = Mem994[ds_bx + si:byte] + al
	Mem998[ds_bx + si:byte] = Mem996[ds_bx + si:byte] + al
	Mem1000[ds_bx + si:byte] = Mem998[ds_bx + si:byte] + al
	Mem1002[ds_bx + si:byte] = Mem1000[ds_bx + si:byte] + al
	Mem1004[ds_bx + si:byte] = Mem1002[ds_bx + si:byte] + al
	Mem1006[ds_bx + si:byte] = Mem1004[ds_bx + si:byte] + al
	Mem1008[ds_bx + si:byte] = Mem1006[ds_bx + si:byte] + al
	Mem1010[ds_bx + si:byte] = Mem1008[ds_bx + si:byte] + al
	Mem1012[ds_bx + si:byte] = Mem1010[ds_bx + si:byte] + al
	Mem1014[ds_bx + si:byte] = Mem1012[ds_bx + si:byte] + al
	Mem1016[ds_bx + si:byte] = Mem1014[ds_bx + si:byte] + al
	Mem1018[ds_bx + si:byte] = Mem1016[ds_bx + si:byte] + al
	Mem1020[ds_bx + si:byte] = Mem1018[ds_bx + si:byte] + al
	Mem1022[ds_bx + si:byte] = Mem1020[ds_bx + si:byte] + al
	Mem1024[ds_bx + si:byte] = Mem1022[ds_bx + si:byte] + al
	Mem1026[ds_bx + si:byte] = Mem1024[ds_bx + si:byte] + al
	Mem1028[ds_bx + si:byte] = Mem1026[ds_bx + si:byte] + al
	Mem1030[ds_bx + si:byte] = Mem1028[ds_bx + si:byte] + al
	Mem1032[ds_bx + si:byte] = Mem1030[ds_bx + si:byte] + al
	Mem1034[ds_bx + si:byte] = Mem1032[ds_bx + si:byte] + al
	Mem1036[ds_bx + si:byte] = Mem1034[ds_bx + si:byte] + al
	Mem1038[ds_bx + si:byte] = Mem1036[ds_bx + si:byte] + al
	Mem1040[ds_bx + si:byte] = Mem1038[ds_bx + si:byte] + al
	Mem1042[ds_bx + si:byte] = Mem1040[ds_bx + si:byte] + al
	Mem1044[ds_bx + si:byte] = Mem1042[ds_bx + si:byte] + al
	Mem1046[ds_bx + si:byte] = Mem1044[ds_bx + si:byte] + al
	Mem1048[ds_bx + si:byte] = Mem1046[ds_bx + si:byte] + al
	Mem1050[ds_bx + si:byte] = Mem1048[ds_bx + si:byte] + al
	Mem1052[ds_bx + si:byte] = Mem1050[ds_bx + si:byte] + al
	Mem1054[ds_bx + si:byte] = Mem1052[ds_bx + si:byte] + al
	Mem1056[ds_bx + si:byte] = Mem1054[ds_bx + si:byte] + al
	Mem1058[ds_bx + si:byte] = Mem1056[ds_bx + si:byte] + al
	Mem1060[ds_bx + si:byte] = Mem1058[ds_bx + si:byte] + al
	Mem1062[ds_bx + si:byte] = Mem1060[ds_bx + si:byte] + al
	Mem1064[ds_bx + si:byte] = Mem1062[ds_bx + si:byte] + al
	Mem1066[ds_bx + si:byte] = Mem1064[ds_bx + si:byte] + al
	Mem1068[ds_bx + si:byte] = Mem1066[ds_bx + si:byte] + al
	Mem1070[ds_bx + si:byte] = Mem1068[ds_bx + si:byte] + al
	Mem1072[ds_bx + si:byte] = Mem1070[ds_bx + si:byte] + al
	Mem1074[ds_bx + si:byte] = Mem1072[ds_bx + si:byte] + al
	Mem1076[ds_bx + si:byte] = Mem1074[ds_bx + si:byte] + al
	Mem1078[ds_bx + si:byte] = Mem1076[ds_bx + si:byte] + al
	Mem1080[ds_bx + si:byte] = Mem1078[ds_bx + si:byte] + al
	Mem1082[ds_bx + si:byte] = Mem1080[ds_bx + si:byte] + al
	Mem1084[ds_bx + si:byte] = Mem1082[ds_bx + si:byte] + al
	Mem1086[ds_bx + si:byte] = Mem1084[ds_bx + si:byte] + al
	Mem1088[ds_bx + si:byte] = Mem1086[ds_bx + si:byte] + al
	Mem1090[ds_bx + si:byte] = Mem1088[ds_bx + si:byte] + al
	Mem1092[ds_bx + si:byte] = Mem1090[ds_bx + si:byte] + al
	Mem1094[ds_bx + si:byte] = Mem1092[ds_bx + si:byte] + al
	Mem1096[ds_bx + si:byte] = Mem1094[ds_bx + si:byte] + al
	Mem1098[ds_bx + si:byte] = Mem1096[ds_bx + si:byte] + al
	Mem1100[ds_bx + si:byte] = Mem1098[ds_bx + si:byte] + al
	Mem1102[ds_bx + si:byte] = Mem1100[ds_bx + si:byte] + al
	Mem1104[ds_bx + si:byte] = Mem1102[ds_bx + si:byte] + al
	Mem1106[ds_bx + si:byte] = Mem1104[ds_bx + si:byte] + al
	Mem1108[ds_bx + si:byte] = Mem1106[ds_bx + si:byte] + al
	Mem1110[ds_bx + si:byte] = Mem1108[ds_bx + si:byte] + al
	Mem1112[ds_bx + si:byte] = Mem1110[ds_bx + si:byte] + al
	Mem1114[ds_bx + si:byte] = Mem1112[ds_bx + si:byte] + al
	Mem1116[ds_bx + si:byte] = Mem1114[ds_bx + si:byte] + al
	Mem1118[ds_bx + si:byte] = Mem1116[ds_bx + si:byte] + al
	Mem1120[ds_bx + si:byte] = Mem1118[ds_bx + si:byte] + al
	Mem1122[ds_bx + si:byte] = Mem1120[ds_bx + si:byte] + al
	Mem1124[ds_bx + si:byte] = Mem1122[ds_bx + si:byte] + al
	Mem1126[ds_bx + si:byte] = Mem1124[ds_bx + si:byte] + al
	Mem1128[ds_bx + si:byte] = Mem1126[ds_bx + si:byte] + al
	Mem1130[ds_bx + si:byte] = Mem1128[ds_bx + si:byte] + al
	Mem1132[ds_bx + si:byte] = Mem1130[ds_bx + si:byte] + al
	Mem1134[ds_bx + si:byte] = Mem1132[ds_bx + si:byte] + al
	Mem1136[ds_bx + si:byte] = Mem1134[ds_bx + si:byte] + al
	Mem1138[ds_bx + si:byte] = Mem1136[ds_bx + si:byte] + al
	Mem1140[ds_bx + si:byte] = Mem1138[ds_bx + si:byte] + al
	Mem1142[ds_bx + si:byte] = Mem1140[ds_bx + si:byte] + al
	Mem1144[ds_bx + si:byte] = Mem1142[ds_bx + si:byte] + al
	Mem1146[ds_bx + si:byte] = Mem1144[ds_bx + si:byte] + al
	Mem1148[ds_bx + si:byte] = Mem1146[ds_bx + si:byte] + al
	Mem1150[ds_bx + si:byte] = Mem1148[ds_bx + si:byte] + al
	Mem1152[ds_bx + si:byte] = Mem1150[ds_bx + si:byte] + al
	Mem1154[ds_bx + si:byte] = Mem1152[ds_bx + si:byte] + al
	Mem1156[ds_bx + si:byte] = Mem1154[ds_bx + si:byte] + al
	Mem1158[ds_bx + si:byte] = Mem1156[ds_bx + si:byte] + al
	Mem1160[ds_bx + si:byte] = Mem1158[ds_bx + si:byte] + al
	Mem1162[ds_bx + si:byte] = Mem1160[ds_bx + si:byte] + al
	Mem1164[ds_bx + si:byte] = Mem1162[ds_bx + si:byte] + al
	Mem1166[ds_bx + si:byte] = Mem1164[ds_bx + si:byte] + al
	Mem1168[ds_bx + si:byte] = Mem1166[ds_bx + si:byte] + al
	Mem1170[ds_bx + si:byte] = Mem1168[ds_bx + si:byte] + al
	Mem1172[ds_bx + si:byte] = Mem1170[ds_bx + si:byte] + al
	Mem1174[ds_bx + si:byte] = Mem1172[ds_bx + si:byte] + al
	Mem1176[ds_bx + si:byte] = Mem1174[ds_bx + si:byte] + al
	Mem1178[ds_bx + si:byte] = Mem1176[ds_bx + si:byte] + al
	Mem1180[ds_bx + si:byte] = Mem1178[ds_bx + si:byte] + al
	Mem1182[ds_bx + si:byte] = Mem1180[ds_bx + si:byte] + al
	Mem1184[ds_bx + si:byte] = Mem1182[ds_bx + si:byte] + al
	Mem1186[ds_bx + si:byte] = Mem1184[ds_bx + si:byte] + al
	Mem1188[ds_bx + si:byte] = Mem1186[ds_bx + si:byte] + al
	Mem1190[ds_bx + si:byte] = Mem1188[ds_bx + si:byte] + al
	Mem1192[ds_bx + si:byte] = Mem1190[ds_bx + si:byte] + al
	Mem1194[ds_bx + si:byte] = Mem1192[ds_bx + si:byte] + al
	Mem1196[ds_bx + si:byte] = Mem1194[ds_bx + si:byte] + al
	Mem1198[ds_bx + si:byte] = Mem1196[ds_bx + si:byte] + al
	Mem1200[ds_bx + si:byte] = Mem1198[ds_bx + si:byte] + al
	Mem1202[ds_bx + si:byte] = Mem1200[ds_bx + si:byte] + al
	Mem1204[ds_bx + si:byte] = Mem1202[ds_bx + si:byte] + al
	Mem1206[ds_bx + si:byte] = Mem1204[ds_bx + si:byte] + al
	Mem1208[ds_bx + si:byte] = Mem1206[ds_bx + si:byte] + al
	Mem1210[ds_bx + si:byte] = Mem1208[ds_bx + si:byte] + al
	Mem1212[ds_bx + si:byte] = Mem1210[ds_bx + si:byte] + al
	Mem1214[ds_bx + si:byte] = Mem1212[ds_bx + si:byte] + al
	Mem1216[ds_bx + si:byte] = Mem1214[ds_bx + si:byte] + al
	Mem1218[ds_bx + si:byte] = Mem1216[ds_bx + si:byte] + al
	Mem1220[ds_bx + si:byte] = Mem1218[ds_bx + si:byte] + al
	Mem1222[ds_bx + si:byte] = Mem1220[ds_bx + si:byte] + al
	Mem1224[ds_bx + si:byte] = Mem1222[ds_bx + si:byte] + al
	Mem1226[ds_bx + si:byte] = Mem1224[ds_bx + si:byte] + al
	Mem1228[ds_bx + si:byte] = Mem1226[ds_bx + si:byte] + al
	Mem1230[ds_bx + si:byte] = Mem1228[ds_bx + si:byte] + al
	Mem1232[ds_bx + si:byte] = Mem1230[ds_bx + si:byte] + al
	Mem1234[ds_bx + si:byte] = Mem1232[ds_bx + si:byte] + al
	Mem1236[ds_bx + si:byte] = Mem1234[ds_bx + si:byte] + al
	Mem1238[ds_bx + si:byte] = Mem1236[ds_bx + si:byte] + al
	Mem1240[ds_bx + si:byte] = Mem1238[ds_bx + si:byte] + al
	Mem1242[ds_bx + si:byte] = Mem1240[ds_bx + si:byte] + al
	Mem1244[ds_bx + si:byte] = Mem1242[ds_bx + si:byte] + al
	Mem1246[ds_bx + si:byte] = Mem1244[ds_bx + si:byte] + al
	Mem1248[ds_bx + si:byte] = Mem1246[ds_bx + si:byte] + al
	Mem1250[ds_bx + si:byte] = Mem1248[ds_bx + si:byte] + al
	Mem1252[ds_bx + si:byte] = Mem1250[ds_bx + si:byte] + al
	Mem1254[ds_bx + si:byte] = Mem1252[ds_bx + si:byte] + al
	Mem1256[ds_bx + si:byte] = Mem1254[ds_bx + si:byte] + al
	Mem1258[ds_bx + si:byte] = Mem1256[ds_bx + si:byte] + al
	Mem1260[ds_bx + si:byte] = Mem1258[ds_bx + si:byte] + al
	Mem1262[ds_bx + si:byte] = Mem1260[ds_bx + si:byte] + al
	Mem1264[ds_bx + si:byte] = Mem1262[ds_bx + si:byte] + al
	Mem1266[ds_bx + si:byte] = Mem1264[ds_bx + si:byte] + al
	Mem1268[ds_bx + si:byte] = Mem1266[ds_bx + si:byte] + al
	Mem1270[ds_bx + si:byte] = Mem1268[ds_bx + si:byte] + al
	Mem1272[ds_bx + si:byte] = Mem1270[ds_bx + si:byte] + al
	Mem1274[ds_bx + si:byte] = Mem1272[ds_bx + si:byte] + al
	Mem1276[ds_bx + si:byte] = Mem1274[ds_bx + si:byte] + al
	Mem1278[ds_bx + si:byte] = Mem1276[ds_bx + si:byte] + al
	Mem1280[ds_bx + si:byte] = Mem1278[ds_bx + si:byte] + al
	Mem1282[ds_bx + si:byte] = Mem1280[ds_bx + si:byte] + al
	Mem1284[ds_bx + si:byte] = Mem1282[ds_bx + si:byte] + al
	Mem1286[ds_bx + si:byte] = Mem1284[ds_bx + si:byte] + al
	Mem1288[ds_bx + si:byte] = Mem1286[ds_bx + si:byte] + al
	Mem1290[ds_bx + si:byte] = Mem1288[ds_bx + si:byte] + al
	Mem1292[ds_bx + si:byte] = Mem1290[ds_bx + si:byte] + al
	Mem1294[ds_bx + si:byte] = Mem1292[ds_bx + si:byte] + al
	Mem1296[ds_bx + si:byte] = Mem1294[ds_bx + si:byte] + al
	Mem1298[ds_bx + si:byte] = Mem1296[ds_bx + si:byte] + al
	Mem1300[ds_bx + si:byte] = Mem1298[ds_bx + si:byte] + al
	Mem1302[ds_bx + si:byte] = Mem1300[ds_bx + si:byte] + al
	Mem1304[ds_bx + si:byte] = Mem1302[ds_bx + si:byte] + al
	Mem1306[ds_bx + si:byte] = Mem1304[ds_bx + si:byte] + al
	Mem1308[ds_bx + si:byte] = Mem1306[ds_bx + si:byte] + al
	Mem1310[ds_bx + si:byte] = Mem1308[ds_bx + si:byte] + al
	Mem1312[ds_bx + si:byte] = Mem1310[ds_bx + si:byte] + al
	Mem1314[ds_bx + si:byte] = Mem1312[ds_bx + si:byte] + al
	Mem1316[ds_bx + si:byte] = Mem1314[ds_bx + si:byte] + al
	Mem1318[ds_bx + si:byte] = Mem1316[ds_bx + si:byte] + al
	Mem1320[ds_bx + si:byte] = Mem1318[ds_bx + si:byte] + al
	Mem1322[ds_bx + si:byte] = Mem1320[ds_bx + si:byte] + al
	Mem1324[ds_bx + si:byte] = Mem1322[ds_bx + si:byte] + al
	Mem1326[ds_bx + si:byte] = Mem1324[ds_bx + si:byte] + al
	Mem1328[ds_bx + si:byte] = Mem1326[ds_bx + si:byte] + al
	Mem1330[ds_bx + si:byte] = Mem1328[ds_bx + si:byte] + al
	Mem1332[ds_bx + si:byte] = Mem1330[ds_bx + si:byte] + al
	Mem1334[ds_bx + si:byte] = Mem1332[ds_bx + si:byte] + al
	Mem1336[ds_bx + si:byte] = Mem1334[ds_bx + si:byte] + al
	Mem1338[ds_bx + si:byte] = Mem1336[ds_bx + si:byte] + al
	Mem1340[ds_bx + si:byte] = Mem1338[ds_bx + si:byte] + al
	Mem1342[ds_bx + si:byte] = Mem1340[ds_bx + si:byte] + al
	Mem1344[ds_bx + si:byte] = Mem1342[ds_bx + si:byte] + al
	Mem1346[ds_bx + si:byte] = Mem1344[ds_bx + si:byte] + al
	Mem1348[ds_bx + si:byte] = Mem1346[ds_bx + si:byte] + al
	Mem1350[ds_bx + si:byte] = Mem1348[ds_bx + si:byte] + al
	Mem1352[ds_bx + si:byte] = Mem1350[ds_bx + si:byte] + al
	Mem1354[ds_bx + si:byte] = Mem1352[ds_bx + si:byte] + al
	Mem1356[ds_bx + si:byte] = Mem1354[ds_bx + si:byte] + al
	Mem1358[ds_bx + si:byte] = Mem1356[ds_bx + si:byte] + al
	Mem1360[ds_bx + si:byte] = Mem1358[ds_bx + si:byte] + al
	Mem1362[ds_bx + si:byte] = Mem1360[ds_bx + si:byte] + al
	Mem1364[ds_bx + si:byte] = Mem1362[ds_bx + si:byte] + al
	Mem1366[ds_bx + si:byte] = Mem1364[ds_bx + si:byte] + al
	Mem1368[ds_bx + si:byte] = Mem1366[ds_bx + si:byte] + al
	Mem1370[ds_bx + si:byte] = Mem1368[ds_bx + si:byte] + al
	Mem1372[ds_bx + si:byte] = Mem1370[ds_bx + si:byte] + al
	Mem1374[ds_bx + si:byte] = Mem1372[ds_bx + si:byte] + al
	Mem1376[ds_bx + si:byte] = Mem1374[ds_bx + si:byte] + al
	Mem1378[ds_bx + si:byte] = Mem1376[ds_bx + si:byte] + al
	Mem1380[ds_bx + si:byte] = Mem1378[ds_bx + si:byte] + al
	Mem1382[ds_bx + si:byte] = Mem1380[ds_bx + si:byte] + al
	Mem1384[ds_bx + si:byte] = Mem1382[ds_bx + si:byte] + al
	Mem1386[ds_bx + si:byte] = Mem1384[ds_bx + si:byte] + al
	Mem1388[ds_bx + si:byte] = Mem1386[ds_bx + si:byte] + al
	Mem1390[ds_bx + si:byte] = Mem1388[ds_bx + si:byte] + al
	Mem1392[ds_bx + si:byte] = Mem1390[ds_bx + si:byte] + al
	Mem1394[ds_bx + si:byte] = Mem1392[ds_bx + si:byte] + al
	Mem1396[ds_bx + si:byte] = Mem1394[ds_bx + si:byte] + al
	Mem1398[ds_bx + si:byte] = Mem1396[ds_bx + si:byte] + al
	Mem1400[ds_bx + si:byte] = Mem1398[ds_bx + si:byte] + al
	Mem1402[ds_bx + si:byte] = Mem1400[ds_bx + si:byte] + al
	Mem1404[ds_bx + si:byte] = Mem1402[ds_bx + si:byte] + al
	Mem1406[ds_bx + si:byte] = Mem1404[ds_bx + si:byte] + al
	Mem1408[ds_bx + si:byte] = Mem1406[ds_bx + si:byte] + al
	Mem1410[ds_bx + si:byte] = Mem1408[ds_bx + si:byte] + al
	Mem1412[ds_bx + si:byte] = Mem1410[ds_bx + si:byte] + al
	Mem1414[ds_bx + si:byte] = Mem1412[ds_bx + si:byte] + al
	Mem1416[ds_bx + si:byte] = Mem1414[ds_bx + si:byte] + al
	Mem1418[ds_bx + si:byte] = Mem1416[ds_bx + si:byte] + al
	Mem1420[ds_bx + si:byte] = Mem1418[ds_bx + si:byte] + al
	Mem1422[ds_bx + si:byte] = Mem1420[ds_bx + si:byte] + al
	Mem1424[ds_bx + si:byte] = Mem1422[ds_bx + si:byte] + al
	Mem1426[ds_bx + si:byte] = Mem1424[ds_bx + si:byte] + al
	Mem1428[ds_bx + si:byte] = Mem1426[ds_bx + si:byte] + al
	Mem1430[ds_bx + si:byte] = Mem1428[ds_bx + si:byte] + al
	Mem1432[ds_bx + si:byte] = Mem1430[ds_bx + si:byte] + al
	Mem1434[ds_bx + si:byte] = Mem1432[ds_bx + si:byte] + al
	Mem1436[ds_bx + si:byte] = Mem1434[ds_bx + si:byte] + al
	Mem1438[ds_bx + si:byte] = Mem1436[ds_bx + si:byte] + al
	Mem1440[ds_bx + si:byte] = Mem1438[ds_bx + si:byte] + al
	Mem1442[ds_bx + si:byte] = Mem1440[ds_bx + si:byte] + al
	Mem1444[ds_bx + si:byte] = Mem1442[ds_bx + si:byte] + al
	Mem1446[ds_bx + si:byte] = Mem1444[ds_bx + si:byte] + al
	Mem1448[ds_bx + si:byte] = Mem1446[ds_bx + si:byte] + al
	Mem1450[ds_bx + si:byte] = Mem1448[ds_bx + si:byte] + al
	Mem1452[ds_bx + si:byte] = Mem1450[ds_bx + si:byte] + al
	Mem1454[ds_bx + si:byte] = Mem1452[ds_bx + si:byte] + al
	Mem1456[ds_bx + si:byte] = Mem1454[ds_bx + si:byte] + al
	Mem1458[ds_bx + si:byte] = Mem1456[ds_bx + si:byte] + al
	Mem1460[ds_bx + si:byte] = Mem1458[ds_bx + si:byte] + al
	Mem1462[ds_bx + si:byte] = Mem1460[ds_bx + si:byte] + al
	Mem1464[ds_bx + si:byte] = Mem1462[ds_bx + si:byte] + al
	Mem1466[ds_bx + si:byte] = Mem1464[ds_bx + si:byte] + al
	Mem1468[ds_bx + si:byte] = Mem1466[ds_bx + si:byte] + al
	Mem1470[ds_bx + si:byte] = Mem1468[ds_bx + si:byte] + al
	Mem1472[ds_bx + si:byte] = Mem1470[ds_bx + si:byte] + al
	Mem1474[ds_bx + si:byte] = Mem1472[ds_bx + si:byte] + al
	Mem1476[ds_bx + si:byte] = Mem1474[ds_bx + si:byte] + al
	Mem1478[ds_bx + si:byte] = Mem1476[ds_bx + si:byte] + al
	Mem1480[ds_bx + si:byte] = Mem1478[ds_bx + si:byte] + al
	Mem1482[ds_bx + si:byte] = Mem1480[ds_bx + si:byte] + al
	Mem1484[ds_bx + si:byte] = Mem1482[ds_bx + si:byte] + al
	Mem1486[ds_bx + si:byte] = Mem1484[ds_bx + si:byte] + al
	Mem1488[ds_bx + si:byte] = Mem1486[ds_bx + si:byte] + al
	Mem1490[ds_bx + si:byte] = Mem1488[ds_bx + si:byte] + al
	Mem1492[ds_bx + si:byte] = Mem1490[ds_bx + si:byte] + al
	Mem1494[ds_bx + si:byte] = Mem1492[ds_bx + si:byte] + al
	Mem1496[ds_bx + si:byte] = Mem1494[ds_bx + si:byte] + al
	Mem1498[ds_bx + si:byte] = Mem1496[ds_bx + si:byte] + al
	Mem1500[ds_bx + si:byte] = Mem1498[ds_bx + si:byte] + al
	Mem1502[ds_bx + si:byte] = Mem1500[ds_bx + si:byte] + al
	Mem1504[ds_bx + si:byte] = Mem1502[ds_bx + si:byte] + al
	Mem1506[ds_bx + si:byte] = Mem1504[ds_bx + si:byte] + al
	Mem1508[ds_bx + si:byte] = Mem1506[ds_bx + si:byte] + al
	Mem1510[ds_bx + si:byte] = Mem1508[ds_bx + si:byte] + al
	Mem1512[ds_bx + si:byte] = Mem1510[ds_bx + si:byte] + al
	Mem1514[ds_bx + si:byte] = Mem1512[ds_bx + si:byte] + al
	Mem1516[ds_bx + si:byte] = Mem1514[ds_bx + si:byte] + al
	Mem1518[ds_bx + si:byte] = Mem1516[ds_bx + si:byte] + al
	Mem1520[ds_bx + si:byte] = Mem1518[ds_bx + si:byte] + al
	Mem1522[ds_bx + si:byte] = Mem1520[ds_bx + si:byte] + al
	Mem1524[ds_bx + si:byte] = Mem1522[ds_bx + si:byte] + al
	Mem1526[ds_bx + si:byte] = Mem1524[ds_bx + si:byte] + al
	Mem1528[ds_bx + si:byte] = Mem1526[ds_bx + si:byte] + al
	Mem1530[ds_bx + si:byte] = Mem1528[ds_bx + si:byte] + al
	Mem1532[ds_bx + si:byte] = Mem1530[ds_bx + si:byte] + al
	Mem1534[ds_bx + si:byte] = Mem1532[ds_bx + si:byte] + al
	Mem1536[ds_bx + si:byte] = Mem1534[ds_bx + si:byte] + al
	Mem1538[ds_bx + si:byte] = Mem1536[ds_bx + si:byte] + al
	Mem1540[ds_bx + si:byte] = Mem1538[ds_bx + si:byte] + al
	Mem1542[ds_bx + si:byte] = Mem1540[ds_bx + si:byte] + al
	Mem1544[ds_bx + si:byte] = Mem1542[ds_bx + si:byte] + al
	Mem1546[ds_bx + si:byte] = Mem1544[ds_bx + si:byte] + al
	Mem1548[ds_bx + si:byte] = Mem1546[ds_bx + si:byte] + al
	Mem1550[ds_bx + si:byte] = Mem1548[ds_bx + si:byte] + al
	Mem1552[ds_bx + si:byte] = Mem1550[ds_bx + si:byte] + al
	Mem1554[ds_bx + si:byte] = Mem1552[ds_bx + si:byte] + al
	Mem1556[ds_bx + si:byte] = Mem1554[ds_bx + si:byte] + al
	Mem1558[ds_bx + si:byte] = Mem1556[ds_bx + si:byte] + al
	Mem1560[ds_bx + si:byte] = Mem1558[ds_bx + si:byte] + al
	Mem1562[ds_bx + si:byte] = Mem1560[ds_bx + si:byte] + al
	Mem1564[ds_bx + si:byte] = Mem1562[ds_bx + si:byte] + al
	Mem1566[ds_bx + si:byte] = Mem1564[ds_bx + si:byte] + al
	Mem1568[ds_bx + si:byte] = Mem1566[ds_bx + si:byte] + al
	Mem1570[ds_bx + si:byte] = Mem1568[ds_bx + si:byte] + al
	Mem1572[ds_bx + si:byte] = Mem1570[ds_bx + si:byte] + al
	Mem1574[ds_bx + si:byte] = Mem1572[ds_bx + si:byte] + al
	Mem1576[ds_bx + si:byte] = Mem1574[ds_bx + si:byte] + al
	Mem1578[ds_bx + si:byte] = Mem1576[ds_bx + si:byte] + al
	Mem1580[ds_bx + si:byte] = Mem1578[ds_bx + si:byte] + al
	Mem1582[ds_bx + si:byte] = Mem1580[ds_bx + si:byte] + al
	Mem1584[ds_bx + si:byte] = Mem1582[ds_bx + si:byte] + al
	Mem1586[ds_bx + si:byte] = Mem1584[ds_bx + si:byte] + al
	Mem1588[ds_bx + si:byte] = Mem1586[ds_bx + si:byte] + al
	Mem1590[ds_bx + si:byte] = Mem1588[ds_bx + si:byte] + al
	Mem1592[ds_bx + si:byte] = Mem1590[ds_bx + si:byte] + al
	Mem1594[ds_bx + si:byte] = Mem1592[ds_bx + si:byte] + al
	Mem1596[ds_bx + si:byte] = Mem1594[ds_bx + si:byte] + al
	Mem1598[ds_bx + si:byte] = Mem1596[ds_bx + si:byte] + al
	Mem1600[ds_bx + si:byte] = Mem1598[ds_bx + si:byte] + al
	Mem1602[ds_bx + si:byte] = Mem1600[ds_bx + si:byte] + al
	Mem1604[ds_bx + si:byte] = Mem1602[ds_bx + si:byte] + al
	Mem1606[ds_bx + si:byte] = Mem1604[ds_bx + si:byte] + al
	Mem1608[ds_bx + si:byte] = Mem1606[ds_bx + si:byte] + al
	Mem1610[ds_bx + si:byte] = Mem1608[ds_bx + si:byte] + al
	Mem1612[ds_bx + si:byte] = Mem1610[ds_bx + si:byte] + al
	Mem1614[ds_bx + si:byte] = Mem1612[ds_bx + si:byte] + al
	Mem1616[ds_bx + si:byte] = Mem1614[ds_bx + si:byte] + al
	Mem1618[ds_bx + si:byte] = Mem1616[ds_bx + si:byte] + al
	Mem1620[ds_bx + si:byte] = Mem1618[ds_bx + si:byte] + al
	Mem1622[ds_bx + si:byte] = Mem1620[ds_bx + si:byte] + al
	Mem1624[ds_bx + si:byte] = Mem1622[ds_bx + si:byte] + al
	Mem1626[ds_bx + si:byte] = Mem1624[ds_bx + si:byte] + al
	Mem1628[ds_bx + si:byte] = Mem1626[ds_bx + si:byte] + al
	Mem1630[ds_bx + si:byte] = Mem1628[ds_bx + si:byte] + al
	Mem1632[ds_bx + si:byte] = Mem1630[ds_bx + si:byte] + al
	Mem1634[ds_bx + si:byte] = Mem1632[ds_bx + si:byte] + al
	Mem1636[ds_bx + si:byte] = Mem1634[ds_bx + si:byte] + al
	Mem1638[ds_bx + si:byte] = Mem1636[ds_bx + si:byte] + al
	Mem1640[ds_bx + si:byte] = Mem1638[ds_bx + si:byte] + al
	Mem1642[ds_bx + si:byte] = Mem1640[ds_bx + si:byte] + al
	Mem1644[ds_bx + si:byte] = Mem1642[ds_bx + si:byte] + al
	Mem1646[ds_bx + si:byte] = Mem1644[ds_bx + si:byte] + al
	Mem1648[ds_bx + si:byte] = Mem1646[ds_bx + si:byte] + al
	Mem1650[ds_bx + si:byte] = Mem1648[ds_bx + si:byte] + al
	Mem1652[ds_bx + si:byte] = Mem1650[ds_bx + si:byte] + al
	Mem1654[ds_bx + si:byte] = Mem1652[ds_bx + si:byte] + al
	Mem1656[ds_bx + si:byte] = Mem1654[ds_bx + si:byte] + al
	Mem1658[ds_bx + si:byte] = Mem1656[ds_bx + si:byte] + al
	Mem1660[ds_bx + si:byte] = Mem1658[ds_bx + si:byte] + al
	Mem1662[ds_bx + si:byte] = Mem1660[ds_bx + si:byte] + al
	Mem1664[ds_bx + si:byte] = Mem1662[ds_bx + si:byte] + al
	Mem1666[ds_bx + si:byte] = Mem1664[ds_bx + si:byte] + al
	Mem1668[ds_bx + si:byte] = Mem1666[ds_bx + si:byte] + al
	Mem1670[ds_bx + si:byte] = Mem1668[ds_bx + si:byte] + al
	Mem1672[ds_bx + si:byte] = Mem1670[ds_bx + si:byte] + al
	Mem1674[ds_bx + si:byte] = Mem1672[ds_bx + si:byte] + al
	Mem1676[ds_bx + si:byte] = Mem1674[ds_bx + si:byte] + al
	Mem1678[ds_bx + si:byte] = Mem1676[ds_bx + si:byte] + al
	Mem1680[ds_bx + si:byte] = Mem1678[ds_bx + si:byte] + al
	Mem1682[ds_bx + si:byte] = Mem1680[ds_bx + si:byte] + al
	Mem1684[ds_bx + si:byte] = Mem1682[ds_bx + si:byte] + al
	Mem1686[ds_bx + si:byte] = Mem1684[ds_bx + si:byte] + al
	Mem1688[ds_bx + si:byte] = Mem1686[ds_bx + si:byte] + al
	Mem1690[ds_bx + si:byte] = Mem1688[ds_bx + si:byte] + al
	Mem1692[ds_bx + si:byte] = Mem1690[ds_bx + si:byte] + al
	Mem1694[ds_bx + si:byte] = Mem1692[ds_bx + si:byte] + al
	Mem1696[ds_bx + si:byte] = Mem1694[ds_bx + si:byte] + al
	Mem1698[ds_bx + si:byte] = Mem1696[ds_bx + si:byte] + al
	Mem1700[ds_bx + si:byte] = Mem1698[ds_bx + si:byte] + al
	Mem1702[ds_bx + si:byte] = Mem1700[ds_bx + si:byte] + al
	Mem1704[ds_bx + si:byte] = Mem1702[ds_bx + si:byte] + al
	Mem1706[ds_bx + si:byte] = Mem1704[ds_bx + si:byte] + al
	Mem1708[ds_bx + si:byte] = Mem1706[ds_bx + si:byte] + al
	Mem1710[ds_bx + si:byte] = Mem1708[ds_bx + si:byte] + al
	Mem1712[ds_bx + si:byte] = Mem1710[ds_bx + si:byte] + al
	Mem1714[ds_bx + si:byte] = Mem1712[ds_bx + si:byte] + al
	Mem1716[ds_bx + si:byte] = Mem1714[ds_bx + si:byte] + al
	Mem1718[ds_bx + si:byte] = Mem1716[ds_bx + si:byte] + al
	Mem1720[ds_bx + si:byte] = Mem1718[ds_bx + si:byte] + al
	Mem1722[ds_bx + si:byte] = Mem1720[ds_bx + si:byte] + al
	Mem1724[ds_bx + si:byte] = Mem1722[ds_bx + si:byte] + al
	Mem1726[ds_bx + si:byte] = Mem1724[ds_bx + si:byte] + al
	Mem1728[ds_bx + si:byte] = Mem1726[ds_bx + si:byte] + al
	Mem1730[ds_bx + si:byte] = Mem1728[ds_bx + si:byte] + al
	Mem1732[ds_bx + si:byte] = Mem1730[ds_bx + si:byte] + al
	Mem1734[ds_bx + si:byte] = Mem1732[ds_bx + si:byte] + al
	Mem1736[ds_bx + si:byte] = Mem1734[ds_bx + si:byte] + al
	Mem1738[ds_bx + si:byte] = Mem1736[ds_bx + si:byte] + al
	Mem1740[ds_bx + si:byte] = Mem1738[ds_bx + si:byte] + al
	Mem1742[ds_bx + si:byte] = Mem1740[ds_bx + si:byte] + al
	Mem1744[ds_bx + si:byte] = Mem1742[ds_bx + si:byte] + al
	Mem1746[ds_bx + si:byte] = Mem1744[ds_bx + si:byte] + al
	Mem1748[ds_bx + si:byte] = Mem1746[ds_bx + si:byte] + al
	Mem1750[ds_bx + si:byte] = Mem1748[ds_bx + si:byte] + al
	Mem1752[ds_bx + si:byte] = Mem1750[ds_bx + si:byte] + al
	Mem1754[ds_bx + si:byte] = Mem1752[ds_bx + si:byte] + al
	Mem1756[ds_bx + si:byte] = Mem1754[ds_bx + si:byte] + al
	Mem1758[ds_bx + si:byte] = Mem1756[ds_bx + si:byte] + al
	Mem1760[ds_bx + si:byte] = Mem1758[ds_bx + si:byte] + al
	Mem1762[ds_bx + si:byte] = Mem1760[ds_bx + si:byte] + al
	Mem1764[ds_bx + si:byte] = Mem1762[ds_bx + si:byte] + al
	Mem1766[ds_bx + si:byte] = Mem1764[ds_bx + si:byte] + al
	Mem1768[ds_bx + si:byte] = Mem1766[ds_bx + si:byte] + al
	Mem1770[ds_bx + si:byte] = Mem1768[ds_bx + si:byte] + al
	Mem1772[ds_bx + si:byte] = Mem1770[ds_bx + si:byte] + al
	Mem1774[ds_bx + si:byte] = Mem1772[ds_bx + si:byte] + al
	Mem1776[ds_bx + si:byte] = Mem1774[ds_bx + si:byte] + al
	Mem1778[ds_bx + si:byte] = Mem1776[ds_bx + si:byte] + al
	Mem1780[ds_bx + si:byte] = Mem1778[ds_bx + si:byte] + al
	Mem1782[ds_bx + si:byte] = Mem1780[ds_bx + si:byte] + al
	Mem1784[ds_bx + si:byte] = Mem1782[ds_bx + si:byte] + al
	Mem1786[ds_bx + si:byte] = Mem1784[ds_bx + si:byte] + al
	Mem1788[ds_bx + si:byte] = Mem1786[ds_bx + si:byte] + al
	Mem1790[ds_bx + si:byte] = Mem1788[ds_bx + si:byte] + al
	Mem1792[ds_bx + si:byte] = Mem1790[ds_bx + si:byte] + al
	Mem1794[ds_bx + si:byte] = Mem1792[ds_bx + si:byte] + al
	Mem1796[ds_bx + si:byte] = Mem1794[ds_bx + si:byte] + al
	Mem1798[ds_bx + si:byte] = Mem1796[ds_bx + si:byte] + al
	Mem1800[ds_bx + si:byte] = Mem1798[ds_bx + si:byte] + al
	Mem1802[ds_bx + si:byte] = Mem1800[ds_bx + si:byte] + al
	Mem1804[ds_bx + si:byte] = Mem1802[ds_bx + si:byte] + al
	Mem1806[ds_bx + si:byte] = Mem1804[ds_bx + si:byte] + al
	Mem1808[ds_bx + si:byte] = Mem1806[ds_bx + si:byte] + al
	Mem1810[ds_bx + si:byte] = Mem1808[ds_bx + si:byte] + al
	Mem1812[ds_bx + si:byte] = Mem1810[ds_bx + si:byte] + al
	Mem1814[ds_bx + si:byte] = Mem1812[ds_bx + si:byte] + al
	Mem1816[ds_bx + si:byte] = Mem1814[ds_bx + si:byte] + al
	Mem1818[ds_bx + si:byte] = Mem1816[ds_bx + si:byte] + al
	Mem1820[ds_bx + si:byte] = Mem1818[ds_bx + si:byte] + al
	Mem1822[ds_bx + si:byte] = Mem1820[ds_bx + si:byte] + al
	Mem1824[ds_bx + si:byte] = Mem1822[ds_bx + si:byte] + al
	Mem1826[ds_bx + si:byte] = Mem1824[ds_bx + si:byte] + al
	Mem1828[ds_bx + si:byte] = Mem1826[ds_bx + si:byte] + al
	Mem1830[ds_bx + si:byte] = Mem1828[ds_bx + si:byte] + al
	Mem1832[ds_bx + si:byte] = Mem1830[ds_bx + si:byte] + al
	Mem1834[ds_bx + si:byte] = Mem1832[ds_bx + si:byte] + al
	Mem1836[ds_bx + si:byte] = Mem1834[ds_bx + si:byte] + al
	Mem1838[ds_bx + si:byte] = Mem1836[ds_bx + si:byte] + al
	Mem1840[ds_bx + si:byte] = Mem1838[ds_bx + si:byte] + al
	Mem1842[ds_bx + si:byte] = Mem1840[ds_bx + si:byte] + al
	Mem1844[ds_bx + si:byte] = Mem1842[ds_bx + si:byte] + al
	Mem1846[ds_bx + si:byte] = Mem1844[ds_bx + si:byte] + al
	Mem1848[ds_bx + si:byte] = Mem1846[ds_bx + si:byte] + al
	Mem1850[ds_bx + si:byte] = Mem1848[ds_bx + si:byte] + al
	Mem1852[ds_bx + si:byte] = Mem1850[ds_bx + si:byte] + al
	Mem1854[ds_bx + si:byte] = Mem1852[ds_bx + si:byte] + al
	Mem1856[ds_bx + si:byte] = Mem1854[ds_bx + si:byte] + al
	Mem1858[ds_bx + si:byte] = Mem1856[ds_bx + si:byte] + al
	Mem1860[ds_bx + si:byte] = Mem1858[ds_bx + si:byte] + al
	Mem1862[ds_bx + si:byte] = Mem1860[ds_bx + si:byte] + al
	Mem1864[ds_bx + si:byte] = Mem1862[ds_bx + si:byte] + al
	Mem1866[ds_bx + si:byte] = Mem1864[ds_bx + si:byte] + al
	Mem1868[ds_bx + si:byte] = Mem1866[ds_bx + si:byte] + al
	Mem1870[ds_bx + si:byte] = Mem1868[ds_bx + si:byte] + al
	Mem1872[ds_bx + si:byte] = Mem1870[ds_bx + si:byte] + al
	Mem1874[ds_bx + si:byte] = Mem1872[ds_bx + si:byte] + al
	Mem1876[ds_bx + si:byte] = Mem1874[ds_bx + si:byte] + al
	Mem1878[ds_bx + si:byte] = Mem1876[ds_bx + si:byte] + al
	Mem1880[ds_bx + si:byte] = Mem1878[ds_bx + si:byte] + al
	Mem1882[ds_bx + si:byte] = Mem1880[ds_bx + si:byte] + al
	Mem1884[ds_bx + si:byte] = Mem1882[ds_bx + si:byte] + al
	Mem1886[ds_bx + si:byte] = Mem1884[ds_bx + si:byte] + al
	Mem1888[ds_bx + si:byte] = Mem1886[ds_bx + si:byte] + al
	Mem1890[ds_bx + si:byte] = Mem1888[ds_bx + si:byte] + al
	Mem1892[ds_bx + si:byte] = Mem1890[ds_bx + si:byte] + al
	Mem1894[ds_bx + si:byte] = Mem1892[ds_bx + si:byte] + al
	Mem1896[ds_bx + si:byte] = Mem1894[ds_bx + si:byte] + al
	Mem1898[ds_bx + si:byte] = Mem1896[ds_bx + si:byte] + al
	Mem1900[ds_bx + si:byte] = Mem1898[ds_bx + si:byte] + al
	Mem1902[ds_bx + si:byte] = Mem1900[ds_bx + si:byte] + al
	Mem1904[ds_bx + si:byte] = Mem1902[ds_bx + si:byte] + al
	Mem1906[ds_bx + si:byte] = Mem1904[ds_bx + si:byte] + al
	Mem1908[ds_bx + si:byte] = Mem1906[ds_bx + si:byte] + al
	Mem1910[ds_bx + si:byte] = Mem1908[ds_bx + si:byte] + al
	Mem1912[ds_bx + si:byte] = Mem1910[ds_bx + si:byte] + al
	Mem1914[ds_bx + si:byte] = Mem1912[ds_bx + si:byte] + al
	Mem1916[ds_bx + si:byte] = Mem1914[ds_bx + si:byte] + al
	Mem1918[ds_bx + si:byte] = Mem1916[ds_bx + si:byte] + al
	Mem1920[ds_bx + si:byte] = Mem1918[ds_bx + si:byte] + al
	Mem1922[ds_bx + si:byte] = Mem1920[ds_bx + si:byte] + al
	Mem1924[ds_bx + si:byte] = Mem1922[ds_bx + si:byte] + al
	Mem1926[ds_bx + si:byte] = Mem1924[ds_bx + si:byte] + al
	Mem1928[ds_bx + si:byte] = Mem1926[ds_bx + si:byte] + al
	Mem1930[ds_bx + si:byte] = Mem1928[ds_bx + si:byte] + al
	Mem1932[ds_bx + si:byte] = Mem1930[ds_bx + si:byte] + al
	Mem1934[ds_bx + si:byte] = Mem1932[ds_bx + si:byte] + al
	Mem1936[ds_bx + si:byte] = Mem1934[ds_bx + si:byte] + al
	Mem1938[ds_bx + si:byte] = Mem1936[ds_bx + si:byte] + al
	Mem1940[ds_bx + si:byte] = Mem1938[ds_bx + si:byte] + al
	Mem1942[ds_bx + si:byte] = Mem1940[ds_bx + si:byte] + al
	Mem1944[ds_bx + si:byte] = Mem1942[ds_bx + si:byte] + al
	Mem1946[ds_bx + si:byte] = Mem1944[ds_bx + si:byte] + al
	Mem1948[ds_bx + si:byte] = Mem1946[ds_bx + si:byte] + al
	Mem1950[ds_bx + si:byte] = Mem1948[ds_bx + si:byte] + al
	Mem1952[ds_bx + si:byte] = Mem1950[ds_bx + si:byte] + al
	Mem1954[ds_bx + si:byte] = Mem1952[ds_bx + si:byte] + al
	Mem1956[ds_bx + si:byte] = Mem1954[ds_bx + si:byte] + al
	Mem1958[ds_bx + si:byte] = Mem1956[ds_bx + si:byte] + al
	Mem1960[ds_bx + si:byte] = Mem1958[ds_bx + si:byte] + al
	Mem1962[ds_bx + si:byte] = Mem1960[ds_bx + si:byte] + al
	Mem1964[ds_bx + si:byte] = Mem1962[ds_bx + si:byte] + al
	Mem1966[ds_bx + si:byte] = Mem1964[ds_bx + si:byte] + al
	Mem1968[ds_bx + si:byte] = Mem1966[ds_bx + si:byte] + al
	Mem1970[ds_bx + si:byte] = Mem1968[ds_bx + si:byte] + al
	Mem1972[ds_bx + si:byte] = Mem1970[ds_bx + si:byte] + al
	Mem1974[ds_bx + si:byte] = Mem1972[ds_bx + si:byte] + al
	Mem1976[ds_bx + si:byte] = Mem1974[ds_bx + si:byte] + al
	Mem1978[ds_bx + si:byte] = Mem1976[ds_bx + si:byte] + al
	Mem1980[ds_bx + si:byte] = Mem1978[ds_bx + si:byte] + al
	Mem1982[ds_bx + si:byte] = Mem1980[ds_bx + si:byte] + al
	Mem1984[ds_bx + si:byte] = Mem1982[ds_bx + si:byte] + al
	Mem1986[ds_bx + si:byte] = Mem1984[ds_bx + si:byte] + al
	Mem1988[ds_bx + si:byte] = Mem1986[ds_bx + si:byte] + al
	Mem1990[ds_bx + si:byte] = Mem1988[ds_bx + si:byte] + al
	Mem1992[ds_bx + si:byte] = Mem1990[ds_bx + si:byte] + al
	Mem1994[ds_bx + si:byte] = Mem1992[ds_bx + si:byte] + al
	Mem1996[ds_bx + si:byte] = Mem1994[ds_bx + si:byte] + al
	Mem1998[ds_bx + si:byte] = Mem1996[ds_bx + si:byte] + al
	Mem2000[ds_bx + si:byte] = Mem1998[ds_bx + si:byte] + al
	Mem2002[ds_bx + si:byte] = Mem2000[ds_bx + si:byte] + al
	Mem2004[ds_bx + si:byte] = Mem2002[ds_bx + si:byte] + al
	Mem2006[ds_bx + si:byte] = Mem2004[ds_bx + si:byte] + al
	Mem2008[ds_bx + si:byte] = Mem2006[ds_bx + si:byte] + al
	Mem2010[ds_bx + si:byte] = Mem2008[ds_bx + si:byte] + al
	Mem2012[ds_bx + si:byte] = Mem2010[ds_bx + si:byte] + al
	Mem2014[ds_bx + si:byte] = Mem2012[ds_bx + si:byte] + al
	Mem2016[ds_bx + si:byte] = Mem2014[ds_bx + si:byte] + al
	Mem2018[ds_bx + si:byte] = Mem2016[ds_bx + si:byte] + al
	Mem2020[ds_bx + si:byte] = Mem2018[ds_bx + si:byte] + al
	Mem2022[ds_bx + si:byte] = Mem2020[ds_bx + si:byte] + al
	Mem2024[ds_bx + si:byte] = Mem2022[ds_bx + si:byte] + al
	Mem2026[ds_bx + si:byte] = Mem2024[ds_bx + si:byte] + al
	Mem2028[ds_bx + si:byte] = Mem2026[ds_bx + si:byte] + al
	Mem2030[ds_bx + si:byte] = Mem2028[ds_bx + si:byte] + al
	Mem2032[ds_bx + si:byte] = Mem2030[ds_bx + si:byte] + al
	Mem2034[ds_bx + si:byte] = Mem2032[ds_bx + si:byte] + al
	Mem2036[ds_bx + si:byte] = Mem2034[ds_bx + si:byte] + al
	Mem2038[ds_bx + si:byte] = Mem2036[ds_bx + si:byte] + al
	Mem2040[ds_bx + si:byte] = Mem2038[ds_bx + si:byte] + al
	Mem2042[ds_bx + si:byte] = Mem2040[ds_bx + si:byte] + al
	Mem2044[ds_bx + si:byte] = Mem2042[ds_bx + si:byte] + al
	Mem2046[ds_bx + si:byte] = Mem2044[ds_bx + si:byte] + al
	Mem2048[ds_bx + si:byte] = Mem2046[ds_bx + si:byte] + al
	Mem2050[ds_bx + si:byte] = Mem2048[ds_bx + si:byte] + al
	Mem2052[ds_bx + si:byte] = Mem2050[ds_bx + si:byte] + al
	Mem2054[ds_bx + si:byte] = Mem2052[ds_bx + si:byte] + al
	Mem2056[ds_bx + si:byte] = Mem2054[ds_bx + si:byte] + al
	Mem2058[ds_bx + si:byte] = Mem2056[ds_bx + si:byte] + al
	Mem2060[ds_bx + si:byte] = Mem2058[ds_bx + si:byte] + al
	Mem2062[ds_bx + si:byte] = Mem2060[ds_bx + si:byte] + al
	Mem2064[ds_bx + si:byte] = Mem2062[ds_bx + si:byte] + al
	Mem2066[ds_bx + si:byte] = Mem2064[ds_bx + si:byte] + al
	Mem2068[ds_bx + si:byte] = Mem2066[ds_bx + si:byte] + al
	Mem2070[ds_bx + si:byte] = Mem2068[ds_bx + si:byte] + al
	Mem2072[ds_bx + si:byte] = Mem2070[ds_bx + si:byte] + al
	Mem2074[ds_bx + si:byte] = Mem2072[ds_bx + si:byte] + al
	Mem2076[ds_bx + si:byte] = Mem2074[ds_bx + si:byte] + al
	Mem2078[ds_bx + si:byte] = Mem2076[ds_bx + si:byte] + al
	Mem2080[ds_bx + si:byte] = Mem2078[ds_bx + si:byte] + al
	Mem2082[ds_bx + si:byte] = Mem2080[ds_bx + si:byte] + al
	Mem2084[ds_bx + si:byte] = Mem2082[ds_bx + si:byte] + al
	Mem2086[ds_bx + si:byte] = Mem2084[ds_bx + si:byte] + al
	Mem2088[ds_bx + si:byte] = Mem2086[ds_bx + si:byte] + al
	Mem2090[ds_bx + si:byte] = Mem2088[ds_bx + si:byte] + al
	Mem2092[ds_bx + si:byte] = Mem2090[ds_bx + si:byte] + al
	Mem2094[ds_bx + si:byte] = Mem2092[ds_bx + si:byte] + al
	Mem2096[ds_bx + si:byte] = Mem2094[ds_bx + si:byte] + al
	Mem2098[ds_bx + si:byte] = Mem2096[ds_bx + si:byte] + al
	Mem2100[ds_bx + si:byte] = Mem2098[ds_bx + si:byte] + al
	Mem2102[ds_bx + si:byte] = Mem2100[ds_bx + si:byte] + al
	Mem2104[ds_bx + si:byte] = Mem2102[ds_bx + si:byte] + al
	Mem2106[ds_bx + si:byte] = Mem2104[ds_bx + si:byte] + al
	Mem2108[ds_bx + si:byte] = Mem2106[ds_bx + si:byte] + al
	Mem2110[ds_bx + si:byte] = Mem2108[ds_bx + si:byte] + al
	Mem2112[ds_bx + si:byte] = Mem2110[ds_bx + si:byte] + al
	Mem2114[ds_bx + si:byte] = Mem2112[ds_bx + si:byte] + al
	Mem2116[ds_bx + si:byte] = Mem2114[ds_bx + si:byte] + al
	Mem2118[ds_bx + si:byte] = Mem2116[ds_bx + si:byte] + al
	Mem2120[ds_bx + si:byte] = Mem2118[ds_bx + si:byte] + al
	Mem2122[ds_bx + si:byte] = Mem2120[ds_bx + si:byte] + al
	Mem2124[ds_bx + si:byte] = Mem2122[ds_bx + si:byte] + al
	Mem2126[ds_bx + si:byte] = Mem2124[ds_bx + si:byte] + al
	Mem2128[ds_bx + si:byte] = Mem2126[ds_bx + si:byte] + al
	Mem2130[ds_bx + si:byte] = Mem2128[ds_bx + si:byte] + al
	Mem2132[ds_bx + si:byte] = Mem2130[ds_bx + si:byte] + al
	Mem2134[ds_bx + si:byte] = Mem2132[ds_bx + si:byte] + al
	Mem2136[ds_bx + si:byte] = Mem2134[ds_bx + si:byte] + al
	Mem2138[ds_bx + si:byte] = Mem2136[ds_bx + si:byte] + al
	Mem2140[ds_bx + si:byte] = Mem2138[ds_bx + si:byte] + al
	Mem2142[ds_bx + si:byte] = Mem2140[ds_bx + si:byte] + al
	Mem2144[ds_bx + si:byte] = Mem2142[ds_bx + si:byte] + al
	Mem2146[ds_bx + si:byte] = Mem2144[ds_bx + si:byte] + al
	Mem2148[ds_bx + si:byte] = Mem2146[ds_bx + si:byte] + al
	Mem2150[ds_bx + si:byte] = Mem2148[ds_bx + si:byte] + al
	Mem2152[ds_bx + si:byte] = Mem2150[ds_bx + si:byte] + al
	Mem2154[ds_bx + si:byte] = Mem2152[ds_bx + si:byte] + al
	Mem2156[ds_bx + si:byte] = Mem2154[ds_bx + si:byte] + al
	Mem2158[ds_bx + si:byte] = Mem2156[ds_bx + si:byte] + al
	Mem2160[ds_bx + si:byte] = Mem2158[ds_bx + si:byte] + al
	Mem2162[ds_bx + si:byte] = Mem2160[ds_bx + si:byte] + al
	Mem2164[ds_bx + si:byte] = Mem2162[ds_bx + si:byte] + al
	Mem2166[ds_bx + si:byte] = Mem2164[ds_bx + si:byte] + al
	Mem2168[ds_bx + si:byte] = Mem2166[ds_bx + si:byte] + al
	Mem2170[ds_bx + si:byte] = Mem2168[ds_bx + si:byte] + al
	Mem2172[ds_bx + si:byte] = Mem2170[ds_bx + si:byte] + al
	Mem2174[ds_bx + si:byte] = Mem2172[ds_bx + si:byte] + al
	Mem2176[ds_bx + si:byte] = Mem2174[ds_bx + si:byte] + al
	Mem2178[ds_bx + si:byte] = Mem2176[ds_bx + si:byte] + al
	Mem2180[ds_bx + si:byte] = Mem2178[ds_bx + si:byte] + al
	Mem2182[ds_bx + si:byte] = Mem2180[ds_bx + si:byte] + al
	Mem2184[ds_bx + si:byte] = Mem2182[ds_bx + si:byte] + al
	Mem2186[ds_bx + si:byte] = Mem2184[ds_bx + si:byte] + al
	Mem2188[ds_bx + si:byte] = Mem2186[ds_bx + si:byte] + al
	Mem2190[ds_bx + si:byte] = Mem2188[ds_bx + si:byte] + al
	Mem2192[ds_bx + si:byte] = Mem2190[ds_bx + si:byte] + al
	Mem2194[ds_bx + si:byte] = Mem2192[ds_bx + si:byte] + al
	Mem2196[ds_bx + si:byte] = Mem2194[ds_bx + si:byte] + al
	Mem2198[ds_bx + si:byte] = Mem2196[ds_bx + si:byte] + al
	Mem2200[ds_bx + si:byte] = Mem2198[ds_bx + si:byte] + al
	Mem2202[ds_bx + si:byte] = Mem2200[ds_bx + si:byte] + al
	Mem2204[ds_bx + si:byte] = Mem2202[ds_bx + si:byte] + al
	Mem2206[ds_bx + si:byte] = Mem2204[ds_bx + si:byte] + al
	Mem2208[ds_bx + si:byte] = Mem2206[ds_bx + si:byte] + al
	Mem2210[ds_bx + si:byte] = Mem2208[ds_bx + si:byte] + al
	Mem2212[ds_bx + si:byte] = Mem2210[ds_bx + si:byte] + al
	Mem2214[ds_bx + si:byte] = Mem2212[ds_bx + si:byte] + al
	Mem2216[ds_bx + si:byte] = Mem2214[ds_bx + si:byte] + al
	Mem2218[ds_bx + si:byte] = Mem2216[ds_bx + si:byte] + al
	Mem2220[ds_bx + si:byte] = Mem2218[ds_bx + si:byte] + al
	Mem2222[ds_bx + si:byte] = Mem2220[ds_bx + si:byte] + al
	Mem2224[ds_bx + si:byte] = Mem2222[ds_bx + si:byte] + al
	Mem2226[ds_bx + si:byte] = Mem2224[ds_bx + si:byte] + al
	Mem2228[ds_bx + si:byte] = Mem2226[ds_bx + si:byte] + al
	Mem2230[ds_bx + si:byte] = Mem2228[ds_bx + si:byte] + al
	Mem2232[ds_bx + si:byte] = Mem2230[ds_bx + si:byte] + al
	Mem2234[ds_bx + si:byte] = Mem2232[ds_bx + si:byte] + al
	Mem2236[ds_bx + si:byte] = Mem2234[ds_bx + si:byte] + al
	Mem2238[ds_bx + si:byte] = Mem2236[ds_bx + si:byte] + al
	Mem2240[ds_bx + si:byte] = Mem2238[ds_bx + si:byte] + al
	Mem2242[ds_bx + si:byte] = Mem2240[ds_bx + si:byte] + al
	Mem2244[ds_bx + si:byte] = Mem2242[ds_bx + si:byte] + al
	Mem2246[ds_bx + si:byte] = Mem2244[ds_bx + si:byte] + al
	Mem2248[ds_bx + si:byte] = Mem2246[ds_bx + si:byte] + al
	Mem2250[ds_bx + si:byte] = Mem2248[ds_bx + si:byte] + al
	Mem2252[ds_bx + si:byte] = Mem2250[ds_bx + si:byte] + al
	Mem2254[ds_bx + si:byte] = Mem2252[ds_bx + si:byte] + al
	Mem2256[ds_bx + si:byte] = Mem2254[ds_bx + si:byte] + al
	Mem2258[ds_bx + si:byte] = Mem2256[ds_bx + si:byte] + al
	Mem2260[ds_bx + si:byte] = Mem2258[ds_bx + si:byte] + al
	Mem2262[ds_bx + si:byte] = Mem2260[ds_bx + si:byte] + al
	Mem2264[ds_bx + si:byte] = Mem2262[ds_bx + si:byte] + al
	Mem2266[ds_bx + si:byte] = Mem2264[ds_bx + si:byte] + al
	Mem2268[ds_bx + si:byte] = Mem2266[ds_bx + si:byte] + al
	Mem2270[ds_bx + si:byte] = Mem2268[ds_bx + si:byte] + al
	Mem2272[ds_bx + si:byte] = Mem2270[ds_bx + si:byte] + al
	Mem2274[ds_bx + si:byte] = Mem2272[ds_bx + si:byte] + al
	Mem2276[ds_bx + si:byte] = Mem2274[ds_bx + si:byte] + al
	Mem2278[ds_bx + si:byte] = Mem2276[ds_bx + si:byte] + al
	Mem2280[ds_bx + si:byte] = Mem2278[ds_bx + si:byte] + al
	Mem2282[ds_bx + si:byte] = Mem2280[ds_bx + si:byte] + al
	Mem2284[ds_bx + si:byte] = Mem2282[ds_bx + si:byte] + al
	Mem2286[ds_bx + si:byte] = Mem2284[ds_bx + si:byte] + al
	Mem2288[ds_bx + si:byte] = Mem2286[ds_bx + si:byte] + al
	Mem2290[ds_bx + si:byte] = Mem2288[ds_bx + si:byte] + al
	Mem2292[ds_bx + si:byte] = Mem2290[ds_bx + si:byte] + al
	Mem2294[ds_bx + si:byte] = Mem2292[ds_bx + si:byte] + al
	Mem2296[ds_bx + si:byte] = Mem2294[ds_bx + si:byte] + al
	Mem2298[ds_bx + si:byte] = Mem2296[ds_bx + si:byte] + al
	Mem2300[ds_bx + si:byte] = Mem2298[ds_bx + si:byte] + al
	Mem2302[ds_bx + si:byte] = Mem2300[ds_bx + si:byte] + al
	Mem2304[ds_bx + si:byte] = Mem2302[ds_bx + si:byte] + al
	Mem2306[ds_bx + si:byte] = Mem2304[ds_bx + si:byte] + al
	Mem2308[ds_bx + si:byte] = Mem2306[ds_bx + si:byte] + al
	Mem2310[ds_bx + si:byte] = Mem2308[ds_bx + si:byte] + al
	Mem2312[ds_bx + si:byte] = Mem2310[ds_bx + si:byte] + al
	Mem2314[ds_bx + si:byte] = Mem2312[ds_bx + si:byte] + al
	Mem2316[ds_bx + si:byte] = Mem2314[ds_bx + si:byte] + al
	Mem2318[ds_bx + si:byte] = Mem2316[ds_bx + si:byte] + al


