void fn0800_0150(byte al)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ss
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: di si sp
fn0800_0150_entry:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0150:
	fn0800_01E6(al, 0x2714, 0x2714, Mem0[0x0800:0x025A:selector])
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0150_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> si:si di:di ah:<invalid> dx:<invalid> bx:<invalid> -4(fp):di -2(fp):si



void fn0800_0163()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn0800_0163_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_0163:
	return
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0163_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0164(byte al, byte bArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed:
// Preserved:
// Stack args: Stack +0002(8)
// Terminates process
fn0800_0164_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn0800_0164_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(8)

l0800_0164:
	msdos_terminate(bArg02)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn0800_0176(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  cs ds
// LiveOut:
// Trashed: ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: ds sp
fn0800_0176_entry:
// DataOut: cs ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0176:
	word32 es_bx_7 = msdos_get_interrupt_vector(0x00)
	Mem10[ds:0x005B:word16] = (word16) es_bx_7
	Mem11[ds:0x005D:word16] = SLICE(es_bx_7, selector, 16)
	word32 es_bx_14 = msdos_get_interrupt_vector(0x04)
	Mem17[ds:0x005F:word16] = (word16) es_bx_14
	Mem18[ds:0x0061:word16] = SLICE(es_bx_14, selector, 16)
	word32 es_bx_21 = msdos_get_interrupt_vector(0x05)
	Mem24[ds:0x0063:word16] = (word16) es_bx_21
	Mem25[ds:0x0065:word16] = SLICE(es_bx_21, selector, 16)
	word32 es_bx_28 = msdos_get_interrupt_vector(0x06)
	Mem31[ds:0x0067:word16] = (word16) es_bx_28
	Mem32[ds:0x0069:word16] = SLICE(es_bx_28, selector, 16)
	msdos_set_interrupt_vector(0x00, SEQ(cs, 0x016D))
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0176_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2500 Sequence es:bx:<invalid> dx:0x016D ds:ds -2(fp):ds



byte fn0800_01B9(selector ds, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: ah al ax dh dl ds dx eax edx rax rdx
// Preserved: ds sp
fn0800_01B9_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01B9:
	msdos_set_interrupt_vector(0x00, Mem0[ds:0x005B:segptr32])
	msdos_set_interrupt_vector(0x04, Mem0[ds:0x005F:segptr32])
	msdos_set_interrupt_vector(0x05, Mem0[ds:0x0063:segptr32])
	ptr32 ds_dx_29 = Mem0[ds:0x0067:segptr32]
	msdos_set_interrupt_vector(0x06, ds_dx_29)
	byte dl_31
	*dlOut = (byte) ds_dx_29
	return 0x06
// DataOut: al di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_01B9_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:0x2506 Sequence ds:dx:<invalid> ds:ds -2(fp):ds



void fn0800_01E6(byte al, word16 si, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es si ss
// LiveOut:
// Trashed: SCZO ah ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: sp
fn0800_01E6_entry:
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_01E6:
	byte ah_115
	branch si == 0x26FC l0800_01F0
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F0:
	ah_115 = 0xFF
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01EC:
	ah_115 = 0x00
// DataOut: ah al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F2:
	word16 dx_33 = di
	word16 bx_34 = si
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01F6:
	branch bx_34 == di l0800_021D
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_021D:
	branch dx_33 == di l0800_023C
// DataOut: al di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_023C:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>

fn0800_01E6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>

l0800_0221:
	Mem78[es:dx_33:byte] = 0xFF
	branch Mem0[es:dx_33:byte] == 0x00 l0800_0235
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0235:
	word16 sp_98
	byte SCZO_100
	byte Z_101
	byte ah_102
	byte SZO_103
	byte C_104
	word16 dx_105
	word16 bx_107
	selector es_108
	selector ss_109
	byte CZ_110
	byte al_112
	call SEQ(cs, Mem78[es:dx_33 + 0x0002:word16]) (retsize: 2; depth: 4)
		uses: ah_38,al_14,bx_75,C_36,cs_15,CZ_37,di_17,dx_39,es_19,SCZO_76,si_18,sp_79,ss_16,SZO_35,wLoc02_80,Z_77
		defs: ah_102,al_112,bx_107,C_104,cs_111,CZ_110,di_106,dx_105,es_108,SCZO_100,si_99,sp_98,ss_109,SZO_103,Z_101
	es = Mem78[ss_109:sp_98:selector]
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_022E:
	word16 sp_81
	byte SCZO_83
	byte Z_84
	byte ah_85
	byte SZO_86
	byte C_87
	word16 dx_88
	word16 bx_90
	selector es_91
	selector ss_92
	byte CZ_93
	byte al_95
	call Mem78[es:dx_33 + 0x0002:ptr32] (retsize: 4; depth: 6)
		uses: ah_38,al_14,bx_75,C_36,cs_15,CZ_37,di_17,dx_39,es_19,SCZO_76,si_18,sp_79,ss_16,SZO_35,wLoc02_80,Z_77
		defs: ah_85,al_95,bx_90,C_87,cs_94,CZ_93,di_89,dx_88,es_91,SCZO_83,si_82,sp_81,ss_92,SZO_86,Z_84
	es = Mem78[ss_92:sp_81:selector]
// DataOut: al di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_01FA:
	branch Mem0[es:bx_34:byte] == 0xFF l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0200:
	byte CZ_59
	branch si == 0x26FC l0800_020C
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_020C:
	CZ_59 = cond(Mem0[es:bx_34 + 0x0001:byte] - ah_115) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0206:
	CZ_59 = cond(ah_115 - Mem0[es:bx_34 + 0x0001:byte]) (alias)
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0210:
	branch CZ_59 l0800_0218
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0212:
	ah_115 = Mem0[es:bx_34 + 0x0001:byte]
	dx_33 = bx_34
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_0218:
	bx_34 = bx_34 + 0x0006
// DataOut: ah al bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp ah:<invalid> dx:<invalid> bx:<invalid> es:<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)



void fn0800_023D(byte al, word16 cx, word16 dx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx ds dx
// LiveOut:
// Trashed: C ah ax bh bl bx eax ebx rax rbx
// Preserved: sp
fn0800_023D_entry:
// DataOut: al cx ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_023D:
	word16 ax_8
	msdos_write_file(0x0002, cx, ds_dx, out ax_8)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_023D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ah:0x40 bx:0x0002



void main(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
main_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_025E:
	Mem11[ds:0x2A27:word16] = 0x0001
	Mem13[ds:0x2E4D:word16] = 0x0000
	Mem14[ds:0x2A1F:word16] = 0x0000
	Mem15[ds:0x2E4F:word16] = 0x0000
	Mem16[ds:0x2A1D:word16] = 0x0000
	Mem17[ds:0x2A17:word16] = 0x0000
	Mem18[ds:0x2A1B:word16] = 0x0000
	Mem19[ds:0x2A11:word16] = 0x0000
	Mem20[ds:0x2A0F:word16] = 0x0000
	Mem21[ds:0x2A0D:word16] = 0x0000
	Mem22[ds:0x2A0B:word16] = 0x3000
	Mem23[ds:0x2E31:word16] = 0x8000
	Mem24[ds:0x2E2F:word16] = 0x1000
	Mem25[ds:0x2A21:word16] = 0x0001
	Mem26[ds:0x29F5:word16] = 0x0000
	Mem27[ds:0x29F3:word16] = 0x0000
	Mem28[ds:0x29F1:word16] = 0x0000
	Mem29[ds:0x29EF:word16] = 0x0000
	Mem30[ds:0x2A13:word16] = 0x0000
	Mem31[ds:0x2A23:word16] = 0x0001
	fn0800_2C9A(ds)
	word16 di_42
	word16 si_291 = fn0800_B2EF(ds, 0x07E8, ds, out di_42)
	selector ds_46
	word16 bp_277 = fn0800_0402(si_291, ds, out ds_46)
	selector ds_48
	byte dl_49 = fn0800_0541(bp_277, ds_46, out ds_48)
	Mem54[ss:fp - 0x000A:word16] = 0x0001
	Mem57[ss:fp - 0x000C:word16] = 0x0001
	fn0800_2DBF(ds_48, wArg00, wArg02)
	Mem65[ss:fp - 0x000A:word16] = 0x0000
	Mem67[ss:fp - 0x000C:word16] = 0x0000
	word16 dx_280 = DPB(dx, dl_49, 0)
	word16 di_70
	byte dl_279
	selector ds_278
	word16 ax_72 = fn0800_9764(dl_49, ds_48, ptrArg00, wArg02, out dl_279, out di_70, out ds_278)
	Mem75[ss:bp_277 - 0x0002:word16] = dx_280
	Mem76[ss:bp_277 - 0x0004:word16] = ax_72
	word16 bx_77 = Mem76[ds_278:0x2A25:word16]
	branch bx_77 >u 0x0008 l0800_0338
// DataOut: bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_031A:
	switch (bx_77 << 0x0001) { l0800_0321 l0800_0330 l0800_0330 l0800_0326 l0800_0326 l0800_032B l0800_0335 l0800_0335 l0800_0335 }
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0335:
	dl_279 = fn0800_19EE(bp_277, ds_278, out ds_278)
	dx_280 = DPB(dx, dl_279, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_032B:
	dl_279 = fn0800_18D9(bp_277, ds_278, out si_291, out ds_278)
	dx_280 = DPB(dx, dl_279, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0326:
	dl_279 = fn0800_12E2(bp_277, ds_278, out ds_278)
	dx_280 = DPB(dx, dl_279, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0330:
	dl_279 = fn0800_112D(bp_277, si_291, ds_278, out bp_277, out ds_278)
	dx_280 = DPB(dx, dl_279, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0321:
	dl_279 = fn0800_0DE8(bp_277, si_291, ds_278, out bp_277, out ds_278)
	dx_280 = DPB(dx, dl_279, 0) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> dx:<invalid> al:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> dh:0x00 ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0338:
	Mem89[ss:fp - 0x000A:word16] = 0x0000
	Mem91[ss:fp - 0x000C:word16] = 0x0000
	byte dl_92
	word16 di_93
	selector ds_94
	word16 ax_97 = fn0800_9764(dl_279, ds_278, ptrArg00, wArg02, out dl_92, out di_93, out ds_94) - Mem91[ss:bp_277 - 0x0004:word16]
	Mem102[ss:bp_277 - 0x0002:word16] = dx_280 - Mem91[ss:bp_277 - 0x0002:word16] - (ax_97 <u 0x0000)
	Mem103[ss:bp_277 - 0x0004:word16] = ax_97
	Mem106[ss:fp - 0x000A:word16] = Mem103[ds_94:0x29F1:word16]
	Mem109[ss:fp - 0x000C:word16] = Mem106[ds_94:0x29EF:word16]
	Mem112[ss:fp - 0x000E:word16] = Mem109[ds_94:0x29F5:word16]
	Mem115[ss:fp - 0x0010:word16] = Mem112[ds_94:0x29F3:word16]
	word16 di_118
	word16 ax_119 = fn0800_0B79(bp_277, si_291, di_93, wArg00, wArg02, wArg04, wArg06, out di_118)
	Mem127[ss:fp - 0x000A:word16] = 0x0000
	Mem129[ss:fp - 0x000C:word16] = 0x003C
	Mem132[ss:fp - 0x000E:word16] = Mem129[ss:bp_277 - 0x0002:word16]
	Mem135[ss:fp - 0x0010:word16] = Mem132[ss:bp_277 - 0x0004:word16]
	word16 dx_136
	word16 bp_137
	word16 si_138
	word16 di_139
	word16 ax_140 = fn0800_8BCA(bp_277, ax_119, di_118, bp, out dx_136, out bp_137, out si_138, out di_139)
	Mem142[ss:fp - 0x0012:word16] = dx_136
	Mem144[ss:fp - 0x0014:word16] = ax_140
	Mem150[ss:fp - 0x0016:word16] = 0x0000
	Mem152[ss:fp - 0x0018:word16] = 0x003C
	Mem155[ss:fp - 0x001A:word16] = 0x0000
	Mem157[ss:fp - 0x001C:word16] = 0x0E10
	Mem160[ss:fp - 0x001E:word16] = Mem157[ss:bp_137 - 0x0002:word16]
	Mem163[ss:fp - 0x0020:word16] = Mem160[ss:bp_137 - 0x0004:word16]
	word16 dx_164
	word16 bp_165
	word16 si_166
	word16 di_167
	word16 ax_168 = fn0800_8BCA(bp_137, si_138, di_139, bp, out dx_164, out bp_165, out si_166, out di_167)
	Mem170[ss:fp - 0x0022:word16] = dx_164
	Mem172[ss:fp - 0x0024:word16] = ax_168
	word16 dx_173
	word16 bp_174
	word16 si_175
	word16 di_176
	word16 ax_177 = fn0800_8BBB(bp_165, si_166, di_167, bp, out dx_173, out bp_174, out si_175, out di_176)
	Mem179[ss:fp - 0x0026:word16] = dx_173
	Mem181[ss:fp - 0x0028:word16] = ax_177
	Mem187[ss:fp - 0x002A:word16] = 0x0000
	Mem189[ss:fp - 0x002C:word16] = 0x0E10
	Mem192[ss:fp - 0x002E:word16] = 0x0000
	Mem194[ss:fp - 0x0030:word16] = 0x5180
	Mem197[ss:fp - 0x0032:word16] = Mem194[ss:bp_174 - 0x0002:word16]
	Mem200[ss:fp - 0x0034:word16] = Mem197[ss:bp_174 - 0x0004:word16]
	word16 dx_201
	word16 bp_202
	word16 si_203
	word16 di_204
	word16 ax_205 = fn0800_8BCA(bp_174, si_175, di_176, bp, out dx_201, out bp_202, out si_203, out di_204)
	Mem207[ss:fp - 0x0036:word16] = dx_201
	Mem209[ss:fp - 0x0038:word16] = ax_205
	word16 dx_210
	word16 bp_211
	word16 si_212
	word16 di_213
	word16 ax_214 = fn0800_8BBB(bp_202, si_203, di_204, bp, out dx_210, out bp_211, out si_212, out di_213)
	Mem216[ss:fp - 0x003A:word16] = dx_210
	Mem218[ss:fp - 0x003C:word16] = ax_214
	Mem227[ss:fp - 0x003E:word16] = (uint16) ((uint32) (uint16) si_212 % 0x0064)
	Mem236[ss:fp - 0x0040:word16] = (uint16) ((uint32) (uint16) si_212 /u 0x0064)
	Mem239[ss:fp - 0x0042:word16] = Mem236[ds_94:0x29F1:word16]
	Mem242[ss:fp - 0x0044:word16] = Mem239[ds_94:0x29EF:word16]
	Mem245[ss:fp - 0x0046:word16] = Mem242[ds_94:0x29F5:word16]
	Mem248[ss:fp - 0x0048:word16] = Mem245[ds_94:0x29F3:word16]
	Mem250[ss:fp - 0x004A:word16] = ds_94
	Mem253[ss:fp - 0x004C:word16] = 0x05DC
	Mem256[ss:fp - 0x004E:word16] = 0x0008
	Mem259[ss:fp - 0x0050:word16] = Mem256[ds_94:0x2A13:word16]
	Mem261[ss:fp - 0x0052:word16] = ds_94
	Mem264[ss:fp - 0x0054:word16] = 0x07EB
	word16 di_265
	fn0800_B2EF(ds_94, wArg00, wArg02, out di_265)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> dx:<invalid> al:<invalid> dh:<invalid> si:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ch:<invalid> -16(fp):0x07E8 -14(fp):ds -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

main_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ds:<invalid> al:<invalid> dh:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -84(fp):0x07EB -82(fp):ds -80(fp):<invalid> -78(fp):0x0008 -76(fp):0x05DC -74(fp):ds -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):<invalid> -60(fp):0x0000 -58(fp):0x5180 -56(fp):0x0000 -54(fp):0x5180 -52(fp):0x0000 -50(fp):<invalid> -48(fp):0x5180 -46(fp):0x0000 -44(fp):0x0E10 -42(fp):0x0000 -40(fp):0x0000 -38(fp):0x0E10 -36(fp):0x0000 -34(fp):0x0E10 -32(fp):0x0000 -30(fp):<invalid> -28(fp):0x0E10 -26(fp):0x0000 -24(fp):0x003C -22(fp):0x0000 -20(fp):0x0000 -18(fp):0x003C -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0402(word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si sp
fn0800_0402_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0402:
	branch Mem0[ds:0x2A27:word16] != Mem0[ds:0x269A:word16] l0800_0410
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_040D:
	word16 si_376
	bp = fn0800_0DCE(ds, out si_376, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0410:
	ptr32 es_bx_20 = Mem0[ds:0x269C:segptr32]
	selector es_22 = SLICE(es_bx_20, selector, 16)
	word16 bx_23 = (word16) es_bx_20 + (Mem0[ds:0x2A27:word16] << 0x0002)
	Mem27[ss:fp - 0x0006:word16] = Mem0[es_22:bx_23 + 0x0002:word16]
	Mem31[ss:fp - 0x0008:word16] = Mem27[es_22:bx_23:word16]
	branch fn0800_BFC7(ptrArg00, wArg02) <=u 0x0001 l0800_044D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_042F:
	ptr32 es_bx_356 = Mem31[ds:0x269C:segptr32]
	selector es_358 = SLICE(es_bx_356, selector, 16)
	word16 bx_359 = (word16) es_bx_356 + (Mem31[ds:0x2A27:word16] << 0x0002)
	Mem363[ss:fp - 0x0006:word16] = Mem31[es_358:bx_359 + 0x0002:word16]
	Mem366[ss:fp - 0x0008:word16] = Mem363[es_358:bx_359:word16]
	Mem369[ss:fp - 0x000A:word16] = 0x0001
	word16 si_370
	word16 di_371
	fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_370, out di_371, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:0x0000 ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_044D:
	word16 ax_42 = Mem31[ds:0x2A27:word16]
	Mem55[ss:fp - 0x0006:word16] = DPB(ax_42 << 0x0002, Mem31[Mem31[ds:(word16) Mem31[ds:0x269C:segptr32] + (ax_42 << 0x0002):segptr32]:byte], 0)
	Mem57[ss:fp - 0x0008:word16] = ds
	Mem60[ss:fp - 0x000A:word16] = 0x0829
	byte dl_63
	word16 ax_64 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl_63)
	Mem66[ds:0x2A25:word16] = ax_64
	branch ax_64 < 0x0009 l0800_0492
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> ah:<invalid> si:<invalid> al:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0474:
	ptr32 es_bx_331 = Mem66[ds:0x269C:segptr32]
	selector es_333 = SLICE(es_bx_331, selector, 16)
	word16 bx_334 = (word16) es_bx_331 + (Mem66[ds:0x2A27:word16] << 0x0002)
	Mem338[ss:fp - 0x0006:word16] = Mem66[es_333:bx_334 + 0x0002:word16]
	Mem341[ss:fp - 0x0008:word16] = Mem338[es_333:bx_334:word16]
	Mem344[ss:fp - 0x000A:word16] = 0x0001
	word16 si_347
	word16 di_348
	fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_347, out di_348, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0492:
	Mem79[ds:0x2A27:word16] = Mem66[ds:0x2A27:word16] + 0x0001
	branch Mem79[ds:0x2A25:word16] > 0x0002 l0800_04A0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A0:
	branch Mem79[ds:0x2A27:word16] != Mem79[ds:0x269A:word16] l0800_04AC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04A9:
	word16 si_325
	bp = fn0800_0DCE(ds, out si_325, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: Local -0002(16)

l0800_04AC:
	word16 ax_113 = Mem79[ds:0x2A27:word16]
	Mem115[ds:0x2A27:word16] = Mem79[ds:0x2A27:word16] + 0x0001
	ptr32 es_bx_118 = Mem115[ds:0x269C:segptr32]
	selector es_120 = SLICE(es_bx_118, selector, 16)
	word16 bx_121 = (word16) es_bx_118 + (ax_113 << 0x0002)
	Mem125[ss:fp - 0x0006:word16] = Mem115[es_120:bx_121 + 0x0002:word16]
	Mem128[ss:fp - 0x0008:word16] = Mem125[es_120:bx_121:word16]
	Mem130[ss:fp - 0x000A:word16] = ds
	Mem133[ss:fp - 0x000C:word16] = 0x4348
	fn0800_BF9E(ptrArg00, wArg02, ptrArg04)
	Mem138[ss:fp - 0x0006:word16] = ds
	Mem141[ss:fp - 0x0008:word16] = 0x4348
	fn0800_0C6C(ds, ptrArg00)
	Mem145[ss:fp - 0x0006:word16] = ds
	selector es_146 = Mem145[ss:fp - 0x0006:selector]
	word16 di_149 = 0x4348
	word16 cx_154 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> ds:<invalid> cx:<invalid> bp:<invalid> si:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4:
	branch cx_154 == 0x0000 l0800_04E6
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E4_1:
	di_149 = di_149 + 0x0001
	cx_154 = cx_154 - 0x0001
	branch 0x00 == Mem145[es_146:di_149:byte] l0800_04E4
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04E6:
	word16 di_163 = di_149 - 0x0001
	word16 cx_161 = ~cx_154
	byte Z_168 = cond(di_163)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED:
	branch cx_161 == 0x0000 l0800_04EF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04ED_2:
	Z_168 = cond(0x2E - Mem145[es_146:di_163:byte]) (alias)
	di_163 = di_163 - 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x2E == Mem145[es_146:di_163:byte] l0800_04ED
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04EF:
	branch Z_168 l0800_04F8
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F1:
	di_163 = 0xFFFF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x002E Sequence es:bx:<invalid> bx:<invalid> al:0x2E es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_04F8:
	Mem192[ss:fp - 0x0006:word16] = ds
	selector es_193 = Mem192[ss:fp - 0x0006:selector]
	Mem197[ss:fp - 0x0006:word16] = di_163 + 0x0001
	word16 di_198 = 0x4348
	word16 cx_203 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507:
	branch cx_203 == 0x0000 l0800_0509
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0507_1:
	di_198 = di_198 + 0x0001
	cx_203 = cx_203 - 0x0001
	branch 0x00 == Mem197[es_193:di_198:byte] l0800_0507
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0509:
	word16 cx_210 = ~cx_203
	word16 di_212 = di_198 - cx_210
	byte Z_214 = cond(di_212)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510:
	branch cx_210 == 0x0000 l0800_0512
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0510_2:
	Z_214 = cond(0x5C - Mem197[es_193:di_212:byte]) (alias)
	di_212 = di_212 + 0x0001
	cx_210 = cx_210 - 0x0001
	branch 0x5C == Mem197[es_193:di_212:byte] l0800_0510
// DataOut: bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0512:
	branch Z_214 l0800_051B
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0514:
	di_212 = 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:0x005C Sequence es:bx:<invalid> bx:<invalid> al:0x5C es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_051B:
	branch Mem197[ss:fp - 0x0006:word16] >u di_212 - 0x0001 l0800_0538
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:0x00 bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0523:
	Mem258[ss:fp - 0x0006:word16] = ds
	selector es_259 = Mem258[ss:fp - 0x0006:selector]
	word16 di_262 = 0x4348
	word16 si_263 = 0x0833
	word16 cx_264 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530:
	branch cx_264 == 0x0000 l0800_0532
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0530_1:
	di_262 = di_262 + 0x0001
	cx_264 = cx_264 - 0x0001
	branch 0x00 == Mem258[es_259:di_262:byte] l0800_0530
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0532:
	word16 di_276 = di_262 - 0x0001
	word16 cx_278 = 0x0005
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:0x0833 cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536:
	branch cx_278 == 0x0000 l0800_0538
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0538:
	Mem256[ds:0x2A19:word16] = 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> cl:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_0536_2:
	Mem283[es_259:di_276:byte] = Mem258[ds:si_263:byte]
	si_263 = si_263 + 0x0001
	di_276 = di_276 + 0x0001
	cx_278 = cx_278 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_049D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

l0800_053E:
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> cl:<invalid> dx:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_0402_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> si:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bp:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x4348 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



byte fn0800_0541(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_0541_entry:
	*dsOut = ds
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0541:
	word16 bp_159 = fp - 0x0002
	word16 ax_15 = Mem0[ds:0x2A27:word16]
	branch ax_15 != Mem0[ds:0x269A:word16] l0800_0555
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_0555:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_15 << 0x0002):segptr32]:byte] != 0x2D l0800_056B
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_056B:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_0584
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_0584:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0581:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0568:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_086D:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2D l0800_0886
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0886:
	branch Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (Mem0[ds:0x2A27:word16] << 0x0002):segptr32]:byte] != 0x2F l0800_089F
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_089F:
	word16 ax_313 = Mem0[ds:0x2A21:word16]
	branch ax_313 == 0x0001 l0800_08AE
// DataOut: ax bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AE:
	Mem523[ss:fp - 0x000C:word16] = ds
	selector es_524 = Mem523[ss:fp - 0x000C:selector]
	word16 di_527 = 0x4271
	word16 si_528 = 0x085B
	word16 cx_529 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB:
	branch cx_529 == 0x0000 l0800_08BD
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BB_1:
	di_527 = di_527 + 0x0001
	cx_529 = cx_529 - 0x0001
	branch 0x00 == Mem523[es_524:di_527:byte] l0800_08BB
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08BD:
	word16 di_541 = di_527 - 0x0001
	word16 cx_543 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085B cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1:
	branch cx_543 == 0x0000 l0800_08C3
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C3:
	branch Mem523[ds:0x2E31:word16] <=u 0x8000 l0800_08D1
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08CB:
	Mem555[ds:0x2E31:word16] = 0x8000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D1:
	Mem554[ds:0x2E2F:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08C1_2:
	Mem548[es_524:di_541:byte] = Mem523[ds:si_528:byte]
	si_528 = si_528 + 0x0001
	di_541 = di_541 + 0x0001
	cx_543 = cx_543 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08A7:
	branch ax_313 == 0x0002 l0800_08D9
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08D9:
	Mem485[ss:fp - 0x000C:word16] = ds
	selector es_486 = Mem485[ss:fp - 0x000C:selector]
	word16 di_489 = 0x4271
	word16 si_490 = 0x085D
	word16 cx_491 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6:
	branch cx_491 == 0x0000 l0800_08E8
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E6_1:
	di_489 = di_489 + 0x0001
	cx_491 = cx_491 - 0x0001
	branch 0x00 == Mem485[es_486:di_489:byte] l0800_08E6
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08E8:
	word16 di_503 = di_489 - 0x0001
	word16 cx_505 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085D cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC:
	branch cx_505 == 0x0000 l0800_08EE
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EE:
	branch Mem485[ds:0x2E31:word16] <=u 0x1000 l0800_08FC
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08F6:
	Mem517[ds:0x2E31:word16] = 0x1000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08FC:
	Mem516[ds:0x2E2F:word16] = 0x00FF
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08EC_2:
	Mem510[es_486:di_503:byte] = Mem485[ds:si_490:byte]
	si_490 = si_490 + 0x0001
	di_503 = di_503 + 0x0001
	cx_505 = cx_505 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_08AC:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0902:
	branch Mem0[ds:0x2A23:word16] != 0x0002 l0800_0911
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0909:
	Mem480[ds:0x2A1D:word16] = 0x0000
	Mem481[ds:0x2E4F:word16] = 0x0000
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0911:
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_092D
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0918:
	Mem444[ss:fp - 0x000C:word16] = ds
	selector es_445 = Mem444[ss:fp - 0x000C:selector]
	word16 di_448 = 0x4271
	word16 si_449 = 0x0653
	word16 cx_450 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925:
	branch cx_450 == 0x0000 l0800_0927
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0925_1:
	di_448 = di_448 + 0x0001
	cx_450 = cx_450 - 0x0001
	branch 0x00 == Mem444[es_445:di_448:byte] l0800_0925
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0927:
	word16 di_462 = di_448 - 0x0001
	word16 cx_464 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0653 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B:
	branch cx_464 == 0x0000 l0800_092D
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092D:
	branch Mem0[ds:0x2A1D:word16] == 0x0000 l0800_0949
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0934:
	Mem410[ss:fp - 0x000C:word16] = ds
	selector es_411 = Mem410[ss:fp - 0x000C:selector]
	word16 di_414 = 0x4271
	word16 si_415 = 0x085F
	word16 cx_416 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941:
	branch cx_416 == 0x0000 l0800_0943
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0941_1:
	di_414 = di_414 + 0x0001
	cx_416 = cx_416 - 0x0001
	branch 0x00 == Mem410[es_411:di_414:byte] l0800_0941
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0943:
	word16 di_428 = di_414 - 0x0001
	word16 cx_430 = 0x0002
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x085F cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947:
	branch cx_430 == 0x0000 l0800_0949
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0949:
	Mem351[ss:fp - 0x000C:word16] = ds
	selector es_352 = Mem351[ss:fp - 0x000C:selector]
	word16 di_355 = 0x4271
	word16 si_356 = 0x0861
	word16 cx_357 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956:
	branch cx_357 == 0x0000 l0800_0958
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0956_1:
	di_355 = di_355 + 0x0001
	cx_357 = cx_357 - 0x0001
	branch 0x00 == Mem351[es_352:di_355:byte] l0800_0956
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0958:
	word16 di_369 = di_355 - 0x0001
	word16 cx_371 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:0x0861 cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C:
	branch cx_371 == 0x0000 l0800_095E
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095E:
	branch Mem351[ds:0x2A25:word16] != 0x0000 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0965:
	branch Mem351[Mem351[ds:(Mem351[ds:0x2A23:word16] << 0x0002) + 0x0545:segptr32]:byte] == 0x00 l0800_0987
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0977:
	Mem391[ss:fp - 0x000C:word16] = ds
	Mem394[ss:fp - 0x000E:word16] = 0x2E75
	Mem396[ss:fp - 0x0010:word16] = ds
	Mem399[ss:fp - 0x0012:word16] = 0x4271
	selector ds_400
	dl = fn0800_09A3(bp_159, ds, out ds_400)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_095C_2:
	Mem376[es_352:di_369:byte] = Mem351[ds:si_356:byte]
	si_356 = si_356 + 0x0001
	di_369 = di_369 + 0x0001
	cx_371 = cx_371 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0947_2:
	Mem435[es_411:di_428:byte] = Mem410[ds:si_415:byte]
	si_415 = si_415 + 0x0001
	di_428 = di_428 + 0x0001
	cx_430 = cx_430 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_092B_2:
	Mem469[es_445:di_462:byte] = Mem444[ds:si_449:byte]
	si_449 = si_449 + 0x0001
	di_462 = di_462 + 0x0001
	cx_464 = cx_464 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_089C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0883:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_058A:
	word16 ax_108 = Mem0[ds:0x2A27:word16]
	Mem121[ss:fp - 0x000C:word16] = DPB(ax_108 << 0x0002, Mem0[Mem0[ds:(word16) Mem0[ds:0x269C:segptr32] + (ax_108 << 0x0002):segptr32] + 0x0001:byte], 0)
	Mem123[ss:fp - 0x000E:word16] = ds
	Mem126[ss:fp - 0x0010:word16] = 0x0838
	word16 ax_131 = fn0800_0C29(ds, wArg00, wArg02, bArg04, out dl)
	word16 si_133 = ax_131
	branch ax_131 < 0x000B l0800_05CF
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05B1:
	ptr32 es_bx_281 = Mem126[ds:0x269C:segptr32]
	selector es_283 = SLICE(es_bx_281, selector, 16)
	word16 bx_284 = (word16) es_bx_281 + (Mem126[ds:0x2A27:word16] << 0x0002)
	Mem288[ss:fp - 0x000C:word16] = Mem126[es_283:bx_284 + 0x0002:word16]
	Mem291[ss:fp - 0x000E:word16] = Mem288[es_283:bx_284:word16]
	Mem294[ss:fp - 0x0010:word16] = 0x0002
	word16 di_296
	dl = fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_133, out di_296, out ds)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ah:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05CF:
	branch si_133 < 0x0006 l0800_05D7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D7:
	ptr32 es_bx_192 = Mem126[ds:0x269C:segptr32]
	selector es_194 = SLICE(es_bx_192, selector, 16)
	word16 bx_195 = (word16) es_bx_192 + (Mem126[ds:0x2A27:word16] << 0x0002)
	Mem199[ss:fp - 0x000C:word16] = Mem126[es_194:bx_195 + 0x0002:word16]
	Mem202[ss:fp - 0x000E:word16] = Mem199[es_194:bx_195:word16]
	branch fn0800_BFC7(ptrArg00, wArg02) != 0x0002 l0800_0622
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0622:
	ptr32 es_bx_267 = Mem202[ds:0x269C:segptr32]
	selector es_269 = SLICE(es_bx_267, selector, 16)
	word16 bx_270 = (word16) es_bx_267 + (Mem202[ds:0x2A27:word16] << 0x0002)
	word16 dx_272 = Mem202[es_269:bx_270:word16]
	Mem276[ss:bp_159 - 0x0002:word16] = Mem202[es_269:bx_270 + 0x0002:word16]
	Mem277[ss:bp_159 - 0x0004:word16] = dx_272 + 0x0002
	dl = (byte) (dx_272 + 0x0002) (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05F6:
	Mem241[ds:0x2A27:word16] = Mem202[ds:0x2A27:word16] + 0x0001
	branch Mem241[ds:0x2A27:word16] != Mem241[ds:0x269A:word16] l0800_0606
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0603:
	bp_159 = fn0800_0DCE(ds, out si_133, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:0x0000 ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0606:
	ptr32 es_bx_251 = Mem241[ds:0x269C:segptr32]
	selector es_253 = SLICE(es_bx_251, selector, 16)
	word16 bx_254 = (word16) es_bx_251 + (Mem241[ds:0x2A27:word16] << 0x0002)
	word16 dx_257 = Mem241[es_253:bx_254:word16]
	Mem259[ss:bp_159 - 0x0002:word16] = Mem241[es_253:bx_254 + 0x0002:word16]
	Mem260[ss:bp_159 - 0x0004:word16] = dx_257
	dl = (byte) dx_257 (alias)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_063F:
	branch (int16) Mem202[Mem202[ss:bp_159 - 0x0004:segptr32]:byte] != 0x0000 l0800_0659
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_064A:
	Mem224[ss:fp - 0x000C:word16] = ds
	Mem227[ss:fp - 0x000E:word16] = 0x05DC
	Mem230[ss:fp - 0x0010:word16] = 0x0002
	word16 di_234
	dl = fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si_133, out di_234, out ds)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_05D4:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0659:
	branch si_133 <=u 0x000A l0800_0663
// DataOut: bp bx dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0663:
	word16 bx_168 = si_133 << 0x0001
	word16 sp_170
	word16 bp_171
	selector ss_172
	byte SCZO_173
	word16 si_174
	word16 di_175
	word16 ax_176
	selector ds_177
	byte Z_178
	word16 bx_179
	selector es_180
	byte al_181
	byte SO_182
	byte CZ_183
	byte SZO_184
	byte C_185
	word16 cx_186
	word16 dx_187
	byte dl_188
	call Mem126[0x0800:bx_168 + 0x098D:word16] (retsize: 4; depth: 4)
		uses: al_151,ax_155,bp_159,bx_168,C_150,cx,CZ_164,di_157,dl_148,ds_154,dx_149,es_152,SCZO_169,si_158,SO_147,sp_160,ss,SZO_156,wLoc02_4,wLoc08_9,wLoc0A_12,Z_153
		defs: al_181,ax_176,bp_171,bx_179,C_185,cx_186,CZ_183,di_175,dl_188,ds_177,dx_187,es_180,SCZO_173,si_174,SO_182,sp_170,ss_172,SZO_184,Z_178
	return dl_188
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_0660:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0869:
	Mem166[ds:0x2A27:word16] = Mem126[ds:0x2A27:word16] + 0x0001
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0552:
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp

l0800_0987:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> ah:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0541_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> al:<invalid> cl:<invalid> dx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> dl:<invalid> dh:0x00 bl:<invalid> bh:<invalid> ch:<invalid> -18(fp):0x4271 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_09A3(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_09A3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_09A3:
	word16 ax_34 = ((int16) Mem0[ds:0x0A74:byte] << 0x08) + DPB(bx, 0x00, 8)
	ui32 ax_dx_42 = SEQ(((int16) Mem0[ds:0x0A72:byte] << 0x08) + DPB(dx, 0x00, 8) + (ax_34 <u 0x0000), ax_34 + 0x0020)
	word16 ax_45 = SLICE(ax_dx_42 + 0x00000020, word16, 16)
	word16 dx_316 = (word16) (ax_dx_42 + 0x00000020)
	selector ds_52
	fn0800_4311(fp - 0x0002, ds, dx_316, ax_45, out ds_52)
	Mem56[ss:fp - 0x0004:word16] = dx_316
	Mem58[ss:fp - 0x0006:word16] = ax_45
	Mem59[ss:fp - 0x0008:word16] = dx_316
	Mem60[ss:fp - 0x000A:word16] = ax_45
	Mem63[ss:fp - 0x0010:word16] = Mem60[ss:fp - 0x0004:word16]
	Mem65[ss:fp - 0x0012:word16] = ax_45
	Mem67[ss:fp - 0x0014:word16] = ds_52
	Mem70[ss:fp - 0x0016:word16] = 0x0A6E
	selector ds_145
	word16 bp_77 = fn0800_867A(wArg02, psegArg04, wArg06, psegArg08, out ds_145)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0A4F:
	word16 si_130 = Mem70[ss:bp_77 + 0x0004:word16]
	Mem93[ss:fp - 0x0012:word16] = ds_145
	ptr32 es_di_95 = Mem93[ss:bp_77 - 0x0008:segptr32]
	selector ds_94 = Mem93[ss:bp_77 + 0x0006:selector]
	word16 di_111 = (word16) es_di_95
	selector es_97 = SLICE(es_di_95, selector, 16)
	word16 ax_142 = 0x0000
	word16 cx_104 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> Sequence es:di:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E:
	branch cx_104 == 0x0000 l0800_0A60
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A5E_1:
	di_111 = di_111 + 0x0001
	cx_104 = cx_104 - 0x0001
	branch 0x00 == Mem93[es_97:di_111:byte] l0800_0A5E
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A60:
	word16 cx_114 = ~cx_104
	word16 di_116 = di_111 - cx_114
	byte SCZO_118 = cond(di_116)
	byte Z_120 = SCZO_118
	byte C_121 = SCZO_118
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64:
	branch cx_114 == 0x0000 l0800_0A66
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A64_2:
	byte SCZO_346 = cond(Mem93[ds_94:si_363:byte] - Mem93[es_97:di_362:byte])
	Z_120 = SCZO_346 (alias)
	C_121 = SCZO_346 (alias)
	si_130 = si_363 + 0x0001
	di_116 = di_362 + 0x0001
	cx_114 = cx_114 - 0x0001
	word16 di_362 = di_116
	word16 si_363 = si_130
	branch Mem93[ds_94:si_363:byte] != Mem93[es_97:di_362:byte] l0800_0A64
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A66:
	branch Z_120 l0800_0A6D
// DataOut: ax bp sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A68:
	word16 ax_338 = 0x0000 - C_121
	ax_142 = ax_338 - 0xFFFF - (ax_338 <u 0x0000)
// DataOut: ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A6D:
	ds_145 = Mem93[ss:fp - 0x0012:selector]
	branch ax_142 != 0x0000 l0800_09FF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_09FF:
	ptr32 es_di_230 = Mem93[ss:bp_77 - 0x0008:segptr32]
	word16 di_231 = (word16) es_di_230
	selector es_232 = SLICE(es_di_230, selector, 16)
	word16 cx_238 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07:
	branch cx_238 == 0x0000 l0800_0A09
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A07_1:
	di_231 = di_365 + 0x0001
	cx_238 = cx_238 - 0x0001
	word16 di_365 = di_231
	branch 0x00 == Mem93[es_232:di_365:byte] l0800_0A07
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A09:
	word16 di_259 = Mem93[ss:bp_77 - 0x0008:word16]
	Mem262[ss:fp - 0x0012:word16] = (int16) Mem93[es_232:Mem93[ss:bp_77 - 0x0008:word16] + (~cx_238 - 0x0001) + 0x0001:byte] << 0x08
	word16 cx_268 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25:
	branch cx_268 == 0x0000 l0800_0A27
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A25_2:
	di_259 = di_366 + 0x0001
	cx_268 = cx_268 - 0x0001
	word16 di_366 = di_259
	branch 0x00 == Mem262[es_232:di_366:byte] l0800_0A25
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A27:
	word16 dx_290 = Mem262[ss:fp - 0x0012:word16] + DPB(Mem262[ss:bp_77 - 0x0008:word16] + (~cx_268 - 0x0001), 0x00, 8)
	word16 di_293 = Mem262[ss:bp_77 - 0x0008:word16]
	word16 cx_300 = 0xFFFF
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42:
	branch cx_300 == 0x0000 l0800_0A44
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A42_3:
	di_293 = di_367 + 0x0001
	cx_300 = cx_300 - 0x0001
	word16 di_367 = di_293
	branch 0x00 == Mem262[es_232:di_367:byte] l0800_0A42
// DataOut: al bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A44:
	word16 dx_315 = dx_290 + (~cx_300 - 0x0001)
	Mem318[ss:bp_77 - 0x0008:word16] = Mem262[ss:bp_77 - 0x0008:word16] + (dx_315 + 0x0003)
	dx_316 = dx_315 + 0x0003
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A72:
	ptr32 es_di_151 = Mem93[ss:bp_77 - 0x0008:segptr32]
	word16 di_152 = (word16) es_di_151
	selector es_153 = SLICE(es_di_151, selector, 16)
	word16 cx_159 = 0xFFFF
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A:
	branch cx_159 == 0x0000 l0800_0A7C
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7A_1:
	di_152 = di_364 + 0x0001
	cx_159 = cx_159 - 0x0001
	word16 di_364 = di_152
	branch 0x00 == Mem93[es_153:di_364:byte] l0800_0A7A
// DataOut: al bp cx di es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0A7C:
	Mem174[ss:bp_77 - 0x0008:word16] = Mem93[ss:bp_77 - 0x0008:word16] + ~cx_159
	ptr32 es_bx_175 = Mem174[ss:bp_77 - 0x0008:segptr32]
	Mem189[ss:fp - 0x0012:word16] = ((int16) Mem174[es_bx_175:byte] << 0x08) + DPB(dx_316, 0x00, 8) + 0x0002
	Mem192[ss:fp - 0x0014:word16] = Mem189[ss:bp_77 - 0x0006:word16]
	Mem194[ss:fp - 0x0016:word16] = (word16) es_bx_175
	Mem197[ss:fp - 0x0018:word16] = Mem194[ss:bp_77 + 0x000A:word16]
	Mem200[ss:fp - 0x001A:word16] = Mem197[ss:bp_77 + 0x0008:word16]
	selector ds_202 = fn0800_B0F3(wArg00, wArg02, psegArg04, wArg06, psegArg08)
	Mem207[ss:fp - 0x0012:word16] = Mem200[ss:bp_77 - 0x0002:word16]
	Mem210[ss:fp - 0x0014:word16] = Mem207[ss:bp_77 - 0x0004:word16]
	selector ds_211
	return fn0800_4346(ds_202, wArg00, wArg02, out ds_211)
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ah:<invalid> ch:<invalid> -22(fp):0x0A6E -20(fp):ds -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_09A3_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> dl:<invalid> dh:0x00 dx:<invalid> bl:<invalid> bh:<invalid> si:<invalid> ds:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> ah:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_0ABC(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0004(16) Stack +0006(16)
fn0800_0ABC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16)

l0800_0ABC:
	fn0800_35A3(ds, wArg04, wArg06)
	Mem34[ss:fp - 0x0014:word16] = Mem0[ds:0x2A05:word16]
	Mem37[ss:fp - 0x0016:word16] = Mem34[ds:0x2A03:word16]
	Mem40[ss:fp - 0x0018:word16] = Mem37[ds:0x2A09:word16]
	Mem43[ss:fp - 0x001A:word16] = Mem40[ds:0x2A07:word16]
	word16 di_46
	word16 ax_47 = fn0800_0B79(fp - 0x0002, wArg02, di, wArg00, wArg02, wArg04, wArg06, out di_46)
	Mem57[ss:fp - 0x0014:word16] = (uint16) ((uint32) (uint16) ax_47 % 0x0064)
	Mem66[ss:fp - 0x0016:word16] = (uint16) ((uint32) (uint16) ax_47 /u 0x0064)
	Mem69[ss:fp - 0x0018:word16] = Mem66[ds:0x2A05:word16]
	Mem72[ss:fp - 0x001A:word16] = Mem69[ds:0x2A03:word16]
	Mem75[ss:fp - 0x001C:word16] = Mem72[ds:0x2A09:word16]
	Mem78[ss:fp - 0x001E:word16] = Mem75[ds:0x2A07:word16]
	Mem80[ss:fp - 0x0020:word16] = ss
	Mem83[ss:fp - 0x0022:word16] = fp - 0x0010
	Mem86[ss:fp - 0x0024:word16] = 0x0014
	Mem88[ss:fp - 0x0026:word16] = 0x0014
	Mem90[ss:fp - 0x0028:word16] = ds
	Mem93[ss:fp - 0x002A:word16] = 0x0866
	word16 di_94
	word16 si_95 = fn0800_B2EF(ds, wArg00, wArg02, out di_94)
	branch Mem93[ds:0x2A25:word16] == 0x0002 l0800_0B2E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0B2A:
	branch si_95 == 0x0000 l0800_0B47
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> ds:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B2E:
	Mem146[ss:fp - 0x0014:word16] = Mem93[ds:(si_95 << 0x0002) + 0x059B:word16]
	Mem149[ss:fp - 0x0016:word16] = Mem146[ds:(si_95 << 0x0002) + 0x0599:word16]
	Mem151[ss:fp - 0x0018:word16] = ds
	Mem154[ss:fp - 0x001A:word16] = 0x0889
	word16 di_155
	fn0800_B2EF(ds, wArg00, wArg02, out di_155)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> ds:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0B47:
	Mem105[ss:fp - 0x0014:word16] = ds
	Mem108[ss:fp - 0x0016:word16] = 0x0827
	word16 di_109
	fn0800_B2EF(ds, wArg00, wArg02, out di_109)
	word16 ax_112 = Mem108[ds:0x2A09:word16]
	word16 v30_114 = Mem108[ds:0x29F3:word16] + Mem108[ds:0x2A07:word16]
	Mem115[ds:0x29F3:word16] = v30_114
	Mem119[ds:0x29F5:word16] = Mem115[ds:0x29F5:word16] + ax_112 + (v30_114 <u 0x0000)
	word16 ax_120 = Mem119[ds:0x2A05:word16]
	word16 v32_122 = Mem119[ds:0x29EF:word16] + Mem119[ds:0x2A03:word16]
	Mem123[ds:0x29EF:word16] = v32_122
	Mem127[ds:0x29F1:word16] = Mem123[ds:0x29F1:word16] + ax_120 + (v32_122 <u 0x0000)
	Mem130[ds:0x2A13:word16] = Mem127[ds:0x2A13:word16] + 0x0001
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> ds:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp

fn0800_0ABC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> ds:<invalid> bh:<invalid> -42(fp):0x0866 -40(fp):ds -38(fp):0x0014 -36(fp):0x0014 -34(fp):fp - 0x0010 -32(fp):ss -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -2(fp):bp



word16 fn0800_0B79(word16 bp, word16 si, word16 di, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax di
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0B79_entry:
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B79:
	word16 bp_120 = fp - 0x0002
	branch (wArg02 | wArg04) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B84:
	branch (wArg06 | wArg08) == 0x0000 l0800_0B9E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0B8C:
	branch wArg04 >u wArg08 l0800_0BCE
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B97:
	branch wArg04 != wArg08 l0800_0B9E
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0006(16)

l0800_0B99:
	branch wArg02 >u wArg06 l0800_0BCE
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0BCE:
	ui32 ax_dx_73 = SEQ(Mem0[ss:bp_120 + 0x0006:word16], Mem0[ss:bp_120 + 0x0004:word16] - Mem0[ss:bp_120 + 0x0008:word16]) - Mem0[ss:bp_120 + 0x0008:ui32]
	word16 ax_74 = SLICE(ax_dx_73, word16, 16)
	word16 dx_75 = (word16) ax_dx_73
	branch ax_74 >u 0x0006 l0800_0BA2
// DataOut: bp di ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BDF:
	branch ax_74 != 0x0006 l0800_0BE7
// DataOut: bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE1:
	branch dx_75 >u 0x8DB8 l0800_0BA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BA2:
	Mem88[ss:fp - 0x0004:word16] = 0x0000
	Mem90[ss:fp - 0x0006:word16] = 0x000A
	Mem93[ss:fp - 0x0008:word16] = Mem90[ss:bp_120 + 0x0006:word16]
	Mem96[ss:fp - 0x000A:word16] = Mem93[ss:bp_120 + 0x0004:word16]
	word16 dx_97
	word16 bp_98
	word16 si_99
	word16 di_100
	word16 ax_101 = fn0800_8BC2(bp_120, si, di, bp, out dx_97, out bp_98, out si_99, out di_100)
	Mem103[ss:bp_98 + 0x0006:word16] = dx_97
	Mem104[ss:bp_98 + 0x0004:word16] = ax_101
	Mem110[ss:fp - 0x0004:word16] = 0x0000
	Mem112[ss:fp - 0x0006:word16] = 0x000A
	Mem115[ss:fp - 0x0008:word16] = Mem112[ss:bp_98 + 0x000A:word16]
	Mem118[ss:fp - 0x000A:word16] = Mem115[ss:bp_98 + 0x0008:word16]
	word16 dx_119
	word16 ax_123 = fn0800_8BC2(bp_98, si_99, di_100, bp, out dx_119, out bp_120, out si, out di)
	Mem125[ss:bp_120 + 0x000A:word16] = dx_119
	Mem126[ss:bp_120 + 0x0008:word16] = ax_123
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A
// LocalsOut: Local -0002(16)

l0800_0BE7:
	Mem130[ss:fp - 0x0004:word16] = Mem0[ss:bp_120 + 0x0006:word16]
	Mem133[ss:fp - 0x0006:word16] = Mem130[ss:bp_120 + 0x0004:word16]
	ui32 cx_bx_139 = SEQ(Mem133[ss:bp_120 + 0x0006:word16], Mem133[ss:bp_120 + 0x0004:word16] - Mem133[ss:bp_120 + 0x0008:word16]) - Mem133[ss:bp_120 + 0x0008:ui32]
	word16 dx_146
	word16 ax_147 = fn0800_8F18(0x2710, SLICE(cx_bx_139, word16, 16), 0x0000, (word16) cx_bx_139, out dx_146)
	Mem149[ss:fp - 0x0008:word16] = dx_146
	Mem151[ss:fp - 0x000A:word16] = ax_147
	word16 dx_152
	word16 bp_153
	word16 si_154
	word16 di_155
	return fn0800_8BC2(bp_120, si, di, bp, out dx_152, out bp_153, out si_154, out di_155)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> di:<invalid> bx:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x000A -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A

l0800_0B9E:
	return 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_0B79_exit:
// DataOut: ax di
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> di:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x000A 6(fp):<invalid> 8(fp):0x000A



word16 fn0800_0C08(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_0C08_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_0C08:
	word16 si_10 = wArg02
	word16 cx_11 = 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0C15:
	word16 ax_20 = (uint16) ((uint32) (uint16) si_10 /u 0x0002)
	si_10 = ax_20
	branch ax_20 != 0x0000 l0800_0C14
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C14:
	cx_11 = cx_11 + 0x0001
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_0C24:
	return cx_11
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp

fn0800_0C08_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> bx:0x0002 ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp



word16 fn0800_0C29(selector ds, word16 wArg02, word16 wArg04, byte bArg06, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0006(8)
fn0800_0C29_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(8)

l0800_0C29:
	byte dl_15
	byte al_16 = fn0800_97CC(ds, (int16) bArg06, out dl_15)
	word16 wLoc06_25 = wArg02
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C4F:
	branch Mem0[ptrLoc06:byte] == 0x00 l0800_0C5D
// DataOut: bx cl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C58:
	branch Mem0[ptrLoc06:byte] != al_16 l0800_0C4C
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Stack +0002(16)

l0800_0C4C:
	wLoc06_25 = wLoc06_25 + 0x0001
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16)

l0800_0C5D:
	word16 ax_39 = wLoc06_25 - wArg02
	byte dl_44
	*dlOut = (byte) (0x0000 - (ax_39 <u 0x0000))
	return ax_39
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0C29_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> ah:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_0C6C(selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_0C6C_entry:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C6C:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C88:
	branch Mem0[ptrArg02:byte] != 0x00 l0800_0C71
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C71:
	Mem43[ptrArg02:byte] = fn0800_97CC(ds, (int16) Mem0[ptrArg02:byte], out dl)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_0C91:
	return dl
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_0C6C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_0C93(word16 bp, selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_0C93_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_0C93:
	fn0800_3509(ds, wArg02, wArg04)
	Mem32[ss:fp - 0x006E:word16] = ss
	word16 si_203 = 0x2714
	selector es_33 = Mem32[ss:fp - 0x006E:selector]
	word16 di_208 = fp - 0x0068
	word16 ax_196 = 0x0000
	word16 cx_209 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_0CB9:
	branch cx_209 == 0x0000 l0800_0CBB
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CB9_1:
	di_208 = di_208 + 0x0001
	cx_209 = cx_209 - 0x0001
	branch 0x00 == Mem32[es_33:di_208:byte] l0800_0CB9
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBB:
	word16 cx_205 = ~cx_209
	word16 di_204 = di_208 - cx_205
	byte SCZO_50 = cond(di_204)
	byte Z_201 = SCZO_50
	byte C_202 = SCZO_50
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x2714 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF:
	branch cx_205 == 0x0000 l0800_0CC1
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CBF_2:
	byte SCZO_199 = cond(Mem32[ds:si_211:byte] - Mem32[es_33:di_212:byte])
	Z_201 = SCZO_199 (alias)
	C_202 = SCZO_199 (alias)
	si_203 = si_211 + 0x0001
	di_204 = di_212 + 0x0001
	cx_205 = cx_205 - 0x0001
	word16 si_211 = si_203
	word16 di_212 = di_204
	branch Mem32[ds:si_211:byte] != Mem32[es_33:di_212:byte] l0800_0CBF
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC1:
	branch Z_201 l0800_0CC8
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC3:
	word16 ax_193 = 0x0000 - C_202
	ax_196 = ax_193 - 0xFFFF - (ax_193 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CC8:
	branch ax_196 == 0x0000 l0800_0D0D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CCC:
	Mem107[ss:fp - 0x006E:word16] = ss
	Mem110[ss:fp - 0x0070:word16] = fp - 0x0068
	Mem112[ss:fp - 0x0072:word16] = ds
	Mem115[ss:fp - 0x0074:word16] = 0x088F
	word16 di_116
	fn0800_B2EF(ds, wArg00, wArg02, out di_116)
	Mem120[ss:fp - 0x006E:word16] = ss
	Mem125[ss:fp - 0x006E:word16] = Mem120[ss:fp - 0x006E:selector]
	Mem127[ss:fp - 0x0070:word16] = ds
	selector es_128 = Mem127[ss:fp - 0x0070:selector]
	Mem131[ss:fp - 0x0070:word16] = fp - 0x0068
	word16 di_134 = Mem131[ss:fp - 0x0070:word16]
	selector es_137 = Mem131[ss:fp - 0x006E:selector]
	Mem140[ss:fp - 0x006E:word16] = es_128
	Mem142[ss:fp - 0x0070:word16] = 0x2714
	word16 cx_146 = 0xFFFF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -116(fp):fp - 0x0068 -114(fp):ss -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5:
	branch cx_146 == 0x0000 l0800_0CF7
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF5_1:
	di_134 = di_134 + 0x0001
	cx_146 = cx_146 - 0x0001
	branch 0x00 == Mem142[es_137:di_134:byte] l0800_0CF5
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0CF7:
	word16 di_161 = Mem142[ss:fp - 0x0070:word16]
	selector es_164 = Mem142[ss:fp - 0x006E:selector]
	Mem167[ss:fp - 0x006E:word16] = ds
	word16 cx_153 = ~cx_146
	word16 cx_155 = cx_153 >>u 0x0001
	word16 si_160 = di_134 - cx_153
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> al:0x00 bx:<invalid> ah:0x00 bl:<invalid> ch:<invalid> bh:<invalid> ds:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06:
	branch cx_155 == 0x0000 l0800_0D08
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D08:
	word16 cx_177 = cx_155 * 0x0002 + (cx_153 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0A:
	branch cx_177 == 0x0000 l0800_0D0C
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0C:
	ds = Mem167[ss:fp - 0x006E:selector]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D0D:
	Mem86[ss:fp - 0x006E:word16] = Mem32[ss:fp + 0x0004:word16]
	Mem89[ss:fp - 0x0070:word16] = Mem86[ss:fp + 0x0002:word16]
	Mem91[ss:fp - 0x0072:word16] = ds
	Mem94[ss:fp - 0x0074:word16] = 0x089E
	word16 di_96
	fn0800_B2EF(ds, wArg00, wArg02, out di_96)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

fn0800_0C93_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp

l0800_0D0A_1:
	Mem183[es_164:di_161:byte] = Mem167[es_137:si_160:byte]
	si_160 = si_160 + 0x0001
	di_161 = di_161 + 0x0001
	cx_177 = cx_177 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_0D06_2:
	Mem173[es_164:di_161:word16] = Mem167[es_137:si_160:word16]
	si_160 = si_160 + 0x0002
	di_161 = di_161 + 0x0002
	cx_155 = cx_155 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



byte fn0800_0D24(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_0D24_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_0D24:
	selector ds_19 = fn0800_0DA9(ds, Mem0[ds:0x29DB:word16], Mem0[ds:0x29DD:word16], 0x4477, ds)
	selector ds_33 = fn0800_0DA9(ds_19, Mem0[ds_19:0x29D7:word16], Mem0[ds_19:0x29D9:word16], 0x4412, ds_19)
	selector ds_47 = fn0800_0DA9(ds_33, Mem0[ds_33:0x29D3:word16], Mem0[ds_33:0x29D5:word16], 0x43AD, ds_33)
	word16 di_65
	fn0800_B2EF(ds_47, 0x08A2, ds_47, out di_65)
	branch Mem0[ptrArg04:byte] == 0x00 l0800_0D92
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_0D83:
	word16 di_110
	fn0800_B2EF(ds_47, 0x08A6, ds_47, out di_110)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -10(fp):0x08A2 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_0D92:
	word16 di_81
	fn0800_B2EF(ds_47, 0x0827, ds_47, out di_81)
	word16 si_88
	selector ds_89
	return fn0800_8B5A(ds_47, 0x0001, out si_88, out ds_89)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0D24_exit:
// DataOut: di dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:bx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:0x01 di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0827 -4(fp):0x0001 -2(fp):bp



selector fn0800_0DA9(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_0DA9_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0DA9:
	branch (wArg02 | wArg04) == 0x0000 l0800_0DCC
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_0DB4:
	byte dl_38
	word16 di_39
	byte al_41 = fn0800_A614(ds, DPB(ptrLoc06, wArg02, 0), wArg04, out dl_38, out di_39, out ds)
	fn0800_8F7F(al_41, ds, DPB(ptrLoc06, wArg06, 0))
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_0DCC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_0DA9_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_0DCE(selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds si
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_0DCE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DCE:
	word16 di_13
	fn0800_B2EF(ds, 0x07E8, ds, out di_13)
	word16 si_21
	selector ds_22
	fn0800_8B5A(ds, 0x0000, out si_21, out ds_22)
	return bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_0DCE_exit:
// DataOut: bp ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):0x07E8 -6(fp):ds -4(fp):0x0121 -2(fp):<invalid>



byte fn0800_0DE8(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_0DE8_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_0DE8:
	word16 di_31
	fn0800_B2EF(ds, 0x08AC, ds, out di_31)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_0E2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_0E1B:
	word16 di_576
	fn0800_B2EF(ds, 0x08BA, ds, out di_576)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E2A:
	branch Mem0[ds:0x2A1F:word16] == 0x0000 l0800_0E3C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E31:
	word16 di_564
	fn0800_B2EF(ds, 0x08CF, ds, out di_564)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_0E3C:
	word16 di_50
	fn0800_B2EF(ds, 0x08DC, ds, out di_50)
	selector ds_62
	fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds_62)
	Mem67[ss:fp - 0x0004:word16] = ds_62
	Mem71[ss:fp - 0x0006:word16] = 0x08DF
	Mem73[ss:fp - 0x0008:word16] = ds_62
	Mem76[ss:fp - 0x000A:word16] = 0x4477
	word16 di_81
	word16 si_82 = fn0800_37BE(ds_62, wArg00, wArg02, wArg04, wArg06, out di_81)
	Mem86[ss:fp - 0x0004:word16] = ds_62
	Mem89[ss:fp - 0x0006:word16] = 0x08EC
	Mem91[ss:fp - 0x0008:word16] = ds_62
	Mem94[ss:fp - 0x000A:word16] = 0x4477
	word16 di_111
	selector ds_114
	word16 si_112 = fn0800_4234(bp, si_82, di_81, ds_62, wArg00, wArg02, wArg04, wArg06, out di_111, out ds_114)
	Mem101[ds_114:0x29DD:word16] = dx
	Mem102[ds_114:0x29DB:word16] = 0x4477
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08AC -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10F4:
	Mem118[ss:fp - 0x0004:word16] = ds_114
	Mem121[ss:fp - 0x0006:word16] = 0x4541
	byte dl_123
	selector ds_124
	branch fn0800_2DE2(bp, si_112, ds_114, ptrArg00, wArg02, out dl_123, out ds_124) == 0x0000 l0800_1106
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1106:
	Mem535[ss:fp - 0x0004:word16] = Mem121[ds_124:0x29DD:word16]
	Mem538[ss:fp - 0x0006:word16] = Mem535[ds_124:0x29DB:word16]
	byte dl_539
	word16 di_540
	selector ds_541
	fn0800_A614(ds_124, ptrArg00, wArg02, out dl_539, out di_540, out ds_541)
	Mem546[ss:fp - 0x0004:word16] = ds_541
	Mem550[ss:fp - 0x0006:word16] = 0x4477
	return fn0800_8F7F(0x77, ds_541, ptrArg00)
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_0DE8_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_1103:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E7C:
	bp = fn0800_3764(ds_124)
	*bpOut = bp
	branch fn0800_388C(bp, si_112, di_111, ds_124, out si_112, out ds_114) != 0x0000 l0800_0E89
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E89:
	Mem140[ss:fp - 0x0004:word16] = ds_114
	Mem143[ss:fp - 0x0006:word16] = 0x4541
	fn0800_0C93(bp, ds_114, wArg00, wArg02)
	Mem148[ss:fp - 0x0004:word16] = Mem143[ds_114:0x29E5:word16]
	Mem151[ss:fp - 0x0006:word16] = Mem148[ds_114:0x29E3:word16]
	selector ds_152
	word16 ax_153 = fn0800_4194(ds_114, wArg00, wArg02, out ds_152)
	Mem155[ds_152:0x2A09:word16] = dx
	Mem156[ds_152:0x2A07:word16] = ax_153
	Mem157[ds_152:0x2A05:word16] = dx
	Mem158[ds_152:0x2A03:word16] = ax_153
	branch Mem158[ds_152:0x2A09:word16] >u 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EB9:
	branch Mem158[ds_152:0x2A09:word16] != 0x0000 l0800_0EC2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EBB:
	branch Mem158[ds_152:0x2A07:word16] >u 0x0012 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC2:
	branch Mem158[ds_152:0x2A15:word16] != 0x0000 l0800_0ECF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ECF:
	word16 ax_296 = fn0800_3992(bp, ds_152, out si_112, out ds_152)
	branch ax_296 == 0x0000 l0800_0EDC
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EDC:
	word16 bx_302 = Mem158[ds_152:0x2A23:word16]
	branch bx_302 <=u 0x0005 l0800_0EE8
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE8:
	switch (bx_302 << 0x0001) { l0800_0FF4 l0800_0EEF l0800_1002 l0800_0FFB l0800_0FCC l0800_0FED }
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FED:
	si_112 = fn0800_67BF(bp, ds_152, out ds_152)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FCC:
	Mem509[ss:fp - 0x0004:word16] = Mem158[ds_152:0x29E5:word16]
	Mem512[ss:fp - 0x0006:word16] = Mem509[ds_152:0x29E3:word16]
	selector ds_513
	branch fn0800_3F0A(bp, ds_152, wArg00, wArg02, out ds_513) != 0x4D5A l0800_0FE6
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FE6:
	si_112 = fn0800_669C(bp, ds_513, out ds_152)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dx:<invalid> cl:0x08 ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FDF:
	si_112 = fn0800_5E64(bp, ds_513, out ds_152)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> dx:<invalid> cl:0x08 ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FFB:
	si_112 = fn0800_73AC(ds_152, out bp, out ds_152)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1002:
	si_112 = fn0800_741D(bp, ds_152, out ds_152)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EEF:
	branch Mem158[ds_152:0x2A09:word16] <u 0x0000 l0800_0F1F
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EF6:
	branch Mem158[ds_152:0x2A09:word16] != 0x0000 l0800_0EFF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EF8:
	branch Mem158[ds_152:0x2A07:word16] <u 0x0012 l0800_0F1F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EFF:
	Mem479[ss:fp - 0x0004:word16] = Mem158[ds_152:0x29E5:word16]
	Mem482[ss:fp - 0x0006:word16] = Mem479[ds_152:0x29E3:word16]
	word16 di_484
	word16 ax_491 = fn0800_8CAA(ax_296, 0x08, fn0800_3F58(bp, ds_152, wArg00, wArg02, out si_112, out di_484, out ds_152), si, out dx)
	branch dx != 0x0052 l0800_0F1F
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F17:
	branch ax_491 != 0x4E43 l0800_0F1F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F1C:
	si_112 = 0x0004
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F1F:
	branch si_112 == 0x0000 l0800_0F26
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F26:
	Mem378[ss:fp - 0x0004:word16] = Mem158[ds_152:0x2A09:word16]
	Mem381[ss:fp - 0x0006:word16] = Mem378[ds_152:0x2A07:word16]
	Mem384[ss:fp - 0x0008:word16] = Mem381[ds_152:0x2A09:word16]
	Mem387[ss:fp - 0x000A:word16] = Mem384[ds_152:0x2A07:word16]
	ds_152 = fn0800_75EA(bp, ds_152, wArg00, wArg02, wArg04, wArg06)
	word16 ax_390 = Mem387[ds_152:0x2A05:word16]
	dx = Mem387[ds_152:0x2A03:word16]
	branch ax_390 >=u Mem387[ds_152:0x2A09:word16] l0800_0F4C
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F4C:
	branch ax_390 != Mem387[ds_152:0x2A09:word16] l0800_0F57
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F4E:
	branch dx >=u Mem387[ds_152:0x2A07:word16] l0800_0F57
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F57:
	branch Mem387[ds_152:0x2A15:word16] != 0x0000 l0800_0F61
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F61:
	Mem403[ss:fp - 0x0004:word16] = Mem387[ds_152:0x29E5:word16]
	Mem406[ss:fp - 0x0006:word16] = Mem403[ds_152:0x29E3:word16]
	selector ds_407 = fn0800_BA67(ds_152, ptrArg00, wArg02)
	Mem412[ss:fp - 0x0004:word16] = Mem406[ds_407:0x29E1:word16]
	Mem415[ss:fp - 0x0006:word16] = Mem412[ds_407:0x29DF:word16]
	selector ds_416 = fn0800_BA67(ds_407, ptrArg00, wArg02)
	Mem421[ss:fp - 0x0004:word16] = Mem415[ds_416:0x29E1:word16]
	Mem424[ss:fp - 0x0006:word16] = Mem421[ds_416:0x29DF:word16]
	Mem428[ss:fp - 0x0008:word16] = 0x524E
	Mem430[ss:fp - 0x000A:word16] = 0x4300
	selector ds_431
	fn0800_409C(bp, ds_416, wArg02, wArg04, wArg06, out ds_431)
	Mem437[ss:fp - 0x0004:word16] = Mem430[ds_431:0x29E1:word16]
	Mem440[ss:fp - 0x0006:word16] = Mem437[ds_431:0x29DF:word16]
	Mem443[ss:fp - 0x0008:word16] = Mem440[ds_431:0x2A09:word16]
	Mem446[ss:fp - 0x000A:word16] = Mem443[ds_431:0x2A07:word16]
	selector ds_447
	fn0800_409C(bp, ds_431, wArg02, wArg04, wArg06, out ds_447)
	Mem453[ss:fp - 0x0004:word16] = Mem446[ds_447:0x2A09:word16]
	Mem456[ss:fp - 0x0006:word16] = Mem453[ds_447:0x2A07:word16]
	Mem459[ss:fp - 0x0008:word16] = Mem456[ds_447:0x29E1:word16]
	Mem462[ss:fp - 0x000A:word16] = Mem459[ds_447:0x29DF:word16]
	Mem465[ss:fp - 0x000C:word16] = Mem462[ds_447:0x29E5:word16]
	Mem468[ss:fp - 0x000E:word16] = Mem465[ds_447:0x29E3:word16]
	fn0800_3B0A(bp, ds_447, wArg08, wArg0A, out ds_152)
	dx = 0x4300
	si_112 = 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F5E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F54:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F49:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0F23:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0FF4:
	si_112 = fn0800_6AD4(bp, ds_152, out ds_152)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EE5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1007:
	Mem316[ss:fp - 0x0004:word16] = Mem158[ds_152:0x29E1:word16]
	Mem319[ss:fp - 0x0006:word16] = Mem316[ds_152:0x29DF:word16]
	word16 ax_321 = fn0800_4194(ds_152, wArg00, wArg02, out ds_152)
	Mem323[ds_152:0x2A05:word16] = dx
	Mem324[ds_152:0x2A03:word16] = ax_321
	word16 ax_325 = Mem324[ds_152:0x2A05:word16]
	dx = Mem324[ds_152:0x2A03:word16]
	branch ax_325 <u Mem324[ds_152:0x2A09:word16] l0800_1049
// DataOut: bp ds dx si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1029:
	branch ax_325 != Mem324[ds_152:0x2A09:word16] l0800_1031
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_102B:
	branch dx <u Mem324[ds_152:0x2A07:word16] l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1031:
	branch Mem324[ds_152:0x2A15:word16] != 0x0000 l0800_1049
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1038:
	dx = Mem324[ds_152:0x2A07:word16]
	Mem348[ds_152:0x2A05:word16] = Mem324[ds_152:0x2A09:word16]
	Mem349[ds_152:0x2A03:word16] = dx
	si_112 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1049:
	branch si_112 != 0x0004 l0800_105C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_104E:
	dx = Mem324[ds_152:0x2A07:word16]
	Mem341[ds_152:0x2A05:word16] = Mem324[ds_152:0x2A09:word16]
	Mem342[ds_152:0x2A03:word16] = dx
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0ED6:
	si_112 = 0x000E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> cl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0EC9:
	si_112 = 0x0003
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_105C:
	branch Mem158[ds_152:0x427E:byte] == 0x00 l0800_10B7
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1063:
	branch si_112 == 0x0003 l0800_106D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1068:
	branch si_112 != 0x0004 l0800_10B7
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_106D:
	dx = Mem158[ds_152:0x2A07:word16]
	Mem244[ds_152:0x2A05:word16] = Mem158[ds_152:0x2A09:word16]
	Mem245[ds_152:0x2A03:word16] = dx
	Mem248[ss:fp - 0x0004:word16] = Mem245[ds_152:0x29E5:word16]
	Mem251[ss:fp - 0x0006:word16] = Mem248[ds_152:0x29E3:word16]
	selector ds_252 = fn0800_BA67(ds_152, ptrArg00, wArg02)
	Mem257[ss:fp - 0x0004:word16] = Mem251[ds_252:0x29E1:word16]
	Mem260[ss:fp - 0x0006:word16] = Mem257[ds_252:0x29DF:word16]
	selector ds_261 = fn0800_BA67(ds_252, ptrArg00, wArg02)
	Mem266[ss:fp - 0x0004:word16] = Mem260[ds_261:0x2A09:word16]
	Mem269[ss:fp - 0x0006:word16] = Mem266[ds_261:0x2A07:word16]
	Mem272[ss:fp - 0x0008:word16] = Mem269[ds_261:0x29E1:word16]
	Mem275[ss:fp - 0x000A:word16] = Mem272[ds_261:0x29DF:word16]
	Mem278[ss:fp - 0x000C:word16] = Mem275[ds_261:0x29E5:word16]
	Mem281[ss:fp - 0x000E:word16] = Mem278[ds_261:0x29E3:word16]
	fn0800_3B0A(bp, ds_261, wArg08, wArg0A, out ds_152)
	si_112 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10B7:
	Mem190[ss:fp - 0x0004:word16] = Mem158[ds_152:0x29E5:word16]
	Mem193[ss:fp - 0x0006:word16] = Mem190[ds_152:0x29E3:word16]
	byte dl_194
	word16 di_195
	selector ds_196
	fn0800_A614(ds_152, ptrArg00, wArg02, out dl_194, out di_195, out ds_196)
	Mem202[ss:fp - 0x0004:word16] = Mem193[ds_196:0x29E1:word16]
	Mem205[ss:fp - 0x0006:word16] = Mem202[ds_196:0x29DF:word16]
	byte dl_206
	selector ds_208
	fn0800_A614(ds_196, ptrArg00, wArg02, out dl_206, out di_111, out ds_208)
	branch si_112 <= 0x0002 l0800_10E5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E5:
	si_112 = fn0800_37DF(bp, ds_208, out ds_208)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10D8:
	Mem229[ss:fp - 0x0004:word16] = ds_208
	Mem233[ss:fp - 0x0006:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_208, ptrArg00)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_10E8:
	Mem219[ss:fp - 0x0004:word16] = ds_208
	Mem222[ss:fp - 0x0006:word16] = 0x4541
	Mem224[ss:fp - 0x0008:word16] = si_112
	ds_114 = fn0800_0ABC(bp, ds_208, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> si:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_0E86:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_112D(word16 bp, word16 si, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_112D_entry:
	*bpOut = bp
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_112D:
	word16 di_31
	fn0800_B2EF(ds, 0x08F0, ds, out di_31)
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_116F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0008(16) Local -000A(16)

l0800_1160:
	word16 di_314
	fn0800_B2EF(ds, 0x08FE, ds, out di_314)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_116F:
	word16 di_169
	word16 si_117 = fn0800_B2EF(ds, 0x0913, ds, out di_169)
	branch Mem0[ds:0x2A25:word16] == 0x0001 l0800_1184
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: fp(16) Local -0002(16) Local -0008(16)

l0800_1184:
	si_117 = fn0800_3678(bp, ds, DPB(ptrLoc06, 0x427E, 0), ds, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1181:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0913 -4(fp):ds -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12C2:
	Mem62[ss:fp - 0x0004:word16] = ds
	Mem66[ss:fp - 0x0006:word16] = 0x4541
	byte dl_69
	selector ds_70
	branch fn0800_2DE2(bp, si_117, ds, ptrArg00, wArg02, out dl_69, out ds_70) == 0x0000 l0800_12D4
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12D4:
	return dl_69
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_112D_exit:
// DataOut: bp dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

l0800_12D1:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1192:
	bp = fn0800_3764(ds_70)
	*bpOut = bp
	branch fn0800_388C(bp, si_117, di_169, ds_70, out si_117, out ds) != 0x0000 l0800_119F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> di:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119F:
	Mem86[ss:fp - 0x0004:word16] = ds
	Mem89[ss:fp - 0x0006:word16] = 0x4541
	fn0800_0C93(bp, ds, wArg00, wArg02)
	Mem95[ss:fp - 0x0004:word16] = Mem89[ds:0x29E5:word16]
	Mem98[ss:fp - 0x0006:word16] = Mem95[ds:0x29E3:word16]
	selector ds_119
	word16 ax_100 = fn0800_4194(ds, wArg00, wArg02, out ds_119)
	Mem103[ds_119:0x2A05:word16] = dx
	Mem104[ds_119:0x2A03:word16] = ax_100
	branch false l0800_11CF
// DataOut: ax bp ds si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C3:
	branch false l0800_11CA
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11C5:
	branch ax_100 >=u 0x0012 l0800_11CF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CF:
	word16 bx_218 = Mem104[ds_119:0x2A23:word16]
	branch bx_218 >u 0x0005 l0800_1243
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11D8:
	switch (bx_218 << 0x0001) { l0800_1230 l0800_11DF l0800_123E l0800_1237 l0800_1208 l0800_1229 }
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1229:
	si_117 = fn0800_4BB1(bp, ds_119, out bp, out ds_119)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1208:
	Mem261[ss:fp - 0x0004:word16] = Mem104[ds_119:0x29E5:word16]
	Mem264[ss:fp - 0x0006:word16] = Mem261[ds_119:0x29E3:word16]
	selector ds_265
	branch fn0800_3F0A(bp, ds_119, wArg00, wArg02, out ds_265) != 0x4D5A l0800_1222
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1222:
	si_117 = fn0800_4B97(bp, ds_265, out bp, out ds_119)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> di:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_121B:
	si_117 = fn0800_46FE(bp, ds_265, out ds_119)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> di:<invalid> bp:<invalid> si:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1237:
	si_117 = fn0800_518F(bp, ds_119, out bp, out ds_119)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_123E:
	si_117 = fn0800_51A9(bp, ds_119, out ds_119)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11DF:
	Mem228[ss:fp - 0x0004:word16] = Mem104[ds_119:0x29E5:word16]
	Mem231[ss:fp - 0x0006:word16] = Mem228[ds_119:0x29E3:word16]
	word16 si_232
	word16 di_233
	word16 ax_240 = fn0800_8CAA(ax_100, 0x08, fn0800_3F58(bp, ds_119, wArg00, wArg02, out si_232, out di_233, out ds_119), si, out dx)
	branch dx != 0x0052 l0800_1203
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11F7:
	branch ax_240 != 0x4E43 l0800_1203
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1203:
	si_117 = 0x0007
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11FC:
	si_117 = fn0800_5374(bp, ds_119, out ds_119)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1230:
	si_117 = fn0800_4C55(bp, ds_119, out ds_119)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_11CA:
	si_117 = 0x0007
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1243:
	Mem123[ss:fp - 0x0004:word16] = Mem104[ds_119:0x29E1:word16]
	Mem126[ss:fp - 0x0006:word16] = Mem123[ds_119:0x29DF:word16]
	selector ds_127
	word16 ax_128 = fn0800_4194(ds_119, wArg00, wArg02, out ds_127)
	Mem131[ds_127:0x2A09:word16] = dx
	Mem132[ds_127:0x2A07:word16] = ax_128
	Mem135[ss:fp - 0x0004:word16] = Mem132[ds_127:0x29E5:word16]
	Mem138[ss:fp - 0x0006:word16] = Mem135[ds_127:0x29E3:word16]
	selector ds_139
	word16 ax_140 = fn0800_4194(ds_127, wArg00, wArg02, out ds_139)
	Mem142[ds_139:0x2A05:word16] = dx
	Mem143[ds_139:0x2A03:word16] = ax_140
	branch si_117 == 0x0000 l0800_127F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1271:
	dx = Mem143[ds_139:0x2A03:word16]
	Mem215[ds_139:0x2A09:word16] = Mem143[ds_139:0x2A05:word16]
	Mem216[ds_139:0x2A07:word16] = dx
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_127F:
	Mem152[ss:fp - 0x0004:word16] = Mem143[ds_139:0x29E5:word16]
	Mem155[ss:fp - 0x0006:word16] = Mem152[ds_139:0x29E3:word16]
	byte dl_156
	word16 di_157
	selector ds_158
	fn0800_A614(ds_139, ptrArg00, wArg02, out dl_156, out di_157, out ds_158)
	Mem164[ss:fp - 0x0004:word16] = Mem155[ds_158:0x29E1:word16]
	Mem167[ss:fp - 0x0006:word16] = Mem164[ds_158:0x29DF:word16]
	byte dl_168
	selector ds_170
	fn0800_A614(ds_158, ptrArg00, wArg02, out dl_168, out di_169, out ds_170)
	branch Mem167[ds_170:0x2A25:word16] == 0x0002 l0800_12A6
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> dl:<invalid> di:<invalid> bp:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A2:
	branch si_117 == 0x0000 l0800_12B3
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B3:
	si_117 = fn0800_37DF(bp, ds_170, out ds_170)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12A6:
	Mem199[ss:fp - 0x0004:word16] = ds_170
	Mem203[ss:fp - 0x0006:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_170, ptrArg00)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_12B6:
	Mem184[ss:fp - 0x0004:word16] = ds_170
	Mem187[ss:fp - 0x0006:word16] = 0x4541
	Mem189[ss:fp - 0x0008:word16] = si_117
	ds = fn0800_0ABC(bp, ds_170, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> bp:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_119C:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bx:<invalid> ax:<invalid> es:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> dl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -14(fp):0x08F0 -12(fp):ds -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)



byte fn0800_12E2(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_12E2_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_12E2:
	word16 di_35
	fn0800_B2EF(ds, 0x0916, ds, out di_35)
	word16 bp_108 = fp - 0x0002
	branch Mem0[ds:0x2E4F:word16] == 0x0000 l0800_1321
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0092(16) Local -0094(16)

l0800_1312:
	word16 di_1462
	fn0800_B2EF(ds, 0x0925, ds, out di_1462)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):0x4348 -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0090(16) Local -0094(16)

l0800_1321:
	word16 di_45
	word16 si_46 = fn0800_B2EF(ds, 0x093A, ds, out di_45)
	word16 dx_59
	word16 di_1271
	word16 si_1272
	selector ds_1269
	word16 ax_63 = fn0800_AA7E(si_46, di_45, ds, 0x4348, ds, 0x093D, ds, out dx_59, out si_1272, out di_1271, out ds_1269)
	Mem65[ds_1269:0x29D1:word16] = dx_59
	Mem66[ds_1269:0x29CF:word16] = ax_63
	word16 ax_67 = Mem66[ds_1269:0x2A25:word16]
	branch ax_67 == 0x0003 l0800_1353
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x008A bp:fp - 0x0002 ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1353:
	branch (Mem66[ds_1269:0x29CF:word16] | Mem66[ds_1269:0x29D1:word16]) == 0x0000 l0800_135F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_135F:
	Mem1439[ss:fp - 0x008C:word16] = ds_1269
	Mem1442[ss:fp - 0x008E:word16] = 0x4348
	Mem1445[ss:fp - 0x0090:word16] = 0x0007
	word16 si_1447
	word16 di_1448
	fn0800_0D24(ds_1269, wArg00, ptrArg02, wArg04, out si_1447, out di_1448, out ds_1269)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_135C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_134B:
	branch ax_67 == 0x0004 l0800_1371
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1371:
	branch (Mem66[ds_1269:0x29CF:word16] | Mem66[ds_1269:0x29D1:word16]) == 0x0000 l0800_13C6
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_137A:
	Mem1389[ss:fp - 0x008C:word16] = Mem66[ds_1269:0x29D1:word16]
	Mem1392[ss:fp - 0x008E:word16] = Mem1389[ds_1269:0x29CF:word16]
	branch fn0800_3E27(fp - 0x0002, ds_1269, wArg00, wArg02, out si_1272, out di_1271, out ds_1269) != 0x4D5A l0800_13BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13BA:
	Mem1431[ds_1269:0x29D1:word16] = 0x0000
	Mem1432[ds_1269:0x29CF:word16] = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_138D:
	Mem1402[ss:fp - 0x008C:word16] = 0x0002
	Mem1407[ss:fp - 0x008E:word16] = 0x0000
	Mem1409[ss:fp - 0x0090:word16] = 0x0000
	Mem1412[ss:fp - 0x0092:word16] = Mem1409[ds_1269:0x29D1:word16]
	Mem1415[ss:fp - 0x0094:word16] = Mem1412[ds_1269:0x29CF:word16]
	fn0800_ACB3(ds_1269, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1269)
	Mem1422[ss:fp - 0x008C:word16] = Mem1415[ds_1269:0x29D1:word16]
	Mem1425[ss:fp - 0x008E:word16] = Mem1422[ds_1269:0x29CF:word16]
	word16 ax_1426 = fn0800_AD2F(ds_1269, ptrArg00, wArg02)
	Mem1429[ds_1269:0x29ED:word16] = dx_59
	Mem1430[ds_1269:0x29EB:word16] = ax_1426
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:0x08 dx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13C6:
	branch (Mem66[ds_1269:0x29CF:word16] | Mem66[ds_1269:0x29D1:word16]) != 0x0000 l0800_13F2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13CF:
	Mem1369[ss:fp - 0x008C:word16] = ds_1269
	Mem1372[ss:fp - 0x008E:word16] = 0x0941
	Mem1374[ss:fp - 0x0090:word16] = ds_1269
	Mem1377[ss:fp - 0x0092:word16] = 0x4348
	word16 di_1378
	fn0800_4234(fp - 0x0002, si_1272, di_1271, ds_1269, wArg00, wArg02, wArg04, wArg06, out di_1378, out ds_1269)
	Mem1383[ds_1269:0x29D1:word16] = dx_59
	Mem1384[ds_1269:0x29CF:word16] = 0x4348
	Mem1385[ds_1269:0x29ED:word16] = 0x0000
	Mem1386[ds_1269:0x29EB:word16] = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> es:<invalid> al:<invalid> dx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_13F2:
	Mem1282[ss:fp - 0x0070:byte] = 0x52
	Mem1283[ss:fp - 0x006F:byte] = 0x4E
	Mem1284[ss:fp - 0x006E:byte] = 0x43
	Mem1285[ss:fp - 0x006D:byte] = 0x41
	Mem1286[ss:fp - 0x006C:byte] = 0x00
	Mem1287[ss:fp - 0x006B:byte] = 0x0C
	Mem1288[ss:fp - 0x0068:byte] = 0x00
	Mem1289[ss:fp - 0x0067:byte] = 0x0C
	Mem1290[ss:fp - 0x0066:byte] = 0x00
	Mem1291[ss:fp - 0x0065:byte] = 0x00
	Mem1296[ss:fp - 0x008C:word16] = 0x0000
	Mem1299[ss:fp - 0x008E:word16] = 0x0004
	Mem1301[ss:fp - 0x0090:word16] = ss
	Mem1304[ss:fp - 0x0092:word16] = fp - 0x0068
	Mem1310[ss:fp - 0x006A:byte] = (byte) (fn0800_2CCF(ds_1269, ptrArg00, wArg04, wArg06) >>u 0x08)
	Mem1315[ss:fp - 0x008C:word16] = 0x0000
	Mem1318[ss:fp - 0x008E:word16] = 0x0004
	Mem1320[ss:fp - 0x0090:word16] = ss
	Mem1323[ss:fp - 0x0092:word16] = fp - 0x0068
	Mem1327[ss:fp - 0x0069:byte] = (byte) fn0800_2CCF(ds_1269, ptrArg00, wArg04, wArg06)
	Mem1330[ss:fp - 0x008C:word16] = Mem1327[ds_1269:0x29D1:word16]
	Mem1333[ss:fp - 0x008E:word16] = Mem1330[ds_1269:0x29CF:word16]
	Mem1340[ss:fp - 0x0090:word16] = 0x0000
	Mem1342[ss:fp - 0x0092:word16] = 0x000C
	Mem1344[ss:fp - 0x0094:word16] = ss
	Mem1347[ss:fp - 0x0096:word16] = fp - 0x0070
	selector ds_1348
	fn0800_4152(ds_1269, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_1348)
	Mem1354[ss:fp - 0x008C:word16] = Mem1347[ds_1348:0x29D1:word16]
	Mem1357[ss:fp - 0x008E:word16] = Mem1354[ds_1348:0x29CF:word16]
	Mem1360[ss:fp - 0x0090:word16] = Mem1357[ds_1348:0x29ED:word16]
	Mem1363[ss:fp - 0x0092:word16] = Mem1360[ds_1348:0x29EB:word16]
	fn0800_409C(fp - 0x0002, ds_1348, wArg02, wArg04, wArg06, out ds_1269)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1350:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -150(fp):0x0916 -148(fp):ds -146(fp):0x4348 -144(fp):ds -142(fp):0x093D -140(fp):ds -138(fp):di -136(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1478:
	Mem87[ss:fp - 0x008C:word16] = 0x0000
	selector ds_104 = fn0800_1CF6(fp - 0x0002, ds_1269)
	word16 si_107 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1527:
	Mem112[ss:fp - 0x008C:word16] = ds_104
	Mem115[ss:fp - 0x008E:word16] = 0x4541
	byte dl_118
	branch fn0800_2DE2(bp_108, si_107, ds_104, ptrArg00, wArg02, out dl_118, out ds_104) == 0x0000 l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1536:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1486:
	Mem1139[ss:fp - 0x008C:word16] = ds_104
	Mem1142[ss:fp - 0x008E:word16] = 0x4541
	Mem1144[ss:fp - 0x0090:word16] = ss
	Mem1147[ss:fp - 0x0092:word16] = bp_108 - 0x006E
	fn0800_3509(ds_104, wArg04, wArg06)
	Mem1151[ss:fp - 0x008C:word16] = ds_104
	Mem1154[ss:fp - 0x008E:word16] = 0x4541
	Mem1156[ss:fp - 0x0090:word16] = ss
	Mem1159[ss:fp - 0x0092:word16] = bp_108 - 0x0084
	fn0800_35A3(ds_104, wArg04, wArg06)
	Mem1166[ss:fp - 0x008C:word16] = ss
	Mem1169[ss:fp - 0x008E:word16] = bp_108 - 0x006E
	word16 dx_1170
	word16 ax_1171 = fn0800_283D(ds_104, ptrArg00, wArg02, out dx_1170)
	Mem1173[ss:bp_108 - 0x0002:word16] = dx_1170
	Mem1174[ss:bp_108 - 0x0004:word16] = ax_1171
	branch (ax_1171 | dx_1170) != 0x0000 l0800_14CD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dl:<invalid> Sequence es:bx:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14BC:
	Mem1248[ss:fp - 0x008C:word16] = ss
	Mem1251[ss:fp - 0x008E:word16] = bp_108 - 0x006E
	word16 dx_1252
	word16 ax_1254 = fn0800_1F5C(bp_108, ds_104, ptrArg00, wArg02, out dx_1252, out ds_104)
	Mem1257[ss:bp_108 - 0x0002:word16] = dx_1252
	Mem1258[ss:bp_108 - 0x0004:word16] = ax_1254
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14CD:
	Mem1184[ss:fp - 0x008C:word16] = Mem1174[ss:bp_108 - 0x0002:word16]
	Mem1187[ss:fp - 0x008E:word16] = Mem1184[ss:bp_108 - 0x0004:word16]
	Mem1189[ss:fp - 0x0090:word16] = ss
	Mem1192[ss:fp - 0x0092:word16] = bp_108 - 0x0084
	word16 dx_1193
	word16 ax_1194 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_1193)
	Mem1196[ss:bp_108 - 0x0006:word16] = dx_1193
	Mem1197[ss:bp_108 - 0x0008:word16] = ax_1194
	word16 ax_1198 = ax_1194 | dx_1193
	branch ax_1198 != 0x0000 l0800_14FD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14FD:
	Mem1238[ss:fp - 0x008C:word16] = Mem1197[ss:bp_108 - 0x0006:word16]
	Mem1241[ss:fp - 0x008E:word16] = Mem1238[ss:bp_108 - 0x0008:word16]
	bp_108 = fn0800_23EC(bp_108, ds_104, wArg00, wArg02, out ds_104)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_14E9:
	Mem1225[ss:fp - 0x008C:word16] = Mem1197[ss:bp_108 - 0x0002:word16]
	Mem1228[ss:fp - 0x008E:word16] = Mem1225[ss:bp_108 - 0x0004:word16]
	Mem1230[ss:fp - 0x0090:word16] = ss
	ax_1198 = bp_108 - 0x0084
	Mem1233[ss:fp - 0x0092:word16] = ax_1198
	fn0800_2085(ds_104, ptrArg00, wArg02, ptrArg04)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1509:
	si_107 = 0x0001
	branch (DPB(ax_1198, 0x00, 8) << 0x08) + DPB(dx_1193, 0x00, 8) >=u 0xFF8C l0800_1539
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> di:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1539:
	branch si_107 != 0x0000 l0800_1551
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1551:
	selector ds_194
	word16 bp_195 = fn0800_1E5E(bp_108, si_107, ds_104, out ds_194)
	Mem198[ss:fp - 0x008C:word16] = 0x0001
	selector ds_199 = fn0800_1CF6(bp_195, ds_194)
	Mem203[ss:fp - 0x008C:word16] = 0x0001
	Mem208[ss:fp - 0x008E:word16] = 0x0000
	fn0800_2DBF(ds_199, wArg00, wArg02)
	word16 dx_213 = Mem208[ds_199:0x29CF:word16]
	Mem215[ds_199:0x29E1:word16] = Mem208[ds_199:0x29D1:word16]
	Mem216[ds_199:0x29DF:word16] = dx_213
	Mem218[ss:fp - 0x008C:word16] = ds_199
	Mem221[ss:fp - 0x008E:word16] = 0x0945
	Mem223[ss:fp - 0x0090:word16] = ds_199
	Mem226[ss:fp - 0x0092:word16] = 0x4477
	word16 di_229
	word16 si_230 = fn0800_37BE(ds_199, wArg00, wArg02, wArg04, wArg06, out di_229)
	Mem234[ss:fp - 0x008C:word16] = ds_199
	Mem237[ss:fp - 0x008E:word16] = 0x0941
	Mem239[ss:fp - 0x0090:word16] = ds_199
	Mem242[ss:fp - 0x0092:word16] = 0x4477
	word16 di_243
	selector ds_244
	word16 si_245 = fn0800_4234(bp_195, si_230, di_229, ds_199, wArg00, wArg02, wArg04, wArg06, out di_243, out ds_244)
	Mem248[ds_244:0x29DD:word16] = dx_213
	Mem249[ds_244:0x29DB:word16] = 0x4477
	ui32 dx_bp_214 = SEQ(dx_213, bp_195)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1897:
	Mem269[ss:fp - 0x008C:word16] = ds_244
	Mem272[ss:fp - 0x008E:word16] = 0x4541
	byte dl_273
	branch fn0800_2DE2(bp_195, si_245, ds_244, ptrArg00, wArg02, out dl_273, out ds_244) == 0x0000 l0800_18A9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A6:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_15A3:
	Mem343[ss:fp - 0x008C:word16] = ds_244
	Mem346[ss:fp - 0x008E:word16] = 0x093D
	Mem348[ss:fp - 0x0090:word16] = ds_244
	Mem351[ss:fp - 0x0092:word16] = 0x4541
	word16 di_352
	selector ds_353
	fn0800_4234(bp_195, si_245, di_243, ds_244, wArg00, wArg02, wArg04, wArg06, out di_352, out ds_353)
	Mem357[ds_353:0x29E5:word16] = dx_213
	Mem358[ds_353:0x29E3:word16] = 0x4541
	Mem360[ss:fp - 0x008C:word16] = ds_353
	Mem363[ss:fp - 0x008E:word16] = 0x4541
	Mem365[ss:fp - 0x0090:word16] = ss
	Mem368[ss:fp - 0x0092:word16] = bp_195 - 0x006E
	fn0800_3509(ds_353, wArg04, wArg06)
	Mem372[ss:fp - 0x008C:word16] = ds_353
	Mem375[ss:fp - 0x008E:word16] = 0x4541
	Mem377[ss:fp - 0x0090:word16] = ss
	Mem380[ss:fp - 0x0092:word16] = bp_195 - 0x0084
	ui32 dx_bp_383 = DPB(dx_bp_214, fn0800_35A3(ds_353, wArg04, wArg06), 16)
	Mem387[ss:fp - 0x008C:word16] = ds_353
	Mem390[ss:fp - 0x008E:word16] = 0x4541
	fn0800_0C93(bp_195, ds_353, wArg00, wArg02)
	Mem394[ss:fp - 0x008C:word16] = ss
	Mem397[ss:fp - 0x008E:word16] = bp_195 - 0x006E
	word16 dx_398
	word16 ax_399 = fn0800_283D(ds_353, ptrArg00, wArg02, out dx_398)
	Mem403[ss:fp - 0x008C:word16] = dx_398
	Mem405[ss:fp - 0x008E:word16] = ax_399
	Mem407[ss:fp - 0x0090:word16] = ss
	Mem410[ss:fp - 0x0092:word16] = bp_195 - 0x0084
	word16 dx_412
	word16 ax_413 = fn0800_2931(ptrArg00, ptrArg04, wArg06, out dx_412)
	Mem416[ss:bp_195 - 0x0006:word16] = dx_412
	Mem417[ss:bp_195 - 0x0008:word16] = ax_413
	Mem420[ss:fp - 0x008C:word16] = Mem417[ds_353:0x29D1:word16]
	Mem423[ss:fp - 0x008E:word16] = Mem420[ds_353:0x29CF:word16]
	selector ds_424
	fn0800_4194(ds_353, wArg00, wArg02, out ds_424)
	Mem433[ds_424:0x29E9:word16] = SLICE(dx_bp_383 - 0x0000006E, word16, 16)
	Mem434[ds_424:0x29E7:word16] = (word16) (dx_bp_383 - 0x0000006E)
	int32 dx_ax_436 = (int32) Mem434[ds_424:0x29E9:word16]
	word16 dx_440
	word16 ax_441 = fn0800_8C8A((word16) dx_ax_436, 0x08, SLICE(dx_ax_436, word16, 16), bp, out dx_440)
	ptr32 es_di_442 = Mem434[ss:bp_195 - 0x0008:segptr32]
	Mem446[ss:fp - 0x008C:word16] = ax_441
	word16 di_1134 = (word16) es_di_442
	selector es_1120 = SLICE(es_di_442, selector, 16)
	word16 cx_1136 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632:
	branch cx_1136 == 0x0000 l0800_1634
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1632_1:
	di_1134 = di_1134 + 0x0001
	cx_1136 = cx_1136 - 0x0001
	branch 0x00 == Mem446[es_1120:di_1134:byte] l0800_1632
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1634:
	word16 cx_1130 = ~cx_1136
	word16 di_1116 = di_1134 - cx_1130
	byte Z_1124 = cond(di_1116)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A:
	branch cx_1130 == 0x0000 l0800_163C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163A_2:
	Z_1124 = cond(0x00 - Mem446[es_1120:di_1116:byte]) (alias)
	di_1116 = di_1116 + 0x0001
	cx_1130 = cx_1130 - 0x0001
	branch 0x00 == Mem446[es_1120:di_1116:byte] l0800_163A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163C:
	branch Z_1124 l0800_1645
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_163E:
	di_1116 = 0x0001
	es_1120 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1645:
	Mem501[es_1120:di_1116:byte] = (byte) Mem446[ss:fp - 0x008C:word16]
	ptr32 es_di_505 = Mem501[ss:bp_195 - 0x0008:segptr32]
	Mem509[ss:fp - 0x008C:word16] = (word16) (int32) Mem501[ds_424:0x29E9:word16]
	word16 di_1112 = (word16) es_di_505 + 0x0001
	selector es_1098 = SLICE(es_di_505, selector, 16)
	word16 cx_1114 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C:
	branch cx_1114 == 0x0000 l0800_165E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165C_1:
	di_1112 = di_1112 + 0x0000
	cx_1114 = cx_1114 - 0x0001
	branch 0x00 == Mem509[es_1098:di_1112:byte] l0800_165C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_165E:
	word16 cx_1108 = ~cx_1114
	word16 di_1094 = di_1112 - cx_1108
	byte Z_1102 = cond(di_1094)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664:
	branch cx_1108 == 0x0000 l0800_1666
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1664_2:
	Z_1102 = cond(0x00 - Mem509[es_1098:di_1094:byte]) (alias)
	di_1094 = di_1094 + 0x0001
	cx_1108 = cx_1108 - 0x0001
	branch 0x00 == Mem509[es_1098:di_1094:byte] l0800_1664
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1666:
	branch Z_1102 l0800_166F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_1668:
	di_1094 = 0x0001
	es_1098 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_166F:
	Mem565[es_1098:di_1094 + 0x0001:byte] = (byte) Mem509[ss:fp - 0x008C:word16]
	word16 dx_566 = Mem565[ds_424:0x29E9:word16]
	word16 dx_570
	word16 ax_571 = fn0800_8C8A(Mem565[ds_424:0x29E7:word16], 0x08, dx_566, bp, out dx_570)
	ptr32 es_di_572 = Mem565[ss:bp_195 - 0x0008:segptr32]
	Mem576[ss:fp - 0x008C:word16] = ax_571
	ui32 dx_bp_567 = SEQ(dx_566, bp_195)
	word16 di_1090 = (word16) es_di_572
	selector es_1076 = SLICE(es_di_572, selector, 16)
	word16 cx_1092 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E:
	branch cx_1092 == 0x0000 l0800_1690
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_168E_1:
	di_1090 = di_1090 + 0x0001
	cx_1092 = cx_1092 - 0x0001
	branch 0x00 == Mem576[es_1076:di_1090:byte] l0800_168E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1690:
	word16 cx_1086 = ~cx_1092
	word16 di_1072 = di_1090 - cx_1086
	byte Z_1080 = cond(di_1072)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696:
	branch cx_1086 == 0x0000 l0800_1698
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1696_2:
	Z_1080 = cond(0x00 - Mem576[es_1076:di_1072:byte]) (alias)
	di_1072 = di_1072 + 0x0001
	cx_1086 = cx_1086 - 0x0001
	branch 0x00 == Mem576[es_1076:di_1072:byte] l0800_1696
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1698:
	branch Z_1080 l0800_16A1
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_169A:
	di_1072 = 0x0001
	es_1076 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16A1:
	Mem631[es_1076:di_1072 + 0x0002:byte] = (byte) Mem576[ss:fp - 0x008C:word16]
	ptr32 es_di_632 = Mem631[ss:bp_195 - 0x0008:segptr32]
	word16 di_1068 = (word16) es_di_632
	selector es_1054 = SLICE(es_di_632, selector, 16)
	word16 cx_1070 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3:
	branch cx_1070 == 0x0000 l0800_16B5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B3_1:
	di_1068 = di_1068 + 0x0001
	cx_1070 = cx_1070 - 0x0001
	branch 0x00 == Mem631[es_1054:di_1068:byte] l0800_16B3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16B5:
	word16 cx_1064 = ~cx_1070
	word16 di_1050 = di_1068 - cx_1064
	byte Z_1058 = cond(di_1050)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB:
	branch cx_1064 == 0x0000 l0800_16BD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BB_2:
	Z_1058 = cond(0x00 - Mem631[es_1054:di_1050:byte]) (alias)
	di_1050 = di_1050 + 0x0001
	cx_1064 = cx_1064 - 0x0001
	branch 0x00 == Mem631[es_1054:di_1050:byte] l0800_16BB
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BD:
	branch Z_1058 l0800_16C6
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16BF:
	di_1050 = 0x0001
	es_1054 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_16C6:
	byte dl_685 = Mem631[ds_424:0x29E7:byte]
	Mem689[es_1054:di_1050 + 0x0003:byte] = dl_685
	Mem695[ds_424:0x2A05:word16] = 0x0000
	Mem696[ds_424:0x2A03:word16] = 0x0000
	Mem700[ss:fp - 0x008C:word16] = Mem696[ds_424:0x29E5:word16]
	Mem703[ss:fp - 0x008E:word16] = Mem700[ds_424:0x29E3:word16]
	word16 dx_1012 = DPB(dx_570, dl_685, 0)
	selector ds_704
	word16 ax_705 = fn0800_4194(ds_424, wArg00, wArg02, out ds_704)
	Mem707[ds_704:0x2A09:word16] = dx_1012
	Mem708[ds_704:0x2A07:word16] = ax_705
	Mem713[ss:fp - 0x008C:word16] = 0x0000
	Mem716[ss:fp - 0x008E:word16] = Mem713[ds_704:0x29E9:word16]
	Mem719[ss:fp - 0x0090:word16] = Mem716[ds_704:0x29E7:word16]
	Mem722[ss:fp - 0x0092:word16] = Mem719[ds_704:0x29E1:word16]
	Mem725[ss:fp - 0x0094:word16] = Mem722[ds_704:0x29DF:word16]
	ui32 dx_bp_1013 = DPB(dx_bp_567, dl_685, 16)
	word16 di_1000 = 0x0001
	selector ds_1027
	word16 ax_728 = fn0800_ACB3(ds_704, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1027)
	branch Mem725[ds_1027:0x2A09:word16] >=u 0x0000 l0800_171B
// DataOut: bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171B:
	branch Mem725[ds_1027:0x2A09:word16] >u 0x0000 l0800_1724
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_171D:
	branch Mem725[ds_1027:0x2A07:word16] <=u 0x0012 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1724:
	branch Mem725[ds_1027:0x2A21:word16] == 0x0000 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_172B:
	Mem951[ss:fp - 0x008C:word16] = Mem725[ds_1027:0x29E5:word16]
	Mem954[ss:fp - 0x008E:word16] = Mem951[ds_1027:0x29E3:word16]
	word16 si_955
	word16 dx_958 = fn0800_3F58(bp_195, ds_1027, wArg00, wArg02, out si_955, out di_1000, out ds_1027)
	dx_bp_1013 = SEQ(dx_958, bp_195) (alias)
	word16 ax_964 = fn0800_8CAA(ax_728, 0x08, dx_958, bp, out dx_1012)
	branch dx_1012 != 0x0052 l0800_1748
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1743:
	branch ax_964 == 0x4E43 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1748:
	word16 ax_1032
	Mem972[ss:fp - 0x008C:word16] = Mem954[ds_1027:0x2A09:word16]
	Mem975[ss:fp - 0x008E:word16] = Mem972[ds_1027:0x2A07:word16]
	Mem978[ss:fp - 0x0090:word16] = Mem975[ds_1027:0x2A09:word16]
	Mem981[ss:fp - 0x0092:word16] = Mem978[ds_1027:0x2A07:word16]
	ds_1027 = fn0800_75EA(bp_195, ds_1027, wArg00, wArg02, wArg04, wArg06)
	dx_1012 = Mem981[ds_1027:0x2A03:word16]
	word16 ax_984 = Mem981[ds_1027:0x2A05:word16]
	dx_bp_1013 = SEQ(dx_1012, bp_195) (alias)
	branch ax_984 <u Mem981[ds_1027:0x2A09:word16] l0800_1778
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176B:
	branch ax_984 != Mem981[ds_1027:0x2A09:word16] l0800_1773
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_176D:
	branch dx_1012 <u Mem981[ds_1027:0x2A07:word16] l0800_1778
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1778:
	ax_1032 = 0x0000
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1773:
	ax_1032 = 0x0001
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_177A:
	di_1000 = ax_1032
	branch ax_1032 == 0x0000 l0800_17A2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1780:
	Mem1008[ss:fp - 0x008C:word16] = 0x0001
	dx_1012 = -Mem1008[ds_1027:0x2A03:word16]
	Mem1018[ss:fp - 0x008E:word16] = -Mem1008[ds_1027:0x2A05:word16] - (dx_1012 == 0x0000)
	Mem1020[ss:fp - 0x0090:word16] = dx_1012
	Mem1023[ss:fp - 0x0092:word16] = Mem1020[ds_1027:0x29E1:word16]
	Mem1026[ss:fp - 0x0094:word16] = Mem1023[ds_1027:0x29DF:word16]
	fn0800_ACB3(ds_1027, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1027)
	dx_bp_1013 = SEQ(dx_1012, bp_195) (alias)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1718:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:0x0001 Sequence dx:ax:<invalid> Sequence es:di:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A2:
	branch di_1000 != 0x0000 l0800_17A9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A9:
	word16 ax_824 = Mem725[ds_1027:0x2A09:word16]
	word16 dx_825 = Mem725[ds_1027:0x2A07:word16]
	Mem827[ds_1027:0x2A05:word16] = ax_824
	Mem828[ds_1027:0x2A03:word16] = dx_825
	Mem831[ss:fp - 0x008C:word16] = Mem828[ds_1027:0x29E5:word16]
	Mem834[ss:fp - 0x008E:word16] = Mem831[ds_1027:0x29E3:word16]
	selector ds_835 = fn0800_BA67(ds_1027, ptrArg00, wArg02)
	branch Mem834[ds_835:0x2A09:word16] <u 0x0000 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CC:
	branch Mem834[ds_835:0x2A09:word16] != 0x0000 l0800_17D5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17CE:
	branch Mem834[ds_835:0x2A07:word16] <u 0x0012 l0800_17F2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17D5:
	Mem923[ss:fp - 0x008C:word16] = Mem834[ds_835:0x29E5:word16]
	Mem926[ss:fp - 0x008E:word16] = Mem923[ds_835:0x29E3:word16]
	word16 si_927
	word16 di_928
	word16 dx_930 = fn0800_3F58(bp_195, ds_835, wArg00, wArg02, out si_927, out di_928, out ds_835)
	dx_bp_1013 = SEQ(dx_930, bp_195) (alias)
	word16 ax_936 = fn0800_8CAA(ax_824, 0x08, dx_930, bp, out dx_1012)
	branch dx_1012 != 0x0052 l0800_17F2
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17ED:
	branch ax_936 == 0x4E43 l0800_181E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17F2:
	Mem889[ss:fp - 0x008C:word16] = Mem834[ds_835:0x29D1:word16]
	Mem892[ss:fp - 0x008E:word16] = Mem889[ds_835:0x29CF:word16]
	Mem897[ss:fp - 0x0090:word16] = 0x524E
	Mem899[ss:fp - 0x0092:word16] = 0x4300
	selector ds_900
	fn0800_409C(bp_195, ds_835, wArg02, wArg04, wArg06, out ds_900)
	Mem906[ss:fp - 0x008C:word16] = Mem899[ds_900:0x29D1:word16]
	Mem909[ss:fp - 0x008E:word16] = Mem906[ds_900:0x29CF:word16]
	Mem912[ss:fp - 0x0090:word16] = Mem909[ds_900:0x2A09:word16]
	Mem915[ss:fp - 0x0092:word16] = Mem912[ds_900:0x2A07:word16]
	fn0800_409C(bp_195, ds_900, wArg02, wArg04, wArg06, out ds_835)
	dx_1012 = 0x4300
	dx_bp_1013 = SEQ(0x4300, bp_195) (alias)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_181E:
	Mem856[ss:fp - 0x008C:word16] = Mem834[ds_835:0x2A09:word16]
	Mem859[ss:fp - 0x008E:word16] = Mem856[ds_835:0x2A07:word16]
	Mem862[ss:fp - 0x0090:word16] = Mem859[ds_835:0x29D1:word16]
	Mem865[ss:fp - 0x0092:word16] = Mem862[ds_835:0x29CF:word16]
	Mem868[ss:fp - 0x0094:word16] = Mem865[ds_835:0x29E5:word16]
	Mem871[ss:fp - 0x0096:word16] = Mem868[ds_835:0x29E3:word16]
	fn0800_3B0A(bp_195, ds_835, wArg08, wArg0A, out ds_1027)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_17A6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> Sequence es:bx:<invalid> bh:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_183F:
	Mem765[ss:fp - 0x008C:word16] = Mem725[ds_1027:0x29D1:word16]
	Mem768[ss:fp - 0x008E:word16] = Mem765[ds_1027:0x29CF:word16]
	Mem771[ss:fp - 0x0090:word16] = Mem768[ds_1027:0x29ED:word16]
	Mem774[ss:fp - 0x0092:word16] = Mem771[ds_1027:0x29EB:word16]
	selector ds_775
	si_245 = fn0800_409C(bp_195, ds_1027, wArg02, wArg04, wArg06, out ds_775)
	Mem781[ss:fp - 0x008C:word16] = Mem774[ds_775:0x29E5:word16]
	Mem784[ss:fp - 0x008E:word16] = Mem781[ds_775:0x29E3:word16]
	byte dl_785
	selector ds_787
	fn0800_A614(ds_775, ptrArg00, wArg02, out dl_785, out di_243, out ds_787)
	Mem792[ss:fp - 0x008C:word16] = ds_787
	Mem795[ss:fp - 0x008E:word16] = 0x4541
	Mem797[ss:fp - 0x0090:word16] = si_245
	ds_244 = fn0800_0ABC(bp_195, ds_787, wArg00, wArg02, wArg04)
	dx_213 = DPB(dx_1012, 0x00, 8) (alias)
	dx_bp_214 = DPB(dx_bp_1013, 0x00, 24) (alias)
	branch dx_213 <u 0x4174 l0800_1897
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_188A:
	Mem816[ss:fp - 0x008C:word16] = ds_244
	Mem819[ss:fp - 0x008E:word16] = 0x0952
	word16 di_820
	si_245 = fn0800_B2EF(ds_244, wArg00, wArg02, out di_820)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:0x00 dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:bx:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_18A9:
	Mem300[ss:fp - 0x008C:word16] = Mem272[ds_244:0x29DD:word16]
	Mem303[ss:fp - 0x008E:word16] = Mem300[ds_244:0x29DB:word16]
	byte dl_304
	word16 di_305
	selector ds_306
	fn0800_A614(ds_244, ptrArg00, wArg02, out dl_304, out di_305, out ds_306)
	Mem311[ss:fp - 0x008C:word16] = ds_306
	Mem315[ss:fp - 0x008E:word16] = 0x4477
	fn0800_8F7F(0x77, ds_306, ptrArg00)
	selector ds_320
	fn0800_1E5E(bp_195, si_245, ds_306, out ds_320)
	Mem324[ss:fp - 0x008C:word16] = Mem315[ds_320:0x29D1:word16]
	Mem327[ss:fp - 0x008E:word16] = Mem324[ds_320:0x29CF:word16]
	byte dl_328
	word16 di_329
	selector ds_330
	fn0800_A614(ds_320, ptrArg00, wArg02, out dl_328, out di_329, out ds_330)
	return dl_328
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_153D:
	Mem173[ss:fp - 0x008C:word16] = Mem115[ds_104:0x29D1:word16]
	Mem176[ss:fp - 0x008E:word16] = Mem173[ds_104:0x29CF:word16]
	byte dl_177
	word16 di_178
	selector ds_179
	fn0800_A614(ds_104, ptrArg00, wArg02, out dl_177, out di_178, out ds_179)
	return dl_177
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cl:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_12E2_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> Sequence es:bx:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> -150(fp):<invalid> -148(fp):<invalid> -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):di -136(fp):si -112(fp):0x52 -111(fp):0x4E -110(fp):0x43 -109(fp):0x41 -108(fp):0x00 -107(fp):0x0C -106(fp):<invalid> -105(fp):<invalid> -104(fp):0x00 -103(fp):0x0C -102(fp):0x00 -101(fp):0x00 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_18D9(word16 bp, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_18D9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_18D9:
	word16 di_32
	word16 si_33 = fn0800_B2EF(ds, 0x096C, ds, out di_32)
	word16 dx_46
	word16 di_48
	word16 si_276
	selector ds_278
	word16 ax_50 = fn0800_AA7E(si_33, di_32, ds, 0x4348, ds, 0x097D, ds, out dx_46, out si_276, out di_48, out ds_278)
	Mem52[ds_278:0x29D1:word16] = dx_46
	Mem53[ds_278:0x29CF:word16] = ax_50
	word16 bp_132 = fp - 0x0002
	branch (ax_50 | dx_46) != 0x0000 l0800_192A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_191B:
	Mem268[ss:fp - 0x0074:word16] = ds_278
	Mem271[ss:fp - 0x0076:word16] = 0x4348
	Mem274[ss:fp - 0x0078:word16] = 0x0007
	word16 di_277
	fn0800_0D24(ds_278, wArg00, ptrArg02, wArg04, out si_276, out di_277, out ds_278)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):ds -118(fp):0x097D -116(fp):ds -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_192A:
	Mem66[ss:fp - 0x0074:word16] = 0x0001
	selector ds_208 = fn0800_1CF6(fp - 0x0002, ds_278)
	Mem74[ss:fp - 0x0074:word16] = 0x0000
	Mem76[ss:fp - 0x0076:word16] = 0x0000
	fn0800_2DBF(ds_208, wArg00, wArg02)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -126(fp):0x096C -124(fp):ds -122(fp):0x4348 -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19BC:
	Mem97[ss:fp - 0x0074:word16] = ss
	Mem100[ss:fp - 0x0076:word16] = bp_132 - 0x006E
	Mem102[ss:fp - 0x0078:word16] = ss
	Mem105[ss:fp - 0x007A:word16] = bp_132 - 0x0008
	Mem107[ss:fp - 0x007C:word16] = ss
	Mem110[ss:fp - 0x007E:word16] = bp_132 - 0x0004
	selector ds_111
	branch fn0800_29C5(bp_132, si_276, ds_208, out ds_111) == 0x0000 l0800_19D8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> al:<invalid> Sequence es:di:<invalid> di:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19D8:
	selector ds_247
	fn0800_1E5E(bp_132, si_276, ds_111, out ds_247)
	Mem251[ss:fp - 0x0074:word16] = Mem110[ds_247:0x29D1:word16]
	Mem254[ss:fp - 0x0076:word16] = Mem251[ds_247:0x29CF:word16]
	byte dl_255
	word16 di_256
	selector ds_257
	fn0800_A614(ds_247, ptrArg00, wArg02, out dl_255, out di_256, out ds_257)
	return dl_255
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

fn0800_18D9_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp

l0800_19D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1940:
	Mem119[ss:fp - 0x0074:word16] = ss
	Mem122[ss:fp - 0x0076:word16] = bp_132 - 0x006E
	fn0800_0C93(bp_132, ds_111, wArg00, wArg02)
	Mem127[ss:fp - 0x0074:word16] = Mem122[ss:bp_132 - 0x0006:word16]
	Mem130[ss:fp - 0x0076:word16] = Mem127[ss:bp_132 - 0x0008:word16]
	selector ds_131
	bp_132 = fn0800_23EC(bp_132, ds_111, wArg00, wArg02, out ds_131)
	Mem137[ss:fp - 0x0074:word16] = Mem130[ss:bp_132 - 0x0006:word16]
	Mem140[ss:fp - 0x0076:word16] = Mem137[ss:bp_132 - 0x0008:word16]
	selector ds_142 = fn0800_22FE(ds_131, ptrArg00, wArg02)
	ptr32 es_di_144 = Mem140[ss:bp_132 - 0x0004:segptr32]
	selector es_146 = SLICE(es_di_144, selector, 16)
	word16 di_147 = (word16) es_di_144 + 0x0002
	word16 cx_153 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> ds:<invalid> si:<invalid> Sequence es:di:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E:
	branch cx_153 == 0x0000 l0800_1970
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_196E_1:
	di_147 = di_147 + 0x0001
	cx_153 = cx_153 - 0x0001
	branch 0x00 == Mem140[es_146:di_147:byte] l0800_196E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1970:
	word16 cx_161 = ~cx_153
	word16 di_164 = di_147 - cx_161
	byte Z_168 = cond(di_164)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976:
	branch cx_161 == 0x0000 l0800_1978
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1976_2:
	Z_168 = cond(0x00 - Mem140[es_146:di_164:byte]) (alias)
	di_164 = di_164 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem140[es_146:di_164:byte] l0800_1976
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1978:
	branch Z_168 l0800_1981
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_197A:
	di_164 = 0x0001
	es_146 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1981:
	branch Mem140[es_146:di_164:byte] != 0x00 l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_198D:
	word16 dx_212 = Mem140[ds_142:0x2E51:word16]
	branch Mem140[ds_142:0x2E53:word16] != Mem140[ss:bp_132 - 0x0002:word16] l0800_19A1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_199C:
	branch dx_212 + 0x0008 == Mem140[ss:bp_132 - 0x0004:word16] l0800_19AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19A1:
	Mem220[ss:fp - 0x0074:word16] = Mem140[ss:bp_132 - 0x0002:word16]
	Mem223[ss:fp - 0x0076:word16] = Mem220[ss:bp_132 - 0x0004:word16]
	ds_142 = fn0800_2201(ds_142, ptrArg00, wArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_19AD:
	Mem200[ss:fp - 0x0074:word16] = ss
	Mem203[ss:fp - 0x0076:word16] = bp_132 - 0x006E
	Mem206[ss:fp - 0x0078:word16] = 0x000D
	ds_208 = fn0800_0ABC(bp_132, ds_142, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)



byte fn0800_19EE(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_19EE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_19EE:
	word16 di_35
	word16 si_36 = fn0800_B2EF(ds, 0x0986, ds, out di_35)
	word16 dx_49
	word16 di_51
	selector ds_1026
	word16 si_1024
	word16 ax_53 = fn0800_AA7E(si_36, di_35, ds, 0x4348, ds, 0x0997, ds, out dx_49, out si_1024, out di_51, out ds_1026)
	Mem55[ds_1026:0x29D1:word16] = dx_49
	Mem56[ds_1026:0x29CF:word16] = ax_53
	word16 bp_149 = fp - 0x0002
	branch (ax_53 | dx_49) != 0x0000 l0800_1A40
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1A31:
	Mem1016[ss:fp - 0x007A:word16] = ds_1026
	Mem1019[ss:fp - 0x007C:word16] = 0x4348
	Mem1022[ss:fp - 0x007E:word16] = 0x0007
	word16 di_1025
	fn0800_0D24(ds_1026, wArg00, ptrArg02, wArg04, out si_1024, out di_1025, out ds_1026)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> di:<invalid> si:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):ds -124(fp):0x0997 -122(fp):ds -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A40:
	branch Mem56[ds_1026:0x2A27:word16] != Mem56[ds_1026:0x269A:word16] l0800_1A7D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A49:
	word16 dx_1001 = Mem56[ds_1026:0x0982:word16]
	Mem1002[ss:fp - 0x000C:word16] = Mem56[ds_1026:0x0984:word16]
	Mem1003[ss:fp - 0x000E:word16] = dx_1001
	ptr32 es_bx_1006 = Mem1003[ds_1026:0x269C:segptr32]
	Mem1010[es_bx_1006 + 0x0006:word16] = ss
	Mem1011[es_bx_1006 + 0x0004:word16] = fp - 0x000E
	Mem1012[ds_1026:0x2A27:word16] = 0x0001
	Mem1013[ds_1026:0x269A:word16] = 0x0002
	Mem1014[ds_1026:0x2A1B:word16] = 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A7D:
	Mem80[ss:fp - 0x007A:word16] = 0x0000
	Mem84[ss:fp - 0x007C:word16] = 0x0001
	fn0800_2DBF(ds_1026, wArg00, wArg02)
	Mem91[ss:fp - 0x007A:word16] = 0x0001
	selector ds_109 = fn0800_1CF6(fp - 0x0002, ds_1026)
	branch Mem91[ds_109:0x2A25:word16] == 0x0007 l0800_1A9E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> di:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9E:
	Mem987[ss:fp - 0x007A:word16] = ds_109
	Mem990[ss:fp - 0x007C:word16] = 0x099B
	Mem992[ss:fp - 0x007E:word16] = ds_109
	Mem995[ss:fp - 0x0080:word16] = 0x44DC
	word16 di_996
	si_1024 = fn0800_37BE(ds_109, wArg00, wArg02, wArg04, wArg06, out di_996)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1A9B:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -132(fp):0x0986 -130(fp):ds -128(fp):0x4348 -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CB4:
	Mem113[ss:fp - 0x007A:word16] = ss
	Mem116[ss:fp - 0x007C:word16] = bp_149 - 0x0072
	Mem118[ss:fp - 0x007E:word16] = ss
	Mem121[ss:fp - 0x0080:word16] = bp_149 - 0x0008
	Mem123[ss:fp - 0x0082:word16] = ss
	Mem126[ss:fp - 0x0084:word16] = bp_149 - 0x0004
	selector ds_127
	branch fn0800_29C5(bp_149, si_1024, ds_109, out ds_127) == 0x0000 l0800_1CD0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> si:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> Sequence es:di:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CD0:
	Mem943[ss:fp - 0x007A:word16] = Mem126[ds_127:0x29D1:word16]
	Mem946[ss:fp - 0x007C:word16] = Mem943[ds_127:0x29CF:word16]
	word16 di_948
	selector ds_949
	byte dl_947
	fn0800_A614(ds_127, ptrArg00, wArg02, out dl_947, out di_948, out ds_949)
	branch Mem946[ds_949:0x2A25:word16] != 0x0007 l0800_1CF0
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CE5:
	Mem970[ss:fp - 0x007A:word16] = ds_949
	Mem974[ss:fp - 0x007C:word16] = 0x44DC
	dl_947 = fn0800_8F7F(0xDC, ds_949, ptrArg00)
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CF0:
	return dl_947
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> di:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_19EE_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_1CCD:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AB1:
	Mem135[ss:fp - 0x007A:word16] = ss
	Mem138[ss:fp - 0x007C:word16] = bp_149 - 0x0072
	fn0800_0C93(bp_149, ds_127, wArg00, wArg02)
	Mem143[ss:fp - 0x007A:word16] = Mem138[ss:bp_149 - 0x0006:word16]
	Mem146[ss:fp - 0x007C:word16] = Mem143[ss:bp_149 - 0x0008:word16]
	word16 dx_148
	selector ds_151
	word16 si_150
	fn0800_24FE(bp_149, ds_127, ptrArg00, out dx_148, out bp_149, out si_150, out ds_151)
	Mem160[ss:fp - 0x007A:word16] = 0x0000
	ptr32 es_di_161 = Mem160[ss:bp_149 - 0x0008:segptr32]
	word16 di_1030 = (word16) es_di_161
	selector es_163 = SLICE(es_di_161, selector, 16)
	word16 cx_164 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> Sequence es:di:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1:
	branch cx_164 == 0x0000 l0800_1AD3
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD1_1:
	di_1030 = di_1030 + 0x0001
	cx_164 = cx_164 - 0x0001
	branch 0x00 == Mem160[es_163:di_1030:byte] l0800_1AD1
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> es:<invalid> di:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD3:
	word16 cx_174 = ~cx_164
	word16 di_1031 = di_1030 - cx_174
	byte Z_183 = cond(di_1031)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9:
	branch cx_174 == 0x0000 l0800_1ADB
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AD9_2:
	Z_183 = cond(0x00 - Mem160[es_163:di_1031:byte]) (alias)
	di_1031 = di_1031 + 0x0001
	cx_174 = cx_174 - 0x0001
	branch 0x00 == Mem160[es_163:di_1031:byte] l0800_1AD9
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADB:
	branch Z_183 l0800_1AE4
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1ADD:
	di_1031 = 0x0001
	es_163 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AE4:
	ptr32 es_di_211 = Mem160[ss:bp_149 - 0x0008:segptr32]
	Mem215[ss:fp - 0x007C:word16] = (int16) Mem160[es_163:di_1031:byte] << 0x08
	word16 di_1032 = (word16) es_di_211
	selector es_213 = SLICE(es_di_211, selector, 16)
	word16 cx_221 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB:
	branch cx_221 == 0x0000 l0800_1AFD
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFB_1:
	di_1032 = di_1032 + 0x0001
	cx_221 = cx_221 - 0x0001
	branch 0x00 == Mem215[es_213:di_1032:byte] l0800_1AFB
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1AFD:
	word16 cx_231 = ~cx_221
	word16 di_236 = di_1032 - cx_231
	byte Z_240 = cond(di_236)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03:
	branch cx_231 == 0x0000 l0800_1B05
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B03_2:
	Z_240 = cond(0x00 - Mem215[es_213:di_1033:byte]) (alias)
	di_236 = di_1033 + 0x0001
	cx_231 = cx_231 - 0x0001
	word16 di_1033 = di_236
	branch 0x00 == Mem215[es_213:di_1033:byte] l0800_1B03
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B05:
	branch Z_240 l0800_1B0E
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B07:
	es_213 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B0E:
	ptr32 es_di_275 = Mem215[ss:bp_149 - 0x0008:segptr32]
	Mem279[ss:fp - 0x007C:word16] = Mem215[ss:fp - 0x007C:word16] + DPB(es_213, 0x00, 8)
	Mem281[ss:fp - 0x007E:word16] = 0x0000
	word16 di_1034 = (word16) es_di_275
	selector es_277 = SLICE(es_di_275, selector, 16)
	word16 cx_282 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26:
	branch cx_282 == 0x0000 l0800_1B28
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B26_1:
	di_1034 = di_1034 + 0x0001
	cx_282 = cx_282 - 0x0001
	branch 0x00 == Mem281[es_277:di_1034:byte] l0800_1B26
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B28:
	word16 cx_292 = ~cx_282
	word16 di_1035 = di_1034 - cx_292
	byte Z_301 = cond(di_1035)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E:
	branch cx_292 == 0x0000 l0800_1B30
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B2E_2:
	Z_301 = cond(0x00 - Mem281[es_277:di_1035:byte]) (alias)
	di_1035 = di_1035 + 0x0001
	cx_292 = cx_292 - 0x0001
	branch 0x00 == Mem281[es_277:di_1035:byte] l0800_1B2E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B30:
	branch Z_301 l0800_1B39
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B32:
	di_1035 = 0x0001
	es_277 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B39:
	ptr32 es_di_329 = Mem281[ss:bp_149 - 0x0008:segptr32]
	Mem333[ss:fp - 0x0080:word16] = (int16) Mem281[es_277:di_1035 + 0x0002:byte] << 0x08
	word16 di_1036 = (word16) es_di_329
	selector es_331 = SLICE(es_di_329, selector, 16)
	word16 cx_339 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50:
	branch cx_339 == 0x0000 l0800_1B52
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B50_1:
	di_1036 = di_1036 + 0x0001
	cx_339 = cx_339 - 0x0001
	branch 0x00 == Mem333[es_331:di_1036:byte] l0800_1B50
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B52:
	word16 cx_349 = ~cx_339
	word16 di_1037 = di_1036 - cx_349
	byte Z_358 = cond(di_1037)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58:
	branch cx_349 == 0x0000 l0800_1B5A
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B58_2:
	Z_358 = cond(0x00 - Mem333[es_331:di_1037:byte]) (alias)
	di_1037 = di_1037 + 0x0001
	cx_349 = cx_349 - 0x0001
	branch 0x00 == Mem333[es_331:di_1037:byte] l0800_1B58
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5A:
	branch Z_358 l0800_1B63
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B5C:
	di_1037 = 0x0001
	es_331 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B63:
	word16 ax_392 = Mem333[ss:fp - 0x007E:word16] + (Mem333[ss:fp - 0x0080:word16] + DPB(es_331, 0x00, 8))
	word16 dx_397 = Mem333[ss:fp - 0x007C:word16] + (ax_392 <u 0x0000)
	Mem400[ss:fp - 0x007C:word16] = dx_397
	Mem402[ss:fp - 0x007E:word16] = ax_392
	Mem405[ss:fp - 0x0080:word16] = Mem402[ds_151:0x29D1:word16]
	Mem408[ss:fp - 0x0082:word16] = Mem405[ds_151:0x29CF:word16]
	selector ds_412
	fn0800_ACB3(ds_151, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_412)
	word16 di_380 = di_1037 - 0x0001
	branch Mem408[ds_412:0x2A25:word16] != 0x0007 l0800_1B92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B92:
	Mem490[ss:fp - 0x007A:word16] = ds_412
	selector es_491 = Mem490[ss:fp - 0x007A:selector]
	Mem496[ss:fp - 0x007A:word16] = es_491
	Mem498[ss:fp - 0x007C:word16] = 0x44DC
	word16 di_1038 = 0x427E
	word16 cx_506 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1:
	branch cx_506 == 0x0000 l0800_1BA3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA1_1:
	di_1038 = di_1038 + 0x0001
	cx_506 = cx_506 - 0x0001
	branch 0x00 == Mem498[es_491:di_1038:byte] l0800_1BA1
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BA3:
	word16 di_525 = Mem498[ss:fp - 0x007C:word16]
	selector es_528 = Mem498[ss:fp - 0x007A:selector]
	Mem533[ss:fp - 0x007A:word16] = ds_412
	word16 cx_516 = ~cx_506
	word16 cx_518 = cx_516 >>u 0x0001
	word16 si_524 = di_1038 - cx_516
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2:
	branch cx_518 == 0x0000 l0800_1BB4
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB4:
	word16 cx_547 = cx_518 * 0x0002 + (cx_516 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6:
	branch cx_547 == 0x0000 l0800_1BB8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB8:
	selector ds_562 = Mem533[ss:fp - 0x007A:selector]
	branch Mem533[ds_562:0x2A25:word16] != 0x0008 l0800_1C29
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC0:
	branch Mem533[ds_562:0x427E:byte] == 0x00 l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BC7:
	branch Mem533[ss:bp_149 - 0x0072:byte] != 0x5C l0800_1BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BFC:
	Mem672[ss:fp - 0x007A:word16] = ss
	Mem675[ss:fp - 0x007C:word16] = bp_149 - 0x0072
	Mem677[ss:fp - 0x007E:word16] = ds_562
	selector es_678 = Mem677[ss:fp - 0x007E:selector]
	word16 di_1041 = 0x44DC
	word16 cx_688 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B:
	branch cx_688 == 0x0000 l0800_1C0D
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0B_1:
	di_1041 = di_1041 + 0x0001
	cx_688 = cx_688 - 0x0001
	branch 0x00 == Mem677[es_678:di_1041:byte] l0800_1C0B
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C0D:
	word16 cx_698 = ~cx_688
	word16 di_1042 = di_1041 - cx_698
	byte Z_707 = cond(di_1042)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13:
	branch cx_698 == 0x0000 l0800_1C15
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C13_2:
	Z_707 = cond(0x00 - Mem677[es_678:di_1042:byte]) (alias)
	di_1042 = di_1042 + 0x0001
	cx_698 = cx_698 - 0x0001
	branch 0x00 == Mem677[es_678:di_1042:byte] l0800_1C13
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C15:
	branch Z_707 l0800_1C1E
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C17:
	di_1042 = 0x0001
	es_678 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C1E:
	Mem734[ss:fp - 0x007E:word16] = es_678
	Mem736[ss:fp - 0x0080:word16] = di_1042 - 0x0001
	fn0800_3509(ds_562, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BCD:
	Mem763[ss:fp - 0x007A:word16] = ss
	Mem766[ss:fp - 0x007C:word16] = bp_149 - 0x0071
	Mem768[ss:fp - 0x007E:word16] = ds_562
	selector es_769 = Mem768[ss:fp - 0x007E:selector]
	word16 di_1043 = 0x44DC
	word16 cx_779 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC:
	branch cx_779 == 0x0000 l0800_1BDE
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDC_1:
	di_1043 = di_1043 + 0x0001
	cx_779 = cx_779 - 0x0001
	branch 0x00 == Mem768[es_769:di_1043:byte] l0800_1BDC
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BDE:
	word16 cx_789 = ~cx_779
	word16 di_1044 = di_1043 - cx_789
	byte Z_798 = cond(di_1044)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4:
	branch cx_789 == 0x0000 l0800_1BE6
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE4_2:
	Z_798 = cond(0x00 - Mem768[es_769:di_1044:byte]) (alias)
	di_1044 = di_1044 + 0x0001
	cx_789 = cx_789 - 0x0001
	branch 0x00 == Mem768[es_769:di_1044:byte] l0800_1BE4
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE6:
	branch Z_798 l0800_1BEF
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BE8:
	di_1044 = 0x0001
	es_769 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BEF:
	Mem825[ss:fp - 0x007E:word16] = es_769
	Mem827[ss:fp - 0x0080:word16] = di_1044 - 0x0001
	fn0800_3509(ds_562, wArg04, wArg06)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C29:
	Mem570[ss:fp - 0x007A:word16] = ds_562
	Mem573[ss:fp - 0x007C:word16] = 0x44DC
	si_150 = fn0800_3678(bp_149, ds_562, ptrArg00, wArg02, out ds_412)
	Mem578[ss:fp - 0x007A:word16] = ss
	Mem581[ss:fp - 0x007C:word16] = bp_149 - 0x0072
	Mem583[ss:fp - 0x007E:word16] = ds_412
	selector es_584 = Mem583[ss:fp - 0x007E:selector]
	word16 di_1039 = 0x44DC
	word16 cx_594 = 0xFFFF
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43:
	branch cx_594 == 0x0000 l0800_1C45
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C43_1:
	di_1039 = di_1039 + 0x0001
	cx_594 = cx_594 - 0x0001
	branch 0x00 == Mem583[es_584:di_1039:byte] l0800_1C43
// DataOut: al cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C45:
	word16 cx_604 = ~cx_594
	word16 di_1040 = di_1039 - cx_604
	byte Z_613 = cond(di_1040)
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B:
	branch cx_604 == 0x0000 l0800_1C4D
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4B_2:
	Z_613 = cond(0x00 - Mem583[es_584:di_1040:byte]) (alias)
	di_1040 = di_1040 + 0x0001
	cx_604 = cx_604 - 0x0001
	branch 0x00 == Mem583[es_584:di_1040:byte] l0800_1C4B
// DataOut: al cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4D:
	branch Z_613 l0800_1C56
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C4F:
	di_1040 = 0x0001
	es_584 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C56:
	Mem640[ss:fp - 0x007E:word16] = es_584
	di_380 = di_1040 - 0x0001
	Mem642[ss:fp - 0x0080:word16] = di_380
	fn0800_35A3(ds_412, wArg04, wArg06)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB6_1:
	Mem556[es_528:di_525:byte] = Mem533[es_491:si_524:byte]
	si_524 = si_524 + 0x0001
	di_525 = di_525 + 0x0001
	cx_547 = cx_547 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1BB2_2:
	Mem541[es_528:di_525:word16] = Mem533[es_491:si_524:word16]
	si_524 = si_524 + 0x0002
	di_525 = di_525 + 0x0002
	cx_518 = cx_518 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1B8F:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C61:
	Mem428[ss:fp - 0x007A:word16] = ds_412
	Mem431[ss:fp - 0x007C:word16] = 0x09A8
	Mem433[ss:fp - 0x007E:word16] = ds_412
	Mem436[ss:fp - 0x0080:word16] = 0x44DC
	word16 di_437
	selector ds_438
	fn0800_4234(bp_149, si_150, di_380, ds_412, wArg00, wArg02, wArg04, wArg06, out di_437, out ds_438)
	Mem442[ds_438:0x29E1:word16] = dx_397
	Mem443[ds_438:0x29DF:word16] = 0x44DC
	word16 dx_445 = Mem443[ds_438:0x29CF:word16]
	Mem447[ds_438:0x29E5:word16] = Mem443[ds_438:0x29D1:word16]
	Mem448[ds_438:0x29E3:word16] = dx_445
	selector ds_449
	word16 ax_450 = fn0800_5374(bp_149, ds_438, out ds_449)
	Mem454[ss:fp - 0x007A:word16] = Mem448[ds_449:0x29E1:word16]
	Mem457[ss:fp - 0x007C:word16] = Mem454[ds_449:0x29DF:word16]
	byte dl_458
	word16 di_459
	selector ds_460
	fn0800_A614(ds_449, ptrArg00, wArg02, out dl_458, out di_459, out ds_460)
	si_1024 = ax_450
	branch ax_450 == 0x0000 l0800_1CA8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1C9D:
	Mem481[ss:fp - 0x007A:word16] = ds_460
	Mem485[ss:fp - 0x007C:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_460, ptrArg00)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1CA8:
	Mem471[ss:fp - 0x007A:word16] = ss
	Mem474[ss:fp - 0x007C:word16] = bp_149 - 0x0072
	Mem476[ss:fp - 0x007E:word16] = ax_450
	ds_109 = fn0800_0ABC(bp_149, ds_460, wArg00, wArg02, wArg04)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> dh:<invalid> dl:<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):di -118(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_1CF6(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_1CF6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_1CF6:
	Mem14[ds:0x45A8:word16] = 0x0000
	Mem16[ds:0x45A6:word16] = 0x0000
	Mem17[ds:0x29ED:word16] = 0x0000
	Mem18[ds:0x29EB:word16] = 0x0000
	selector ds_36
	word16 ax_37 = fn0800_ACB3(ds, DPB(ptrLoc10, Mem18[ds:0x29CF:word16], 0), Mem18[ds:0x29D1:word16], 0xFFFC, 0xFFFF, 0x0002, out ds_36)
	word16 si_46
	selector ds_47
	word16 dx_48 = fn0800_3E5D(fp - 0x0002, ds_36, Mem18[ds_36:0x29CF:word16], Mem18[ds_36:0x29D1:word16], out si_46, out ds_47)
	Mem51[ds_47:0x29ED:word16] = dx_48
	Mem52[ds_47:0x29EB:word16] = ax_37
	Mem55[ss:fp - 0x0008:word16] = Mem52[ds_47:0x29D1:word16]
	Mem59[ss:fp - 0x000A:word16] = Mem55[ds_47:0x29CF:word16]
	selector ds_290
	word16 ax_63 = fn0800_4194(ds_47, wArg00, wArg02, out ds_290)
	branch dx_48 >u Mem59[ds_290:0x29ED:word16] l0800_1D69
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1D52:
	branch dx_48 <u Mem59[ds_290:0x29ED:word16] l0800_1D5A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D54:
	branch ax_63 >=u Mem59[ds_290:0x29EB:word16] l0800_1D69
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D5A:
	Mem281[ss:fp - 0x0008:word16] = ds_290
	Mem284[ss:fp - 0x000A:word16] = 0x4348
	Mem287[ss:fp - 0x000C:word16] = 0x000B
	word16 si_288
	word16 di_289
	fn0800_0D24(ds_290, wArg00, ptrArg02, wArg04, out si_288, out di_289, out ds_290)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFC -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D69:
	Mem80[ss:fp - 0x0008:word16] = 0x0000
	Mem83[ss:fp - 0x000A:word16] = Mem80[ds_290:0x29ED:word16]
	Mem86[ss:fp - 0x000C:word16] = Mem83[ds_290:0x29EB:word16]
	Mem89[ss:fp - 0x000E:word16] = Mem86[ds_290:0x29D1:word16]
	Mem92[ss:fp - 0x0010:word16] = Mem89[ds_290:0x29CF:word16]
	selector ds_97
	word16 ax_98 = fn0800_ACB3(ds_290, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_97)
	Mem103[ss:fp - 0x0008:word16] = Mem92[ds_97:0x29D1:word16]
	Mem106[ss:fp - 0x000A:word16] = Mem103[ds_97:0x29CF:word16]
	word16 si_107
	selector ds_108
	word16 dx_109 = fn0800_3E5D(fp - 0x0002, ds_97, wArg00, wArg02, out si_107, out ds_108)
	branch dx_109 != 0x524E l0800_1D9B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D96:
	branch ax_98 == 0x4341 l0800_1DAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1D9B:
	Mem264[ss:fp - 0x0008:word16] = ds_108
	Mem267[ss:fp - 0x000A:word16] = 0x4348
	Mem270[ss:fp - 0x000C:word16] = 0x000B
	word16 si_271
	word16 di_272
	fn0800_0D24(ds_108, wArg00, ptrArg02, wArg04, out si_271, out di_272, out ds_108)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:0x08 al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DAA:
	word16 si_145
	selector ds_144
	Mem118[ss:fp - 0x0008:word16] = Mem106[ds_108:0x29D1:word16]
	Mem121[ss:fp - 0x000A:word16] = Mem118[ds_108:0x29CF:word16]
	word16 si_122
	word16 di_123
	selector ds_124
	fn0800_3E27(fp - 0x0002, ds_108, wArg00, wArg02, out si_122, out di_123, out ds_124)
	Mem131[ss:fp - 0x0008:word16] = Mem121[ds_124:0x29D1:word16]
	Mem134[ss:fp - 0x000A:word16] = Mem131[ds_124:0x29CF:word16]
	word16 si_135
	word16 di_136
	selector ds_137
	Mem140[ss:fp - 0x0004:word16] = fn0800_3E27(fp - 0x0002, ds_124, wArg00, wArg02, out si_135, out di_136, out ds_137)
	branch Mem140[ss:fp + 0x0002:word16] == 0x0000 l0800_1DE4
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DE4:
	Mem253[ss:fp - 0x0008:word16] = 0x0000
	Mem255[ss:fp - 0x000A:word16] = 0xFFF0
	si_145 = fn0800_4311(fp - 0x0002, ds_137, wArg00, wArg02, out ds_144)
	Mem260[ds_144:0x2E53:word16] = 0xFFF0
	Mem261[ds_144:0x2E51:word16] = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DD1:
	Mem239[ss:fp - 0x0008:word16] = 0x0000
	Mem241[ss:fp - 0x000A:word16] = si_135
	si_145 = fn0800_4311(fp - 0x0002, ds_137, wArg00, wArg02, out ds_144)
	Mem246[ds_144:0x2E53:word16] = dx_109
	Mem247[ds_144:0x2E51:word16] = 0x0000
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1DF8:
	Mem151[ss:fp - 0x0008:word16] = 0x0000
	Mem154[ss:fp - 0x000A:word16] = Mem151[ds_144:0x29ED:word16]
	Mem157[ss:fp - 0x000C:word16] = Mem154[ds_144:0x29EB:word16]
	Mem160[ss:fp - 0x000E:word16] = Mem157[ds_144:0x29D1:word16]
	Mem163[ss:fp - 0x0010:word16] = Mem160[ds_144:0x29CF:word16]
	selector ds_164
	fn0800_ACB3(ds_144, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_164)
	Mem169[ss:fp - 0x0008:word16] = Mem163[ds_164:0x29D1:word16]
	Mem172[ss:fp - 0x000A:word16] = Mem169[ds_164:0x29CF:word16]
	Mem177[ss:fp - 0x000C:word16] = 0x0000
	Mem179[ss:fp - 0x000E:word16] = si_145
	Mem182[ss:fp - 0x0010:word16] = Mem179[ds_164:0x2E53:word16]
	Mem185[ss:fp - 0x0012:word16] = Mem182[ds_164:0x2E51:word16]
	word16 di_187
	selector ds_188
	word16 si_189 = fn0800_4110(ds_164, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_187, out ds_188)
	Mem193[ss:fp - 0x0008:word16] = 0x0000
	Mem197[ss:fp - 0x000A:word16] = si_189 - 0x0008
	word16 ax_198 = Mem197[ds_188:0x2E51:word16]
	Mem203[ss:fp - 0x000C:word16] = Mem197[ds_188:0x2E53:word16]
	Mem205[ss:fp - 0x000E:word16] = ax_198 + 0x0008
	branch fn0800_2CCF(ds_188, ptrArg00, wArg04, wArg06) == Mem205[ss:fp - 0x0004:word16] l0800_1E59
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_1E4A:
	Mem221[ss:fp - 0x0008:word16] = ds_188
	Mem224[ss:fp - 0x000A:word16] = 0x4348
	Mem227[ss:fp - 0x000C:word16] = 0x000D
	word16 si_229
	word16 di_230
	fn0800_0D24(ds_188, wArg00, ptrArg02, wArg04, out si_229, out di_230, out ds_188)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:0x08 si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_1E59:
	return ds_188
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_1CF6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ah:<invalid> cl:<invalid> si:<invalid> cx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_1E5E(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si sp
fn0800_1E5E_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16)

l0800_1E5E:
	word16 ax_39 = fn0800_2CCF(ds, DPB(ptrLoc0A, Mem0[ds:0x2E51:word16] + 0x0008, 0), (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8) - 0x0008, 0x0000)
	ptr32 es_bx_46 = Mem0[ds:0x2E51:segptr32]
	Mem49[es_bx_46 + 0x0006:byte] = (byte) (ax_39 >>u 0x08)
	Mem50[es_bx_46 + 0x0007:byte] = (byte) ax_39
	ui32 ax_dx_57 = SEQ(Mem50[ds:0x29ED:word16], Mem50[ds:0x29EB:word16] + 0x0004)
	selector ds_75
	fn0800_ACB3(ds, DPB(ptrLoc0C, Mem50[ds:0x29CF:word16], 0), Mem50[ds:0x29D1:word16], (word16) (ax_dx_57 + 0x00000004), SLICE(ax_dx_57 + 0x00000004, word16, 16), 0x0000, out ds_75)
	word16 di_87
	selector ds_186
	word16 si_187
	word16 ax_89 = fn0800_3E27(bp, ds_75, Mem50[ds_75:0x29CF:word16], Mem50[ds_75:0x29D1:word16], out si_187, out di_87, out ds_186)
	branch si_187 <=u ax_89 l0800_1EF7
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_1EF7:
	branch si_187 >=u ax_89 l0800_1F19
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1EFB:
	Mem198[ss:fp - 0x0004:word16] = 0x0000
	Mem200[ss:fp - 0x0006:word16] = ax_89 - si_187
	Mem203[ss:fp - 0x0008:word16] = Mem200[ds_186:0x29ED:word16]
	Mem206[ss:fp - 0x000A:word16] = Mem203[ds_186:0x29EB:word16]
	Mem209[ss:fp - 0x000C:word16] = Mem206[ds_186:0x29D1:word16]
	Mem212[ss:fp - 0x000E:word16] = Mem209[ds_186:0x29CF:word16]
	ds_186 = fn0800_3C99(bp, ds_186)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1ED7:
	Mem171[ss:fp - 0x0004:word16] = 0x0000
	Mem173[ss:fp - 0x0006:word16] = si_187 - ax_89
	Mem176[ss:fp - 0x0008:word16] = Mem173[ds_186:0x29ED:word16]
	Mem179[ss:fp - 0x000A:word16] = Mem176[ds_186:0x29EB:word16]
	Mem182[ss:fp - 0x000C:word16] = Mem179[ds_186:0x29D1:word16]
	Mem185[ss:fp - 0x000E:word16] = Mem182[ds_186:0x29CF:word16]
	si_187 = fn0800_3BC3(bp, ds_186, out ds_186)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si
// LocalsOut: Local -0002(16)

l0800_1F19:
	Mem105[ss:fp - 0x0004:word16] = 0x0000
	Mem109[ss:fp - 0x0006:word16] = Mem105[ds_186:0x29ED:word16]
	Mem112[ss:fp - 0x0008:word16] = Mem109[ds_186:0x29EB:word16]
	Mem115[ss:fp - 0x000A:word16] = Mem112[ds_186:0x29D1:word16]
	Mem118[ss:fp - 0x000C:word16] = Mem115[ds_186:0x29CF:word16]
	selector ds_124
	fn0800_ACB3(ds_186, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_124)
	Mem129[ss:fp - 0x0004:word16] = Mem118[ds_124:0x29D1:word16]
	Mem132[ss:fp - 0x0006:word16] = Mem129[ds_124:0x29CF:word16]
	Mem137[ss:fp - 0x0008:word16] = 0x0000
	Mem139[ss:fp - 0x000A:word16] = si_187
	Mem142[ss:fp - 0x000C:word16] = Mem139[ds_124:0x2E53:word16]
	Mem145[ss:fp - 0x000E:word16] = Mem142[ds_124:0x2E51:word16]
	selector ds_148
	fn0800_4152(ds_124, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_148)
	Mem154[ss:fp - 0x0004:word16] = Mem145[ds_148:0x2E53:word16]
	Mem157[ss:fp - 0x0006:word16] = Mem154[ds_148:0x2E51:word16]
	selector ds_158
	fn0800_4346(ds_148, wArg00, wArg02, out ds_158)
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si

fn0800_1E5E_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> si:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> bp:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):si



word16 fn0800_1F5C(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_1F5C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_1F5C:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_23 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C:
	branch cx_23 == 0x0000 l0800_1F6E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6C_1:
	di_15 = di_15 + 0x0001
	cx_23 = cx_23 - 0x0001
	branch 0x00 == Mem0[es_16:di_15:byte] l0800_1F6C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F6E:
	word16 cx_35 = ~cx_23
	word16 di_356 = di_15 - cx_35
	byte Z_364 = cond(di_356)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75:
	branch cx_35 == 0x0000 l0800_1F77
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F75_2:
	Z_364 = cond(0x3A - Mem0[es_16:di_356:byte]) (alias)
	di_356 = di_356 + 0x0001
	cx_35 = cx_35 - 0x0001
	branch 0x3A == Mem0[es_16:di_356:byte] l0800_1F75
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F77:
	branch Z_364 l0800_1F80
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F79:
	di_356 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F80:
	branch di_356 == 0x0001 l0800_1FAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1F87:
	word16 di_283 = (word16) ptrArg02
	word16 cx_289 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F:
	branch cx_289 == 0x0000 l0800_1F91
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F8F_1:
	di_283 = di_283 + 0x0001
	cx_289 = cx_289 - 0x0001
	branch 0x00 == Mem0[0x0000:di_283:byte] l0800_1F8F
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F91:
	word16 cx_299 = ~cx_289
	word16 di_304 = di_283 - cx_299
	byte Z_308 = cond(di_304)
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98:
	branch cx_299 == 0x0000 l0800_1F9A
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F98_2:
	Z_308 = cond(0x3A - Mem0[0x0000:di_304:byte]) (alias)
	di_304 = di_304 + 0x0001
	cx_299 = cx_299 - 0x0001
	branch 0x3A == Mem0[0x0000:di_304:byte] l0800_1F98
// DataOut: al bp cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9A:
	branch Z_308 l0800_1FA3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1F9C:
	di_304 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_1FA3:
	wArg04 = 0x0000
	wArg02 = di_304
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_1FAD:
	word16 dx_90 = DPB(dx, 0x00, 8)
	word16 ax_93 = Mem0[ds:0x2E53:word16]
	word16 dx_95 = Mem0[ds:0x2E51:word16] + dx_90
	word16 di_109 = (word16) ptrArg02
	word16 cx_105 = 0xFFFF
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE:
	branch cx_105 == 0x0000 l0800_1FE0
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FDE_1:
	di_109 = di_378 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_378 = di_109
	branch 0x00 == Mem0[0x0000:di_378:byte] l0800_1FDE
// DataOut: al bp cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(32) Local -0008(8) Stack +0002(16)

l0800_1FE0:
	word16 cx_115 = ~cx_105
	word16 ax_122 = dx_95 - Mem0[ds:0x2E51:word16]
	word16 ax_126 = ax_122 + (cx_115 + 0x0003)
	word16 bx_138 = (word16) ptrLoc06
	word16 dx_133
	Mem139[0x0000:bx_138:byte] = (byte) fn0800_8C8A(ax_126, 0x08, 0x0000 - (ax_122 <u 0x0000) + (ax_126 <u 0x0000), wLoc10, out dx_133)
	byte bLoc0A_119 = (byte) (cx_115 + 0x0003)
	Mem148[0x0000:bx_138 + 0x0001:byte] = (byte) (dx_95 - Mem139[ds:0x2E51:word16]) + bLoc0A_119
	Mem152[ss:fp - 0x0010:word16] = 0x0000
	Mem157[ss:fp - 0x0012:word16] = dx_95 + 0x0002
	word16 di_158 = wArg02
	word16 cx_165 = 0xFFFF
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> -14(fp):di -12(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C:
	branch cx_165 == 0x0000 l0800_202E
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202C_2:
	di_158 = di_158 + 0x0001
	cx_165 = cx_165 - 0x0001
	branch 0x00 == Mem157[0x0000:di_158:byte] l0800_202C
// DataOut: al bp bx cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_202E:
	word16 di_184 = Mem157[ss:fp - 0x0012:word16]
	selector es_187 = Mem157[ss:fp - 0x0010:selector]
	Mem192[ss:fp - 0x0010:word16] = ds
	word16 cx_175 = ~cx_165
	word16 cx_177 = cx_175 >>u 0x0001
	word16 si_183 = di_158 - cx_175
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D:
	branch cx_177 == 0x0000 l0800_203F
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203F:
	word16 cx_206 = cx_177 * 0x0002 + (cx_175 >>u 0x0001 <u 0x0000)
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2041:
	branch cx_206 == 0x0000 l0800_2043
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_2043:
	selector ds_221 = Mem192[ss:fp - 0x0010:selector]
	*dsOut = ds_221
	Mem225[ax_93:bx_138 + (cx_115 + 0x0003) - 0x0001:byte] = 0x00
	ptr32 es_bx_231 = Mem225[ds_221:0x2E51:segptr32]
	Mem234[es_bx_231 + 0x0004:byte] = (byte) (dx_90 + (cx_115 + 0x0003) >>u 0x08)
	Mem238[es_bx_231 + 0x0005:byte] = bLoc08 + bLoc0A_119
	Mem243[ss:fp - 0x0010:word16] = 0x0000
	Mem245[ss:fp - 0x0012:word16] = 0x0000
	Mem247[ss:fp - 0x0014:word16] = 0x0000
	Mem250[ss:fp - 0x0016:word16] = cx_115 + 0x0003
	fn0800_2688(fp - 0x0002, ds_221, wArg00, wArg02, wArg04, wArg06)
	word16 dx_255
	*dxOut = ax_93
	return dx_95
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_1F5C_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:0x00 -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2041_1:
	Mem215[es_187:di_184:byte] = Mem192[0x0000:si_183:byte]
	si_183 = si_183 + 0x0001
	di_184 = di_184 + 0x0001
	cx_206 = cx_206 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)

l0800_203D_3:
	Mem200[es_187:di_184:word16] = Mem192[0x0000:si_183:word16]
	si_183 = si_183 + 0x0002
	di_184 = di_184 + 0x0002
	cx_177 = cx_177 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0008(8) Local -000A(16)



void fn0800_2085(selector ds, segptr32 ptrArg02, selector psegArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(32)
fn0800_2085_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(32)

l0800_2085:
	word16 ax_28 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_32 = Mem0[ds:0x2E51:word16] + ax_28
	word16 di_37 = (word16) ptrArg02
	selector es_38 = SLICE(ptrArg02, selector, 16)
	word16 cx_43 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE:
	branch cx_43 == 0x0000 l0800_20C0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20BE_1:
	di_37 = di_509 + 0x0001
	cx_43 = cx_43 - 0x0001
	word16 di_509 = di_37
	branch 0x00 == Mem0[es_38:di_509:byte] l0800_20BE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Local -000C(8) Stack +0002(16) Stack +0004(16) Stack +0006(32)

l0800_20C0:
	word16 bx_73 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[ptrArg06:byte] << 0x08) + DPB(dx_32, 0x00, 8))
	word16 cx_55 = ~cx_43
	segptr32 ptrLoc06_78 = DPB(ptrLoc06, bx_73 - 0x0001, 0)
	selector ds_100 = fn0800_B0F3(bx_73 - 0x0001 + (cx_55 + 0x0004), Mem0[ds:0x2E53:word16], bx_73 - 0x0001, Mem0[ds:0x2E53:word16], dx_32 - (bx_73 - 0x0001))
	selector es_104 = SLICE(ptrLoc06_78, selector, 16)
	word16 di_113 = wArg02
	word16 cx_119 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -18(fp):di -16(fp):si -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F:
	branch cx_119 == 0x0000 l0800_2121
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_211F_2:
	di_113 = di_113 + 0x0001
	cx_119 = cx_119 - 0x0001
	branch 0x00 == Mem0[psegArg04:di_113:byte] l0800_211F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -0016(16) Local -001C(16)

l0800_2121:
	word16 cx_129 = ~cx_119
	word16 cx_131 = cx_129 >>u 0x0001
	word16 si_137 = di_113 - cx_129
	word16 di_138 = bx_73 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130:
	branch cx_131 == 0x0000 l0800_2132
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2132:
	word16 cx_160 = cx_131 * 0x0002 + (cx_129 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2134:
	branch cx_160 == 0x0000 l0800_2136
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2136:
	word16 di_178 = bx_73 - 0x0001
	selector es_179 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_184 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F:
	branch cx_184 == 0x0000 l0800_2141
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_213F_1:
	di_178 = di_178 + 0x0001
	cx_184 = cx_184 - 0x0001
	branch 0x00 == Mem0[es_179:di_178:byte] l0800_213F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2141:
	word16 cx_194 = ~cx_184
	word16 di_198 = di_178 - cx_194
	byte Z_202 = cond(di_198)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147:
	branch cx_194 == 0x0000 l0800_2149
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2147_2:
	Z_202 = cond(0x00 - Mem0[es_179:di_198:byte]) (alias)
	di_198 = di_198 + 0x0001
	cx_194 = cx_194 - 0x0001
	branch 0x00 == Mem0[es_179:di_198:byte] l0800_2147
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2149:
	branch Z_202 l0800_2152
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_214B:
	di_198 = 0x0001
	es_179 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2152:
	Mem226[es_179:di_198:byte] = 0x00
	word16 di_228 = bx_73 - 0x0001
	selector es_229 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_234 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164:
	branch cx_234 == 0x0000 l0800_2166
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2164_1:
	di_228 = di_228 + 0x0001
	cx_234 = cx_234 - 0x0001
	branch 0x00 == Mem226[es_229:di_228:byte] l0800_2164
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2166:
	word16 cx_244 = ~cx_234
	word16 di_248 = di_228 - cx_244
	byte Z_252 = cond(di_248)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C:
	branch cx_244 == 0x0000 l0800_216E
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216C_2:
	Z_252 = cond(0x00 - Mem226[es_229:di_248:byte]) (alias)
	di_248 = di_248 + 0x0001
	cx_244 = cx_244 - 0x0001
	branch 0x00 == Mem226[es_229:di_248:byte] l0800_216C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_216E:
	branch Z_252 l0800_2177
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2170:
	di_248 = 0x0001
	es_229 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2177:
	Mem276[es_229:di_248 + 0x0001:byte] = 0x00
	word16 di_278 = bx_73 - 0x0001
	selector es_279 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_284 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189:
	branch cx_284 == 0x0000 l0800_218B
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2189_1:
	di_278 = di_278 + 0x0001
	cx_284 = cx_284 - 0x0001
	branch 0x00 == Mem276[es_279:di_278:byte] l0800_2189
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_218B:
	word16 cx_294 = ~cx_284
	word16 di_298 = di_278 - cx_294
	byte Z_302 = cond(di_298)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191:
	branch cx_294 == 0x0000 l0800_2193
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2191_2:
	Z_302 = cond(0x00 - Mem276[es_279:di_298:byte]) (alias)
	di_298 = di_298 + 0x0001
	cx_294 = cx_294 - 0x0001
	branch 0x00 == Mem276[es_279:di_298:byte] l0800_2191
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2193:
	branch Z_302 l0800_219C
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_2195:
	di_298 = 0x0001
	es_279 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_219C:
	Mem326[es_279:di_298 + 0x0002:byte] = 0x00
	word16 di_328 = bx_73 - 0x0001
	selector es_329 = SLICE(ptrLoc06_78, selector, 16)
	word16 cx_334 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE:
	branch cx_334 == 0x0000 l0800_21B0
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21AE_1:
	di_328 = di_328 + 0x0001
	cx_334 = cx_334 - 0x0001
	branch 0x00 == Mem326[es_329:di_328:byte] l0800_21AE
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B0:
	word16 cx_344 = ~cx_334
	word16 di_348 = di_328 - cx_344
	byte Z_352 = cond(di_348)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6:
	branch cx_344 == 0x0000 l0800_21B8
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B6_2:
	Z_352 = cond(0x00 - Mem326[es_329:di_348:byte]) (alias)
	di_348 = di_348 + 0x0001
	cx_344 = cx_344 - 0x0001
	branch 0x00 == Mem326[es_329:di_348:byte] l0800_21B6
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21B8:
	branch Z_352 l0800_21C1
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21BA:
	di_348 = 0x0001
	es_329 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16) Local -001C(16)

l0800_21C1:
	Mem376[es_329:di_348 + 0x0003:byte] = 0x00
	ptr32 es_bx_382 = Mem376[ds_100:0x2E51:segptr32]
	Mem385[es_bx_382 + 0x0004:byte] = (byte) (ax_28 + (cx_55 + 0x0004) >>u 0x08)
	Mem390[es_bx_382 + 0x0005:byte] = bLoc0C + bLoc0E
	fn0800_2688(fp - 0x0002, ds_100, cx_55 + 0x0004, 0x0000, 0x0000, 0x0000)
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2085_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di bx:<invalid> es:<invalid> si:si ds:<invalid> bl:<invalid> bh:0x00 ch:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2134_1:
	Mem169[es_104:di_138:byte] = Mem0[psegArg04:si_137:byte]
	si_137 = si_137 + 0x0001
	di_138 = di_138 + 0x0001
	cx_160 = cx_160 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)

l0800_2130_3:
	Mem154[es_104:di_138:word16] = Mem0[psegArg04:si_137:word16]
	si_137 = si_137 + 0x0002
	di_138 = di_138 + 0x0002
	cx_131 = cx_131 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> bx:<invalid> es:<invalid> si:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(8) Local -000E(16) Local -0014(16) Local -001C(16)



selector fn0800_2201(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_2201_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_2201:
	word16 ax_25 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_30 = Mem0[ds:0x2E51:word16] + ax_25
	word16 dx_48 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[ptrArg02:byte] << 0x08) + DPB(dx_30, 0x00, 8)) - wArg02
	word16 ax_55 = wArg02 + dx_48
	selector ds_78 = fn0800_B0F3(wArg02, wArg04, ax_55, wArg04, dx_30 - ax_55)
	ptr32 es_bx_85 = Mem0[ds_78:0x2E51:segptr32]
	Mem88[es_bx_85 + 0x0004:byte] = (byte) (ax_25 - dx_48 >>u 0x08)
	Mem91[es_bx_85 + 0x0005:byte] = (byte) ax_25 - (byte) dx_48
	word16 ax_100 = -dx_48
	fn0800_2688(fp - 0x0002, ds_78, ax_100, -0x0000 - (ax_100 == 0x0000), 0x0000, 0x0000)
	word16 dx_110 = Mem91[ds_78:0x45AE:word16]
	branch Mem91[ds_78:0x45B0:word16] != wArg04 l0800_22EA
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22B7:
	branch dx_110 != wArg02 l0800_22EA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_22EA:
	branch Mem91[ds_78:0x45AE:word16] <=u wArg02 l0800_22F9
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_22F2:
	Mem145[ds_78:0x45AA:word16] = Mem91[ds_78:0x45AA:word16] - dx_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22F9:
	return ds_78
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_22BC:
	selector es_151 = SLICE(ptrArg02, selector, 16)
	word16 di_152 = (word16) ptrArg02 + 0x0002
	word16 cx_158 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7:
	branch cx_158 == 0x0000 l0800_22C9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C7_1:
	di_152 = di_152 + 0x0001
	cx_158 = cx_158 - 0x0001
	branch 0x00 == Mem91[es_151:di_152:byte] l0800_22C7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22C9:
	word16 cx_168 = ~cx_158
	word16 di_172 = di_152 - cx_168
	byte Z_176 = cond(di_172)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF:
	branch cx_168 == 0x0000 l0800_22D1
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22CF_2:
	Z_176 = cond(0x00 - Mem91[es_151:di_172:byte]) (alias)
	di_172 = di_172 + 0x0001
	cx_168 = cx_168 - 0x0001
	branch 0x00 == Mem91[es_151:di_172:byte] l0800_22CF
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D1:
	branch Z_176 l0800_22DA
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22D3:
	di_172 = 0x0001
	es_151 = 0x0000
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_22DA:
	Mem206[ds_78:0x45AC:word16] = es_151
	Mem207[ds_78:0x45AA:word16] = di_172
	return ds_78
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2201_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> di:di Sequence es:di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_22FE(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_22FE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_22FE:
	word16 ax_25 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	word16 dx_29 = Mem0[ds:0x2E51:word16] + ax_25
	word16 di_205 = (word16) ptrArg02
	selector es_35 = SLICE(ptrArg02, selector, 16)
	word16 cx_207 = 0xFFFF
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336:
	branch cx_207 == 0x0000 l0800_2338
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2336_1:
	di_205 = di_205 + 0x0001
	cx_207 = cx_207 - 0x0001
	branch 0x00 == Mem0[es_35:di_205:byte] l0800_2336
// DataOut: al bp cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2338:
	word16 cx_201 = ~cx_207
	word16 di_188 = di_205 - cx_201
	byte Z_196 = cond(di_188)
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E:
	branch cx_201 == 0x0000 l0800_2340
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_233E_2:
	Z_196 = cond(0x00 - Mem0[es_35:di_188:byte]) (alias)
	di_188 = di_188 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 == Mem0[es_35:di_188:byte] l0800_233E
// DataOut: al bp cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2340:
	branch Z_196 l0800_2349
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2342:
	di_188 = 0x0001
// DataOut: bp di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(8) Stack +0002(16) Stack +0004(16)

l0800_2349:
	word16 di_89 = di_188 + 0x0004 - wArg02
	word16 ax_96 = wArg02 + di_89
	selector ds_119 = fn0800_B0F3(wArg02, wArg04, ax_96, wArg04, dx_29 - ax_96)
	ptr32 es_bx_126 = Mem0[ds_119:0x2E51:segptr32]
	Mem129[es_bx_126 + 0x0004:byte] = (byte) (ax_25 - di_89 >>u 0x08)
	Mem133[es_bx_126 + 0x0005:byte] = bLoc08 - (byte) di_89
	word16 ax_142 = -di_89
	fn0800_2688(fp - 0x0002, ds_119, ax_142, -0x0000 - (ax_142 == 0x0000), 0x0000, 0x0000)
	Mem154[ds_119:0x45AC:word16] = wArg04
	word16 dx_153 = wArg02 + di_89
	Mem155[ds_119:0x45AA:word16] = dx_153
	branch (dx_153 | wArg04) == 0x0000 l0800_23D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> -14(fp):di -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_23D8:
	branch Mem155[ds_119:0x45AA:word16] <=u wArg02 l0800_23E7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_23E0:
	Mem186[ds_119:0x45AA:word16] = Mem155[ds_119:0x45AA:word16] - di_89
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_23E7:
	return ds_119
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_23C6:
	Mem169[ds_119:0x45AC:word16] = wArg04
	Mem170[ds_119:0x45AA:word16] = wArg02
	return ds_119
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_22FE_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:di es:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> bh:0x00 -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di -12(fp):<invalid> -10(fp):<invalid> -8(fp):(ax << 0x10) + dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_23EC(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: bp ds sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_23EC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_23EC:
	word16 dx_22
	word16 bp_23
	word16 si_24
	selector ds_25
	word16 ax_26 = fn0800_24FE(fp - 0x0002, ds, DPB(ptrLoc10, wArg02, 0), out dx_22, out bp_23, out si_24, out ds_25)
	Mem28[ss:bp_23 - 0x0006:word16] = dx_22
	Mem30[ss:bp_23 - 0x0008:word16] = ax_26
	ptr32 es_di_31 = Mem30[ss:bp_23 + 0x0004:segptr32]
	word16 di_32 = (word16) es_di_31
	selector es_33 = SLICE(es_di_31, selector, 16)
	word16 cx_40 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_240D:
	branch cx_40 == 0x0000 l0800_240F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240D_1:
	di_32 = di_32 + 0x0001
	cx_40 = cx_40 - 0x0001
	branch 0x00 == Mem30[es_33:di_32:byte] l0800_240D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_240F:
	word16 cx_403 = ~cx_40
	word16 di_391 = di_32 - cx_403
	byte Z_399 = cond(di_391)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415:
	branch cx_403 == 0x0000 l0800_2417
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2415_2:
	Z_399 = cond(0x00 - Mem30[es_33:di_391:byte]) (alias)
	di_391 = di_391 + 0x0001
	cx_403 = cx_403 - 0x0001
	branch 0x00 == Mem30[es_33:di_391:byte] l0800_2415
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2417:
	branch Z_399 l0800_2420
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2419:
	di_391 = 0x0001
	es_33 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2420:
	ptr32 es_di_88 = Mem30[ss:bp_23 + 0x0004:segptr32]
	Mem92[ss:fp - 0x000E:word16] = (int16) Mem30[es_33:di_391:byte] << 0x08
	word16 di_106 = (word16) es_di_88
	selector es_137 = SLICE(es_di_88, selector, 16)
	word16 cx_102 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437:
	branch cx_102 == 0x0000 l0800_2439
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2437_1:
	di_106 = di_106 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x00 == Mem92[es_137:di_106:byte] l0800_2437
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2439:
	word16 cx_109 = ~cx_102
	word16 di_115 = di_106 - cx_109
	byte Z_119 = cond(di_115)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F:
	branch cx_109 == 0x0000 l0800_2441
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_243F_2:
	Z_119 = cond(0x00 - Mem92[es_137:di_414:byte]) (alias)
	di_115 = di_414 + 0x0001
	cx_109 = cx_109 - 0x0001
	word16 di_414 = di_115
	branch 0x00 == Mem92[es_137:di_414:byte] l0800_243F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2441:
	branch Z_119 l0800_244A
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2443:
	es_137 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_244A:
	ptr32 es_di_154 = Mem92[ss:bp_23 + 0x0004:segptr32]
	Mem158[ss:fp - 0x000E:word16] = Mem92[ss:fp - 0x000E:word16] + DPB(es_137, 0x00, 8)
	Mem160[ss:fp - 0x0010:word16] = 0x0000
	word16 di_155 = (word16) es_di_154
	selector es_156 = SLICE(es_di_154, selector, 16)
	word16 cx_161 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462:
	branch cx_161 == 0x0000 l0800_2464
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2462_1:
	di_155 = di_155 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem160[es_156:di_155:byte] l0800_2462
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2464:
	word16 cx_171 = ~cx_161
	word16 di_177 = di_155 - cx_171
	byte Z_181 = cond(di_177)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A:
	branch cx_171 == 0x0000 l0800_246C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246A_2:
	Z_181 = cond(0x00 - Mem160[es_156:di_177:byte]) (alias)
	di_177 = di_177 + 0x0001
	cx_171 = cx_171 - 0x0001
	branch 0x00 == Mem160[es_156:di_177:byte] l0800_246A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246C:
	branch Z_181 l0800_2475
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_246E:
	di_177 = 0x0001
	es_156 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2475:
	ptr32 es_di_208 = Mem160[ss:bp_23 + 0x0004:segptr32]
	Mem212[ss:fp - 0x0012:word16] = (int16) Mem160[es_156:di_177 + 0x0002:byte] << 0x08
	word16 di_209 = (word16) es_di_208
	selector es_210 = SLICE(es_di_208, selector, 16)
	word16 cx_219 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C:
	branch cx_219 == 0x0000 l0800_248E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248C_1:
	di_209 = di_209 + 0x0001
	cx_219 = cx_219 - 0x0001
	branch 0x00 == Mem212[es_210:di_209:byte] l0800_248C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_248E:
	word16 cx_229 = ~cx_219
	word16 di_235 = di_209 - cx_229
	byte Z_239 = cond(di_235)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494:
	branch cx_229 == 0x0000 l0800_2496
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2494_2:
	Z_239 = cond(0x00 - Mem212[es_210:di_418:byte]) (alias)
	di_235 = di_418 + 0x0001
	cx_229 = cx_229 - 0x0001
	word16 di_418 = di_235
	branch 0x00 == Mem212[es_210:di_418:byte] l0800_2494
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2496:
	branch Z_239 l0800_249F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2498:
	es_210 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_249F:
	word16 ax_272 = Mem212[ss:fp - 0x0010:word16] + (Mem212[ss:fp - 0x0012:word16] + DPB(es_210, 0x00, 8))
	Mem278[ss:bp_23 - 0x0002:word16] = Mem212[ss:fp - 0x000E:word16] + (ax_272 <u 0x0000)
	Mem279[ss:bp_23 - 0x0004:word16] = ax_272
	Mem282[ss:fp - 0x000E:word16] = Mem279[ss:bp_23 - 0x0006:word16]
	Mem285[ss:fp - 0x0010:word16] = Mem282[ss:bp_23 - 0x0008:word16]
	word16 dx_288 = Mem285[ss:bp_23 - 0x0004:word16] - Mem285[ds_25:0x45A6:word16]
	Mem294[ss:fp - 0x0012:word16] = Mem285[ss:bp_23 - 0x0002:word16] - Mem285[ds_25:0x45A8:word16] - (dx_288 <u 0x0000)
	Mem296[ss:fp - 0x0014:word16] = dx_288
	Mem299[ss:fp - 0x0016:word16] = Mem296[ds_25:0x29D1:word16]
	Mem302[ss:fp - 0x0018:word16] = Mem299[ds_25:0x29CF:word16]
	selector ds_303 = fn0800_3C99(bp_23, ds_25)
	*dsOut = ds_303
	Mem307[ss:fp - 0x000E:word16] = Mem302[ss:bp_23 - 0x0002:word16]
	Mem310[ss:fp - 0x0010:word16] = Mem307[ss:bp_23 - 0x0004:word16]
	word16 dx_314 = -Mem310[ss:bp_23 - 0x0008:word16]
	Mem319[ss:fp - 0x0012:word16] = -Mem310[ss:bp_23 - 0x0006:word16] - (dx_314 == 0x0000)
	Mem321[ss:fp - 0x0014:word16] = dx_314
	fn0800_2688(bp_23, ds_303, wArg00, wArg02, wArg04, wArg06)
	return Mem321[ss:bp_23:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -2(fp):bp

fn0800_23EC_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:0x00 bl:<invalid> dl:<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):ax -8(fp):dx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_24FE(word16 bp, selector ds, segptr32 ptrArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds dx si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32)
fn0800_24FE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_24FE:
	word16 di_12 = (word16) ptrArg02
	selector es_13 = SLICE(ptrArg02, selector, 16)
	word16 cx_21 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_250D:
	branch cx_21 == 0x0000 l0800_250F
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_250D_1:
	di_12 = di_12 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch 0x00 == Mem0[es_13:di_12:byte] l0800_250D
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_250F:
	word16 cx_33 = ~cx_21
	word16 di_39 = di_12 - cx_33
	byte Z_43 = cond(di_39)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_2515:
	branch cx_33 == 0x0000 l0800_2517
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_2515_2:
	Z_43 = cond(0x00 - Mem0[es_13:di_39:byte]) (alias)
	di_39 = di_39 + 0x0001
	cx_33 = cx_33 - 0x0001
	branch 0x00 == Mem0[es_13:di_39:byte] l0800_2515
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_2517:
	branch Z_43 l0800_2520
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_2519:
	di_39 = 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(32)

l0800_2520:
	word16 ax_67 = (int16) Mem0[0x0000:di_39:byte]
	word16 di_479 = (word16) ptrArg02
	selector es_119 = SLICE(ptrArg02, selector, 16)
	word16 cx_481 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_2537:
	branch cx_481 == 0x0000 l0800_2539
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_2537_1:
	di_479 = di_479 + 0x0001
	cx_481 = cx_481 - 0x0001
	branch 0x00 == Mem0[0x0000:di_479:byte] l0800_2537
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_2539:
	word16 cx_103 = ~cx_481
	word16 di_110 = di_479 - cx_103
	byte Z_101 = cond(di_110)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_253F:
	branch cx_103 == 0x0000 l0800_2541
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_253F_2:
	Z_101 = cond(0x00 - Mem0[0x0000:di_506:byte]) (alias)
	di_110 = di_506 + 0x0001
	cx_103 = cx_103 - 0x0001
	word16 di_506 = di_110
	branch 0x00 == Mem0[0x0000:di_506:byte] l0800_253F
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_2541:
	branch Z_101 l0800_254A
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_2543:
	es_119 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Stack +0002(32)

l0800_254A:
	word16 dx_129 = (ax_67 << 0x08) + DPB(es_119, 0x00, 8)
	word16 di_137 = (word16) ptrArg02
	selector es_138 = SLICE(ptrArg02, selector, 16)
	word16 cx_143 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562:
	branch cx_143 == 0x0000 l0800_2564
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2562_1:
	di_137 = di_137 + 0x0001
	cx_143 = cx_143 - 0x0001
	branch 0x00 == Mem0[es_138:di_137:byte] l0800_2562
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2564:
	word16 cx_153 = ~cx_143
	word16 di_159 = di_137 - cx_153
	byte Z_163 = cond(di_159)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A:
	branch cx_153 == 0x0000 l0800_256C
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256A_2:
	Z_163 = cond(0x00 - Mem0[es_138:di_159:byte]) (alias)
	di_159 = di_159 + 0x0001
	cx_153 = cx_153 - 0x0001
	branch 0x00 == Mem0[es_138:di_159:byte] l0800_256A
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256C:
	branch Z_163 l0800_2575
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_256E:
	di_159 = 0x0001
	es_138 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Stack +0002(32)

l0800_2575:
	word16 ax_187 = (int16) Mem0[es_138:di_159 + 0x0002:byte]
	word16 di_191 = (word16) ptrArg02
	selector es_192 = SLICE(ptrArg02, selector, 16)
	word16 cx_201 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0014 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C:
	branch cx_201 == 0x0000 l0800_258E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258C_1:
	di_191 = di_191 + 0x0001
	cx_201 = cx_201 - 0x0001
	branch 0x00 == Mem0[es_192:di_191:byte] l0800_258C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_258E:
	word16 cx_211 = ~cx_201
	word16 di_217 = di_191 - cx_211
	byte Z_221 = cond(di_217)
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594:
	branch cx_211 == 0x0000 l0800_2596
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2594_2:
	Z_221 = cond(0x00 - Mem0[es_192:di_510:byte]) (alias)
	di_217 = di_510 + 0x0001
	cx_211 = cx_211 - 0x0001
	word16 di_510 = di_217
	branch 0x00 == Mem0[es_192:di_510:byte] l0800_2594
// DataOut: al bp cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2596:
	branch Z_221 l0800_259F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_2598:
	es_192 = 0x0000
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0012(16) Local -0014(16) Local -0016(16)

l0800_259F:
	word16 dx_250 = (ax_187 << 0x08) + DPB(es_192, 0x00, 8)
	word16 ax_260 = dx_250 - Mem0[ds:0x45A6:word16]
	selector ds_285
	word16 ax_286 = fn0800_ACB3(ds, DPB(ptrLoc1A, Mem0[ds:0x29CF:word16], 0), Mem0[ds:0x29D1:word16], ax_260, dx_129 + (dx_250 <u 0x0000) - Mem0[ds:0x45A8:word16] - (ax_260 <u 0x0000), 0x0000, out ds_285)
	word16 si_295
	selector ds_296
	word16 dx_297 = fn0800_3E5D(fp - 0x0002, ds_285, Mem0[ds_285:0x29CF:word16], Mem0[ds_285:0x29D1:word16], out si_295, out ds_296)
	Mem300[ss:fp - 0x0008:word16] = dx_297
	Mem302[ss:fp - 0x000A:word16] = ax_286
	word16 dx_304
	word16 ax_305 = fn0800_8C8A(ax_286, 0x08, dx_297, bp, out dx_304)
	branch dx_304 != 0x0052 l0800_25FC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25F7:
	branch ax_305 == 0x4E43 l0800_260B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_25FC:
	Mem406[ss:fp - 0x0012:word16] = ds_296
	Mem409[ss:fp - 0x0014:word16] = 0x4348
	Mem412[ss:fp - 0x0016:word16] = 0x000C
	word16 si_414
	word16 di_415
	fn0800_0D24(ds_296, wArg00, ptrArg02, wArg04, out si_414, out di_415, out ds_296)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_260B:
	word16 ax_318 = Mem302[ss:fp - 0x000A:word16]
	branch (ax_318 & 0x00FF) == 0x0000 l0800_2655
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2655:
	Mem383[ss:fp - 0x0012:word16] = Mem302[ds_296:0x29D1:word16]
	Mem386[ss:fp - 0x0014:word16] = Mem383[ds_296:0x29CF:word16]
	word16 si_387
	selector ds_388
	word16 dx_389 = fn0800_3E5D(fp - 0x0002, ds_296, wArg00, wArg02, out si_387, out ds_388)
	Mem391[ds_388:0x2A05:word16] = dx_389
	Mem392[ds_388:0x2A03:word16] = ax_318 & 0x00FF
	Mem393[ds_388:0x2A09:word16] = dx_389
	Mem394[ds_388:0x2A07:word16] = ax_318 & 0x00FF
	ui32 dx_ax_396 = SEQ(dx_389, (ax_318 & 0x00FF) + 0x0008)
	Mem402[ss:fp - 0x000C:word16] = SLICE(dx_ax_396 + 0x00000008, word16, 16)
	Mem403[ss:fp - 0x000E:word16] = (word16) (dx_ax_396 + 0x00000008)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2616:
	Mem345[ss:fp - 0x0012:word16] = Mem302[ds_296:0x29D1:word16]
	Mem348[ss:fp - 0x0014:word16] = Mem345[ds_296:0x29CF:word16]
	word16 si_351
	selector ds_352
	word16 dx_353 = fn0800_3E5D(fp - 0x0002, ds_296, wArg00, wArg02, out si_351, out ds_352)
	Mem356[ds_352:0x2A09:word16] = dx_353
	Mem357[ds_352:0x2A07:word16] = ax_318 & 0x00FF
	Mem360[ss:fp - 0x0012:word16] = Mem357[ds_352:0x29D1:word16]
	Mem363[ss:fp - 0x0014:word16] = Mem360[ds_352:0x29CF:word16]
	word16 si_364
	selector ds_365
	word16 dx_366 = fn0800_3E5D(fp - 0x0002, ds_352, wArg00, wArg02, out si_364, out ds_365)
	Mem368[ds_365:0x2A05:word16] = dx_366
	Mem369[ds_365:0x2A03:word16] = ax_318 & 0x00FF
	ui32 ax_dx_373 = SEQ(Mem369[ds_365:0x2A05:word16], Mem369[ds_365:0x2A03:word16] + 0x0012)
	Mem379[ss:fp - 0x000C:word16] = SLICE(ax_dx_373 + 0x00000012, word16, 16)
	Mem380[ss:fp - 0x000E:word16] = (word16) (ax_dx_373 + 0x00000012)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_267D:
	word16 dx_328
	*dxOut = Mem302[ss:fp - 0x000C:word16]
	word16 bp_337
	*bpOut = Mem302[ss:fp - 0x0002:word16]
	return Mem302[ss:fp - 0x000E:word16]
// DataOut: ax bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_24FE_exit:
// DataOut: ax bp ds dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:<invalid> al:<invalid> cl:0x08 ah:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2688(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_2688_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2688:
	word16 dx_23 = Mem0[ds:0x2E53:word16]
	word16 bx_24 = (word16) Mem0[ds:0x2E51:segptr32] + ((DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	word16 ax_27 = Mem0[ds:0x2E53:word16]
	word16 wLoc06_225 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27B3:
	branch ax_27 == dx_23 l0800_27C1
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C1:
	branch wLoc06_225 == bx_24 l0800_27C9
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27C9:
	branch (wArg06 | wArg08) != 0x0000 l0800_27DF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_27D1:
	word16 v22_267 = Mem0[ds:0x45A6:word16] + wArg02
	Mem268[ds:0x45A6:word16] = v22_267
	Mem272[ds:0x45A8:word16] = Mem268[ds:0x45A8:word16] + wArg04 + (v22_267 <u 0x0000)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_27DF:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_2688_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_27C6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_27BE:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26C3:
	word16 dx_135 = wLoc06_225
	word16 wLoc06_105 = wLoc06_225 + 0x0002
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26D3:
	wLoc06_105 = wLoc06_105 + 0x0001
	branch Mem0[ptrLoc06:byte] != 0x00 l0800_26D3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26DF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_277D:
	branch Mem0[ptrLoc06:byte] == 0x00 l0800_2789
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2789:
	word16 v24_224 = wLoc06_105 + 0x0001
	word16 ax_228 = v24_224 - Mem0[ds:0x2E51:word16]
	word16 dx_234
	Mem241[ptrLoc0E:byte] = (byte) fn0800_8C8A(ax_228, 0x08, 0x0000 - (ax_228 <u 0x0000), bp, out dx_234)
	Mem250[ptrLoc0E + 0x0001:byte] = (byte) (v24_224 - Mem241[ds:0x2E51:word16])
	wLoc06_225 = v24_224
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2786:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26E2:
	word16 v25_109 = wLoc06_105 + 0x0001
	wLoc06_105 = v25_109
	branch Mem0[ptrLoc06:byte] != 0x00 l0800_26E2
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_26EE:
	Mem126[ss:fp - 0x0014:word16] = ((int16) Mem0[ptrLoc06:byte] << 0x08) + DPB(dx_135, 0x00, 8)
	word16 ax_134 = ((int16) Mem126[ptrLoc06 + 0x0002:byte] << 0x08) + DPB((word16) ptrLoc06, 0x00, 8)
	dx_135 = ax_134
	word16 ax_142 = Mem126[ss:fp - 0x0014:word16] + (ax_134 <u 0x0000)
	branch ax_142 < wArg08 l0800_2779
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2727:
	branch ax_142 != wArg08 l0800_272E
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2729:
	branch ax_134 <u wArg06 l0800_2779
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Local -0010(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_272E:
	int32 dx_ax_177 = (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + _, word16, 16)
	word16 dx_181
	Mem187[ptrLoc06:byte] = (byte) fn0800_8C8A((word16) dx_ax_177, 0x08, SLICE(dx_ax_177, word16, 16), bp, out dx_181)
	Mem197[ptrLoc06 + 0x0001:byte] = (byte) (int32) SLICE(SEQ(ax_142, ax_134 + wArg02) + _, word16, 16)
	word16 ax_200 = ax_134 + wArg02
	Mem214[ptrLoc06 + 0x0002:byte] = (byte) fn0800_8C8A(ax_200, 0x08, ax_142 + wArg04 + (SEQ(ax_200, ax_142) <u 0x00000000), bp, out dx_135)
	Mem220[ptrLoc06 + 0x0003:byte] = bLoc12 + bArg02
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_2779:
	wLoc06_105 = v25_109 + 0x0004
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:0x00 Sequence dx:ax:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):bx + ((ax << 0x10) + dx) -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(32) Local -0004(16) Local -0006(32) Local -0008(0) Local -000A(0) Local -000E(32) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)



word16 fn0800_283D(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_283D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_283D:
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	word16 cx_21 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D:
	branch cx_21 == 0x0000 l0800_284F
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284D_1:
	di_15 = di_15 + 0x0001
	cx_21 = cx_21 - 0x0001
	branch 0x00 == Mem0[es_16:di_15:byte] l0800_284D
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_284F:
	word16 cx_33 = ~cx_21
	word16 di_346 = di_15 - cx_33
	byte Z_354 = cond(di_346)
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856:
	branch cx_33 == 0x0000 l0800_2858
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2856_2:
	Z_354 = cond(0x3A - Mem0[es_16:di_346:byte]) (alias)
	di_346 = di_346 + 0x0001
	cx_33 = cx_33 - 0x0001
	branch 0x3A == Mem0[es_16:di_346:byte] l0800_2856
// DataOut: al cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2858:
	branch Z_354 l0800_2861
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_285A:
	di_346 = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2861:
	branch di_346 == 0x0001 l0800_288E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2868:
	word16 di_275 = (word16) ptrArg02
	word16 cx_280 = 0xFFFF
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870:
	branch cx_280 == 0x0000 l0800_2872
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2870_1:
	di_275 = di_275 + 0x0001
	cx_280 = cx_280 - 0x0001
	branch 0x00 == Mem0[0x0000:di_275:byte] l0800_2870
// DataOut: al cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2872:
	word16 cx_290 = ~cx_280
	word16 di_294 = di_275 - cx_290
	byte Z_298 = cond(di_294)
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879:
	branch cx_290 == 0x0000 l0800_287B
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2879_2:
	Z_298 = cond(0x3A - Mem0[0x0000:di_372:byte]) (alias)
	di_294 = di_372 + 0x0001
	cx_290 = cx_290 - 0x0001
	word16 di_372 = di_294
	branch 0x3A == Mem0[0x0000:di_372:byte] l0800_2879
// DataOut: al cx di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287B:
	branch Z_298 l0800_2884
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_287D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x003A cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_2884:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_288E:
	word16 dx_94 = Mem0[ds:0x2E53:word16]
	word16 bx_95 = (word16) Mem0[ds:0x2E51:segptr32] + DPB(dx, 0x00, 8)
	word16 wLoc08_102 = Mem0[ds:0x2E53:word16]
	word16 wLoc0A_103 = Mem0[ds:0x2E51:word16] + 0x0008
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> es:0x0000 -14(fp):di -12(fp):si -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2917:
	branch wLoc08_102 != dx_94 l0800_28C2
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_2922:
	branch wLoc0A_103 != bx_95 l0800_28C2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28C2:
	word16 si_150 = wLoc0A_103 + 0x0002
	word16 di_155 = (word16) ptrArg02
	word16 ax_156 = 0x0000
	word16 cx_161 = 0xFFFF
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4:
	branch cx_161 == 0x0000 l0800_28D6
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D4_1:
	di_155 = di_155 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem0[0x0000:di_155:byte] l0800_28D4
// DataOut: al ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28D6:
	word16 cx_171 = ~cx_161
	word16 di_173 = di_155 - cx_171
	byte SCZO_175 = cond(di_173)
	byte Z_177 = SCZO_175
	byte C_178 = SCZO_175
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA:
	branch cx_171 == 0x0000 l0800_28DC
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DA_2:
	byte SCZO_243 = cond(Mem0[wLoc08_102:si_370:byte] - Mem0[0x0000:di_369:byte])
	Z_177 = SCZO_243 (alias)
	C_178 = SCZO_243 (alias)
	si_150 = si_370 + 0x0001
	di_173 = di_369 + 0x0001
	cx_171 = cx_171 - 0x0001
	word16 di_369 = di_173
	word16 si_370 = si_150
	branch Mem0[wLoc08_102:si_370:byte] != Mem0[0x0000:di_369:byte] l0800_28DA
// DataOut: ax cx di ds si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DC:
	branch Z_177 l0800_28E3
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28DE:
	word16 ax_236 = 0x0000 - C_178
	ax_156 = ax_236 - 0xFFFF - (ax_236 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Local -0010(16) Stack +0002(32)

l0800_28E3:
	branch ax_156 != 0x0000 l0800_28F4
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(32) Stack +0002(32)

l0800_28F4:
	wLoc08_102 = Mem0[ds:0x2E53:word16]
	wLoc0A_103 = Mem0[ds:0x2E51:word16] + (((int16) Mem0[0x0000:(word16) ptrLoc0A:byte] << 0x08) + DPB(wLoc0A_103, 0x00, 8))
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000
// LocalsOut: fp(16) Local -0004(0) Local -0006(0) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_28E8:
	word16 dx_207
	*dxOut = wLoc08_102
	return wLoc0A_103
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

l0800_2927:
	word16 dx_260
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000

fn0800_283D_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di es:0x0000 Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:si ds:ds -16(fp):ds -14(fp):di -12(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):0x0000



word16 fn0800_2931(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_2931_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_2931:
	selector es_15 = SLICE(ptrArg06, selector, 16)
	word16 di_16 = (word16) ptrArg06 + 0x0002
	word16 cx_22 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941:
	branch cx_22 == 0x0000 l0800_2943
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2941_1:
	di_16 = di_16 + 0x0001
	cx_22 = cx_22 - 0x0001
	branch 0x00 == Mem0[es_15:di_16:byte] l0800_2941
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2943:
	word16 cx_275 = ~cx_22
	word16 di_263 = di_16 - cx_275
	byte Z_271 = cond(di_263)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949:
	branch cx_275 == 0x0000 l0800_294B
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2949_2:
	Z_271 = cond(0x00 - Mem0[es_15:di_263:byte]) (alias)
	di_263 = di_263 + 0x0001
	cx_275 = cx_275 - 0x0001
	branch 0x00 == Mem0[es_15:di_263:byte] l0800_2949
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294B:
	branch Z_271 l0800_2954
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_294D:
	di_263 = 0x0001
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_2954:
	word16 wArg08_223 = 0x0000
	word16 wArg06_224 = di_263
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:0x0000 cx:<invalid> es:0x0000 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_29B4:
	branch Mem0[ptrArg06:byte] != 0x00 l0800_2960
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2960:
	word16 si_114 = wArg06_224
	word16 di_120 = (word16) ptrArg02
	selector es_121 = SLICE(ptrArg02, selector, 16)
	word16 ax_122 = 0x0000
	word16 cx_126 = 0xFFFF
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F:
	branch cx_126 == 0x0000 l0800_2971
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_296F_1:
	di_120 = di_120 + 0x0001
	cx_126 = cx_126 - 0x0001
	branch 0x00 == Mem0[es_121:di_120:byte] l0800_296F
// DataOut: al ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2971:
	word16 cx_134 = ~cx_126
	word16 di_135 = di_120 - cx_134
	byte SCZO_137 = cond(di_135)
	byte Z_139 = SCZO_137
	byte C_140 = SCZO_137
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975:
	branch cx_134 == 0x0000 l0800_2977
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2975_2:
	byte SCZO_250 = cond(Mem0[wArg08_223:si_285:byte] - Mem0[es_121:di_284:byte])
	Z_139 = SCZO_250 (alias)
	C_140 = SCZO_250 (alias)
	si_114 = si_285 + 0x0001
	di_135 = di_284 + 0x0001
	cx_134 = cx_134 - 0x0001
	word16 di_284 = di_135
	word16 si_285 = si_114
	branch Mem0[wArg08_223:si_285:byte] != Mem0[es_121:di_284:byte] l0800_2975
// DataOut: ax cx di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2977:
	branch Z_139 l0800_297E
// DataOut: ax ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2979:
	word16 ax_244 = 0x0000 - C_140
	ax_122 = ax_244 - 0xFFFF - (ax_244 <u 0x0000)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_297E:
	branch ax_122 != 0x0000 l0800_298D
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_298D:
	word16 di_176 = (word16) ptrArg06
	selector es_177 = SLICE(ptrArg06, selector, 16)
	word16 cx_182 = 0xFFFF
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995:
	branch cx_182 == 0x0000 l0800_2997
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2995_1:
	di_176 = di_176 + 0x0001
	cx_182 = cx_182 - 0x0001
	branch 0x00 == Mem0[es_177:di_176:byte] l0800_2995
// DataOut: al cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_2997:
	word16 cx_190 = ~cx_182
	word16 di_193 = di_176 - cx_190
	byte Z_197 = cond(di_193)
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D:
	branch cx_190 == 0x0000 l0800_299F
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299D_2:
	Z_197 = cond(0x00 - Mem0[es_177:di_193:byte]) (alias)
	di_193 = di_193 + 0x0001
	cx_190 = cx_190 - 0x0001
	branch 0x00 == Mem0[es_177:di_193:byte] l0800_299D
// DataOut: al cx di es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_299F:
	branch Z_197 l0800_29A8
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A1:
	di_193 = 0x0001
	es_177 = 0x0000
// DataOut: di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32)

l0800_29A8:
	wArg08_223 = es_177
	wArg06_224 = di_193 + 0x0004
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +0008(16)

l0800_2983:
	word16 dx_166
	*dxOut = wArg08_223
	return wArg06_224
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

l0800_29BD:
	word16 dx_103
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> di:<invalid> ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2931_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> di:di ax:<invalid> cx:<invalid> es:<invalid> Sequence es:bx:<invalid> dx:<invalid> si:si ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_29C5(word16 bp, word16 si, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_29C5_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_29C5:
	branch (Mem0[ds:0x45AE:word16] | Mem0[ds:0x45B0:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_29D6:
	branch (Mem0[ds:0x45AA:word16] | Mem0[ds:0x45AC:word16]) != 0x0000 l0800_2A07
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_29DF:
	byte dl_867
	branch fn0800_2DE2(fp - 0x0002, si, ds, DPB(ptrLoc82, 0x4541, 0), ds, out dl_867, out ds) != 0x0000 l0800_29F6
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x007E bp:fp - 0x0002 ax:<invalid> -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_29F6:
	word16 dx_893 = Mem0[ds:0x2E51:word16]
	Mem896[ds:0x45B0:word16] = Mem0[ds:0x2E53:word16]
	Mem897[ds:0x45AE:word16] = dx_893 + 0x0008
	dx = dx_893 + 0x0008
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A07:
	Mem59[ss:fp - 0x0080:word16] = ds
	Mem63[ss:fp - 0x0082:word16] = 0x4541
	Mem65[ss:fp - 0x0084:word16] = ss
	Mem68[ss:fp - 0x0086:word16] = fp - 0x006C
	fn0800_3509(ds, wArg04, wArg06)
	Mem74[ss:fp - 0x0080:word16] = ds
	Mem77[ss:fp - 0x0082:word16] = 0x4541
	Mem79[ss:fp - 0x0084:word16] = ss
	Mem82[ss:fp - 0x0086:word16] = fp - 0x007A
	fn0800_35A3(ds, wArg04, wArg06)
	word16 bx_98 = (word16) Mem82[ds:0x2E51:segptr32] + ((DPB(fp - 0x007A, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8))
	Mem100[ss:fp - 0x0004:word16] = Mem82[ds:0x2E53:word16]
	Mem101[ss:fp - 0x0006:word16] = bx_98
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C53:
	word16 dx_119 = Mem101[ds:0x45AE:word16]
	branch Mem101[ds:0x45B0:word16] == Mem101[ss:fp - 0x0004:word16] l0800_2C62
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C62:
	branch dx_119 == Mem101[ss:fp - 0x0006:word16] l0800_2C6A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C6A:
	Mem822[ds:0x45AC:word16] = 0x0000
	Mem823[ds:0x45AA:word16] = 0x0000
	Mem824[ds:0x45B0:word16] = 0x0000
	Mem825[ds:0x45AE:word16] = 0x0000
	Mem828[ss:fp - 0x0080:word16] = Mem825[ss:fp + 0x000C:word16]
	Mem831[ss:fp - 0x0082:word16] = Mem828[ss:fp + 0x000A:word16]
	Mem834[ss:fp - 0x0084:word16] = Mem831[ss:fp + 0x0008:word16]
	Mem837[ss:fp - 0x0086:word16] = Mem834[ss:fp + 0x0006:word16]
	Mem840[ss:fp - 0x0088:word16] = Mem837[ss:fp + 0x0004:word16]
	Mem843[ss:fp - 0x008A:word16] = Mem840[ss:fp + 0x0002:word16]
	selector ds_844
	return fn0800_29C5(fp - 0x0002, si, ds, out ds_844)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2C67:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C5F:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A4C:
	branch (Mem101[ds:0x45AA:word16] | Mem101[ds:0x45AC:word16]) != 0x0000 l0800_2A58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A58:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B54:
	branch Mem101[Mem101[ds:0x45AA:segptr32]:byte] == 0x00 l0800_2B61
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B61:
	word16 bx_812 = Mem101[ds:0x2E51:word16] + (((int16) Mem101[Mem101[ds:0x45AE:segptr32]:byte] << 0x08) + DPB(dx_119, 0x00, 8))
	Mem814[ds:0x45B0:word16] = Mem101[ds:0x2E53:word16]
	Mem815[ds:0x45AE:word16] = bx_812
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B5E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A5B:
	Mem433[ss:fp - 0x0080:word16] = ss
	Mem436[ss:fp - 0x0082:word16] = fp - 0x007A
	Mem439[ss:fp - 0x0084:word16] = Mem436[ds:0x45AC:word16]
	Mem442[ss:fp - 0x0086:word16] = Mem439[ds:0x45AA:word16]
	branch fn0800_4357(ptrArg00, ptrArg04) != 0x0000 l0800_2A75
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A75:
	ptr32 es_bx_525 = Mem442[ss:fp + 0x0002:segptr32]
	word16 dx_529 = Mem442[ds:0x45AE:word16]
	Mem530[es_bx_525 + 0x0002:word16] = Mem442[ds:0x45B0:word16]
	Mem531[es_bx_525:word16] = dx_529
	ptr32 es_bx_532 = Mem531[ss:fp + 0x0006:segptr32]
	word16 dx_536 = Mem531[ds:0x45AA:word16]
	Mem537[es_bx_532 + 0x0002:word16] = Mem531[ds:0x45AC:word16]
	Mem538[es_bx_532:word16] = dx_536
	ptr32 es_di_539 = Mem538[ds:0x45AE:segptr32]
	Mem544[ss:fp - 0x0080:word16] = SLICE(es_di_539, selector, 16)
	selector es_545 = Mem544[ss:fp + 0x000C:selector]
	Mem547[ss:fp - 0x0082:word16] = (word16) es_di_539 + 0x0002
	word16 di_548 = Mem547[ss:fp + 0x000A:word16]
	word16 di_550 = Mem547[ss:fp - 0x0082:word16]
	selector es_553 = Mem547[ss:fp - 0x0080:selector]
	Mem558[ss:fp - 0x0080:word16] = es_545
	Mem560[ss:fp - 0x0082:word16] = di_548
	word16 cx_565 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB3:
	branch cx_565 == 0x0000 l0800_2AB5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB3_1:
	di_550 = di_550 + 0x0001
	cx_565 = cx_565 - 0x0001
	branch 0x00 == Mem560[es_553:di_550:byte] l0800_2AB3
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AB5:
	word16 di_584 = Mem560[ss:fp - 0x0082:word16]
	selector es_587 = Mem560[ss:fp - 0x0080:selector]
	Mem592[ss:fp - 0x0080:word16] = ds
	word16 cx_575 = ~cx_565
	word16 cx_577 = cx_575 >>u 0x0001
	word16 si_583 = di_550 - cx_575
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC4:
	branch cx_577 == 0x0000 l0800_2AC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC6:
	word16 cx_606 = cx_577 * 0x0002 + (cx_575 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC8:
	branch cx_606 == 0x0000 l0800_2ACA
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ACA:
	ptr32 es_di_623 = Mem592[ss:fp + 0x000A:segptr32]
	selector ds_621 = Mem592[ss:fp - 0x0080:selector]
	Mem627[ss:fp - 0x0080:word16] = SLICE(es_di_623, selector, 16)
	selector es_628 = Mem627[ds_621:0x45AC:selector]
	Mem631[ss:fp - 0x0082:word16] = (word16) es_di_623
	word16 di_632 = Mem631[ds_621:0x45AA:word16]
	word16 cx_638 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADD:
	branch cx_638 == 0x0000 l0800_2ADF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADD_1:
	di_632 = di_632 + 0x0001
	cx_638 = cx_638 - 0x0001
	branch 0x00 == Mem631[es_628:di_632:byte] l0800_2ADD
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2ADF:
	word16 cx_650 = ~cx_638
	word16 di_653 = Mem631[ss:fp - 0x0082:word16]
	selector es_656 = Mem631[ss:fp - 0x0080:selector]
	Mem665[ss:fp - 0x0080:word16] = cx_650
	word16 si_652 = di_632 - cx_650
	word16 cx_666 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF3:
	branch cx_666 == 0x0000 l0800_2AF5
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF3_2:
	di_653 = di_653 + 0x0001
	cx_666 = cx_666 - 0x0001
	branch 0x00 == Mem665[es_656:di_653:byte] l0800_2AF3
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF5:
	word16 di_681 = di_653 - 0x0001
	word16 cx_684 = Mem665[ss:fp - 0x0080:word16]
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF7:
	branch cx_684 == 0x0000 l0800_2AF9
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF9:
	ptr32 es_di_700 = Mem665[ds_621:0x45AA:segptr32]
	selector ds_699
	*dsOut = ds_621
	word16 di_701 = (word16) es_di_700
	selector es_702 = SLICE(es_di_700, selector, 16)
	word16 cx_703 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B02:
	branch cx_703 == 0x0000 l0800_2B04
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B02_1:
	di_701 = di_701 + 0x0001
	cx_703 = cx_703 - 0x0001
	branch 0x00 == Mem665[es_702:di_701:byte] l0800_2B02
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B04:
	word16 cx_713 = ~cx_703
	word16 di_717 = di_701 - cx_713
	byte Z_721 = cond(di_717)
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0A:
	branch cx_713 == 0x0000 l0800_2B0C
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0A_2:
	Z_721 = cond(0x00 - Mem665[es_702:di_717:byte]) (alias)
	di_717 = di_717 + 0x0001
	cx_713 = cx_713 - 0x0001
	branch 0x00 == Mem665[es_702:di_717:byte] l0800_2B0A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0C:
	branch Z_721 l0800_2B15
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B0E:
	di_717 = 0x0001
	es_702 = 0x0000
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2B15:
	Mem749[ds_621:0x45AC:word16] = es_702
	Mem750[ds_621:0x45AA:word16] = di_717 + 0x0004
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AF7_3:
	Mem693[es_656:di_681:byte] = Mem665[es_628:si_652:byte]
	si_652 = si_652 + 0x0001
	di_681 = di_681 + 0x0001
	cx_684 = cx_684 - 0x0001
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC8_1:
	Mem615[es_587:di_584:byte] = Mem592[es_553:si_583:byte]
	si_583 = si_583 + 0x0001
	di_584 = di_584 + 0x0001
	cx_606 = cx_606 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2AC4_2:
	Mem600[es_587:di_584:word16] = Mem592[es_553:si_583:word16]
	si_583 = si_583 + 0x0002
	di_584 = di_584 + 0x0002
	cx_577 = cx_577 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_2A72:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B2B:
	ptr32 es_di_449 = Mem442[ds:0x45AA:segptr32]
	word16 di_450 = (word16) es_di_449
	selector es_451 = SLICE(es_di_449, selector, 16)
	word16 cx_456 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> Sequence es:di:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B34:
	branch cx_456 == 0x0000 l0800_2B36
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B34_1:
	di_450 = di_450 + 0x0001
	cx_456 = cx_456 - 0x0001
	branch 0x00 == Mem442[es_451:di_450:byte] l0800_2B34
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B36:
	word16 cx_466 = ~cx_456
	word16 di_470 = di_450 - cx_466
	byte Z_474 = cond(di_470)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3C:
	branch cx_466 == 0x0000 l0800_2B3E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3C_2:
	Z_474 = cond(0x00 - Mem442[es_451:di_470:byte]) (alias)
	di_470 = di_470 + 0x0001
	cx_466 = cx_466 - 0x0001
	branch 0x00 == Mem442[es_451:di_470:byte] l0800_2B3C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B3E:
	branch Z_474 l0800_2B47
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B40:
	di_470 = 0x0001
	es_451 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B47:
	Mem502[ds:0x45AC:word16] = es_451
	Mem503[ds:0x45AA:word16] = di_470 + 0x0004
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2A55:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C12:
	word16 dx_145 = Mem101[ds:0x45AE:word16]
	branch Mem101[ds:0x45B0:word16] == Mem101[ss:fp - 0x0004:word16] l0800_2C21
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C21:
	branch dx_145 == Mem101[ss:fp - 0x0006:word16] l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C26:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C1E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B8A:
	branch Mem101[ds:0x2A1B:word16] == 0x0000 l0800_2BBB
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B91:
	Mem362[ss:fp - 0x0080:word16] = ss
	selector es_363 = Mem362[ss:fp - 0x0080:selector]
	word16 di_366 = fp - 0x006C
	word16 cx_372 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9B:
	branch cx_372 == 0x0000 l0800_2B9D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9B_1:
	di_366 = di_903 + 0x0001
	cx_372 = cx_372 - 0x0001
	word16 di_903 = di_366
	branch 0x00 == Mem362[es_363:di_903:byte] l0800_2B9B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2B9D:
	Mem387[ss:fp - 0x0080:word16] = ~cx_372 - 0x0001
	Mem389[ss:fp - 0x0082:word16] = ss
	Mem392[ss:fp - 0x0084:word16] = fp - 0x006C
	word16 ax_393 = Mem392[ds:0x45AE:word16]
	Mem398[ss:fp - 0x0086:word16] = Mem392[ds:0x45B0:word16]
	Mem400[ss:fp - 0x0088:word16] = ax_393 + 0x0002
	branch fn0800_BFE6(ptrArg00, ptrArg04, wArg08) == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BBB:
	branch Mem101[ds:0x2A1B:word16] != 0x0000 l0800_2BEC
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BC2:
	si = Mem101[ds:0x45AE:word16] + 0x0002
	Mem279[ss:fp - 0x0080:word16] = ds
	selector ds_280 = Mem279[ds:0x45B0:selector]
	Mem282[ss:fp - 0x0082:word16] = ss
	selector es_283 = Mem282[ss:fp - 0x0082:selector]
	word16 di_286 = fp - 0x006C
	word16 ax_288 = 0x0000
	word16 cx_293 = 0xFFFF
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BD8:
	branch cx_293 == 0x0000 l0800_2BDA
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BD8_2:
	di_286 = di_286 + 0x0001
	cx_293 = cx_293 - 0x0001
	branch 0x00 == Mem282[es_283:di_286:byte] l0800_2BD8
// DataOut: al ax bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDA:
	word16 cx_303 = ~cx_293
	word16 di_305 = di_286 - cx_303
	byte SCZO_307 = cond(di_305)
	byte Z_309 = SCZO_307
	byte C_310 = SCZO_307
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDE:
	branch cx_303 == 0x0000 l0800_2BE0
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BDE_3:
	byte SCZO_346 = cond(Mem282[ds_280:si:byte] - Mem282[es_283:di_901:byte])
	Z_309 = SCZO_346 (alias)
	C_310 = SCZO_346 (alias)
	si = si + 0x0001
	di_305 = di_901 + 0x0001
	cx_303 = cx_303 - 0x0001
	word16 di_901 = di_305
	branch Mem282[ds_280:si:byte] != Mem282[es_283:di_901:byte] l0800_2BDE
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE0:
	branch Z_309 l0800_2BE7
// DataOut: ax bp si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE2:
	word16 ax_339 = 0x0000 - C_310
	ax_288 = ax_339 - 0xFFFF - (ax_339 <u 0x0000)
// DataOut: ax bp si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BE7:
	ds = Mem282[ss:fp - 0x0080:selector]
	branch ax_288 == 0x0000 l0800_2C29
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C29:
	ptr32 es_di_157 = Mem101[ds:0x45AE:segptr32]
	selector es_159 = SLICE(es_di_157, selector, 16)
	word16 di_160 = (word16) es_di_157 + 0x0002
	word16 cx_166 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C35:
	branch cx_166 == 0x0000 l0800_2C37
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C35_1:
	di_160 = di_160 + 0x0001
	cx_166 = cx_166 - 0x0001
	branch 0x00 == Mem101[es_159:di_160:byte] l0800_2C35
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C37:
	word16 cx_176 = ~cx_166
	word16 di_180 = di_160 - cx_176
	byte Z_184 = cond(di_180)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3D:
	branch cx_176 == 0x0000 l0800_2C3F
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3D_2:
	Z_184 = cond(0x00 - Mem101[es_159:di_180:byte]) (alias)
	di_180 = di_180 + 0x0001
	cx_176 = cx_176 - 0x0001
	branch 0x00 == Mem101[es_159:di_180:byte] l0800_2C3D
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C3F:
	branch Z_184 l0800_2C48
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C41:
	di_180 = 0x0001
	es_159 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2C48:
	Mem211[ds:0x45AC:word16] = es_159
	Mem212[ds:0x45AA:word16] = di_180
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> Sequence es:di:<invalid> di:<invalid> cx:<invalid> es:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_2BEC:
	word16 bx_272 = Mem101[ds:0x2E51:word16] + (((int16) Mem101[Mem101[ds:0x45AE:segptr32]:byte] << 0x08) + DPB(dx_145, 0x00, 8))
	Mem274[ds:0x45B0:word16] = Mem101[ds:0x2E53:word16]
	Mem275[ds:0x45AE:word16] = bx_272
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence es:di:<invalid> ch:<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_29EE:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -130(fp):0x4541 -128(fp):ds -126(fp):di -124(fp):si -2(fp):bp

fn0800_29C5_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> Sequence es:di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -138(fp):<invalid> -136(fp):<invalid> -134(fp):<invalid> -132(fp):<invalid> -130(fp):<invalid> -128(fp):<invalid> -126(fp):di -124(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_2C9A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: si sp
fn0800_2C9A_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2C9A:
	word16 cx_15 = 0x0000
	word16 si_18 = 0x2A29
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_2CA0:
	word16 dx_19 = cx_15
	word16 bx_20 = 0x0008
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBD:
	branch bx_20 != 0x0000 l0800_2CA7
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CA7:
	word16 ax_40
	branch (dx_19 & 0x0001) == 0x0000 l0800_2CB6
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CB6:
	ax_40 = dx_19 >>u 0x0001
// DataOut: ax bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CAD:
	ax_40 = dx_19 >>u 0x0001 ^ 0xA001
// DataOut: ax bx cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CBA:
	dx_19 = ax_40
	bx_20 = bx_20 - 0x0001
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CC1:
	Mem29[ds:si_18:word16] = dx_19
	si_18 = si_18 + 0x0002
	cx_15 = cx_15 + 0x0001
	branch cx_15 <u 0x0100 l0800_2CA0
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

l0800_2CCD:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si

fn0800_2C9A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> si:si dx:<invalid> bx:<invalid> ax:<invalid> -2(fp):si



word16 fn0800_2CCF(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_2CCF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_2CCF:
	word16 si_10 = wArg06
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CFD:
	si_10 = si_10 - 0x0001
	branch si_10 != 0x0000 l0800_2CD8
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2CD8:
	wArg08 = Mem0[ds:((DPB(si_10, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ wArg08 >>u 0x08
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0008(16)

l0800_2D04:
	return wArg08
// DataOut: al ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>

fn0800_2CCF_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cl:0x08 -4(fp):si -2(fp):bp 2(fp):<invalid> 8(fp):<invalid>



word16 fn0800_2D0A(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_2D0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_2D0A:
	selector ds_135
	fn0800_4311(fp - 0x0002, ds, 0xFFF0, 0x0000, out ds_135)
	Mem23[ss:fp - 0x0004:word16] = 0xFFF0
	Mem25[ss:fp - 0x0006:word16] = 0x0000
	Mem28[ss:fp - 0x0012:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem31[ss:fp - 0x0014:word16] = Mem28[ss:fp + 0x0002:word16]
	word16 ax_34 = fn0800_AD2F(ds_135, ptrArg00, wArg02)
	Mem36[ss:fp - 0x000C:word16] = 0xFFF0
	Mem37[ss:fp - 0x000E:word16] = ax_34
	word16 si_152 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_2D8F:
	branch (Mem37[ss:fp + 0x0006:word16] | Mem37[ss:fp + 0x0008:word16]) != 0x0000 l0800_2D3A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D3A:
	word16 ax_113
	word16 dx_109
	branch Mem37[ss:fp + 0x0008:word16] <u 0x0000 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D40:
	branch Mem37[ss:fp + 0x0008:word16] >u 0x0000 l0800_2D48
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D42:
	branch Mem37[ss:fp + 0x0006:word16] <=u 0xFFF0 l0800_2D4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D4F:
	dx_109 = Mem37[ss:fp + 0x0008:word16]
	ax_113 = Mem37[ss:fp + 0x0006:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D48:
	dx_109 = 0x0000
	ax_113 = 0xFFF0
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D55:
	Mem114[ss:fp - 0x0008:word16] = dx_109
	Mem115[ss:fp - 0x000A:word16] = ax_113
	Mem118[ss:fp - 0x0012:word16] = Mem115[ss:fp + 0x0004:word16]
	Mem121[ss:fp - 0x0014:word16] = Mem118[ss:fp + 0x0002:word16]
	Mem124[ss:fp - 0x0016:word16] = Mem121[ss:fp - 0x0008:word16]
	Mem126[ss:fp - 0x0018:word16] = ax_113
	Mem129[ss:fp - 0x001A:word16] = Mem126[ss:fp - 0x0004:word16]
	Mem132[ss:fp - 0x001C:word16] = Mem129[ss:fp - 0x0006:word16]
	word16 di_134
	Mem140[ss:fp - 0x0012:word16] = fn0800_4110(ds_135, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_134, out ds_135)
	Mem143[ss:fp - 0x0014:word16] = Mem140[ss:fp - 0x000A:word16]
	Mem146[ss:fp - 0x0016:word16] = Mem143[ss:fp - 0x0004:word16]
	Mem149[ss:fp - 0x0018:word16] = Mem146[ss:fp - 0x0006:word16]
	si_152 = fn0800_2CCF(ds_135, ptrArg00, wArg04, wArg06)
	Mem157[ss:fp + 0x0006:word16] = Mem149[ss:fp + 0x0006:word16] - Mem149[ss:fp - 0x000A:word16]
	Mem161[ss:fp + 0x0008:word16] = v30
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_2D97:
	Mem65[ss:fp - 0x0012:word16] = 0x0000
	Mem68[ss:fp - 0x0014:word16] = Mem65[ss:fp - 0x000C:word16]
	Mem71[ss:fp - 0x0016:word16] = Mem68[ss:fp - 0x000E:word16]
	Mem74[ss:fp - 0x0018:word16] = Mem71[ss:fp + 0x0004:word16]
	Mem77[ss:fp - 0x001A:word16] = Mem74[ss:fp + 0x0002:word16]
	selector ds_81
	fn0800_ACB3(ds_135, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_81)
	Mem87[ss:fp - 0x0012:word16] = Mem77[ss:fp - 0x0004:word16]
	Mem90[ss:fp - 0x0014:word16] = Mem87[ss:fp - 0x0006:word16]
	selector ds_92
	fn0800_4346(ds_81, wArg00, wArg02, out ds_92)
	return si_152
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):0xFFF0 -24(fp):0x0000 -22(fp):0xFFF0 -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_2D0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> cx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -28(fp):0x0000 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):si -14(fp):<invalid> -12(fp):0xFFF0 -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0xFFF0 -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



void fn0800_2DBF(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: ah al ax eax rax
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DBF_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_2DBF:
	Mem6[ds:0x4656:word16] = 0xFFFF
	Mem8[ds:0x4654:word16] = 0x0000
	Mem10[ds:0x4652:word16] = Mem8[ds:0x2A27:word16]
	Mem13[ds:0x4650:word16] = wArg02
	Mem16[ds:0x464E:word16] = wArg04
	return
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_2DBF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> -2(fp):bp



word16 fn0800_2DE2(word16 bp, word16 si, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_2DE2_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DE2:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DF1:
	branch Mem0[ds:0x4652:word16] != Mem0[ds:0x4656:word16] l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2DFA:
	branch Mem0[ds:0x464E:word16] == 0x0000 l0800_2E11
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001E(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E01:
	byte dl_1191
	si = fn0800_3479(ds, DPB(ptrLoc1C, fp - 0x0012, 0), ss, 0x0000, out dl_1191, out ds)
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E11:
	branch Mem0[ds:0x4654:word16] != 0x0000 l0800_2E1B
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16) Stack +0002(16) Stack +0004(16)

l0800_2E1B:
	Mem792[ds:0x4617:word16] = 0x0000
	word16 dx_808
	selector ds_809
	word16 ax_810 = fn0800_A77D(ds, 0x45B2, ds, 0x0065, DPB(ptrLoc1A, Mem792[ds:0x461B:word16], 0), Mem792[ds:0x461D:word16], out dx_808, out ds_809)
	branch (ax_810 | dx_808) != 0x0000 l0800_2E3F
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E3F:
	selector es_1160 = ds_809
	word16 di_1172 = 0x45B2
	word16 cx_1174 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49:
	branch cx_1174 == 0x0000 l0800_2E4B
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E49_1:
	di_1172 = di_1172 + 0x0001
	cx_1174 = cx_1174 - 0x0001
	branch 0x00 == Mem792[ds_809:di_1172:byte] l0800_2E49
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E4B:
	word16 cx_1169 = ~cx_1174
	word16 di_1156 = di_1172 - cx_1169
	byte Z_1164 = cond(di_1156)
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52:
	branch cx_1169 == 0x0000 l0800_2E54
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E52_2:
	Z_1164 = cond(0x0D - Mem792[ds_809:di_1156:byte]) (alias)
	di_1156 = di_1156 + 0x0001
	cx_1169 = cx_1169 - 0x0001
	branch 0x0D == Mem792[ds_809:di_1156:byte] l0800_2E52
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E54:
	branch Z_1164 l0800_2E5D
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E56:
	di_1156 = 0x0001
	es_1160 = 0x0000
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E5D:
	branch (di_1156 - 0x0001 | es_1160) == 0x0000 l0800_2E8B
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E64:
	selector es_1088 = ds_809
	word16 di_1091 = 0x45B2
	word16 cx_1097 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E:
	branch cx_1097 == 0x0000 l0800_2E70
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E6E_1:
	di_1091 = di_1091 + 0x0001
	cx_1097 = cx_1097 - 0x0001
	branch 0x00 == Mem792[ds_809:di_1091:byte] l0800_2E6E
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E70:
	word16 cx_1105 = ~cx_1097
	word16 di_1107 = di_1091 - cx_1105
	byte Z_1110 = cond(di_1107)
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77:
	branch cx_1105 == 0x0000 l0800_2E79
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E77_2:
	Z_1110 = cond(0x0D - Mem792[ds_809:di_1107:byte]) (alias)
	di_1107 = di_1107 + 0x0001
	cx_1105 = cx_1105 - 0x0001
	branch 0x0D == Mem792[ds_809:di_1107:byte] l0800_2E77
// DataOut: bp cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E79:
	branch Z_1110 l0800_2E82
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E7B:
	di_1107 = 0x0001
	es_1088 = 0x0000
// DataOut: bp di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:0x000D es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x0D -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E82:
	Mem1136[es_1088:di_1107 - 0x0001:byte] = 0x00
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2E8B:
	branch (int16) Mem792[ds_809:0x45B2:byte] != 0x0000 l0800_2EA5
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2EA5:
	word16 di_1083 = 0x45B2
	word16 cx_1085 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EAF:
	branch cx_1085 == 0x0000 l0800_2EB1
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EAF_1:
	di_1083 = di_1209 + 0x0001
	cx_1085 = cx_1085 - 0x0001
	word16 di_1209 = di_1083
	branch 0x00 == Mem792[ds_809:di_1209:byte] l0800_2EAF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Stack +0002(32)

l0800_2EB1:
	Mem961[ds_809:0x4619:word16] = ~cx_1085 - 0x0001
	ptrLoc1A = DPB(ptrLoc1A, 0x45B2, 0) (alias)
	byte dl_968 = fn0800_0C6C(ds_809, ptrLoc1A)
	*dlOut = dl_968
	dx = DPB(dx_808, dl_968, 0) (alias)
	branch Mem961[ds_809:0x464E:word16] != 0x0000 l0800_2EFE
// DataOut: bp dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_2EFE:
	byte dl_1074
	si = fn0800_33CD(ds_809, DPB(ptrLoc20, fp - 0x0012, 0), ss, 0x0000, 0x45B2, ds_809, out dl_1074, out ds)
	Mem1080[ds:0x4654:word16] = 0x0000
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2ECA:
	word16 di_975 = (word16) ptrArg02
	selector es_976 = SLICE(ptrArg02, selector, 16)
	word16 di_1055 = 0x45B2
	word16 cx_1057 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9:
	branch cx_1057 == 0x0000 l0800_2EDB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2ED9_2:
	di_1055 = di_1055 + 0x0001
	cx_1057 = cx_1057 - 0x0001
	branch 0x00 == Mem961[ds_809:di_1055:byte] l0800_2ED9
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16) Local -001A(16)

l0800_2EDB:
	word16 cx_1000 = ~cx_1057
	word16 cx_1002 = cx_1000 >>u 0x0001
	word16 si_1007 = di_1055 - cx_1000
	word16 di_1008 = di_975
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA:
	branch cx_1002 == 0x0000 l0800_2EEC
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEC:
	word16 cx_1028 = cx_1002 * 0x0002 + (cx_1000 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEE:
	branch cx_1028 == 0x0000 l0800_2EF0
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EF0:
	Mem1043[ds_809:0x4617:word16] = Mem961[ds_809:0x4617:word16] + 0x0001
	selector ds_1040
	*dsOut = ds_809
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2EEE_1:
	Mem1035[es_976:di_1008:byte] = Mem961[ds_809:si_1007:byte]
	si_1007 = si_1007 + 0x0001
	di_1008 = di_1008 + 0x0001
	cx_1028 = cx_1028 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2EEA_3:
	Mem1023[es_976:di_1008:word16] = Mem961[ds_809:si_1007:word16]
	si_1007 = si_1007 + 0x0002
	di_1008 = di_1008 + 0x0002
	cx_1002 = cx_1002 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0018 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0018(16)

l0800_2E93:
	byte dl_926
	selector ds_927
	return fn0800_2DE2(fp - 0x0002, si, ds_809, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_926, out ds_927)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> si:<invalid> dx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E3C:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -001C(16) Stack +0002(16) Stack +0004(16)

l0800_2F1B:
	byte dl_823
	word16 di_824
	selector ds_825
	fn0800_A614(ds_809, DPB(ptrLoc1A, Mem792[ds_809:0x461B:word16], 0), Mem792[ds_809:0x461D:word16], out dl_823, out di_824, out ds_825)
	Mem829[ds_825:0x4654:word16] = 0x0000
	Mem830[ds_825:0x461D:word16] = 0x0000
	Mem831[ds_825:0x461B:word16] = 0x0000
	Mem833[ds_825:0x4652:word16] = Mem831[ds_825:0x4652:word16] + 0x0001
	byte dl_842
	selector ds_843
	return fn0800_2DE2(fp - 0x0002, si, ds_825, DPB(ptrLoc1A, wArg02, 0), wArg04, out dl_842, out ds_843)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> cx:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> di:<invalid> -32(fp):0x45B2 -30(fp):<invalid> -28(fp):0x0065 -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2E18:
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> di:<invalid> -28(fp):fp - 0x0012 -26(fp):ss -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F51:
	word16 ax_85 = Mem0[ds:0x4652:word16]
	branch ax_85 != Mem0[ds:0x4656:word16] l0800_2F5D
// DataOut: ax bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F5D:
	branch ax_85 != Mem0[ds:0x269A:word16] l0800_2F6B
// DataOut: bp dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0020(16)

l0800_2F6B:
	ptr32 es_bx_550 = Mem0[ds:0x269C:segptr32]
	fn0800_BF9E(DPB(ptrLoc1E, 0x45B2, 0), ds, DPB(ptrLoc1A, Mem0[SLICE(es_bx_550, selector, 16):(word16) es_bx_550 + (Mem0[ds:0x4652:word16] << 0x0002):word16], 0))
	word16 di_1205 = 0x45B2
	word16 cx_580 = 0xFFFF
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F94:
	branch cx_580 == 0x0000 l0800_2F96
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F94_1:
	di_1205 = di_1205 + 0x0001
	cx_580 = cx_580 - 0x0001
	branch 0x00 == Mem0[ds:di_1205:byte] l0800_2F94
// DataOut: al bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_2F96:
	Mem592[ds:0x4619:word16] = ~cx_580 - 0x0001
	fn0800_0C6C(ds, DPB(ptrLoc1A, 0x45B2, 0))
	word16 ax_601 = Mem592[ds:0x4652:word16]
	Mem602[ds:0x4656:word16] = ax_601
	Mem603[ds:0x4617:word16] = 0x0000
	branch Mem603[Mem603[ds:(word16) Mem603[ds:0x269C:segptr32] + (ax_601 << 0x0002):segptr32]:byte] != 0x40 l0800_3007
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -001C(16) Local -0020(16)

l0800_3007:
	byte dl_666
	*dlOut = fn0800_335C(ds, 0x45B2, ds)
	branch Mem603[ds:0x464E:word16] != 0x0000 l0800_3051
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3051:
	Mem758[ss:fp - 0x0018:word16] = ds
	Mem761[ss:fp - 0x001A:word16] = 0x45B2
	Mem766[ss:fp - 0x001C:word16] = 0x0000
	Mem768[ss:fp - 0x001E:word16] = ss
	Mem771[ss:fp - 0x0020:word16] = fp - 0x0012
	byte dl_772
	si = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_772, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3019:
	ptr32 es_di_671 = Mem603[ss:fp + 0x0002:segptr32]
	Mem675[ss:fp - 0x0018:word16] = SLICE(es_di_671, selector, 16)
	Mem677[ss:fp - 0x001A:word16] = ds
	selector es_678 = Mem677[ss:fp - 0x001A:selector]
	Mem682[ss:fp - 0x001A:word16] = (word16) es_di_671
	word16 di_1206 = 0x45B2
	word16 cx_689 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3028:
	branch cx_689 == 0x0000 l0800_302A
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3028_1:
	di_1206 = di_1206 + 0x0001
	cx_689 = cx_689 - 0x0001
	branch 0x00 == Mem682[es_678:di_1206:byte] l0800_3028
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_302A:
	word16 di_705 = Mem682[ss:fp - 0x001A:word16]
	selector es_708 = Mem682[ss:fp - 0x0018:selector]
	Mem713[ss:fp - 0x0018:word16] = ds
	word16 cx_697 = ~cx_689
	word16 cx_699 = cx_697 >>u 0x0001
	word16 si_704 = di_1206 - cx_697
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3039:
	branch cx_699 == 0x0000 l0800_303B
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303B:
	word16 cx_725 = cx_699 * 0x0002 + (cx_697 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303D:
	branch cx_725 == 0x0000 l0800_303F
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303F:
	selector ds_737 = Mem713[ss:fp - 0x0018:selector]
	*dsOut = ds_737
	Mem740[ds_737:0x4617:word16] = Mem713[ds_737:0x4617:word16] + 0x0001
	Mem742[ds_737:0x4652:word16] = Mem740[ds_737:0x4652:word16] + 0x0001
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_303D_1:
	Mem732[es_708:di_705:byte] = Mem713[es_678:si_704:byte]
	si_704 = si_704 + 0x0001
	di_705 = di_705 + 0x0001
	cx_725 = cx_725 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_3039_2:
	Mem720[es_708:di_705:word16] = Mem713[es_678:si_704:word16]
	si_704 = si_704 + 0x0002
	di_705 = di_705 + 0x0002
	cx_699 = cx_699 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> Sequence es:di:<invalid> si:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2FC7:
	ptr32 es_bx_622 = Mem603[ds:0x269C:segptr32]
	selector es_623 = SLICE(es_bx_622, selector, 16)
	word16 bx_625 = (word16) es_bx_622 + (Mem603[ds:0x4652:word16] << 0x0002)
	word16 ax_627 = Mem603[es_623:bx_625:word16]
	word16 di_635
	selector ds_636
	word16 si_637 = fn0800_4234(fp - 0x0002, si, di_1205, ds, ax_627 + 0x0001, Mem603[es_623:bx_625 + 0x0002:word16], 0x0A13, ds, out di_635, out ds_636)
	Mem640[ds_636:0x461D:word16] = dx
	Mem641[ds_636:0x461B:word16] = ax_627 + 0x0001
	Mem642[ds_636:0x4654:word16] = 0x0001
	Mem645[ss:fp - 0x0018:word16] = Mem642[ss:fp + 0x0004:word16]
	Mem648[ss:fp - 0x001A:word16] = Mem645[ss:fp + 0x0002:word16]
	byte dl_649
	selector ds_650
	return fn0800_2DE2(fp - 0x0002, si_637, ds_636, ptrArg00, wArg02, out dl_649, out ds_650)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> -32(fp):fp - 0x0012 -30(fp):0x45B2 -28(fp):<invalid> -26(fp):0x45B2 -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F63:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_2F5A:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0016 bp:fp - 0x0002 ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> al:<invalid> -32(fp):fp - 0x0012 -30(fp):ss -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3066:
	word16 si_109 = si
	branch si != 0x0000 l0800_306D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_306D:
	branch Mem0[ds:0x2A1B:word16] == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3074:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_309A:
	branch si_109 != 0x0000 l0800_3076
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3076:
	Mem500[ss:fp - 0x0018:word16] = ds
	Mem503[ss:fp - 0x001A:word16] = 0x45B2
	branch fn0800_31B4(fp - 0x0002, ds, out ds) == 0x0000 l0800_309E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3085:
	Mem512[ss:fp - 0x0018:word16] = ds
	Mem515[ss:fp - 0x001A:word16] = 0x45B2
	Mem520[ss:fp - 0x001C:word16] = 0x0000
	Mem522[ss:fp - 0x001E:word16] = ss
	Mem525[ss:fp - 0x0020:word16] = fp - 0x0012
	byte dl_527
	si_109 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_527, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:bx:<invalid> di:<invalid> al:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_309E:
	word16 si_432 = si_109
	branch si_109 == 0x0000 l0800_30F0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30A2:
	Mem437[ds:Mem0[ds:0x4619:word16] + 0x45B2:byte] = 0x00
	branch Mem437[ds:0x4617:word16] != 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30B2:
	branch Mem437[ds:0x4650:word16] == 0x0000 l0800_30C9
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30B9:
	Mem475[ss:fp - 0x0018:word16] = ds
	Mem478[ss:fp - 0x001A:word16] = 0x45B2
	Mem480[ss:fp - 0x001C:word16] = ds
	Mem483[ss:fp - 0x001E:word16] = 0x0A17
	word16 di_485
	si_432 = fn0800_B2EF(ds, wArg00, wArg02, out di_485)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30C9:
	branch (Mem437[ds:0x461B:word16] | Mem437[ds:0x461D:word16]) == 0x0000 l0800_30DA
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30DA:
	Mem470[ds:0x4652:word16] = Mem437[ds:0x4652:word16] + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30D2:
	Mem468[ds:0x4654:word16] = 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30DE:
	Mem452[ss:fp - 0x0018:word16] = Mem437[ss:fp + 0x0004:word16]
	Mem455[ss:fp - 0x001A:word16] = Mem452[ss:fp + 0x0002:word16]
	byte dl_456
	selector ds_457
	return fn0800_2DE2(fp - 0x0002, si_432, ds, ptrArg00, wArg02, out dl_456, out ds_457)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp

l0800_306A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_30F0:
	Mem120[ss:fp - 0x0018:word16] = ds
	Mem124[ss:fp - 0x001A:word16] = 0x45B2
	Mem127[ss:fp - 0x001C:word16] = Mem124[ss:fp + 0x0004:word16]
	Mem130[ss:fp - 0x001E:word16] = Mem127[ss:fp + 0x0002:word16]
	fn0800_3509(ds, wArg04, wArg06)
	Mem135[ss:fp - 0x0018:word16] = ss
	Mem140[ss:fp - 0x0018:word16] = Mem135[ss:fp - 0x0018:selector]
	selector es_141 = Mem140[ss:fp + 0x0004:selector]
	Mem143[ss:fp - 0x001A:word16] = fp - 0x0012
	word16 di_144 = Mem143[ss:fp + 0x0002:word16]
	word16 di_1197 = Mem143[ss:fp - 0x001A:word16]
	selector es_149 = Mem143[ss:fp - 0x0018:selector]
	Mem154[ss:fp - 0x0018:word16] = es_141
	Mem156[ss:fp - 0x001A:word16] = di_144
	word16 cx_161 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> bx:<invalid> es:<invalid> Sequence es:bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311B:
	branch cx_161 == 0x0000 l0800_311D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311B_1:
	di_1197 = di_1197 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem156[es_149:di_1197:byte] l0800_311B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_311D:
	word16 di_1198 = Mem156[ss:fp - 0x001A:word16]
	selector es_177 = Mem156[ss:fp - 0x0018:selector]
	Mem181[ss:fp - 0x0004:word16] = ds
	word16 cx_171 = ~cx_161
	Mem184[ss:fp - 0x0018:word16] = cx_171
	word16 si_173 = di_1197 - cx_171
	word16 cx_185 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3132:
	branch cx_185 == 0x0000 l0800_3134
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3132_2:
	di_1198 = di_1198 + 0x0001
	cx_185 = cx_185 - 0x0001
	branch 0x00 == Mem184[es_177:di_1198:byte] l0800_3132
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3134:
	word16 di_198 = di_1198 - 0x0001
	word16 cx_201 = Mem184[ss:fp - 0x0018:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3136:
	branch cx_201 == 0x0000 l0800_3138
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3138:
	selector ds_213 = Mem184[ss:fp - 0x0004:selector]
	Mem216[ss:fp - 0x0018:word16] = Mem184[ss:fp + 0x0004:word16]
	Mem219[ss:fp - 0x001A:word16] = Mem216[ss:fp + 0x0002:word16]
	byte dl_221
	*dlOut = fn0800_0C6C(ds_213, ptrArg00)
	word16 si_1200 = Mem219[ss:fp + 0x0002:word16]
	word16 cx_225 = Mem219[ss:fp + 0x0004:word16]
	Mem227[ss:fp - 0x0018:word16] = ds_213
	selector es_228 = Mem227[ss:fp - 0x0018:selector]
	Mem234[ss:fp - 0x0018:word16] = ds_213
	word16 di_1199 = 0x4348
	word16 ax_236 = 0x0000
	word16 cx_240 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315A:
	branch cx_240 == 0x0000 l0800_315C
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315A_1:
	di_1199 = di_1199 + 0x0001
	cx_240 = cx_240 - 0x0001
	branch 0x00 == Mem234[es_228:di_1199:byte] l0800_315A
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_315C:
	word16 cx_248 = ~cx_240
	word16 di_249 = di_1199 - cx_248
	byte SCZO_251 = cond(di_249)
	byte Z_252 = SCZO_251
	byte C_254 = SCZO_251
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3160:
	branch cx_248 == 0x0000 l0800_3162
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3160_2:
	byte SCZO_401 = cond(Mem234[cx_225:si_1200:byte] - Mem234[es_228:di_1201:byte])
	Z_252 = SCZO_401 (alias)
	C_254 = SCZO_401 (alias)
	si_1200 = si_1200 + 0x0001
	di_249 = di_1201 + 0x0001
	cx_248 = cx_248 - 0x0001
	word16 di_1201 = di_249
	branch Mem234[cx_225:si_1200:byte] != Mem234[es_228:di_1201:byte] l0800_3160
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3162:
	branch Z_252 l0800_3169
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3164:
	word16 ax_395 = 0x0000 - C_254
	ax_236 = ax_395 - 0xFFFF - (ax_395 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3169:
	selector ds_274 = Mem234[ss:fp - 0x0018:selector]
	branch ax_236 == 0x0000 l0800_3195
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_316E:
	si_1200 = Mem234[ss:fp + 0x0002:word16]
	word16 cx_310 = Mem234[ss:fp + 0x0004:word16]
	Mem312[ss:fp - 0x0018:word16] = ds_274
	selector es_313 = Mem312[ss:fp - 0x0018:selector]
	Mem319[ss:fp - 0x0018:word16] = ds_274
	word16 di_1202 = 0x4477
	word16 ax_321 = 0x0000
	word16 cx_325 = 0xFFFF
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3181:
	branch cx_325 == 0x0000 l0800_3183
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3181_1:
	di_1202 = di_1202 + 0x0001
	cx_325 = cx_325 - 0x0001
	branch 0x00 == Mem319[es_313:di_1202:byte] l0800_3181
// DataOut: al ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3183:
	word16 cx_333 = ~cx_325
	word16 di_334 = di_1202 - cx_333
	byte SCZO_336 = cond(di_334)
	byte Z_337 = SCZO_336
	byte C_339 = SCZO_336
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3187:
	branch cx_333 == 0x0000 l0800_3189
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3187_2:
	byte SCZO_382 = cond(Mem319[cx_310:si_1200:byte] - Mem319[es_313:di_1204:byte])
	Z_337 = SCZO_382 (alias)
	C_339 = SCZO_382 (alias)
	si_1200 = si_1200 + 0x0001
	di_334 = di_1204 + 0x0001
	cx_333 = cx_333 - 0x0001
	word16 di_1204 = di_334
	branch Mem319[cx_310:si_1200:byte] != Mem319[es_313:di_1204:byte] l0800_3187
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3189:
	branch Z_337 l0800_3190
// DataOut: ax bp dl si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_318B:
	word16 ax_376 = 0x0000 - C_339
	ax_321 = ax_376 - 0xFFFF - (ax_376 <u 0x0000)
// DataOut: ax bp dl si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3190:
	ds_274 = Mem319[ss:fp - 0x0018:selector]
	*dsOut = ds_274
	branch ax_321 != 0x0000 l0800_31A7
// DataOut: bp dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_31A7:
	Mem366[ds_274:0x4617:word16] = Mem319[ds_274:0x4617:word16] + 0x0001
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3195:
	Mem292[ss:fp - 0x0018:word16] = Mem234[ss:fp + 0x0004:word16]
	Mem295[ss:fp - 0x001A:word16] = Mem292[ss:fp + 0x0002:word16]
	byte dl_297
	selector ds_298
	return fn0800_2DE2(fp - 0x0002, si_1200, ds_274, ptrArg00, wArg02, out dl_297, out ds_298)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_2DE2_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> Sequence es:bx:<invalid> Sequence es:di:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3136_3:
	Mem208[es_177:di_198:byte] = Mem184[es_149:si_173:byte]
	si_173 = si_173 + 0x0001
	di_198 = di_198 + 0x0001
	cx_201 = cx_201 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> bx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):fp - 0x0012 -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):di -20(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_31B4(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_31B4_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_31B4:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_31BD:
	Mem31[ss:fp - 0x008A:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem34[ss:fp - 0x008C:word16] = Mem31[ss:fp + 0x0002:word16]
	Mem36[ss:fp - 0x008E:word16] = ss
	Mem39[ss:fp - 0x0090:word16] = fp - 0x0084
	fn0800_3509(ds, wArg04, wArg06)
	Mem46[ss:fp - 0x008A:word16] = Mem39[ss:fp + 0x0004:word16]
	Mem49[ss:fp - 0x008C:word16] = Mem46[ss:fp + 0x0002:word16]
	Mem51[ss:fp - 0x008E:word16] = ss
	Mem54[ss:fp - 0x0090:word16] = fp - 0x0010
	fn0800_35A3(ds, wArg04, wArg06)
	Mem62[ss:fp - 0x008A:word16] = Mem54[ds:(Mem54[ds:0x09AC:word16] << 0x0001) + 0x09AE:word16]
	Mem64[ss:fp - 0x008C:word16] = ss
	Mem67[ss:fp - 0x008E:word16] = fp - 0x0084
	Mem69[ss:fp - 0x0090:word16] = ss
	Mem72[ss:fp - 0x0092:word16] = fp - 0x001E
	selector ds_76
	branch fn0800_32CD(ds, wArg00, wArg02, wArg04, wArg06, wArg08, out ds_76) != 0x0000 l0800_323E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_323E:
	branch Mem72[ds_76:0x09AC:word16] != 0x0000 l0800_3253
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3253:
	Mem158[ss:fp - 0x008A:word16] = ss
	selector es_159 = Mem158[ss:fp - 0x008A:selector]
	word16 di_161 = fp - 0x0084
	word16 cx_166 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E:
	branch cx_166 == 0x0000 l0800_3260
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_325E_1:
	di_161 = di_284 + 0x0001
	cx_166 = cx_166 - 0x0001
	word16 di_284 = di_161
	branch 0x00 == Mem158[es_159:di_284:byte] l0800_325E
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3260:
	Mem180[ss:~cx_166 - 0x0002 + (fp - 0x0084):byte] = 0x00
	Mem182[ss:fp - 0x008A:word16] = ss
	Mem184[ss:fp - 0x008C:word16] = fp - 0x0084
	Mem187[ss:fp - 0x008E:word16] = Mem184[ss:fp + 0x0004:word16]
	Mem190[ss:fp - 0x0090:word16] = Mem187[ss:fp + 0x0002:word16]
	fn0800_3509(ds_76, wArg04, wArg06)
	Mem193[ss:fp - 0x008A:word16] = ss
	Mem198[ss:fp - 0x008A:word16] = Mem193[ss:fp - 0x008A:selector]
	selector es_199 = Mem198[ss:fp + 0x0004:selector]
	Mem201[ss:fp - 0x008C:word16] = fp - 0x0010
	word16 di_202 = Mem201[ss:fp + 0x0002:word16]
	word16 di_204 = Mem201[ss:fp - 0x008C:word16]
	selector es_207 = Mem201[ss:fp - 0x008A:selector]
	Mem210[ss:fp - 0x008A:word16] = es_199
	Mem212[ss:fp - 0x008C:word16] = di_202
	word16 cx_217 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298:
	branch cx_217 == 0x0000 l0800_329A
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3298_2:
	di_204 = di_204 + 0x0001
	cx_217 = cx_217 - 0x0001
	branch 0x00 == Mem212[es_207:di_204:byte] l0800_3298
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_329A:
	word16 cx_226 = ~cx_217
	word16 di_229 = Mem212[ss:fp - 0x008C:word16]
	selector es_232 = Mem212[ss:fp - 0x008A:selector]
	Mem238[ss:fp - 0x008A:word16] = cx_226
	word16 si_228 = di_204 - cx_226
	word16 cx_239 = 0xFFFF
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE:
	branch cx_239 == 0x0000 l0800_32B0
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32AE_3:
	di_229 = di_229 + 0x0001
	cx_239 = cx_239 - 0x0001
	branch 0x00 == Mem238[es_232:di_229:byte] l0800_32AE
// DataOut: al bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B0:
	word16 di_251 = di_229 - 0x0001
	word16 cx_253 = Mem238[ss:fp - 0x008A:word16]
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2:
	branch cx_253 == 0x0000 l0800_32B4
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B4:
	Mem265[ds_76:0x09AC:word16] = Mem238[ds_76:0x09AC:word16] - 0x0001
	word16 bx_266 = Mem265[ds_76:0x09AC:word16]
	Mem270[ds_76:(bx_266 << 0x0001) + 0x09AE:word16] = Mem265[ds_76:(bx_266 << 0x0001) + 0x09AE:word16] + 0x0001
	ds = ds_76
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_32B2_4:
	Mem259[es_232:di_251:byte] = Mem238[es_207:si_228:byte]
	si_228 = si_228 + 0x0001
	di_251 = di_251 + 0x0001
	cx_253 = cx_253 - 0x0001
// DataOut: bp cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3245:
	Mem146[ds_76:0x09AE:word16] = 0x0000
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

l0800_31FF:
	Mem96[ss:fp - 0x008A:word16] = ss
	Mem99[ss:fp - 0x008C:word16] = fp - 0x0010
	Mem101[ss:fp - 0x008E:word16] = ds_76
	Mem104[ss:fp - 0x0090:word16] = 0x0A30
	Mem106[ss:fp - 0x0092:word16] = ss
	Mem109[ss:fp - 0x0094:word16] = fp - 0x001E
	Mem111[ss:fp - 0x0096:word16] = ss
	Mem114[ss:fp - 0x0098:word16] = fp - 0x0084
	Mem116[ss:fp - 0x009A:word16] = ds_76
	Mem119[ss:fp - 0x009C:word16] = 0x0A27
	Mem122[ss:fp - 0x009E:word16] = Mem119[ss:fp + 0x0004:word16]
	Mem125[ss:fp - 0x00A0:word16] = Mem122[ss:fp + 0x0002:word16]
	word16 di_127
	fn0800_BEA2(ds_76, ptrArg00, wArg04, wArg06, out di_127)
	Mem131[ds_76:0x09AC:word16] = Mem125[ds_76:0x09AC:word16] + 0x0001
	Mem135[ds_76:(Mem131[ds_76:0x09AC:word16] << 0x0001) + 0x09AE:word16] = 0x0000
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> ah:<invalid> al:<invalid> -146(fp):fp - 0x001E -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp

fn0800_31B4_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> al:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -160(fp):<invalid> -158(fp):<invalid> -156(fp):0x0A27 -154(fp):<invalid> -152(fp):fp - 0x0084 -150(fp):ss -148(fp):fp - 0x001E -146(fp):<invalid> -144(fp):<invalid> -142(fp):<invalid> -140(fp):<invalid> -138(fp):<invalid> -136(fp):di -134(fp):si -2(fp):bp



word16 fn0800_32CD(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, selector psegArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_32CD_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_32CD:
	word16 di_218 = wArg06
	word16 cx_219 = 0xFFFF
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7:
	branch cx_219 == 0x0000 l0800_32E9
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E7_1:
	di_218 = di_218 + 0x0001
	cx_219 = cx_219 - 0x0001
	branch 0x00 == Mem0[psegArg08:di_218:byte] l0800_32E7
// DataOut: al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Local -0070(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32E9:
	word16 cx_40 = ~cx_219
	word16 cx_42 = cx_40 >>u 0x0001
	word16 si_47 = di_218 - cx_40
	word16 di_48 = fp - 0x0068
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0070 bp:fp - 0x0002 es:<invalid> di:<invalid> ax:0x0000 cx:<invalid> -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8:
	branch cx_42 == 0x0000 l0800_32FA
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FA:
	word16 cx_66 = cx_42 * 0x0002 + (cx_40 >>u 0x0001 <u 0x0000)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC:
	branch cx_66 == 0x0000 l0800_32FE
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FE:
	word16 di_214 = fp - 0x0068
	word16 si_104 = 0x0A32
	word16 cx_215 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C:
	branch cx_215 == 0x0000 l0800_330E
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330C_1:
	di_214 = di_214 + 0x0001
	cx_215 = cx_215 - 0x0001
	branch 0x00 == Mem0[ss:di_214:byte] l0800_330C
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_330E:
	word16 di_100 = di_214 - 0x0001
	word16 cx_101 = 0x0004
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:0x0A32 ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3312:
	branch cx_101 == 0x0000 l0800_3314
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3314:
	byte dl_125
	selector ds_126
	branch fn0800_33CD(ds, DPB(ptrLoc76, wArg02, 0), wArg04, 0x0010, fp - 0x0068, ss, out dl_125, out ds_126) == 0x0000 l0800_334D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334D:
	branch wArg0A != 0x0000 l0800_3336
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3336:
	ptrLoc72 = DPB(ptrLoc72, wArg02, 0) (alias)
	byte dl_201
	branch fn0800_3479(ds_126, ptrLoc72, wArg04, 0x0010, out dl_201, out ds_126) != 0x0000 l0800_3353
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_334A:
	wArg0A = wArg0A - 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):0x0010 -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Local -0074(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_3353:
	return wArg0A
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_332D:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:<invalid> di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):0x0010 -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp

fn0800_32CD_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp es:<invalid> di:di ax:<invalid> cx:<invalid> si:si ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):<invalid> -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp 10(fp):<invalid>

l0800_3312_2:
	Mem103[ss:di_100:byte] = Mem0[ds:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_101 = cx_101 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006C bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:ds -112(fp):fp - 0x0068 -110(fp):ss -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32FC_1:
	Mem72[ss:di_48:byte] = Mem0[psegArg08:si_47:byte]
	si_47 = si_47 + 0x0001
	di_48 = di_48 + 0x0001
	cx_66 = cx_66 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)

l0800_32F8_2:
	Mem62[ss:di_48:word16] = Mem0[psegArg08:si_47:word16]
	si_47 = si_47 + 0x0002
	di_48 = di_48 + 0x0002
	cx_42 = cx_42 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x006E bp:fp - 0x0002 es:ss di:<invalid> ax:<invalid> cx:<invalid> si:<invalid> ds:<invalid> -112(fp):fp - 0x0068 -110(fp):ds -108(fp):di -106(fp):si -104(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -006E(16) Stack +0002(16) Stack +0004(16) Stack +000A(16)



byte fn0800_335C(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_335C_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_335C:
	selector ds_35
	byte dl_34
	branch fn0800_33CD(ds, DPB(ptrLoc2C, fp - 0x0010, 0), ss, 0x0010, wArg02, wArg04, out dl_34, out ds_35) != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -002C(16) Stack +0002(16) Stack +0004(16)

l0800_337D:
	dl_34 = fn0800_35A3(ds_35, wArg02, wArg04)
	Mem85[ss:fp - 0x0024:word16] = ds_35
	Mem88[ss:fp - 0x0026:word16] = ss
	word16 si_116 = fp - 0x0010
	selector es_89 = Mem88[ss:fp - 0x0026:selector]
	word16 di_100 = fp - 0x001E
	word16 ax_128 = 0x0000
	word16 cx_102 = 0xFFFF
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0022 bp:fp - 0x0002 ax:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> -44(fp):fp - 0x0010 -42(fp):ss -40(fp):0x0010 -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0:
	branch cx_102 == 0x0000 l0800_33A2
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A0_1:
	di_100 = di_100 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x00 == Mem88[es_89:di_100:byte] l0800_33A0
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A2:
	word16 cx_105 = ~cx_102
	word16 di_106 = di_100 - cx_105
	byte SCZO_108 = cond(di_106)
	byte Z_110 = SCZO_108
	byte C_111 = SCZO_108
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6:
	branch cx_105 == 0x0000 l0800_33A8
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A6_2:
	byte SCZO_179 = cond(Mem88[ss:si_193:byte] - Mem88[es_89:di_194:byte])
	Z_110 = SCZO_179 (alias)
	C_111 = SCZO_179 (alias)
	si_116 = si_193 + 0x0001
	di_106 = di_194 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 si_193 = si_116
	word16 di_194 = di_106
	branch Mem88[ss:si_193:byte] != Mem88[es_89:di_194:byte] l0800_33A6
// DataOut: ax bp cx di dl ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33A8:
	branch Z_110 l0800_33AF
// DataOut: ax bp dl sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AA:
	word16 ax_173 = 0x0000 - C_111
	ax_128 = ax_173 - 0xFFFF - (ax_173 <u 0x0000)
// DataOut: ax bp dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:0x00 al:0x00 -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33AF:
	selector ds_131 = Mem88[ss:fp - 0x0024:selector]
	branch ax_128 != 0x0000 l0800_33C7
// DataOut: bp dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:ss es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33B4:
	ptr32 es_di_137 = Mem88[ss:fp + 0x0002:segptr32]
	word16 di_138 = (word16) es_di_137
	selector es_139 = SLICE(es_di_137, selector, 16)
	word16 si_140 = 0x0A36
	word16 cx_141 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF:
	branch cx_141 == 0x0000 l0800_33C1
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33BF_1:
	di_138 = di_138 + 0x0001
	cx_141 = cx_141 - 0x0001
	branch 0x00 == Mem88[es_139:di_138:byte] l0800_33BF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C1:
	word16 di_154 = di_138 - 0x0001
	word16 cx_157 = 0x0005
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:0x0A36 ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5:
	branch cx_157 == 0x0000 l0800_33C7
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C7:
	return dl_34
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

fn0800_335C_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> ds:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp

l0800_33C5_2:
	Mem163[es_139:di_154:byte] = Mem88[ds_131:si_140:byte]
	si_140 = si_140 + 0x0001
	di_154 = di_154 + 0x0001
	cx_157 = cx_157 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> Sequence es:di:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -44(fp):fp - 0x0010 -42(fp):fp - 0x001E -40(fp):ss -38(fp):<invalid> -36(fp):<invalid> -34(fp):di -32(fp):si -2(fp):bp



word16 fn0800_33CD(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_33CD_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_33CD:
	byte dl_35
	branch fn0800_A817(0x23, ds, DPB(ptrLoc10, wArg08, 0), DPB(ptrLoc0C, 0x4623, 0), wArg06, out dl_35) == 0x0000 l0800_33F1
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33F1:
	word16 di_305 = 0x0A3B
	word16 si_304 = 0x4641
	word16 cx_307 = 0x0002
	word16 ax_106 = 0x0000
	byte Z_302 = cond(0x0000)
	byte C_303 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE:
	branch cx_307 == 0x0000 l0800_3400
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_33FE_1:
	byte SCZO_300 = cond(Mem0[ds:si_309:byte] - Mem0[ds:di_308:byte])
	Z_302 = SCZO_300 (alias)
	C_303 = SCZO_300 (alias)
	si_304 = si_309 + 0x0001
	di_305 = di_308 + 0x0001
	cx_307 = cx_307 - 0x0001
	word16 di_308 = di_305
	word16 si_309 = si_304
	branch Mem0[ds:si_309:byte] != Mem0[ds:di_308:byte] l0800_33FE
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3400:
	branch Z_302 l0800_3407
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3402:
	word16 ax_294 = 0x0000 - C_303
	ax_106 = ax_294 - 0xFFFF - (ax_294 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3407:
	branch ax_106 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_340B:
	word16 di_146 = 0x0A3D
	word16 si_148 = 0x4641
	word16 cx_149 = 0x0003
	word16 ax_150 = 0x0000
	byte Z_153 = cond(0x0000)
	byte C_154 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418:
	branch cx_149 == 0x0000 l0800_341A
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3418_1:
	byte SCZO_286 = cond(Mem0[ds:si_311:byte] - Mem0[ds:di_310:byte])
	Z_153 = SCZO_286 (alias)
	C_154 = SCZO_286 (alias)
	si_148 = si_311 + 0x0001
	di_146 = di_310 + 0x0001
	cx_149 = cx_149 - 0x0001
	word16 di_310 = di_146
	word16 si_311 = si_148
	branch Mem0[ds:si_311:byte] != Mem0[ds:di_310:byte] l0800_3418
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341A:
	branch Z_153 l0800_3421
// DataOut: ax dl ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_341C:
	word16 ax_280 = 0x0000 - C_154
	ax_150 = ax_280 - 0xFFFF - (ax_280 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3421:
	branch ax_150 == 0x0000 l0800_3431
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3425:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) == wArg06 l0800_3444
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3444:
	branch (wArg02 | wArg04) == 0x0000 l0800_3473
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_344C:
	word16 di_210 = (word16) ptrArg02
	selector es_211 = SLICE(ptrArg02, selector, 16)
	word16 di_220 = 0x4641
	word16 cx_226 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B:
	branch cx_226 == 0x0000 l0800_345D
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345B_1:
	di_220 = di_220 + 0x0001
	cx_226 = cx_226 - 0x0001
	branch 0x00 == Mem0[ds:di_220:byte] l0800_345B
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_345D:
	word16 cx_234 = ~cx_226
	word16 cx_236 = cx_234 >>u 0x0001
	word16 si_241 = di_220 - cx_234
	word16 di_242 = di_210
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C:
	branch cx_236 == 0x0000 l0800_346E
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346E:
	word16 cx_261 = cx_236 * 0x0002 + (cx_234 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3470:
	branch cx_261 == 0x0000 l0800_3472
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3472:
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3473:
	selector ds_196
	*dsOut = ds
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3470_1:
	Mem268[es_211:di_242:byte] = Mem0[ds:si_241:byte]
	si_241 = si_241 + 0x0001
	di_242 = di_242 + 0x0001
	cx_261 = cx_261 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_346C_2:
	Mem256[es_211:di_242:word16] = Mem0[ds:si_241:word16]
	si_241 = si_241 + 0x0002
	di_242 = di_242 + 0x0002
	cx_236 = cx_236 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3431:
	byte dl_130
	selector ds_131
	return fn0800_3479(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, wArg06, out dl_130, out ds_131)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_33EA:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x4623 -10(fp):ds -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_33CD_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> Sequence es:di:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_3479(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_3479_entry:
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3479:
// DataOut: ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_347E:
	ptrLoc0A = DPB(ptrLoc0A, 0x4623, 0) (alias)
	word16 ax_32
	byte dl_33
	fn0800_A84A(0x23, ds, ptrLoc0A, out ax_32, out dl_33)
	branch ax_32 == 0x0000 l0800_3494
// DataOut: dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_3494:
	word16 di_271 = 0x0A3B
	word16 si_270 = 0x4641
	word16 cx_273 = 0x0002
	word16 ax_263 = 0x0000
	byte Z_268 = cond(0x0000)
	byte C_269 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1:
	branch cx_273 == 0x0000 l0800_34A3
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A1_1:
	byte SCZO_266 = cond(Mem0[ds:si_275:byte] - Mem0[ds:di_274:byte])
	Z_268 = SCZO_266 (alias)
	C_269 = SCZO_266 (alias)
	si_270 = si_275 + 0x0001
	di_271 = di_274 + 0x0001
	cx_273 = cx_273 - 0x0001
	word16 di_274 = di_271
	word16 si_275 = si_270
	branch Mem0[ds:si_275:byte] != Mem0[ds:di_274:byte] l0800_34A1
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A3:
	branch Z_268 l0800_34AA
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34A5:
	word16 ax_260 = 0x0000 - C_269
	ax_263 = ax_260 - 0xFFFF - (ax_260 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AA:
	branch ax_263 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34AE:
	word16 di_107 = 0x0A3D
	word16 si_109 = 0x4641
	word16 cx_110 = 0x0003
	word16 ax_111 = 0x0000
	byte Z_114 = cond(0x0000)
	byte C_115 = false
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB:
	branch cx_110 == 0x0000 l0800_34BD
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BB_1:
	byte SCZO_252 = cond(Mem0[ds:si_277:byte] - Mem0[ds:di_276:byte])
	Z_114 = SCZO_252 (alias)
	C_115 = SCZO_252 (alias)
	si_109 = si_277 + 0x0001
	di_107 = di_276 + 0x0001
	cx_110 = cx_110 - 0x0001
	word16 di_276 = di_107
	word16 si_277 = si_109
	branch Mem0[ds:si_277:byte] != Mem0[ds:di_276:byte] l0800_34BB
// DataOut: ax cx di dl ds es si ss
// DataOut (flags): CZDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BD:
	branch Z_114 l0800_34C4
// DataOut: ax dl ds ss
// DataOut (flags): CDP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34BF:
	word16 ax_246 = 0x0000 - C_115
	ax_111 = ax_246 - 0xFFFF - (ax_246 <u 0x0000)
// DataOut: ax dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C4:
	branch ax_111 == 0x0000 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34C8:
	branch ((int16) Mem0[ds:0x4638:byte] & wArg06) != wArg06 l0800_347E
// DataOut: dl ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_34D4:
	branch (wArg02 | wArg04) == 0x0000 l0800_3503
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_34DC:
	word16 di_176 = (word16) ptrArg02
	selector es_177 = SLICE(ptrArg02, selector, 16)
	word16 di_186 = 0x4641
	word16 cx_192 = 0xFFFF
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB:
	branch cx_192 == 0x0000 l0800_34ED
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34EB_1:
	di_186 = di_186 + 0x0001
	cx_192 = cx_192 - 0x0001
	branch 0x00 == Mem0[ds:di_186:byte] l0800_34EB
// DataOut: al cx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_34ED:
	word16 cx_200 = ~cx_192
	word16 cx_202 = cx_200 >>u 0x0001
	word16 si_207 = di_186 - cx_200
	word16 di_208 = di_176
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC:
	branch cx_202 == 0x0000 l0800_34FE
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FE:
	word16 cx_227 = cx_202 * 0x0002 + (cx_200 >>u 0x0001 <u 0x0000)
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3500:
	branch cx_227 == 0x0000 l0800_3502
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_3502:
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_3503:
	return 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_3500_1:
	Mem234[es_177:di_208:byte] = Mem0[ds:si_207:byte]
	si_207 = si_207 + 0x0001
	di_208 = di_208 + 0x0001
	cx_227 = cx_227 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_34FC_2:
	Mem222[es_177:di_208:word16] = Mem0[ds:si_207:word16]
	si_207 = si_207 + 0x0002
	di_208 = di_208 + 0x0002
	cx_202 = cx_202 - 0x0001
// DataOut: cx di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> ds:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16)

l0800_348D:
	return 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> di:<invalid> si:<invalid> al:<invalid> -10(fp):0x4623 -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_3479_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> Sequence es:di:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_3509(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_3509_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_3509:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem45[ss:fp - 0x0060:word16] = ss
	Mem50[ss:fp - 0x0060:word16] = Mem45[ss:fp - 0x0060:selector]
	selector es_51 = Mem50[ss:fp + 0x0004:selector]
	Mem53[ss:fp - 0x0062:word16] = fp - 0x0006
	word16 di_54 = Mem53[ss:fp + 0x0002:word16]
	word16 di_201 = Mem53[ss:fp - 0x0062:word16]
	selector es_59 = Mem53[ss:fp - 0x0060:selector]
	Mem62[ss:fp - 0x0060:word16] = es_51
	Mem64[ss:fp - 0x0062:word16] = di_54
	word16 cx_202 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_354B:
	branch cx_202 == 0x0000 l0800_354D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354B_1:
	di_201 = di_201 + 0x0001
	cx_202 = cx_202 - 0x0001
	branch 0x00 == Mem64[es_59:di_201:byte] l0800_354B
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_354D:
	word16 di_100 = Mem64[ss:fp - 0x0062:word16]
	selector es_88 = Mem64[ss:fp - 0x0060:selector]
	Mem92[ss:fp - 0x0060:word16] = ds
	word16 cx_77 = ~cx_202
	word16 cx_101 = cx_77 >>u 0x0001
	word16 si_104 = di_201 - cx_77
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C:
	branch cx_101 == 0x0000 l0800_355E
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355E:
	word16 cx_102 = cx_101 * 0x0002 + (cx_77 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3560:
	branch cx_102 == 0x0000 l0800_3562
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3562:
	selector ds_112 = Mem92[ss:fp - 0x0060:selector]
	Mem115[ss:fp - 0x0060:word16] = ss
	Mem120[ss:fp - 0x0060:word16] = Mem115[ss:fp - 0x0060:selector]
	selector es_121 = Mem120[ss:fp + 0x0004:selector]
	Mem123[ss:fp - 0x0062:word16] = fp - 0x005A
	word16 di_124 = Mem123[ss:fp + 0x0002:word16]
	word16 di_126 = Mem123[ss:fp - 0x0062:word16]
	selector es_129 = Mem123[ss:fp - 0x0060:selector]
	Mem132[ss:fp - 0x0060:word16] = es_121
	Mem134[ss:fp - 0x0062:word16] = di_124
	word16 cx_139 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D:
	branch cx_139 == 0x0000 l0800_357F
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357D_1:
	di_126 = di_126 + 0x0001
	cx_139 = cx_139 - 0x0001
	branch 0x00 == Mem134[es_129:di_126:byte] l0800_357D
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_357F:
	word16 di_151 = Mem134[ss:fp - 0x0062:word16]
	selector es_154 = Mem134[ss:fp - 0x0060:selector]
	Mem156[ss:fp - 0x0018:word16] = ds_112
	word16 cx_148 = ~cx_139
	Mem159[ss:fp - 0x0060:word16] = cx_148
	word16 si_150 = di_126 - cx_148
	word16 cx_160 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3594:
	branch cx_160 == 0x0000 l0800_3596
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3594_2:
	di_151 = di_151 + 0x0001
	cx_160 = cx_160 - 0x0001
	branch 0x00 == Mem159[es_154:di_151:byte] l0800_3594
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3596:
	word16 di_172 = di_151 - 0x0001
	word16 cx_174 = Mem159[ss:fp - 0x0060:word16]
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598:
	branch cx_174 == 0x0000 l0800_359A
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_359A:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_3509_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3598_3:
	Mem180[es_154:di_172:byte] = Mem159[es_129:si_150:byte]
	si_150 = si_150 + 0x0001
	di_172 = di_172 + 0x0001
	cx_174 = cx_174 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3560_1:
	Mem108[es_88:di_100:byte] = Mem92[es_59:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_355C_2:
	Mem98[es_88:di_100:word16] = Mem92[es_59:si_104:word16]
	si_104 = si_104 + 0x0002
	di_100 = di_100 + 0x0002
	cx_101 = cx_101 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



byte fn0800_35A3(selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di ds si sp
// Stack args: Stack +0006(16) Stack +0008(16)
fn0800_35A3_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16)

l0800_35A3:
	fn0800_BE3B(wArg06, wArg08, fp - 0x0006, ss, fp - 0x005A, ss, fp - 0x0010, ss, fp - 0x0016, ss)
	Mem45[ss:fp - 0x0060:word16] = ss
	Mem50[ss:fp - 0x0060:word16] = Mem45[ss:fp - 0x0060:selector]
	selector es_51 = Mem50[ss:fp + 0x0004:selector]
	Mem53[ss:fp - 0x0062:word16] = fp - 0x0010
	word16 di_54 = Mem53[ss:fp + 0x0002:word16]
	word16 di_202 = Mem53[ss:fp - 0x0062:word16]
	selector es_59 = Mem53[ss:fp - 0x0060:selector]
	Mem62[ss:fp - 0x0060:word16] = es_51
	Mem64[ss:fp - 0x0062:word16] = di_54
	word16 cx_203 = 0xFFFF
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_35E5:
	branch cx_203 == 0x0000 l0800_35E7
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E5_1:
	di_202 = di_202 + 0x0001
	cx_203 = cx_203 - 0x0001
	branch 0x00 == Mem64[es_59:di_202:byte] l0800_35E5
// DataOut: al bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35E7:
	word16 di_100 = Mem64[ss:fp - 0x0062:word16]
	selector es_88 = Mem64[ss:fp - 0x0060:selector]
	Mem92[ss:fp - 0x0060:word16] = ds
	word16 cx_77 = ~cx_203
	word16 cx_101 = cx_77 >>u 0x0001
	word16 si_104 = di_202 - cx_77
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6:
	branch cx_101 == 0x0000 l0800_35F8
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F8:
	word16 cx_102 = cx_101 * 0x0002 + (cx_77 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FA:
	branch cx_102 == 0x0000 l0800_35FC
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35FC:
	selector ds_112 = Mem92[ss:fp - 0x0060:selector]
	Mem115[ss:fp - 0x0060:word16] = ss
	Mem120[ss:fp - 0x0060:word16] = Mem115[ss:fp - 0x0060:selector]
	selector es_121 = Mem120[ss:fp + 0x0004:selector]
	Mem123[ss:fp - 0x0062:word16] = fp - 0x0016
	word16 di_124 = Mem123[ss:fp + 0x0002:word16]
	word16 di_126 = Mem123[ss:fp - 0x0062:word16]
	selector es_130 = Mem123[ss:fp - 0x0060:selector]
	Mem133[ss:fp - 0x0060:word16] = es_121
	Mem135[ss:fp - 0x0062:word16] = di_124
	byte dl_129 = (byte) es_121
	word16 cx_140 = 0xFFFF
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617:
	branch cx_140 == 0x0000 l0800_3619
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3617_1:
	di_126 = di_126 + 0x0001
	cx_140 = cx_140 - 0x0001
	branch 0x00 == Mem135[es_130:di_126:byte] l0800_3617
// DataOut: al bp cx di dl ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_3619:
	word16 di_152 = Mem135[ss:fp - 0x0062:word16]
	selector es_155 = Mem135[ss:fp - 0x0060:selector]
	Mem157[ss:fp - 0x0018:word16] = ds_112
	word16 cx_149 = ~cx_140
	Mem160[ss:fp - 0x0060:word16] = cx_149
	word16 si_151 = di_126 - cx_149
	word16 cx_161 = 0xFFFF
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_362E:
	branch cx_161 == 0x0000 l0800_3630
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_362E_2:
	di_152 = di_152 + 0x0001
	cx_161 = cx_161 - 0x0001
	branch 0x00 == Mem160[es_155:di_152:byte] l0800_362E
// DataOut: al bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3630:
	word16 di_173 = di_152 - 0x0001
	word16 cx_175 = Mem160[ss:fp - 0x0060:word16]
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632:
	branch cx_175 == 0x0000 l0800_3634
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3634:
	return dl_129
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

fn0800_35A3_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_3632_3:
	Mem181[es_155:di_173:byte] = Mem160[es_130:si_151:byte]
	si_151 = si_151 + 0x0001
	di_173 = di_173 + 0x0001
	cx_175 = cx_175 - 0x0001
// DataOut: bp cx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -24(fp):ds -2(fp):bp

l0800_35FA_1:
	Mem108[es_88:di_100:byte] = Mem92[es_59:si_104:byte]
	si_104 = si_104 + 0x0001
	di_100 = di_100 + 0x0001
	cx_102 = cx_102 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp

l0800_35F6_2:
	Mem98[es_88:di_100:word16] = Mem92[es_59:si_104:word16]
	si_104 = si_104 + 0x0002
	di_100 = di_100 + 0x0002
	cx_101 = cx_101 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):fp - 0x0006 -108(fp):ss -106(fp):fp - 0x005A -104(fp):ss -102(fp):fp - 0x0010 -100(fp):ss -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -2(fp):bp



selector fn0800_363D(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_363D_entry:
// DataOut: ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_363D:
	byte dl_32
	branch fn0800_A817((byte) (fp - 0x002E), ds, DPB(ptrLoc38, wArg06, 0), DPB(ptrLoc34, fp - 0x002E, 0), 0x0000, out dl_32) == 0x0000 l0800_3662
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0016(16) Local -0018(16) Stack +0002(32)

l0800_3662:
	Mem60[ptrArg02:word16] = wLoc18
	Mem63[ptrArg02 + 0x0002:word16] = wLoc16
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

l0800_365B:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002E bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp

fn0800_363D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> al:<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):fp - 0x002E -50(fp):ss -48(fp):0x0000 -2(fp):bp



word16 fn0800_3678(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3678_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_3678:
	word16 di_18 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_24 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693:
	branch cx_24 == 0x0000 l0800_3695
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3693_1:
	di_18 = di_18 + 0x0001
	cx_24 = cx_24 - 0x0001
	branch 0x00 == Mem0[es_19:di_18:byte] l0800_3693
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_3695:
	word16 cx_277 = ~cx_24
	word16 di_265 = di_18 - cx_277
	byte Z_273 = cond(di_265)
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C:
	branch cx_277 == 0x0000 l0800_369E
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369C_2:
	Z_273 = cond(0x5C - Mem0[es_19:di_265:byte]) (alias)
	di_265 = di_265 + 0x0001
	cx_277 = cx_277 - 0x0001
	branch 0x5C == Mem0[es_19:di_265:byte] l0800_369C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_369E:
	branch Z_273 l0800_36A7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A0:
	di_265 = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_36A7:
	word16 di_60 = di_265 - 0x0001
	branch di_60 == 0x0000 l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16) Stack +0004(16)

l0800_36B6:
	branch 0x0000 != wArg04 l0800_36C6
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32) Stack +0002(16)

l0800_36C1:
	branch di_60 == wArg02 l0800_36D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(32)

l0800_36C6:
	branch Mem0[0x0000:(word16) ptrLoc0A - 0x0001:byte] != 0x3A l0800_3732
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16) Local -000A(16)

l0800_36D0:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 ax:0x0000 dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:0x0000 Sequence es:bx:<invalid> -12(fp):di -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3732:
	ptr32 es_di_87 = Mem0[ss:fp - 0x0006:segptr32]
	word16 di_101 = (word16) es_di_87
	selector es_126 = SLICE(es_di_87, selector, 16)
	word16 cx_100 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A:
	branch cx_100 == 0x0000 l0800_373C
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373A_1:
	di_101 = di_101 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 == Mem0[es_126:di_101:byte] l0800_373A
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_373C:
	word16 cx_102 = ~cx_100
	word16 di_104 = di_101 - cx_102
	byte Z_108 = cond(di_104)
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743:
	branch cx_102 == 0x0000 l0800_3745
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3743_2:
	Z_108 = cond(0x5C - Mem0[es_126:di_104:byte]) (alias)
	di_104 = di_104 + 0x0001
	cx_102 = cx_102 - 0x0001
	branch 0x5C == Mem0[es_126:di_104:byte] l0800_3743
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3745:
	branch Z_108 l0800_374E
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3747:
	di_104 = 0x0001
	es_126 = 0x0000
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x005C dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:0x5C si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_374E:
	Mem130[ss:fp - 0x0008:word16] = es_126
	word16 di_128 = di_104 - 0x0001
	Mem131[ss:fp - 0x000A:word16] = di_128
	branch (di_128 | es_126) != 0x0000 l0800_36DF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:0x00 al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36DF:
	Mem148[Mem131[ss:fp - 0x000A:segptr32]:byte] = 0x00
	Mem151[ss:fp - 0x000E:word16] = Mem148[ss:fp + 0x0004:word16]
	Mem154[ss:fp - 0x0010:word16] = Mem151[ss:fp + 0x0002:word16]
	Mem157[ss:fp - 0x0012:word16] = 0x0010
	Mem162[ss:fp - 0x0014:word16] = 0x0000
	Mem164[ss:fp - 0x0016:word16] = 0x0000
	byte dl_168
	word16 ax_170 = fn0800_33CD(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out dl_168, out ds)
	byte al_173 = (byte) ax_170
	branch ax_170 == 0x0000 l0800_371E
// DataOut: al bp ds si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_36FE:
	Mem198[ss:fp - 0x000E:word16] = Mem164[ss:fp + 0x0004:word16]
	Mem201[ss:fp - 0x0010:word16] = Mem198[ss:fp + 0x0002:word16]
	branch fn0800_8E52(al_173, ds, ptrArg00) == 0x0000 l0800_371E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_370E:
	Mem210[ss:fp - 0x000E:word16] = Mem201[ss:fp + 0x0004:word16]
	Mem213[ss:fp - 0x0010:word16] = Mem210[ss:fp + 0x0002:word16]
	Mem216[ss:fp - 0x0012:word16] = 0x000E
	word16 di_219
	fn0800_0D24(ds, wArg00, ptrArg02, wArg04, out si, out di_219, out ds)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_371E:
	Mem189[Mem164[ss:fp - 0x000A:segptr32]:byte] = 0x5C
	word16 dx_191 = Mem189[ss:fp - 0x000A:word16]
	Mem194[ss:fp - 0x0004:word16] = Mem189[ss:fp - 0x0008:word16]
	Mem195[ss:fp - 0x0006:word16] = dx_191 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_375D:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_3678_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:di:<invalid> cx:<invalid> di:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> ds:<invalid> ah:<invalid> al:<invalid> si:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -22(fp):0x0000 -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3764(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di ds si sp
fn0800_3764_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3764:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_3796
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3796:
	fn0800_3509(ds, 0x4541, ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si

l0800_376D:
	word16 di_120 = 0x427E
	word16 cx_121 = 0xFFFF
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C:
	branch cx_121 == 0x0000 l0800_377E
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377C_1:
	di_120 = di_120 + 0x0001
	cx_121 = cx_121 - 0x0001
	branch 0x00 == Mem0[ds:di_120:byte] l0800_377C
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_377E:
	word16 cx_80 = ~cx_121
	word16 cx_103 = cx_80 >>u 0x0001
	word16 si_101 = di_120 - cx_80
	word16 di_102 = 0x44DC
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 es:ds di:<invalid> ax:0x0000 cx:<invalid> -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D:
	branch cx_103 == 0x0000 l0800_378F
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378F:
	word16 cx_104 = cx_103 * 0x0002 + (cx_80 >>u 0x0001 <u 0x0000)
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3791:
	branch cx_104 == 0x0000 l0800_3793
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_3793:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si

l0800_37A6:
	Mem21[ss:fp - 0x0006:word16] = ds
	selector es_23 = Mem21[ss:fp - 0x0006:selector]
	word16 di_134 = 0x44DC
	word16 si_26 = 0x0A40
	word16 cx_27 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> si:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3:
	branch cx_27 == 0x0000 l0800_37B5
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B3_1:
	di_134 = di_134 + 0x0001
	cx_27 = cx_27 - 0x0001
	branch 0x00 == Mem21[es_23:di_134:byte] l0800_37B3
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B5:
	word16 di_39 = di_134 - 0x0001
	word16 cx_41 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A40 cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9:
	branch cx_41 == 0x0000 l0800_37BB
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37BB:
	return bp
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

fn0800_3764_exit:
// DataOut: bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_37B9_2:
	Mem46[es_23:di_39:byte] = Mem21[ds:si_26:byte]
	si_26 = si_26 + 0x0001
	di_39 = di_39 + 0x0001
	cx_41 = cx_41 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> bp:<invalid> bx:<invalid> al:<invalid> -12(fp):0x44DC -10(fp):ds -8(fp):<invalid> -6(fp):ds -4(fp):di -2(fp):si

l0800_3791_1:
	Mem110[ds:di_102:byte] = Mem0[ds:si_101:byte]
	si_101 = si_101 + 0x0001
	di_102 = di_102 + 0x0001
	cx_104 = cx_104 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_378D_2:
	Mem100[ds:di_102:word16] = Mem0[ds:si_101:word16]
	si_101 = si_101 + 0x0002
	di_102 = di_102 + 0x0002
	cx_103 = cx_103 - 0x0001
// DataOut: bp cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 es:ds di:<invalid> ax:ds cx:<invalid> si:<invalid> ds:ds -8(fp):0x44DC -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)



word16 fn0800_37BE(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_37BE_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_37BE:
	word16 di_35
	return fn0800_BEA2(ds, DPB(ptrLoc12, wArg02, 0), 0x0A2B, ds, out di_35)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_37BE_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> es:<invalid> bx:<invalid> di:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x0A2B -12(fp):ds -10(fp):0x42E3 -8(fp):ds -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_37DF(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_37DF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_37DF:
	fn0800_3509(ds, 0x44DC, ds)
	Mem25[ss:fp - 0x0070:word16] = ds
	Mem28[ss:fp - 0x0072:word16] = 0x4541
	Mem30[ss:fp - 0x0074:word16] = ss
	selector es_188 = Mem30[ss:fp - 0x0074:selector]
	word16 di_197 = fp - 0x006C
	word16 cx_198 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3805:
	branch cx_198 == 0x0000 l0800_3807
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3805_1:
	di_197 = di_197 + 0x0001
	cx_198 = cx_198 - 0x0001
	branch 0x00 == Mem30[es_188:di_197:byte] l0800_3805
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3807:
	word16 cx_194 = ~cx_198
	word16 di_184 = di_197 - cx_194
	byte Z_191 = cond(di_184)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D:
	branch cx_194 == 0x0000 l0800_380F
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380D_2:
	Z_191 = cond(0x00 - Mem30[es_188:di_184:byte]) (alias)
	di_184 = di_184 + 0x0001
	cx_194 = cx_194 - 0x0001
	branch 0x00 == Mem30[es_188:di_184:byte] l0800_380D
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_380F:
	branch Z_191 l0800_3818
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3811:
	di_184 = 0x0001
	es_188 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3818:
	Mem70[ss:fp - 0x0074:word16] = es_188
	word16 di_66 = di_184 - 0x0001
	Mem72[ss:fp - 0x0076:word16] = di_66
	fn0800_35A3(ds, wArg04, wArg06)
	Mem81[ss:fp - 0x0070:word16] = ds
	Mem84[ss:fp - 0x0072:word16] = 0x0A4D
	Mem86[ss:fp - 0x0074:word16] = ss
	Mem89[ss:fp - 0x0076:word16] = fp - 0x006C
	word16 dx_93
	word16 di_95
	selector ds_105
	word16 si_127
	word16 ax_97 = fn0800_AA7E(si, di_66, ds, wArg00, wArg02, wArg04, wArg06, out dx_93, out si_127, out di_95, out ds_105)
	Mem99[ss:fp - 0x0004:word16] = dx_93
	Mem100[ss:fp - 0x0006:word16] = ax_97
	branch (ax_97 | dx_93) == 0x0000 l0800_3863
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -118(fp):fp - 0x006C -116(fp):ss -114(fp):<invalid> -112(fp):ds -110(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_383D:
	Mem154[ss:fp - 0x0070:word16] = Mem100[ss:fp - 0x0004:word16]
	Mem157[ss:fp - 0x0072:word16] = Mem154[ss:fp - 0x0006:word16]
	byte dl_158
	word16 di_159
	selector ds_160
	fn0800_A614(ds_105, ptrArg00, wArg02, out dl_158, out di_159, out ds_160)
	Mem166[ss:fp - 0x0070:word16] = 0x0180
	Mem168[ss:fp - 0x0072:word16] = ss
	Mem171[ss:fp - 0x0074:word16] = fp - 0x006C
	ds_105 = fn0800_A4F6(fp - 0x0002, ds_160, wArg00, wArg02, wArg04)
	*dsOut = ds_105
	Mem176[ss:fp - 0x0070:word16] = ss
	Mem180[ss:fp - 0x0072:word16] = fp - 0x006C
	fn0800_8F7F((byte) (fp - 0x006C), ds_105, ptrArg00)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):ds -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3863:
	Mem110[ss:fp - 0x0070:word16] = ss
	Mem113[ss:fp - 0x0072:word16] = fp - 0x006C
	Mem115[ss:fp - 0x0074:word16] = ds_105
	Mem119[ss:fp - 0x0076:word16] = 0x44DC
	branch fn0800_BA4A(0xDC, ds_105, ptrArg00, ptrArg04) != 0xFFFF l0800_3887
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> si:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3878:
	Mem138[ss:fp - 0x0070:word16] = ds_105
	Mem141[ss:fp - 0x0072:word16] = 0x44DC
	Mem144[ss:fp - 0x0074:word16] = 0x000A
	word16 di_147
	selector ds_148
	fn0800_0D24(ds_105, wArg00, ptrArg02, wArg04, out si_127, out di_147, out ds_148)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> si:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3887:
	return si_127
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_37DF_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):<invalid> -110(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_388C(word16 bp, word16 si, word16 di, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_388C_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_388C:
	word16 di_21
	selector ds_22
	word16 si_23 = fn0800_4234(fp - 0x0002, si, di, ds, 0x4541, ds, 0x0A13, ds, out di_21, out ds_22)
	Mem27[ds_22:0x29E5:word16] = dx
	Mem28[ds_22:0x29E3:word16] = 0x4541
	Mem30[ss:fp - 0x000C:word16] = ds_22
	Mem34[ss:fp - 0x000E:word16] = 0x0A50
	Mem36[ss:fp - 0x0010:word16] = ds_22
	Mem39[ss:fp - 0x0012:word16] = 0x44DC
	word16 di_44
	selector ds_45
	word16 si_46
	*siOut = fn0800_4234(fp - 0x0002, si_23, di_21, ds_22, wArg00, wArg02, wArg04, wArg06, out di_44, out ds_45)
	Mem49[ds_45:0x29E1:word16] = dx
	Mem50[ds_45:0x29DF:word16] = 0x44DC
	Mem52[ss:fp - 0x000C:word16] = ds_45
	Mem55[ss:fp - 0x000E:word16] = 0x44DC
	Mem57[ss:fp - 0x0010:word16] = ss
	Mem60[ss:fp - 0x0012:word16] = fp - 0x0006
	selector ds_62 = fn0800_363D(ds_45, ptrArg00, wArg04, wArg06)
	*dsOut = ds_62
	branch Mem60[ds_62:0x0A12:byte] != 0x00 l0800_38EF
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_38EF:
	Mem94[ss:fp - 0x000C:word16] = ds_62
	Mem97[ss:fp - 0x000E:word16] = 0x4541
	Mem99[ss:fp - 0x0010:word16] = ss
	Mem102[ss:fp - 0x0012:word16] = fp - 0x000A
	selector ds_103 = fn0800_363D(ds_62, ptrArg00, wArg04, wArg06)
	*dsOut = ds_103
	Mem107[ss:fp - 0x000C:word16] = ds_103
	Mem110[ss:fp - 0x000E:word16] = 0x461F
	Mem112[ss:fp - 0x0010:word16] = ss
	Mem115[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) < 0x0000 l0800_3927
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3913:
	Mem131[ss:fp - 0x000C:word16] = ss
	Mem134[ss:fp - 0x000E:word16] = fp - 0x0006
	Mem136[ss:fp - 0x0010:word16] = ss
	Mem139[ss:fp - 0x0012:word16] = fp - 0x000A
	branch fn0800_395B(ptrArg00, ptrArg04) <= 0x0000 l0800_392E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_392E:
	Mem147[ss:fp - 0x000C:word16] = Mem139[ds_103:0x29E5:word16]
	Mem150[ss:fp - 0x000E:word16] = Mem147[ds_103:0x29E3:word16]
	byte dl_151
	word16 di_152
	selector ds_153
	fn0800_A614(ds_103, ptrArg00, wArg02, out dl_151, out di_152, out ds_153)
	Mem159[ss:fp - 0x000C:word16] = Mem150[ds_153:0x29E1:word16]
	Mem162[ss:fp - 0x000E:word16] = Mem159[ds_153:0x29DF:word16]
	byte dl_163
	word16 di_164
	selector ds_165
	fn0800_A614(ds_153, ptrArg00, wArg02, out dl_163, out di_164, out ds_165)
	Mem170[ss:fp - 0x000C:word16] = ds_165
	Mem174[ss:fp - 0x000E:word16] = 0x44DC
	fn0800_8F7F(0xDC, ds_165, ptrArg00)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_3927:
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_38D7:
	Mem80[ds_62:0x4621:word16] = Mem60[ss:fp - 0x0004:word16]
	Mem82[ds_62:0x461F:word16] = Mem80[ss:fp - 0x0006:word16]
	Mem83[ds_62:0x0A12:byte] = 0x01
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> cx:<invalid> al:<invalid> si:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_388C_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> al:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_395B(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_395B_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_395B:
	word16 ax_12 = Mem0[ptrArg02 + 0x0002:word16]
	branch ax_12 != Mem0[ptrArg06 + 0x0002:word16] l0800_3984
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0006(32)

l0800_3984:
	return ax_12 - Mem0[ptrArg06 + 0x0002:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3974:
	return Mem0[ptrArg02:word16] - Mem0[ptrArg06:word16]
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_395B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3992(word16 bp, selector ds, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di sp
fn0800_3992_entry:
	*dsOut = ds
	*siOut = si
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3992:
	branch Mem0[ds:0x427E:byte] == 0x00 l0800_39AE
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A0:
	branch Mem0[ds:0x2A23:word16] != 0x0001 l0800_39AE
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39A7:
	branch Mem0[ds:0x2A17:word16] != 0x0000 l0800_39B5
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_39B5:
	fn0800_3509(ds, 0x44DC, ds)
	Mem79[ss:fp - 0x0078:word16] = ds
	Mem82[ss:fp - 0x007A:word16] = 0x4541
	Mem84[ss:fp - 0x007C:word16] = ss
	selector es_128 = Mem84[ss:fp - 0x007C:selector]
	word16 di_417 = fp - 0x0074
	word16 cx_418 = 0xFFFF
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4:
	branch cx_418 == 0x0000 l0800_39D6
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D4_1:
	di_417 = di_417 + 0x0001
	cx_418 = cx_418 - 0x0001
	branch 0x00 == Mem84[es_128:di_417:byte] l0800_39D4
// DataOut: cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39D6:
	word16 cx_100 = ~cx_418
	word16 di_103 = di_417 - cx_100
	byte Z_105 = cond(di_103)
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC:
	branch cx_100 == 0x0000 l0800_39DE
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DC_2:
	Z_105 = cond(0x00 - Mem84[es_128:di_103:byte]) (alias)
	di_103 = di_103 + 0x0001
	cx_100 = cx_100 - 0x0001
	branch 0x00 == Mem84[es_128:di_103:byte] l0800_39DC
// DataOut: cx di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39DE:
	branch Z_105 l0800_39E7
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E0:
	di_103 = 0x0001
	es_128 = 0x0000
// DataOut: di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_39E7:
	Mem134[ss:fp - 0x007C:word16] = es_128
	word16 di_130 = di_103 - 0x0001
	Mem136[ss:fp - 0x007E:word16] = di_130
	fn0800_35A3(ds, wArg04, wArg06)
	Mem144[ss:fp - 0x0078:word16] = ds
	Mem147[ss:fp - 0x007A:word16] = 0x0A4D
	Mem149[ss:fp - 0x007C:word16] = ss
	Mem152[ss:fp - 0x007E:word16] = fp - 0x0074
	word16 dx_155
	word16 si_156
	word16 di_157
	selector ds_158
	word16 ax_159 = fn0800_AA7E(si, di_130, ds, wArg00, wArg02, wArg04, wArg06, out dx_155, out si_156, out di_157, out ds_158)
	Mem161[ss:fp - 0x0004:word16] = dx_155
	Mem162[ss:fp - 0x0006:word16] = ax_159
	branch (ax_159 | dx_155) != 0x0000 l0800_3A13
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0000 es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> bx:<invalid> al:0x00 -126(fp):fp - 0x0074 -124(fp):ss -122(fp):<invalid> -120(fp):ds -118(fp):di -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A13:
	Mem178[ss:fp - 0x0078:word16] = Mem162[ss:fp - 0x0004:word16]
	Mem181[ss:fp - 0x007A:word16] = Mem178[ss:fp - 0x0006:word16]
	selector ds_182
	word16 ax_183 = fn0800_4194(ds_158, wArg00, wArg02, out ds_182)
	branch false l0800_3A3D
// DataOut: ax bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A23:
	branch dx_155 != 0x0000 l0800_3A2A
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A25:
	branch ax_183 >u 0x0012 l0800_3A3D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A3D:
	Mem197[ss:fp - 0x0078:word16] = Mem181[ss:fp - 0x0004:word16]
	Mem200[ss:fp - 0x007A:word16] = Mem197[ss:fp - 0x0006:word16]
	word16 si_201
	selector ds_202
	word16 dx_207
	word16 ax_208 = fn0800_8CAA(ax_183, 0x08, fn0800_3E5D(fp - 0x0002, ds_182, wArg00, wArg02, out si_201, out ds_202), bp, out dx_207)
	branch dx_207 != 0x0052 l0800_3A58
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A53:
	branch ax_208 == 0x4E43 l0800_3A6B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A6B:
	Mem240[ss:fp - 0x0078:word16] = Mem200[ss:fp - 0x0004:word16]
	Mem243[ss:fp - 0x007A:word16] = Mem240[ss:fp - 0x0006:word16]
	word16 si_244
	selector ds_245
	word16 dx_246 = fn0800_3E5D(fp - 0x0002, ds_202, wArg00, wArg02, out si_244, out ds_245)
	branch dx_246 != Mem243[ds_245:0x2A09:word16] l0800_3A83
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A7D:
	branch ax_208 == Mem243[ds_245:0x2A07:word16] l0800_3A96
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3A96:
	Mem276[ss:fp - 0x0078:word16] = ss
	Mem279[ss:fp - 0x007A:word16] = fp - 0x0074
	Mem281[ss:fp - 0x007C:word16] = ss
	Mem284[ss:fp - 0x007E:word16] = fp - 0x000E
	selector ds_285 = fn0800_363D(ds_245, ptrArg00, wArg04, wArg06)
	Mem289[ss:fp - 0x0078:word16] = ds_285
	Mem292[ss:fp - 0x007A:word16] = 0x4541
	Mem294[ss:fp - 0x007C:word16] = ss
	Mem297[ss:fp - 0x007E:word16] = fp - 0x000A
	selector ds_298 = fn0800_363D(ds_285, ptrArg00, wArg04, wArg06)
	Mem302[ss:fp - 0x0078:word16] = ss
	Mem305[ss:fp - 0x007A:word16] = fp - 0x000A
	Mem307[ss:fp - 0x007C:word16] = ss
	Mem310[ss:fp - 0x007E:word16] = fp - 0x000E
	word16 ax_312 = fn0800_395B(ptrArg00, ptrArg04)
	branch ax_312 >= 0x0000 l0800_3ADD
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3ADD:
	Mem340[ss:fp - 0x0078:word16] = Mem310[ss:fp - 0x0004:word16]
	Mem343[ss:fp - 0x007A:word16] = Mem340[ss:fp - 0x0006:word16]
	word16 si_344
	selector ds_345
	ui32 dx_ax_349 = SEQ(fn0800_3E5D(fp - 0x0002, ds_298, wArg00, wArg02, out si_344, out ds_345), ax_312 + 0x0012)
	Mem356[ds_345:0x2A05:word16] = SLICE(dx_ax_349 + 0x00000012, word16, 16)
	Mem357[ds_345:0x2A03:word16] = (word16) (dx_ax_349 + 0x00000012)
	Mem360[ss:fp - 0x0078:word16] = Mem357[ss:fp - 0x0004:word16]
	Mem363[ss:fp - 0x007A:word16] = Mem360[ss:fp - 0x0006:word16]
	byte dl_364
	word16 di_365
	selector ds_366
	fn0800_A614(ds_345, ptrArg00, wArg02, out dl_364, out di_365, out ds_366)
	return 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3ACA:
	Mem320[ss:fp - 0x0078:word16] = Mem310[ss:fp - 0x0004:word16]
	Mem323[ss:fp - 0x007A:word16] = Mem320[ss:fp - 0x0006:word16]
	byte dl_324
	word16 di_325
	selector ds_326
	fn0800_A614(ds_298, ptrArg00, wArg02, out dl_324, out di_325, out ds_326)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A83:
	Mem255[ss:fp - 0x0078:word16] = Mem243[ss:fp - 0x0004:word16]
	Mem258[ss:fp - 0x007A:word16] = Mem255[ss:fp - 0x0006:word16]
	byte dl_259
	word16 di_260
	selector ds_261
	fn0800_A614(ds_245, ptrArg00, wArg02, out dl_259, out di_260, out ds_261)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A58:
	Mem217[ss:fp - 0x0078:word16] = Mem200[ss:fp - 0x0004:word16]
	Mem220[ss:fp - 0x007A:word16] = Mem217[ss:fp - 0x0006:word16]
	byte dl_222
	word16 di_223
	selector ds_224
	fn0800_A614(ds_202, ptrArg00, wArg02, out dl_222, out di_223, out ds_224)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A2A:
	Mem381[ss:fp - 0x0078:word16] = Mem181[ss:fp - 0x0004:word16]
	Mem384[ss:fp - 0x007A:word16] = Mem381[ss:fp - 0x0006:word16]
	byte dl_385
	word16 di_386
	selector ds_387
	fn0800_A614(ds_182, ptrArg00, wArg02, out dl_385, out di_386, out ds_387)
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_3A0C:
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):ds -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_39AE:
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0076 bp:fp - 0x0002 -118(fp):di -2(fp):bp

fn0800_3992_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> ch:<invalid> bl:<invalid> si:<invalid> dh:<invalid> bh:<invalid> -126(fp):<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):di -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3B0A(word16 bp, selector ds, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +000A(16) Stack +000C(16)
fn0800_3B0A_entry:
	*dsOut = ds
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +000A(16) Stack +000C(16)

l0800_3B0A:
	branch (wArg0A | wArg0C) != 0x0000 l0800_3B1B
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B1B:
	word16 dx_194
	word16 ax_196
	branch wArg0C < 0x0000 l0800_3B31
// DataOut: bp ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B21:
	branch wArg0C > 0x0000 l0800_3B2A
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B23:
	branch wArg0A <=u 0xFDE8 l0800_3B31
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +000A(16) Stack +000C(16)

l0800_3B31:
	dx_194 = wArg0C
	ax_196 = wArg0A
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B2A:
	dx_194 = 0x0000
	ax_196 = 0xFDE8
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_3B37:
	selector ds_163
	si = fn0800_4311(fp - 0x0002, ds, ax_196, dx_194, out ds_163)
	Mem76[ss:fp - 0x0004:word16] = dx_194
	Mem77[ss:fp - 0x0006:word16] = ax_196
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3BAB:
	branch (Mem77[ss:fp + 0x000A:word16] | Mem77[ss:fp + 0x000C:word16]) != 0x0000 l0800_3B4F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B4F:
	word16 dx_116
	word16 ax_115
	branch Mem77[ss:fp + 0x000C:word16] < 0x0000 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B55:
	branch Mem77[ss:fp + 0x000C:word16] > 0x0000 l0800_3B5E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B57:
	branch Mem77[ss:fp + 0x000A:word16] <=u 0xFDE8 l0800_3B65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B65:
	dx_116 = Mem77[ss:fp + 0x000C:word16]
	ax_115 = Mem77[ss:fp + 0x000A:word16]
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B5E:
	dx_116 = 0x0000
	ax_115 = 0xFDE8
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3B6B:
	Mem118[ss:fp - 0x0008:word16] = dx_116
	Mem119[ss:fp - 0x000A:word16] = ax_115
	Mem122[ss:fp - 0x000C:word16] = Mem119[ss:fp + 0x0004:word16]
	Mem125[ss:fp - 0x000E:word16] = Mem122[ss:fp + 0x0002:word16]
	Mem128[ss:fp - 0x0010:word16] = Mem125[ss:fp - 0x0008:word16]
	Mem130[ss:fp - 0x0012:word16] = ax_115
	Mem133[ss:fp - 0x0014:word16] = Mem130[ss:fp - 0x0004:word16]
	Mem136[ss:fp - 0x0016:word16] = Mem133[ss:fp - 0x0006:word16]
	word16 di_140
	selector ds_141
	fn0800_4110(ds_163, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_140, out ds_141)
	Mem147[ss:fp - 0x000C:word16] = Mem136[ss:fp + 0x0008:word16]
	Mem150[ss:fp - 0x000E:word16] = Mem147[ss:fp + 0x0006:word16]
	Mem153[ss:fp - 0x0010:word16] = Mem150[ss:fp - 0x0008:word16]
	Mem156[ss:fp - 0x0012:word16] = Mem153[ss:fp - 0x000A:word16]
	Mem159[ss:fp - 0x0014:word16] = Mem156[ss:fp - 0x0004:word16]
	Mem162[ss:fp - 0x0016:word16] = Mem159[ss:fp - 0x0006:word16]
	si = fn0800_4152(ds_141, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_163)
	Mem170[ss:fp + 0x000A:word16] = Mem162[ss:fp + 0x000A:word16] - Mem162[ss:fp - 0x000A:word16]
	Mem174[ss:fp + 0x000C:word16] = v28
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3BB3:
	Mem96[ss:fp - 0x000C:word16] = Mem77[ss:fp - 0x0004:word16]
	Mem99[ss:fp - 0x000E:word16] = Mem96[ss:fp - 0x0006:word16]
	selector ds_102
	fn0800_4346(ds_163, wArg00, wArg02, out ds_102)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3B18:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_3BBF:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3B0A_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> es:<invalid> cx:<invalid> di:<invalid> si:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>



word16 fn0800_3BC3(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_3BC3_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3BC3:
	word16 di_19
	word16 si_20 = fn0800_37BE(ds, 0x43AD, ds, 0x0A54, ds, out di_19)
	word16 di_33
	selector ds_34
	fn0800_4234(fp - 0x0002, si_20, di_19, ds, 0x43AD, ds, 0x0A61, ds, out di_33, out ds_34)
	Mem39[ds_34:0x29D5:word16] = dx
	Mem40[ds_34:0x29D3:word16] = 0x43AD
	Mem44[ss:fp - 0x0008:word16] = Mem40[ss:fp + 0x0004:word16]
	Mem47[ss:fp - 0x000A:word16] = Mem44[ss:fp + 0x0002:word16]
	selector ds_50
	ui32 dx_ax_56 = SEQ(dx, fn0800_4194(ds_34, wArg00, wArg02, out ds_50) - Mem47[ss:fp + 0x0006:word16]) - Mem47[ss:fp + 0x0006:ui32]
	Mem59[ss:fp - 0x0004:word16] = SLICE(dx_ax_56, word16, 16)
	Mem60[ss:fp - 0x0006:word16] = (word16) dx_ax_56
	Mem65[ss:fp - 0x0008:word16] = 0x0000
	Mem68[ss:fp - 0x000A:word16] = Mem65[ss:fp + 0x0008:word16]
	Mem71[ss:fp - 0x000C:word16] = Mem68[ss:fp + 0x0006:word16]
	Mem74[ss:fp - 0x000E:word16] = Mem71[ss:fp + 0x0004:word16]
	Mem77[ss:fp - 0x0010:word16] = Mem74[ss:fp + 0x0002:word16]
	selector ds_82
	fn0800_ACB3(ds_50, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_82)
	Mem88[ss:fp - 0x0008:word16] = Mem77[ss:fp - 0x0004:word16]
	Mem91[ss:fp - 0x000A:word16] = Mem88[ss:fp - 0x0006:word16]
	Mem94[ss:fp - 0x000C:word16] = Mem91[ds_82:0x29D5:word16]
	Mem97[ss:fp - 0x000E:word16] = Mem94[ds_82:0x29D3:word16]
	Mem100[ss:fp - 0x0010:word16] = Mem97[ss:fp + 0x0004:word16]
	Mem103[ss:fp - 0x0012:word16] = Mem100[ss:fp + 0x0002:word16]
	selector ds_105
	fn0800_3B0A(fp - 0x0002, ds_82, wArg08, wArg0A, out ds_105)
	Mem111[ss:fp - 0x0008:word16] = Mem103[ds_105:0x29D5:word16]
	Mem114[ss:fp - 0x000A:word16] = Mem111[ds_105:0x29D3:word16]
	selector ds_115 = fn0800_BA67(ds_105, ptrArg00, wArg02)
	Mem119[ss:fp - 0x0008:word16] = 0x0000
	word16 ax_120 = Mem119[ss:fp + 0x0008:word16]
	word16 dx_122 = Mem119[ss:fp + 0x0006:word16] + Mem119[ss:fp + 0x000A:word16]
	Mem130[ss:fp - 0x000A:word16] = ax_120 + Mem119[ss:fp + 0x000C:word16] + (SEQ(dx_122, ax_120) <u 0x00000000)
	Mem132[ss:fp - 0x000C:word16] = dx_122
	Mem135[ss:fp - 0x000E:word16] = Mem132[ss:fp + 0x0004:word16]
	Mem138[ss:fp - 0x0010:word16] = Mem135[ss:fp + 0x0002:word16]
	selector ds_139
	fn0800_ACB3(ds_115, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_139)
	Mem145[ss:fp - 0x0008:word16] = Mem138[ss:fp - 0x0004:word16]
	Mem148[ss:fp - 0x000A:word16] = Mem145[ss:fp - 0x0006:word16]
	Mem151[ss:fp - 0x000C:word16] = Mem148[ss:fp + 0x0004:word16]
	Mem154[ss:fp - 0x000E:word16] = Mem151[ss:fp + 0x0002:word16]
	Mem157[ss:fp - 0x0010:word16] = Mem154[ds_139:0x29D5:word16]
	Mem160[ss:fp - 0x0012:word16] = Mem157[ds_139:0x29D3:word16]
	selector ds_161
	word16 si_162 = fn0800_3B0A(fp - 0x0002, ds_139, wArg08, wArg0A, out ds_161)
	Mem167[ss:fp - 0x0008:word16] = Mem160[ds_161:0x29D5:word16]
	Mem170[ss:fp - 0x000A:word16] = Mem167[ds_161:0x29D3:word16]
	byte dl_171
	word16 di_172
	selector ds_173
	fn0800_A614(ds_161, ptrArg00, wArg02, out dl_171, out di_172, out ds_173)
	Mem178[ss:fp - 0x0008:word16] = ds_173
	Mem182[ss:fp - 0x000A:word16] = 0x43AD
	fn0800_8F7F(0xAD, ds_173, ptrArg00)
	return si_162
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3BC3_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> di:<invalid> si:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_3C99(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_3C99_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_3C99:
	fn0800_3509(ds, 0x4348, ds)
	Mem28[ss:fp - 0x0072:word16] = ss
	selector es_29 = Mem28[ss:fp - 0x0072:selector]
	word16 di_307 = fp - 0x006C
	word16 si_32 = 0x0A54
	word16 cx_308 = 0xFFFF
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_3CBE:
	branch cx_308 == 0x0000 l0800_3CC0
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CBE_1:
	di_307 = di_307 + 0x0001
	cx_308 = cx_308 - 0x0001
	branch 0x00 == Mem28[es_29:di_307:byte] l0800_3CBE
// DataOut: al bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC0:
	word16 di_52 = di_307 - 0x0001
	word16 cx_54 = 0x000D
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:0x0A54 cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC4:
	branch cx_54 == 0x0000 l0800_3CC6
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3CC6:
	Mem67[ss:fp - 0x0072:word16] = ds
	Mem70[ss:fp - 0x0074:word16] = 0x0A61
	Mem72[ss:fp - 0x0076:word16] = ss
	Mem75[ss:fp - 0x0078:word16] = fp - 0x006C
	word16 di_80
	selector ds_81
	fn0800_4234(fp - 0x0002, si_32, di_52, ds, wArg00, wArg02, wArg04, wArg06, out di_80, out ds_81)
	Mem84[ss:fp - 0x0004:word16] = dx
	Mem85[ss:fp - 0x0006:word16] = fp - 0x006C
	Mem90[ss:fp - 0x0072:word16] = 0x0000
	Mem92[ss:fp - 0x0074:word16] = 0x0000
	Mem94[ss:fp - 0x0076:word16] = 0x0000
	Mem97[ss:fp - 0x0078:word16] = Mem94[ss:fp + 0x0004:word16]
	Mem100[ss:fp - 0x007A:word16] = Mem97[ss:fp + 0x0002:word16]
	selector ds_103
	fn0800_ACB3(ds_81, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_103)
	Mem109[ss:fp - 0x0072:word16] = Mem100[ss:fp + 0x0008:word16]
	Mem112[ss:fp - 0x0074:word16] = Mem109[ss:fp + 0x0006:word16]
	Mem115[ss:fp - 0x0076:word16] = Mem112[ss:fp - 0x0004:word16]
	Mem118[ss:fp - 0x0078:word16] = Mem115[ss:fp - 0x0006:word16]
	Mem121[ss:fp - 0x007A:word16] = Mem118[ss:fp + 0x0004:word16]
	Mem124[ss:fp - 0x007C:word16] = Mem121[ss:fp + 0x0002:word16]
	selector ds_126
	fn0800_3B0A(fp - 0x0002, ds_103, wArg08, wArg0A, out ds_126)
	Mem131[ss:fp - 0x0072:word16] = 0x0000
	ui32 ax_dx_137 = SEQ(Mem131[ss:fp + 0x0008:word16], Mem131[ss:fp + 0x0006:word16] + Mem131[ss:fp + 0x000A:word16]) + Mem131[ss:fp + 0x000A:ui32]
	Mem142[ss:fp - 0x0074:word16] = SLICE(ax_dx_137, word16, 16)
	word16 dx_139 = (word16) ax_dx_137
	Mem144[ss:fp - 0x0076:word16] = dx_139
	Mem147[ss:fp - 0x0078:word16] = Mem144[ss:fp + 0x0004:word16]
	Mem150[ss:fp - 0x007A:word16] = Mem147[ss:fp + 0x0002:word16]
	selector ds_151
	fn0800_ACB3(ds_126, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_151)
	Mem157[ss:fp - 0x0072:word16] = Mem150[ss:fp + 0x0004:word16]
	Mem160[ss:fp - 0x0074:word16] = Mem157[ss:fp + 0x0002:word16]
	selector ds_161
	word16 ax_162 = fn0800_4194(ds_151, wArg00, wArg02, out ds_161)
	ui32 bx_cx_169 = SEQ(Mem160[ss:fp + 0x0008:word16], Mem160[ss:fp + 0x0006:word16] + Mem160[ss:fp + 0x000A:word16]) + Mem160[ss:fp + 0x000A:ui32]
	ui32 dx_ax_174 = SEQ(dx_139, ax_162 - (word16) bx_cx_169) - bx_cx_169
	word16 dx_176 = SLICE(dx_ax_174, word16, 16)
	Mem179[ss:fp + 0x000C:word16] = dx_176
	word16 ax_175 = (word16) dx_ax_174
	Mem180[ss:fp + 0x000A:word16] = ax_175
	Mem183[ss:fp - 0x0072:word16] = Mem180[ss:fp + 0x000C:word16]
	Mem185[ss:fp - 0x0074:word16] = ax_175
	Mem188[ss:fp - 0x0076:word16] = Mem185[ss:fp - 0x0004:word16]
	Mem191[ss:fp - 0x0078:word16] = Mem188[ss:fp - 0x0006:word16]
	Mem194[ss:fp - 0x007A:word16] = Mem191[ss:fp + 0x0004:word16]
	Mem197[ss:fp - 0x007C:word16] = Mem194[ss:fp + 0x0002:word16]
	selector ds_198
	word16 si_199 = fn0800_3B0A(fp - 0x0002, ds_161, wArg08, wArg0A, out ds_198)
	Mem204[ss:fp - 0x0072:word16] = Mem197[ss:fp - 0x0004:word16]
	Mem207[ss:fp - 0x0074:word16] = Mem204[ss:fp - 0x0006:word16]
	byte dl_208
	word16 di_209
	selector ds_210
	fn0800_A614(ds_198, ptrArg00, wArg02, out dl_208, out di_209, out ds_210)
	Mem216[ss:fp - 0x0072:word16] = Mem207[ds_210:0x29D1:word16]
	Mem219[ss:fp - 0x0074:word16] = Mem216[ds_210:0x29CF:word16]
	byte dl_220
	selector ds_222
	word16 di_221
	fn0800_A614(ds_210, ptrArg00, wArg02, out dl_220, out di_221, out ds_222)
	Mem228[ss:fp - 0x0072:word16] = 0x0180
	Mem230[ss:fp - 0x0074:word16] = ds_222
	Mem233[ss:fp - 0x0076:word16] = 0x4348
	selector ds_234 = fn0800_A4F6(fp - 0x0002, ds_222, wArg00, wArg02, wArg04)
	Mem238[ss:fp - 0x0072:word16] = ds_234
	Mem242[ss:fp - 0x0074:word16] = 0x4348
	fn0800_8F7F(0x48, ds_234, ptrArg00)
	Mem247[ss:fp - 0x0072:word16] = ds_234
	Mem250[ss:fp - 0x0074:word16] = 0x4348
	Mem252[ss:fp - 0x0076:word16] = ss
	Mem256[ss:fp - 0x0078:word16] = fp - 0x006C
	branch fn0800_BA4A((byte) (fp - 0x006C), ds_234, ptrArg00, ptrArg04) != 0xFFFF l0800_3DB2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3DA3:
	Mem291[ss:fp - 0x0072:word16] = ss
	Mem294[ss:fp - 0x0074:word16] = fp - 0x006C
	Mem297[ss:fp - 0x0076:word16] = 0x000A
	fn0800_0D24(ds_234, wArg00, ptrArg02, wArg04, out si_199, out di_221, out ds_234)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_3DB2:
	Mem268[ss:fp - 0x0072:word16] = ds_234
	Mem271[ss:fp - 0x0074:word16] = 0x0A65
	Mem273[ss:fp - 0x0076:word16] = ds_234
	Mem276[ss:fp - 0x0078:word16] = 0x4348
	word16 di_277
	selector ds_278
	fn0800_4234(fp - 0x0002, si_199, di_221, ds_234, wArg00, wArg02, wArg04, wArg06, out di_277, out ds_278)
	Mem282[ds_278:0x29D1:word16] = dx_176
	Mem283[ds_278:0x29CF:word16] = 0x4348
	return ds_278
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_3C99_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> al:<invalid> cl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -124(fp):<invalid> -122(fp):<invalid> -120(fp):<invalid> -118(fp):<invalid> -116(fp):<invalid> -114(fp):<invalid> -112(fp):di -110(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

l0800_3CC4_2:
	Mem61[es_29:di_52:byte] = Mem28[ds:si_32:byte]
	si_32 = si_32 + 0x0001
	di_52 = di_52 + 0x0001
	cx_54 = cx_54 - 0x0001
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> bx:<invalid> al:<invalid> -120(fp):fp - 0x006C -118(fp):ss -116(fp):0x4348 -114(fp):<invalid> -112(fp):di -110(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_3DCF(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al ax di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3DCF_entry:
	*diOut = di
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16)

l0800_3DCF:
	word16 ax_105
	word16 v10_16 = Mem0[ptrArg02:word16] - 0x0001
	Mem17[ptrArg02:word16] = v10_16
	branch v10_16 < 0x0000 l0800_3DF3
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DF3:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_105 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DDE:
	word16 ax_84 = Mem17[ptrArg02 + 0x000E:word16]
	Mem87[ptrArg02 + 0x000C:word16] = Mem17[ptrArg02 + 0x000C:word16] + 0x0001
	ax_105 = DPB(ax_84, 0x00, 8) (alias)
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3DFF:
	branch ax_105 != 0xFFFF l0800_3E1F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3E07:
	word16 dx_66
	segptr32 ptrLoc0A_74 = DPB(ptrLoc0A, fn0800_4271(ds, wArg02, wArg04, out dx_66), 0)
	word16 si_78
	word16 di_79
	selector ds_80
	fn0800_0D24(ds, 0x0008, ptrLoc0A_74, dx_66, out si_78, out di_79, out ds_80)
	ax_105 = 0x0008
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_3E1F:
	return DPB(ax_105, Mem17[ss:fp - 0x0004:byte], 0)
// DataOut: al ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3DCF_exit:
// DataOut: al ax di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E27(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E27_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E27:
	word16 di_19
	selector ds_20
	Mem26[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_19, out ds_20), 0x00, 8)
	Mem30[ss:fp - 0x0008:word16] = Mem26[ss:fp + 0x0004:word16]
	Mem33[ss:fp - 0x000A:word16] = Mem30[ss:fp + 0x0002:word16]
	word16 di_35
	selector ds_36
	Mem41[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(ds_20, ptrArg00, wArg02, out di_35, out ds_36), 0x00, 8)
	return (Mem41[ss:fp - 0x0004:word16] << 0x08) + Mem41[ss:fp - 0x0006:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E27_exit:
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3E5D(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3E5D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3E5D:
	word16 si_17
	word16 di_18
	selector ds_19
	word16 ax_20 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out si_17, out di_18, out ds_19)
	Mem23[ss:fp - 0x0004:word16] = 0x0000
	Mem25[ss:fp - 0x0006:word16] = ax_20
	Mem28[ss:fp - 0x000C:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem31[ss:fp - 0x000E:word16] = Mem28[ss:fp + 0x0002:word16]
	word16 si_33
	word16 di_34
	selector ds_35
	word16 ax_36 = fn0800_3E27(fp - 0x0002, ds_19, wArg00, wArg02, out si_33, out di_34, out ds_35)
	Mem38[ss:fp - 0x0008:word16] = 0x0000
	Mem39[ss:fp - 0x000A:word16] = ax_36
	return Mem39[ss:fp - 0x0006:word16] + (Mem39[ss:fp - 0x000A:word16] <u 0x0000)
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3E5D_exit:
// DataOut: ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3E9A(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_3E9A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16)

l0800_3E9A:
	word16 ax_110
	word16 v10_16 = Mem0[ptrArg02:word16] - 0x0001
	Mem17[ptrArg02:word16] = v10_16
	branch v10_16 < 0x0000 l0800_3EBE
// DataOut: bp bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3EBE:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_110 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3EA9:
	word16 ax_102 = Mem17[ptrArg02 + 0x000E:word16]
	Mem105[ptrArg02 + 0x000C:word16] = Mem17[ptrArg02 + 0x000C:word16] + 0x0001
	ax_110 = DPB(ax_102, 0x00, 8) (alias)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3ECA:
	branch ax_110 != 0xFFFF l0800_3EEA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0002(16) Stack +0004(16)

l0800_3ED2:
	word16 dx_84
	segptr32 ptrLoc0A_92 = DPB(ptrLoc0A, fn0800_4271(ds, wArg02, wArg04, out dx_84), 0)
	word16 si_96
	word16 di_97
	fn0800_0D24(ds, 0x0008, ptrLoc0A_92, dx_84, out si_96, out di_97, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_3EEA:
	Mem47[ss:fp - 0x0008:word16] = 0x0001
	Mem52[ss:fp - 0x000A:word16] = 0xFFFF
	Mem54[ss:fp - 0x000C:word16] = 0xFFFF
	Mem57[ss:fp - 0x000E:word16] = Mem54[ss:fp + 0x0004:word16]
	Mem60[ss:fp - 0x0010:word16] = Mem57[ss:fp + 0x0002:word16]
	selector ds_66
	return DPB(fn0800_ACB3(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_66), Mem60[ss:fp - 0x0004:byte], 0)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -12(fp):0x0008 -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_3E9A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> cl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F0A(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F0A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F0A:
	word16 di_19
	selector ds_20
	Mem26[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_19, out ds_20), 0x00, 8)
	Mem30[ss:fp - 0x0008:word16] = Mem26[ss:fp + 0x0004:word16]
	Mem33[ss:fp - 0x000A:word16] = Mem30[ss:fp + 0x0002:word16]
	word16 di_35
	selector ds_36
	Mem42[ss:fp - 0x0006:word16] = DPB(fn0800_3DCF(ds_20, ptrArg00, wArg02, out di_35, out ds_36), 0x00, 8)
	Mem45[ss:fp - 0x0008:word16] = 0x0001
	Mem49[ss:fp - 0x000A:word16] = 0xFFFF
	Mem51[ss:fp - 0x000C:word16] = 0xFFFE
	Mem54[ss:fp - 0x000E:word16] = Mem51[ss:fp + 0x0004:word16]
	Mem57[ss:fp - 0x0010:word16] = Mem54[ss:fp + 0x0002:word16]
	selector ds_60
	fn0800_ACB3(ds_36, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_60)
	return (Mem57[ss:fp - 0x0004:word16] << 0x08) + Mem57[ss:fp - 0x0006:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F0A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> ax:<invalid> dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0xFFFE -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_3F58(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3F58_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3F58:
	word16 si_17
	word16 di_18
	selector ds_19
	word16 ax_20 = fn0800_3E27(fp - 0x0002, ds, wArg02, wArg04, out si_17, out di_18, out ds_19)
	Mem23[ss:fp - 0x0004:word16] = 0x0000
	Mem25[ss:fp - 0x0006:word16] = ax_20
	Mem28[ss:fp - 0x000C:word16] = Mem25[ss:fp + 0x0004:word16]
	Mem31[ss:fp - 0x000E:word16] = Mem28[ss:fp + 0x0002:word16]
	word16 si_33
	word16 di_34
	selector ds_35
	word16 ax_36 = fn0800_3E27(fp - 0x0002, ds_19, wArg00, wArg02, out si_33, out di_34, out ds_35)
	Mem39[ss:fp - 0x0008:word16] = 0x0000
	Mem40[ss:fp - 0x000A:word16] = ax_36
	Mem43[ss:fp - 0x000C:word16] = 0x0001
	Mem47[ss:fp - 0x000E:word16] = 0xFFFF
	Mem49[ss:fp - 0x0010:word16] = 0xFFFC
	Mem52[ss:fp - 0x0012:word16] = Mem49[ss:fp + 0x0004:word16]
	Mem55[ss:fp - 0x0014:word16] = Mem52[ss:fp + 0x0002:word16]
	selector ds_59
	fn0800_ACB3(ds_35, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_59)
	return Mem55[ss:fp - 0x0006:word16] + Mem55[ss:fp - 0x0008:word16] + (Mem55[ss:fp - 0x000A:word16] <u 0x0000)
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3F58_exit:
// DataOut: di ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):0xFFFC -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_3FAD(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_3FAD_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_3FAD:
	word16 di_19
	selector ds_20
	Mem26[ss:fp - 0x0004:word16] = DPB(fn0800_3DCF(ds, DPB(ptrLoc0A, wArg02, 0), wArg04, out di_19, out ds_20), 0x00, 8)
	Mem30[ss:fp - 0x0008:word16] = Mem26[ss:fp + 0x0004:word16]
	Mem33[ss:fp - 0x000A:word16] = Mem30[ss:fp + 0x0002:word16]
	word16 di_35
	selector ds_36
	word16 ax_40 = DPB(fn0800_3DCF(ds_20, ptrArg00, wArg02, out di_35, out ds_36), 0x00, 8)
	Mem41[ss:fp - 0x0006:word16] = ax_40
	return (ax_40 << 0x08) + Mem41[ss:fp - 0x0004:word16]
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_3FAD_exit:
// DataOut: ax di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ah:<invalid> cl:0x08 ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_401E(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_401E_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_401E:
	selector ds_25
	fn0800_4047(ds, (byte) (wArg02 >>u 0x08), DPB(ptrLoc06, wArg04, 0), wArg06, out ds_25)
	Mem33[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem36[ss:fp - 0x0006:word16] = Mem33[ss:fp + 0x0004:word16]
	Mem40[ss:fp - 0x0008:word16] = DPB(wArg02 >>u 0x08, Mem36[ss:fp + 0x0002:byte], 0)
	selector ds_43
	fn0800_4047(ds_25, bArg00, ptrArg02, wArg04, out ds_43)
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_401E_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4047(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_4047_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_4047:
	word16 ax_111
	word16 v10_18 = Mem0[ptrArg04:word16] + 0x0001
	Mem19[ptrArg04:word16] = v10_18
	branch v10_18 >= 0x0000 l0800_406F
// DataOut: bx cl cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_406F:
	ptrLoc08 = DPB(ptrLoc08, wArg04, 0) (alias)
	ax_111 = fn0800_B30A(ds, bArg02, ptrLoc08, wArg06, out ds)
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4056:
	word16 ax_83 = Mem19[ptrArg04 + 0x000E:word16]
	word16 si_84 = Mem19[ptrArg04 + 0x000C:word16]
	Mem86[ptrArg04 + 0x000C:word16] = Mem19[ptrArg04 + 0x000C:word16] + 0x0001
	Mem90[ax_83:si_84:byte] = bArg02
	ax_111 = DPB(ax_83, 0x00, 8) (alias)
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_407C:
	branch ax_111 != 0xFFFF l0800_4099
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_4081:
	word16 dx_65
	segptr32 ptrLoc08_73 = DPB(ptrLoc08, fn0800_4271(ds, wArg04, wArg06, out dx_65), 0)
	word16 si_77
	selector ds_79
	fn0800_0D24(ds, 0x0009, ptrLoc08_73, dx_65, out si_77, out di, out ds_79)
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -10(fp):cx -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_4099:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_4047_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_409C(word16 bp, selector ds, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_409C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_409C:
	selector ds_19
	fn0800_401E(fp - 0x0002, ds, wArg04, wArg06, wArg08, out ds_19)
	Mem27[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0008:word16]
	Mem30[ss:fp - 0x0006:word16] = Mem27[ss:fp + 0x0006:word16]
	Mem33[ss:fp - 0x0008:word16] = Mem30[ss:fp + 0x0002:word16]
	selector ds_36
	return fn0800_401E(fp - 0x0002, ds_19, wArg00, wArg02, wArg04, out ds_36)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_409C_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_40BF(word16 bp, selector ds, byte bArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(16) Stack +0006(16)
fn0800_40BF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16)

l0800_40BF:
	selector ds_27
	fn0800_4047(ds, bArg02 & 0xFF, DPB(ptrLoc06, wArg04, 0), wArg06, out ds_27)
	Mem34[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0006:word16]
	Mem37[ss:fp - 0x0006:word16] = Mem34[ss:fp + 0x0004:word16]
	word16 ax_38 = Mem37[ss:fp + 0x0002:word16]
	Mem47[ss:fp - 0x0008:word16] = DPB(ax_38 >>u 0x08, (byte) (ax_38 >>u 0x08) & 0xFF, 0)
	selector ds_50
	return fn0800_4047(ds_27, bArg00, ptrArg02, wArg04, out ds_50)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_40BF_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ax:<invalid> cl:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4110(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4110_entry:
	*diOut = di
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4110:
	selector ds_30
	word16 ax_31 = fn0800_ABA3(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_30)
	branch 0x0000 != wArg08 l0800_4138
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4133:
	branch ax_31 == wArg06 l0800_4150
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +000A(16) Stack +000C(16)

l0800_4138:
	word16 dx_63
	segptr32 ptrLoc06_72 = DPB(ptrLoc06, fn0800_4271(ds_30, wArg0A, wArg0C, out dx_63), 0)
	word16 di_77
	selector ds_78
	fn0800_0D24(ds_30, 0x0008, ptrLoc06_72, dx_63, out si, out di_77, out ds_78)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4150:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4110_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4152(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_4152_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_4152:
	selector ds_30
	word16 ax_31 = fn0800_AD85(fp - 0x0002, ds, wArg02, wArg04, 0x0001, wArg06, wArg0A, wArg0C, out ds_30)
	branch 0x0000 != wArg08 l0800_417A
// DataOut: ax ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0006(16) Stack +000A(16) Stack +000C(16)

l0800_4175:
	branch ax_31 == wArg06 l0800_4192
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +000A(16) Stack +000C(16)

l0800_417A:
	word16 dx_62
	segptr32 ptrLoc06_71 = DPB(ptrLoc06, fn0800_4271(ds_30, wArg0A, wArg0C, out dx_62), 0)
	word16 di_76
	selector ds_77
	fn0800_0D24(ds_30, 0x0009, ptrLoc06_71, dx_62, out si, out di_76, out ds_77)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> di:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4192:
	return si
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4152_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4194(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4194_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0010(16) Stack +0002(16) Stack +0004(16)

l0800_4194:
	word16 ax_19 = fn0800_AD2F(ds, DPB(ptrLoc0E, wArg02, 0), wArg04)
	selector ds_42
	fn0800_ACB3(ds, DPB(ptrLoc14, wArg02, 0), wArg04, 0x0000, 0x0000, 0x0002, out ds_42)
	word16 ax_53 = fn0800_AD2F(ds_42, DPB(ptrLoc0E, wArg02, 0), wArg04)
	selector ds_75
	fn0800_ACB3(ds_42, DPB(ptrLoc14, wArg02, 0), wArg04, ax_19, dx, 0x0000, out ds_75)
	return ax_53
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4194_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4234(word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_4234_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_4234:
	word16 dx_27
	word16 di_29
	selector ds_30
	word16 si_28
	word16 ax_31 = fn0800_AA7E(si, di, ds, wArg02, wArg04, wArg06, wArg08, out dx_27, out si_28, out di_29, out ds_30)
	Mem33[ss:fp - 0x0004:word16] = dx_27
	Mem35[ss:fp - 0x0006:word16] = ax_31
	branch (ax_31 | Mem35[ss:fp - 0x0004:word16]) != 0x0000 l0800_4267
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4257:
	Mem55[ss:fp - 0x0008:word16] = Mem35[ss:fp + 0x0004:word16]
	Mem58[ss:fp - 0x000A:word16] = Mem55[ss:fp + 0x0002:word16]
	Mem61[ss:fp - 0x000C:word16] = 0x0007
	word16 di_65
	selector ds_66
	fn0800_0D24(ds_30, wArg00, ptrArg02, wArg04, out si_28, out di_65, out ds_66)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4267:
	return si_28
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4234_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> ah:<invalid> si:<invalid> cx:<invalid> al:<invalid> cl:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4271(selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax dh dl dx eax edx rax rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4271_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4271:
	branch wArg04 != Mem0[ds:0x29E5:word16] l0800_428D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4280:
	branch wArg02 != Mem0[ds:0x29E3:word16] l0800_428D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_428D:
	branch wArg04 != Mem0[ds:0x29E1:word16] l0800_42A6
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_4299:
	branch wArg02 != Mem0[ds:0x29DF:word16] l0800_42A6
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42A6:
	branch wArg04 != Mem0[ds:0x29D1:word16] l0800_42BF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42B2:
	branch wArg02 != Mem0[ds:0x29CF:word16] l0800_42BF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42BF:
	branch wArg04 != Mem0[ds:0x29DD:word16] l0800_42D8
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42CB:
	branch wArg02 != Mem0[ds:0x29DB:word16] l0800_42D8
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42D8:
	branch wArg04 != Mem0[ds:0x29D9:word16] l0800_42F1
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42E4:
	branch wArg02 != Mem0[ds:0x29D7:word16] l0800_42F1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(16) Stack +0004(16)

l0800_42F1:
	branch wArg04 != Mem0[ds:0x29D5:word16] l0800_430A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42FD:
	branch wArg02 != Mem0[ds:0x29D3:word16] l0800_430A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_430A:
	return 0x0A60
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4303:
	return 0x43AD
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42EA:
	return 0x4412
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42D1:
	return 0x4477
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_42B8:
	return 0x4348
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_429F:
	return 0x44DC
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_4286:
	return 0x4541
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_4271_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:ds -2(fp):bp



word16 fn0800_4311(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4311_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4311:
	word16 dx_17
	word16 bx_18
	word16 bp_19
	selector ds_21
	word16 si_20
	word16 ax_22 = fn0800_9F89(fp - 0x0002, ds, wArg02, wArg04, out dx_17, out bx_18, out bp_19, out si_20, out ds_21)
	Mem24[ss:bp_19 - 0x0002:word16] = dx_17
	Mem26[ss:bp_19 - 0x0004:word16] = ax_22
	branch (ax_22 | dx_17) != 0x0000 l0800_433C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_432D:
	Mem45[ss:fp - 0x0008:word16] = ds_21
	Mem48[ss:fp - 0x000A:word16] = 0x0A6C
	Mem51[ss:fp - 0x000C:word16] = 0x0006
	word16 di_55
	selector ds_56
	fn0800_0D24(ds_21, wArg00, ptrArg02, wArg04, out si_20, out di_55, out ds_56)
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

l0800_433C:
	return si_20
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp

fn0800_4311_exit:
// DataOut: ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> al:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -12(fp):0x0006 -10(fp):<invalid> -8(fp):<invalid> -6(fp):ax -4(fp):dx -2(fp):bp



byte fn0800_4346(selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_4346_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_4346:
	selector ds_15
	return fn0800_9E75(ds, wArg04, out ds_15)
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_4346_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4357(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_4357_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_4357:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43B9:
	branch Mem0[ptrArg06:byte] != 0x00 l0800_435C
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_435C:
	byte al_59 = Mem0[ptrArg06:byte]
	word16 ax_61 = (int16) al_59
	branch ax_61 == 0x002A l0800_4379
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4379:
	branch Mem0[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4382:
	branch Mem0[ptrArg02:byte] != 0x00 l0800_4376
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4376:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4388:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_436A:
	branch ax_61 == 0x002E l0800_439E
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_439E:
	branch Mem0[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_436F:
	branch ax_61 == 0x003F l0800_438A
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_438A:
	branch Mem0[ptrArg02:byte] == 0x2E l0800_43B6
// DataOut: bx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(16) Stack +0006(32)

l0800_4393:
	branch Mem0[ptrArg02:byte] == 0x00 l0800_43B6
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(16) Stack +0006(32)

l0800_4399:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_4374:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43A7:
	branch al_59 == Mem0[ptrArg02:byte] l0800_43B3
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(16) Stack +0006(32)

l0800_43B3:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43B6:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>
// LocalsOut: Stack +0002(32) Stack +0006(32)

l0800_43AF:
	return 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43C2:
	word16 ax_45
	branch Mem0[ptrArg02:byte] != 0x00 l0800_43D0
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D0:
	ax_45 = 0x0000
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43CB:
	ax_45 = 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> dl:<invalid> ax:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

l0800_43D2:
	return ax_45
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>

fn0800_4357_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dl:<invalid> -2(fp):bp 2(fp):<invalid> 6(fp):<invalid>



void fn0800_43D4(word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx es rax rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_43D4_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_43D4:
	word16 cx_10 = wArg06
	word16 si_17 = wArg02 + (word16) (wArg06 *s 0x000C)
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_440F:
	si_17 = si_17 - 0x000C
	cx_10 = cx_10 - 0x0001
	branch cx_10 != 0x0000 l0800_43E9
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_43E9:
	Mem36[psegArg04:si_17 + 0x0002:word16] = 0x0000
	Mem37[psegArg04:si_17:word16] = 0x0000
	Mem38[psegArg04:si_17 + 0x0004:word16] = 0xFFFF
	Mem39[psegArg04:si_17 + 0x0008:word16] = 0x0000
	Mem40[psegArg04:si_17 + 0x0006:word16] = 0x0000
	Mem41[psegArg04:si_17 + 0x000A:word16] = 0x0000
// DataOut: cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_4419:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp

fn0800_43D4_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> es:<invalid> -4(fp):si -2(fp):bp



void fn0800_441C(selector ds, segptr32 ptrArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_441C_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_441C:
	word16 di_13 = 0x0000
	word16 cx_14 = 0x0000
	word16 si_20 = wArg02
	branch 0x0000 >=u wArg06 l0800_4452
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4439:
	branch (Mem0[psegArg04:si_20:word16] | Mem0[psegArg04:si_20 + 0x0002:word16]) == 0x0000 l0800_4449
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4445:
	di_13 = di_13 + 0x0001
	wLoc04 = cx_14
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4449:
	si_20 = si_20 + 0x000C
	cx_14 = cx_14 + 0x0001
	branch cx_14 <u wArg06 l0800_4439
// DataOut: bp cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4452:
	branch di_13 != 0x0000 l0800_4459
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4459:
	branch di_13 == 0x0001 l0800_4461
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4461:
	selector es_229 = SLICE(ptrArg02, selector, 16)
	word16 bx_231 = (word16) ptrArg02 + (word16) (wLoc04 *s 0x000C)
	Mem234[es_229:bx_231 + 0x000A:word16] = Mem0[es_229:bx_231 + 0x000A:word16] + 0x0001
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_445E:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_4525:
	branch fn0800_463B(ds, wArg02, psegArg04, wArg06) == 0x0000 l0800_453B
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_453B:
	fn0800_4550(fp - 0x0002)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_4538:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4478:
	word16 ax_113 = (word16) (Mem0[ds:0x4658:word16] *s 0x000C)
	word16 ax_129 = (word16) (Mem0[ds:0x465A:word16] *s 0x000C)
	selector es_117 = SLICE(ptrArg02, selector, 16)
	word16 bx_119 = (word16) ptrArg02 + ax_113
	word16 bx_132 = wArg02 + ax_129
	word16 ax_120 = Mem0[es_117:bx_119 + 0x0002:word16]
	word16 v23_135 = Mem0[es_117:bx_132:word16] + Mem0[es_117:bx_119:word16]
	Mem136[es_117:bx_132:word16] = v23_135
	Mem143[es_117:bx_132 + 0x0002:word16] = Mem136[es_117:bx_132 + 0x0002:word16] + ax_120 + (v23_135 <u 0x0000)
	word16 bx_145 = wArg02 + ax_113
	Mem146[es_117:bx_145 + 0x0002:word16] = 0x0000
	Mem147[es_117:bx_145:word16] = 0x0000
	word16 bx_149 = wArg02 + ax_129
	Mem152[es_117:bx_149 + 0x000A:word16] = Mem147[es_117:bx_149 + 0x000A:word16] + 0x0001
	word16 cx_114 = ax_113
	word16 dx_130 = ax_129
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> Sequence es:bx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_44DD:
	selector es_159 = SLICE(ptrArg02, selector, 16)
	word16 bx_161 = (word16) ptrArg02 + dx_130
	branch Mem152[es_159:bx_161 + 0x0004:word16] != 0xFFFF l0800_44C3
// DataOut: bp cx ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_44C3:
	word16 ax_200 = Mem152[psegArg04:bx_161 + 0x0004:word16]
	Mem201[ds:0x465A:word16] = ax_200
	word16 ax_204 = (word16) (ax_200 *s 0x000C)
	word16 bx_208 = wArg02 + ax_204
	Mem211[psegArg04:bx_208 + 0x000A:word16] = Mem201[psegArg04:bx_208 + 0x000A:word16] + 0x0001
	dx_130 = ax_204
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_44EB:
	Mem167[es_159:bx_161 + 0x0004:word16] = Mem152[ds:0x4658:word16]
	word16 bx_169 = wArg02 + ax_113
	Mem172[es_159:bx_169 + 0x000A:word16] = Mem167[es_159:bx_169 + 0x000A:word16] + 0x0001
// DataOut: bp cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4517:
	word16 bx_182 = (word16) ptrArg02 + cx_114
	branch Mem172[SLICE(ptrArg02, selector, 16):bx_182 + 0x0004:word16] != 0xFFFF l0800_44FD
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_44FD:
	word16 ax_187 = Mem172[psegArg04:bx_182 + 0x0004:word16]
	Mem188[ds:0x4658:word16] = ax_187
	word16 ax_191 = (word16) (ax_187 *s 0x000C)
	word16 bx_194 = wArg02 + ax_191
	Mem197[psegArg04:bx_194 + 0x000A:word16] = Mem188[psegArg04:bx_194 + 0x000A:word16] + 0x0001
	cx_114 = ax_191
// DataOut: bp cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16)

l0800_4456:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:0x0000 es:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_454A:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> Sequence es:bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_441C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> cx:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



void fn0800_4550(word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_4550_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4550:
	word16 bp_102 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_45D6:
	branch Mem0[ss:bp_102 - 0x000A:word16] <=u 0x0010 l0800_4573
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4573:
	word16 di_104 = 0x0000
	word16 si_103 = Mem0[ss:bp_102 + 0x0004:word16]
	branch 0x0000 >=u Mem0[ss:bp_102 + 0x0008:word16] l0800_45C3
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_457D:
	branch Mem0[Mem0[ss:bp_102 + 0x0006:selector]:si_103 + 0x000A:word16] != Mem0[ss:bp_102 - 0x000A:word16] l0800_45BA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4589:
	Mem88[ss:fp - 0x0012:word16] = Mem0[ss:bp_102 - 0x000A:word16]
	Mem91[ss:fp - 0x0014:word16] = Mem88[ss:bp_102 - 0x0006:word16]
	Mem94[ss:fp - 0x0016:word16] = Mem91[ss:bp_102 - 0x0008:word16]
	Mem97[ss:fp - 0x0018:word16] = Mem94[ss:bp_102 - 0x0002:word16]
	Mem100[ss:fp - 0x001A:word16] = Mem97[ss:bp_102 - 0x0004:word16]
	word16 dx_101
	word16 ax_105 = fn0800_8BC2(bp_102, si_103, di_104, bp, out dx_101, out bp_102, out si_103, out di_104)
	Mem108[ss:fp - 0x0014:word16] = dx_101
	Mem110[ss:fp - 0x0016:word16] = ax_105
	word16 dx_114
	word16 ax_115 = fn0800_45E2(wArg00, wArg02, wArg04, out dx_114)
	selector es_117 = Mem110[ss:bp_102 + 0x0006:selector]
	Mem118[es_117:si_103 + 0x0008:word16] = dx_114
	Mem119[es_117:si_103 + 0x0006:word16] = ax_115
	word16 ax_120 = Mem119[ss:bp_102 - 0x0006:word16]
	word16 v20_122 = Mem119[ss:bp_102 - 0x0004:word16] + Mem119[ss:bp_102 - 0x0008:word16]
	Mem123[ss:bp_102 - 0x0004:word16] = v20_122
	Mem127[ss:bp_102 - 0x0002:word16] = Mem123[ss:bp_102 - 0x0002:word16] + ax_120 + (v20_122 <u 0x0000)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45BA:
	si_103 = si_103 + 0x000C
	di_104 = di_104 + 0x0001
	branch di_104 <u Mem0[ss:bp_102 + 0x0008:word16] l0800_457D
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45C3:
	Mem54[ss:bp_102 - 0x000A:word16] = Mem0[ss:bp_102 - 0x000A:word16] + 0x0001
	word16 ax_55 = Mem54[ss:bp_102 - 0x0006:word16]
	word16 dx_61 = __rcr(Mem54[ss:bp_102 - 0x0008:word16], 0x01, cond(ax_55 >>u 0x0001))
	Mem63[ss:bp_102 - 0x0006:word16] = ax_55 >>u 0x0001
	Mem64[ss:bp_102 - 0x0008:word16] = dx_61
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> es:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_45DC:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_4550_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> bx:<invalid> -26(fp):0x0000 -24(fp):0x0000 -22(fp):0x0000 -20(fp):0x8000 -18(fp):0x0001 -16(fp):di -14(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_45E2(word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_45E2_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_45E2:
	word16 bx_15 = wArg06
	word16 wLoc04_10 = 0x0000
	word16 wLoc06_11 = 0x0000
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_462A:
	bx_15 = bx_15 - 0x0001
	branch bx_15 != 0x0000 l0800_45F7
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_45F7:
	word16 dx_36 = wLoc06_11 << 0x0001
	word16 ax_40 = __rcl(wLoc04_10, 0x01, cond(dx_36))
	wLoc06_11 = dx_36
	branch (wArg02 & 0x0001) == 0x0000 l0800_461A
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4612:
	wLoc06_11 = dx_36 | 0x0001
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_461A:
	word16 ax_54 = wArg04 >>u 0x0001
	wLoc04_10 = ax_40
	wArg04 = ax_54
	wArg02 = __rcr(wArg02, 0x01, cond(ax_54))
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_4631:
	word16 dx_28
	*dxOut = wLoc04_10
	return wLoc06_11
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_45E2_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_463B(selector ds, word16 wArg02, selector psegArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx es rax rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_463B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_463B:
	word16 wLoc0C_102 = 0xFFFF
	word16 wLoc0E_103 = 0xFFFF
	word16 wLoc08_105 = 0xFFFF
	word16 wLoc0A_106 = 0xFFFF
	word16 cx_111 = 0x0000
	word16 si_110 = wArg02 + 0x0002
	branch 0x0000 >=u wArg06 l0800_46D5
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4661:
	word16 ax_93 = Mem0[psegArg04:si_110 + 0x0000:word16]
	word16 dx_94 = Mem0[psegArg04:si_110:word16]
	branch (dx_94 | ax_93) == 0x0000 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4675:
	branch ax_93 >u wLoc08_105 l0800_46AB
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4680:
	branch ax_93 <u wLoc08_105 l0800_4687
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4682:
	branch dx_94 >=u wLoc0A_106 l0800_46AB
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46AB:
	branch ax_93 >u wLoc0C_102 l0800_46CD
// DataOut: cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B6:
	branch ax_93 <u wLoc0C_102 l0800_46BD
// DataOut: cx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46B8:
	branch dx_94 >=u wLoc0E_103 l0800_46CD
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46BD:
	Mem134[ds:0x4658:word16] = cx_111
	wLoc0C_102 = ax_93
	wLoc0E_103 = dx_94
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_4687:
	Mem145[ds:0x4658:word16] = Mem0[ds:0x465A:word16]
	Mem150[ds:0x465A:word16] = cx_111
	wLoc0C_102 = wLoc08_105
	wLoc0E_103 = wLoc0A_106
	wLoc08_105 = ax_93
	wLoc0A_106 = dx_94
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46CD:
	si_110 = si_110 + 0x000C
	cx_111 = cx_111 + 0x0001
	branch cx_111 <u wArg06 l0800_4661
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000A(0) Local -000C(0) Local -000E(0) Stack +0004(16)

l0800_46D5:
	branch wLoc08_105 != 0xFFFF l0800_46E1
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(0) Local -000E(0)

l0800_46DB:
	branch wLoc0A_106 == 0xFFFF l0800_46ED
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(0) Local -000E(0)

l0800_46E1:
	branch wLoc0C_102 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000E(0)

l0800_46E7:
	branch wLoc0E_103 != 0xFFFF l0800_46F5
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_46F5:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_46ED:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0012 bp:fp - 0x0002 di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_463B_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> dx:<invalid> cx:<invalid> si:si es:<invalid> -18(fp):di -16(fp):si -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_46FE(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_46FE_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_46FE:
	branch Mem0[ds:0x2A05:word16] >u 0x0000 l0800_471F
// DataOut: bp ds ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_470D:
	branch Mem0[ds:0x2A05:word16] <u 0x0000 l0800_4716
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_470F:
	branch Mem0[ds:0x2A03:word16] >=u 0x002A l0800_471F
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_471F:
	selector ds_63
	fn0800_ACB3(ds, DPB(ptrLoc30, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], 0x0028, 0x0000, 0x0000, out ds_63)
	word16 si_73
	word16 di_74
	selector ds_75
	word16 ax_76 = fn0800_3FAD(fp - 0x0002, ds_63, Mem0[ds_63:0x29E3:word16], Mem0[ds_63:0x29E5:word16], out si_73, out di_74, out ds_75)
	branch 0x0000 <u Mem0[ds_75:0x2A05:word16] l0800_4761
// DataOut: ax bp di ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4750:
	branch 0x0000 >u Mem0[ds_75:0x2A05:word16] l0800_4758
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4752:
	branch ax_76 + 0x0024 <=u Mem0[ds_75:0x2A03:word16] l0800_4761
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4761:
	Mem93[ss:fp - 0x0028:word16] = 0x0000
	Mem101[ss:fp - 0x002A:word16] = 0x0000
	Mem103[ss:fp - 0x002C:word16] = ax_76 + 0x0020
	Mem106[ss:fp - 0x002E:word16] = Mem103[ds_75:0x29E5:word16]
	Mem109[ss:fp - 0x0030:word16] = Mem106[ds_75:0x29E3:word16]
	selector ds_115
	word16 ax_116 = fn0800_ACB3(ds_75, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_115)
	Mem121[ss:fp - 0x0028:word16] = Mem109[ds_115:0x29E5:word16]
	Mem124[ss:fp - 0x002A:word16] = Mem121[ds_115:0x29E3:word16]
	word16 si_126
	word16 di_127
	selector ds_128
	word16 dx_133
	word16 ax_134 = fn0800_8CAA(ax_116, 0x08, fn0800_3F58(fp - 0x0002, ds_115, wArg00, wArg02, out si_126, out di_127, out ds_128), bp, out dx_133)
	branch dx_133 != 0x0052 l0800_4798
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4793:
	branch ax_134 == 0x4E43 l0800_47A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47A1:
	Mem156[ss:fp - 0x0028:word16] = Mem124[ds_128:0x29E5:word16]
	Mem159[ss:fp - 0x002A:word16] = Mem156[ds_128:0x29E3:word16]
	word16 ax_160 = fn0800_AD2F(ds_128, ptrArg00, wArg02)
	Mem162[ss:fp - 0x0008:word16] = dx_133
	Mem163[ss:fp - 0x000A:word16] = ax_160
	Mem168[ss:fp - 0x0028:word16] = 0x0000
	Mem171[ss:fp - 0x002A:word16] = 0x0000
	Mem173[ss:fp - 0x002C:word16] = 0x0002
	Mem176[ss:fp - 0x002E:word16] = Mem173[ds_128:0x29E5:word16]
	Mem179[ss:fp - 0x0030:word16] = Mem176[ds_128:0x29E3:word16]
	selector ds_180
	fn0800_ACB3(ds_128, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_180)
	Mem186[ss:fp - 0x0028:word16] = Mem179[ds_180:0x29E5:word16]
	Mem189[ss:fp - 0x002A:word16] = Mem186[ds_180:0x29E3:word16]
	word16 si_190
	word16 di_191
	selector ds_192
	fn0800_3FAD(fp - 0x0002, ds_180, wArg00, wArg02, out si_190, out di_191, out ds_192)
	Mem199[ss:fp - 0x0028:word16] = Mem189[ds_192:0x29E5:word16]
	Mem202[ss:fp - 0x002A:word16] = Mem199[ds_192:0x29E3:word16]
	word16 si_203
	word16 di_204
	selector ds_205
	Mem208[ss:fp - 0x000C:word16] = fn0800_3FAD(fp - 0x0002, ds_192, wArg00, wArg02, out si_203, out di_204, out ds_205)
	branch di_204 == 0x0000 l0800_47F3
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F0:
	Mem955[ss:fp - 0x000C:word16] = Mem208[ss:fp - 0x000C:word16] - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_47F3:
	word16 dx_218
	word16 ax_220 = fn0800_8C69(Mem208[ss:fp - 0x000C:word16], 0x09, 0x0000, bp, out dx_218) + di_204
	Mem224[ss:fp - 0x0004:word16] = dx_218 + (ax_220 <u 0x0000)
	Mem225[ss:fp - 0x0006:word16] = ax_220
	Mem230[ss:fp - 0x0028:word16] = 0x0000
	Mem233[ss:fp - 0x002A:word16] = 0x0000
	Mem235[ss:fp - 0x002C:word16] = 0x0016
	Mem238[ss:fp - 0x002E:word16] = Mem235[ds_205:0x29E5:word16]
	Mem241[ss:fp - 0x0030:word16] = Mem238[ds_205:0x29E3:word16]
	selector ds_242
	fn0800_ACB3(ds_205, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_242)
	Mem248[ss:fp - 0x0028:word16] = Mem241[ds_242:0x29E5:word16]
	Mem251[ss:fp - 0x002A:word16] = Mem248[ds_242:0x29E3:word16]
	word16 si_252
	word16 di_253
	selector ds_254
	fn0800_3FAD(fp - 0x0002, ds_242, wArg00, wArg02, out si_252, out di_253, out ds_254)
	Mem260[ss:fp - 0x0028:word16] = Mem251[ds_254:0x29E5:word16]
	Mem263[ss:fp - 0x002A:word16] = Mem260[ds_254:0x29E3:word16]
	word16 si_264
	word16 di_265
	selector ds_266
	Mem270[ss:fp - 0x001E:word16] = fn0800_3FAD(fp - 0x0002, ds_254, wArg00, wArg02, out si_264, out di_265, out ds_266)
	Mem273[ss:fp - 0x0028:word16] = Mem270[ds_266:0x29E5:word16]
	Mem276[ss:fp - 0x002A:word16] = Mem273[ds_266:0x29E3:word16]
	word16 si_277
	word16 di_278
	selector ds_279
	Mem283[ss:fp - 0x0020:word16] = fn0800_3FAD(fp - 0x0002, ds_266, wArg00, wArg02, out si_277, out di_278, out ds_279)
	Mem286[ss:fp - 0x0028:word16] = Mem283[ds_279:0x29E5:word16]
	Mem289[ss:fp - 0x002A:word16] = Mem286[ds_279:0x29E3:word16]
	word16 si_290
	word16 di_291
	selector ds_292
	Mem296[ss:fp - 0x0012:word16] = fn0800_3FAD(fp - 0x0002, ds_279, wArg00, wArg02, out si_290, out di_291, out ds_292)
	Mem299[ss:fp - 0x0028:word16] = Mem296[ds_292:0x29E5:word16]
	Mem302[ss:fp - 0x002A:word16] = Mem299[ds_292:0x29E3:word16]
	word16 si_303
	word16 di_304
	selector ds_305
	Mem309[ss:fp - 0x0014:word16] = fn0800_3FAD(fp - 0x0002, ds_292, wArg00, wArg02, out si_303, out di_304, out ds_305)
	Mem312[ss:fp - 0x0028:word16] = Mem309[ds_305:0x29E5:word16]
	Mem315[ss:fp - 0x002A:word16] = Mem312[ds_305:0x29E3:word16]
	word16 si_316
	word16 di_317
	selector ds_318
	Mem322[ss:fp - 0x001A:word16] = fn0800_3FAD(fp - 0x0002, ds_305, wArg00, wArg02, out si_316, out di_317, out ds_318)
	Mem325[ss:fp - 0x0028:word16] = Mem322[ds_318:0x29E5:word16]
	Mem328[ss:fp - 0x002A:word16] = Mem325[ds_318:0x29E3:word16]
	word16 si_329
	word16 di_330
	selector ds_331
	Mem335[ss:fp - 0x001C:word16] = fn0800_3FAD(fp - 0x0002, ds_318, wArg00, wArg02, out si_329, out di_330, out ds_331)
	Mem338[ss:fp - 0x0028:word16] = Mem335[ds_331:0x29E5:word16]
	Mem341[ss:fp - 0x002A:word16] = Mem338[ds_331:0x29E3:word16]
	word16 si_342
	word16 di_343
	selector ds_344
	Mem348[ss:fp - 0x0018:word16] = fn0800_3FAD(fp - 0x0002, ds_331, wArg00, wArg02, out si_342, out di_343, out ds_344)
	Mem351[ss:fp - 0x0028:word16] = Mem348[ds_344:0x29E5:word16]
	Mem354[ss:fp - 0x002A:word16] = Mem351[ds_344:0x29E3:word16]
	word16 si_355
	word16 di_356
	selector ds_357
	Mem361[ss:fp - 0x0016:word16] = fn0800_3FAD(fp - 0x0002, ds_344, wArg00, wArg02, out si_355, out di_356, out ds_357)
	Mem364[ss:fp - 0x0028:word16] = Mem361[ds_357:0x29E1:word16]
	Mem367[ss:fp - 0x002A:word16] = Mem364[ds_357:0x29DF:word16]
	Mem370[ss:fp - 0x002C:word16] = 0x4D5A
	selector ds_371
	fn0800_401E(fp - 0x0002, ds_357, wArg00, wArg02, wArg04, out ds_371)
	Mem376[ss:fp - 0x0028:word16] = Mem370[ds_371:0x29E1:word16]
	Mem379[ss:fp - 0x002A:word16] = Mem376[ds_371:0x29DF:word16]
	Mem384[ss:fp - 0x002C:word16] = 0x0000
	Mem386[ss:fp - 0x002E:word16] = 0x0000
	selector ds_387
	fn0800_409C(fp - 0x0002, ds_371, wArg02, wArg04, wArg06, out ds_387)
	Mem392[ss:fp - 0x0028:word16] = Mem386[ds_387:0x29E1:word16]
	Mem395[ss:fp - 0x002A:word16] = Mem392[ds_387:0x29DF:word16]
	Mem400[ss:fp - 0x002C:word16] = 0x0000
	Mem402[ss:fp - 0x002E:word16] = 0x0000
	selector ds_403
	fn0800_409C(fp - 0x0002, ds_387, wArg02, wArg04, wArg06, out ds_403)
	Mem409[ss:fp - 0x0028:word16] = Mem402[ds_403:0x29E1:word16]
	Mem412[ss:fp - 0x002A:word16] = Mem409[ds_403:0x29DF:word16]
	Mem415[ss:fp - 0x002C:word16] = Mem412[ss:fp - 0x0012:word16]
	selector ds_417
	fn0800_40BF(fp - 0x0002, ds_403, bArg00, wArg02, wArg04, out ds_417)
	Mem423[ss:fp - 0x0028:word16] = Mem415[ds_417:0x29E1:word16]
	Mem426[ss:fp - 0x002A:word16] = Mem423[ds_417:0x29DF:word16]
	Mem429[ss:fp - 0x002C:word16] = Mem426[ss:fp - 0x0014:word16]
	selector ds_430
	fn0800_40BF(fp - 0x0002, ds_417, bArg00, wArg02, wArg04, out ds_430)
	Mem436[ss:fp - 0x0028:word16] = Mem429[ds_430:0x29E1:word16]
	Mem439[ss:fp - 0x002A:word16] = Mem436[ds_430:0x29DF:word16]
	Mem442[ss:fp - 0x002C:word16] = Mem439[ss:fp - 0x0016:word16]
	selector ds_443
	fn0800_40BF(fp - 0x0002, ds_430, bArg00, wArg02, wArg04, out ds_443)
	Mem449[ss:fp - 0x0028:word16] = Mem442[ds_443:0x29E1:word16]
	Mem452[ss:fp - 0x002A:word16] = Mem449[ds_443:0x29DF:word16]
	Mem455[ss:fp - 0x002C:word16] = Mem452[ss:fp - 0x0018:word16]
	selector ds_456
	fn0800_40BF(fp - 0x0002, ds_443, bArg00, wArg02, wArg04, out ds_456)
	Mem461[ss:fp - 0x0028:word16] = Mem455[ds_456:0x29E1:word16]
	Mem464[ss:fp - 0x002A:word16] = Mem461[ds_456:0x29DF:word16]
	Mem469[ss:fp - 0x002C:word16] = 0x0000
	selector ds_470
	fn0800_401E(fp - 0x0002, ds_456, wArg00, wArg02, wArg04, out ds_470)
	Mem476[ss:fp - 0x0028:word16] = Mem469[ds_470:0x29E1:word16]
	Mem479[ss:fp - 0x002A:word16] = Mem476[ds_470:0x29DF:word16]
	Mem482[ss:fp - 0x002C:word16] = Mem479[ss:fp - 0x001A:word16]
	selector ds_483
	fn0800_40BF(fp - 0x0002, ds_470, bArg00, wArg02, wArg04, out ds_483)
	Mem489[ss:fp - 0x0028:word16] = Mem482[ds_483:0x29E1:word16]
	Mem492[ss:fp - 0x002A:word16] = Mem489[ds_483:0x29DF:word16]
	Mem495[ss:fp - 0x002C:word16] = Mem492[ss:fp - 0x001C:word16]
	selector ds_496
	fn0800_40BF(fp - 0x0002, ds_483, bArg00, wArg02, wArg04, out ds_496)
	Mem502[ss:fp - 0x0028:word16] = Mem495[ds_496:0x29E1:word16]
	Mem505[ss:fp - 0x002A:word16] = Mem502[ds_496:0x29DF:word16]
	Mem508[ss:fp - 0x002C:word16] = 0x001E
	selector ds_509
	fn0800_40BF(fp - 0x0002, ds_496, bArg00, wArg02, wArg04, out ds_509)
	Mem515[ss:fp - 0x0028:word16] = Mem508[ds_509:0x29E1:word16]
	Mem518[ss:fp - 0x002A:word16] = Mem515[ds_509:0x29DF:word16]
	Mem521[ss:fp - 0x002C:word16] = Mem518[ss:fp - 0x0020:word16]
	selector ds_522
	fn0800_40BF(fp - 0x0002, ds_509, bArg00, wArg02, wArg04, out ds_522)
	Mem527[ss:fp - 0x0028:word16] = Mem521[ds_522:0x29E1:word16]
	Mem530[ss:fp - 0x002A:word16] = Mem527[ds_522:0x29DF:word16]
	Mem535[ss:fp - 0x002C:word16] = 0x0000
	selector ds_536
	fn0800_401E(fp - 0x0002, ds_522, wArg00, wArg02, wArg04, out ds_536)
	Mem541[ss:fp - 0x0028:word16] = 0x0000
	word16 ax_542 = Mem541[ss:fp - 0x001E:word16]
	Mem548[ss:fp - 0x002A:word16] = 0x0000
	Mem550[ss:fp - 0x002C:word16] = ax_542 + 0x0020
	Mem553[ss:fp - 0x002E:word16] = Mem550[ds_536:0x29E5:word16]
	Mem556[ss:fp - 0x0030:word16] = Mem553[ds_536:0x29E3:word16]
	selector ds_557
	fn0800_ACB3(ds_536, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_557)
	Mem561[ss:fp - 0x000E:word16] = 0x0000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49B5:
	Mem568[ss:fp - 0x0028:word16] = Mem561[ds_557:0x29E5:word16]
	Mem571[ss:fp - 0x002A:word16] = Mem568[ds_557:0x29E3:word16]
	word16 di_572
	word16 ax_577 = DPB(fn0800_3DCF(ds_557, ptrArg00, wArg02, out di_572, out ds_557), 0x00, 8)
	word16 di_579 = ax_577
	branch ax_577 == 0x0000 l0800_4A22
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49CB:
	Mem885[ss:fp - 0x0028:word16] = Mem571[ds_557:0x29E5:word16]
	Mem888[ss:fp - 0x002A:word16] = Mem885[ds_557:0x29E3:word16]
	word16 si_889
	Mem894[ss:fp - 0x0022:word16] = fn0800_3FAD(fp - 0x0002, ds_557, wArg00, wArg02, out si_889, out di_579, out ds_557)
	Mem898[ss:fp - 0x000C:word16] = di_579
	word16 si_895 = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:0x00 cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A15:
	word16 ax_905 = Mem898[ss:fp - 0x000C:word16]
	Mem907[ss:fp - 0x000C:word16] = Mem898[ss:fp - 0x000C:word16] - 0x0001
	branch ax_905 != 0x0000 l0800_49E3
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_49E3:
	Mem917[ss:fp - 0x0028:word16] = Mem907[ds_557:0x29E5:word16]
	Mem920[ss:fp - 0x002A:word16] = Mem917[ds_557:0x29E3:word16]
	word16 di_921
	selector ds_922
	si_895 = si_895 + DPB(fn0800_3DCF(ds_557, ptrArg00, wArg02, out di_921, out ds_922), 0x00, 8)
	Mem931[ss:fp - 0x0028:word16] = Mem920[ds_922:0x29E1:word16]
	Mem934[ss:fp - 0x002A:word16] = Mem931[ds_922:0x29DF:word16]
	Mem936[ss:fp - 0x002C:word16] = si_895
	selector ds_937
	fn0800_40BF(fp - 0x0002, ds_922, bArg00, wArg02, wArg04, out ds_937)
	Mem943[ss:fp - 0x0028:word16] = Mem936[ds_937:0x29E1:word16]
	Mem946[ss:fp - 0x002A:word16] = Mem943[ds_937:0x29DF:word16]
	Mem949[ss:fp - 0x002C:word16] = Mem946[ss:fp - 0x0022:word16]
	di_579 = fn0800_40BF(fp - 0x0002, ds_937, bArg00, wArg02, wArg04, out ds_557)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A1F:
	Mem913[ss:fp - 0x000E:word16] = Mem907[ss:fp - 0x000E:word16] + di_579
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A22:
	branch di_579 != 0x0000 l0800_49B5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A26:
	word16 di_616
	word16 dx_612
	Mem596[ss:fp - 0x0028:word16] = Mem571[ds_557:0x29E1:word16]
	Mem599[ss:fp - 0x002A:word16] = Mem596[ds_557:0x29DF:word16]
	word16 ax_600 = fn0800_AD2F(ds_557, ptrArg00, wArg02)
	branch false l0800_4A56
// DataOut: ax bp ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A38:
	branch false l0800_4A3F
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A3A:
	branch ax_600 >=u 0x0200 l0800_4A56
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A56:
	Mem856[ss:fp - 0x0028:word16] = Mem599[ds_557:0x29E1:word16]
	Mem859[ss:fp - 0x002A:word16] = Mem856[ds_557:0x29DF:word16]
	word16 dx_863 = 0x0010 - fn0800_AD2F(ds_557, ptrArg00, wArg02)
	dx_612 = dx_863 & 0x000F
	di_616 = dx_863 & 0x000F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A3F:
	Mem871[ss:fp - 0x0028:word16] = Mem599[ds_557:0x29E1:word16]
	Mem874[ss:fp - 0x002A:word16] = Mem871[ds_557:0x29DF:word16]
	dx_612 = 0x0200 - fn0800_AD2F(ds_557, ptrArg00, wArg02)
	di_616 = dx_612
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> si:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A81:
	branch di_616 != 0x0000 l0800_4A70
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A70:
	Mem840[ss:fp - 0x0028:word16] = Mem599[ds_557:0x29E1:word16]
	Mem843[ss:fp - 0x002A:word16] = Mem840[ds_557:0x29DF:word16]
	Mem847[ss:fp - 0x002C:word16] = DPB(di_616, 0x00, 0)
	di_616 = fn0800_4047(ds_557, bArg00, ptrArg02, wArg04, out ds_557)
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4A88:
	Mem626[ss:fp - 0x0028:word16] = Mem599[ds_557:0x29E1:word16]
	Mem629[ss:fp - 0x002A:word16] = Mem626[ds_557:0x29DF:word16]
	word16 dx_634
	Mem636[ss:fp - 0x0010:word16] = fn0800_8C8A(fn0800_AD2F(ds_557, ptrArg00, wArg02), 0x04, dx_612, bp, out dx_634)
	Mem641[ss:fp - 0x0028:word16] = 0x0000
	Mem644[ss:fp - 0x002A:word16] = Mem641[ss:fp - 0x0008:word16]
	Mem647[ss:fp - 0x002C:word16] = Mem644[ss:fp - 0x000A:word16]
	Mem650[ss:fp - 0x002E:word16] = Mem647[ds_557:0x29E5:word16]
	Mem653[ss:fp - 0x0030:word16] = Mem650[ds_557:0x29E3:word16]
	selector ds_654
	fn0800_ACB3(ds_557, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_654)
	selector ds_658
	word16 ax_659 = fn0800_5374(fp - 0x0002, ds_654, out ds_658)
	branch ax_659 == 0x0000 l0800_4AC4
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4AC4:
	Mem676[ss:fp - 0x0028:word16] = Mem653[ds_658:0x29E1:word16]
	Mem679[ss:fp - 0x002A:word16] = Mem676[ds_658:0x29DF:word16]
	word16 ax_680 = fn0800_AD2F(ds_658, ptrArg00, wArg02)
	Mem682[ss:fp - 0x0008:word16] = ax_659
	Mem683[ss:fp - 0x000A:word16] = ax_680
	Mem688[ss:fp - 0x0028:word16] = 0x0000
	Mem691[ss:fp - 0x002A:word16] = Mem688[ss:fp - 0x0004:word16]
	Mem694[ss:fp - 0x002C:word16] = Mem691[ss:fp - 0x0006:word16]
	Mem697[ss:fp - 0x002E:word16] = Mem694[ds_658:0x29E5:word16]
	Mem700[ss:fp - 0x0030:word16] = Mem697[ds_658:0x29E3:word16]
	selector ds_701
	fn0800_ACB3(ds_658, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_701)
	Mem707[ss:fp - 0x0028:word16] = Mem700[ds_701:0x29E5:word16]
	Mem710[ss:fp - 0x002A:word16] = Mem707[ds_701:0x29E3:word16]
	selector ds_711
	word16 ax_714 = fn0800_4194(ds_701, wArg00, wArg02, out ds_711) - Mem710[ss:fp - 0x0006:word16]
	Mem720[ss:fp - 0x0028:word16] = ax_659 - Mem710[ss:fp - 0x0004:word16] - (ax_714 <u 0x0000)
	Mem722[ss:fp - 0x002A:word16] = ax_714
	Mem725[ss:fp - 0x002C:word16] = Mem722[ds_711:0x29E1:word16]
	Mem728[ss:fp - 0x002E:word16] = Mem725[ds_711:0x29DF:word16]
	Mem731[ss:fp - 0x0030:word16] = Mem728[ds_711:0x29E5:word16]
	Mem734[ss:fp - 0x0032:word16] = Mem731[ds_711:0x29E3:word16]
	selector ds_736
	fn0800_3B0A(fp - 0x0002, ds_711, wArg08, wArg0A, out ds_736)
	word16 di_739 = Mem734[ss:fp - 0x000A:word16]
	word16 dx_746
	Mem748[ss:fp - 0x000C:word16] = fn0800_8CAA(Mem734[ss:fp - 0x000A:word16], 0x09, Mem734[ss:fp - 0x0008:word16], bp, out dx_746)
	branch (di_739 & 0x01FF) == 0x0000 l0800_4B37
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B34:
	Mem836[ss:fp - 0x000C:word16] = Mem748[ss:fp - 0x000C:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4B37:
	Mem757[ss:fp - 0x0028:word16] = 0x0000
	Mem760[ss:fp - 0x002A:word16] = 0x0000
	Mem762[ss:fp - 0x002C:word16] = 0x0002
	Mem765[ss:fp - 0x002E:word16] = Mem762[ds_736:0x29E1:word16]
	Mem768[ss:fp - 0x0030:word16] = Mem765[ds_736:0x29DF:word16]
	selector ds_769
	fn0800_ACB3(ds_736, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_769)
	Mem775[ss:fp - 0x0028:word16] = Mem768[ds_769:0x29E1:word16]
	Mem778[ss:fp - 0x002A:word16] = Mem775[ds_769:0x29DF:word16]
	Mem780[ss:fp - 0x002C:word16] = di_739 & 0x01FF
	selector ds_781
	fn0800_40BF(fp - 0x0002, ds_769, bArg00, wArg02, wArg04, out ds_781)
	Mem787[ss:fp - 0x0028:word16] = Mem780[ds_781:0x29E1:word16]
	Mem790[ss:fp - 0x002A:word16] = Mem787[ds_781:0x29DF:word16]
	Mem793[ss:fp - 0x002C:word16] = Mem790[ss:fp - 0x000C:word16]
	selector ds_794
	fn0800_40BF(fp - 0x0002, ds_781, bArg00, wArg02, wArg04, out ds_794)
	Mem800[ss:fp - 0x0028:word16] = Mem793[ds_794:0x29E1:word16]
	Mem803[ss:fp - 0x002A:word16] = Mem800[ds_794:0x29DF:word16]
	Mem806[ss:fp - 0x002C:word16] = Mem803[ss:fp - 0x000E:word16]
	selector ds_807
	fn0800_40BF(fp - 0x0002, ds_794, bArg00, wArg02, wArg04, out ds_807)
	Mem813[ss:fp - 0x0028:word16] = Mem806[ds_807:0x29E1:word16]
	Mem816[ss:fp - 0x002A:word16] = Mem813[ds_807:0x29DF:word16]
	Mem819[ss:fp - 0x002C:word16] = Mem816[ss:fp - 0x0010:word16]
	selector ds_820
	fn0800_40BF(fp - 0x0002, ds_807, bArg00, wArg02, wArg04, out ds_820)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ABE:
	return ax_659
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> dl:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4798:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> di:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4758:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 di:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):0x0028 -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -2(fp):bp

l0800_4716:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0026 bp:fp - 0x0002 -38(fp):di -36(fp):si -2(fp):bp

fn0800_46FE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> dl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):di -36(fp):si -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_4B97(word16 bp, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4B97_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4B97:
	selector ds_11
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_11) != 0x0000 l0800_4BAD
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_4BAD:
	selector ds_23
	return fn0800_5374(bp, ds_11, out ds_23)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BA9:
	return 0x0007
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4B97_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4BB1(word16 bp, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_4BB1_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4BB1:
	selector ds_11
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_11) != 0x0000 l0800_4BC7
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4BC7:
	Mem36[ss:fp - 0x0002:word16] = 0x0001
	Mem41[ss:fp - 0x0004:word16] = 0xFFFF
	Mem43[ss:fp - 0x0006:word16] = 0xFFEE
	Mem46[ss:fp - 0x0008:word16] = Mem43[ds_11:0x29E5:word16]
	Mem49[ss:fp - 0x000A:word16] = Mem46[ds_11:0x29E3:word16]
	selector ds_55
	fn0800_ACB3(ds_11, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_55)
	Mem61[ss:fp - 0x0002:word16] = Mem49[ds_55:0x29E1:word16]
	Mem64[ss:fp - 0x0004:word16] = Mem61[ds_55:0x29DF:word16]
	Mem67[ss:fp - 0x0006:word16] = 0x601A
	selector ds_69
	fn0800_401E(bp, ds_55, wArg00, wArg02, wArg04, out ds_69)
	Mem77[ss:fp - 0x0002:word16] = 0x0000
	Mem79[ss:fp - 0x0004:word16] = 0x0010
	Mem82[ss:fp - 0x0006:word16] = Mem79[ds_69:0x29E1:word16]
	Mem85[ss:fp - 0x0008:word16] = Mem82[ds_69:0x29DF:word16]
	Mem88[ss:fp - 0x000A:word16] = Mem85[ds_69:0x29E5:word16]
	Mem91[ss:fp - 0x000C:word16] = Mem88[ds_69:0x29E3:word16]
	selector ds_93
	fn0800_3B0A(bp, ds_69, wArg08, wArg0A, out ds_93)
	Mem98[ss:fp - 0x0002:word16] = Mem91[ds_93:0x29E1:word16]
	Mem101[ss:fp - 0x0004:word16] = Mem98[ds_93:0x29DF:word16]
	Mem106[ss:fp - 0x0006:word16] = 0x0000
	Mem108[ss:fp - 0x0008:word16] = 0x0000
	selector ds_109
	fn0800_409C(bp, ds_93, wArg02, wArg04, wArg06, out ds_109)
	Mem114[ss:fp - 0x0002:word16] = Mem108[ds_109:0x29E1:word16]
	Mem117[ss:fp - 0x0004:word16] = Mem114[ds_109:0x29DF:word16]
	Mem122[ss:fp - 0x0006:word16] = 0x0000
	Mem124[ss:fp - 0x0008:word16] = 0x0000
	selector ds_125
	fn0800_409C(bp, ds_109, wArg02, wArg04, wArg06, out ds_125)
	Mem131[ss:fp - 0x0002:word16] = Mem124[ds_125:0x29E1:word16]
	Mem134[ss:fp - 0x0004:word16] = Mem131[ds_125:0x29DF:word16]
	Mem137[ss:fp - 0x0006:word16] = Mem134[ds_125:0x29E5:word16]
	Mem140[ss:fp - 0x0008:word16] = Mem137[ds_125:0x29E3:word16]
	word16 si_141
	word16 di_142
	selector ds_143
	Mem148[ss:fp - 0x0006:word16] = fn0800_3E27(bp, ds_125, wArg00, wArg02, out si_141, out di_142, out ds_143)
	selector ds_149
	fn0800_401E(bp, ds_143, wArg00, wArg02, wArg04, out ds_149)
	selector ds_153
	return fn0800_5374(bp, ds_149, out ds_153)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_4BC3:
	return 0x0007
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_4BB1_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_4C55(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx sp
fn0800_4C55_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4C55:
	word16 si_16
	selector ds_17
	branch fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_16, out ds_17) != 0x0000 l0800_4C72
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4C6D:
	branch ax == 0x03F3 l0800_4C79
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C79:
	Mem60[ss:fp - 0x001C:word16] = Mem0[ds_17:0x29E1:word16]
	Mem63[ss:fp - 0x001E:word16] = Mem60[ds_17:0x29DF:word16]
	Mem69[ss:fp - 0x0020:word16] = 0x0000
	Mem71[ss:fp - 0x0022:word16] = 0x03F3
	selector ds_112
	fn0800_409C(fp - 0x0002, ds_17, wArg02, wArg04, wArg06, out ds_112)
	word16 ax_132 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4C8E:
	Mem87[ss:fp - 0x001C:word16] = Mem71[ds_112:0x29E5:word16]
	Mem90[ss:fp - 0x001E:word16] = Mem87[ds_112:0x29E3:word16]
	word16 si_92
	selector ds_93
	word16 dx_94 = fn0800_3E5D(fp - 0x0002, ds_112, wArg00, wArg02, out si_92, out ds_93)
	Mem97[ss:fp - 0x0008:word16] = dx_94
	Mem98[ss:fp - 0x000A:word16] = ax_132
	Mem99[ss:fp - 0x0004:word16] = dx_94
	Mem100[ss:fp - 0x0006:word16] = ax_132
	Mem103[ss:fp - 0x001C:word16] = Mem100[ds_93:0x29E1:word16]
	Mem106[ss:fp - 0x001E:word16] = Mem103[ds_93:0x29DF:word16]
	Mem109[ss:fp - 0x0020:word16] = Mem106[ss:fp - 0x0004:word16]
	Mem111[ss:fp - 0x0022:word16] = ax_132
	fn0800_409C(fp - 0x0002, ds_93, wArg02, wArg04, wArg06, out ds_112)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CDA:
	word16 ax_119 = Mem111[ss:fp - 0x000A:word16]
	word16 dx_120 = Mem111[ss:fp - 0x0008:word16]
	word16 v21_121 = Mem111[ss:fp - 0x000A:word16] - 0x0001
	Mem122[ss:fp - 0x000A:word16] = v21_121
	Mem126[ss:fp - 0x0008:word16] = Mem122[ss:fp - 0x0008:word16] - (v21_121 <u 0x0000)
	word16 ax_127 = ax_119 | dx_120
	branch ax_127 != 0x0000 l0800_4CBC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CBC:
	Mem502[ss:fp - 0x001C:word16] = Mem126[ds_112:0x29E1:word16]
	Mem505[ss:fp - 0x001E:word16] = Mem502[ds_112:0x29DF:word16]
	Mem508[ss:fp - 0x0020:word16] = Mem505[ds_112:0x29E5:word16]
	Mem511[ss:fp - 0x0022:word16] = Mem508[ds_112:0x29E3:word16]
	word16 si_512
	selector ds_513
	Mem518[ss:fp - 0x0020:word16] = fn0800_3E5D(fp - 0x0002, ds_112, wArg00, wArg02, out si_512, out ds_513)
	Mem520[ss:fp - 0x0022:word16] = ax_127
	fn0800_409C(fp - 0x0002, ds_513, wArg02, wArg04, wArg06, out ds_112)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CEC:
	ax_132 = Mem126[ss:fp - 0x0006:word16] | Mem126[ss:fp - 0x0004:word16]
	branch ax_132 != 0x0000 l0800_4C8E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4CF4:
	Mem138[ss:fp - 0x001C:word16] = Mem126[ds_112:0x29E1:word16]
	Mem141[ss:fp - 0x001E:word16] = Mem138[ds_112:0x29DF:word16]
	Mem144[ss:fp - 0x0020:word16] = Mem141[ds_112:0x29E5:word16]
	Mem147[ss:fp - 0x0022:word16] = Mem144[ds_112:0x29E3:word16]
	word16 si_148
	selector ds_149
	ui32 dx_ax_153 = SEQ(fn0800_3E5D(fp - 0x0002, ds_112, wArg00, wArg02, out si_148, out ds_149), ax_132 - 0x0001)
	Mem160[ss:fp - 0x0020:word16] = SLICE(dx_ax_153 - 0x00000001, word16, 16)
	word16 ax_157 = (word16) (dx_ax_153 - 0x00000001)
	Mem162[ss:fp - 0x0022:word16] = ax_157
	selector ds_163
	fn0800_409C(fp - 0x0002, ds_149, wArg02, wArg04, wArg06, out ds_163)
	Mem169[ss:fp - 0x001C:word16] = Mem162[ds_163:0x29E5:word16]
	Mem172[ss:fp - 0x001E:word16] = Mem169[ds_163:0x29E3:word16]
	word16 si_173
	selector ds_174
	Mem178[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_163, wArg00, wArg02, out si_173, out ds_174)
	Mem179[ss:fp - 0x000E:word16] = ax_157
	Mem182[ss:fp - 0x001C:word16] = Mem179[ds_174:0x29E5:word16]
	Mem185[ss:fp - 0x001E:word16] = Mem182[ds_174:0x29E3:word16]
	word16 si_186
	selector ds_187
	Mem190[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_174, wArg00, wArg02, out si_186, out ds_187)
	Mem191[ss:fp - 0x0012:word16] = ax_157
	word16 dx_194 = Mem191[ss:fp - 0x0012:word16] - Mem191[ss:fp - 0x000E:word16]
	Mem199[ss:fp - 0x0014:word16] = Mem191[ss:fp - 0x0010:word16] - Mem191[ss:fp - 0x000C:word16] - (dx_194 <u 0x0000)
	Mem200[ss:fp - 0x0016:word16] = dx_194
	Mem203[ss:fp - 0x001C:word16] = Mem200[ds_187:0x29E1:word16]
	Mem206[ss:fp - 0x001E:word16] = Mem203[ds_187:0x29DF:word16]
	Mem209[ss:fp - 0x0020:word16] = Mem206[ss:fp - 0x000C:word16]
	Mem212[ss:fp - 0x0022:word16] = Mem209[ss:fp - 0x000E:word16]
	selector ds_213
	fn0800_409C(fp - 0x0002, ds_187, wArg02, wArg04, wArg06, out ds_213)
	Mem218[ss:fp - 0x001C:word16] = Mem212[ds_213:0x29E1:word16]
	Mem221[ss:fp - 0x001E:word16] = Mem218[ds_213:0x29DF:word16]
	ui32 ax_dx_225 = SEQ(Mem221[ss:fp - 0x0010:word16], Mem221[ss:fp - 0x0012:word16] - 0x0001)
	Mem232[ss:fp - 0x0020:word16] = SLICE(ax_dx_225 - 0x00000001, word16, 16)
	word16 dx_229 = (word16) (ax_dx_225 - 0x00000001)
	Mem234[ss:fp - 0x0022:word16] = dx_229
	selector ds_235
	fn0800_409C(fp - 0x0002, ds_213, wArg02, wArg04, wArg06, out ds_235)
	Mem241[ss:fp - 0x001C:word16] = Mem234[ds_235:0x29E1:word16]
	Mem244[ss:fp - 0x001E:word16] = Mem241[ds_235:0x29DF:word16]
	word16 ax_246 = fn0800_AD2F(ds_235, ptrArg00, wArg02)
	Mem248[ds_235:0x4E8E:word16] = dx_229
	Mem249[ds_235:0x4E8C:word16] = ax_246
	Mem252[ss:fp - 0x001C:word16] = 0x0001
	Mem258[ss:fp - 0x001E:word16] = 0x0000
	Mem260[ss:fp - 0x0020:word16] = 0x0004
	Mem263[ss:fp - 0x0022:word16] = Mem260[ds_235:0x29E5:word16]
	Mem266[ss:fp - 0x0024:word16] = Mem263[ds_235:0x29E3:word16]
	selector ds_268
	fn0800_ACB3(ds_235, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_268)
	word16 dx_273 = Mem266[ss:fp - 0x0016:word16]
	Mem274[ss:fp - 0x0004:word16] = Mem266[ss:fp - 0x0014:word16]
	Mem275[ss:fp - 0x0006:word16] = dx_273
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DE4:
	word16 ax_282 = Mem275[ss:fp - 0x0006:word16] | Mem275[ss:fp - 0x0004:word16]
	branch ax_282 != 0x0000 l0800_4DBE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DBE:
	Mem471[ss:fp - 0x001C:word16] = Mem275[ds_268:0x29E1:word16]
	Mem474[ss:fp - 0x001E:word16] = Mem471[ds_268:0x29DF:word16]
	Mem477[ss:fp - 0x0020:word16] = Mem474[ds_268:0x29E5:word16]
	Mem480[ss:fp - 0x0022:word16] = Mem477[ds_268:0x29E3:word16]
	word16 si_481
	selector ds_482
	Mem487[ss:fp - 0x0020:word16] = fn0800_3E5D(fp - 0x0002, ds_268, wArg00, wArg02, out si_481, out ds_482)
	Mem489[ss:fp - 0x0022:word16] = ax_282
	fn0800_409C(fp - 0x0002, ds_482, wArg02, wArg04, wArg06, out ds_268)
	word16 v56_493 = Mem489[ss:fp - 0x0006:word16] - 0x0001
	Mem494[ss:fp - 0x0006:word16] = v56_493
	Mem498[ss:fp - 0x0004:word16] = Mem494[ss:fp - 0x0004:word16] - (v56_493 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4DEC:
	Mem288[ss:fp - 0x001C:word16] = 0x0001
	Mem294[ss:fp - 0x001E:word16] = 0x0000
	Mem296[ss:fp - 0x0020:word16] = 0x0004
	Mem299[ss:fp - 0x0022:word16] = Mem296[ds_268:0x29E5:word16]
	Mem302[ss:fp - 0x0024:word16] = Mem299[ds_268:0x29E3:word16]
	selector ds_303
	word16 ax_304 = fn0800_ACB3(ds_268, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_303)
	Mem309[ss:fp - 0x001C:word16] = Mem302[ds_303:0x29E5:word16]
	Mem312[ss:fp - 0x001E:word16] = Mem309[ds_303:0x29E3:word16]
	word16 si_313
	selector ds_314
	ui32 dx_ax_318 = SEQ(fn0800_3E5D(fp - 0x0002, ds_303, wArg00, wArg02, out si_313, out ds_314), ax_304 + 0x0001)
	Mem324[ss:fp - 0x0004:word16] = SLICE(dx_ax_318 + 0x00000001, word16, 16)
	Mem325[ss:fp - 0x0006:word16] = (word16) (dx_ax_318 + 0x00000001)
	Mem328[ss:fp - 0x001C:word16] = 0x0001
	word16 dx_332
	word16 ax_333 = fn0800_8C69(Mem328[ss:fp - 0x0006:word16], 0x02, Mem328[ss:fp - 0x0004:word16], bp, out dx_332)
	Mem335[ss:fp - 0x001E:word16] = dx_332
	Mem337[ss:fp - 0x0020:word16] = ax_333
	Mem340[ss:fp - 0x0022:word16] = Mem337[ds_314:0x29E5:word16]
	Mem343[ss:fp - 0x0024:word16] = Mem340[ds_314:0x29E3:word16]
	selector ds_344
	fn0800_ACB3(ds_314, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_344)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4EDE:
	Mem350[ss:fp - 0x001C:word16] = Mem343[ds_344:0x29E5:word16]
	Mem353[ss:fp - 0x001E:word16] = Mem350[ds_344:0x29E3:word16]
	Mem358[ss:fp - 0x001C:word16] = fn0800_AD2F(ds_344, ptrArg00, wArg02)
	Mem360[ss:fp - 0x001E:word16] = dx_332
	Mem363[ss:fp - 0x0020:word16] = Mem360[ds_344:0x29E5:word16]
	Mem366[ss:fp - 0x0022:word16] = Mem363[ds_344:0x29E3:word16]
	selector ds_367
	word16 ax_368 = fn0800_4194(ds_344, wArg00, wArg02, out ds_367)
	word16 bx_370 = Mem366[ss:fp - 0x001E:word16]
	word16 dx_376 = Mem366[ss:fp - 0x001C:word16]
	branch bx_370 >=u dx_332 l0800_4F05
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F05:
	branch bx_370 != dx_332 l0800_4F0E
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F07:
	branch dx_376 >=u ax_368 l0800_4F0E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F0E:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4F0B:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4E41:
	Mem382[ss:fp - 0x001C:word16] = Mem366[ds_367:0x29E5:word16]
	Mem385[ss:fp - 0x001E:word16] = Mem382[ds_367:0x29E3:word16]
	word16 si_386
	selector ds_387
	Mem391[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_367, wArg00, wArg02, out si_386, out ds_387)
	Mem392[ss:fp - 0x000A:word16] = ax_368
	Mem395[ss:fp - 0x001C:word16] = Mem392[ds_387:0x29E1:word16]
	Mem398[ss:fp - 0x001E:word16] = Mem395[ds_387:0x29DF:word16]
	Mem401[ss:fp - 0x0020:word16] = Mem398[ss:fp - 0x0008:word16]
	Mem403[ss:fp - 0x0022:word16] = ax_368
	selector ds_404
	word16 si_405 = fn0800_409C(fp - 0x0002, ds_387, wArg02, wArg04, wArg06, out ds_404)
	word16 ax_407 = Mem403[ss:fp - 0x0008:word16]
	word16 dx_408 = Mem403[ss:fp - 0x000A:word16]
	Mem412[ss:fp - 0x001A:word16] = dx_408
	Mem413[ss:fp - 0x0018:word16] = ax_407 & 0x3FFF
	word16 cx_414 = 0x0004
	word16 bx_416 = 0x4F14
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E7C:
	branch Mem413[0x0800:bx_416:word16] != Mem413[ss:fp - 0x000A:word16] l0800_4E8D
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E84:
	word16 ax_439 = Mem413[0x0800:bx_416 + 0x0008:word16]
	branch ax_439 == Mem413[ss:fp - 0x0018:word16] l0800_4E94
// DataOut: ax bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E94:
	word16 sp_444
	word16 bp_445
	selector ss_446
	byte SCZO_447
	selector ds_448
	word16 dx_449
	byte SZO_450
	byte C_451
	byte Z_452
	word16 ax_453
	byte cl_454
	word16 bx_455
	word16 cx_456
	word16 si_457
	call Mem413[0x0800:bx_416 + 0x0010:word16] (retsize: 4; depth: 4)
		uses: ax_439,bp_5,bx_417,C_411,cl_419,cx_418,ds_404,dx_408,SCZO_442,si_405,sp_406,ss,SZO_410,wLoc02_4,wLoc1C_12,wLoc1E_15,Z_443
		defs: ax_453,bp_445,bx_455,C_451,cl_454,cx_456,ds_448,dx_449,SCZO_447,si_457,sp_444,ss_446,SZO_450,Z_452
	return ax_453
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E8D:
	bx_416 = bx_416 + 0x0002
	cx_414 = cx_414 - 0x0001
	branch cx_414 != 0x0000 l0800_4E7C
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4E92:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4ED7:
	return 0x0009
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_4C72:
	return 0x0007
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -30(fp):<invalid> -28(fp):<invalid> -2(fp):bp

fn0800_4C55_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_4F2C(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_4F2C_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_4F2C:
	word16 si_16
	word16 dx_23
	selector ds_17
	word16 ax_24 = fn0800_8C69(ax, 0x02, fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_16, out ds_17), bp, out dx_23)
	Mem25[ss:fp - 0x0012:word16] = dx_23
	Mem27[ss:fp - 0x0014:word16] = ax_24
	Mem30[ss:fp - 0x001E:word16] = Mem27[ds_17:0x29E5:word16]
	Mem33[ss:fp - 0x0020:word16] = Mem30[ds_17:0x29E3:word16]
	word16 ax_36 = fn0800_AD2F(ds_17, ptrArg00, wArg02)
	Mem38[ss:fp - 0x001A:word16] = dx_23
	Mem39[ss:fp - 0x001C:word16] = ax_36
	branch Mem39[ss:fp - 0x0012:word16] <u 0x0000 l0800_4F95
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_4F65:
	branch Mem39[ss:fp - 0x0012:word16] >u 0x0000 l0800_4F6D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F67:
	branch Mem39[ss:fp - 0x0014:word16] <=u 0x0012 l0800_4F95
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F6D:
	Mem459[ss:fp - 0x001E:word16] = Mem39[ds_17:0x29E5:word16]
	Mem462[ss:fp - 0x0020:word16] = Mem459[ds_17:0x29E3:word16]
	word16 si_463
	selector ds_464
	Mem468[ss:fp - 0x0016:word16] = fn0800_3E5D(fp - 0x0002, ds_17, wArg00, wArg02, out si_463, out ds_464)
	Mem469[ss:fp - 0x0018:word16] = ax_36
	Mem472[ss:fp - 0x001E:word16] = Mem469[ds_464:0x29E5:word16]
	Mem475[ss:fp - 0x0020:word16] = Mem472[ds_464:0x29E3:word16]
	word16 si_476
	Mem481[ss:fp - 0x000E:word16] = fn0800_3E5D(fp - 0x0002, ds_464, wArg00, wArg02, out si_476, out ds_17)
	Mem482[ss:fp - 0x0010:word16] = ax_36
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4F95:
	Mem50[ss:fp - 0x001E:word16] = Mem39[ds_17:0x29E5:word16]
	Mem53[ss:fp - 0x0020:word16] = Mem50[ds_17:0x29E3:word16]
	word16 si_55
	word16 di_56
	selector ds_57
	word16 dx_62
	word16 ax_63 = fn0800_8CAA(ax_36, 0x08, fn0800_3F58(fp - 0x0002, ds_17, wArg00, wArg02, out si_55, out di_56, out ds_57), bp, out dx_62)
	branch dx_62 != 0x0052 l0800_4FB5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4FAD:
	branch ax_63 != 0x4E43 l0800_4FB5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4FB5:
	Mem85[ss:fp - 0x001E:word16] = Mem53[ds_57:0x29E1:word16]
	Mem88[ss:fp - 0x0020:word16] = Mem85[ds_57:0x29DF:word16]
	word16 dx_92
	word16 ax_93 = fn0800_8CAA(Mem88[ss:fp - 0x0014:word16], 0x02, Mem88[ss:fp - 0x0012:word16], bp, out dx_92)
	Mem95[ss:fp - 0x0022:word16] = dx_92
	Mem97[ss:fp - 0x0024:word16] = ax_93
	selector ds_100
	fn0800_409C(fp - 0x0002, ds_57, wArg02, wArg04, wArg06, out ds_100)
	Mem107[ss:fp - 0x001E:word16] = 0x0000
	Mem110[ss:fp - 0x0020:word16] = Mem107[ss:fp - 0x001A:word16]
	Mem113[ss:fp - 0x0022:word16] = Mem110[ss:fp - 0x001C:word16]
	Mem116[ss:fp - 0x0024:word16] = Mem113[ds_100:0x29E5:word16]
	Mem119[ss:fp - 0x0026:word16] = Mem116[ds_100:0x29E3:word16]
	selector ds_121
	word16 ax_122 = fn0800_ACB3(ds_100, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_121)
	Mem127[ss:fp - 0x001E:word16] = Mem119[ss:fp - 0x0012:word16]
	Mem130[ss:fp - 0x0020:word16] = Mem127[ss:fp - 0x0014:word16]
	Mem133[ss:fp - 0x0022:word16] = Mem130[ds_121:0x29E1:word16]
	Mem136[ss:fp - 0x0024:word16] = Mem133[ds_121:0x29DF:word16]
	Mem139[ss:fp - 0x0026:word16] = Mem136[ds_121:0x29E5:word16]
	Mem142[ss:fp - 0x0028:word16] = Mem139[ds_121:0x29E3:word16]
	selector ds_144
	fn0800_3B0A(fp - 0x0002, ds_121, wArg08, wArg0A, out ds_144)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50BC:
	Mem155[ss:fp - 0x001E:word16] = Mem142[ds_144:0x29E5:word16]
	Mem158[ss:fp - 0x0020:word16] = Mem155[ds_144:0x29E3:word16]
	word16 si_159
	word16 di_160
	selector ds_161
	branch fn0800_3F58(fp - 0x0002, ds_144, wArg00, wArg02, out si_159, out di_160, out ds_161) != 0x0000 l0800_50D6
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50CE:
	branch ax_122 != 0x03EC l0800_50D6
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50D6:
	word16 v58_171 = Mem158[ds_161:0x4E8C:word16] + 0x0004
	Mem172[ds_161:0x4E8C:word16] = v58_171
	Mem176[ds_161:0x4E8E:word16] = Mem172[ds_161:0x4E8E:word16] + (v58_171 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp

l0800_50D3:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5006:
	Mem187[ss:fp - 0x001E:word16] = 0x0001
	Mem193[ss:fp - 0x0020:word16] = 0x0000
	Mem195[ss:fp - 0x0022:word16] = 0x0004
	Mem198[ss:fp - 0x0024:word16] = Mem195[ds_161:0x29E5:word16]
	Mem201[ss:fp - 0x0026:word16] = Mem198[ds_161:0x29E3:word16]
	selector ds_202
	fn0800_ACB3(ds_161, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_202)
	Mem207[ss:fp - 0x001E:word16] = Mem201[ds_202:0x29E1:word16]
	Mem210[ss:fp - 0x0020:word16] = Mem207[ds_202:0x29DF:word16]
	Mem216[ss:fp - 0x0022:word16] = 0x0000
	Mem218[ss:fp - 0x0024:word16] = 0x03EC
	fn0800_409C(fp - 0x0002, ds_202, wArg02, wArg04, wArg06, out ds_144)
	ax_122 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> al:<invalid> cx:<invalid> es:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5034:
	Mem230[ss:fp - 0x001E:word16] = Mem218[ds_144:0x29E5:word16]
	Mem233[ss:fp - 0x0020:word16] = Mem230[ds_144:0x29E3:word16]
	word16 si_234
	selector ds_235
	Mem239[ss:fp - 0x0006:word16] = fn0800_3E5D(fp - 0x0002, ds_144, wArg00, wArg02, out si_234, out ds_235)
	Mem240[ss:fp - 0x0008:word16] = ax_122
	Mem243[ss:fp - 0x001E:word16] = Mem240[ds_235:0x29E1:word16]
	Mem246[ss:fp - 0x0020:word16] = Mem243[ds_235:0x29DF:word16]
	Mem249[ss:fp - 0x0022:word16] = Mem246[ss:fp - 0x0006:word16]
	Mem251[ss:fp - 0x0024:word16] = ax_122
	fn0800_409C(fp - 0x0002, ds_235, wArg02, wArg04, wArg06, out ds_144)
	word16 ax_256 = Mem251[ss:fp - 0x0008:word16] | Mem251[ss:fp - 0x0006:word16]
	branch ax_256 == 0x0000 l0800_50B1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5062:
	Mem274[ss:fp - 0x001E:word16] = Mem251[ds_144:0x29E5:word16]
	Mem277[ss:fp - 0x0020:word16] = Mem274[ds_144:0x29E3:word16]
	word16 si_278
	selector ds_279
	ui32 dx_ax_283 = SEQ(fn0800_3E5D(fp - 0x0002, ds_144, wArg00, wArg02, out si_278, out ds_279), ax_256 - 0x0001)
	Mem289[ss:fp - 0x000A:word16] = SLICE(dx_ax_283 - 0x00000001, word16, 16)
	word16 ax_287 = (word16) (dx_ax_283 - 0x00000001)
	Mem290[ss:fp - 0x000C:word16] = ax_287
	Mem293[ss:fp - 0x001E:word16] = Mem290[ds_279:0x29E1:word16]
	Mem296[ss:fp - 0x0020:word16] = Mem293[ds_279:0x29DF:word16]
	Mem299[ss:fp - 0x0022:word16] = Mem296[ss:fp - 0x000A:word16]
	Mem301[ss:fp - 0x0024:word16] = ax_287
	selector ds_302
	fn0800_409C(fp - 0x0002, ds_279, wArg02, wArg04, wArg06, out ds_302)
	word16 dx_309
	word16 ax_310 = fn0800_8C69(Mem301[ss:fp - 0x0008:word16], 0x02, Mem301[ss:fp - 0x0006:word16], bp, out dx_309)
	Mem312[ss:fp - 0x001E:word16] = dx_309
	Mem314[ss:fp - 0x0020:word16] = ax_310
	Mem317[ss:fp - 0x0022:word16] = Mem314[ds_302:0x29E1:word16]
	Mem320[ss:fp - 0x0024:word16] = Mem317[ds_302:0x29DF:word16]
	Mem323[ss:fp - 0x0026:word16] = Mem320[ds_302:0x29E5:word16]
	Mem326[ss:fp - 0x0028:word16] = Mem323[ds_302:0x29E3:word16]
	fn0800_3B0A(fp - 0x0002, ds_302, wArg08, wArg0A, out ds_144)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50B1:
	ax_122 = Mem251[ss:fp - 0x0008:word16] | Mem251[ss:fp - 0x0006:word16]
	branch ax_122 == 0x0000 l0800_50BC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50B9:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_4FB2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_50E6:
	Mem335[ss:fp - 0x001E:word16] = Mem53[ds_57:0x29E1:word16]
	Mem338[ss:fp - 0x0020:word16] = Mem335[ds_57:0x29DF:word16]
	word16 dx_342
	word16 ax_343 = fn0800_8CAA(Mem338[ss:fp - 0x0018:word16], 0x02, Mem338[ss:fp - 0x0016:word16], bp, out dx_342)
	Mem345[ss:fp - 0x0022:word16] = dx_342
	Mem347[ss:fp - 0x0024:word16] = ax_343
	selector ds_348
	fn0800_409C(fp - 0x0002, ds_57, wArg02, wArg04, wArg06, out ds_348)
	Mem354[ss:fp - 0x001E:word16] = Mem347[ds_348:0x29E1:word16]
	Mem357[ss:fp - 0x0020:word16] = Mem354[ds_348:0x29DF:word16]
	word16 ax_358 = fn0800_AD2F(ds_348, ptrArg00, wArg02)
	Mem360[ss:fp - 0x0006:word16] = dx_342
	Mem361[ss:fp - 0x0008:word16] = ax_358
	Mem366[ss:fp - 0x001E:word16] = 0x0000
	Mem369[ss:fp - 0x0020:word16] = Mem366[ds_348:0x4E8E:word16]
	Mem372[ss:fp - 0x0022:word16] = Mem369[ds_348:0x4E8C:word16]
	Mem375[ss:fp - 0x0024:word16] = Mem372[ds_348:0x29E1:word16]
	Mem378[ss:fp - 0x0026:word16] = Mem375[ds_348:0x29DF:word16]
	selector ds_379
	fn0800_ACB3(ds_348, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_379)
	Mem385[ss:fp - 0x001E:word16] = Mem378[ds_379:0x29E1:word16]
	Mem388[ss:fp - 0x0020:word16] = Mem385[ds_379:0x29DF:word16]
	Mem391[ss:fp - 0x0022:word16] = Mem388[ss:fp - 0x000E:word16]
	Mem394[ss:fp - 0x0024:word16] = Mem391[ss:fp - 0x0010:word16]
	selector ds_395
	fn0800_409C(fp - 0x0002, ds_379, wArg02, wArg04, wArg06, out ds_395)
	word16 v48_398 = Mem394[ds_395:0x4E8C:word16] + 0x0004
	Mem399[ds_395:0x4E8C:word16] = v48_398
	Mem403[ds_395:0x4E8E:word16] = Mem399[ds_395:0x4E8E:word16] + (v48_398 <u 0x0000)
	Mem408[ss:fp - 0x001E:word16] = 0x0000
	Mem411[ss:fp - 0x0020:word16] = Mem408[ss:fp - 0x0006:word16]
	Mem414[ss:fp - 0x0022:word16] = Mem411[ss:fp - 0x0008:word16]
	Mem417[ss:fp - 0x0024:word16] = Mem414[ds_395:0x29E1:word16]
	Mem420[ss:fp - 0x0026:word16] = Mem417[ds_395:0x29DF:word16]
	selector ds_421
	fn0800_ACB3(ds_395, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_421)
	selector ds_425
	Mem427[ss:fp - 0x0004:word16] = fn0800_5374(fp - 0x0002, ds_421, out ds_425)
	Mem430[ss:fp - 0x001E:word16] = 0x0000
	word16 dx_433 = Mem430[ss:fp - 0x001C:word16] + Mem430[ss:fp - 0x0014:word16]
	Mem439[ss:fp - 0x0020:word16] = Mem430[ss:fp - 0x001A:word16] + Mem430[ss:fp - 0x0012:word16] + (dx_433 <u 0x0000)
	Mem441[ss:fp - 0x0022:word16] = dx_433
	Mem444[ss:fp - 0x0024:word16] = Mem441[ds_425:0x29E5:word16]
	Mem447[ss:fp - 0x0026:word16] = Mem444[ds_425:0x29E3:word16]
	selector ds_448
	fn0800_ACB3(ds_425, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_448)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -2(fp):bp

fn0800_4F2C_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> bx:<invalid> al:<invalid> es:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_518F(word16 bp, selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_518F_entry:
	*bpOut = bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_518F:
	selector ds_11
	branch fn0800_5DCE(bp, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_11) != 0x0000 l0800_51A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_51A5:
	selector ds_23
	return fn0800_5374(bp, ds_11, out ds_23)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_51A1:
	return 0x0007
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_518F_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_51A9(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_51A9_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_51A9:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_533D:
	Mem28[ss:fp - 0x000A:word16] = Mem0[ds:0x29E5:word16]
	Mem32[ss:fp - 0x000C:word16] = Mem28[ds:0x29E3:word16]
	Mem39[ss:fp - 0x000A:word16] = fn0800_AD2F(ds, ptrArg00, wArg02)
	Mem41[ss:fp - 0x000C:word16] = dx
	Mem44[ss:fp - 0x000E:word16] = Mem41[ds:0x29E5:word16]
	Mem47[ss:fp - 0x0010:word16] = Mem44[ds:0x29E3:word16]
	selector ds_49
	word16 ax_50 = fn0800_4194(ds, wArg00, wArg02, out ds_49)
	word16 bx_52 = Mem47[ss:fp - 0x000C:word16]
	dx = Mem47[ss:fp - 0x000A:word16]
	branch bx_52 >=u dx l0800_5364
// DataOut: ax bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5364:
	branch bx_52 != dx l0800_536D
// DataOut: ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5366:
	branch dx >=u ax_50 l0800_536D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_536D:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_536A:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5361:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51B3:
	Mem80[ss:fp - 0x000A:word16] = Mem47[ds_49:0x29E5:word16]
	Mem83[ss:fp - 0x000C:word16] = Mem80[ds_49:0x29E3:word16]
	word16 ax_85 = fn0800_3E9A(fp - 0x0002, ds_49, ptrArg00, wArg02, out ds)
	branch ax_85 == 0x0000 l0800_51D5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D5:
	Mem366[ss:fp - 0x000A:word16] = Mem83[ds:0x29E1:word16]
	Mem369[ss:fp - 0x000C:word16] = Mem366[ds:0x29DF:word16]
	Mem372[ss:fp - 0x000E:word16] = Mem369[ds:0x29E5:word16]
	Mem375[ss:fp - 0x0010:word16] = Mem372[ds:0x29E3:word16]
	word16 di_376
	selector ds_377
	Mem382[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_376, out ds_377)
	fn0800_4047(ds_377, bArg00, ptrArg02, wArg04, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51C5:
	branch ax_85 == 0x0001 l0800_51F5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51F5:
	Mem194[ss:fp - 0x000A:word16] = Mem83[ds:0x29E1:word16]
	Mem197[ss:fp - 0x000C:word16] = Mem194[ds:0x29DF:word16]
	Mem200[ss:fp - 0x000E:word16] = Mem197[ds:0x29E5:word16]
	Mem203[ss:fp - 0x0010:word16] = Mem200[ds:0x29E3:word16]
	word16 si_204
	selector ds_205
	Mem210[ss:fp - 0x000E:word16] = fn0800_3E5D(fp - 0x0002, ds, wArg00, wArg02, out si_204, out ds_205)
	Mem212[ss:fp - 0x0010:word16] = ax_85
	selector ds_214
	fn0800_409C(fp - 0x0002, ds_205, wArg02, wArg04, wArg06, out ds_214)
	Mem220[ss:fp - 0x000A:word16] = Mem212[ds_214:0x29E5:word16]
	Mem223[ss:fp - 0x000C:word16] = Mem220[ds_214:0x29E3:word16]
	word16 si_224
	word16 di_225
	selector ds_226
	word16 ax_227 = fn0800_3FAD(fp - 0x0002, ds_214, wArg00, wArg02, out si_224, out di_225, out ds_226)
	Mem230[ss:fp - 0x0004:word16] = 0x0000
	Mem231[ss:fp - 0x0006:word16] = ax_227
	Mem234[ss:fp - 0x000A:word16] = Mem231[ds_226:0x29E1:word16]
	Mem237[ss:fp - 0x000C:word16] = Mem234[ds_226:0x29DF:word16]
	Mem239[ss:fp - 0x000E:word16] = ax_227
	selector ds_240
	fn0800_40BF(fp - 0x0002, ds_226, bArg00, wArg02, wArg04, out ds_240)
	Mem246[ss:fp - 0x000A:word16] = Mem239[ds_240:0x29E5:word16]
	Mem249[ss:fp - 0x000C:word16] = Mem246[ds_240:0x29E3:word16]
	word16 si_250
	word16 di_251
	selector ds_252
	word16 ax_258 = fn0800_8CAA(ax_227, 0x08, fn0800_3F58(fp - 0x0002, ds_240, wArg00, wArg02, out si_250, out di_251, out ds_252), bp, out dx)
	branch dx != 0x0052 l0800_52BA
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5250:
	branch ax_258 != 0x4E43 l0800_52BA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52BA:
	Mem266[ss:fp - 0x000A:word16] = Mem249[ss:fp - 0x0004:word16]
	Mem269[ss:fp - 0x000C:word16] = Mem266[ss:fp - 0x0006:word16]
	Mem272[ss:fp - 0x000E:word16] = Mem269[ds_252:0x29E1:word16]
	Mem275[ss:fp - 0x0010:word16] = Mem272[ds_252:0x29DF:word16]
	Mem278[ss:fp - 0x0012:word16] = Mem275[ds_252:0x29E5:word16]
	Mem281[ss:fp - 0x0014:word16] = Mem278[ds_252:0x29E3:word16]
	fn0800_3B0A(fp - 0x0002, ds_252, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5255:
	selector ds_288
	word16 ax_289 = fn0800_5374(fp - 0x0002, ds_252, out ds_288)
	branch ax_289 == 0x0000 l0800_5263
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5263:
	Mem303[ss:fp - 0x000A:word16] = 0x0001
	ui32 ax_dx_307 = SEQ(Mem303[ds_288:0x2A09:word16], Mem303[ds_288:0x2A07:word16] + 0x0002)
	dx = -(word16) (ax_dx_307 + 0x00000002)
	Mem319[ss:fp - 0x000C:word16] = -SLICE(ax_dx_307 + 0x00000002, word16, 16) - (dx == 0x0000)
	Mem321[ss:fp - 0x000E:word16] = dx
	Mem324[ss:fp - 0x0010:word16] = Mem321[ds_288:0x29E1:word16]
	Mem327[ss:fp - 0x0012:word16] = Mem324[ds_288:0x29DF:word16]
	selector ds_328
	fn0800_ACB3(ds_288, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_328)
	Mem334[ss:fp - 0x000A:word16] = Mem327[ds_328:0x29E1:word16]
	Mem337[ss:fp - 0x000C:word16] = Mem334[ds_328:0x29DF:word16]
	Mem340[ss:fp - 0x000E:word16] = Mem337[ds_328:0x2A07:word16]
	selector ds_341
	fn0800_40BF(fp - 0x0002, ds_328, bArg00, wArg02, wArg04, out ds_341)
	Mem347[ss:fp - 0x000A:word16] = 0x0001
	Mem350[ss:fp - 0x000C:word16] = Mem347[ds_341:0x2A09:word16]
	Mem353[ss:fp - 0x000E:word16] = Mem350[ds_341:0x2A07:word16]
	Mem356[ss:fp - 0x0010:word16] = Mem353[ds_341:0x29E1:word16]
	Mem359[ss:fp - 0x0012:word16] = Mem356[ds_341:0x29DF:word16]
	fn0800_ACB3(ds_341, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_525E:
	return ax_289
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> es:<invalid> cx:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_51A9_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_51CA:
	branch ax_85 != 0x0003 l0800_51D2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51D2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5301:
	Mem138[ss:fp - 0x000A:word16] = Mem83[ds:0x29E5:word16]
	Mem141[ss:fp - 0x000C:word16] = Mem138[ds:0x29E3:word16]
	selector ds_142
	Mem147[ss:fp - 0x000A:word16] = fn0800_4194(ds, wArg00, wArg02, out ds_142)
	Mem149[ss:fp - 0x000C:word16] = dx
	Mem152[ss:fp - 0x000E:word16] = Mem149[ds_142:0x29E5:word16]
	Mem155[ss:fp - 0x0010:word16] = Mem152[ds_142:0x29E3:word16]
	word16 ax_156 = fn0800_AD2F(ds_142, ptrArg00, wArg02)
	ui32 bx_cx_166 = SEQ(Mem155[ss:fp - 0x000C:word16], Mem155[ss:fp - 0x000A:word16] - ax_156) - SEQ(dx, ax_156)
	Mem171[ss:fp - 0x000A:word16] = SLICE(bx_cx_166, word16, 16)
	Mem173[ss:fp - 0x000C:word16] = (word16) bx_cx_166
	Mem176[ss:fp - 0x000E:word16] = Mem173[ds_142:0x29E1:word16]
	Mem179[ss:fp - 0x0010:word16] = Mem176[ds_142:0x29DF:word16]
	Mem182[ss:fp - 0x0012:word16] = Mem179[ds_142:0x29E5:word16]
	Mem185[ss:fp - 0x0014:word16] = Mem182[ds_142:0x29E3:word16]
	fn0800_3B0A(fp - 0x0002, ds_142, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_51CF:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52D8:
	word16 si_104 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> es:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FA:
	branch si_104 != 0x0003 l0800_52DC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52DC:
	Mem110[ss:fp - 0x000A:word16] = Mem83[ds:0x29E1:word16]
	Mem113[ss:fp - 0x000C:word16] = Mem110[ds:0x29DF:word16]
	Mem116[ss:fp - 0x000E:word16] = Mem113[ds:0x29E5:word16]
	Mem119[ss:fp - 0x0010:word16] = Mem116[ds:0x29E3:word16]
	word16 di_120
	selector ds_121
	Mem126[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_120, out ds_121)
	fn0800_4047(ds_121, bArg00, ptrArg02, wArg04, out ds)
	si_104 = si_104 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_52FF:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_5374(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_5374_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5374:
	word16 ax_21 = fn0800_AD2F(ds, DPB(ptrLoc16, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16])
	word16 si_33
	selector ds_34
	fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_33, out ds_34)
	Mem40[ds_34:0x2A21:word16] = ax_21 & 0x0003
	Mem43[ss:fp - 0x0014:word16] = Mem40[ds_34:0x29E5:word16]
	Mem47[ss:fp - 0x0016:word16] = Mem43[ds_34:0x29E3:word16]
	word16 si_50
	selector ds_51
	word16 dx_52 = fn0800_3E5D(fp - 0x0002, ds_34, wArg00, wArg02, out si_50, out ds_51)
	Mem55[ds_51:0x2A09:word16] = dx_52
	Mem56[ds_51:0x2A07:word16] = ax_21 & 0x0003
	word16 bp_266 = fp - 0x0002
	branch Mem56[ds_51:0x2A21:word16] != 0x0000 l0800_53EF
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_53EF:
	Mem111[ss:fp - 0x0014:word16] = Mem56[ds_51:0x29E5:word16]
	Mem114[ss:fp - 0x0016:word16] = Mem111[ds_51:0x29E3:word16]
	word16 si_115
	selector ds_116
	word16 dx_117 = fn0800_3E5D(fp - 0x0002, ds_51, wArg00, wArg02, out si_115, out ds_116)
	Mem120[ds_116:0x2A05:word16] = dx_117
	Mem121[ds_116:0x2A03:word16] = ax_21 & 0x0003
	Mem124[ss:fp - 0x0014:word16] = Mem121[ds_116:0x29E5:word16]
	Mem127[ss:fp - 0x0016:word16] = Mem124[ds_116:0x29E3:word16]
	word16 si_128
	word16 di_129
	selector ds_130
	word16 ax_131 = fn0800_3E27(fp - 0x0002, ds_116, wArg00, wArg02, out si_128, out di_129, out ds_130)
	Mem134[ds_130:0x2E4B:word16] = ax_131
	Mem137[ss:fp - 0x0014:word16] = Mem134[ds_130:0x29E5:word16]
	Mem140[ss:fp - 0x0016:word16] = Mem137[ds_130:0x29E3:word16]
	word16 si_141
	word16 di_142
	selector ds_143
	word16 ax_144 = fn0800_3E27(fp - 0x0002, ds_130, wArg00, wArg02, out si_141, out di_142, out ds_143)
	Mem147[ds_143:0x2E49:word16] = ax_144
	Mem150[ss:fp - 0x0014:word16] = Mem147[ds_143:0x29E5:word16]
	Mem153[ss:fp - 0x0016:word16] = Mem150[ds_143:0x29E3:word16]
	word16 si_154
	word16 di_155
	selector ds_156
	fn0800_3E27(fp - 0x0002, ds_143, wArg00, wArg02, out si_154, out di_155, out ds_156)
	Mem162[ss:fp - 0x0014:word16] = Mem153[ds_156:0x2A05:word16]
	Mem165[ss:fp - 0x0016:word16] = Mem162[ds_156:0x2A03:word16]
	Mem168[ss:fp - 0x0018:word16] = Mem165[ds_156:0x29E5:word16]
	Mem171[ss:fp - 0x001A:word16] = Mem168[ds_156:0x29E3:word16]
	selector ds_172
	word16 ax_173 = fn0800_2D0A(fp - 0x0002, ds_156, out ds_172)
	branch ax_173 == Mem171[ds_172:0x2E49:word16] l0800_5458
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5458:
	Mem186[ss:fp - 0x0014:word16] = 0x0001
	Mem188[ss:fp - 0x0016:word16] = 0x000F
	selector ds_189
	fn0800_4311(fp - 0x0002, ds_172, wArg00, wArg02, out ds_189)
	Mem193[ss:fp - 0x0008:word16] = 0x000F
	Mem194[ss:fp - 0x000A:word16] = 0x0001
	Mem197[ds_189:0x2E73:word16] = 0x0010
	Mem198[ds_189:0x2E71:word16] = 0x0000
	Mem202[ss:fp - 0x0014:word16] = 0x0001
	Mem204[ss:fp - 0x0016:word16] = 0x000F
	selector ds_205
	fn0800_4311(fp - 0x0002, ds_189, wArg00, wArg02, out ds_205)
	Mem208[ss:fp - 0x0004:word16] = 0x000F
	Mem209[ss:fp - 0x0006:word16] = 0x0001
	Mem211[ds_205:0x2E5B:word16] = 0x0010
	Mem212[ds_205:0x2E59:word16] = 0x0000
	word16 dx_214 = Mem212[ds_205:0x2E71:word16]
	Mem216[ds_205:0x2E6F:word16] = Mem212[ds_205:0x2E73:word16]
	Mem217[ds_205:0x2E6D:word16] = dx_214 + 0xFFFD
	word16 dx_220 = Mem217[ds_205:0x2E59:word16] + Mem217[ds_205:0x2E31:word16]
	Mem221[ds_205:0x2E57:word16] = Mem217[ds_205:0x2E5B:word16]
	Mem222[ds_205:0x2E55:word16] = dx_220
	Mem223[ds_205:0x2E4D:word16] = 0x0000
	Mem227[ds_205:0x2E45:word16] = 0x0000
	Mem228[ds_205:0x29FD:word16] = 0x0000
	Mem229[ds_205:0x29FB:word16] = 0x0000
	Mem230[ds_205:0x2A01:word16] = 0x0000
	Mem231[ds_205:0x29FF:word16] = 0x0000
	Mem233[ss:fp - 0x0010:word16] = Mem231[ds_205:0x2E4F:word16]
	Mem236[ss:fp - 0x0014:word16] = 0x0001
	word16 si_237
	selector ds_238
	branch fn0800_5C1A(ds_205, wArg00, out si_237, out ds_238) == 0x0000 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54F3:
	branch Mem236[ds_238:0x2A25:word16] == 0x0002 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_54FA:
	branch Mem236[ds_238:0x2A25:word16] == 0x0007 l0800_5504
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5501:
	si_237 = 0x000A
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5504:
	word16 si_247 = si_237
	branch si_237 != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5508:
	Mem362[ss:fp - 0x0014:word16] = 0x0001
	branch fn0800_5C1A(ds_238, wArg00, out si_247, out ds_238) == 0x0000 l0800_5557
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5557:
	Mem403[ds_238:0x2E4F:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5516:
	branch Mem362[ds_238:0x2A23:word16] == 0x0001 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_551D:
	Mem385[ss:fp - 0x0014:word16] = 0x0010
	word16 ax_388 = fn0800_5C1A(ds_238, wArg00, out si_247, out ds_238)
	branch Mem385[ds_238:0x2A25:word16] != 0x0002 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5530:
	branch Mem385[ds_238:0x2E4F:word16] != 0x0000 l0800_553B
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5537:
	Mem402[ds_238:0x2E4F:word16] = ax_388
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_553B:
	branch Mem385[ds_238:0x2E4F:word16] == ax_388 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5541:
	branch Mem385[ds_238:0x2E4F:word16] == 0x0000 l0800_554B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5548:
	si_247 = 0x000C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_554B:
	branch Mem362[ds_238:0x2E4F:word16] != 0x0000 l0800_555D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5552:
	si_247 = 0x000B
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_555D:
	word16 si_259 = si_247
	branch si_247 != 0x0000 l0800_557C
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5561:
	word16 ax_347 = Mem236[ds_238:0x2A21:word16]
	branch ax_347 == 0x0001 l0800_5570
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5570:
	si_259 = fn0800_55E8(fp - 0x0002, ds_238, out ds_238)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5569:
	branch ax_347 == 0x0002 l0800_5577
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5577:
	si_259 = fn0800_579B(ds_238, out bp_266, out ds_238)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_556E:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_557C:
	Mem268[ds_238:0x2E4F:word16] = Mem236[ss:bp_266 - 0x000E:word16]
	Mem271[ss:fp - 0x0014:word16] = Mem268[ss:bp_266 - 0x0006:word16]
	Mem274[ss:fp - 0x0016:word16] = Mem271[ss:bp_266 - 0x0008:word16]
	selector ds_275
	fn0800_4346(ds_238, wArg00, wArg02, out ds_275)
	Mem281[ss:fp - 0x0014:word16] = Mem274[ss:bp_266 - 0x0002:word16]
	Mem284[ss:fp - 0x0016:word16] = Mem281[ss:bp_266 - 0x0004:word16]
	selector ds_285
	fn0800_4346(ds_275, wArg00, wArg02, out ds_285)
	word16 v40_288 = Mem284[ds_285:0x2A03:word16] + 0x0012
	Mem289[ds_285:0x2A03:word16] = v40_288
	Mem293[ds_285:0x2A05:word16] = Mem289[ds_285:0x2A05:word16] + (v40_288 <u 0x0000)
	Mem296[ss:fp - 0x0014:word16] = 0x0000
	word16 dx_299 = Mem296[ss:bp_266 - 0x000C:word16] + Mem296[ds_285:0x2A03:word16]
	Mem305[ss:fp - 0x0016:word16] = Mem296[ss:bp_266 - 0x000A:word16] + Mem296[ds_285:0x2A05:word16] + (dx_299 <u 0x0000)
	Mem307[ss:fp - 0x0018:word16] = dx_299
	Mem310[ss:fp - 0x001A:word16] = Mem307[ds_285:0x29E5:word16]
	Mem313[ss:fp - 0x001C:word16] = Mem310[ds_285:0x29E3:word16]
	selector ds_317
	fn0800_ACB3(ds_285, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_317)
	branch si_259 == 0x0000 l0800_55D0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D0:
	branch Mem313[ds_317:0x2E4D:word16] == Mem313[ds_317:0x2E4B:word16] l0800_55E1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55E1:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55D9:
	return 0x0006
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_55C9:
	return si_259
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> si:<invalid> ds:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp

l0800_5450:
	return 0x0005
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

l0800_53BF:
	Mem75[ss:fp - 0x0014:word16] = Mem56[ds_51:0x2A09:word16]
	Mem77[ss:fp - 0x0016:word16] = ax_21 & 0x0003
	Mem80[ss:fp - 0x0018:word16] = Mem77[ds_51:0x29E1:word16]
	Mem83[ss:fp - 0x001A:word16] = Mem80[ds_51:0x29DF:word16]
	Mem86[ss:fp - 0x001C:word16] = Mem83[ds_51:0x29E5:word16]
	Mem89[ss:fp - 0x001E:word16] = Mem86[ds_51:0x29E3:word16]
	selector ds_92
	fn0800_3B0A(fp - 0x0002, ds_51, wArg08, wArg0A, out ds_92)
	word16 dx_96 = Mem89[ds_92:0x2A07:word16]
	Mem97[ds_92:0x2A05:word16] = Mem89[ds_92:0x2A09:word16]
	Mem98[ds_92:0x2A03:word16] = dx_96
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:0x08 ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_5374_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):si -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0x0001 -8(fp):0x000F -6(fp):0x0001 -4(fp):0x000F -2(fp):bp



word16 fn0800_55E8(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_55E8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_55E8:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_574B:
	word16 ax_36 = Mem0[ds:0x2A01:word16]
	word16 dx_37 = Mem0[ds:0x29FF:word16]
	branch ax_36 >=u Mem0[ds:0x2A09:word16] l0800_575B
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575B:
	branch ax_36 != Mem0[ds:0x2A09:word16] l0800_5766
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_575D:
	branch dx_37 >=u Mem0[ds:0x2A07:word16] l0800_5766
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5766:
	Mem339[ss:fp - 0x0008:word16] = Mem0[ds:0x29E1:word16]
	Mem342[ss:fp - 0x000A:word16] = Mem339[ds:0x29DF:word16]
	word16 ax_345 = Mem342[ds:0x2E55:word16] - Mem342[ds:0x2E59:word16]
	word16 ax_349 = ax_345 - Mem342[ds:0x2E31:word16]
	Mem354[ss:fp - 0x000C:word16] = 0x0000 - (ax_345 <u 0x0000) - (ax_349 <u 0x0000)
	Mem356[ss:fp - 0x000E:word16] = ax_349
	word16 ax_358 = Mem356[ds:0x2E59:word16] + Mem356[ds:0x2E31:word16]
	Mem362[ss:fp - 0x0010:word16] = Mem356[ds:0x2E5B:word16]
	Mem364[ss:fp - 0x0012:word16] = ax_358
	selector ds_368
	fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_368)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_55E8_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> cl:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> dh:<invalid> Sequence es:bx:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5763:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5758:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_55F1:
	Mem49[ss:fp - 0x0008:word16] = 0x0010
	Mem52[ss:fp - 0x000A:word16] = ds
	Mem55[ss:fp - 0x000C:word16] = 0x290F
	selector ds_59 = fn0800_5A24(fp - 0x0002, ds, wArg00, wArg02, wArg04)
	Mem64[ss:fp - 0x0008:word16] = 0x0010
	Mem66[ss:fp - 0x000A:word16] = ds_59
	Mem69[ss:fp - 0x000C:word16] = 0x284F
	selector ds_70 = fn0800_5A24(fp - 0x0002, ds_59, wArg00, wArg02, wArg04)
	Mem75[ss:fp - 0x0008:word16] = 0x0010
	Mem77[ss:fp - 0x000A:word16] = ds_70
	Mem80[ss:fp - 0x000C:word16] = 0x278F
	selector ds_81 = fn0800_5A24(fp - 0x0002, ds_70, wArg00, wArg02, wArg04)
	Mem86[ss:fp - 0x0008:word16] = 0x0010
	word16 ax_88 = fn0800_5C39(fp - 0x0002, ds_81, wArg00, out ds)
	Mem91[ss:fp - 0x0004:word16] = 0x0000
	Mem92[ss:fp - 0x0006:word16] = ax_88
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> bx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5736:
	word16 ax_111 = Mem92[ss:fp - 0x0006:word16]
	word16 dx_112 = Mem92[ss:fp - 0x0004:word16]
	word16 v11_113 = Mem92[ss:fp - 0x0006:word16] - 0x0001
	Mem114[ss:fp - 0x0006:word16] = v11_113
	Mem118[ss:fp - 0x0004:word16] = Mem114[ss:fp - 0x0004:word16] - (v11_113 <u 0x0000)
	branch (ax_111 | dx_112) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5748:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5633:
	Mem124[ss:fp - 0x0008:word16] = ds
	Mem127[ss:fp - 0x000A:word16] = 0x290F
	word16 ax_129 = fn0800_5A8D(fp - 0x0002, ds, wArg00, wArg02, out ds)
	Mem131[ds:0x2E47:word16] = ax_129
	word16 v17_132 = Mem131[ds:0x29FF:word16] + ax_129
	Mem133[ds:0x29FF:word16] = v17_132
	Mem137[ds:0x2A01:word16] = Mem133[ds:0x2A01:word16] + (v17_132 <u 0x0000)
	branch Mem137[ds:0x2E47:word16] != 0x0000 l0800_5654
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cx:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5654:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5664:
	word16 ax_226 = Mem137[ds:0x2E47:word16]
	Mem228[ds:0x2E47:word16] = Mem137[ds:0x2E47:word16] - 0x0001
	word16 ax_229 = ax_226
	branch ax_226 != 0x0000 l0800_5656
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5656:
	word16 si_324
	word16 di_325
	selector ds_326
	byte al_327 = fn0800_5B15(fp - 0x0002, ds, out si_324, out di_325, out ds_326)
	Mem333[ss:fp - 0x0008:word16] = DPB(ax_226, al_327 ^ Mem228[ds_326:0x2E4F:byte], 0)
	ds = fn0800_5D2F(fp - 0x0002, ds_326)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_566F:
	branch (Mem228[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_5684
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5684:
	Mem322[ds:0x2E4F:word16] = Mem228[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5677:
	ax_229 = Mem228[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
	Mem320[ds:0x2E4F:word16] = ax_229
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5688:
	word16 bx_239 = (word16) Mem228[ds:0x2E6D:segptr32]
	Mem245[ss:fp - 0x0008:word16] = DPB(ax_229, 0x00, 8)
	word16 dx_249 = DPB(dx_112, 0x00, 8)
	word16 dx_257 = Mem245[ss:fp - 0x0008:word16] + (dx_249 << 0x08 <u 0x0000)
	Mem262[ss:fp - 0x0008:word16] = dx_249 << 0x08
	Mem265[ss:fp - 0x000A:word16] = dx_257
	int32 dx_ax_266 = (int32) DPB(bx_239, 0x00, 8)
	word16 ax_267 = (word16) dx_ax_266
	int32 dx_ax_279 = SEQ(Mem265[ss:fp - 0x000A:word16], Mem265[ss:fp - 0x0008:word16] + ax_267) + SEQ(SLICE(dx_ax_266, word16, 16), ax_267)
	word16 dx_284
	Mem287[ss:fp - 0x0008:word16] = fn0800_8C69((word16) dx_ax_279, Mem265[ds:0x2E45:byte], SLICE(dx_ax_279, word16, 16), bp, out dx_284)
	word16 ax_290 = 0x0001 << Mem287[ds:0x2E45:byte]
	Mem293[ss:fp - 0x000A:word16] = dx_284
	int32 dx_ax_294 = (int32) (ax_290 - 0x0001)
	word16 cx_299 = Mem293[ds:0x29FB:word16] & (word16) dx_ax_294
	ui32 ax_dx_309 = SEQ(Mem293[ss:fp - 0x000A:word16], Mem293[ss:fp - 0x0008:word16] + cx_299) + SEQ(Mem293[ds:0x29FD:word16] & SLICE(dx_ax_294, word16, 16), cx_299)
	Mem313[ds:0x29FD:word16] = SLICE(ax_dx_309, word16, 16)
	Mem314[ds:0x29FB:word16] = (word16) ax_dx_309
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> Sequence es:bx:<invalid> ch:<invalid> dh:<invalid> dl:<invalid> Sequence dx:ax:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5651:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> si:<invalid> di:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> Sequence es:bx:<invalid> ds:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56E6:
	branch (Mem137[ss:fp - 0x0006:word16] | Mem137[ss:fp - 0x0004:word16]) == 0x0000 l0800_574B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_56EE:
	Mem166[ss:fp - 0x0008:word16] = ds
	Mem169[ss:fp - 0x000A:word16] = 0x284F
	selector ds_170
	word16 ax_171 = fn0800_5A8D(fp - 0x0002, ds, wArg00, wArg02, out ds_170)
	Mem176[ds_170:0x2E2B:word16] = ax_171 + 0x0001
	Mem178[ss:fp - 0x0008:word16] = ds_170
	Mem181[ss:fp - 0x000A:word16] = 0x278F
	word16 ax_183 = fn0800_5A8D(fp - 0x0002, ds_170, wArg00, wArg02, out ds)
	Mem186[ds:0x2E29:word16] = ax_183 + 0x0002
	word16 v19_187 = Mem186[ds:0x29FF:word16] + (ax_183 + 0x0002)
	Mem188[ds:0x29FF:word16] = v19_187
	Mem192[ds:0x2A01:word16] = Mem188[ds:0x2A01:word16] + (v19_187 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> si:<invalid> di:<invalid> ds:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_572B:
	word16 ax_201 = Mem192[ds:0x2E29:word16]
	Mem203[ds:0x2E29:word16] = Mem192[ds:0x2E29:word16] - 0x0001
	branch ax_201 != 0x0000 l0800_5719
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5719:
	ptr32 es_bx_208 = Mem203[ds:0x2E55:segptr32]
	Mem216[ss:fp - 0x0008:word16] = DPB(ax_201, Mem203[SLICE(es_bx_208, selector, 16):(word16) es_bx_208 - Mem203[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(fp - 0x0002, ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> cl:<invalid> bx:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> si:<invalid> di:<invalid> dl:<invalid> dh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -12(fp):0x278F -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



word16 fn0800_579B(selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_579B_entry:
	*bpOut = bp
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_579B:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_58F2:
	word16 ax_22 = Mem0[ds:0x2A01:word16]
	word16 dx_23 = Mem0[ds:0x29FF:word16]
	branch ax_22 >=u Mem0[ds:0x2A09:word16] l0800_5902
// DataOut: ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5902:
	branch ax_22 != Mem0[ds:0x2A09:word16] l0800_590D
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5904:
	branch dx_23 >=u Mem0[ds:0x2A07:word16] l0800_590D
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_590D:
	Mem285[ss:fp - 0x0002:word16] = Mem0[ds:0x29E1:word16]
	Mem288[ss:fp - 0x0004:word16] = Mem285[ds:0x29DF:word16]
	word16 ax_291 = Mem288[ds:0x2E55:word16] - Mem288[ds:0x2E59:word16]
	word16 ax_295 = ax_291 - Mem288[ds:0x2E31:word16]
	Mem300[ss:fp - 0x0006:word16] = 0x0000 - (ax_291 <u 0x0000) - (ax_295 <u 0x0000)
	Mem302[ss:fp - 0x0008:word16] = ax_295
	word16 ax_304 = Mem302[ds:0x2E59:word16] + Mem302[ds:0x2E31:word16]
	Mem308[ss:fp - 0x000A:word16] = Mem302[ds:0x2E5B:word16]
	Mem310[ss:fp - 0x000C:word16] = ax_304
	selector ds_316
	fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_316)
	return 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

fn0800_579B_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> al:<invalid> ah:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> Sequence es:bx:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_590A:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58FF:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57CF:
	Mem42[ss:fp - 0x0002:word16] = 0x0001
	selector ds_45
	word16 ax_46 = fn0800_5CD9(ds, wArg00, out ds_45)
	branch ax_46 == 0x0000 l0800_579E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_579E:
	word16 si_250
	word16 di_251
	selector ds_252
	byte al_253 = fn0800_5B15(bp, ds_45, out si_250, out di_251, out ds_252)
	Mem259[ss:fp - 0x0002:word16] = DPB(ax_46, al_253 ^ Mem42[ds_252:0x2E4F:byte], 0)
	ds = fn0800_5D2F(bp, ds_252)
	branch (Mem259[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_57C1
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57C1:
	Mem281[ds:0x2E4F:word16] = Mem259[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57B4:
	Mem279[ds:0x2E4F:word16] = Mem259[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57C5:
	word16 v16_267 = Mem259[ds:0x29FF:word16] + 0x0001
	Mem268[ds:0x29FF:word16] = v16_267
	Mem272[ds:0x2A01:word16] = Mem268[ds:0x2A01:word16] + (v16_267 <u 0x0000)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57DD:
	Mem54[ss:fp - 0x0002:word16] = 0x0001
	selector ds_55
	branch fn0800_5CD9(ds_45, wArg00, out ds_55) == 0x0000 l0800_5866
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5866:
	selector ds_163 = fn0800_593F(ds_55)
	branch Mem54[ds_163:0x2E29:word16] != 0x0009 l0800_58B7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58B7:
	bp = fn0800_5975(ds_163, out ds)
	*bpOut = bp
	word16 v28_217 = Mem54[ds:0x29FF:word16] + Mem54[ds:0x2E29:word16]
	Mem218[ds:0x29FF:word16] = v28_217
	Mem222[ds:0x2A01:word16] = Mem218[ds:0x2A01:word16] + (v28_217 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58DA:
	word16 ax_231 = Mem222[ds:0x2E29:word16]
	Mem233[ds:0x2E29:word16] = Mem222[ds:0x2E29:word16] - 0x0001
	branch ax_231 != 0x0000 l0800_58C8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58C8:
	ptr32 es_bx_238 = Mem233[ds:0x2E55:segptr32]
	Mem246[ss:fp - 0x0002:word16] = DPB(ax_231, Mem233[SLICE(es_bx_238, selector, 16):(word16) es_bx_238 - Mem233[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(bp, ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58E5:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5870:
	bp = fn0800_5A0F(ds_163, out ds)
	*bpOut = bp
	word16 v22_169 = Mem54[ds:0x29FF:word16] + Mem54[ds:0x2E47:word16]
	Mem170[ds:0x29FF:word16] = v22_169
	Mem174[ds:0x2A01:word16] = Mem170[ds:0x2A01:word16] + (v22_169 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_588F:
	word16 ax_182 = Mem174[ds:0x2E47:word16]
	Mem184[ds:0x2E47:word16] = Mem174[ds:0x2E47:word16] - 0x0001
	branch ax_182 != 0x0000 l0800_5881
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5881:
	word16 si_201
	word16 di_202
	selector ds_203
	byte al_204 = fn0800_5B15(bp, ds, out si_201, out di_202, out ds_203)
	Mem210[ss:fp - 0x0002:word16] = DPB(ax_182, al_204 ^ Mem184[ds_203:0x2E4F:byte], 0)
	ds = fn0800_5D2F(bp, ds_203)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_589A:
	branch (Mem184[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_58B0
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58B0:
	Mem199[ds:0x2E4F:word16] = Mem184[ds:0x2E4F:word16] >>u 0x0001
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58A2:
	Mem197[ds:0x2E4F:word16] = Mem184[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> ds:<invalid> si:<invalid> di:<invalid> Sequence es:bx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57EB:
	Mem64[ss:fp - 0x0002:word16] = 0x0001
	selector ds_65
	word16 ax_66 = fn0800_5CD9(ds_55, wArg00, out ds_65)
	branch ax_66 != 0x0000 l0800_580A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_580A:
	Mem127[ss:fp - 0x0002:word16] = 0x0001
	selector ds_128
	word16 ax_129 = fn0800_5CD9(ds_65, wArg00, out ds_128)
	branch ax_129 != 0x0000 l0800_5820
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5820:
	word16 si_146
	word16 di_147
	fn0800_5B15(bp, ds_128, out si_146, out di_147, out ds_128)
	Mem153[ds_128:0x2E29:word16] = DPB(ax_129, 0x00, 8) + 0x0008
	branch Mem153[ds_128:0x2E29:word16] != 0x0008 l0800_5835
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5832:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_58E8:
	Mem158[ss:fp - 0x0002:word16] = 0x0001
	fn0800_5CD9(ds_128, wArg00, out ds)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5818:
	Mem145[ds_128:0x2E29:word16] = 0x0003
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5835:
	*bpOut = fn0800_5975(ds_128, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> cl:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_57F9:
	Mem115[ds_65:0x2E29:word16] = 0x0002
	word16 si_116
	word16 di_117
	fn0800_5B15(bp, ds_65, out si_116, out di_117, out ds)
	Mem124[ds:0x2E2B:word16] = DPB(ax_66, 0x00, 8) + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> Sequence es:bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5838:
	word16 v13_82 = Mem64[ds:0x29FF:word16] + Mem64[ds:0x2E29:word16]
	Mem83[ds:0x29FF:word16] = v13_82
	Mem87[ds:0x2A01:word16] = Mem83[ds:0x2A01:word16] + (v13_82 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> cx:<invalid> Sequence es:bx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5858:
	word16 ax_96 = Mem87[ds:0x2E29:word16]
	Mem98[ds:0x2E29:word16] = Mem87[ds:0x2E29:word16] - 0x0001
	branch ax_96 != 0x0000 l0800_5846
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5846:
	ptr32 es_bx_103 = Mem98[ds:0x2E55:segptr32]
	Mem111[ss:fp - 0x0002:word16] = DPB(ax_96, Mem98[SLICE(es_bx_103, selector, 16):(word16) es_bx_103 - Mem98[ds:0x2E2B:word16]:byte], 0)
	ds = fn0800_5D2F(bp, ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>

l0800_5863:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -2(fp):<invalid>



selector fn0800_593F(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_593F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_593F:
	selector ds_6
	word16 ax_7 = fn0800_5CD9(ds, 0x0001, out ds_6)
	Mem11[ds_6:0x2E29:word16] = ax_7 + 0x0004
	Mem14[ss:fp - 0x0002:word16] = 0x0001
	selector ds_17
	branch fn0800_5CD9(ds_6, wArg00, out ds_17) == 0x0000 l0800_5974
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_595D:
	Mem32[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_34 = fn0800_5CD9(ds_17, wArg00, out ds_17)
	Mem41[ds_17:0x2E29:word16] = (Mem32[ds_17:0x2E29:word16] - 0x0001 << 0x0001) + ax_34
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

l0800_5974:
	return ds_17
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

fn0800_593F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001



word16 fn0800_5975(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5975_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5975:
	Mem2[ds:0x2E2B:word16] = 0x0000
	selector ds_17
	word16 ax_8 = fn0800_5CD9(ds, 0x0001, out ds_17)
	word16 ax_10 = ax_8
	branch ax_8 == 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5989:
	Mem37[ss:fp - 0x0002:word16] = 0x0001
	selector ds_40
	word16 ax_41 = fn0800_5CD9(ds_17, wArg00, out ds_40)
	Mem44[ds_40:0x2E2B:word16] = ax_41
	Mem47[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_49 = fn0800_5CD9(ds_40, wArg00, out ds_17)
	ax_10 = ax_49
	branch ax_49 == 0x0000 l0800_59E3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59E3:
	branch Mem47[ds_17:0x2E2B:word16] != 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59EA:
	Mem93[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_95 = fn0800_5CD9(ds_17, wArg00, out ds_17)
	Mem99[ds_17:0x2E2B:word16] = ax_95 + 0x0002
	ax_10 = ax_95 + 0x0002
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

l0800_59A4:
	Mem57[ss:fp - 0x0002:word16] = 0x0001
	selector ds_58
	word16 ax_59 = fn0800_5CD9(ds_17, wArg00, out ds_58)
	Mem67[ds_58:0x2E2B:word16] = (Mem57[ds_58:0x2E2B:word16] << 0x0001) + ax_59 | 0x0004
	Mem70[ss:fp - 0x0002:word16] = 0x0001
	word16 ax_72 = fn0800_5CD9(ds_58, wArg00, out ds_17)
	ax_10 = ax_72
	branch ax_72 != 0x0000 l0800_59FA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001
// LocalsOut: Local -0002(16)

l0800_59CB:
	Mem80[ss:fp - 0x0002:word16] = 0x0001
	ax_10 = fn0800_5CD9(ds_17, wArg00, out ds_17)
	Mem88[ds_17:0x2E2B:word16] = (Mem80[ds_17:0x2E2B:word16] << 0x0001) + ax_10
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

l0800_59FA:
	word16 si_20
	word16 di_21
	selector ds_22
	fn0800_5B15(bp, ds_17, out si_20, out di_21, out ds_22)
	Mem33[ds_22:0x2E2B:word16] = (Mem2[ds_22:0x2E2B:word16] << 0x08) + DPB(ax_10, 0x00, 8) + 0x0001
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001

fn0800_5975_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> ah:0x00 dx:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0001



word16 fn0800_5A0F(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_5A0F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5A0F:
	selector ds_6
	word16 ax_11 = (fn0800_5CD9(ds, 0x0004, out ds_6) << 0x0002) + 0x000C
	Mem13[ds_6:0x2E47:word16] = ax_11
	return bp
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_5A0F_exit:
// DataOut: bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -2(fp):0x0004



selector fn0800_5A24(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_5A24_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_5A24:
	fn0800_43D4(wArg02, wArg04, wArg06)
	selector ds_30
	word16 ax_31 = fn0800_5C39(fp - 0x0002, ds, 0x0005, out ds_30)
	Mem33[ss:fp + 0x0006:word16] = ax_31
	branch ax_31 == 0x0000 l0800_5A89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_5A49:
	branch Mem33[ss:fp + 0x0006:word16] <=u 0x0010 l0800_5A54
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A4F:
	Mem96[ss:fp + 0x0006:word16] = 0x0010
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A54:
	word16 di_56 = 0x0000
	word16 si_58 = Mem33[ss:fp + 0x0002:word16] + 0x000A
	branch 0x0000 >=u Mem33[ss:fp + 0x0006:word16] l0800_5A7A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> es:<invalid> si:<invalid> di:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0005 -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A61:
	Mem85[ss:fp - 0x0008:word16] = 0x0004
	Mem91[Mem85[ss:fp + 0x0004:selector]:si_58:word16] = fn0800_5C39(fp - 0x0002, ds_30, wArg00, out ds_30)
	si_58 = si_58 + 0x000C
	di_56 = di_56 + 0x0001
	branch di_56 <u Mem91[ss:fp + 0x0006:word16] l0800_5A61
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_5A7A:
	Mem70[ss:fp - 0x0008:word16] = Mem33[ss:fp + 0x0006:word16]
	Mem73[ss:fp - 0x000A:word16] = Mem70[ss:fp + 0x0004:word16]
	Mem76[ss:fp - 0x000C:word16] = Mem73[ss:fp + 0x0002:word16]
	fn0800_4550(fp - 0x0002)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

l0800_5A89:
	return ds_30
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>

fn0800_5A24_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid>



word16 fn0800_5A8D(word16 bp, selector ds, word16 wArg02, selector psegArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5A8D_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5A8D:
	word16 wLoc04_14 = 0x0000
	word16 di_16 = wArg02
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5AA5:
	branch Mem0[psegArg04:di_16 + 0x000A:word16] == 0x0000 l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5AAF:
	int32 dx_ax_54 = (int32) ((0x0001 << Mem0[psegArg04:di_16 + 0x000A:byte]) - 0x0001)
	word16 cx_60 = Mem0[ds:0x29FB:word16] & (word16) dx_ax_54
	branch (Mem0[ds:0x29FD:word16] & SLICE(dx_ax_54, word16, 16)) != Mem0[psegArg04:di_16 + 0x0008:word16] l0800_5A9F
// DataOut: bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5ACC:
	branch cx_60 != Mem0[psegArg04:di_16 + 0x0006:word16] l0800_5A9F
// DataOut: bp di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5A9F:
	di_16 = di_16 + 0x000C
	wLoc04_14 = wLoc04_14 + 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Stack +0002(16) Stack +0004(16)

l0800_5AD2:
	selector ds_77
	fn0800_5C39(fp - 0x0002, ds, Mem0[psegArg04:wArg02 + (word16) (wLoc04_14 *s 0x000C) + 0x000A:word16], out ds_77)
	branch Mem0[ss:fp - 0x0004:word16] >=u 0x0002 l0800_5AF8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5AF8:
	Mem107[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16] - 0x0001
	selector ds_109
	return fn0800_5C39(fp - 0x0002, ds_77, wArg00, out ds_109) | 0x0001 << Mem107[ss:fp - 0x0004:byte] - 0x01
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_5AEF:
	return Mem0[ss:fp - 0x0004:word16]
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_5A8D_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> es:<invalid> cl:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



byte fn0800_5B15(word16 bp, selector ds, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: al di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5B15_entry:
	*dsOut = ds
	*diOut = di
	*siOut = si
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0010(16) Local -0014(16)

l0800_5B15:
	word16 dx_10 = Mem0[ds:0x2E71:word16]
	branch Mem0[ds:0x2E73:word16] == Mem0[ds:0x2E6F:word16] l0800_5B2E
// DataOut: bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16) Local -0014(16)

l0800_5B2E:
	branch dx_10 + 0xFFFD == Mem0[ds:0x2E6D:word16] l0800_5B37
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16) Local -0014(16)

l0800_5B37:
	word16 ax_119
	word16 dx_117
	selector ds_82
	word16 ax_83 = fn0800_4194(ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out ds_82)
	word16 ax_97 = fn0800_AD2F(ds_82, DPB(ptrLoc12, Mem0[ds_82:0x29E3:word16], 0), Mem0[ds_82:0x29E5:word16])
	ui32 bx_cx_107 = SEQ(dx_10 + 0xFFFD, ax_83 - ax_97) - SEQ(dx_10 + 0xFFFD, ax_97)
	word16 bx_108 = SLICE(bx_cx_107, word16, 16)
	word16 cx_109 = (word16) bx_cx_107
	branch bx_108 <u 0x0000 l0800_5B76
// DataOut: ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(0)

l0800_5B67:
	branch bx_108 >u 0x0000 l0800_5B6F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(0)

l0800_5B69:
	branch cx_109 <=u 0xFFFD l0800_5B76
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_5B76:
	dx_117 = bx_108
	ax_119 = cx_109
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B6F:
	dx_117 = 0x0000
	ax_119 = 0xFFFD
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5B7C:
	word16 v23_122 = Mem0[ds_82:0x29E5:word16]
	word16 v24_125 = Mem0[ds_82:0x29E3:word16]
	word16 ax_133 = Mem0[ds_82:0x2E73:word16]
	word16 dx_134 = Mem0[ds_82:0x2E71:word16]
	Mem135[ds_82:0x2E6F:word16] = ax_133
	Mem136[ds_82:0x2E6D:word16] = dx_134
	word16 di_141
	selector ds_142
	fn0800_4110(ds_82, dx_134, ax_133, ax_119, dx_117, v24_125, v23_122, out di_141, out ds_142)
	word16 ax_145 = Mem136[ss:fp - 0x0008:word16]
	word16 v26_147 = Mem136[ss:fp - 0x0006:word16] - Mem136[ss:fp - 0x000A:word16]
	Mem148[ss:fp - 0x0006:word16] = v26_147
	word16 dx_151 = Mem148[ss:fp - 0x0006:word16]
	Mem153[ss:fp - 0x0004:word16] = Mem148[ss:fp - 0x0004:word16] - ax_145 - (v26_147 <u 0x0000)
	branch false l0800_5BCB
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBA:
	branch false l0800_5BC1
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BBC:
	branch dx_151 <=u 0x0002 l0800_5BCB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BC1:
	Mem221[ss:fp - 0x0004:word16] = 0x0000
	Mem222[ss:fp - 0x0006:word16] = 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5BCB:
	Mem166[ss:fp - 0x000C:word16] = Mem153[ds_142:0x29E5:word16]
	Mem169[ss:fp - 0x000E:word16] = Mem166[ds_142:0x29E3:word16]
	Mem172[ss:fp - 0x0010:word16] = Mem169[ss:fp - 0x0004:word16]
	Mem175[ss:fp - 0x0012:word16] = Mem172[ss:fp - 0x0006:word16]
	word16 ax_177 = Mem175[ds_142:0x2E71:word16] + Mem175[ss:fp - 0x000A:word16]
	Mem181[ss:fp - 0x0014:word16] = Mem175[ds_142:0x2E73:word16]
	Mem183[ss:fp - 0x0016:word16] = ax_177
	word16 di_190
	selector ds_191
	word16 si_192
	*siOut = fn0800_4110(ds_142, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_190, out ds_191)
	Mem196[ss:fp - 0x000C:word16] = 0x0001
	word16 dx_200 = -Mem196[ss:fp - 0x0006:word16]
	Mem205[ss:fp - 0x000E:word16] = -Mem196[ss:fp - 0x0004:word16] - (dx_200 == 0x0000)
	Mem207[ss:fp - 0x0010:word16] = dx_200
	Mem210[ss:fp - 0x0012:word16] = Mem207[ds_191:0x29E5:word16]
	Mem213[ss:fp - 0x0014:word16] = Mem210[ds_191:0x29E3:word16]
	fn0800_ACB3(ds_191, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5B34:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5B2B:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5C0B:
	ptr32 es_bx_40 = Mem0[ds:0x2E6D:segptr32]
	Mem44[ds:0x2E6D:word16] = Mem0[ds:0x2E6D:word16] + 0x0001
	return Mem44[es_bx_40:byte]
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5B15_exit:
// DataOut: al di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C1A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_5C1A_entry:
	*siOut = si
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C1A:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_5C30
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5C30:
	selector ds_32
	return fn0800_5C39(fp - 0x0002, ds, wArg02, out ds_32)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_5C27:
	selector ds_23
	return fn0800_5CD9(ds, wArg02, out ds_23)
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

fn0800_5C1A_exit:
// DataOut: ax ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> si:<invalid> di:<invalid> cl:<invalid> bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5C39(word16 bp, selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5C39_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5C39:
	word16 si_14 = wArg02
	word16 di_100 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0)

l0800_5CCA:
	word16 si_45 = si_14
	branch si_14 == 0x0000 l0800_5CD1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CD1:
	return di_100
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5C39_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5CCE:
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C4D:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5CA2
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5C54:
	word16 si_92
	word16 di_93
	selector ds_94
	fn0800_5B15(fp - 0x0002, ds, out si_92, out di_93, out ds_94)
	Mem98[ss:fp - 0x0004:word16] = DPB(ax, 0x00, 8)
	fn0800_5B15(fp - 0x0002, ds_94, out si_45, out di_100, out ds)
	Mem105[ss:fp - 0x0006:word16] = DPB(ax, 0x00, 8)
	word16 dx_116
	word16 ax_117 = fn0800_8C69(DPB(ax, 0x00, 8), 0x18, 0x0000, bp, out dx_116)
	word16 ax_131 = ax_117 + (Mem105[ss:fp - 0x0006:word16] << 0x08)
	word16 ax_135 = ax_131 + Mem105[ss:fp - 0x0004:word16]
	Mem140[ds:0x29FD:word16] = dx_116 + DPB((word16) Mem105[ds:0x2E6D:segptr32], 0x00, 8) + (ax_117 <u 0x0000) + (ax_131 <u 0x0000) + (ax_135 <u 0x0000)
	Mem141[ds:0x29FB:word16] = ax_135
	Mem142[ds:0x2E45:word16] = 0x0010
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CA2:
	branch (Mem0[ds:0x29FB:word16] & 0x0001) == 0x0000 l0800_5CB0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CAD:
	di_100 = di_100 | Mem0[ss:fp - 0x0008:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5CB0:
	word16 ax_72 = Mem0[ds:0x29FD:word16]
	word16 dx_78 = __rcr(Mem0[ds:0x29FB:word16], 0x01, cond(ax_72 >>u 0x0001))
	Mem79[ds:0x29FD:word16] = ax_72 >>u 0x0001
	Mem80[ds:0x29FB:word16] = dx_78
	Mem83[ss:fp - 0x0008:word16] = Mem80[ss:fp - 0x0008:word16] << 0x0001
	Mem86[ds:0x2E45:word16] = Mem83[ds:0x2E45:word16] - 0x0001
	ax = ax_72 >>u 0x0001
	si_14 = si_45 - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> Sequence es:bx:<invalid> cl:0x08 bl:<invalid> bh:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> dh:<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)



word16 fn0800_5CD9(selector ds, word16 wArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_5CD9_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_5CD9:
	word16 di_13 = wArg02
	word16 si_14 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_5D25:
	word16 di_31 = di_13
	branch di_13 != 0x0000 l0800_5CE5
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5CE5:
	branch Mem0[ds:0x2E45:word16] != 0x0000 l0800_5D00
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5CEC:
	fn0800_5B15(fp - 0x0002, ds, out si_14, out di_31, out ds)
	Mem84[ds:0x29FD:word16] = 0x0000
	Mem85[ds:0x29FB:word16] = DPB(ax, 0x00, 8)
	Mem86[ds:0x2E45:word16] = 0x0008
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D00:
	si_14 = si_14 << 0x0001
	branch (Mem0[ds:0x29FB:word16] & 0x0080) == 0x0000 l0800_5D0E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D0D:
	si_14 = si_14 + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D0E:
	word16 dx_63 = Mem0[ds:0x29FB:word16]
	ax = __rcl(Mem0[ds:0x29FD:word16], 0x01, cond(dx_63 << 0x0001))
	Mem70[ds:0x29FD:word16] = ax
	Mem71[ds:0x29FB:word16] = dx_63 << 0x0001
	Mem73[ds:0x2E45:word16] = Mem71[ds:0x2E45:word16] - 0x0001
	di_13 = di_31 - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_5D29:
	return si_14
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_5CD9_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_5D2F(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_5D2F_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5D2F:
	word16 ax_110 = Mem0[ds:0x2E5B:word16]
	word16 dx_9 = Mem0[ds:0x2E59:word16]
	branch ax_110 != Mem0[ds:0x2E57:word16] l0800_5D9E
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D40:
	branch dx_9 - 0x0001 != Mem0[ds:0x2E55:word16] l0800_5D9E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5D46:
	word16 dx_67 = 0xFFFF - Mem0[ds:0x2E31:word16]
	selector ds_83
	fn0800_4152(ds, Mem0[ds:0x2E59:word16] + Mem0[ds:0x2E31:word16], Mem0[ds:0x2E5B:word16], dx_67, 0x0000 - (dx_67 <u 0x0000), Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_83)
	Mem88[ss:fp - 0x0004:word16] = Mem0[ds_83:0x2E31:word16]
	word16 ax_90 = Mem88[ds_83:0x2E55:word16] - Mem88[ds_83:0x2E31:word16]
	Mem94[ss:fp - 0x0006:word16] = Mem88[ds_83:0x2E57:word16]
	Mem96[ss:fp - 0x0008:word16] = ax_90
	Mem99[ss:fp - 0x000A:word16] = Mem96[ds_83:0x2E5B:word16]
	Mem102[ss:fp - 0x000C:word16] = Mem99[ds_83:0x2E59:word16]
	ds = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08)
	ax_110 = Mem102[ds:0x2E5B:word16]
	word16 dx_112 = Mem102[ds:0x2E59:word16] + Mem102[ds:0x2E31:word16]
	Mem114[ds:0x2E57:word16] = ax_110
	Mem115[ds:0x2E55:word16] = dx_112
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_5D9E:
	Mem37[Mem0[ds:0x2E55:segptr32]:byte] = Mem0[ss:fp + 0x0002:byte]
	Mem39[ds:0x2E55:word16] = Mem37[ds:0x2E55:word16] + 0x0001
	Mem54[ds:0x2E4D:word16] = Mem39[ds:((DPB(ax_110, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem39[ds:0x2E4D:word16] >>u 0x08
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_5D2F_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_5DCE(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp dx si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_5DCE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_5DCE:
	word16 ax_151
	selector ds_137
	word16 ax_19 = fn0800_4194(ds, wArg02, wArg04, out ds_137)
	branch false l0800_5DEE
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_5DE2:
	branch dx != 0x0000 l0800_5DE9
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_5DE4:
	branch ax_19 <u 0x0400 l0800_5DEE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16)

l0800_5DEE:
	ax_151 = fn0800_4194(ds_137, wArg02, wArg04, out ds_137) & 0xFFFC
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DE9:
	ax_151 = 0x0400
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5DFD:
	word16 si_35 = ax_151
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E5B:
	word16 si_44 = si_35
	branch si_35 != 0x0000 l0800_5E01
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E01:
	Mem65[ss:fp - 0x0006:word16] = Mem0[ss:fp + 0x0004:word16]
	Mem68[ss:fp - 0x0008:word16] = Mem65[ss:fp + 0x0002:word16]
	word16 di_71
	branch fn0800_3E27(fp - 0x0002, ds_137, wArg00, wArg02, out si_44, out di_71, out ds_137) != 0x524E l0800_5E58
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E12:
	Mem88[ss:fp - 0x0006:word16] = Mem68[ss:fp + 0x0004:word16]
	Mem91[ss:fp - 0x0008:word16] = Mem88[ss:fp + 0x0002:word16]
	word16 di_93
	selector ds_94
	branch (fn0800_3E27(fp - 0x0002, ds_137, wArg00, wArg02, out si_44, out di_93, out ds_94) & 0xFF00) != 0x4300 l0800_5E40
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E40:
	Mem124[ss:fp - 0x0006:word16] = 0x0001
	Mem128[ss:fp - 0x0008:word16] = 0xFFFF
	Mem130[ss:fp - 0x000A:word16] = 0xFFFE
	Mem133[ss:fp - 0x000C:word16] = Mem130[ss:fp + 0x0004:word16]
	Mem136[ss:fp - 0x000E:word16] = Mem133[ss:fp + 0x0002:word16]
	fn0800_ACB3(ds_94, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_137)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E58:
	si_35 = si_44 - 0x0002
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5E26:
	Mem102[ss:fp - 0x0006:word16] = 0x0001
	Mem106[ss:fp - 0x0008:word16] = 0xFFFF
	Mem108[ss:fp - 0x000A:word16] = 0xFFFC
	Mem111[ss:fp - 0x000C:word16] = Mem108[ss:fp + 0x0004:word16]
	Mem114[ss:fp - 0x000E:word16] = Mem111[ss:fp + 0x0002:word16]
	selector ds_118
	fn0800_ACB3(ds_94, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_118)
// DataOut: ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):0xFFFE -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

l0800_5E5F:
	return si_44
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_5DCE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> si:<invalid> ah:<invalid> cl:0x08 cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_5E64(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_5E64_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_5E64:
	word16 di_1698 = 0x2202
	word16 si_1697 = 0x4271
	word16 cx_1699 = 0x0004
	word16 dx_1588 = 0x0003
	branch true l0800_5E80
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E7E:
	cx_1699 = 0x0003
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x2202 si:0x4271 cx:0x0004 dx:0x0003 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E80:
	word16 ax_1685 = 0x0000
	byte Z_1694 = cond(0x0000)
	byte C_1695 = false
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x2202 si:0x4271 cx:<invalid> dx:0x0003 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E82:
	branch cx_1699 == 0x0000 l0800_5E84
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E82_1:
	byte SCZO_1692 = cond(Mem0[ds:si_1705:byte] - Mem0[ds:di_1706:byte])
	Z_1694 = SCZO_1692 (alias)
	C_1695 = SCZO_1692 (alias)
	si_1697 = si_1705 + 0x0001
	di_1698 = di_1706 + 0x0001
	cx_1699 = cx_1699 - 0x0001
	word16 si_1705 = si_1697
	word16 di_1706 = di_1698
	branch Mem0[ds:si_1705:byte] != Mem0[ds:di_1706:byte] l0800_5E82
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E84:
	branch Z_1694 l0800_5E8B
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E86:
	word16 ax_1682 = 0x0000 - C_1695
	ax_1685 = ax_1682 - 0xFFFF - (ax_1682 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E8B:
	word16 ax_1664 = ax_1685
	branch ax_1685 == 0x0000 l0800_5EC3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5E8F:
	word16 di_1582 = 0x4271
	word16 si_1583 = 0x2202
	word16 cx_1585 = 0x0004
	dx_1588 = 0xFFFF
	branch true l0800_5EA5
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA1:
	cx_1585 = 0x0003
	dx_1588 = 0x0000
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x4271 si:0x2202 cx:0x0004 dx:0xFFFF ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA5:
	word16 cx_1603 = cx_1585 >>u 0x0001
	cx_1613 = cx_1603
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:0x4271 si:0x2202 cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA7:
	word16 cx_1613
	branch cx_1613 == 0x0000 l0800_5EA9
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA9:
	word16 cx_1623 = cx_1613 * 0x0002 + (cx_1603 <u 0x0000)
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAB:
	branch cx_1623 == 0x0000 l0800_5EAD
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAD:
	word16 cx_1639 = dx_1588
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EB1:
	branch cx_1639 == 0x0000 l0800_5EB3
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EB3:
	fn0800_09A3(fp - 0x0002, ds, out ds)
	ax_1664 = 0x4271
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EC3:
	word16 ax_97 = (DPB(ax_1664, 0x00, 8) << 0x08) + DPB(dx_1588, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_5EED
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> ah:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EDC:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_5EE4
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EDE:
	branch ax_97 <u Mem0[ds:0x2A07:word16] l0800_5EED
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EED:
	branch Mem0[ds:0x2A0D:word16] <u 0x0000 l0800_5F0A
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EF4:
	branch Mem0[ds:0x2A0D:word16] >u 0x0000 l0800_5EFE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EF6:
	branch Mem0[ds:0x2A0B:word16] <=u 0x7FF0 l0800_5F0A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5EFE:
	Mem1558[ds:0x2A0D:word16] = 0x0000
	Mem1559[ds:0x2A0B:word16] = 0x7FF0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F0A:
	Mem144[ss:fp - 0x0040:word16] = 0x0000
	Mem148[ss:fp - 0x0042:word16] = 0x0000
	Mem150[ss:fp - 0x0044:word16] = 0x0002
	Mem153[ss:fp - 0x0046:word16] = Mem150[ds:0x29E5:word16]
	Mem156[ss:fp - 0x0048:word16] = Mem153[ds:0x29E3:word16]
	selector ds_162
	fn0800_ACB3(ds, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_162)
	Mem168[ss:fp - 0x0040:word16] = Mem156[ds_162:0x29E5:word16]
	Mem171[ss:fp - 0x0042:word16] = Mem168[ds_162:0x29E3:word16]
	word16 si_173
	word16 di_174
	selector ds_175
	Mem179[ss:fp - 0x0024:word16] = fn0800_3FAD(fp - 0x0002, ds_162, wArg00, wArg02, out si_173, out di_174, out ds_175)
	Mem182[ss:fp - 0x0040:word16] = Mem179[ds_175:0x29E5:word16]
	Mem185[ss:fp - 0x0042:word16] = Mem182[ds_175:0x29E3:word16]
	word16 si_186
	word16 di_187
	selector ds_188
	word16 ax_189 = fn0800_3FAD(fp - 0x0002, ds_175, wArg00, wArg02, out si_186, out di_187, out ds_188)
	word16 di_1554 = ax_189
	branch Mem185[ss:fp - 0x0024:word16] == 0x0000 l0800_5F48
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5F47:
	di_1554 = ax_189 - 0x0001
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:0x02 dh:0x00 bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_5F48:
	word16 dx_200
	word16 ax_202 = fn0800_8C69(di_1554, 0x09, 0x0000, bp, out dx_200) + Mem185[ss:fp - 0x0024:word16]
	Mem206[ss:fp - 0x0004:word16] = dx_200 + (ax_202 <u 0x0000)
	Mem207[ss:fp - 0x0006:word16] = ax_202
	word16 ax_208 = Mem207[ss:fp - 0x0004:word16]
	word16 dx_1549 = Mem207[ss:fp - 0x0006:word16]
	branch ax_208 <u Mem207[ds_188:0x2A09:word16] l0800_5F7E
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:0x02 dh:0x00 bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F69:
	branch ax_208 >u Mem207[ds_188:0x2A09:word16] l0800_5F71
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F6B:
	branch dx_1549 <=u Mem207[ds_188:0x2A07:word16] l0800_5F7E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F71:
	dx_1549 = Mem207[ds_188:0x2A07:word16]
	Mem1550[ss:fp - 0x0004:word16] = Mem207[ds_188:0x2A09:word16]
	Mem1551[ss:fp - 0x0006:word16] = dx_1549
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_5F7E:
	Mem225[ss:fp - 0x0040:word16] = Mem207[ds_188:0x29E5:word16]
	Mem228[ss:fp - 0x0042:word16] = Mem225[ds_188:0x29E3:word16]
	word16 si_229
	word16 di_230
	selector ds_231
	Mem235[ss:fp - 0x0026:word16] = fn0800_3FAD(fp - 0x0002, ds_188, wArg00, wArg02, out si_229, out di_230, out ds_231)
	Mem238[ss:fp - 0x0040:word16] = Mem235[ds_231:0x29E5:word16]
	Mem241[ss:fp - 0x0042:word16] = Mem238[ds_231:0x29E3:word16]
	word16 si_242
	word16 di_243
	selector ds_244
	Mem248[ss:fp - 0x0028:word16] = fn0800_3FAD(fp - 0x0002, ds_231, wArg00, wArg02, out si_242, out di_243, out ds_244)
	Mem251[ss:fp - 0x0040:word16] = Mem248[ds_244:0x29E5:word16]
	Mem254[ss:fp - 0x0042:word16] = Mem251[ds_244:0x29E3:word16]
	word16 si_255
	word16 di_256
	selector ds_257
	Mem261[ss:fp - 0x002A:word16] = fn0800_3FAD(fp - 0x0002, ds_244, wArg00, wArg02, out si_255, out di_256, out ds_257)
	Mem264[ss:fp - 0x0040:word16] = Mem261[ds_257:0x29E5:word16]
	Mem267[ss:fp - 0x0042:word16] = Mem264[ds_257:0x29E3:word16]
	word16 si_268
	word16 di_269
	selector ds_270
	Mem274[ss:fp - 0x002C:word16] = fn0800_3FAD(fp - 0x0002, ds_257, wArg00, wArg02, out si_268, out di_269, out ds_270)
	Mem277[ss:fp - 0x0040:word16] = Mem274[ds_270:0x29E5:word16]
	Mem280[ss:fp - 0x0042:word16] = Mem277[ds_270:0x29E3:word16]
	word16 si_281
	word16 di_282
	selector ds_283
	Mem287[ss:fp - 0x002E:word16] = fn0800_3FAD(fp - 0x0002, ds_270, wArg00, wArg02, out si_281, out di_282, out ds_283)
	Mem290[ss:fp - 0x0040:word16] = Mem287[ds_283:0x29E5:word16]
	Mem293[ss:fp - 0x0042:word16] = Mem290[ds_283:0x29E3:word16]
	word16 si_294
	word16 di_295
	selector ds_296
	Mem300[ss:fp - 0x0030:word16] = fn0800_3FAD(fp - 0x0002, ds_283, wArg00, wArg02, out si_294, out di_295, out ds_296)
	Mem303[ss:fp - 0x0040:word16] = Mem300[ds_296:0x29E5:word16]
	Mem306[ss:fp - 0x0042:word16] = Mem303[ds_296:0x29E3:word16]
	word16 si_307
	word16 di_308
	selector ds_309
	fn0800_3FAD(fp - 0x0002, ds_296, wArg00, wArg02, out si_307, out di_308, out ds_309)
	Mem315[ss:fp - 0x0040:word16] = Mem306[ds_309:0x29E5:word16]
	Mem318[ss:fp - 0x0042:word16] = Mem315[ds_309:0x29E3:word16]
	word16 si_319
	word16 di_320
	selector ds_321
	Mem325[ss:fp - 0x0032:word16] = fn0800_3FAD(fp - 0x0002, ds_309, wArg00, wArg02, out si_319, out di_320, out ds_321)
	Mem328[ss:fp - 0x0040:word16] = Mem325[ds_321:0x29E5:word16]
	Mem331[ss:fp - 0x0042:word16] = Mem328[ds_321:0x29E3:word16]
	word16 si_332
	word16 di_333
	selector ds_334
	Mem338[ss:fp - 0x0034:word16] = fn0800_3FAD(fp - 0x0002, ds_321, wArg00, wArg02, out si_332, out di_333, out ds_334)
	Mem341[ss:fp - 0x0040:word16] = Mem338[ds_334:0x29E5:word16]
	Mem344[ss:fp - 0x0042:word16] = Mem341[ds_334:0x29E3:word16]
	word16 si_345
	word16 di_346
	selector ds_347
	Mem351[ss:fp - 0x0036:word16] = fn0800_3FAD(fp - 0x0002, ds_334, wArg00, wArg02, out si_345, out di_346, out ds_347)
	Mem354[ss:fp - 0x0040:word16] = Mem351[ds_347:0x29E5:word16]
	Mem357[ss:fp - 0x0042:word16] = Mem354[ds_347:0x29E3:word16]
	word16 si_358
	word16 di_359
	selector ds_360
	word16 ax_361 = fn0800_3FAD(fp - 0x0002, ds_347, wArg00, wArg02, out si_358, out di_359, out ds_360)
	Mem365[ss:fp - 0x0040:word16] = Mem357[ds_360:0x29E1:word16]
	Mem368[ss:fp - 0x0042:word16] = Mem365[ds_360:0x29DF:word16]
	Mem382[ss:fp - 0x0044:word16] = 0x0000
	Mem384[ss:fp - 0x0046:word16] = (DPB(ax_361, 0x00, 8) << 0x08) + DPB(dx_1549, 0x00, 8)
	Mem386[ss:fp - 0x0048:word16] = ds_360
	Mem389[ss:fp - 0x004A:word16] = 0x2E77
	selector ds_1498
	fn0800_4152(ds_360, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_1498)
	word16 dx_1211 = 0x0000
	word16 ax_1280 = 0x2E77
	branch Mem389[ss:fp - 0x0026:word16] != 0x0000 l0800_6064
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6064:
	Mem1213[ss:fp - 0x0040:word16] = 0x0000
	Mem1215[ss:fp - 0x0042:word16] = 0xFFFF
	selector ds_1216
	fn0800_4311(fp - 0x0002, ds_1498, wArg00, wArg02, out ds_1216)
	Mem1219[ss:fp - 0x000C:word16] = 0xFFFF
	Mem1220[ss:fp - 0x000E:word16] = 0x0000
	Mem1225[ss:fp - 0x0040:word16] = 0x0000
	Mem1227[ss:fp - 0x0042:word16] = 0x0000
	Mem1230[ss:fp - 0x0044:word16] = Mem1227[ss:fp - 0x0036:word16]
	Mem1233[ss:fp - 0x0046:word16] = Mem1230[ds_1216:0x29E5:word16]
	Mem1236[ss:fp - 0x0048:word16] = Mem1233[ds_1216:0x29E3:word16]
	selector ds_1237
	fn0800_ACB3(ds_1216, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1237)
	Mem1244[ss:fp - 0x0038:word16] = Mem1236[ss:fp - 0x000E:word16]
	dx_1211 = 0xFFFF
	word16 si_1240 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_60D6:
	branch si_1240 != Mem1244[ss:fp - 0x0026:word16] l0800_6096
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6096:
	Mem1504[ss:fp - 0x0040:word16] = Mem1244[ds_1237:0x29E5:word16]
	Mem1507[ss:fp - 0x0042:word16] = Mem1504[ds_1237:0x29E3:word16]
	word16 si_1508
	word16 di_1509
	selector ds_1510
	Mem1514[ss:fp - 0x0024:word16] = fn0800_3FAD(fp - 0x0002, ds_1237, wArg00, wArg02, out si_1508, out di_1509, out ds_1510)
	Mem1517[ss:fp - 0x0040:word16] = Mem1514[ds_1510:0x29E5:word16]
	Mem1520[ss:fp - 0x0042:word16] = Mem1517[ds_1510:0x29E3:word16]
	word16 si_1521
	word16 di_1522
	word16 dx_1531
	word16 ax_1533 = fn0800_8C69(fn0800_3FAD(fp - 0x0002, ds_1510, wArg00, wArg02, out si_1521, out di_1522, out ds_1237), 0x04, 0x0000, bp, out dx_1531) + Mem1520[ss:fp - 0x0024:word16]
	dx_1211 = dx_1531 + (ax_1533 <u 0x0000)
	selector es_1537 = Mem1520[ss:fp - 0x000C:selector]
	word16 bx_1538 = Mem1520[ss:fp - 0x0038:word16]
	Mem1539[es_1537:bx_1538 + 0x0002:word16] = dx_1211
	Mem1540[es_1537:bx_1538:word16] = ax_1533
	Mem1542[ss:fp - 0x0038:word16] = Mem1540[ss:fp - 0x0038:word16] + 0x0004
	si_1240 = si_1521 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_60DB:
	Mem1260[ss:fp - 0x0040:word16] = 0x667B
	Mem1263[ss:fp - 0x0042:word16] = 0x0004
	Mem1266[ss:fp - 0x0044:word16] = Mem1263[ss:fp - 0x0026:word16]
	Mem1269[ss:fp - 0x0046:word16] = Mem1266[ss:fp - 0x000C:word16]
	Mem1272[ss:fp - 0x0048:word16] = Mem1269[ss:fp - 0x000E:word16]
	selector ds_1273 = fn0800_B95E(ds_1237, wArg00, wArg02, wArg04, wArg06, wArg08)
	word16 di_1276 = Mem1272[ss:fp - 0x000E:word16]
	ax_1280 = -false
	Mem1283[ss:fp - 0x003A:word16] = ax_1280
	word16 si_1275 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_620C:
	branch si_1275 == Mem1283[ss:fp - 0x0026:word16] l0800_6214
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6214:
	Mem1494[ss:fp - 0x0040:word16] = Mem1283[ss:fp - 0x000C:word16]
	Mem1497[ss:fp - 0x0042:word16] = Mem1494[ss:fp - 0x000E:word16]
	fn0800_4346(ds_1273, wArg00, wArg02, out ds_1498)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6211:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6104:
	selector es_1303 = Mem1283[ss:fp - 0x000C:selector]
	word16 ax_1304 = Mem1283[es_1303:di_1276 + 0x0002:word16]
	word16 dx_1305 = Mem1283[es_1303:di_1276:word16]
	Mem1306[ss:fp - 0x0014:word16] = ax_1304
	Mem1307[ss:fp - 0x0016:word16] = dx_1305
	Mem1312[ss:fp - 0x0010:word16] = ax_1304 & 0x000F
	Mem1313[ss:fp - 0x0012:word16] = dx_1305 & 0xFFF0
	Mem1316[ss:fp - 0x0040:word16] = Mem1313[ds_1273:0x29E1:word16]
	Mem1319[ss:fp - 0x0042:word16] = Mem1316[ds_1273:0x29DF:word16]
	Mem1323[ss:fp - 0x0044:word16] = DPB(ax_1304 & 0x000F, 0x00, 0)
	selector ds_1324
	fn0800_4047(ds_1273, bArg00, ptrArg02, wArg04, out ds_1324)
	Mem1330[ss:fp - 0x0040:word16] = Mem1323[ds_1324:0x29E1:word16]
	Mem1333[ss:fp - 0x0042:word16] = Mem1330[ds_1324:0x29DF:word16]
	word16 dx_1337
	Mem1340[ss:fp - 0x0044:word16] = fn0800_8CAA(Mem1333[ss:fp - 0x0012:word16], 0x04, Mem1333[ss:fp - 0x0010:word16], bp, out dx_1337)
	selector ds_1341
	word16 di_1342 = fn0800_40BF(fp - 0x0002, ds_1324, bArg00, wArg02, wArg04, out ds_1341)
	Mem1345[ss:fp - 0x0024:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6150:
	selector es_1356 = Mem1345[ss:fp - 0x000C:selector]
	word16 dx_1359 = Mem1345[es_1356:di_1342:word16] - Mem1345[ss:fp - 0x0012:word16]
	word16 ax_1362 = Mem1345[es_1356:di_1342 + 0x0002:word16] - Mem1345[ss:fp - 0x0010:word16] - (dx_1359 <u 0x0000)
	Mem1363[ss:fp - 0x0018:word16] = ax_1362
	Mem1364[ss:fp - 0x001A:word16] = dx_1359
	word16 v101_1365 = Mem1364[ss:fp - 0x0012:word16] + dx_1359
	Mem1366[ss:fp - 0x0012:word16] = v101_1365
	Mem1370[ss:fp - 0x0010:word16] = Mem1366[ss:fp - 0x0010:word16] + ax_1362 + (v101_1365 <u 0x0000)
	branch Mem1370[ss:fp - 0x0018:word16] >u 0x0000 l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6172:
	branch Mem1370[ss:fp - 0x0018:word16] != 0x0000 l0800_617B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6174:
	branch Mem1370[ss:fp - 0x001A:word16] >u 0x00FF l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_617B:
	word16 dx_1450 = Mem1370[ss:fp - 0x0012:word16] - Mem1370[ss:fp - 0x0016:word16]
	word16 ax_1456 = Mem1370[ss:fp - 0x0010:word16] - Mem1370[ss:fp - 0x0014:word16] - (dx_1450 <u 0x0000)
	branch false l0800_61B9
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_618B:
	branch false l0800_6192
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_618D:
	branch dx_1450 >=u 0xFFF0 l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6192:
	branch Mem1370[ss:fp - 0x0024:word16] == 0x00FF l0800_61B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6199:
	Mem1470[ss:fp - 0x0040:word16] = Mem1370[ds_1341:0x29E1:word16]
	Mem1473[ss:fp - 0x0042:word16] = Mem1470[ds_1341:0x29DF:word16]
	Mem1477[ss:fp - 0x0044:word16] = DPB(ax_1456, Mem1473[ss:fp - 0x001A:byte], 0)
	word16 di_1479 = fn0800_4047(ds_1341, bArg00, ptrArg02, wArg04, out ds_1341)
	Mem1482[ss:fp - 0x0024:word16] = Mem1477[ss:fp - 0x0024:word16] + 0x0001
	di_1342 = di_1479 + 0x0004
	si_1275 = si_1275 + 0x0001
	branch si_1275 != Mem1482[ss:fp - 0x0026:word16] l0800_6150
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_61B9:
	Mem1389[ss:fp - 0x0040:word16] = 0x0001
	word16 ax_1393 = -(Mem1389[ss:fp - 0x0024:word16] + 0x0003)
	Mem1398[ss:fp - 0x0042:word16] = Mem1389[ss:fp - 0x003A:word16] - (ax_1393 == 0x0000)
	Mem1400[ss:fp - 0x0044:word16] = ax_1393
	Mem1403[ss:fp - 0x0046:word16] = Mem1400[ds_1341:0x29E1:word16]
	Mem1406[ss:fp - 0x0048:word16] = Mem1403[ds_1341:0x29DF:word16]
	selector ds_1407
	word16 ax_1408 = fn0800_ACB3(ds_1341, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1407)
	Mem1413[ss:fp - 0x0040:word16] = Mem1406[ds_1407:0x29E1:word16]
	Mem1416[ss:fp - 0x0042:word16] = Mem1413[ds_1407:0x29DF:word16]
	Mem1420[ss:fp - 0x0044:word16] = DPB(ax_1408, Mem1416[ss:fp - 0x0024:byte], 0)
	selector ds_1421
	di_1276 = fn0800_4047(ds_1407, bArg00, ptrArg02, wArg04, out ds_1421)
	Mem1426[ss:fp - 0x0040:word16] = 0x0001
	word16 ax_1427 = Mem1426[ss:fp - 0x0024:word16]
	Mem1435[ss:fp - 0x0042:word16] = ax_1427 <u 0x0002
	Mem1437[ss:fp - 0x0044:word16] = ax_1427 + 0x0002
	Mem1440[ss:fp - 0x0046:word16] = Mem1437[ds_1421:0x29E1:word16]
	Mem1443[ss:fp - 0x0048:word16] = Mem1440[ds_1421:0x29DF:word16]
	dx_1211 = ax_1427 <u 0x0002
	ax_1280 = fn0800_ACB3(ds_1421, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1273)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6061:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6220:
	Mem414[ss:fp - 0x0040:word16] = Mem389[ds_1498:0x29E1:word16]
	Mem417[ss:fp - 0x0042:word16] = Mem414[ds_1498:0x29DF:word16]
	Mem421[ss:fp - 0x0044:word16] = DPB(ax_1280, 0x00, 0)
	selector ds_1198
	fn0800_4047(ds_1498, bArg00, ptrArg02, wArg04, out ds_1198)
	Mem430[ss:fp - 0x0040:word16] = Mem421[ds_1198:0x29E1:word16]
	Mem433[ss:fp - 0x0042:word16] = Mem430[ds_1198:0x29DF:word16]
	ui32 dx_ax_437 = SEQ(dx_1211, fn0800_AD2F(ds_1198, ptrArg00, wArg02) + 0xFFE0)
	Mem443[ss:fp - 0x001C:word16] = SLICE(dx_ax_437 + 0x00FFFFE0, word16, 16)
	Mem444[ss:fp - 0x001E:word16] = (word16) (dx_ax_437 + 0x00FFFFE0)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6266:
	word16 ax_450 = Mem444[ss:fp - 0x001E:word16]
	branch (ax_450 & 0x000F) != 0x0000 l0800_624D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_624D:
	Mem1190[ss:fp - 0x0040:word16] = Mem444[ds_1198:0x29E1:word16]
	Mem1193[ss:fp - 0x0042:word16] = Mem1190[ds_1198:0x29DF:word16]
	Mem1197[ss:fp - 0x0044:word16] = DPB(ax_450 & 0x000F, 0x00, 0)
	fn0800_4047(ds_1198, bArg00, ptrArg02, wArg04, out ds_1198)
	word16 v163_1201 = Mem1197[ss:fp - 0x001E:word16] + 0x0001
	Mem1202[ss:fp - 0x001E:word16] = v163_1201
	Mem1206[ss:fp - 0x001C:word16] = Mem1202[ss:fp - 0x001C:word16] + (v163_1201 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6271:
	word16 v64_459 = Mem444[ss:fp - 0x0006:word16] - (Mem444[ss:fp - 0x0028:word16] << 0x04)
	Mem460[ss:fp - 0x0006:word16] = v64_459
	Mem464[ss:fp - 0x0004:word16] = Mem460[ss:fp - 0x0004:word16] - (v64_459 <u 0x0000)
	Mem467[ss:fp - 0x0040:word16] = 0x0000
	word16 ax_468 = Mem467[ss:fp - 0x0028:word16]
	Mem474[ss:fp - 0x0042:word16] = 0x0000
	Mem476[ss:fp - 0x0044:word16] = ax_468 << 0x04
	Mem479[ss:fp - 0x0046:word16] = Mem476[ds_1198:0x29E5:word16]
	Mem482[ss:fp - 0x0048:word16] = Mem479[ds_1198:0x29E3:word16]
	selector ds_483
	fn0800_ACB3(ds_1198, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_483)
	Mem489[ss:fp - 0x0040:word16] = Mem482[ss:fp - 0x0004:word16]
	Mem492[ss:fp - 0x0042:word16] = Mem489[ss:fp - 0x0006:word16]
	Mem495[ss:fp - 0x0044:word16] = Mem492[ss:fp - 0x0004:word16]
	Mem498[ss:fp - 0x0046:word16] = Mem495[ss:fp - 0x0006:word16]
	selector ds_499 = fn0800_75EA(fp - 0x0002, ds_483, wArg00, wArg02, wArg04, wArg06)
	Mem505[ss:fp - 0x0040:word16] = 0x0000
	Mem508[ss:fp - 0x0042:word16] = 0x0000
	Mem510[ss:fp - 0x0044:word16] = 0x0020
	Mem513[ss:fp - 0x0046:word16] = Mem510[ds_499:0x29E1:word16]
	Mem516[ss:fp - 0x0048:word16] = Mem513[ds_499:0x29DF:word16]
	selector ds_517
	fn0800_ACB3(ds_499, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_517)
	Mem523[ss:fp - 0x0040:word16] = Mem516[ds_517:0x29E1:word16]
	Mem526[ss:fp - 0x0042:word16] = Mem523[ds_517:0x29DF:word16]
	Mem529[ss:fp - 0x0044:word16] = Mem526[ss:fp - 0x0032:word16]
	selector ds_530
	fn0800_40BF(fp - 0x0002, ds_517, bArg00, wArg02, wArg04, out ds_530)
	Mem536[ss:fp - 0x0040:word16] = Mem529[ds_530:0x29E1:word16]
	Mem539[ss:fp - 0x0042:word16] = Mem536[ds_530:0x29DF:word16]
	Mem542[ss:fp - 0x0044:word16] = Mem539[ss:fp - 0x0034:word16]
	selector ds_543
	fn0800_40BF(fp - 0x0002, ds_530, bArg00, wArg02, wArg04, out ds_543)
	Mem549[ss:fp - 0x0040:word16] = Mem542[ds_543:0x29E1:word16]
	Mem552[ss:fp - 0x0042:word16] = Mem549[ds_543:0x29DF:word16]
	Mem555[ss:fp - 0x0044:word16] = Mem552[ss:fp - 0x0030:word16]
	selector ds_556
	fn0800_40BF(fp - 0x0002, ds_543, bArg00, wArg02, wArg04, out ds_556)
	Mem562[ss:fp - 0x0040:word16] = Mem555[ds_556:0x29E1:word16]
	Mem565[ss:fp - 0x0042:word16] = Mem562[ds_556:0x29DF:word16]
	Mem568[ss:fp - 0x0044:word16] = Mem565[ss:fp - 0x002E:word16]
	selector ds_569
	fn0800_40BF(fp - 0x0002, ds_556, bArg00, wArg02, wArg04, out ds_569)
	Mem575[ss:fp - 0x0040:word16] = Mem568[ds_569:0x29E1:word16]
	Mem578[ss:fp - 0x0042:word16] = Mem575[ds_569:0x29DF:word16]
	Mem581[ss:fp - 0x0044:word16] = Mem578[ss:fp - 0x001E:word16]
	selector ds_582
	fn0800_40BF(fp - 0x0002, ds_569, bArg00, wArg02, wArg04, out ds_582)
	word16 dx_589
	Mem591[ss:fp - 0x0024:word16] = fn0800_8CAA(Mem581[ds_582:0x2A03:word16], 0x04, Mem581[ds_582:0x2A05:word16], bp, out dx_589)
	branch (Mem591[ds_582:0x2A03:word16] & 0x000F) == 0x0000 l0800_6333
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6330:
	Mem1186[ss:fp - 0x0024:word16] = Mem591[ss:fp - 0x0024:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6333:
	Mem601[ss:fp - 0x0040:word16] = Mem591[ds_582:0x29E1:word16]
	Mem604[ss:fp - 0x0042:word16] = Mem601[ds_582:0x29DF:word16]
	Mem607[ss:fp - 0x0044:word16] = Mem604[ss:fp - 0x0024:word16]
	selector ds_608
	fn0800_40BF(fp - 0x0002, ds_582, bArg00, wArg02, wArg04, out ds_608)
	Mem614[ss:fp - 0x0040:word16] = Mem607[ds_608:0x29E1:word16]
	Mem617[ss:fp - 0x0042:word16] = Mem614[ds_608:0x29DF:word16]
	word16 dx_621
	Mem627[ss:fp - 0x0044:word16] = Mem617[ss:fp - 0x0024:word16] + fn0800_8CAA(Mem617[ss:fp - 0x001E:word16], 0x04, Mem617[ss:fp - 0x001C:word16], bp, out dx_621)
	selector ds_628
	fn0800_40BF(fp - 0x0002, ds_608, bArg00, wArg02, wArg04, out ds_628)
	word16 dx_633 = Mem627[ss:fp - 0x0006:word16] - Mem627[ds_628:0x2A03:word16]
	word16 dx_637 = dx_633 + Mem627[ds_628:0x4E88:word16]
	ui32 ax_dx_642 = SEQ(Mem627[ss:fp - 0x0004:word16] - Mem627[ds_628:0x2A05:word16] - (dx_633 <u 0x0000) + Mem627[ds_628:0x4E8A:word16] + (dx_637 <u 0x0000), dx_637 + 0x0080)
	Mem647[ss:fp - 0x0008:word16] = SLICE(ax_dx_642 + 0x00000080, word16, 16)
	Mem648[ss:fp - 0x000A:word16] = (word16) (ax_dx_642 + 0x00000080)
	branch Mem648[ds_628:0x2A1D:word16] == 0x0000 l0800_6398
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6398:
	branch Mem648[ds_628:0x2A21:word16] != 0x0001 l0800_63A8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_639F:
	word16 v153_1178 = Mem648[ss:fp - 0x000A:word16] + 0x0180
	Mem1179[ss:fp - 0x000A:word16] = v153_1178
	Mem1183[ss:fp - 0x0008:word16] = Mem1179[ss:fp - 0x0008:word16] + (v153_1178 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_638D:
	word16 v95_1169 = Mem648[ss:fp - 0x000A:word16] + 0x0200
	Mem1170[ss:fp - 0x000A:word16] = v95_1169
	Mem1174[ss:fp - 0x0008:word16] = Mem1170[ss:fp - 0x0008:word16] + (v95_1169 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_63A8:
	Mem653[ss:fp - 0x0040:word16] = 0x0000
	word16 bx_659 = Mem653[ss:fp - 0x0006:word16] + (Mem653[ss:fp - 0x0028:word16] << 0x04)
	word16 dx_662 = Mem653[ss:fp - 0x0004:word16] + (bx_659 <u 0x0000)
	Mem665[ss:fp - 0x0042:word16] = dx_662
	Mem667[ss:fp - 0x0044:word16] = bx_659
	Mem670[ss:fp - 0x0046:word16] = Mem667[ds_628:0x29E5:word16]
	Mem673[ss:fp - 0x0048:word16] = Mem670[ds_628:0x29E3:word16]
	selector ds_674
	fn0800_ACB3(ds_628, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_674)
	Mem679[ss:fp - 0x0040:word16] = 0x0002
	Mem684[ss:fp - 0x0042:word16] = 0x0000
	Mem686[ss:fp - 0x0044:word16] = 0x0000
	Mem689[ss:fp - 0x0046:word16] = Mem686[ds_674:0x29E1:word16]
	Mem692[ss:fp - 0x0048:word16] = Mem689[ds_674:0x29DF:word16]
	selector ds_693
	fn0800_ACB3(ds_674, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_693)
	Mem699[ss:fp - 0x0040:word16] = Mem692[ds_693:0x29E1:word16]
	Mem702[ss:fp - 0x0042:word16] = Mem699[ds_693:0x29DF:word16]
	word16 ax_703 = fn0800_AD2F(ds_693, ptrArg00, wArg02)
	Mem705[ss:fp - 0x0020:word16] = dx_662
	Mem706[ss:fp - 0x0022:word16] = ax_703
	word16 bx_712 = Mem706[ds_693:0x2A07:word16] - Mem706[ss:fp - 0x0006:word16]
	word16 bx_716 = bx_712 - (Mem706[ss:fp - 0x0028:word16] << 0x04)
	Mem722[ss:fp - 0x0040:word16] = Mem706[ds_693:0x2A09:word16] - Mem706[ss:fp - 0x0004:word16] - (bx_712 <u 0x0000) - (bx_716 <u 0x0000)
	Mem724[ss:fp - 0x0042:word16] = bx_716
	Mem727[ss:fp - 0x0044:word16] = Mem724[ds_693:0x29E1:word16]
	Mem730[ss:fp - 0x0046:word16] = Mem727[ds_693:0x29DF:word16]
	Mem733[ss:fp - 0x0048:word16] = Mem730[ds_693:0x29E5:word16]
	Mem736[ss:fp - 0x004A:word16] = Mem733[ds_693:0x29E3:word16]
	selector ds_737
	fn0800_3B0A(fp - 0x0002, ds_693, wArg08, wArg0A, out ds_737)
	Mem744[ss:fp - 0x0024:word16] = Mem736[ss:fp - 0x0022:word16] & 0x01FF
	word16 dx_748
	fn0800_8CAA(Mem744[ss:fp - 0x0022:word16], 0x09, Mem744[ss:fp - 0x0020:word16], bp, out dx_748)
	branch Mem744[ss:fp - 0x0024:word16] == 0x0000 l0800_6446
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6445:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6446:
	Mem757[ss:fp - 0x0040:word16] = 0x0000
	Mem760[ss:fp - 0x0042:word16] = 0x0000
	Mem762[ss:fp - 0x0044:word16] = 0x0002
	Mem765[ss:fp - 0x0046:word16] = Mem762[ds_737:0x29E1:word16]
	Mem768[ss:fp - 0x0048:word16] = Mem765[ds_737:0x29DF:word16]
	selector ds_769
	fn0800_ACB3(ds_737, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_769)
	Mem775[ss:fp - 0x0040:word16] = Mem768[ds_769:0x29E1:word16]
	Mem778[ss:fp - 0x0042:word16] = Mem775[ds_769:0x29DF:word16]
	Mem781[ss:fp - 0x0044:word16] = Mem778[ss:fp - 0x0024:word16]
	selector ds_782
	word16 di_783 = fn0800_40BF(fp - 0x0002, ds_769, bArg00, wArg02, wArg04, out ds_782)
	Mem788[ss:fp - 0x0040:word16] = Mem781[ds_782:0x29E1:word16]
	Mem791[ss:fp - 0x0042:word16] = Mem788[ds_782:0x29DF:word16]
	Mem793[ss:fp - 0x0044:word16] = di_783
	selector ds_1163
	fn0800_40BF(fp - 0x0002, ds_782, bArg00, wArg02, wArg04, out ds_1163)
	branch Mem793[ds_1163:0x2A1D:word16] == 0x0000 l0800_64B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6483:
	Mem1126[ss:fp - 0x0040:word16] = 0x0000
	Mem1129[ss:fp - 0x0042:word16] = 0x0000
	Mem1131[ss:fp - 0x0044:word16] = 0x002E
	Mem1134[ss:fp - 0x0046:word16] = Mem1131[ds_1163:0x29E1:word16]
	Mem1137[ss:fp - 0x0048:word16] = Mem1134[ds_1163:0x29DF:word16]
	selector ds_1138
	fn0800_ACB3(ds_1163, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_1138)
	Mem1144[ss:fp - 0x0040:word16] = Mem1137[ds_1138:0x29E1:word16]
	Mem1147[ss:fp - 0x0042:word16] = Mem1144[ds_1138:0x29DF:word16]
	Mem1150[ss:fp - 0x0044:word16] = Mem1147[ss:fp - 0x0024:word16]
	selector ds_1151
	word16 di_1152 = fn0800_40BF(fp - 0x0002, ds_1138, bArg00, wArg02, wArg04, out ds_1151)
	Mem1157[ss:fp - 0x0040:word16] = Mem1150[ds_1151:0x29E1:word16]
	Mem1160[ss:fp - 0x0042:word16] = Mem1157[ds_1151:0x29DF:word16]
	Mem1162[ss:fp - 0x0044:word16] = di_1152
	fn0800_40BF(fp - 0x0002, ds_1151, bArg00, wArg02, wArg04, out ds_1163)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_64B9:
	Mem805[ss:fp - 0x0040:word16] = 0x0000
	Mem808[ss:fp - 0x0042:word16] = 0x0000
	Mem810[ss:fp - 0x0044:word16] = 0x0018
	Mem813[ss:fp - 0x0046:word16] = Mem810[ds_1163:0x29E1:word16]
	Mem816[ss:fp - 0x0048:word16] = Mem813[ds_1163:0x29DF:word16]
	selector ds_817
	word16 ax_818 = fn0800_ACB3(ds_1163, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_817)
	Mem822[ss:fp - 0x0040:word16] = Mem816[ds_817:0x29E1:word16]
	Mem825[ss:fp - 0x0042:word16] = Mem822[ds_817:0x29DF:word16]
	Mem838[ss:fp - 0x0044:word16] = (DPB(ax_818, 0x00, 8) << 0x08) - 0x0008
	selector ds_839
	fn0800_40BF(fp - 0x0002, ds_817, bArg00, wArg02, wArg04, out ds_839)
	Mem846[ss:fp - 0x0040:word16] = 0x0000
	Mem849[ss:fp - 0x0042:word16] = 0x0000
	Mem851[ss:fp - 0x0044:word16] = 0x001C
	Mem854[ss:fp - 0x0046:word16] = Mem851[ds_839:0x29E1:word16]
	Mem857[ss:fp - 0x0048:word16] = Mem854[ds_839:0x29DF:word16]
	selector ds_858
	fn0800_ACB3(ds_839, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_858)
	Mem864[ss:fp - 0x0040:word16] = Mem857[ds_858:0x29E1:word16]
	Mem867[ss:fp - 0x0042:word16] = Mem864[ds_858:0x29DF:word16]
	Mem870[ss:fp - 0x0044:word16] = Mem867[ss:fp - 0x002A:word16]
	selector ds_871
	fn0800_40BF(fp - 0x0002, ds_858, bArg00, wArg02, wArg04, out ds_871)
	Mem877[ss:fp - 0x0040:word16] = Mem870[ds_871:0x29E1:word16]
	Mem880[ss:fp - 0x0042:word16] = Mem877[ds_871:0x29DF:word16]
	Mem883[ss:fp - 0x0044:word16] = Mem880[ss:fp - 0x002C:word16]
	selector ds_884
	fn0800_40BF(fp - 0x0002, ds_871, bArg00, wArg02, wArg04, out ds_884)
	Mem891[ss:fp - 0x0040:word16] = 0x0000
	Mem894[ss:fp - 0x0042:word16] = 0x0000
	Mem896[ss:fp - 0x0044:word16] = 0x000A
	Mem899[ss:fp - 0x0046:word16] = Mem896[ds_884:0x29E1:word16]
	Mem902[ss:fp - 0x0048:word16] = Mem899[ds_884:0x29DF:word16]
	selector ds_903
	fn0800_ACB3(ds_884, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_903)
	ui32 ax_cx_919 = SEQ(Mem902[ss:fp - 0x0020:word16], Mem902[ss:fp - 0x0022:word16] - 0x0020)
	word16 bx_911 = Mem902[ss:fp - 0x0006:word16] + (Mem902[ss:fp - 0x002A:word16] << 0x04)
	word16 cx_924 = (word16) (ax_cx_919 - 0x00000020) + Mem902[ss:fp - 0x000A:word16]
	word16 dx_914 = Mem902[ss:fp - 0x0004:word16] + (bx_911 <u 0x0000)
	word16 ax_928 = SLICE(ax_cx_919 - 0x00000020, word16, 16) + Mem902[ss:fp - 0x0008:word16] + (cx_924 <u 0x0000)
	branch dx_914 <u ax_928 l0800_659C
// DataOut: bp bx cx ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6568:
	branch dx_914 >u ax_928 l0800_656E
// DataOut: bp bx cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_656A:
	branch bx_911 <=u cx_924 l0800_659C
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_656E:
	ui32 ax_cx_1097 = SEQ(Mem902[ss:fp - 0x0020:word16], Mem902[ss:fp - 0x0022:word16] - 0x0020)
	word16 bx_1090 = Mem902[ss:fp - 0x0006:word16] + (Mem902[ss:fp - 0x002A:word16] << 0x04)
	word16 cx_1102 = (word16) (ax_cx_1097 - 0x00000020) + Mem902[ss:fp - 0x000A:word16]
	ui32 dx_bx_1110 = SEQ(Mem902[ss:fp - 0x0004:word16] + (bx_1090 <u 0x0000), bx_1090 - cx_1102) - SEQ((SLICE(ax_cx_1097 - 0x00000020, word16, 16) + Mem902[ss:fp - 0x0008:word16]) + (cx_1102 <u 0x0000), cx_1102)
	word16 v151_1113 = Mem902[ss:fp - 0x000A:word16] + (word16) dx_bx_1110
	Mem1114[ss:fp - 0x000A:word16] = v151_1113
	Mem1118[ss:fp - 0x0008:word16] = Mem1114[ss:fp - 0x0008:word16] + SLICE(dx_bx_1110, word16, 16) + (v151_1113 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_659C:
	word16 v157_947 = Mem902[ss:fp - 0x000A:word16] + (0x0010 - Mem902[ss:fp - 0x000A:word16] & 0x000F)
	Mem948[ss:fp - 0x000A:word16] = v157_947
	Mem952[ss:fp - 0x0008:word16] = Mem948[ss:fp - 0x0008:word16] + (v157_947 <u 0x0000)
	word16 dx_957
	word16 ax_958 = fn0800_8CAA(Mem952[ss:fp - 0x000A:word16], 0x04, Mem952[ss:fp - 0x0008:word16], bp, out dx_957)
	Mem959[ss:fp - 0x002A:word16] = ax_958
	Mem962[ss:fp - 0x0040:word16] = Mem959[ds_903:0x29E1:word16]
	Mem965[ss:fp - 0x0042:word16] = Mem962[ds_903:0x29DF:word16]
	Mem967[ss:fp - 0x0044:word16] = ax_958
	selector ds_968
	fn0800_40BF(fp - 0x0002, ds_903, bArg00, wArg02, wArg04, out ds_968)
	branch Mem967[ss:fp - 0x002C:word16] >=u Mem967[ss:fp - 0x002A:word16] l0800_65DC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_65D6:
	Mem1083[ss:fp - 0x002C:word16] = Mem967[ss:fp - 0x002A:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_65DC:
	Mem976[ss:fp - 0x0040:word16] = Mem967[ds_968:0x29E1:word16]
	Mem979[ss:fp - 0x0042:word16] = Mem976[ds_968:0x29DF:word16]
	Mem982[ss:fp - 0x0044:word16] = Mem979[ss:fp - 0x002C:word16]
	selector ds_983
	fn0800_40BF(fp - 0x0002, ds_968, bArg00, wArg02, wArg04, out ds_983)
	word16 ax_988 = Mem982[ss:fp - 0x0006:word16] + Mem982[ds_983:0x4E88:word16]
	ui32 dx_ax_993 = SEQ(Mem982[ss:fp - 0x0004:word16] + Mem982[ds_983:0x4E8A:word16] + (ax_988 <u 0x0000), ax_988 + 0x0020)
	word16 dx_1000
	word16 ax_1001 = fn0800_8CAA((word16) (dx_ax_993 + 0x00000020), 0x04, SLICE(dx_ax_993 + 0x00000020, word16, 16), bp, out dx_1000)
	Mem1002[ss:fp - 0x002E:word16] = ax_1001
	Mem1005[ss:fp - 0x0040:word16] = Mem1002[ds_983:0x29E1:word16]
	Mem1008[ss:fp - 0x0042:word16] = Mem1005[ds_983:0x29DF:word16]
	Mem1010[ss:fp - 0x0044:word16] = ax_1001
	selector ds_1011
	fn0800_40BF(fp - 0x0002, ds_983, bArg00, wArg02, wArg04, out ds_1011)
	Mem1016[ss:fp - 0x0030:word16] = Mem1010[ss:fp - 0x001E:word16] + 0x0080
	branch Mem1016[ds_1011:0x2A1D:word16] == 0x0000 l0800_662F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_662F:
	branch Mem1016[ds_1011:0x2A21:word16] != 0x0001 l0800_663B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6636:
	Mem1080[ss:fp - 0x0030:word16] = Mem1016[ss:fp - 0x0030:word16] + 0x0180
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6628:
	Mem1075[ss:fp - 0x0030:word16] = Mem1016[ss:fp - 0x0030:word16] + 0x0200
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_663B:
	Mem1021[ss:fp - 0x0040:word16] = Mem1016[ds_1011:0x29E1:word16]
	Mem1024[ss:fp - 0x0042:word16] = Mem1021[ds_1011:0x29DF:word16]
	Mem1027[ss:fp - 0x0044:word16] = Mem1024[ss:fp - 0x0030:word16]
	selector ds_1028
	fn0800_40BF(fp - 0x0002, ds_1011, bArg00, wArg02, wArg04, out ds_1028)
	word16 bx_1036 = Mem1027[ds_1028:0x2A07:word16] - Mem1027[ss:fp - 0x0006:word16]
	word16 bx_1040 = bx_1036 - (Mem1027[ss:fp - 0x0028:word16] << 0x04)
	branch (bx_1040 | ((Mem1027[ds_1028:0x2A09:word16] - Mem1027[ss:fp - 0x0004:word16]) - (bx_1036 <u 0x0000)) - (bx_1040 <u 0x0000)) == 0x0000 l0800_6673
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6673:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x04 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_666A:
	return 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x04 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5EE4:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -70(fp):0x4271 -68(fp):ds -66(fp):0x2E75 -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp

fn0800_5E64_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> -72(fp):<invalid> -70(fp):<invalid> -68(fp):<invalid> -66(fp):<invalid> -64(fp):<invalid> -62(fp):di -60(fp):si -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):<invalid> -46(fp):<invalid> -44(fp):<invalid> -42(fp):<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_5EB1_1:
	Mem1652[ds:di_1582:byte] = 0x00
	di_1582 = di_1582 + 0x0001
	cx_1639 = cx_1639 - 0x0001
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EAB_1:
	Mem1633[ds:di_1582:byte] = Mem0[ds:si_1583:byte]
	si_1583 = si_1583 + 0x0001
	di_1582 = di_1582 + 0x0001
	cx_1623 = cx_1623 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_5EA7_1:
	Mem1617[ds:di_1582:word16] = Mem0[ds:si_1583:word16]
	si_1583 = si_1583 + 0x0002
	di_1582 = di_1582 + 0x0002
	cx_1613 = cx_1613 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x003E bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -64(fp):ds -62(fp):di -60(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)



word16 fn0800_669C(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
fn0800_669C_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_669C:
	branch Mem0[ds:0x2A09:word16] <u 0x0000 l0800_66BE
// DataOut: bp ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_66AB:
	branch Mem0[ds:0x2A09:word16] >u 0x0000 l0800_66B5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66AD:
	branch Mem0[ds:0x2A07:word16] <=u 0xFEFE l0800_66BE
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66BE:
	word16 di_331 = 0x2206
	word16 si_330 = 0x4271
	word16 cx_332 = 0x0004
	word16 dx_102 = 0x0003
	branch true l0800_66D2
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D0:
	cx_332 = 0x0003
// DataOut: bp cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x2206 si:0x4271 cx:0x0004 dx:0x0003 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D2:
	word16 ax_321 = 0x0000
	byte Z_327 = cond(0x0000)
	byte C_328 = false
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x2206 si:0x4271 cx:<invalid> dx:0x0003 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D4:
	branch cx_332 == 0x0000 l0800_66D6
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D4_1:
	byte SCZO_325 = cond(Mem0[ds:si_358:byte] - Mem0[ds:di_357:byte])
	Z_327 = SCZO_325 (alias)
	C_328 = SCZO_325 (alias)
	si_330 = si_358 + 0x0001
	di_331 = di_357 + 0x0001
	cx_332 = cx_332 - 0x0001
	word16 di_357 = di_331
	word16 si_358 = si_330
	branch Mem0[ds:si_358:byte] != Mem0[ds:di_357:byte] l0800_66D4
// DataOut: ax bp cx di ds es si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D6:
	branch Z_327 l0800_66DD
// DataOut: ax bp ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66D8:
	word16 ax_318 = 0x0000 - C_328
	ax_321 = ax_318 - 0xFFFF - (ax_318 <u 0x0000)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:0x0000 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66DD:
	word16 ax_106 = ax_321
	branch ax_321 == 0x0000 l0800_6715
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66E1:
	word16 di_236 = 0x4271
	word16 si_237 = 0x2206
	word16 cx_239 = 0x0004
	dx_102 = 0xFFFF
	branch true l0800_66F7
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:0x0003 ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F3:
	cx_239 = 0x0003
	dx_102 = 0x0000
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x4271 si:0x2206 cx:0x0004 dx:0xFFFF ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F7:
	word16 cx_253 = cx_239 >>u 0x0001
	cx_260 = cx_253
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:0x4271 si:0x2206 cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F9:
	word16 cx_260
	branch cx_260 == 0x0000 l0800_66FB
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FB:
	word16 cx_270 = cx_260 * 0x0002 + (cx_253 <u 0x0000)
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FD:
	branch cx_270 == 0x0000 l0800_66FF
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FF:
	word16 cx_283 = dx_102
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6703:
	branch cx_283 == 0x0000 l0800_6705
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6705:
	fn0800_09A3(fp - 0x0002, ds, out ds)
	ax_106 = 0x4271
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6715:
	Mem111[ss:fp - 0x000C:word16] = Mem0[ds:0x29E1:word16]
	Mem115[ss:fp - 0x000E:word16] = Mem111[ds:0x29DF:word16]
	Mem129[ss:fp - 0x0010:word16] = 0x0000
	Mem131[ss:fp - 0x0012:word16] = (DPB(ax_106, 0x00, 8) << 0x08) + DPB(dx_102, 0x00, 8)
	Mem133[ss:fp - 0x0014:word16] = ds
	Mem136[ss:fp - 0x0016:word16] = 0x2E77
	selector ds_143
	fn0800_4152(ds, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_143)
	word16 bx_156 = Mem136[ds_143:0x2A07:word16]
	ui32 dx_bx_162 = SEQ(Mem136[ds_143:0x2A09:word16] + (bx_156 <u 0x7700), bx_156 + 0x7740)
	Mem167[ss:fp - 0x0004:word16] = SLICE(dx_bx_162 + 0x00000040, word16, 16)
	Mem168[ss:fp - 0x0006:word16] = (word16) (dx_bx_162 + 0x00000040)
	branch Mem168[ds_143:0x2A1D:word16] == 0x0000 l0800_6779
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> cl:<invalid> dl:<invalid> dh:0x00 bl:<invalid> bh:<invalid> ds:<invalid> bx:<invalid> ch:<invalid> ah:<invalid> -18(fp):0x4271 -16(fp):ds -14(fp):0x2E75 -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6779:
	branch Mem168[ds_143:0x2A21:word16] != 0x0001 l0800_6789
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6780:
	word16 v28_225 = Mem168[ss:fp - 0x0006:word16] + 0x0180
	Mem226[ss:fp - 0x0006:word16] = v28_225
	Mem230[ss:fp - 0x0004:word16] = Mem226[ss:fp - 0x0004:word16] + (v28_225 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_676E:
	word16 v25_216 = Mem168[ss:fp - 0x0006:word16] + 0x0200
	Mem217[ss:fp - 0x0006:word16] = v25_216
	Mem221[ss:fp - 0x0004:word16] = Mem217[ss:fp - 0x0004:word16] + (v25_216 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6789:
	branch Mem168[ss:fp - 0x0004:word16] <u 0x0000 l0800_67A1
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_678F:
	branch Mem168[ss:fp - 0x0004:word16] >u 0x0000 l0800_6798
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6791:
	branch Mem168[ss:fp - 0x0006:word16] <=u 0xFEFE l0800_67A1
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_67A1:
	Mem180[ss:fp - 0x000C:word16] = Mem168[ds_143:0x2A09:word16]
	Mem183[ss:fp - 0x000E:word16] = Mem180[ds_143:0x2A07:word16]
	Mem186[ss:fp - 0x0010:word16] = Mem183[ds_143:0x2A09:word16]
	Mem189[ss:fp - 0x0012:word16] = Mem186[ds_143:0x2A07:word16]
	selector ds_190
	*dsOut = fn0800_75EA(fp - 0x0002, ds_143, wArg00, wArg02, wArg04, wArg06)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6798:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> es:<invalid> di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6703_1:
	Mem292[ds:di_236:byte] = 0x00
	di_236 = di_236 + 0x0001
	cx_283 = cx_283 - 0x0001
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66FD_1:
	Mem278[ds:di_236:byte] = Mem0[ds:si_237:byte]
	si_237 = si_237 + 0x0001
	di_236 = di_236 + 0x0001
	cx_270 = cx_270 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66F9_1:
	Mem265[ds:di_236:word16] = Mem0[ds:si_237:word16]
	si_237 = si_237 + 0x0002
	di_236 = di_236 + 0x0002
	cx_260 = cx_260 - 0x0001
// DataOut: bp cx di ds dx es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 es:ds di:<invalid> si:<invalid> cx:<invalid> dx:<invalid> ax:<invalid> -12(fp):ds -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_66B5:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 -10(fp):di -8(fp):si -2(fp):bp

fn0800_669C_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dh:<invalid> bx:<invalid> ds:<invalid> bl:<invalid> bh:<invalid> ch:<invalid> -22(fp):0x2E77 -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_67BF(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_67BF_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_67BF:
	word16 ax_19 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_67F0
// DataOut: ax ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67E1:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_67E9
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67E3:
	branch ax_19 <u Mem0[ds:0x2A07:word16] l0800_67F0
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0010(16)

l0800_67F0:
	selector ds_123
	word16 dx_121
	selector ds_79
	fn0800_4152(ds, 0x2E77, ds, ax_19, 0x0000, Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_79)
	Mem85[ss:fp - 0x0012:word16] = 0x0001
	Mem90[ss:fp - 0x0014:word16] = 0xFFFF
	Mem92[ss:fp - 0x0016:word16] = 0xFFEE
	Mem95[ss:fp - 0x0018:word16] = Mem92[ds_79:0x29E1:word16]
	Mem98[ss:fp - 0x001A:word16] = Mem95[ds_79:0x29DF:word16]
	selector ds_104
	fn0800_ACB3(ds_79, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_104)
	Mem110[ss:fp - 0x0012:word16] = Mem98[ds_104:0x29E5:word16]
	Mem113[ss:fp - 0x0014:word16] = Mem110[ds_104:0x29E3:word16]
	selector ds_115
	branch fn0800_3F0A(fp - 0x0002, ds_104, wArg00, wArg02, out ds_115) == 0x601A l0800_6839
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6839:
	Mem516[ss:fp - 0x0012:word16] = 0x0001
	Mem522[ss:fp - 0x0014:word16] = 0x0000
	Mem524[ss:fp - 0x0016:word16] = 0x0002
	Mem527[ss:fp - 0x0018:word16] = Mem524[ds_115:0x29E5:word16]
	Mem530[ss:fp - 0x001A:word16] = Mem527[ds_115:0x29E3:word16]
	selector ds_531
	fn0800_ACB3(ds_115, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_531)
	Mem539[ss:fp - 0x0012:word16] = 0x0000
	Mem541[ss:fp - 0x0014:word16] = 0x0010
	Mem544[ss:fp - 0x0016:word16] = Mem541[ds_531:0x29E1:word16]
	Mem547[ss:fp - 0x0018:word16] = Mem544[ds_531:0x29DF:word16]
	Mem550[ss:fp - 0x001A:word16] = Mem547[ds_531:0x29E5:word16]
	Mem553[ss:fp - 0x001C:word16] = Mem550[ds_531:0x29E3:word16]
	selector ds_555
	fn0800_3B0A(fp - 0x0002, ds_531, wArg08, wArg0A, out ds_555)
	Mem562[ss:fp - 0x0012:word16] = 0x0000
	Mem565[ss:fp - 0x0014:word16] = 0x0000
	Mem567[ss:fp - 0x0016:word16] = 0x001A
	Mem570[ss:fp - 0x0018:word16] = Mem567[ds_555:0x29E5:word16]
	Mem573[ss:fp - 0x001A:word16] = Mem570[ds_555:0x29E3:word16]
	selector ds_574
	fn0800_ACB3(ds_555, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_574)
	Mem580[ss:fp - 0x0012:word16] = Mem573[ds_574:0x29E1:word16]
	Mem583[ss:fp - 0x0014:word16] = Mem580[ds_574:0x29DF:word16]
	Mem586[ss:fp - 0x0016:word16] = Mem583[ds_574:0x29E5:word16]
	Mem589[ss:fp - 0x0018:word16] = Mem586[ds_574:0x29E3:word16]
	word16 si_590
	word16 di_591
	selector ds_592
	Mem597[ss:fp - 0x0016:word16] = fn0800_3E27(fp - 0x0002, ds_574, wArg00, wArg02, out si_590, out di_591, out ds_592)
	selector ds_598
	fn0800_401E(fp - 0x0002, ds_592, wArg00, wArg02, wArg04, out ds_598)
	ui32 ax_dx_604 = SEQ(Mem597[ds_598:0x2A09:word16], Mem597[ds_598:0x2A07:word16] - 0x001C)
	Mem610[ss:fp - 0x0012:word16] = SLICE(ax_dx_604 - 0x0000001C, word16, 16)
	Mem612[ss:fp - 0x0014:word16] = (word16) (ax_dx_604 - 0x0000001C)
	word16 dx_614 = Mem612[ds_598:0x2A07:word16]
	Mem622[ss:fp - 0x0016:word16] = Mem612[ds_598:0x2A09:word16] - (dx_614 <u 0x001C)
	Mem624[ss:fp - 0x0018:word16] = dx_614 - 0x001C
	ds_123 = fn0800_75EA(fp - 0x0002, ds_598, wArg00, wArg02, wArg04, wArg06)
	ui32 ax_dx_630 = SEQ(Mem624[ds_123:0x2A09:word16], Mem624[ds_123:0x2A07:word16] - 0x001C)
	word16 dx_635 = (word16) (ax_dx_630 - 0x0000001C) - Mem624[ds_123:0x2A03:word16]
	word16 dx_639 = dx_635 + Mem624[ds_123:0x4E88:word16]
	Mem649[ss:fp - 0x0008:word16] = SLICE(ax_dx_630 - 0x0000001C, word16, 16) - Mem624[ds_123:0x2A05:word16] - (dx_635 <u 0x0000) + Mem624[ds_123:0x4E8A:word16] + (dx_639 <u 0x0000) + (dx_639 <u 0x000E)
	Mem650[ss:fp - 0x000A:word16] = dx_639 + 0x000E
	dx_121 = dx_639 + 0x000E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6836:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_68F1:
	Mem446[ss:fp - 0x0012:word16] = Mem113[ds_115:0x29E1:word16]
	Mem449[ss:fp - 0x0014:word16] = Mem446[ds_115:0x29DF:word16]
	Mem452[ss:fp - 0x0016:word16] = Mem449[ds_115:0x2A09:word16]
	Mem455[ss:fp - 0x0018:word16] = Mem452[ds_115:0x2A07:word16]
	selector ds_456
	fn0800_409C(fp - 0x0002, ds_115, wArg02, wArg04, wArg06, out ds_456)
	Mem461[ss:fp - 0x0012:word16] = 0x0001
	Mem467[ss:fp - 0x0014:word16] = 0x0000
	Mem469[ss:fp - 0x0016:word16] = 0x000E
	Mem472[ss:fp - 0x0018:word16] = Mem469[ds_456:0x29E1:word16]
	Mem475[ss:fp - 0x001A:word16] = Mem472[ds_456:0x29DF:word16]
	selector ds_476
	fn0800_ACB3(ds_456, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_476)
	Mem482[ss:fp - 0x0012:word16] = Mem475[ds_476:0x2A09:word16]
	Mem485[ss:fp - 0x0014:word16] = Mem482[ds_476:0x2A07:word16]
	Mem488[ss:fp - 0x0016:word16] = Mem485[ds_476:0x2A09:word16]
	Mem491[ss:fp - 0x0018:word16] = Mem488[ds_476:0x2A07:word16]
	ds_123 = fn0800_75EA(fp - 0x0002, ds_476, wArg00, wArg02, wArg04, wArg06)
	word16 dx_496 = Mem491[ds_123:0x2A07:word16] - Mem491[ds_123:0x2A03:word16]
	word16 dx_500 = dx_496 + Mem491[ds_123:0x4E88:word16]
	ui32 ax_dx_505 = SEQ(Mem491[ds_123:0x2A09:word16] - Mem491[ds_123:0x2A05:word16] - (dx_496 <u 0x0000) + Mem491[ds_123:0x4E8A:word16] + (dx_500 <u 0x0000), dx_500 + 0x000E)
	Mem511[ss:fp - 0x0008:word16] = SLICE(ax_dx_505 + 0x0000000E, word16, 16)
	dx_121 = (word16) (ax_dx_505 + 0x0000000E) (alias)
	Mem512[ss:fp - 0x000A:word16] = dx_121
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:0xEE dh:0xFF dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):0x2E77 -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6959:
	Mem129[ss:fp - 0x0012:word16] = Mem113[ds_123:0x29E1:word16]
	Mem132[ss:fp - 0x0014:word16] = Mem129[ds_123:0x29DF:word16]
	word16 ax_133 = fn0800_AD2F(ds_123, ptrArg00, wArg02)
	branch (ax_133 & 0x0001) == 0x0000 l0800_6988
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_696F:
	Mem424[ss:fp - 0x0012:word16] = Mem132[ds_123:0x29E1:word16]
	Mem427[ss:fp - 0x0014:word16] = Mem424[ds_123:0x29DF:word16]
	Mem431[ss:fp - 0x0016:word16] = DPB(ax_133 & 0x0001, 0x90, 0)
	fn0800_4047(ds_123, bArg00, ptrArg02, wArg04, out ds_123)
	word16 v50_437 = Mem431[ss:fp - 0x000A:word16] + 0x0001
	Mem438[ss:fp - 0x000A:word16] = v50_437
	Mem442[ss:fp - 0x0008:word16] = Mem438[ss:fp - 0x0008:word16] + (v50_437 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6988:
	Mem145[ss:fp - 0x0012:word16] = Mem132[ds_123:0x29E1:word16]
	Mem148[ss:fp - 0x0014:word16] = Mem145[ds_123:0x29DF:word16]
	Mem153[ss:fp - 0x0016:word16] = 0x0000
	Mem155[ss:fp - 0x0018:word16] = 0x0000
	selector ds_156
	fn0800_409C(fp - 0x0002, ds_123, wArg02, wArg04, wArg06, out ds_156)
	Mem162[ss:fp - 0x0012:word16] = Mem155[ds_156:0x29E1:word16]
	Mem165[ss:fp - 0x0014:word16] = Mem162[ds_156:0x29DF:word16]
	ui32 dx_ax_169 = SEQ(dx_121, fn0800_AD2F(ds_156, ptrArg00, wArg02) + 0xFFE0)
	Mem174[ds_156:0x2A05:word16] = SLICE(dx_ax_169 + 0x00FFFFE0, word16, 16)
	Mem175[ds_156:0x2A03:word16] = (word16) (dx_ax_169 + 0x00FFFFE0)
	Mem180[ss:fp - 0x0012:word16] = 0x0000
	Mem183[ss:fp - 0x0014:word16] = 0x0000
	Mem185[ss:fp - 0x0016:word16] = 0x0002
	Mem188[ss:fp - 0x0018:word16] = Mem185[ds_156:0x29E1:word16]
	Mem191[ss:fp - 0x001A:word16] = Mem188[ds_156:0x29DF:word16]
	selector ds_192
	word16 ax_193 = fn0800_ACB3(ds_156, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_192)
	Mem198[ss:fp - 0x0012:word16] = Mem191[ds_192:0x29E1:word16]
	Mem201[ss:fp - 0x0014:word16] = Mem198[ds_192:0x29DF:word16]
	word16 si_202
	word16 di_203
	selector ds_204
	word16 dx_205 = fn0800_3F58(fp - 0x0002, ds_192, wArg00, wArg02, out si_202, out di_203, out ds_204)
	word16 v60_207 = Mem201[ss:fp - 0x000A:word16] - ax_193
	Mem208[ss:fp - 0x000A:word16] = v60_207
	Mem212[ss:fp - 0x0008:word16] = Mem208[ss:fp - 0x0008:word16] - dx_205 - (v60_207 <u 0x0000)
	Mem216[ss:fp - 0x0012:word16] = Mem212[ds_204:0x29E1:word16]
	Mem219[ss:fp - 0x0014:word16] = Mem216[ds_204:0x29DF:word16]
	Mem222[ss:fp - 0x0016:word16] = Mem219[ds_204:0x2A05:word16]
	Mem225[ss:fp - 0x0018:word16] = Mem222[ds_204:0x2A03:word16]
	selector ds_226
	fn0800_409C(fp - 0x0002, ds_204, wArg02, wArg04, wArg06, out ds_226)
	Mem233[ss:fp - 0x0012:word16] = 0x0000
	Mem235[ss:fp - 0x0014:word16] = 0x0000
	Mem237[ss:fp - 0x0016:word16] = 0x0000
	Mem240[ss:fp - 0x0018:word16] = Mem237[ds_226:0x29E5:word16]
	Mem243[ss:fp - 0x001A:word16] = Mem240[ds_226:0x29E3:word16]
	selector ds_244
	fn0800_ACB3(ds_226, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_244)
	Mem250[ss:fp - 0x0012:word16] = Mem243[ds_244:0x29E5:word16]
	Mem253[ss:fp - 0x0014:word16] = Mem250[ds_244:0x29E3:word16]
	word16 si_254
	word16 di_255
	selector ds_256
	word16 ax_257 = fn0800_3E27(fp - 0x0002, ds_244, wArg00, wArg02, out si_254, out di_255, out ds_256)
	branch ax_257 == 0x601A l0800_6A1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A1E:
	Mem321[ss:fp - 0x0012:word16] = Mem253[ds_256:0x29E5:word16]
	Mem324[ss:fp - 0x0014:word16] = Mem321[ds_256:0x29E3:word16]
	word16 si_325
	selector ds_326
	word16 dx_327 = fn0800_3E5D(fp - 0x0002, ds_256, wArg00, wArg02, out si_325, out ds_326)
	Mem331[ss:fp - 0x0012:word16] = ax_257
	Mem333[ss:fp - 0x0014:word16] = dx_327
	Mem336[ss:fp - 0x0016:word16] = Mem333[ds_326:0x29E5:word16]
	Mem339[ss:fp - 0x0018:word16] = Mem336[ds_326:0x29E3:word16]
	word16 si_340
	selector ds_341
	ui32 bx_cx_352 = SEQ(Mem339[ss:fp - 0x0014:word16], Mem339[ss:fp - 0x0012:word16] + ax_257) + SEQ(fn0800_3E5D(fp - 0x0002, ds_326, wArg00, wArg02, out si_340, out ds_341), ax_257)
	Mem356[ss:fp - 0x0004:word16] = SLICE(bx_cx_352, word16, 16)
	Mem357[ss:fp - 0x0006:word16] = (word16) bx_cx_352
	Mem360[ss:fp - 0x0012:word16] = Mem357[ds_341:0x29E5:word16]
	Mem363[ss:fp - 0x0014:word16] = Mem360[ds_341:0x29E3:word16]
	word16 si_364
	Mem368[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_341, wArg00, wArg02, out si_364, out ds_256)
	Mem369[ss:fp - 0x000E:word16] = ax_257
	word16 dx_372 = Mem369[ss:fp - 0x0006:word16] + Mem369[ss:fp - 0x000E:word16]
	word16 cx_382 = Mem369[ds_256:0x2A03:word16] + Mem369[ss:fp - 0x000A:word16]
	word16 ax_377 = Mem369[ss:fp - 0x0004:word16] + Mem369[ss:fp - 0x000C:word16] + (dx_372 <u 0x0000)
	word16 bx_386 = Mem369[ds_256:0x2A05:word16] + Mem369[ss:fp - 0x0008:word16] + (cx_382 <u 0x0000)
	branch ax_377 <u bx_386 l0800_6AA4
// DataOut: bp cx ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A7A:
	branch ax_377 >u bx_386 l0800_6A80
// DataOut: bp cx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A7C:
	branch dx_372 <=u cx_382 l0800_6AA4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A80:
	word16 dx_396 = Mem369[ss:fp - 0x0006:word16] + Mem369[ss:fp - 0x000E:word16]
	word16 cx_402 = Mem369[ds_256:0x2A03:word16] + Mem369[ss:fp - 0x000A:word16]
	ui32 ax_dx_410 = SEQ(Mem369[ss:fp - 0x0004:word16] + Mem369[ss:fp - 0x000C:word16] + (dx_396 <u 0x0000), dx_396 - cx_402) - SEQ((Mem369[ds_256:0x2A05:word16] + Mem369[ss:fp - 0x0008:word16]) + (cx_402 <u 0x0000), cx_402)
	word16 v79_413 = Mem369[ss:fp - 0x000A:word16] + (word16) ax_dx_410
	Mem414[ss:fp - 0x000A:word16] = v79_413
	Mem418[ss:fp - 0x0008:word16] = Mem414[ss:fp - 0x0008:word16] + SLICE(ax_dx_410, word16, 16) + (v79_413 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6A1B:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6AA4:
	Mem275[ss:fp - 0x0012:word16] = 0x0000
	Mem278[ss:fp - 0x0014:word16] = 0x0000
	Mem280[ss:fp - 0x0016:word16] = 0x000A
	Mem283[ss:fp - 0x0018:word16] = Mem280[ds_256:0x29E1:word16]
	Mem286[ss:fp - 0x001A:word16] = Mem283[ds_256:0x29DF:word16]
	selector ds_287
	fn0800_ACB3(ds_256, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_287)
	Mem293[ss:fp - 0x0012:word16] = Mem286[ds_287:0x29E1:word16]
	Mem296[ss:fp - 0x0014:word16] = Mem293[ds_287:0x29DF:word16]
	Mem299[ss:fp - 0x0016:word16] = Mem296[ss:fp - 0x0008:word16]
	Mem302[ss:fp - 0x0018:word16] = Mem299[ss:fp - 0x000A:word16]
	selector ds_303
	fn0800_409C(fp - 0x0002, ds_287, wArg02, wArg04, wArg06, out ds_303)
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_67E9:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0010 bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -16(fp):(ax << 0x10) + dx -2(fp):bp

fn0800_67BF_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:0x00 dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):(ax << 0x10) + dx -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_6AD4(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_6AD4_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6AD4:
	word16 ax_22 = (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8)
	branch 0x0000 <u Mem0[ds:0x2A09:word16] l0800_6B04
// DataOut: ax bp ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF4:
	branch 0x0000 != Mem0[ds:0x2A09:word16] l0800_6AFC
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6AF6:
	branch ax_22 <u Mem0[ds:0x2A07:word16] l0800_6B04
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_6B04:
	word16 si_62
	selector ds_63
	branch fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_62, out ds_63) != 0x0000 l0800_6B1B
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B16:
	branch ax_22 == 0x03F3 l0800_6B23
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B23:
	Mem90[ss:fp - 0x001E:word16] = Mem0[ds_63:0x29E1:word16]
	Mem93[ss:fp - 0x0020:word16] = Mem90[ds_63:0x29DF:word16]
	Mem99[ss:fp - 0x0022:word16] = 0x0000
	Mem101[ss:fp - 0x0024:word16] = 0x03F3
	selector ds_105
	fn0800_409C(fp - 0x0002, ds_63, wArg02, wArg04, wArg06, out ds_105)
	word16 ax_113 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B38:
	Mem117[ss:fp - 0x001E:word16] = Mem101[ds_105:0x29E5:word16]
	Mem120[ss:fp - 0x0020:word16] = Mem117[ds_105:0x29E3:word16]
	word16 si_122
	selector ds_123
	word16 dx_124 = fn0800_3E5D(fp - 0x0002, ds_105, wArg00, wArg02, out si_122, out ds_123)
	Mem127[ss:fp - 0x0008:word16] = dx_124
	Mem128[ss:fp - 0x000A:word16] = ax_113
	Mem129[ss:fp - 0x0004:word16] = dx_124
	Mem130[ss:fp - 0x0006:word16] = ax_113
	Mem133[ss:fp - 0x001E:word16] = Mem130[ds_123:0x29E1:word16]
	Mem136[ss:fp - 0x0020:word16] = Mem133[ds_123:0x29DF:word16]
	Mem139[ss:fp - 0x0022:word16] = Mem136[ss:fp - 0x0004:word16]
	Mem141[ss:fp - 0x0024:word16] = ax_113
	fn0800_409C(fp - 0x0002, ds_123, wArg02, wArg04, wArg06, out ds_105)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B84:
	word16 ax_149 = Mem141[ss:fp - 0x000A:word16]
	word16 dx_150 = Mem141[ss:fp - 0x0008:word16]
	word16 v27_151 = Mem141[ss:fp - 0x000A:word16] - 0x0001
	Mem152[ss:fp - 0x000A:word16] = v27_151
	Mem156[ss:fp - 0x0008:word16] = Mem152[ss:fp - 0x0008:word16] - (v27_151 <u 0x0000)
	word16 ax_157 = ax_149 | dx_150
	branch ax_157 != 0x0000 l0800_6B66
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B66:
	Mem507[ss:fp - 0x001E:word16] = Mem156[ds_105:0x29E1:word16]
	Mem510[ss:fp - 0x0020:word16] = Mem507[ds_105:0x29DF:word16]
	Mem513[ss:fp - 0x0022:word16] = Mem510[ds_105:0x29E5:word16]
	Mem516[ss:fp - 0x0024:word16] = Mem513[ds_105:0x29E3:word16]
	word16 si_517
	selector ds_518
	Mem523[ss:fp - 0x0022:word16] = fn0800_3E5D(fp - 0x0002, ds_105, wArg00, wArg02, out si_517, out ds_518)
	Mem525[ss:fp - 0x0024:word16] = ax_157
	fn0800_409C(fp - 0x0002, ds_518, wArg02, wArg04, wArg06, out ds_105)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B96:
	ax_113 = Mem156[ss:fp - 0x0006:word16] | Mem156[ss:fp - 0x0004:word16]
	branch ax_113 != 0x0000 l0800_6B38
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6B9E:
	Mem168[ss:fp - 0x001E:word16] = Mem156[ds_105:0x29E1:word16]
	Mem171[ss:fp - 0x0020:word16] = Mem168[ds_105:0x29DF:word16]
	Mem174[ss:fp - 0x0022:word16] = Mem171[ds_105:0x29E5:word16]
	Mem177[ss:fp - 0x0024:word16] = Mem174[ds_105:0x29E3:word16]
	word16 si_178
	selector ds_179
	ui32 dx_ax_183 = SEQ(fn0800_3E5D(fp - 0x0002, ds_105, wArg00, wArg02, out si_178, out ds_179), ax_113 + 0x0001)
	Mem190[ss:fp - 0x0022:word16] = SLICE(dx_ax_183 + 0x00000001, word16, 16)
	word16 ax_186 = (word16) (dx_ax_183 + 0x00000001)
	Mem192[ss:fp - 0x0024:word16] = ax_186
	selector ds_193
	fn0800_409C(fp - 0x0002, ds_179, wArg02, wArg04, wArg06, out ds_193)
	Mem199[ss:fp - 0x001E:word16] = Mem192[ds_193:0x29E5:word16]
	Mem202[ss:fp - 0x0020:word16] = Mem199[ds_193:0x29E3:word16]
	word16 si_203
	selector ds_204
	Mem208[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_193, wArg00, wArg02, out si_203, out ds_204)
	Mem209[ss:fp - 0x000E:word16] = ax_186
	Mem212[ss:fp - 0x001E:word16] = Mem209[ds_204:0x29E5:word16]
	Mem215[ss:fp - 0x0020:word16] = Mem212[ds_204:0x29E3:word16]
	word16 si_216
	selector ds_217
	Mem220[ss:fp - 0x0010:word16] = fn0800_3E5D(fp - 0x0002, ds_204, wArg00, wArg02, out si_216, out ds_217)
	Mem221[ss:fp - 0x0012:word16] = ax_186
	word16 dx_224 = Mem221[ss:fp - 0x0012:word16] - Mem221[ss:fp - 0x000E:word16]
	ui32 ax_dx_229 = SEQ(Mem221[ss:fp - 0x0010:word16] - Mem221[ss:fp - 0x000C:word16] - (dx_224 <u 0x0000), dx_224 + 0x0001)
	Mem235[ss:fp - 0x0014:word16] = SLICE(ax_dx_229 + 0x00000001, word16, 16)
	Mem236[ss:fp - 0x0016:word16] = (word16) (ax_dx_229 + 0x00000001)
	Mem239[ss:fp - 0x001E:word16] = Mem236[ds_217:0x29E1:word16]
	Mem242[ss:fp - 0x0020:word16] = Mem239[ds_217:0x29DF:word16]
	Mem245[ss:fp - 0x0022:word16] = Mem242[ss:fp - 0x000C:word16]
	Mem248[ss:fp - 0x0024:word16] = Mem245[ss:fp - 0x000E:word16]
	selector ds_249
	fn0800_409C(fp - 0x0002, ds_217, wArg02, wArg04, wArg06, out ds_249)
	Mem254[ss:fp - 0x001E:word16] = Mem248[ds_249:0x29E1:word16]
	Mem257[ss:fp - 0x0020:word16] = Mem254[ds_249:0x29DF:word16]
	ui32 ax_dx_261 = SEQ(Mem257[ss:fp - 0x0010:word16], Mem257[ss:fp - 0x0012:word16] + 0x0001)
	word16 ax_264 = SLICE(ax_dx_261 + 0x00000001, word16, 16)
	Mem268[ss:fp - 0x0022:word16] = ax_264
	word16 dx_265 = (word16) (ax_dx_261 + 0x00000001)
	Mem270[ss:fp - 0x0024:word16] = dx_265
	selector ds_271
	fn0800_409C(fp - 0x0002, ds_249, wArg02, wArg04, wArg06, out ds_271)
	Mem286[ss:fp - 0x0004:word16] = 0x0000
	word16 dx_281 = DPB(dx_265, 0x00, 8)
	Mem287[ss:fp - 0x0006:word16] = (DPB(ax_264, 0x00, 8) << 0x08) + dx_281 - 0x000C >>u 0x0002
	Mem290[ss:fp - 0x001E:word16] = Mem287[ds_271:0x29E1:word16]
	Mem293[ss:fp - 0x0020:word16] = Mem290[ds_271:0x29DF:word16]
	Mem298[ss:fp - 0x0022:word16] = 0x0000
	Mem301[ss:fp - 0x0024:word16] = Mem298[ss:fp - 0x0006:word16]
	selector ds_302
	fn0800_409C(fp - 0x0002, ds_271, wArg02, wArg04, wArg06, out ds_302)
	Mem308[ss:fp - 0x001E:word16] = Mem301[ds_302:0x29E1:word16]
	Mem311[ss:fp - 0x0020:word16] = Mem308[ds_302:0x29DF:word16]
	word16 ax_313 = fn0800_AD2F(ds_302, ptrArg00, wArg02)
	Mem316[ds_302:0x4E8E:word16] = dx_281
	Mem317[ds_302:0x4E8C:word16] = ax_313
	word16 dx_319 = Mem317[ss:fp - 0x0016:word16]
	Mem320[ss:fp - 0x0004:word16] = Mem317[ss:fp - 0x0014:word16]
	Mem321[ss:fp - 0x0006:word16] = dx_319
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CAF:
	word16 ax_328 = Mem321[ss:fp - 0x0006:word16] | Mem321[ss:fp - 0x0004:word16]
	branch ax_328 != 0x0000 l0800_6C89
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6C89:
	Mem476[ss:fp - 0x001E:word16] = Mem321[ds_302:0x29E1:word16]
	Mem479[ss:fp - 0x0020:word16] = Mem476[ds_302:0x29DF:word16]
	Mem482[ss:fp - 0x0022:word16] = Mem479[ds_302:0x29E5:word16]
	Mem485[ss:fp - 0x0024:word16] = Mem482[ds_302:0x29E3:word16]
	word16 si_486
	selector ds_487
	dx_319 = fn0800_3E5D(fp - 0x0002, ds_302, wArg00, wArg02, out si_486, out ds_487)
	Mem492[ss:fp - 0x0022:word16] = dx_319
	Mem494[ss:fp - 0x0024:word16] = ax_328
	fn0800_409C(fp - 0x0002, ds_487, wArg02, wArg04, wArg06, out ds_302)
	word16 v58_498 = Mem494[ss:fp - 0x0006:word16] - 0x0001
	Mem499[ss:fp - 0x0006:word16] = v58_498
	Mem503[ss:fp - 0x0004:word16] = Mem499[ss:fp - 0x0004:word16] - (v58_498 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CB7:
	Mem334[ss:fp - 0x001E:word16] = Mem321[ds_302:0x29E1:word16]
	Mem337[ss:fp - 0x0020:word16] = Mem334[ds_302:0x29DF:word16]
	Mem351[ss:fp - 0x0022:word16] = 0x0000
	Mem353[ss:fp - 0x0024:word16] = (DPB(ax_328, 0x00, 8) << 0x08) + DPB(dx_319, 0x00, 8)
	Mem355[ss:fp - 0x0026:word16] = ds_302
	Mem358[ss:fp - 0x0028:word16] = 0x2E77
	selector ds_361
	fn0800_4152(ds_302, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out ds_361)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6E93:
	Mem369[ss:fp - 0x001E:word16] = Mem358[ds_361:0x29E5:word16]
	Mem372[ss:fp - 0x0020:word16] = Mem369[ds_361:0x29E3:word16]
	word16 ax_373 = fn0800_AD2F(ds_361, ptrArg00, wArg02)
	branch 0x0000 >=u Mem372[ds_361:0x2A09:word16] l0800_6EAA
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAA:
	branch 0x0000 != Mem372[ds_361:0x2A09:word16] l0800_6EB5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EAC:
	branch ax_373 >=u Mem372[ds_361:0x2A07:word16] l0800_6EB5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EB5:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6EB2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6EA7:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6CE4:
	Mem386[ss:fp - 0x001E:word16] = Mem372[ds_361:0x29E5:word16]
	Mem389[ss:fp - 0x0020:word16] = Mem386[ds_361:0x29E3:word16]
	word16 si_390
	selector ds_391
	Mem394[ss:fp - 0x0008:word16] = fn0800_3E5D(fp - 0x0002, ds_361, wArg00, wArg02, out si_390, out ds_391)
	Mem395[ss:fp - 0x000A:word16] = ax_373
	word16 ax_396 = Mem395[ss:fp - 0x0008:word16]
	word16 dx_397 = Mem395[ss:fp - 0x000A:word16]
	Mem401[ss:fp - 0x001A:word16] = dx_397
	Mem402[ss:fp - 0x0018:word16] = ax_396 & 0x3FFF
	word16 cx_403 = 0x0007
	word16 bx_405 = 0x6EBC
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D0D:
	branch Mem402[0x0800:bx_405:word16] != Mem402[ss:fp - 0x000A:word16] l0800_6D1E
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D15:
	word16 ax_435 = Mem402[0x0800:bx_405 + 0x000E:word16]
	branch ax_435 == Mem402[ss:fp - 0x0018:word16] l0800_6D26
// DataOut: ax bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D26:
	word16 sp_442
	word16 bp_443
	selector ss_444
	byte SCZO_445
	word16 si_446
	byte al_447
	selector ds_448
	byte ah_449
	byte cl_450
	word16 ax_451
	byte dl_452
	byte dh_453
	word16 dx_454
	byte SZO_455
	byte C_456
	byte Z_457
	word16 cx_458
	word16 bx_459
	call Mem402[0x0800:bx_405 + 0x001C:word16] (retsize: 4; depth: 4)
		uses: ah_437,al_436,ax_435,bp_5,bx_406,C_400,cl_408,cx_407,dh_344,dl_343,ds_391,dx_397,SCZO_440,si_390,sp_393,ss,SZO_399,wLoc02_4,wLoc1C_9,wLoc1E_58,wLoc20_61,Z_441
		defs: ah_449,al_447,ax_451,bp_443,bx_459,C_456,cl_450,cx_458,dh_453,dl_452,ds_448,dx_454,SCZO_445,si_446,sp_442,ss_444,SZO_455,Z_457
	return ax_451
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D1E:
	bx_405 = bx_405 + 0x0002
	cx_403 = cx_403 - 0x0001
	branch cx_403 != 0x0000 l0800_6D0D
// DataOut: bp bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6D23:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6E8B:
	return 0x0009
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_6B1B:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:0x08 ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -2(fp):bp

l0800_6AFC:
	return 0x0003
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001C bp:fp - 0x0002 al:<invalid> ah:<invalid> cl:0x08 ax:(ax << 0x10) + dx dl:0x00 dh:0x00 dx:0x0000 -28(fp):si -2(fp):bp

fn0800_6AD4_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> si:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -40(fp):0x2E77 -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):si -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_6EE6(selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
fn0800_6EE6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6EE6:
	word16 di_24
	fn0800_B2EF(ds, 0x2223, ds, out di_24)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_6EE6_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):0x2223 -10(fp):ds -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_6EFF(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_6EFF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_6EFF:
	word16 di_12
	fn0800_B2EF(ds, 0x2231, ds, out di_12)
	branch wArg02 <=u 0x0009 l0800_6F1E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6F13:
	word16 di_31
	fn0800_B2EF(ds, 0x223E, ds, out di_31)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -6(fp):0x2231 -4(fp):ds -2(fp):bp

l0800_6F1E:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_6EFF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



void fn0800_6F20(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_6F20_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_6F20:
	word16 si_16
	selector ds_17
	word16 dx_23
	word16 ax_24 = fn0800_8C69(ax, 0x02, fn0800_3E5D(fp - 0x0002, ds, Mem0[ds:0x29E3:word16], Mem0[ds:0x29E5:word16], out si_16, out ds_17), bp, out dx_23)
	Mem25[ss:fp - 0x0010:word16] = dx_23
	Mem27[ss:fp - 0x0012:word16] = ax_24
	Mem30[ss:fp - 0x001E:word16] = Mem27[ds_17:0x29E5:word16]
	Mem33[ss:fp - 0x0020:word16] = Mem30[ds_17:0x29E3:word16]
	word16 ax_36 = fn0800_AD2F(ds_17, ptrArg00, wArg02)
	Mem39[ss:fp - 0x0014:word16] = dx_23
	Mem40[ss:fp - 0x0016:word16] = ax_36
	Mem43[ss:fp - 0x001E:word16] = 0x0001
	Mem46[ss:fp - 0x0020:word16] = Mem43[ss:fp - 0x0010:word16]
	Mem49[ss:fp - 0x0022:word16] = Mem46[ss:fp - 0x0012:word16]
	Mem52[ss:fp - 0x0024:word16] = Mem49[ds_17:0x29E5:word16]
	Mem55[ss:fp - 0x0026:word16] = Mem52[ds_17:0x29E3:word16]
	selector ds_59
	word16 ax_60 = fn0800_ACB3(ds_17, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_59)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_6FCC:
	Mem70[ss:fp - 0x001E:word16] = Mem55[ds_59:0x29E5:word16]
	Mem73[ss:fp - 0x0020:word16] = Mem70[ds_59:0x29E3:word16]
	word16 si_75
	word16 di_76
	selector ds_77
	word16 dx_78 = fn0800_3F58(fp - 0x0002, ds_59, wArg00, wArg02, out si_75, out di_76, out ds_77)
	branch dx_78 != 0x0000 l0800_6FE3
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FDE:
	branch ax_60 == 0x03EC l0800_6F6D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6F6D:
	Mem818[ss:fp - 0x001E:word16] = 0x0001
	Mem824[ss:fp - 0x0020:word16] = 0x0000
	Mem826[ss:fp - 0x0022:word16] = 0x0004
	Mem829[ss:fp - 0x0024:word16] = Mem826[ds_77:0x29E5:word16]
	Mem832[ss:fp - 0x0026:word16] = Mem829[ds_77:0x29E3:word16]
	ax_60 = fn0800_ACB3(ds_77, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_59)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6F86:
	Mem843[ss:fp - 0x001E:word16] = Mem832[ds_59:0x29E5:word16]
	Mem846[ss:fp - 0x0020:word16] = Mem843[ds_59:0x29E3:word16]
	word16 si_847
	word16 dx_853
	word16 ax_854 = fn0800_8C69(ax_60, 0x02, fn0800_3E5D(fp - 0x0002, ds_59, wArg00, wArg02, out si_847, out ds_59), bp, out dx_853)
	Mem855[ss:fp - 0x0004:word16] = dx_853
	Mem856[ss:fp - 0x0006:word16] = ax_854
	branch (ax_854 | Mem856[ss:fp - 0x0004:word16]) == 0x0000 l0800_6FC4
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FA4:
	Mem873[ss:fp - 0x001E:word16] = 0x0001
	ui32 ax_dx_877 = SEQ(Mem873[ss:fp - 0x0004:word16], Mem873[ss:fp - 0x0006:word16] + 0x0004)
	Mem884[ss:fp - 0x0020:word16] = SLICE(ax_dx_877 + 0x00000004, word16, 16)
	Mem886[ss:fp - 0x0022:word16] = (word16) (ax_dx_877 + 0x00000004)
	Mem889[ss:fp - 0x0024:word16] = Mem886[ds_59:0x29E5:word16]
	Mem892[ss:fp - 0x0026:word16] = Mem889[ds_59:0x29E3:word16]
	fn0800_ACB3(ds_59, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_59)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FC4:
	ax_60 = Mem856[ss:fp - 0x0006:word16] | Mem856[ss:fp - 0x0004:word16]
	branch ax_60 != 0x0000 l0800_6F86
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_6FE3:
	Mem88[ss:fp - 0x001E:word16] = Mem73[ds_77:0x29E5:word16]
	Mem91[ss:fp - 0x0020:word16] = Mem88[ds_77:0x29E3:word16]
	word16 ax_94 = fn0800_AD2F(ds_77, ptrArg00, wArg02) - Mem91[ss:fp - 0x0016:word16]
	word16 dx_97 = dx_78 - Mem91[ss:fp - 0x0014:word16] - (ax_94 <u 0x0000)
	Mem99[ss:fp - 0x0018:word16] = dx_97
	Mem100[ss:fp - 0x001A:word16] = ax_94
	Mem101[ds_77:0x2A05:word16] = dx_97
	Mem102[ds_77:0x2A03:word16] = ax_94
	Mem105[ss:fp - 0x001E:word16] = Mem102[ds_77:0x29E1:word16]
	Mem108[ss:fp - 0x0020:word16] = Mem105[ds_77:0x29DF:word16]
	Mem111[ss:fp - 0x0022:word16] = Mem108[ss:fp + 0x0004:word16]
	Mem114[ss:fp - 0x0024:word16] = Mem111[ss:fp + 0x0002:word16]
	selector ds_115
	fn0800_409C(fp - 0x0002, ds_77, wArg02, wArg04, wArg06, out ds_115)
	Mem121[ss:fp - 0x001E:word16] = Mem114[ds_115:0x29E1:word16]
	Mem124[ss:fp - 0x0020:word16] = Mem121[ds_115:0x29DF:word16]
	word16 ax_125 = fn0800_AD2F(ds_115, ptrArg00, wArg02)
	Mem127[ss:fp - 0x0004:word16] = dx_97
	Mem128[ss:fp - 0x0006:word16] = ax_125
	branch Mem128[ss:fp - 0x0018:word16] >=u 0x0000 l0800_7035
// DataOut: bp ds sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7035:
	branch Mem128[ss:fp - 0x0018:word16] >u 0x0000 l0800_7040
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7037:
	branch Mem128[ss:fp - 0x001A:word16] >u 0x0012 l0800_7040
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7040:
	Mem667[ss:fp - 0x001E:word16] = 0x0000
	Mem670[ss:fp - 0x0020:word16] = Mem667[ds_115:0x4E8E:word16]
	Mem673[ss:fp - 0x0022:word16] = Mem670[ds_115:0x4E8C:word16]
	Mem676[ss:fp - 0x0024:word16] = Mem673[ds_115:0x29E1:word16]
	Mem679[ss:fp - 0x0026:word16] = Mem676[ds_115:0x29DF:word16]
	selector ds_680
	word16 ax_681 = fn0800_ACB3(ds_115, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_680)
	Mem686[ss:fp - 0x001E:word16] = Mem679[ds_680:0x29E1:word16]
	Mem689[ss:fp - 0x0020:word16] = Mem686[ds_680:0x29DF:word16]
	word16 si_690
	selector ds_691
	Mem694[ss:fp - 0x000C:word16] = fn0800_3E5D(fp - 0x0002, ds_680, wArg00, wArg02, out si_690, out ds_691)
	Mem695[ss:fp - 0x000E:word16] = ax_681
	Mem700[ss:fp - 0x001E:word16] = 0x0000
	Mem703[ss:fp - 0x0020:word16] = Mem700[ss:fp - 0x0004:word16]
	Mem706[ss:fp - 0x0022:word16] = Mem703[ss:fp - 0x0006:word16]
	Mem709[ss:fp - 0x0024:word16] = Mem706[ds_691:0x29E1:word16]
	Mem712[ss:fp - 0x0026:word16] = Mem709[ds_691:0x29DF:word16]
	selector ds_713
	fn0800_ACB3(ds_691, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_713)
	Mem718[ss:fp - 0x001E:word16] = Mem712[ds_713:0x29E1:word16]
	Mem721[ss:fp - 0x0020:word16] = Mem718[ds_713:0x29DF:word16]
	Mem726[ss:fp - 0x0022:word16] = 0x0000
	Mem728[ss:fp - 0x0024:word16] = 0x0000
	selector ds_729
	fn0800_409C(fp - 0x0002, ds_713, wArg02, wArg04, wArg06, out ds_729)
	Mem735[ss:fp - 0x001E:word16] = Mem728[ds_729:0x29E1:word16]
	Mem738[ss:fp - 0x0020:word16] = Mem735[ds_729:0x29DF:word16]
	Mem741[ss:fp - 0x0022:word16] = Mem738[ss:fp - 0x0010:word16]
	Mem744[ss:fp - 0x0024:word16] = Mem741[ss:fp - 0x0012:word16]
	selector ds_745
	fn0800_409C(fp - 0x0002, ds_729, wArg02, wArg04, wArg06, out ds_745)
	Mem751[ss:fp - 0x001E:word16] = Mem744[ds_745:0x29E1:word16]
	Mem754[ss:fp - 0x0020:word16] = Mem751[ds_745:0x29DF:word16]
	Mem757[ss:fp - 0x0022:word16] = Mem754[ss:fp - 0x000C:word16]
	Mem760[ss:fp - 0x0024:word16] = Mem757[ss:fp - 0x000E:word16]
	selector ds_761
	fn0800_409C(fp - 0x0002, ds_745, wArg02, wArg04, wArg06, out ds_761)
	Mem768[ss:fp - 0x001E:word16] = 0x0000
	Mem771[ss:fp - 0x0020:word16] = Mem768[ss:fp - 0x0014:word16]
	Mem774[ss:fp - 0x0022:word16] = Mem771[ss:fp - 0x0016:word16]
	Mem777[ss:fp - 0x0024:word16] = Mem774[ds_761:0x29E5:word16]
	Mem780[ss:fp - 0x0026:word16] = Mem777[ds_761:0x29E3:word16]
	selector ds_781
	fn0800_ACB3(ds_761, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_781)
	ui32 ax_dx_787 = SEQ(Mem780[ss:fp - 0x0018:word16], Mem780[ss:fp - 0x001A:word16] - 0x0008)
	Mem794[ss:fp - 0x001E:word16] = SLICE(ax_dx_787 - 0x00000008, word16, 16)
	Mem796[ss:fp - 0x0020:word16] = (word16) (ax_dx_787 - 0x00000008)
	Mem799[ss:fp - 0x0022:word16] = Mem796[ss:fp - 0x0018:word16]
	Mem802[ss:fp - 0x0024:word16] = Mem799[ss:fp - 0x001A:word16]
	ds_115 = fn0800_75EA(fp - 0x0002, ds_781, wArg00, wArg02, wArg04, wArg06)
	word16 v58_805 = Mem802[ds_115:0x2A03:word16] + 0x0008
	Mem806[ds_115:0x2A03:word16] = v58_805
	Mem810[ds_115:0x2A05:word16] = Mem806[ds_115:0x2A05:word16] + (v58_805 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_703D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7032:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_70F9:
	word16 ax_137 = Mem128[ds_115:0x2A05:word16]
	word16 dx_138 = Mem128[ds_115:0x2A03:word16]
	branch ax_137 >=u Mem128[ss:fp - 0x0018:word16] l0800_7108
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7108:
	branch ax_137 != Mem128[ss:fp - 0x0018:word16] l0800_7112
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_710A:
	branch dx_138 >=u Mem128[ss:fp - 0x001A:word16] l0800_7112
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7112:
	Mem405[ss:fp - 0x001E:word16] = 0x0000
	Mem408[ss:fp - 0x0020:word16] = Mem405[ss:fp - 0x0004:word16]
	Mem411[ss:fp - 0x0022:word16] = Mem408[ss:fp - 0x0006:word16]
	Mem414[ss:fp - 0x0024:word16] = Mem411[ds_115:0x29E1:word16]
	Mem417[ss:fp - 0x0026:word16] = Mem414[ds_115:0x29DF:word16]
	selector ds_418
	fn0800_ACB3(ds_115, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_418)
	Mem423[ss:fp - 0x001E:word16] = 0x0000
	ui32 ax_dx_427 = SEQ(Mem423[ss:fp - 0x0014:word16], Mem423[ss:fp - 0x0016:word16] - 0x0004)
	Mem434[ss:fp - 0x0020:word16] = SLICE(ax_dx_427 - 0x00000004, word16, 16)
	Mem436[ss:fp - 0x0022:word16] = (word16) (ax_dx_427 - 0x00000004)
	Mem439[ss:fp - 0x0024:word16] = Mem436[ds_418:0x29E5:word16]
	Mem442[ss:fp - 0x0026:word16] = Mem439[ds_418:0x29E3:word16]
	selector ds_443
	fn0800_ACB3(ds_418, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_443)
	ui32 ax_dx_449 = SEQ(Mem442[ss:fp - 0x0010:word16], Mem442[ss:fp - 0x0012:word16] + 0x0004)
	word16 ax_452 = SLICE(ax_dx_449 + 0x00000004, word16, 16)
	Mem457[ss:fp - 0x001E:word16] = ax_452
	Mem459[ss:fp - 0x0020:word16] = (word16) (ax_dx_449 + 0x00000004)
	Mem462[ss:fp - 0x0022:word16] = Mem459[ds_443:0x29E1:word16]
	Mem465[ss:fp - 0x0024:word16] = Mem462[ds_443:0x29DF:word16]
	Mem468[ss:fp - 0x0026:word16] = Mem465[ds_443:0x29E5:word16]
	Mem471[ss:fp - 0x0028:word16] = Mem468[ds_443:0x29E3:word16]
	selector ds_473
	fn0800_3B0A(fp - 0x0002, ds_443, wArg08, wArg0A, out ds_473)
	Mem479[ss:fp - 0x001E:word16] = Mem471[ds_473:0x29E5:word16]
	Mem482[ss:fp - 0x0020:word16] = Mem479[ds_473:0x29E3:word16]
	word16 si_483
	word16 di_484
	selector ds_485
	branch fn0800_3F58(fp - 0x0002, ds_473, wArg00, wArg02, out si_483, out di_484, out ds_485) == 0x0000 l0800_7181
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7181:
	branch ax_452 == 0x03EC l0800_7189
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7189:
	Mem516[ss:fp - 0x001E:word16] = 0x0001
	Mem522[ss:fp - 0x0020:word16] = 0x0000
	Mem524[ss:fp - 0x0022:word16] = 0x0004
	Mem527[ss:fp - 0x0024:word16] = Mem524[ds_485:0x29E5:word16]
	Mem530[ss:fp - 0x0026:word16] = Mem527[ds_485:0x29E3:word16]
	selector ds_531
	fn0800_ACB3(ds_485, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_531)
	Mem536[ss:fp - 0x001E:word16] = Mem530[ds_531:0x29E1:word16]
	Mem539[ss:fp - 0x0020:word16] = Mem536[ds_531:0x29DF:word16]
	Mem545[ss:fp - 0x0022:word16] = 0x0000
	Mem547[ss:fp - 0x0024:word16] = 0x03EC
	fn0800_409C(fp - 0x0002, ds_531, wArg02, wArg04, wArg06, out ds_485)
	word16 ax_540 = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_71B7:
	Mem559[ss:fp - 0x001E:word16] = Mem547[ds_485:0x29E5:word16]
	Mem562[ss:fp - 0x0020:word16] = Mem559[ds_485:0x29E3:word16]
	word16 si_563
	selector ds_564
	Mem568[ss:fp - 0x0004:word16] = fn0800_3E5D(fp - 0x0002, ds_485, wArg00, wArg02, out si_563, out ds_564)
	Mem569[ss:fp - 0x0006:word16] = ax_540
	Mem572[ss:fp - 0x001E:word16] = Mem569[ds_564:0x29E1:word16]
	Mem575[ss:fp - 0x0020:word16] = Mem572[ds_564:0x29DF:word16]
	Mem578[ss:fp - 0x0022:word16] = Mem575[ss:fp - 0x0004:word16]
	Mem580[ss:fp - 0x0024:word16] = ax_540
	fn0800_409C(fp - 0x0002, ds_564, wArg02, wArg04, wArg06, out ds_485)
	word16 ax_585 = Mem580[ss:fp - 0x0006:word16] | Mem580[ss:fp - 0x0004:word16]
	branch ax_585 == 0x0000 l0800_7234
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_71E5:
	Mem603[ss:fp - 0x001E:word16] = Mem580[ds_485:0x29E5:word16]
	Mem606[ss:fp - 0x0020:word16] = Mem603[ds_485:0x29E3:word16]
	word16 si_607
	selector ds_608
	ui32 dx_ax_612 = SEQ(fn0800_3E5D(fp - 0x0002, ds_485, wArg00, wArg02, out si_607, out ds_608), ax_585 + 0x0001)
	Mem618[ss:fp - 0x0008:word16] = SLICE(dx_ax_612 + 0x00000001, word16, 16)
	word16 ax_616 = (word16) (dx_ax_612 + 0x00000001)
	Mem619[ss:fp - 0x000A:word16] = ax_616
	Mem622[ss:fp - 0x001E:word16] = Mem619[ds_608:0x29E1:word16]
	Mem625[ss:fp - 0x0020:word16] = Mem622[ds_608:0x29DF:word16]
	Mem628[ss:fp - 0x0022:word16] = Mem625[ss:fp - 0x0008:word16]
	Mem630[ss:fp - 0x0024:word16] = ax_616
	selector ds_631
	fn0800_409C(fp - 0x0002, ds_608, wArg02, wArg04, wArg06, out ds_631)
	word16 dx_638
	word16 ax_639 = fn0800_8C69(Mem630[ss:fp - 0x0006:word16], 0x02, Mem630[ss:fp - 0x0004:word16], bp, out dx_638)
	Mem641[ss:fp - 0x001E:word16] = dx_638
	Mem643[ss:fp - 0x0020:word16] = ax_639
	Mem646[ss:fp - 0x0022:word16] = Mem643[ds_631:0x29E1:word16]
	Mem649[ss:fp - 0x0024:word16] = Mem646[ds_631:0x29DF:word16]
	Mem652[ss:fp - 0x0026:word16] = Mem649[ds_631:0x29E5:word16]
	Mem655[ss:fp - 0x0028:word16] = Mem652[ds_631:0x29E3:word16]
	fn0800_3B0A(fp - 0x0002, ds_631, wArg08, wArg0A, out ds_485)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7234:
	ax_540 = Mem580[ss:fp - 0x0006:word16] | Mem580[ss:fp - 0x0004:word16]
	branch ax_540 == 0x0000 l0800_723F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_723C:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7186:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_717E:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_723F:
	word16 v80_502 = Mem482[ds_485:0x4E8C:word16] + 0x0004
	Mem503[ds_485:0x4E8C:word16] = v80_502
	Mem507[ds_485:0x4E8E:word16] = Mem503[ds_485:0x4E8E:word16] + (v80_502 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_710F:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7105:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_724D:
	word16 dx_164 = Mem128[ss:fp - 0x001A:word16] + Mem128[ds_115:0x4E88:word16]
	Mem168[ss:fp - 0x0004:word16] = Mem128[ss:fp - 0x0018:word16] + Mem128[ds_115:0x4E8A:word16] + (dx_164 <u 0x0000)
	Mem169[ss:fp - 0x0006:word16] = dx_164
	branch (Mem169[ds_115:0x2A03:word16] & 0x0003) == 0x0000 l0800_7274
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_726C:
	word16 v60_394 = Mem169[ss:fp - 0x0006:word16] + 0x0002
	Mem395[ss:fp - 0x0006:word16] = v60_394
	Mem399[ss:fp - 0x0004:word16] = Mem395[ss:fp - 0x0004:word16] + (v60_394 <u 0x0000)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7274:
	word16 dx_187
	branch (Mem169[ss:fp - 0x0006:word16] & 0x0003) == 0x0000 l0800_7298
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7298:
	word16 ax_391 = fn0800_8CAA(Mem169[ss:fp - 0x0006:word16], 0x02, Mem169[ss:fp - 0x0004:word16], bp, out dx_187)
	Mem392[ss:fp - 0x0004:word16] = dx_187
	Mem393[ss:fp - 0x0006:word16] = ax_391
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_727F:
	word16 dx_375
	word16 ax_376 = fn0800_8CAA(Mem169[ss:fp - 0x0006:word16], 0x02, Mem169[ss:fp - 0x0004:word16], bp, out dx_375)
	ui32 dx_ax_378 = SEQ(dx_375, ax_376 + 0x0001)
	dx_187 = SLICE(dx_ax_378 + 0x00000001, word16, 16) (alias)
	Mem384[ss:fp - 0x0004:word16] = dx_187
	Mem385[ss:fp - 0x0006:word16] = (word16) (dx_ax_378 + 0x00000001)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72C6:
	word16 ax_191 = Mem169[ds_115:0x2A03:word16]
	branch (ax_191 & 0x0003) != 0x0000 l0800_72AB
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72AB:
	Mem352[ss:fp - 0x001E:word16] = Mem169[ds_115:0x29E1:word16]
	Mem355[ss:fp - 0x0020:word16] = Mem352[ds_115:0x29DF:word16]
	Mem359[ss:fp - 0x0022:word16] = DPB(ax_191 & 0x0003, 0x00, 0)
	fn0800_4047(ds_115, bArg00, ptrArg02, wArg04, out ds_115)
	word16 v101_365 = Mem359[ds_115:0x2A03:word16] + 0x0001
	Mem366[ds_115:0x2A03:word16] = v101_365
	Mem370[ds_115:0x2A05:word16] = Mem366[ds_115:0x2A05:word16] + (v101_365 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_72D1:
	Mem199[ss:fp - 0x001E:word16] = Mem169[ds_115:0x29E1:word16]
	Mem202[ss:fp - 0x0020:word16] = Mem199[ds_115:0x29DF:word16]
	word16 ax_203 = fn0800_AD2F(ds_115, ptrArg00, wArg02)
	Mem205[ss:fp - 0x0008:word16] = dx_187
	Mem206[ss:fp - 0x000A:word16] = ax_203
	Mem209[ss:fp - 0x001E:word16] = 0x0001
	word16 dx_213 = -Mem209[ds_115:0x2A03:word16]
	ui32 ax_dx_217 = SEQ(-Mem209[ds_115:0x2A05:word16] - (dx_213 == 0x0000), dx_213 - 0x0004)
	Mem224[ss:fp - 0x0020:word16] = SLICE(ax_dx_217 - 0x00000004, word16, 16)
	Mem226[ss:fp - 0x0022:word16] = (word16) (ax_dx_217 - 0x00000004)
	Mem229[ss:fp - 0x0024:word16] = Mem226[ds_115:0x29E1:word16]
	Mem232[ss:fp - 0x0026:word16] = Mem229[ds_115:0x29DF:word16]
	selector ds_233
	fn0800_ACB3(ds_115, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_233)
	Mem239[ss:fp - 0x001E:word16] = Mem232[ds_233:0x29E1:word16]
	Mem242[ss:fp - 0x0020:word16] = Mem239[ds_233:0x29DF:word16]
	word16 dx_246
	word16 ax_247 = fn0800_8CAA(Mem242[ds_233:0x2A03:word16], 0x02, Mem242[ds_233:0x2A05:word16], bp, out dx_246)
	Mem249[ss:fp - 0x0022:word16] = dx_246
	Mem251[ss:fp - 0x0024:word16] = ax_247
	selector ds_252
	fn0800_409C(fp - 0x0002, ds_233, wArg02, wArg04, wArg06, out ds_252)
	word16 ax_255 = Mem251[ss:fp - 0x000C:word16]
	word16 dx_256 = Mem251[ss:fp - 0x000E:word16]
	Mem260[ss:fp - 0x001C:word16] = ax_255 & 0x3FFF
	branch (ax_255 & 0x3FFF) <u Mem260[ss:fp - 0x0004:word16] l0800_734D
// DataOut: bp ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_733A:
	branch (ax_255 & 0x3FFF) >u Mem260[ss:fp - 0x0004:word16] l0800_7341
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_733C:
	branch dx_256 <=u Mem260[ss:fp - 0x0006:word16] l0800_734D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7341:
	word16 ax_344 = Mem260[ss:fp - 0x000E:word16]
	Mem346[ss:fp - 0x0004:word16] = Mem260[ss:fp - 0x001C:word16]
	Mem347[ss:fp - 0x0006:word16] = ax_344
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_734D:
	word16 ax_268 = Mem260[ss:fp - 0x000C:word16]
	Mem271[ss:fp - 0x0006:word16] = Mem260[ss:fp - 0x0006:word16]
	Mem274[ss:fp - 0x0004:word16] = Mem271[ss:fp - 0x0004:word16] | ax_268 & 0xC000
	Mem280[ss:fp - 0x001E:word16] = 0x0000
	Mem283[ss:fp - 0x0020:word16] = Mem280[ds_252:0x4E8E:word16]
	Mem286[ss:fp - 0x0022:word16] = Mem283[ds_252:0x4E8C:word16]
	Mem289[ss:fp - 0x0024:word16] = Mem286[ds_252:0x29E1:word16]
	Mem292[ss:fp - 0x0026:word16] = Mem289[ds_252:0x29DF:word16]
	selector ds_293
	fn0800_ACB3(ds_252, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_293)
	Mem299[ss:fp - 0x001E:word16] = Mem292[ds_293:0x29E1:word16]
	Mem302[ss:fp - 0x0020:word16] = Mem299[ds_293:0x29DF:word16]
	Mem305[ss:fp - 0x0022:word16] = Mem302[ss:fp - 0x0004:word16]
	Mem308[ss:fp - 0x0024:word16] = Mem305[ss:fp - 0x0006:word16]
	selector ds_309
	fn0800_409C(fp - 0x0002, ds_293, wArg02, wArg04, wArg06, out ds_309)
	Mem316[ss:fp - 0x001E:word16] = 0x0000
	Mem319[ss:fp - 0x0020:word16] = Mem316[ss:fp - 0x0008:word16]
	Mem322[ss:fp - 0x0022:word16] = Mem319[ss:fp - 0x000A:word16]
	Mem325[ss:fp - 0x0024:word16] = Mem322[ds_309:0x29E1:word16]
	Mem328[ss:fp - 0x0026:word16] = Mem325[ds_309:0x29DF:word16]
	selector ds_329
	fn0800_ACB3(ds_309, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_329)
	word16 v96_332 = Mem328[ds_329:0x4E8C:word16] + 0x0004
	Mem333[ds_329:0x4E8C:word16] = v96_332
	Mem337[ds_329:0x4E8E:word16] = Mem333[ds_329:0x4E8E:word16] + (v96_332 <u 0x0000)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> al:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> bh:<invalid> dh:<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_6F20_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dl:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -40(fp):<invalid> -38(fp):<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):<invalid> -24(fp):<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_73AC(selector ds, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax bp ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_73AC_entry:
	*bpOut = bp
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_73AC:
	selector ds_33
	fn0800_4152(ds, 0x2E77, ds, (DPB(ax, 0x00, 8) << 0x08) + DPB(dx, 0x00, 8), 0x0000, Mem0[ds:0x29DF:word16], Mem0[ds:0x29E1:word16], out ds_33)
	Mem39[ss:fp - 0x0002:word16] = 0x0001
	Mem44[ss:fp - 0x0004:word16] = 0xFFFF
	Mem46[ss:fp - 0x0006:word16] = 0xFFFC
	Mem49[ss:fp - 0x0008:word16] = Mem46[ds_33:0x29E1:word16]
	Mem52[ss:fp - 0x000A:word16] = Mem49[ds_33:0x29DF:word16]
	selector ds_58
	fn0800_ACB3(ds_33, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_58)
	Mem64[ss:fp - 0x0002:word16] = Mem52[ds_58:0x29E1:word16]
	Mem67[ss:fp - 0x0004:word16] = Mem64[ds_58:0x29DF:word16]
	Mem70[ss:fp - 0x0006:word16] = Mem67[ds_58:0x2A11:word16]
	Mem73[ss:fp - 0x0008:word16] = Mem70[ds_58:0x2A0F:word16]
	selector ds_75
	fn0800_409C(bp, ds_58, wArg02, wArg04, wArg06, out ds_75)
	Mem81[ss:fp - 0x0002:word16] = Mem73[ds_75:0x2A09:word16]
	Mem84[ss:fp - 0x0004:word16] = Mem81[ds_75:0x2A07:word16]
	Mem87[ss:fp - 0x0006:word16] = Mem84[ds_75:0x2A09:word16]
	Mem90[ss:fp - 0x0008:word16] = Mem87[ds_75:0x2A07:word16]
	selector ds_92
	*dsOut = fn0800_75EA(bp, ds_75, wArg00, wArg02, wArg04, wArg06)
	return 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_73AC_exit:
// DataOut: ax bp ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> ah:<invalid> cl:<invalid> ax:<invalid> dl:<invalid> dh:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> bp:<invalid> di:<invalid> si:<invalid> ch:<invalid> bh:<invalid> bl:<invalid> -12(fp):0x2E77 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_741D(word16 bp, selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_741D_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_741D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_75C1:
	Mem28[ss:fp - 0x000A:word16] = Mem0[ds:0x29E5:word16]
	Mem32[ss:fp - 0x000C:word16] = Mem28[ds:0x29E3:word16]
	word16 ax_35 = fn0800_AD2F(ds, ptrArg00, wArg02)
	branch dx >=u Mem32[ds:0x2A09:word16] l0800_75D8
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75D8:
	branch dx != Mem32[ds:0x2A09:word16] l0800_75E3
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75DA:
	branch ax_35 >=u Mem32[ds:0x2A07:word16] l0800_75E3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75E3:
	return 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

fn0800_741D_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_75E0:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_75D5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7427:
	Mem46[ss:fp - 0x000A:word16] = Mem32[ds:0x29E5:word16]
	Mem49[ss:fp - 0x000C:word16] = Mem46[ds:0x29E3:word16]
	word16 ax_51 = fn0800_3E9A(fp - 0x0002, ds, ptrArg00, wArg02, out ds)
	branch ax_51 == 0x0000 l0800_7449
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7449:
	Mem330[ss:fp - 0x000A:word16] = Mem49[ds:0x29E1:word16]
	Mem333[ss:fp - 0x000C:word16] = Mem330[ds:0x29DF:word16]
	Mem336[ss:fp - 0x000E:word16] = Mem333[ds:0x29E5:word16]
	Mem339[ss:fp - 0x0010:word16] = Mem336[ds:0x29E3:word16]
	word16 di_340
	selector ds_341
	Mem346[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_340, out ds_341)
	fn0800_4047(ds_341, bArg00, ptrArg02, wArg04, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7439:
	branch ax_51 == 0x0001 l0800_7469
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7469:
	Mem144[ss:fp - 0x000A:word16] = Mem49[ds:0x29E1:word16]
	Mem147[ss:fp - 0x000C:word16] = Mem144[ds:0x29DF:word16]
	Mem150[ss:fp - 0x000E:word16] = Mem147[ds:0x29E5:word16]
	Mem153[ss:fp - 0x0010:word16] = Mem150[ds:0x29E3:word16]
	word16 si_155
	selector ds_156
	Mem161[ss:fp - 0x000E:word16] = fn0800_3E5D(fp - 0x0002, ds, wArg00, wArg02, out si_155, out ds_156)
	Mem163[ss:fp - 0x0010:word16] = ax_51
	selector ds_165
	fn0800_409C(fp - 0x0002, ds_156, wArg02, wArg04, wArg06, out ds_165)
	Mem171[ss:fp - 0x000A:word16] = Mem163[ds_165:0x29E5:word16]
	Mem174[ss:fp - 0x000C:word16] = Mem171[ds_165:0x29E3:word16]
	word16 si_175
	word16 di_176
	selector ds_177
	word16 ax_178 = fn0800_3FAD(fp - 0x0002, ds_165, wArg00, wArg02, out si_175, out di_176, out ds_177)
	Mem180[ss:fp - 0x0004:word16] = 0x0000
	Mem181[ss:fp - 0x0006:word16] = ax_178
	Mem184[ss:fp - 0x000A:word16] = Mem181[ds_177:0x29E1:word16]
	Mem187[ss:fp - 0x000C:word16] = Mem184[ds_177:0x29DF:word16]
	Mem192[ss:fp - 0x000E:word16] = 0x0000
	selector ds_193
	fn0800_401E(fp - 0x0002, ds_177, wArg00, wArg02, wArg04, out ds_193)
	Mem199[ss:fp - 0x000A:word16] = Mem192[ss:fp - 0x0004:word16]
	Mem202[ss:fp - 0x000C:word16] = Mem199[ss:fp - 0x0006:word16]
	Mem205[ss:fp - 0x000E:word16] = Mem202[ss:fp - 0x0004:word16]
	Mem208[ss:fp - 0x0010:word16] = Mem205[ss:fp - 0x0006:word16]
	selector ds_209 = fn0800_75EA(fp - 0x0002, ds_193, wArg00, wArg02, wArg04, wArg06)
	Mem213[ss:fp - 0x000A:word16] = 0x0001
	ui32 ax_dx_217 = SEQ(Mem213[ds_209:0x2A05:word16], Mem213[ds_209:0x2A03:word16] + 0x0002)
	word16 dx_223 = -(word16) (ax_dx_217 + 0x00000002)
	Mem229[ss:fp - 0x000C:word16] = -SLICE(ax_dx_217 + 0x00000002, word16, 16) - (dx_223 == 0x0000)
	Mem231[ss:fp - 0x000E:word16] = dx_223
	Mem234[ss:fp - 0x0010:word16] = Mem231[ds_209:0x29E1:word16]
	Mem237[ss:fp - 0x0012:word16] = Mem234[ds_209:0x29DF:word16]
	selector ds_238
	fn0800_ACB3(ds_209, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_238)
	Mem244[ss:fp - 0x000A:word16] = Mem237[ds_238:0x29E1:word16]
	Mem247[ss:fp - 0x000C:word16] = Mem244[ds_238:0x29DF:word16]
	Mem250[ss:fp - 0x000E:word16] = Mem247[ds_238:0x2A03:word16]
	selector ds_251
	fn0800_40BF(fp - 0x0002, ds_238, bArg00, wArg02, wArg04, out ds_251)
	dx = Mem250[ds_251:0x2A03:word16]
	branch Mem250[ds_251:0x2A05:word16] != Mem250[ss:fp - 0x0004:word16] l0800_754A
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7506:
	branch dx != Mem250[ss:fp - 0x0006:word16] l0800_754A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_754A:
	Mem263[ss:fp - 0x000A:word16] = 0x0001
	Mem266[ss:fp - 0x000C:word16] = Mem263[ds_251:0x2A05:word16]
	Mem269[ss:fp - 0x000E:word16] = Mem266[ds_251:0x2A03:word16]
	Mem272[ss:fp - 0x0010:word16] = Mem269[ds_251:0x29E1:word16]
	Mem275[ss:fp - 0x0012:word16] = Mem272[ds_251:0x29DF:word16]
	fn0800_ACB3(ds_251, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_750B:
	Mem284[ss:fp - 0x000A:word16] = 0x0001
	dx = -Mem284[ss:fp - 0x0006:word16]
	Mem293[ss:fp - 0x000C:word16] = -Mem284[ss:fp - 0x0004:word16] - (dx == 0x0000)
	Mem295[ss:fp - 0x000E:word16] = dx
	Mem298[ss:fp - 0x0010:word16] = Mem295[ds_251:0x29E5:word16]
	Mem301[ss:fp - 0x0012:word16] = Mem298[ds_251:0x29E3:word16]
	selector ds_302
	fn0800_ACB3(ds_251, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_302)
	Mem308[ss:fp - 0x000A:word16] = Mem301[ss:fp - 0x0004:word16]
	Mem311[ss:fp - 0x000C:word16] = Mem308[ss:fp - 0x0006:word16]
	Mem314[ss:fp - 0x000E:word16] = Mem311[ds_302:0x29E1:word16]
	Mem317[ss:fp - 0x0010:word16] = Mem314[ds_302:0x29DF:word16]
	Mem320[ss:fp - 0x0012:word16] = Mem317[ds_302:0x29E5:word16]
	Mem323[ss:fp - 0x0014:word16] = Mem320[ds_302:0x29E3:word16]
	fn0800_3B0A(fp - 0x0002, ds_302, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> ch:<invalid> bl:<invalid> di:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_743E:
	branch ax_51 != 0x0003 l0800_7446
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7446:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_758F:
	Mem104[ss:fp - 0x000A:word16] = Mem49[ds:0x29E5:word16]
	Mem107[ss:fp - 0x000C:word16] = Mem104[ds:0x29E3:word16]
	word16 ax_108 = fn0800_AD2F(ds, ptrArg00, wArg02)
	ui32 bx_cx_116 = SEQ(Mem107[ds:0x2A09:word16], Mem107[ds:0x2A07:word16] - ax_108) - SEQ(dx, ax_108)
	Mem121[ss:fp - 0x000A:word16] = SLICE(bx_cx_116, word16, 16)
	Mem123[ss:fp - 0x000C:word16] = (word16) bx_cx_116
	Mem126[ss:fp - 0x000E:word16] = Mem123[ds:0x29E1:word16]
	Mem129[ss:fp - 0x0010:word16] = Mem126[ds:0x29DF:word16]
	Mem132[ss:fp - 0x0012:word16] = Mem129[ds:0x29E5:word16]
	Mem135[ss:fp - 0x0014:word16] = Mem132[ds:0x29E3:word16]
	fn0800_3B0A(fp - 0x0002, ds, wArg08, wArg0A, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7443:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7566:
	word16 si_100 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cl:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7588:
	branch si_100 != 0x0003 l0800_756A
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_756A:
	Mem76[ss:fp - 0x000A:word16] = Mem49[ds:0x29E1:word16]
	Mem79[ss:fp - 0x000C:word16] = Mem76[ds:0x29DF:word16]
	Mem82[ss:fp - 0x000E:word16] = Mem79[ds:0x29E5:word16]
	Mem85[ss:fp - 0x0010:word16] = Mem82[ds:0x29E3:word16]
	word16 di_86
	selector ds_87
	Mem92[ss:fp - 0x000E:word16] = fn0800_3DCF(ds, ptrArg00, wArg02, out di_86, out ds_87)
	fn0800_4047(ds_87, bArg00, ptrArg02, wArg04, out ds)
	si_100 = si_100 + 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_758D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> cx:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_75EA(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_75EA_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_75EA:
	Mem14[ds:0x4680:word16] = wArg04
	Mem16[ds:0x467E:word16] = wArg02
	Mem17[ds:0x2A05:word16] = wArg04
	Mem18[ds:0x2A03:word16] = wArg02
	Mem19[ds:0x4678:word16] = wArg04
	Mem20[ds:0x4676:word16] = wArg02
	ui32 ax_dx_26 = SEQ(wArg08, wArg06 - 0x0012)
	Mem31[ds:0x4E86:word16] = SLICE(ax_dx_26 - 0x00000012, word16, 16)
	Mem32[ds:0x4E84:word16] = (word16) (ax_dx_26 - 0x00000012)
	branch Mem32[ds:0x4680:word16] >u 0x0000 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_7626:
	branch Mem32[ds:0x4680:word16] == 0x0000 l0800_762B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16)

l0800_762B:
	branch wArg02 >u 0x0012 l0800_7634
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16)

l0800_7634:
	Mem61[ds:0x2E4B:word16] = 0x0000
	Mem62[ds:0x2E49:word16] = 0x0000
	Mem63[ds:0x465C:word16] = 0x0000
	Mem64[ds:0x4668:word16] = 0x0000
	Mem65[ds:0x4666:word16] = 0x0000
	Mem66[ds:0x2A05:word16] = 0x0000
	Mem67[ds:0x2A03:word16] = 0x0000
	Mem68[ds:0x2A01:word16] = 0x0000
	Mem69[ds:0x29FF:word16] = 0x0000
	Mem70[ds:0x467C:word16] = 0x0000
	Mem71[ds:0x467A:word16] = 0x0000
	Mem72[ds:0x4674:word16] = 0x0000
	Mem73[ds:0x4672:word16] = 0x0000
	Mem74[ds:0x2E43:word16] = 0x0000
	Mem75[ds:0x2E45:word16] = 0x0000
	Mem76[ds:0x4E82:word16] = 0x0000
	Mem77[ds:0x4E8A:word16] = 0x0000
	Mem78[ds:0x4E88:word16] = 0x0000
	Mem79[ds:0x29F9:word16] = 0x0000
	Mem80[ds:0x29F7:word16] = 0x0000
	selector ds_87
	fn0800_4311(fp - 0x0002, ds, 0x000F, 0x0001, out ds_87)
	Mem91[ss:fp - 0x0016:word16] = 0x000F
	Mem92[ss:fp - 0x0018:word16] = 0x0001
	Mem95[ds_87:0x2E73:word16] = 0x0010
	Mem96[ds_87:0x2E71:word16] = 0x0000
	Mem100[ss:fp - 0x001C:word16] = 0x0001
	Mem102[ss:fp - 0x001E:word16] = 0x0010
	selector ds_104
	fn0800_4311(fp - 0x0002, ds_87, wArg00, wArg02, out ds_104)
	Mem108[ss:fp - 0x0012:word16] = 0x0010
	Mem109[ss:fp - 0x0014:word16] = 0x0001
	Mem112[ds_104:0x2E39:word16] = 0x0011
	Mem113[ds_104:0x2E37:word16] = 0x0000
	Mem117[ss:fp - 0x001C:word16] = 0x0001
	Mem119[ss:fp - 0x001E:word16] = 0x0010
	selector ds_120
	fn0800_4311(fp - 0x0002, ds_104, wArg00, wArg02, out ds_120)
	Mem124[ss:fp - 0x000E:word16] = 0x0010
	Mem125[ss:fp - 0x0010:word16] = 0x0001
	Mem128[ds_120:0x2E35:word16] = 0x0011
	Mem129[ds_120:0x2E33:word16] = 0x0000
	Mem133[ss:fp - 0x001C:word16] = 0x0001
	Mem135[ss:fp - 0x001E:word16] = 0x0010
	selector ds_136
	fn0800_4311(fp - 0x0002, ds_120, wArg00, wArg02, out ds_136)
	Mem140[ss:fp - 0x000A:word16] = 0x0010
	Mem141[ss:fp - 0x000C:word16] = 0x0001
	Mem144[ds_136:0x2E41:word16] = 0x0011
	Mem145[ds_136:0x2E3F:word16] = 0x0000
	Mem149[ss:fp - 0x001C:word16] = 0x0001
	Mem151[ss:fp - 0x001E:word16] = 0x0010
	selector ds_152
	fn0800_4311(fp - 0x0002, ds_136, wArg00, wArg02, out ds_152)
	Mem156[ss:fp - 0x0006:word16] = 0x0010
	Mem157[ss:fp - 0x0008:word16] = 0x0001
	Mem160[ds_152:0x2E3D:word16] = 0x0011
	Mem161[ds_152:0x2E3B:word16] = 0x0000
	fn0800_87F8(ds_152)
	Mem164[ss:fp - 0x001C:word16] = Mem161[ds_152:0x29E5:word16]
	Mem167[ss:fp - 0x001E:word16] = Mem164[ds_152:0x29E3:word16]
	word16 ax_169 = fn0800_AD2F(ds_152, ptrArg00, wArg02)
	Mem172[ds_152:0x4664:word16] = 0x0011
	Mem173[ds_152:0x4662:word16] = ax_169
	Mem176[ss:fp - 0x001C:word16] = Mem173[ds_152:0x29E1:word16]
	Mem179[ss:fp - 0x001E:word16] = Mem176[ds_152:0x29DF:word16]
	word16 ax_180 = fn0800_AD2F(ds_152, ptrArg00, wArg02)
	Mem182[ds_152:0x4660:word16] = 0x0011
	Mem183[ds_152:0x465E:word16] = ax_180
	Mem186[ss:fp - 0x001C:word16] = Mem183[ds_152:0x29E1:word16]
	Mem189[ss:fp - 0x001E:word16] = Mem186[ds_152:0x29DF:word16]
	int32 dx_ax_194 = SEQ(0x0011, (word16) (int32) Mem189[ds_152:0x2A21:word16] + 0x4300)
	Mem201[ss:fp - 0x0020:word16] = SLICE(dx_ax_194 + 0x524E4300, word16, 16)
	Mem203[ss:fp - 0x0022:word16] = (word16) (dx_ax_194 + 0x524E4300)
	selector ds_204
	fn0800_409C(fp - 0x0002, ds_152, wArg02, wArg04, wArg06, out ds_204)
	Mem210[ss:fp - 0x001C:word16] = Mem203[ds_204:0x29E1:word16]
	Mem213[ss:fp - 0x001E:word16] = Mem210[ds_204:0x29DF:word16]
	Mem216[ss:fp - 0x0020:word16] = Mem213[ds_204:0x4680:word16]
	Mem219[ss:fp - 0x0022:word16] = Mem216[ds_204:0x467E:word16]
	selector ds_220
	fn0800_409C(fp - 0x0002, ds_204, wArg02, wArg04, wArg06, out ds_220)
	Mem225[ss:fp - 0x001C:word16] = Mem219[ds_220:0x29E1:word16]
	Mem228[ss:fp - 0x001E:word16] = Mem225[ds_220:0x29DF:word16]
	Mem233[ss:fp - 0x0020:word16] = 0x0000
	Mem235[ss:fp - 0x0022:word16] = 0x0000
	selector ds_236
	fn0800_409C(fp - 0x0002, ds_220, wArg02, wArg04, wArg06, out ds_236)
	Mem241[ss:fp - 0x001C:word16] = Mem235[ds_236:0x29E1:word16]
	Mem244[ss:fp - 0x001E:word16] = Mem241[ds_236:0x29DF:word16]
	Mem249[ss:fp - 0x0020:word16] = 0x0000
	selector ds_250
	fn0800_401E(fp - 0x0002, ds_236, wArg00, wArg02, wArg04, out ds_250)
	Mem255[ss:fp - 0x001C:word16] = Mem249[ds_250:0x29E1:word16]
	Mem258[ss:fp - 0x001E:word16] = Mem255[ds_250:0x29DF:word16]
	Mem263[ss:fp - 0x0020:word16] = 0x0000
	selector ds_264
	fn0800_401E(fp - 0x0002, ds_250, wArg00, wArg02, wArg04, out ds_264)
	Mem269[ss:fp - 0x001C:word16] = Mem263[ds_264:0x29E1:word16]
	Mem272[ss:fp - 0x001E:word16] = Mem269[ds_264:0x29DF:word16]
	Mem277[ss:fp - 0x0020:word16] = 0x0000
	selector ds_278
	fn0800_401E(fp - 0x0002, ds_264, wArg00, wArg02, wArg04, out ds_278)
	Mem283[ss:fp - 0x001C:word16] = ds_278
	Mem286[ss:fp - 0x001E:word16] = 0x2240
	word16 di_287
	fn0800_B2EF(ds_278, wArg00, wArg02, out di_287)
	Mem291[ss:fp - 0x0004:word16] = Mem286[ds_278:0x2E4F:word16]
	Mem297[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_292 = 0x0001
	branch Mem297[ds_278:0x2A1F:word16] == 0x0000 l0800_7808
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7808:
	ax_292 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7806:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_780A:
	Mem304[ss:fp - 0x001E:word16] = ax_292
	selector ds_305 = fn0800_8465(ds_278, wArg00, wArg02)
	Mem312[ss:fp - 0x001C:word16] = 0x0001
	word16 ax_307 = 0x0001
	branch Mem312[ds_305:0x2E4F:word16] == 0x0000 l0800_781E
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781E:
	ax_307 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_781C:
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:0x0001 dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:0x01 es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7820:
	Mem322[ss:fp - 0x001E:word16] = ax_307
	selector ds_323 = fn0800_8465(ds_305, wArg00, wArg02)
	branch Mem322[ds_323:0x2A23:word16] == 0x0001 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:0x00 ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_782E:
	branch Mem322[ds_323:0x2E4F:word16] == 0x0000 l0800_7843
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7835:
	Mem645[ss:fp - 0x001C:word16] = 0x0010
	Mem648[ss:fp - 0x001E:word16] = Mem645[ds_323:0x2E4F:word16]
	ds_323 = fn0800_8465(ds_323, wArg00, wArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):0x0001 -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7843:
	word16 ax_329 = Mem322[ds_323:0x2A21:word16]
	branch ax_329 == 0x0001 l0800_7852
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7852:
	ds_323 = fn0800_7A02(fp - 0x0002, ds_323)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_784B:
	branch ax_329 == 0x0002 l0800_7857
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7857:
	ds_323 = fn0800_7C78(fp - 0x0002, ds_323)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7850:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785A:
	word16 si_338 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7870:
	branch Mem322[ds_323:0x4E82:word16] != 0x0000 l0800_785E
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_785E:
	ax_329 = DPB(ax_329, Mem322[ds_323:si_338 + 0x4682:byte], 0) (alias)
	Mem628[ss:fp - 0x001C:word16] = ax_329
	word16 di_629
	si_338 = fn0800_8624(ds_323, bArg00, out di_629, out ds_323)
	Mem635[ds_323:0x4E82:word16] = Mem628[ds_323:0x4E82:word16] - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7877:
	Mem353[ds_323:0x2E4F:word16] = Mem322[ss:fp - 0x0004:word16]
	word16 dx_356 = Mem353[ds_323:0x467E:word16] - Mem353[ds_323:0x2A03:word16]
	word16 ax_360 = Mem353[ds_323:0x4680:word16] - Mem353[ds_323:0x2A05:word16] - (dx_356 <u 0x0000)
	branch ax_360 >u Mem353[ds_323:0x4E8A:word16] l0800_78B3
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7892:
	branch ax_360 <u Mem353[ds_323:0x4E8A:word16] l0800_789A
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7894:
	branch dx_356 >=u Mem353[ds_323:0x4E88:word16] l0800_78B3
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78B3:
	Mem605[ds_323:0x4E8A:word16] = 0x0000
	Mem606[ds_323:0x4E88:word16] = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_789A:
	dx_356 = Mem353[ds_323:0x467E:word16] - Mem353[ds_323:0x2A03:word16]
	word16 ax_612 = Mem353[ds_323:0x4680:word16] - Mem353[ds_323:0x2A05:word16] - (dx_356 <u 0x0000)
	word16 v34_613 = Mem353[ds_323:0x4E88:word16] - dx_356
	Mem614[ds_323:0x4E88:word16] = v34_613
	Mem618[ds_323:0x4E8A:word16] = Mem614[ds_323:0x4E8A:word16] - ax_612 - (v34_613 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78BF:
	branch Mem353[ds_323:0x2A21:word16] != 0x0002 l0800_78D0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78C6:
	word16 v39_596 = Mem353[ds_323:0x4E88:word16] + 0x0002
	Mem597[ds_323:0x4E88:word16] = v39_596
	Mem601[ds_323:0x4E8A:word16] = Mem597[ds_323:0x4E8A:word16] + (v39_596 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_78D0:
	Mem375[ss:fp - 0x001C:word16] = Mem353[ds_323:0x29E1:word16]
	Mem378[ss:fp - 0x001E:word16] = Mem375[ds_323:0x29DF:word16]
	word16 ax_381 = fn0800_AD2F(ds_323, ptrArg00, wArg02) - Mem378[ds_323:0x465E:word16]
	Mem385[ds_323:0x2A05:word16] = dx_356 - Mem378[ds_323:0x4660:word16] - (ax_381 <u 0x0000)
	Mem386[ds_323:0x2A03:word16] = ax_381
	Mem389[ss:fp - 0x001C:word16] = 0x0000
	ui32 ax_dx_393 = SEQ(Mem389[ds_323:0x4660:word16], Mem389[ds_323:0x465E:word16] + 0x0008)
	Mem400[ss:fp - 0x001E:word16] = SLICE(ax_dx_393 + 0x00000008, word16, 16)
	Mem402[ss:fp - 0x0020:word16] = (word16) (ax_dx_393 + 0x00000008)
	Mem405[ss:fp - 0x0022:word16] = Mem402[ds_323:0x29E1:word16]
	Mem408[ss:fp - 0x0024:word16] = Mem405[ds_323:0x29DF:word16]
	selector ds_409
	fn0800_ACB3(ds_323, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_409)
	Mem414[ss:fp - 0x001C:word16] = Mem408[ds_409:0x29E1:word16]
	Mem417[ss:fp - 0x001E:word16] = Mem414[ds_409:0x29DF:word16]
	ui32 ax_dx_421 = SEQ(Mem417[ds_409:0x2A05:word16], Mem417[ds_409:0x2A03:word16] - 0x0012)
	word16 ax_424 = SLICE(ax_dx_421 - 0x00000012, word16, 16)
	Mem428[ss:fp - 0x0020:word16] = ax_424
	Mem430[ss:fp - 0x0022:word16] = (word16) (ax_dx_421 - 0x00000012)
	selector ds_431
	fn0800_409C(fp - 0x0002, ds_409, wArg02, wArg04, wArg06, out ds_431)
	Mem437[ss:fp - 0x001C:word16] = Mem430[ds_431:0x29E1:word16]
	Mem440[ss:fp - 0x001E:word16] = Mem437[ds_431:0x29DF:word16]
	Mem443[ss:fp - 0x0020:word16] = Mem440[ds_431:0x2E4B:word16]
	selector ds_444
	fn0800_401E(fp - 0x0002, ds_431, wArg00, wArg02, wArg04, out ds_444)
	Mem450[ss:fp - 0x001C:word16] = Mem443[ds_444:0x29E1:word16]
	Mem453[ss:fp - 0x001E:word16] = Mem450[ds_444:0x29DF:word16]
	Mem456[ss:fp - 0x0020:word16] = Mem453[ds_444:0x2E49:word16]
	selector ds_457
	fn0800_401E(fp - 0x0002, ds_444, wArg00, wArg02, wArg04, out ds_457)
	Mem463[ss:fp - 0x001C:word16] = Mem456[ds_457:0x29E1:word16]
	Mem466[ss:fp - 0x001E:word16] = Mem463[ds_457:0x29DF:word16]
	Mem470[ss:fp - 0x0020:word16] = DPB(ax_424, Mem466[ds_457:0x4E88:byte], 0)
	selector ds_473
	fn0800_4047(ds_457, bArg00, ptrArg02, wArg04, out ds_473)
	Mem479[ss:fp - 0x001C:word16] = Mem470[ds_473:0x29E1:word16]
	Mem482[ss:fp - 0x001E:word16] = Mem479[ds_473:0x29DF:word16]
	Mem486[ss:fp - 0x0020:word16] = DPB(ax_424, Mem482[ds_473:0x29F7:byte], 0)
	selector ds_487
	fn0800_4047(ds_473, bArg00, ptrArg02, wArg04, out ds_487)
	Mem492[ss:fp - 0x001C:word16] = 0x0000
	word16 dx_495 = Mem492[ds_487:0x465E:word16] + Mem492[ds_487:0x2A03:word16]
	Mem501[ss:fp - 0x001E:word16] = Mem492[ds_487:0x4660:word16] + Mem492[ds_487:0x2A05:word16] + (dx_495 <u 0x0000)
	Mem503[ss:fp - 0x0020:word16] = dx_495
	Mem506[ss:fp - 0x0022:word16] = Mem503[ds_487:0x29E1:word16]
	Mem509[ss:fp - 0x0024:word16] = Mem506[ds_487:0x29DF:word16]
	selector ds_510
	fn0800_ACB3(ds_487, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_510)
	Mem515[ss:fp - 0x001C:word16] = 0x0000
	word16 dx_518 = Mem515[ds_510:0x4662:word16] + Mem515[ds_510:0x467E:word16]
	Mem524[ss:fp - 0x001E:word16] = Mem515[ds_510:0x4664:word16] + Mem515[ds_510:0x4680:word16] + (dx_518 <u 0x0000)
	Mem526[ss:fp - 0x0020:word16] = dx_518
	Mem529[ss:fp - 0x0022:word16] = Mem526[ds_510:0x29E5:word16]
	Mem532[ss:fp - 0x0024:word16] = Mem529[ds_510:0x29E3:word16]
	selector ds_533
	fn0800_ACB3(ds_510, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_533)
	Mem539[ss:fp - 0x001C:word16] = Mem532[ss:fp - 0x0016:word16]
	Mem542[ss:fp - 0x001E:word16] = Mem539[ss:fp - 0x0018:word16]
	selector ds_543
	fn0800_4346(ds_533, wArg00, wArg02, out ds_543)
	Mem549[ss:fp - 0x001C:word16] = Mem542[ss:fp - 0x0012:word16]
	Mem552[ss:fp - 0x001E:word16] = Mem549[ss:fp - 0x0014:word16]
	selector ds_553
	fn0800_4346(ds_543, wArg00, wArg02, out ds_553)
	Mem559[ss:fp - 0x001C:word16] = Mem552[ss:fp - 0x000E:word16]
	Mem562[ss:fp - 0x001E:word16] = Mem559[ss:fp - 0x0010:word16]
	selector ds_563
	fn0800_4346(ds_553, wArg00, wArg02, out ds_563)
	Mem569[ss:fp - 0x001C:word16] = Mem562[ss:fp - 0x000A:word16]
	Mem572[ss:fp - 0x001E:word16] = Mem569[ss:fp - 0x000C:word16]
	selector ds_573
	fn0800_4346(ds_563, wArg00, wArg02, out ds_573)
	Mem579[ss:fp - 0x001C:word16] = Mem572[ss:fp - 0x0006:word16]
	Mem582[ss:fp - 0x001E:word16] = Mem579[ss:fp - 0x0008:word16]
	fn0800_4346(ds_573, wArg00, wArg02, out ds)
	Mem588[ss:fp - 0x001C:word16] = ds
	Mem591[ss:fp - 0x001E:word16] = 0x223C
	word16 di_592
	fn0800_B2EF(ds, wArg00, wArg02, out di_592)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

l0800_7631:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_7628:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x001A bp:fp - 0x0002 ax:<invalid> dx:<invalid> -26(fp):si -2(fp):bp

l0800_79FD:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp

fn0800_75EA_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> ch:<invalid> bl:<invalid> di:<invalid> bh:<invalid> dh:<invalid> -36(fp):<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):si -24(fp):0x0001 -22(fp):0x000F -20(fp):0x0001 -18(fp):0x0010 -16(fp):0x0001 -14(fp):0x0010 -12(fp):0x0001 -10(fp):0x0010 -8(fp):0x0001 -6(fp):0x0010 -4(fp):<invalid> -2(fp):bp



selector fn0800_7A02(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7A02_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7A02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7C1A:
	word16 ax_26 = Mem0[ds:0x467C:word16]
	word16 dx_27 = Mem0[ds:0x467A:word16]
	branch ax_26 >=u Mem0[ds:0x4680:word16] l0800_7C2A
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2A:
	branch ax_26 != Mem0[ds:0x4680:word16] l0800_7C35
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C2C:
	branch dx_27 >=u Mem0[ds:0x467E:word16] l0800_7C35
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C35:
	Mem418[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] >>u 0x10 - Mem0[ds:0x2E45:byte]
	branch Mem418[ds:0x2E45:word16] != 0x0000 l0800_7C4D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C46:
	branch Mem418[ds:0x4E82:word16] == 0x0000 l0800_7C57
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C4D:
	Mem459[ss:fp - 0x000A:word16] = DPB(ax_26, Mem418[ds:0x2E43:byte], 0)
	word16 di_460
	fn0800_8624(ds, bArg00, out di_460, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C57:
	branch Mem418[ds:0x2E45:word16] >u 0x0008 l0800_7C65
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C5E:
	branch Mem418[ds:0x4E82:word16] == 0x0000 l0800_7C73
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C65:
	Mem447[ss:fp - 0x000A:word16] = Mem418[ds:0x2E43:word16] >>u 0x08
	word16 di_448
	fn0800_8624(ds, bArg00, out di_448, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C73:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7A02_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7C32:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C27:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7A19:
	Mem35[ss:fp - 0x000A:word16] = 0x0010
	Mem38[ss:fp - 0x000C:word16] = ds
	Mem41[ss:fp - 0x000E:word16] = 0x284F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem49[ss:fp - 0x000A:word16] = 0x0010
	Mem51[ss:fp - 0x000C:word16] = ds
	Mem54[ss:fp - 0x000E:word16] = 0x278F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	Mem59[ss:fp - 0x000A:word16] = 0x0010
	Mem61[ss:fp - 0x000C:word16] = ds
	Mem64[ss:fp - 0x000E:word16] = 0x290F
	fn0800_43D4(wArg00, psegArg02, wArg04)
	selector ds_67 = fn0800_7FDC(fp - 0x0002, ds)
	Mem72[ss:fp - 0x000A:word16] = 0x0000
	Mem75[ss:fp - 0x000C:word16] = Mem72[ss:fp - 0x0004:word16]
	Mem78[ss:fp - 0x000E:word16] = Mem75[ss:fp - 0x0006:word16]
	Mem81[ss:fp - 0x0010:word16] = Mem78[ds_67:0x29E5:word16]
	Mem84[ss:fp - 0x0012:word16] = Mem81[ds_67:0x29E3:word16]
	selector ds_88
	fn0800_ACB3(ds_67, ptrArg00, psegArg02, wArg04, wArg06, wArg08, out ds_88)
	Mem94[ss:fp - 0x000A:word16] = 0x0010
	Mem96[ss:fp - 0x000C:word16] = ds_88
	Mem99[ss:fp - 0x000E:word16] = 0x290F
	fn0800_441C(ds_88, ptrArg00, psegArg02, wArg04)
	Mem104[ss:fp - 0x000A:word16] = 0x0010
	Mem106[ss:fp - 0x000C:word16] = ds_88
	Mem109[ss:fp - 0x000E:word16] = 0x284F
	fn0800_441C(ds_88, ptrArg00, psegArg02, wArg04)
	Mem114[ss:fp - 0x000A:word16] = 0x0010
	Mem116[ss:fp - 0x000C:word16] = ds_88
	Mem119[ss:fp - 0x000E:word16] = 0x278F
	fn0800_441C(ds_88, ptrArg00, psegArg02, wArg04)
	Mem124[ss:fp - 0x000A:word16] = 0x0010
	Mem126[ss:fp - 0x000C:word16] = ds_88
	Mem129[ss:fp - 0x000E:word16] = 0x290F
	selector ds_130 = fn0800_83A1(fp - 0x0002, ds_88, ptrArg00, wArg04)
	Mem135[ss:fp - 0x000A:word16] = 0x0010
	Mem137[ss:fp - 0x000C:word16] = ds_130
	Mem140[ss:fp - 0x000E:word16] = 0x284F
	selector ds_141 = fn0800_83A1(fp - 0x0002, ds_130, ptrArg00, wArg04)
	Mem146[ss:fp - 0x000A:word16] = 0x0010
	Mem148[ss:fp - 0x000C:word16] = ds_141
	Mem151[ss:fp - 0x000E:word16] = 0x278F
	selector ds_152 = fn0800_83A1(fp - 0x0002, ds_141, ptrArg00, wArg04)
	Mem157[ss:fp - 0x000A:word16] = 0x0010
	Mem160[ss:fp - 0x000C:word16] = Mem157[ds_152:0x466A:word16]
	ds = fn0800_8489(fp - 0x0002, ds_152, wArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> cl:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BC0:
	word16 ax_170 = Mem160[ds:0x466A:word16]
	word16 dx_171 = Mem160[ds:0x466C:word16]
	word16 v18_172 = Mem160[ds:0x466A:word16] - 0x0001
	Mem173[ds:0x466A:word16] = v18_172
	Mem177[ds:0x466C:word16] = Mem173[ds:0x466C:word16] - (v18_172 <u 0x0000)
	word16 ax_178 = ax_170 | dx_171
	branch ax_178 == 0x0000 l0800_7BD8
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD8:
	branch Mem177[ds:0x2E45:word16] != 0x0000 l0800_7BFC
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BDF:
	word16 si_386 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BF5:
	branch Mem177[ds:0x4E82:word16] != 0x0000 l0800_7BE3
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BE3:
	al = Mem177[ds:si_386 + 0x4682:byte]
	ax_178 = DPB(ax_178, al, 0) (alias)
	Mem405[ss:fp - 0x000A:word16] = ax_178
	word16 di_406
	si_386 = fn0800_8624(ds, bArg00, out di_406, out ds)
	Mem412[ds:0x4E82:word16] = Mem405[ds:0x4E82:word16] - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> si:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cl:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BFC:
	word16 v29_368 = Mem177[ds:0x29F7:word16] + 0x0001
	Mem369[ds:0x29F7:word16] = v29_368
	Mem373[ds:0x29F9:word16] = Mem369[ds:0x29F9:word16] + (v29_368 <u 0x0000)
	Mem377[ss:fp - 0x000A:word16] = Mem373[ds:0x29E5:word16]
	Mem380[ss:fp - 0x000C:word16] = Mem377[ds:0x29E3:word16]
	word16 ax_381 = fn0800_AD2F(ds, ptrArg00, psegArg02)
	Mem384[ss:fp - 0x0004:word16] = dx_171
	Mem385[ss:fp - 0x0006:word16] = ax_381
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> si:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BD5:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7ACB:
	Mem184[ss:fp - 0x000A:word16] = Mem177[ds:0x29DD:word16]
	Mem187[ss:fp - 0x000C:word16] = Mem184[ds:0x29DB:word16]
	word16 si_188
	word16 di_189
	selector ds_190
	word16 ax_191 = fn0800_3E27(fp - 0x0002, ds, wArg00, psegArg02, out si_188, out di_189, out ds_190)
	Mem193[ds_190:0x2E47:word16] = ax_191
	word16 v25_194 = Mem193[ds_190:0x467A:word16] + ax_191
	Mem195[ds_190:0x467A:word16] = v25_194
	Mem199[ds_190:0x467C:word16] = Mem195[ds_190:0x467C:word16] + (v25_194 <u 0x0000)
	Mem202[ss:fp - 0x000A:word16] = ds_190
	Mem205[ss:fp - 0x000C:word16] = 0x290F
	Mem208[ss:fp - 0x000E:word16] = Mem205[ds_190:0x2E47:word16]
	ds = fn0800_8407(fp - 0x0002, ds_190, wArg00, ptrArg02)
	branch Mem208[ds:0x2E47:word16] == 0x0000 l0800_7B56
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7AFB:
	branch Mem208[ds:0x2E45:word16] == 0x0000 l0800_7B32
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B32:
	word16 ax_338 = Mem208[ds:0x2E47:word16]
	Mem340[ds:0x2E47:word16] = Mem208[ds:0x2E47:word16] - 0x0001
	branch ax_338 != 0x0000 l0800_7B24
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B24:
	selector ds_345 = fn0800_8359(ds)
	al = al ^ Mem340[ds_345:0x2E4F:byte]
	Mem351[ss:fp - 0x000A:word16] = DPB(ax_338, al, 0)
	word16 di_353
	fn0800_8624(ds_345, bArg00, out di_353, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B02:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> si:<invalid> dl:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B17:
	word16 ax_317 = Mem208[ds:0x2E47:word16]
	Mem319[ds:0x2E47:word16] = Mem208[ds:0x2E47:word16] - 0x0001
	branch ax_317 != 0x0000 l0800_7B04
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B04:
	ds = fn0800_8359(ds)
	al = al ^ Mem319[ds:0x2E4F:byte]
	Mem328[ds:Mem319[ds:0x4E82:word16] + 0x4682:byte] = al
	Mem330[ds:0x4E82:word16] = Mem328[ds:0x4E82:word16] + 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B22:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> ds:<invalid> si:<invalid> dl:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B3D:
	branch (Mem208[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7B52
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B52:
	Mem312[ds:0x2E4F:word16] = Mem208[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B45:
	Mem310[ds:0x2E4F:word16] = Mem208[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B56:
	branch (Mem208[ds:0x466A:word16] | Mem208[ds:0x466C:word16]) == 0x0000 l0800_7BC0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7B5F:
	Mem228[ss:fp - 0x000A:word16] = Mem208[ds:0x29DD:word16]
	Mem231[ss:fp - 0x000C:word16] = Mem228[ds:0x29DB:word16]
	word16 si_232
	word16 di_233
	selector ds_234
	word16 ax_235 = fn0800_3E27(fp - 0x0002, ds, wArg00, psegArg02, out si_232, out di_233, out ds_234)
	Mem238[ds_234:0x2E29:word16] = ax_235
	Mem241[ss:fp - 0x000A:word16] = Mem238[ds_234:0x29DD:word16]
	Mem244[ss:fp - 0x000C:word16] = Mem241[ds_234:0x29DB:word16]
	word16 si_245
	word16 di_246
	selector ds_247
	word16 ax_248 = fn0800_3E27(fp - 0x0002, ds_234, wArg00, psegArg02, out si_245, out di_246, out ds_247)
	Mem251[ds_247:0x2E2B:word16] = ax_248
	Mem253[ss:fp - 0x000A:word16] = ds_247
	Mem256[ss:fp - 0x000C:word16] = 0x284F
	Mem259[ss:fp - 0x000E:word16] = Mem256[ds_247:0x2E2B:word16]
	selector ds_260 = fn0800_8407(fp - 0x0002, ds_247, wArg00, ptrArg02)
	Mem264[ss:fp - 0x000A:word16] = ds_260
	Mem267[ss:fp - 0x000C:word16] = 0x278F
	Mem270[ss:fp - 0x000E:word16] = Mem267[ds_260:0x2E29:word16]
	ds = fn0800_8407(fp - 0x0002, ds_260, wArg00, ptrArg02)
	Mem274[ds:0x2E29:word16] = Mem270[ds:0x2E29:word16] + 0x0002
	word16 v40_276 = Mem274[ds:0x467A:word16] + Mem274[ds:0x2E29:word16]
	Mem277[ds:0x467A:word16] = v40_276
	Mem281[ds:0x467C:word16] = Mem277[ds:0x467C:word16] + (v40_276 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB5:
	word16 ax_284 = Mem281[ds:0x2E29:word16]
	Mem286[ds:0x2E29:word16] = Mem281[ds:0x2E29:word16] - 0x0001
	branch ax_284 != 0x0000 l0800_7BB2
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7BB2:
	ds = fn0800_8359(ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7C78(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
fn0800_7C78_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7C78:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7E6D:
	word16 ax_30 = Mem0[ds:0x467C:word16]
	word16 dx_31 = Mem0[ds:0x467A:word16]
	branch ax_30 >=u Mem0[ds:0x4680:word16] l0800_7E7D
// DataOut: bp ds dx sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7D:
	branch ax_30 != Mem0[ds:0x4680:word16] l0800_7E88
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7F:
	branch dx_31 >=u Mem0[ds:0x467E:word16] l0800_7E88
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E88:
	Mem391[ds:0x2E43:word16] = Mem0[ds:0x2E43:word16] << 0x08 - Mem0[ds:0x2E45:byte]
	branch Mem391[ds:0x2E45:word16] != 0x0000 l0800_7EA0
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E99:
	branch Mem391[ds:0x4E82:word16] == 0x0000 l0800_7EAA
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EA0:
	Mem409[ss:fp - 0x000A:word16] = DPB(ax_30, Mem391[ds:0x2E43:byte], 0)
	word16 di_410
	fn0800_8624(ds, bArg00, out di_410, out ds)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7EAA:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7C78_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> si:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_7E85:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E7A:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7C8F:
	selector ds_37 = fn0800_7FDC(fp - 0x0002, ds)
	Mem42[ss:fp - 0x000A:word16] = 0x0000
	Mem46[ss:fp - 0x000C:word16] = Mem42[ss:fp - 0x0004:word16]
	Mem49[ss:fp - 0x000E:word16] = Mem46[ss:fp - 0x0006:word16]
	Mem52[ss:fp - 0x0010:word16] = Mem49[ds_37:0x29E5:word16]
	Mem55[ss:fp - 0x0012:word16] = Mem52[ds_37:0x29E3:word16]
	selector ds_107
	fn0800_ACB3(ds_37, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_107)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DCD:
	word16 ax_73 = Mem55[ds_107:0x466A:word16]
	word16 dx_74 = Mem55[ds_107:0x466C:word16]
	word16 v17_75 = Mem55[ds_107:0x466A:word16] - 0x0001
	Mem76[ds_107:0x466A:word16] = v17_75
	Mem80[ds_107:0x466C:word16] = Mem76[ds_107:0x466C:word16] - (v17_75 <u 0x0000)
	branch (ax_73 | dx_74) == 0x0000 l0800_7DE5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE5:
	word16 ax_305
	Mem282[ss:fp - 0x000A:word16] = 0x0004
	Mem285[ss:fp - 0x000C:word16] = 0x000F
	selector ds_286 = fn0800_854B(fp - 0x0002, ds_107, bArg02)
	Mem292[ss:fp - 0x000A:word16] = 0x0000
	word16 di_293
	selector ds_294
	fn0800_8600(ds_286, bArg00, out di_293, out ds_294)
	word16 ax_297 = Mem292[ds_294:0x467C:word16]
	word16 dx_298 = Mem292[ds_294:0x467A:word16]
	branch ax_297 >u Mem292[ds_294:0x4680:word16] l0800_7E1E
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E09:
	branch ax_297 <u Mem292[ds_294:0x4680:word16] l0800_7E11
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E0B:
	branch dx_298 >=u Mem292[ds_294:0x467E:word16] l0800_7E1E
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E1E:
	Mem367[ss:fp - 0x000A:word16] = 0x0001
	Mem372[ss:fp - 0x000C:word16] = 0x0000
	ax_305 = 0x0000
	ds = fn0800_854B(fp - 0x0002, ds_294, bArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E11:
	Mem379[ss:fp - 0x000A:word16] = 0x0001
	Mem381[ss:fp - 0x000C:word16] = 0x0001
	ax_305 = 0x0001
	ds = fn0800_854B(fp - 0x0002, ds_294, bArg02)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E2B:
	branch Mem292[ds:0x2E45:word16] != 0x0000 l0800_7E4F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E32:
	word16 si_337 = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> es:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E48:
	branch Mem292[ds:0x4E82:word16] != 0x0000 l0800_7E36
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E36:
	ax_305 = DPB(ax_305, Mem292[ds:si_337 + 0x4682:byte], 0) (alias)
	Mem356[ss:fp - 0x000A:word16] = ax_305
	word16 di_357
	si_337 = fn0800_8624(ds, bArg00, out di_357, out ds)
	Mem363[ds:0x4E82:word16] = Mem356[ds:0x4E82:word16] - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> si:<invalid> cx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7E4F:
	word16 v31_319 = Mem292[ds:0x29F7:word16] + 0x0001
	Mem320[ds:0x29F7:word16] = v31_319
	Mem324[ds:0x29F9:word16] = Mem320[ds:0x29F9:word16] + (v31_319 <u 0x0000)
	Mem328[ss:fp - 0x000A:word16] = Mem324[ds:0x29E5:word16]
	Mem331[ss:fp - 0x000C:word16] = Mem328[ds:0x29E3:word16]
	word16 ax_332 = fn0800_AD2F(ds, ptrArg00, wArg02)
	Mem335[ss:fp - 0x0004:word16] = dx_298
	Mem336[ss:fp - 0x0006:word16] = ax_332
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> si:<invalid> es:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DE2:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CAC:
	Mem87[ss:fp - 0x000A:word16] = Mem80[ds_107:0x29DD:word16]
	Mem90[ss:fp - 0x000C:word16] = Mem87[ds_107:0x29DB:word16]
	word16 si_92
	word16 di_93
	selector ds_94
	word16 ax_95 = fn0800_3E27(fp - 0x0002, ds_107, wArg00, wArg02, out si_92, out di_93, out ds_94)
	Mem97[ds_94:0x2E47:word16] = ax_95
	word16 v25_98 = Mem97[ds_94:0x467A:word16] + ax_95
	Mem99[ds_94:0x467A:word16] = v25_98
	Mem103[ds_94:0x467C:word16] = Mem99[ds_94:0x467C:word16] + (v25_98 <u 0x0000)
	Mem106[ss:fp - 0x000A:word16] = ax_95
	ds_107 = fn0800_7EAF(fp - 0x0002, ds_94, wArg00)
	branch (Mem106[ds_107:0x466A:word16] | Mem106[ds_107:0x466C:word16]) != 0x0000 l0800_7CD9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> dl:<invalid> si:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD9:
	Mem116[ss:fp - 0x000A:word16] = Mem106[ds_107:0x29DD:word16]
	Mem119[ss:fp - 0x000C:word16] = Mem116[ds_107:0x29DB:word16]
	word16 si_120
	word16 di_121
	selector ds_122
	word16 ax_123 = fn0800_3E27(fp - 0x0002, ds_107, wArg00, wArg02, out si_120, out di_121, out ds_122)
	Mem126[ds_122:0x2E29:word16] = ax_123
	Mem129[ss:fp - 0x000A:word16] = Mem126[ds_122:0x29DD:word16]
	Mem132[ss:fp - 0x000C:word16] = Mem129[ds_122:0x29DB:word16]
	word16 si_133
	word16 di_134
	selector ds_135
	word16 ax_136 = fn0800_3E27(fp - 0x0002, ds_122, wArg00, wArg02, out si_133, out di_134, out ds_135)
	Mem138[ds_135:0x2E2B:word16] = ax_136
	branch Mem138[ds_135:0x2E29:word16] != 0x0000 l0800_7D1D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D1D:
	branch Mem138[ds_135:0x2E29:word16] >=u 0x0007 l0800_7D68
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D68:
	Mem235[ss:fp - 0x000A:word16] = 0x0004
	Mem238[ss:fp - 0x000C:word16] = 0x000F
	selector ds_239 = fn0800_854B(fp - 0x0002, ds_135, bArg02)
	word16 ax_243 = DPB(0x000F, Mem238[ds_239:0x2E29:byte] - 0x06, 0)
	Mem246[ss:fp - 0x000A:word16] = ax_243
	word16 di_247
	selector ds_248
	fn0800_8600(ds_239, bArg00, out di_247, out ds_248)
	Mem260[ss:fp - 0x000A:word16] = DPB(ax_243, 0x00, 8)
	word16 ax_263 = DPB(ax_243, 0x00, 8)
	Mem265[ss:fp - 0x000C:word16] = ax_263
	selector ds_266 = fn0800_854B(fp - 0x0002, ds_248, bArg02)
	Mem274[ss:fp - 0x000A:word16] = DPB(ax_263, Mem265[ds_266:0x2E2B:byte] & 0xFF, 0)
	word16 di_275
	fn0800_8600(ds_266, bArg00, out di_275, out ds_107)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D24:
	Mem196[ss:fp - 0x000A:word16] = DPB(ax_136, 0x00, 8)
	Mem201[ss:fp - 0x000C:word16] = DPB(ax_136, 0x00, 8)
	selector ds_202 = fn0800_854B(fp - 0x0002, ds_135, bArg02)
	Mem213[ss:fp - 0x000A:word16] = DPB(ax_136, 0x00, 8)
	word16 ax_216 = DPB(ax_136, 0x00, 8)
	Mem218[ss:fp - 0x000C:word16] = ax_216
	selector ds_219 = fn0800_854B(fp - 0x0002, ds_202, bArg02)
	Mem227[ss:fp - 0x000A:word16] = DPB(ax_216, Mem218[ds_219:0x2E2B:byte] & 0xFF, 0)
	word16 di_228
	fn0800_8600(ds_219, bArg00, out di_228, out ds_107)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7D02:
	Mem171[ss:fp - 0x000A:word16] = 0x0003
	Mem174[ss:fp - 0x000C:word16] = 0x0006
	selector ds_176 = fn0800_854B(fp - 0x0002, ds_135, bArg02)
	Mem182[ss:fp - 0x000A:word16] = DPB(0x0006, Mem174[ds_176:0x2E2B:byte], 0)
	word16 di_184
	fn0800_8600(ds_176, bArg00, out di_184, out ds_107)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DAC:
	Mem151[ds_107:0x2E29:word16] = Mem138[ds_107:0x2E29:word16] + 0x0002
	word16 v36_153 = Mem151[ds_107:0x467A:word16] + Mem151[ds_107:0x2E29:word16]
	Mem154[ds_107:0x467A:word16] = v36_153
	Mem158[ds_107:0x467C:word16] = Mem154[ds_107:0x467C:word16] + (v36_153 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DC2:
	word16 ax_161 = Mem158[ds_107:0x2E29:word16]
	Mem163[ds_107:0x2E29:word16] = Mem158[ds_107:0x2E29:word16] - 0x0001
	branch ax_161 != 0x0000 l0800_7DBF
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7DBF:
	ds_107 = fn0800_8359(ds_107)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:0x08 es:<invalid> bx:<invalid> al:<invalid> dl:<invalid> si:<invalid> cx:<invalid> ds:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7CD6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> cl:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7EAF(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_7EAF_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_7EAF:
	word16 si_13 = wArg02
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_7FD1:
	word16 si_122 = si_13
	branch si_13 == 0x0000 l0800_7FD8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FD8:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_7EAF_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_7FD5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EBA:
	branch si_13 >=u 0x000C l0800_7F32
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F32:
	branch (si_122 & 0x0003) != 0x0000 l0800_7EFD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EFD:
	Mem209[ss:fp - 0x0008:word16] = 0x0001
	Mem215[ss:fp - 0x000A:word16] = 0x0000
	selector ds_219 = fn0800_8359(fn0800_854B(fp - 0x0002, ds, bArg02))
	al = Mem215[ds_219:0x2E4F:byte] ^ 0x00
	Mem225[ss:fp - 0x0008:word16] = (word16) al
	word16 di_226
	word16 si_228 = fn0800_8600(ds_219, bArg00, out di_226, out ds)
	branch (Mem225[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F2D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F2D:
	Mem245[ds:0x2E4F:word16] = Mem225[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F20:
	Mem243[ds:0x2E4F:word16] = Mem225[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F31:
	si_122 = si_228 - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F38:
	Mem97[ss:fp - 0x0008:word16] = 0x0005
	Mem100[ss:fp - 0x000A:word16] = 0x0017
	selector ds_101 = fn0800_854B(fp - 0x0002, ds, bArg02)
	branch si_122 <u 0x0048 l0800_7F8F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F8F:
	Mem159[ss:fp - 0x0008:word16] = 0x0004
	word16 ax_161 = si_122 - 0x000C
	Mem166[ss:fp - 0x000A:word16] = ax_161 >>u 0x0002
	word16 ax_163 = ax_161 >>u 0x0002
	ds = fn0800_854B(fp - 0x0002, ds_101, bArg02)
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FB4:
	si_13 = si_122
	branch si_122 != 0x0000 l0800_7FA5
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FA5:
	selector ds_193 = fn0800_8359(ds)
	al = al ^ Mem166[ds_193:0x2E4F:byte]
	ax_163 = DPB(ax_163, al, 0) (alias)
	Mem199[ss:fp - 0x0008:word16] = ax_163
	word16 di_200
	si_122 = fn0800_8600(ds_193, bArg00, out di_200, out ds) - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FB8:
	branch (Mem166[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7FCD
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FCD:
	Mem191[ds:0x2E4F:word16] = Mem166[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7FC0:
	Mem189[ds:0x2E4F:word16] = Mem166[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F4B:
	Mem107[ss:fp - 0x0008:word16] = 0x0004
	Mem110[ss:fp - 0x000A:word16] = 0x000F
	word16 ax_108 = 0x000F
	ds = fn0800_854B(fp - 0x0002, ds_101, bArg02)
	word16 di_113 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> dl:<invalid> es:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F6C:
	branch di_113 != 0x0048 l0800_7F5D
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F5D:
	selector ds_143 = fn0800_8359(ds)
	al = al ^ Mem110[ds_143:0x2E4F:byte]
	ax_108 = DPB(ax_108, al, 0) (alias)
	Mem149[ss:fp - 0x0008:word16] = ax_108
	word16 di_150
	si_122 = fn0800_8600(ds_143, bArg00, out di_150, out ds)
	di_113 = di_150 + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F71:
	branch (Mem110[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7F86
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F86:
	Mem141[ds:0x2E4F:word16] = Mem110[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F79:
	Mem139[ds:0x2E4F:word16] = Mem110[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7F8A:
	si_13 = si_122 - 0x0048
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> di:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> cx:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EBF:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> di:<invalid> cx:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF6:
	si_13 = si_122
	branch si_122 != 0x0000 l0800_7EC1
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EC1:
	Mem44[ss:fp - 0x0008:word16] = 0x0001
	Mem51[ss:fp - 0x000A:word16] = 0x0000
	selector ds_56 = fn0800_8359(fn0800_854B(fp - 0x0002, ds, bArg02))
	al = Mem51[ds_56:0x2E4F:byte] ^ 0x00
	Mem62[ss:fp - 0x0008:word16] = (word16) al
	word16 di_64
	word16 si_66 = fn0800_8600(ds_56, bArg00, out di_64, out ds)
	branch (Mem62[ds:0x2E4F:word16] & 0x0001) == 0x0000 l0800_7EF1
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF1:
	Mem83[ds:0x2E4F:word16] = Mem62[ds:0x2E4F:word16] >>u 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EE4:
	Mem81[ds:0x2E4F:word16] = Mem62[ds:0x2E4F:word16] >>u 0x0001 | 0x8000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EF5:
	si_122 = si_66 - 0x0001
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:0x08 ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_7EFA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> al:<invalid> es:<invalid> dl:<invalid> cx:<invalid> di:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_7FDC(word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_7FDC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_7FDC:
	Mem7[ds:0x466C:word16] = 0x0000
	Mem9[ds:0x466A:word16] = 0x0000
	Mem10[ds:0x2E47:word16] = 0x0000
	word16 dx_12 = Mem10[ds:0x2A0B:word16]
	Mem13[ds:0x4670:word16] = Mem10[ds:0x2A0D:word16]
	Mem14[ds:0x466E:word16] = dx_12
	word16 dx_20 = Mem14[ds:0x4662:word16] + Mem14[ds:0x467A:word16]
	word16 dx_24 = dx_20 + Mem14[ds:0x4672:word16]
	selector ds_41
	fn0800_ACB3(ds, DPB(ptrLoc10, Mem14[ds:0x29E3:word16], 0), Mem14[ds:0x29E5:word16], dx_24, Mem14[ds:0x4664:word16] + Mem14[ds:0x467C:word16] + (dx_20 <u 0x0000) + Mem14[ds:0x4674:word16] + (dx_24 <u 0x0000), 0x0000, out ds_41)
	selector ds_310
	fn0800_ACB3(ds_41, DPB(ptrLoc10, Mem14[ds_41:0x29DB:word16], 0), Mem14[ds_41:0x29DD:word16], 0x0000, 0x0000, 0x0000, out ds_310)
	word16 bp_255 = fp - 0x0002
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_82A1:
	branch (Mem14[ds_310:0x4676:word16] | Mem14[ds_310:0x4678:word16]) == 0x0000 l0800_82AD
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AD:
	branch (Mem14[ds_310:0x4672:word16] | Mem14[ds_310:0x4674:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B6:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82AA:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8042:
	word16 dx_169 = 0xFFFF - Mem14[ds_310:0x2E31:word16]
	word16 dx_173 = dx_169 - Mem14[ds_310:0x4672:word16]
	Mem177[ss:bp_255 - 0x0002:word16] = 0x0000 - (dx_169 <u 0x0000) - Mem14[ds_310:0x4674:word16] - (dx_173 <u 0x0000)
	Mem178[ss:bp_255 - 0x0004:word16] = dx_173
	word16 ax_179 = Mem178[ds_310:0x4678:word16]
	word16 dx_180 = Mem178[ds_310:0x4676:word16]
	branch ax_179 >u Mem178[ss:bp_255 - 0x0002:word16] l0800_807C
// DataOut: bp ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8068:
	branch ax_179 <u Mem178[ss:bp_255 - 0x0002:word16] l0800_806F
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806A:
	branch dx_180 >=u Mem178[ss:bp_255 - 0x0004:word16] l0800_807C
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_806F:
	word16 dx_500 = Mem178[ds_310:0x4676:word16]
	Mem501[ss:bp_255 - 0x0002:word16] = Mem178[ds_310:0x4678:word16]
	Mem502[ss:bp_255 - 0x0004:word16] = dx_500
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_807C:
	word16 dx_190 = Mem178[ds_310:0x2E71:word16] + Mem178[ds_310:0x2E31:word16]
	Mem191[ds_310:0x2E6F:word16] = Mem178[ds_310:0x2E73:word16]
	Mem192[ds_310:0x2E6D:word16] = dx_190
	Mem195[ss:fp - 0x0008:word16] = Mem192[ds_310:0x29E5:word16]
	Mem198[ss:fp - 0x000A:word16] = Mem195[ds_310:0x29E3:word16]
	Mem201[ss:fp - 0x000C:word16] = Mem198[ss:bp_255 - 0x0002:word16]
	Mem204[ss:fp - 0x000E:word16] = Mem201[ss:bp_255 - 0x0004:word16]
	word16 ax_206 = Mem204[ds_310:0x2E6D:word16] + Mem204[ds_310:0x4672:word16]
	Mem210[ss:fp - 0x0010:word16] = Mem204[ds_310:0x2E73:word16]
	Mem212[ss:fp - 0x0012:word16] = ax_206
	word16 di_214
	selector ds_215
	word16 si_216 = fn0800_4110(ds_310, wArg00, wArg02, wArg04, wArg06, wArg08, wArg0A, out di_214, out ds_215)
	word16 dx_219 = Mem212[ss:bp_255 - 0x0004:word16]
	word16 ax_218 = Mem212[ss:bp_255 - 0x0002:word16]
	word16 v27_220 = Mem212[ds_215:0x4676:word16] - dx_219
	Mem221[ds_215:0x4676:word16] = v27_220
	Mem225[ds_215:0x4678:word16] = Mem221[ds_215:0x4678:word16] - ax_218 - (v27_220 <u 0x0000)
	word16 v29_226 = Mem225[ds_215:0x4672:word16] + dx_219
	Mem227[ds_215:0x4672:word16] = v29_226
	Mem231[ds_215:0x4674:word16] = Mem227[ds_215:0x4674:word16] + ax_218 + (v29_226 <u 0x0000)
	word16 ax_232 = Mem231[ds_215:0x2E6F:word16]
	word16 dx_234 = Mem231[ds_215:0x2E6D:word16] + Mem231[ds_215:0x4672:word16]
	Mem235[ds_215:0x2E67:word16] = ax_232
	Mem236[ds_215:0x2E65:word16] = dx_234
	Mem237[ds_215:0x2E6B:word16] = ax_232
	Mem238[ds_215:0x2E69:word16] = dx_234
	word16 ax_239 = Mem238[ds_215:0x4670:word16]
	word16 dx_240 = Mem238[ds_215:0x466E:word16]
	branch ax_239 <=u Mem238[ds_215:0x4674:word16] l0800_80ED
// DataOut: bp ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80ED:
	branch ax_239 <u Mem238[ds_215:0x4674:word16] l0800_80F8
// DataOut: bp ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EF:
	branch dx_240 <u Mem238[ds_215:0x4672:word16] l0800_80F8
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F8:
	word16 dx_491 = Mem238[ds_215:0x2E6D:word16] + Mem238[ds_215:0x466E:word16]
	Mem493[ds_215:0x2E67:word16] = Mem238[ds_215:0x2E6F:word16]
	Mem494[ds_215:0x2E65:word16] = dx_491
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80F5:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_80EA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81E9:
	branch Mem238[ds_215:0x2E65:word16] - 0x0001 <=u Mem238[ds_215:0x2E6D:word16] l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81F3:
	branch Mem238[ds_215:0x466C:word16] >=u 0x0000 l0800_81FD
// DataOut: bp ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FD:
	branch Mem238[ds_215:0x466C:word16] != 0x0000 l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FF:
	branch Mem238[ds_215:0x466A:word16] >=u 0xFFFE l0800_8209
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8206:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81FA:
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_810D:
	fn0800_8832(ds_215)
	branch Mem238[ds_215:0x2E29:word16] <u 0x0002 l0800_8193
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8193:
	Mem478[ss:fp - 0x0008:word16] = 0x0001
	fn0800_89A8(ds_215, wArg00)
	Mem482[ds_215:0x2E47:word16] = Mem478[ds_215:0x2E47:word16] + 0x0001
	Mem484[ds_215:0x465C:word16] = Mem482[ds_215:0x465C:word16] + 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8117:
	branch Mem238[ds_215:0x2E6D:word16] + Mem238[ds_215:0x2E29:word16] <=u Mem238[ds_215:0x2E65:word16] l0800_813F
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8124:
	branch (Mem238[ds_215:0x466A:word16] | Mem238[ds_215:0x466C:word16]) == 0x0000 l0800_8130
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8130:
	Mem475[ds_215:0x2E29:word16] = Mem238[ds_215:0x2E65:word16] - Mem238[ds_215:0x2E6D:word16]
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_813F:
	Mem413[ss:fp - 0x0008:word16] = ds_215
	Mem416[ss:fp - 0x000A:word16] = 0x290F
	Mem419[ss:fp - 0x000C:word16] = Mem416[ds_215:0x2E47:word16]
	selector ds_420 = fn0800_831D(ds_215, wArg00, ptrArg02)
	Mem423[ss:fp - 0x0008:word16] = ds_420
	Mem426[ss:fp - 0x000A:word16] = 0x278F
	Mem431[ss:fp - 0x000C:word16] = Mem426[ds_420:0x2E29:word16] - 0x0002
	selector ds_432 = fn0800_831D(ds_420, wArg00, ptrArg02)
	Mem436[ss:fp - 0x0008:word16] = ds_432
	Mem439[ss:fp - 0x000A:word16] = 0x284F
	Mem444[ss:fp - 0x000C:word16] = Mem439[ds_432:0x2E2B:word16] - 0x0001
	ds_215 = fn0800_831D(ds_432, wArg00, ptrArg02)
	Mem450[ss:fp - 0x0008:word16] = Mem444[ds_215:0x2E29:word16]
	fn0800_89A8(ds_215, wArg00)
	word16 v40_452 = Mem450[ds_215:0x466A:word16] + 0x0001
	Mem453[ds_215:0x466A:word16] = v40_452
	Mem457[ds_215:0x466C:word16] = Mem453[ds_215:0x466C:word16] + (v40_452 <u 0x0000)
	Mem458[ds_215:0x2E47:word16] = 0x0000
	Mem461[ds_215:0x465C:word16] = Mem458[ds_215:0x465C:word16] + Mem458[ds_215:0x2E29:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81A5:
	branch Mem238[ds_215:0x465C:word16] <u 0x0400 l0800_81E9
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_81AD:
	word16 v45_362 = Mem238[ds_215:0x4666:word16] + Mem238[ds_215:0x465C:word16]
	Mem363[ds_215:0x4666:word16] = v45_362
	Mem367[ds_215:0x4668:word16] = Mem363[ds_215:0x4668:word16] + (v45_362 <u 0x0000)
	Mem370[ss:fp - 0x0008:word16] = Mem367[ds_215:0x4680:word16]
	Mem373[ss:fp - 0x000A:word16] = Mem370[ds_215:0x467E:word16]
	word16 dx_380
	word16 ax_381 = fn0800_8F18(0x0063, Mem373[ds_215:0x4668:word16], 0x0000, Mem373[ds_215:0x4666:word16], out dx_380)
	Mem383[ss:fp - 0x000C:word16] = dx_380
	Mem385[ss:fp - 0x000E:word16] = ax_381
	word16 dx_386
	word16 si_388
	word16 di_389
	word16 ax_390 = fn0800_8BC2(bp_255, si_216, di_214, bp, out dx_386, out bp_255, out si_388, out di_389)
	Mem393[ss:fp - 0x0008:word16] = dx_386
	Mem395[ss:fp - 0x000A:word16] = ax_390
	Mem397[ss:fp - 0x000C:word16] = ds_215
	Mem400[ss:fp - 0x000E:word16] = 0x2244
	si_216 = fn0800_B2EF(ds_215, wArg00, wArg02, out di_214)
	Mem405[ds_215:0x465C:word16] = 0x0000
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> di:<invalid> ds:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_812D:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8209:
	word16 ax_268 = Mem238[ds_215:0x2E69:word16] - Mem238[ds_215:0x2E6D:word16]
	Mem272[ds_215:0x4674:word16] = 0x0000 - (ax_268 <u 0x0000)
	Mem273[ds_215:0x4672:word16] = ax_268
	word16 ax_276 = Mem273[ds_215:0x2E6D:word16] - Mem273[ds_215:0x2E71:word16]
	word16 ax_280 = ax_276 - Mem273[ds_215:0x2E31:word16]
	Mem284[ss:bp_255 - 0x0002:word16] = 0x0000 - (ax_276 <u 0x0000) - (ax_280 <u 0x0000)
	Mem285[ss:bp_255 - 0x0004:word16] = ax_280
	word16 ax_287 = Mem285[ds_215:0x2E71:word16] + Mem285[ss:bp_255 - 0x0004:word16]
	Mem298[ss:fp - 0x0008:word16] = Mem285[ds_215:0x2E6D:word16] - ax_287 + Mem285[ds_215:0x4672:word16]
	Mem301[ss:fp - 0x000A:word16] = Mem298[ds_215:0x2E73:word16]
	Mem303[ss:fp - 0x000C:word16] = ax_287
	Mem306[ss:fp - 0x000E:word16] = Mem303[ds_215:0x2E73:word16]
	Mem309[ss:fp - 0x0010:word16] = Mem306[ds_215:0x2E71:word16]
	ds_310 = fn0800_B0F3(wArg00, wArg02, wArg04, wArg06, wArg08)
	branch Mem309[ds_310:0x2E65:word16] <u Mem309[ds_310:0x2E69:word16] l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> es:<invalid> cx:<invalid> cl:<invalid> al:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> si:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> bl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8269:
	word16 dx_316 = Mem309[ds_310:0x2E65:word16]
	branch Mem309[ds_310:0x2E67:word16] != Mem309[ds_310:0x2E6B:word16] l0800_8285
// DataOut: bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8276:
	branch dx_316 != Mem309[ds_310:0x2E69:word16] l0800_8285
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_827C:
	branch (Mem309[ds_310:0x4676:word16] | Mem309[ds_310:0x4678:word16]) == 0x0000 l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8285:
	branch Mem309[ds_310:0x466C:word16] != 0x0000 l0800_8293
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_828C:
	branch Mem309[ds_310:0x466A:word16] == 0xFFFE l0800_82B9
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82B9:
	word16 dx_99 = Mem14[ds_310:0x2E65:word16]
	branch Mem14[ds_310:0x2E67:word16] != Mem14[ds_310:0x2E6B:word16] l0800_82ED
// DataOut: ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82C6:
	branch dx_99 != Mem14[ds_310:0x2E69:word16] l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82CC:
	branch (Mem14[ds_310:0x4676:word16] | Mem14[ds_310:0x4678:word16]) != 0x0000 l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82D5:
	branch Mem14[ds_310:0x466C:word16] != 0x0000 l0800_82E3
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82DC:
	branch Mem14[ds_310:0x466A:word16] == 0xFFFE l0800_82ED
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82E3:
	Mem164[ds_310:0x2E47:word16] = Mem14[ds_310:0x2E47:word16] + Mem14[ds_310:0x4672:word16]
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_82ED:
	Mem106[ss:fp - 0x0008:word16] = ds_310
	Mem110[ss:fp - 0x000A:word16] = 0x290F
	Mem113[ss:fp - 0x000C:word16] = Mem110[ds_310:0x2E47:word16]
	selector ds_116 = fn0800_831D(ds_310, wArg00, ptrArg02)
	word16 v18_118 = Mem113[ds_116:0x466A:word16] + 0x0001
	Mem119[ds_116:0x466A:word16] = v18_118
	Mem123[ds_116:0x466C:word16] = Mem119[ds_116:0x466C:word16] + (v18_118 <u 0x0000)
	Mem128[ss:fp - 0x0008:word16] = 0x0000
	Mem130[ss:fp - 0x000A:word16] = 0x0000
	Mem132[ss:fp - 0x000C:word16] = 0x0000
	Mem135[ss:fp - 0x000E:word16] = Mem132[ds_116:0x29DD:word16]
	Mem138[ss:fp - 0x0010:word16] = Mem135[ds_116:0x29DB:word16]
	selector ds_144
	fn0800_ACB3(ds_116, ptrArg00, wArg02, wArg04, wArg06, wArg08, out ds_144)
	return ds_144
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:<invalid> ds:<invalid> si:<invalid> di:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_7FDC_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_8293:
	word16 ax_327 = Mem309[ss:bp_255 - 0x0002:word16]
	word16 v36_329 = Mem309[ds_310:0x466E:word16] - Mem309[ss:bp_255 - 0x0004:word16]
	Mem330[ds_310:0x466E:word16] = v36_329
	Mem334[ds_310:0x4670:word16] = Mem330[ds_310:0x4670:word16] - ax_327 - (v36_329 <u 0x0000)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ds:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dl:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)



selector fn0800_831D(selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_831D_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(16) Stack +0004(32)

l0800_831D:
	word16 ax_13
	branch wArg02 <=u 0x0001 l0800_8332
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Stack +0004(32)

l0800_8332:
	ax_13 = wArg02
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8329:
	ax_13 = fn0800_0C08(wArg02)
// DataOut: ax bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_8334:
	word16 ax_16 = (word16) (ax_13 *s 0x000C)
	selector es_19 = SLICE(ptrArg04, selector, 16)
	word16 v14_22 = Mem0[es_19:ax_16 + 0x0002:word16] + 0x0001
	Mem23[es_19:ax_16 + 0x0002:word16] = v14_22
	Mem27[es_19:ax_16 + 0x0004:word16] = Mem23[es_19:ax_16 + 0x0004:word16] + (v14_22 <u 0x0000)
	selector ds_38
	fn0800_401E(fp - 0x0002, ds, wArg02, Mem27[ds:0x29DB:word16], Mem27[ds:0x29DD:word16], out ds_38)
	return ds_38
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_831D_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> cl:<invalid> al:<invalid> cx:<invalid> es:<invalid> dl:<invalid> ah:<invalid> ds:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



selector fn0800_8359(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: al bp sp
fn0800_8359_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8359:
	word16 di_18
	selector ds_19
	word16 ax_20 = fn0800_3DCF(ds, DPB(ptrLoc08, Mem0[ds:0x29E3:word16], 0), Mem0[ds:0x29E5:word16], out di_18, out ds_19)
	Mem23[ss:fp - 0x0003:byte] = (byte) ax_20
	Mem37[ds_19:0x2E4B:word16] = Mem23[ds_19:((DPB(ax_20, 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem23[ds_19:0x2E4B:word16] >>u 0x08
	word16 v17_38 = Mem37[ds_19:0x29FF:word16] + 0x0001
	Mem39[ds_19:0x29FF:word16] = v17_38
	Mem43[ds_19:0x2A01:word16] = Mem39[ds_19:0x2A01:word16] + (v17_38 <u 0x0000)
	return ds_19
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8359_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> al:<invalid> ah:<invalid> ax:<invalid> bx:<invalid> dx:<invalid> cl:0x08 es:<invalid> cx:<invalid> ds:<invalid> si:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp



selector fn0800_83A1(word16 bp, selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_83A1_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_83A1:
	word16 di_101 = wArg06
	word16 si_16 = wArg06
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C4:
	si_16 = si_16 - 0x0001
	branch si_16 != 0x0000 l0800_83B0
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83B0:
	branch Mem0[SLICE(ptrArg02, selector, 16):(word16) ptrArg02 + (word16) (si_16 *s 0x000C) + 0x000A:word16] != 0x0000 l0800_83CB
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83C3:
	di_101 = di_101 - 0x0001
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(32)

l0800_83CB:
	selector ds_48 = fn0800_8489(fp - 0x0002, ds, di_101)
	Mem55[ss:fp - 0x0004:word16] = Mem0[ss:fp + 0x0002:word16] + 0x000A
	word16 si_50 = 0x0000
	branch 0x0000 >=u di_101 l0800_8401
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> dx:0x000C Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_83E5:
	Mem76[ss:fp - 0x000A:word16] = 0x0004
	Mem81[ss:fp - 0x000C:word16] = Mem76[Mem76[ss:fp + 0x0004:selector]:Mem76[ss:fp - 0x0004:word16]:word16]
	ds_48 = fn0800_8489(fp - 0x0002, ds_48, wArg00)
	Mem86[ss:fp - 0x0004:word16] = Mem81[ss:fp - 0x0004:word16] + 0x000C
	si_50 = si_50 + 0x0001
	branch si_50 <u di_101 l0800_83E5
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8401:
	return ds_48
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_83A1_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> al:<invalid> ah:<invalid> cl:0x08 dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8407(word16 bp, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_8407_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(32)

l0800_8407:
	word16 ax_17
	branch wArg02 <=u 0x0001 l0800_8420
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -000C(16) Stack +0004(32)

l0800_8420:
	ax_17 = wArg02
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8417:
	ax_17 = fn0800_0C08(wArg02)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0004(32)

l0800_8422:
	selector ds_36 = fn0800_8489(fp - 0x0002, ds, Mem0[SLICE(ptrArg04, selector, 16):(word16) (ax_17 *s 0x000C) + 0x0008:word16])
	branch Mem0[ss:fp - 0x0004:word16] <=u 0x0001 l0800_845F
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> bx:0x0002 dx:<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_8445:
	Mem57[ss:fp - 0x000A:word16] = Mem0[ss:fp - 0x0004:word16] - 0x0001
	Mem66[ss:fp - 0x000C:word16] = wArg02 - (0x0001 << Mem57[ss:fp - 0x0004:byte] - 0x01)
	ds_36 = fn0800_8489(fp - 0x0002, ds_36, wArg00)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

l0800_845F:
	return ds_36
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_8407_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> Sequence es:bx:<invalid> bx:<invalid> di:<invalid> cl:<invalid> cx:<invalid> al:<invalid> ah:<invalid> es:<invalid> dl:<invalid> ds:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp



selector fn0800_8465(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_8465_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_8465:
	branch Mem0[ds:0x2A21:word16] != 0x0002 l0800_847F
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_847F:
	return fn0800_8489(fp - 0x0002, ds, wArg02)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8475:
	return fn0800_854B(fp - 0x0002, ds, (byte) wArg04)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

fn0800_8465_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> di:<invalid> si:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_8489(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_8489_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8489:
	word16 di_13 = wArg02
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_853A:
	word16 ax_35 = Mem0[ss:fp + 0x0004:word16]
	Mem37[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_35 == 0x0000 l0800_8547
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8547:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_8489_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_8544:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8494:
	Mem43[ds:0x2E43:word16] = Mem37[ds:0x2E43:word16] >>u 0x0001
	branch (di_13 & 0x0001) == 0x0000 l0800_84A4
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_849E:
	Mem147[ds:0x2E43:word16] = Mem43[ds:0x2E43:word16] | 0x8000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84A4:
	Mem51[ds:0x2E45:word16] = Mem43[ds:0x2E45:word16] + 0x0001
	di_13 = di_13 >>u 0x0001
	word16 ax_52 = Mem51[ds:0x2E45:word16]
	branch ax_52 == 0x0010 l0800_84B5
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B5:
	Mem58[ss:fp - 0x0008:word16] = DPB(ax_52, Mem51[ds:0x2E43:byte], 0)
	word16 di_60
	selector ds_61
	fn0800_8624(ds, bArg00, out di_60, out ds_61)
	word16 ax_64 = Mem58[ds_61:0x2E43:word16]
	Mem69[ss:fp - 0x0008:word16] = ax_64 >>u 0x08
	fn0800_8624(ds_61, bArg00, out di_13, out ds)
	word16 ax_135 = ax_64 >>u 0x08
	word16 si_140 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84E3:
	branch Mem69[ds:0x4E82:word16] != 0x0000 l0800_84D1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84D1:
	ax_135 = DPB(ax_135, Mem69[ds:si_140 + 0x4682:byte], 0) (alias)
	Mem137[ss:fp - 0x0008:word16] = ax_135
	si_140 = fn0800_8624(ds, bArg00, out di_13, out ds)
	Mem144[ds:0x4E82:word16] = Mem137[ds:0x4E82:word16] - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84EA:
	word16 ax_87 = Mem69[ds:0x2A01:word16]
	word16 dx_88 = Mem69[ds:0x29FF:word16]
	branch ax_87 <u Mem69[ds:0x2A05:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F7:
	branch ax_87 >u Mem69[ds:0x2A05:word16] l0800_84FF
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84F9:
	branch dx_88 <=u Mem69[ds:0x2A03:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84FF:
	word16 dx_107 = Mem69[ds:0x29FF:word16] - Mem69[ds:0x2A03:word16]
	word16 ax_110 = Mem69[ds:0x2A01:word16] - Mem69[ds:0x2A05:word16] - (dx_107 <u 0x0000)
	branch ax_110 <u Mem69[ds:0x4E8A:word16] l0800_8532
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8514:
	branch ax_110 >u Mem69[ds:0x4E8A:word16] l0800_851C
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8516:
	branch dx_107 <=u Mem69[ds:0x4E88:word16] l0800_8532
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_851C:
	word16 dx_120 = Mem69[ds:0x29FF:word16] - Mem69[ds:0x2A03:word16]
	Mem125[ds:0x4E8A:word16] = Mem69[ds:0x2A01:word16] - Mem69[ds:0x2A05:word16] - (dx_120 <u 0x0000)
	Mem126[ds:0x4E88:word16] = dx_120
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8532:
	Mem103[ds:0x2E45:word16] = 0x0000
	Mem104[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_84B2:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> cl:0x08 si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



selector fn0800_854B(word16 bp, selector ds, byte bArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0004(8)
fn0800_854B_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(8)

l0800_854B:
	word16 di_128 = 0x0001 << bArg04 - 0x01
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_85EF:
	word16 ax_36 = Mem0[ss:fp + 0x0004:word16]
	Mem38[ss:fp + 0x0004:word16] = Mem0[ss:fp + 0x0004:word16] - 0x0001
	branch ax_36 == 0x0000 l0800_85FC
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85FC:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

fn0800_854B_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> si:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>

l0800_85F9:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_855D:
	Mem44[ds:0x2E43:word16] = Mem38[ds:0x2E43:word16] << 0x0001
	branch (Mem44[ss:fp + 0x0002:word16] & di_128) == 0x0000 l0800_856A
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8566:
	Mem137[ds:0x2E43:word16] = Mem44[ds:0x2E43:word16] + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_856A:
	Mem51[ds:0x2E45:word16] = Mem44[ds:0x2E45:word16] + 0x0001
	di_128 = di_128 >>u 0x0001
	word16 ax_52 = Mem51[ds:0x2E45:word16]
	branch ax_52 != 0x0008 l0800_85EF
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8578:
	word16 ax_125 = DPB(ax_52, Mem51[ds:0x2E43:byte], 0)
	Mem58[ss:fp - 0x0008:word16] = ax_125
	fn0800_8624(ds, bArg00, out di_128, out ds)
	word16 si_130 = 0x0000
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:<invalid> di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8598:
	branch Mem58[ds:0x4E82:word16] != 0x0000 l0800_8586
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_8586:
	ax_125 = DPB(ax_125, Mem58[ds:si_130 + 0x4682:byte], 0) (alias)
	Mem127[ss:fp - 0x0008:word16] = ax_125
	si_130 = fn0800_8624(ds, bArg00, out di_128, out ds)
	Mem134[ds:0x4E82:word16] = Mem127[ds:0x4E82:word16] - 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_859F:
	word16 ax_77 = Mem58[ds:0x2A01:word16]
	word16 dx_78 = Mem58[ds:0x29FF:word16]
	branch ax_77 <u Mem58[ds:0x2A05:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AC:
	branch ax_77 >u Mem58[ds:0x2A05:word16] l0800_85B4
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85AE:
	branch dx_78 <=u Mem58[ds:0x2A03:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85B4:
	word16 dx_97 = Mem58[ds:0x29FF:word16] - Mem58[ds:0x2A03:word16]
	word16 ax_100 = Mem58[ds:0x2A01:word16] - Mem58[ds:0x2A05:word16] - (dx_97 <u 0x0000)
	branch ax_100 <u Mem58[ds:0x4E8A:word16] l0800_85E7
// DataOut: bp di ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85C9:
	branch ax_100 >u Mem58[ds:0x4E8A:word16] l0800_85D1
// DataOut: bp di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85CB:
	branch dx_97 <=u Mem58[ds:0x4E88:word16] l0800_85E7
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85D1:
	word16 dx_110 = Mem58[ds:0x29FF:word16] - Mem58[ds:0x2A03:word16]
	Mem115[ds:0x4E8A:word16] = Mem58[ds:0x2A01:word16] - Mem58[ds:0x2A05:word16] - (dx_110 <u 0x0000)
	Mem116[ds:0x4E88:word16] = dx_110
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_85E7:
	Mem93[ds:0x2E45:word16] = 0x0000
	Mem94[ds:0x2E43:word16] = 0x0000
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> cl:0x08 di:<invalid> ax:<invalid> al:<invalid> dx:<invalid> ah:<invalid> bx:<invalid> si:<invalid> es:<invalid> dl:<invalid> ds:<invalid> cx:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: Local -0002(16)



word16 fn0800_8600(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8600_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8600:
	branch Mem0[ds:0x2E45:word16] == 0x0000 l0800_861B
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_861B:
	word16 di_40
	selector ds_41
	return fn0800_8624(ds, bArg02, out di_40, out ds_41)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

l0800_860D:
	Mem27[ds:Mem0[ds:0x4E82:word16] + 0x4682:byte] = bArg02
	Mem29[ds:0x4E82:word16] = Mem27[ds:0x4E82:word16] + 0x0001
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dl:<invalid> -2(fp):bp

fn0800_8600_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dl:<invalid> bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cl:0x08 es:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -4(fp):dx -2(fp):bp



word16 fn0800_8624(selector ds, byte bArg02, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di ds si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(8)
fn0800_8624_entry:
	*dsOut = ds
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8624:
	word16 ax_8 = Mem0[ds:0x2A05:word16]
	word16 dx_9 = Mem0[ds:0x2A03:word16]
	branch ax_8 >u Mem0[ds:0x4E86:word16] l0800_8678
// DataOut: di ds dx si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8634:
	branch ax_8 <u Mem0[ds:0x4E86:word16] l0800_863C
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_8636:
	branch dx_9 >=u Mem0[ds:0x4E84:word16] l0800_8678
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(8)

l0800_863C:
	selector ds_59
	word16 di_60
	*diOut = fn0800_4047(ds, bArg02, DPB(ptrLoc06, Mem0[ds:0x29DF:word16], 0), Mem0[ds:0x29E1:word16], out ds_59)
	Mem74[ds_59:0x2E49:word16] = Mem0[ds_59:((DPB(DPB(ax_8, bArg02, 0), 0x00, 8) & 0x00FF) << 0x0001) + 0x2A29:word16] ^ Mem0[ds_59:0x2E49:word16] >>u 0x08
	word16 v18_75 = Mem74[ds_59:0x2A03:word16] + 0x0001
	Mem76[ds_59:0x2A03:word16] = v18_75
	Mem80[ds_59:0x2A05:word16] = Mem76[ds_59:0x2A05:word16] + (v18_75 <u 0x0000)
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -2(fp):bp

l0800_8678:
	return si
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8624_exit:
// DataOut: di ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cl:0x08 es:<invalid> dl:<invalid> ds:<invalid> si:<invalid> cx:<invalid> di:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_867A(word16 wArg04, selector psegArg06, word16 wArg08, selector psegArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: bp ds sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ax
// Stack args: Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_867A_entry:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_867A:
	word16 si_26
	word16 bx_115 = DPB(bx, fn0800_87EF(wArg04 + 0x0004, psegArg06, out si_26), 0)
	byte al_41 = Mem0[psegArg06:si_26 + 0x000A:byte] * 0x02 + true
	selector ds_19 = psegArg06
	word16 di_128 = wArg08
	selector es_23 = psegArg0A
	word16 si_108 = si_26 + 0x000B
	byte al_109 = al_41 * 0x02
	word16 ax_110 = DPB(ax, al_41 * 0x02, 0)
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8745:
	al_109 = al_109 * 0x02
	byte SCZO_65 = cond(al_109)
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	byte Z_528 = SCZO_65
	byte C_530 = SCZO_65
	branch al_109 <u 0x00 l0800_8751
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8749:
	Mem522[es_23:di_128:byte] = Mem0[ds_19:si_108:byte]
	byte SCZO_527 = cond(al_109 * 0x02)
	si_108 = si_108 + 0x0001 + 0x0001
	di_128 = di_128 + 0x0001 + 0x0001
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109 * 0x02, 0) (alias)
	Z_528 = SCZO_527 (alias)
	C_530 = SCZO_527 (alias)
	branch al_109 * 0x02 >=u 0x00 l0800_8744
// DataOut: al bl di ds es si ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8751:
	branch Z_528 l0800_873C
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_873C:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + C_530
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	branch al_109 <u 0x00 l0800_8753
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8741:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8744:
	Mem78[es_23:di_128:byte] = Mem0[ds_19:si_108:byte]
	si_108 = si_108 + 0x0000
	di_128 = di_128 + 0x0000
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8753:
	byte al_102 = al_109 * 0x02
	word16 cx_117 = 0x0002
	byte bh_438 = 0x00
	bx_115 = DPB(bx_115, 0x00, 8) (alias)
	word16 ax_103 = DPB(ax_110, al_102, 0)
	byte C_101 = cond(al_102)
	branch al_102 == 0x00 l0800_879B
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_879B:
	al_102 = Mem0[ds_19:si_108:byte] * 0x02 + (al_102 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_103 = DPB(ax_110, al_102, 0) (alias)
	C_101 = cond(al_102) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875C:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_875F:
	branch C_101 l0800_86E6
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E6:
	byte al_392 = al_102 * 0x02
	word16 ax_393 = DPB(ax_103, al_392, 0)
	byte C_397 = cond(al_392)
	branch al_392 == 0x00 l0800_86BC
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86BC:
	al_392 = Mem0[ds_19:si_108:byte] * 0x02 + (al_392 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_393 = DPB(ax_103, al_392, 0) (alias)
	C_397 = cond(al_392) (alias)
// DataOut: al bh bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86EA:
	al_109 = al_392 * 0x02
	cx_117 = DPB(0x0002, C_397 + 0x04, 0) (alias)
	ax_110 = DPB(ax_393, al_109, 0) (alias)
	byte C_409 = cond(al_109)
	branch al_109 == 0x00 l0800_86C2
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C2:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_393, al_109, 0) (alias)
	C_409 = cond(al_109) (alias)
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F0:
	branch C_409 l0800_8701
// DataOut: al bh bl cl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F2:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	byte C_422 = cond(al_109)
	branch al_109 == 0x00 l0800_86C8
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86C8:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_422 = cond(al_109) (alias)
// DataOut: al bh bl cl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86F9:
	byte cl_430 = (byte) (cx_117 - 0x0001) * 0x02 + C_422
	cx_117 = DPB(cx_117 - 0x0001, cl_430, 0) (alias)
	branch cl_430 == 0x09 l0800_86A7
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A7:
	word16 cx_435 = DPB(cx_117, 0x04, 0)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A9:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	byte C_448 = cond(al_109)
	branch al_109 == 0x00 l0800_86A1
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86A1:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_448 = cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86AD:
	bh_438 = bh_438 * 0x02 + C_448
	bx_115 = DPB(bx_115, bh_438, 8) (alias)
	cx_435 = cx_435 - 0x0001
	branch cx_435 != 0x0000 l0800_86A9
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B1:
	word16 cx_463 = DPB(cx_435, (bh_438 + 0x03) * 0x02, 0)
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7:
	branch cx_463 == 0x0000 l0800_86B9
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B9:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86B7_1:
	Mem470[es_23:di_128:word16] = Mem0[ds_19:si_108:word16]
	si_108 = si_108 + 0x0002
	di_128 = di_128 + 0x0002
	cx_463 = cx_463 - 0x0001
// DataOut: al bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8761:
	al_109 = al_102 * 0x02
	ax_110 = DPB(ax_103, al_109, 0) (alias)
	byte C_287 = cond(al_109)
	branch al_109 == 0x00 l0800_87A0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A0:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_103, al_109, 0) (alias)
	C_287 = cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8765:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8768:
	branch C_287 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876A:
	al_109 = al_109 * 0x02
	cx_117 = 0x0003
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	byte C_302 = cond(al_109)
	branch al_109 == 0x00 l0800_87A5
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0002 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x02 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87A5:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_302 = cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_876F:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8772:
	branch C_302 l0800_8701
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8774:
	byte cl_310 = Mem0[ds_19:si_108:byte]
	si_108 = si_108 + 0x0001
	word16 cx_313 = DPB(0x0003, cl_310, 0)
	branch cl_310 == 0x00 l0800_87B4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:0x0003 bh:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> cl:0x03 -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87B4:
	word16 ax_336 = ds_19 + (si_108 >>u 0x04)
	byte al_339 = (byte) ax_110
	di_128 = (di_128 & 0x000F) + 0x8000
	es_23 = es_23 + (di_128 >>u 0x04) - 0x0800
	si_108 = si_108 & 0x000F
	bx_115 = si_108 >>u 0x04
	ds_19 = ax_336
	al_109 = al_339 * 0x02
	ax_110 = DPB(ax_110, al_339 * 0x02, 0) (alias)
	byte C_346 = cond(al_339 * 0x02)
	branch al_339 * 0x02 != 0x00 l0800_87E3
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87DD:
	al_109 = Mem0[ax_336:si_108 & 0x000F:byte] * 0x02 + (al_339 * 0x02 <u 0x00)
	si_108 = (si_108 & 0x000F) + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_346 = cond(al_109) (alias)
// DataOut: al bl di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E3:
	branch C_346 l0800_87E8
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87E8:
	selector ds_359
	*dsOut = psegLoc0A
	return si
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_867A_exit:
// DataOut: bp ds sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:si si:di ds:<invalid> di:ds es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> dx:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_87E5:
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:0x04 bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_877B:
	cx_117 = cx_313 + 0x0008
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8701:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	byte C_148 = cond(al_109)
	branch al_109 == 0x00 l0800_86CE
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86CE:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	C_148 = cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8705:
	branch C_148 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8707:
	byte al_156 = al_109 * 0x02
	word16 ax_157 = DPB(ax_110, al_156, 0)
	byte C_161 = cond(al_156)
	branch al_156 == 0x00 l0800_86D4
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86D4:
	al_156 = Mem0[ds_19:si_108:byte] * 0x02 + (al_156 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_157 = DPB(ax_110, al_156, 0) (alias)
	C_161 = cond(al_156) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_870E:
	al_109 = al_156 * 0x02
	ax_110 = DPB(ax_157, al_109, 0) (alias)
	byte C_173 = cond(al_109)
	branch al_109 == 0x00 l0800_86DA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86DA:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_157, al_109, 0) (alias)
	C_173 = cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8714:
	branch C_173 l0800_8784
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8784:
	byte al_216 = al_109 * 0x02
	word16 ax_217 = DPB(ax_110, al_216, 0)
	byte C_221 = cond(al_216)
	branch al_216 == 0x00 l0800_87AA
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AA:
	al_216 = Mem0[ds_19:si_108:byte] * 0x02 + (al_216 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_217 = DPB(ax_110, al_216, 0) (alias)
	C_221 = cond(al_216) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8788:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_878B:
	al_109 = al_216 * 0x02
	bx_115 = DPB(bx_115, C_161 * 0x02 + C_221 | 0x04, 8) (alias)
	ax_110 = DPB(ax_217, al_109, 0) (alias)
	byte C_234 = cond(al_109)
	branch al_109 == 0x00 l0800_87AF
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_87AF:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_217, al_109, 0) (alias)
	C_234 = cond(al_109) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8794:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8797:
	branch C_234 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8799:
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8716:
	bx_115 = DPB(bx_115, C_161, 8) (alias)
	branch C_161 != 0x00 l0800_8728
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_871D:
	bx_115 = DPB(bx_115, C_161 + 0x01, 8) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8722:
	al_109 = al_109 * 0x02
	ax_110 = DPB(ax_110, al_109, 0) (alias)
	branch al_109 == 0x00 l0800_86E0
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_86E0:
	al_109 = Mem0[ds_19:si_108:byte] * 0x02 + (al_109 <u 0x00)
	si_108 = si_108 + 0x0001
	ax_110 = DPB(ax_110, al_109, 0) (alias)
// DataOut: al bh bl cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8726:
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8728:
	bx_115 = DPB(bx_115, Mem0[ds_19:si_108:byte], 0) (alias)
	__cli()
	word16 si_121 = si_108 + 0x0001
	word16 si_125 = di_128 - 0x0001 - bx_115
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> bl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733:
	branch cx_117 == 0x0000 l0800_8736
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8736:
	__sti()
	si_108 = si_121
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)

l0800_8733_1:
	Mem132[es_23:di_128:byte] = Mem0[ds_19:si_125:byte]
	si_125 = si_125 + 0x0001
	di_128 = di_128 + 0x0001
	cx_117 = cx_117 - 0x0001
// DataOut: al bl bp cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:<invalid> si:<invalid> ds:<invalid> di:<invalid> es:<invalid> al:<invalid> cx:<invalid> bh:<invalid> bl:<invalid> cl:<invalid> bx:<invalid> ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000A(16)



byte fn0800_87EF(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: bl si
// Trashed: ah al ax bh bl bx eax ebx esi rax rbx rsi si sil
// Preserved: sp
fn0800_87EF_entry:
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87EF:
	word16 si_4
	byte al_5 = fn0800_87F4(si, ds, out si_4)
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F2_thunk_fn0800_87F4:
	word16 si_10
	fn0800_87F4(si_4, ds, out si_10)
	return al_5
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>

fn0800_87EF_exit:
// DataOut: bl si
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> ax:<invalid> si:<invalid> al:<invalid>



byte fn0800_87F4(word16 si, selector ds, ptr16 & siOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds si
// LiveOut: al si
// Trashed: ah al ax eax esi rax rsi si sil
// Preserved: ah sp
fn0800_87F4_entry:
// DataOut: bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_87F4:
	word16 si_8
	*siOut = si + 0x0002
	return Mem0[si + 0x0001:byte]
// DataOut: al bl di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_87F4_exit:
// DataOut: al si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> si:si + 0x0002 al:ah ah:ah



void fn0800_87F8(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: di sp
fn0800_87F8_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_87F8:
	ptr32 es_di_8 = Mem0[ds:0x2E37:segptr32]
	word16 di_13 = (word16) es_di_8
	selector es_10 = SLICE(es_di_8, selector, 16)
	word16 ax_11 = Mem0[ds:0x2E31:word16]
	word16 cx_12 = 0x8000
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8804:
	branch cx_12 == 0x0000 l0800_8806
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8806:
	ptr32 es_di_20 = Mem0[ds:0x2E33:segptr32]
	word16 di_21 = (word16) es_di_20
	selector es_22 = SLICE(es_di_20, selector, 16)
	word16 ax_23 = Mem0[ds:0x2E31:word16]
	word16 cx_24 = 0x8000
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810:
	branch cx_24 == 0x0000 l0800_8812
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8812:
	ptr32 es_di_32 = Mem0[ds:0x2E3B:segptr32]
	word16 di_33 = (word16) es_di_32
	selector es_34 = SLICE(es_di_32, selector, 16)
	word16 cx_35 = Mem0[ds:0x2E31:word16]
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881C:
	branch cx_35 == 0x0000 l0800_881E
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_881E:
	ptr32 es_di_46 = Mem0[ds:0x2E3F:segptr32]
	word16 di_47 = (word16) es_di_46
	selector es_48 = SLICE(es_di_46, selector, 16)
	word16 ax_49 = 0x0000
	word16 cx_52 = Mem0[ds:0x2E31:word16]
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8828:
	Mem56[es_48:di_47:word16] = ax_49
	di_47 = di_47 + 0x0002
	ax_49 = ax_49 + 0x0001
	cx_52 = cx_52 - 0x0001
	branch cx_52 != 0x0000 l0800_8828
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_882C:
	Mem62[ds:0x2E2D:word16] = cx_52
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

fn0800_87F8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:di -2(fp):di

l0800_881C_1:
	Mem42[es_34:di_33:word16] = 0x0000
	di_33 = di_33 + 0x0002
	cx_35 = cx_35 - 0x0001
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8810_1:
	Mem28[es_22:di_21:word16] = ax_23
	di_21 = di_21 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di

l0800_8804_1:
	Mem16[es_10:di_13:word16] = ax_11
	di_13 = di_13 + 0x0002
	cx_12 = cx_12 - 0x0001
// DataOut: ax bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:<invalid> di:<invalid> -2(fp):di



void fn0800_8832(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: di si sp
fn0800_8832_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8832:
	fn0800_889A(ds)
	branch Mem0[ds:0x2E29:word16] <u 0x0002 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_883E:
	branch Mem0[ds:0x2E65:word16] - Mem0[ds:0x2E6D:word16] <u 0x0003 l0800_8897
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_884D:
	word16 ax_34 = Mem0[ds:0x2E2D:word16]
	word16 si_32 = Mem0[ds:0x2E29:word16]
	word16 di_33 = Mem0[ds:0x2E2B:word16]
	word16 ax_37 = ax_34 + 0x0001
	branch ax_34 + 0x0001 != Mem0[ds:0x2E31:word16] l0800_8865
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> es:<invalid> di:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> si:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8863:
	ax_37 = 0x0000
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8865:
	Mem42[ds:0x2E2D:word16] = ax_37
	Mem44[ds:0x2E6D:word16] = Mem42[ds:0x2E6D:word16] + 0x0001
	fn0800_889A(ds)
	Mem47[ds:0x2E6D:word16] = Mem44[ds:0x2E6D:word16] - 0x0001
	Mem48[ds:0x2E2D:word16] = ax_34
	branch Mem48[ds:0x2E29:word16] <=u si_32 l0800_888F
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_888F:
	Mem54[ds:0x2E29:word16] = si_32
	Mem55[ds:0x2E2B:word16] = di_33
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_887D:
	Mem52[ds:0x2E29:word16] = 0x0001
	Mem53[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8897:
	return
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ax:<invalid> si:<invalid> di:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si

fn0800_8832_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> di:di si:si es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -6(fp):<invalid> -4(fp):di -2(fp):si



void fn0800_889A(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: di ds si sp
fn0800_889A_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_889A:
	Mem9[ds:0x2E2B:word16] = 0x0000
	Mem11[ds:0x2E29:word16] = 0x0001
	ptr32 es_di_12 = Mem11[ds:0x2E6D:segptr32]
	word16 ax_15 = Mem11[es_di_12:word16]
	Mem17[ds:0x4E90:word16] = ax_15
	word16 di_13 = (word16) es_di_12
	word16 dx_21 = Mem17[ds:0x2E69:word16] - (di_13 + 0x0001)
	selector es_14 = SLICE(es_di_12, selector, 16)
	byte al_16 = (byte) ax_15
	word16 di_18 = di_13 + 0x0001
	byte Z_230 = cond(dx_21)
	word16 cx_226 = dx_21
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_88BC:
	branch cx_226 == 0x0000 l0800_88BE
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BC_1:
	Z_230 = cond(al_16 - Mem17[es_14:di_236:byte]) (alias)
	di_18 = di_236 + 0x0001
	cx_226 = cx_226 - 0x0001
	word16 di_236 = di_18
	branch al_16 != Mem17[es_14:di_236:byte] l0800_88BC
// DataOut: al bp cx di ds dx es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88BE:
	branch Z_230 l0800_88C1
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C0:
	cx_226 = cx_226 - 0x0001
// DataOut: bp cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88C1:
	Mem51[ds:0x4E94:word16] = Mem17[ds:0x2E69:word16] - (word16) Mem17[ds:0x2E6D:segptr32]
	word16 dx_46 = dx_21 - cx_226
	word16 ax_123 = Mem51[Mem51[ds:0x2E39:selector]:Mem51[ds:0x4E90:word16] << 0x0001:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88DC:
	branch ax_123 != Mem51[ds:0x2E31:word16] l0800_88E5
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E5:
	word16 di_91 = ax_123 << 0x0001
	Mem95[ds:0x4E92:word16] = Mem51[Mem51[ds:0x2E41:selector]:di_91:word16]
	word16 bx_224 = Mem95[ds:0x2E2D:word16]
	branch bx_224 >u ax_123 l0800_8903
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88FC:
	bx_224 = bx_224 + Mem95[ds:0x2E31:word16]
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8903:
	ptr32 es_si_101 = Mem95[ds:0x2E6D:segptr32]
	word16 bx_100 = bx_224 - ax_123
	branch Mem95[ds:0x4E90:word16] != Mem95[SLICE(es_si_101, selector, 16):(word16) es_si_101 - bx_100:word16] l0800_897E
// DataOut: bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8914:
	word16 cx_126 = Mem95[Mem95[ds:0x2E3D:selector]:di_91:word16]
	branch cx_126 <=u bx_100 l0800_892D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_892D:
	branch cx_126 <=u dx_46 l0800_893A
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8931:
	bx_100 = bx_100 - (cx_126 - dx_46)
	cx_126 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893A:
	branch cx_126 != dx_46 l0800_8963
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_893E:
	ptr32 es_di_160 = Mem95[ds:0x2E6D:segptr32]
	word16 di_163 = (word16) es_di_160 + cx_126
	word16 ax_169 = Mem95[ds:0x4E94:word16] - cx_126
	selector es_162 = SLICE(es_di_160, selector, 16)
	word16 si_166 = di_163 - bx_100
	byte Z_173 = cond(ax_169)
	word16 cx_176 = ax_169
	selector ds_179 = Mem95[ds:0x2E6F:selector]
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957:
	branch cx_176 == 0x0000 l0800_8959
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8957_1:
	Z_173 = cond(Mem95[ds_179:si_238:byte] - Mem95[es_162:di_237:byte]) (alias)
	si_166 = si_238 + 0x0001
	di_163 = di_237 + 0x0001
	cx_176 = cx_176 - 0x0001
	word16 di_237 = di_163
	word16 si_238 = si_166
	branch Mem95[ds_179:si_238:byte] != Mem95[es_162:di_237:byte] l0800_8957
// DataOut: ax bp bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_8959:
	branch Z_173 l0800_895C
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895B:
	cx_176 = cx_176 + 0x0001
// DataOut: ax bp bx cx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16) Local -0006(16)

l0800_895C:
	cx_126 = dx_46 + (ax_169 - cx_176)
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:<invalid> -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8922:
	bx_100 = 0x0001
	cx_126 = dx_46
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8963:
	branch cx_126 <=u Mem95[ds:0x2E2F:word16] l0800_896D
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8969:
	cx_126 = Mem95[ds:0x2E2F:word16]
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_896D:
	branch cx_126 <u Mem95[ds:0x2E29:word16] l0800_897E
// DataOut: bp bx cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8973:
	Mem149[ds:0x2E29:word16] = cx_126
	Mem150[ds:0x2E2B:word16] = bx_100
// DataOut: bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_897E:
	ax_123 = Mem95[ds:0x4E92:word16]
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_88E2:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8984:
	branch Mem51[ds:0x2E29:word16] != 0x0002 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_898B:
	branch Mem51[ds:0x2E2B:word16] <=u 0x0100 l0800_89A5
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_8996:
	Mem88[ds:0x2E29:word16] = 0x0001
	Mem89[ds:0x2E2B:word16] = 0x0000
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si
// LocalsOut: fp(16)

l0800_89A5:
	return
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 Sequence es:di:<invalid> ax:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> Sequence es:si:<invalid> si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si

fn0800_889A_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> ax:<invalid> di:di dx:<invalid> cx:<invalid> es:<invalid> si:si bx:<invalid> Sequence es:si:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):si



void fn0800_89A8(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di sp
// Stack args: Stack +0002(16)
fn0800_89A8_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_89A8:
	word16 dx_11 = Mem0[ds:0x2E31:word16]
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_89B1:
	word16 di_27 = Mem0[ds:0x2E2D:word16]
	selector es_29 = Mem0[ds:0x2E41:selector]
	word16 ax_30 = Mem0[es_29:di_27 << 0x0001:word16]
	Mem32[es_29:di_27 << 0x0001:word16] = dx_11
	branch Mem32[ds:0x2E2D:word16] == ax_30 l0800_89EA
// DataOut: ax ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89C7:
	ptr32 es_di_164 = Mem32[ds:0x2E6D:segptr32]
	word16 di_168 = Mem32[SLICE(es_di_164, selector, 16):(word16) es_di_164 - dx_11:word16]
	Mem172[Mem32[ds:0x2E39:selector]:di_168 << 0x0001:word16] = ax_30
	branch ax_30 != dx_11 l0800_89EA
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89E0:
	Mem176[Mem172[ds:0x2E35:selector]:di_168 << 0x0001:word16] = dx_11
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89EA:
	word16 di_38 = Mem32[Mem32[ds:0x2E6D:segptr32]:word16]
	word16 ax_40 = Mem32[ds:0x2E2D:word16]
	selector es_42 = Mem32[ds:0x2E39:selector]
	branch Mem32[es_42:di_38 << 0x0001:word16] != dx_11 l0800_8A08
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A08:
	Mem163[Mem32[ds:0x2E41:selector]:Mem32[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_89FF:
	Mem156[es_42:di_38 << 0x0001:word16] = ax_40
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A18:
	Mem47[Mem32[ds:0x2E35:selector]:di_38 << 0x0001:word16] = ax_40
	ptr32 es_di_48 = Mem47[ds:0x2E6D:segptr32]
	word16 di_49 = (word16) es_di_48
	word16 bx_56 = Mem47[ds:0x2E69:word16] - (di_49 + 0x0001)
	selector es_50 = SLICE(es_di_48, selector, 16)
	byte al_51 = Mem47[es_di_48:byte]
	word16 di_153 = di_49 + 0x0001
	byte Z_149 = cond(bx_56)
	word16 cx_146 = bx_56
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A2F:
	branch cx_146 == 0x0000 l0800_8A31
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A2F_1:
	Z_149 = cond(al_51 - Mem47[es_50:di_177:byte]) (alias)
	di_153 = di_177 + 0x0001
	cx_146 = cx_146 - 0x0001
	word16 di_177 = di_153
	branch al_51 != Mem47[es_50:di_177:byte] l0800_8A2F
// DataOut: al bx cx di ds dx es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A31:
	branch Z_149 l0800_8A34
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A33:
	cx_146 = cx_146 - 0x0001
// DataOut: bx cx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A34:
	word16 bx_110 = bx_56 - cx_146
	Mem86[Mem47[ds:0x2E3D:selector]:Mem47[ds:0x2E2D:word16] << 0x0001:word16] = bx_110
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A86:
	word16 ax_95 = Mem86[ds:0x2E2D:word16]
	word16 ax_101 = ax_95 + 0x0001
	branch ax_95 + 0x0001 != dx_11 l0800_8A90
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A8E:
	ax_101 = 0x0000
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A90:
	Mem103[ds:0x2E2D:word16] = ax_101
	Mem105[ds:0x2E6D:word16] = Mem103[ds:0x2E6D:word16] + 0x0001
	word16 v20_106 = wArg02 - 0x0001
	wArg02 = v20_106
	branch v20_106 == 0x0000 l0800_8AA8
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8AA8:
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

fn0800_89A8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> di:di es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>

l0800_8A9C:
	bx_110 = bx_110 - 0x0001
	branch bx_110 >u 0x0001 l0800_8A46
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A46:
	word16 di_113 = Mem105[ds:0x2E2D:word16]
	Mem116[Mem105[ds:0x2E3D:selector]:di_113 << 0x0001:word16] = bx_110
	selector es_117 = Mem116[ds:0x2E41:selector]
	word16 v22_119 = Mem116[es_117:di_113 << 0x0001:word16]
	Mem120[es_117:di_113 << 0x0001:word16] = Mem116[ds:0x2E2D:word16]
	branch Mem120[ds:0x2E2D:word16] == v22_119 l0800_8A86
// DataOut: ax bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A63:
	ptr32 es_di_125 = Mem120[ds:0x2E6D:segptr32]
	word16 di_129 = Mem120[SLICE(es_di_125, selector, 16):(word16) es_di_125 - dx_11:word16]
	Mem133[Mem120[ds:0x2E39:selector]:di_129 << 0x0001:word16] = v22_119
	branch v22_119 != dx_11 l0800_8A86
// DataOut: bx di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8A7C:
	Mem137[Mem133[ds:0x2E35:selector]:di_129 << 0x0001:word16] = dx_11
// DataOut: bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)

l0800_8AA5:
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 dx:<invalid> di:<invalid> es:<invalid> ax:<invalid> Sequence es:di:<invalid> bx:<invalid> al:<invalid> cx:<invalid> -4(fp):di -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16)



void fn0800_8ACF(byte al, word16 cx, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cx ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx es rax rbx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(32)
fn0800_8ACF_entry:
// DataOut: al cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(32)

l0800_8ACF:
	msdos_unknown_2143()
	word16 ax_12 = DPB(ax, 0x00, 0)
	branch false l0800_8AE9
// DataOut: ax cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(32)

l0800_8AE9:
	fn0800_8D64(ds, ax_12)
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x43 al:0x00 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8ADF:
	Mem35[ptrArg06:word16] = cx
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x43 al:0x00 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8AED:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_8ACF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds Sequence es:bx:<invalid> ax:<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_8B0D(byte al, word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8B0D_entry:
	*dsOut = ds
// DataOut: al bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8B0D:
	word16 sp_121 = fp - 0x0004
	word16 si_11 = wArg06
	branch wArg06 != 0x0000 l0800_8B36
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B18:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B28:
	branch Mem0[ds:0x224E:word16] != 0x0000 l0800_8B1A
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B1A:
	Mem136[ds:0x224E:word16] = Mem0[ds:0x224E:word16] - 0x0001
	word16 sp_140
	word16 bp_141
	selector ss_142
	word16 si_143
	byte SZO_144
	byte C_145
	byte Z_146
	byte SCZO_147
	word16 cx_150
	word16 bx_151
	byte dl_153
	call SEQ(cs, Mem136[ds:(Mem136[ds:0x224E:word16] << 0x0001) + 0x4E96:word16]) (retsize: 2; depth: 2)
		uses: al_108,bp_117,bx_138,C_112,cs_110,cx_115,dl_107,ds_111,SCZO_139,si_116,sp_118,ss_114,SZO_113,wLoc02_4,wLoc04_8,Z_120
		defs: al_152,bp_141,bx_151,C_145,cs_149,cx_150,dl_153,ds_148,SCZO_147,si_143,sp_140,ss_142,SZO_144,Z_146
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B2F:
	fn0800_0150(al)
	word16 bp_122
	byte SZO_125
	byte C_126
	byte Z_127
	byte SCZO_128
	word16 cx_131
	word16 bx_132
	byte al_133
	byte dl_134
	call SEQ(cs, Mem0[ds:0x2352:word16]) (retsize: 2; depth: 2)
		uses: al_108,bp_117,bx_109,C_112,cs_110,cx_115,dl_107,ds_111,SCZO_119,si_116,sp_118,ss_114,SZO_113,wLoc02_4,wLoc04_8,Z_120
		defs: al_133,bp_122,bx_132,C_126,cs_130,cx_131,dl_134,ds_129,SCZO_128,si_124,sp_121,ss_123,SZO_125,Z_127
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_8B36:
	byte dl_104
	byte al_103 = fn0800_01B9(ds, out dl_104)
	fn0800_0163()
	branch wArg04 != 0x0000 l0800_8B55
// DataOut: al di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> es:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B42:
	branch si_11 != 0x0000 l0800_8B4E
// DataOut: al di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B46:
	word16 sp_77
	word16 bp_78
	selector ss_79
	word16 si_80
	byte SZO_81
	byte C_82
	byte Z_83
	byte SCZO_84
	selector ds_85
	selector cs_86
	word16 cx_87
	word16 bx_88
	byte al_89
	byte dl_90
	call SEQ(cs, Mem0[ds:0x2354:word16]) (retsize: 2; depth: 2)
		uses: al_31,bp_28,bx_20,C_56,cs_21,cx_26,dl_30,ds_22,SCZO_33,si_53,sp_29,ss_25,SZO_54,wLoc02_4,wLoc04_8,Z_55
		defs: al_89,bp_78,bx_88,C_82,cs_86,cx_87,dl_90,ds_85,SCZO_84,si_80,sp_77,ss_79,SZO_81,Z_83
	word16 bp_92
	word16 si_94
	byte SZO_95
	byte C_96
	byte Z_97
	byte SCZO_98
	selector ds_99
	selector cs_100
	word16 cx_101
	word16 bx_102
	call SEQ(cs_86, Mem0[ds_85:0x2356:word16]) (retsize: 2; depth: 2)
		uses: al_89,bp_78,bx_88,C_82,cs_86,cx_87,dl_90,ds_85,SCZO_84,si_80,sp_77,ss_79,SZO_81,wLoc02_4,wLoc04_8,Z_83
		defs: al_103,bp_92,bx_102,C_96,cs_100,cx_101,dl_104,ds_99,SCZO_98,si_94,sp_91,ss_93,SZO_95,Z_97
// DataOut: al di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: Local -0002(0) Stack +0002(16)

l0800_8B4E:
	Mem73[ss:sp_121 - 0x0002:word16] = wArg02
	fn0800_0164(al_103, bArg00)
// DataOut: di dl ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp
// Terminates process

l0800_8B55:
	return dl_104
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp

fn0800_8B0D_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:0x2506 ds:<invalid> dx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -4(fp):si -2(fp):bp



byte fn0800_8B5A(selector ds, word16 wArg02, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B5A_entry:
	*siOut = si
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B5A:
	selector ds_19
	return fn0800_8B0D(0x00, fp - 0x0002, ds, wArg02, 0x0000, 0x0000, out ds_19)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B5A_exit:
// DataOut: dl ds si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



void fn0800_8B69(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh dl ds dx eax ebp ebx ecx edx es esi esp rax rbp rbx rcx rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8B69_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8B69:
	selector ds_20
	fn0800_8B0D(0x00, fp - 0x0002, ds, wArg02, 0x0000, 0x0001, out ds_20)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B69_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> si:<invalid> cx:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



void fn0800_8B95(byte al, byte dl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al dl
// LiveOut:
// Trashed: ah ax bh bl bx dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8B95_entry:
// DataOut: al dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8B95:
	byte dh_7
	word16 cx_8
	word16 dx_11 = DPB(dx, msdos_get_system_date(out dh_7, out cx_8), 0)
	Mem16[ptrArg02:word16] = cx_8
	Mem17[ptrArg02 + 0x0002:word16] = dx_11
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8B95_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2A dl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



void fn0800_8BA8(byte al, byte cl, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al cl
// LiveOut:
// Trashed: ah ax bh bl bx cl cx eax ebx ecx es rax rbx rcx
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_8BA8_entry:
// DataOut: al cl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8BA8:
	byte ch_7
	byte dh_8
	byte dl_9
	Mem17[ptrArg02:word16] = DPB(cx, msdos_get_system_time(out ch_7, out dh_8, out dl_9), 0)
	Mem19[ptrArg02 + 0x0002:word16] = dx
	return
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8BA8_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2C cl:<invalid> Sequence es:bx:<invalid> -2(fp):bp



word16 fn0800_8BBB(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BBB_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BBB:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC0_thunk_fn0800_8BD8:
	word16 dx_16
	word16 bp_17
	word16 si_18
	word16 di_19
	return fn0800_8BD8(0x0000, bp, si, di, out dx_16, out bp_17, out si_18, out di_19)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8BBB_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BC2(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BC2_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BC2:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BC5_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0001, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0001 -2(fp):<invalid> 0(fp):cs

fn0800_8BC2_exit:
// DataOut: ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BCA(word16 bp, word16 si, word16 di, word16 wArg00, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di si ss
// LiveOut: al ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BCA_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8BCA:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BD0_thunk_fn0800_8BD8:
	word16 dx_14
	word16 bp_15
	word16 si_16
	word16 di_17
	return fn0800_8BD8(0x0002, bp, si, di, out dx_14, out bp_15, out si_16, out di_17)
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:0x0002 -2(fp):<invalid> 0(fp):cs

fn0800_8BCA_exit:
// DataOut: al ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> si:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8BD8(word16 cx, word16 bp, word16 si, word16 di, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp cx di si ss
// LiveOut: al ax bp di dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_8BD8_entry:
// DataOut: bp cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_8BD8:
	Mem4[ss:v3 - 0x0002:word16] = bp
	Mem8[ss:v3 - 0x0004:word16] = si
	Mem11[ss:v3 - 0x0006:word16] = di
	word16 cx_21 = Mem11[ss:v3 + 0x000A:word16]
	word16 di_14 = cx
	word16 ax_100 = Mem11[ss:v3 + 0x0004:word16]
	word16 dx_17 = Mem11[ss:v3 + 0x0006:word16]
	word16 bx_19 = Mem11[ss:v3 + 0x0008:word16]
	word16 cx_158 = cx_21
	branch cx_21 != 0x0000 l0800_8BF7
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8BEF:
	word32 dx_ax_181 = SEQ(dx_17, ax_100)
	branch dx_17 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF3:
	branch bx_19 == 0x0000 l0800_8C5C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C5C:
	word16 dx_188 = (uint16) (dx_ax_181 % bx_19)
	ax_100 = (uint16) (dx_ax_181 /u bx_19)
	branch (cx & 0x0002) == 0x0000 l0800_8C65
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C64:
	ax_100 = dx_188
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C65:
	word16 dx_195
	*dxOut = 0x0000
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BF7:
	word16 bx_163 = bx_19
	word16 dx_116 = dx_17
	branch (cx & 0x0001) != 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8BFD:
	dx_116 = dx_17
	branch dx_17 >= 0x0000 l0800_8C0B
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C01:
	ax_100 = -ax_100
	dx_116 = -dx_17 - (ax_100 == 0x0000)
	di_14 = cx | 0x000C
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:cx ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0B:
	cx_158 = cx_21
	branch cx_21 >= 0x0000 l0800_8C19
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C0F:
	bx_163 = -bx_19
	cx_158 = -cx_21 - (bx_163 == 0x0000)
	di_14 = di_14 ^ 0x0004
// DataOut: ax bx cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C19:
	Mem69[ss:v3 - 0x0008:word16] = di_14
	ui32 bp_bx_66 = SEQ(cx_158, bx_163)
	word16 cx_107 = 0x0020
	word16 di_104 = 0x0000
	word16 si_105 = 0x0000
// DataOut: ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:v3 - 0x0006 di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid>

l0800_8C23:
	ax_100 = ax_100 << 0x0001
	dx_116 = __rcl(dx_116, 0x01, cond(ax_100))
	*dxOut = dx_116
	si_105 = __rcl(si_105, 0x01, (dx_116 & 0x8000) != 0x0000)
	di_104 = __rcl(di_104, 0x01, (si_105 & 0x8000) != 0x0000)
	branch di_104 <u cx_158 l0800_8C3A
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C2F:
	branch di_104 >u cx_158 l0800_8C35
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C31:
	branch si_105 <u bx_163 l0800_8C3A
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C35:
	ui32 di_si_139 = SEQ(di_104, si_105 - bx_163) - bp_bx_66
	di_104 = SLICE(di_si_139, word16, 16) (alias)
	si_105 = (word16) di_si_139 (alias)
	ax_100 = ax_100 + 0x0001
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3A:
	cx_107 = cx_107 - 0x0001
	branch cx_107 != 0x0000 l0800_8C23
// DataOut: al ax bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C3C:
	word16 bx_108 = Mem69[ss:v3 - 0x0008:word16]
	branch (bx_108 & 0x0002) == 0x0000 l0800_8C49
// DataOut: al ax bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0008 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C43:
	ax_100 = si_105
	*dxOut = di_104
	bx_108 = bx_108 >>u 0x0001
// DataOut: al ax bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C49:
	branch (bx_108 & 0x0004) == 0x0000 l0800_8C56
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C4F:
	ax_100 = -ax_100
	word16 dx_126
	*dxOut = -dx_116 - (ax_100 == 0x0000)
// DataOut: al ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

l0800_8C56:
	word16 di_38
	*diOut = Mem11[ss:v3 - 0x0006:word16]
	word16 si_40
	*siOut = Mem11[ss:v3 - 0x0004:word16]
	word16 bp_43
	*bpOut = Mem11[ss:v3 - 0x0002:word16]
	return ax_100
// DataOut: al ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 - 0x0006 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>

fn0800_8BD8_exit:
// DataOut: al ax bp di dx si sp
// DataOut (flags): 
// SymbolicIn: sp:v3 bp:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> si:<invalid>



word16 fn0800_8C69(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C69_entry:
// DataOut: ax bp cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C69:
	branch cl >=u 0x10 l0800_8C81
// DataOut: ax bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8C81:
	word16 dx_37
	*dxOut = ax << cl - 0x10
	return 0x0000
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C71:
	word16 dx_29
	*dxOut = dx << cl | ax >>u -cl + 0x10
	return ax << cl
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C69_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8C8A(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8C8A_entry:
// DataOut: ax bp cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8C8A:
	branch cl >=u 0x10 l0800_8CA2
// DataOut: ax bp cl ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CA2:
	int32 dx_ax_37 = (int32) dx
	word16 dx_38
	*dxOut = SLICE(dx_ax_37, word16, 16)
	return (word16) dx_ax_37 >> cl - 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8C92:
	word16 dx_26
	*dxOut = dx >> cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: al ax bp ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8C8A_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:dx >> cl cl:<invalid> Sequence dx:ax:(int32) dx -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CAA(word16 ax, byte cl, word16 dx, word16 wArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax cl dx
// LiveOut: ax dx sp
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CAA_entry:
// DataOut: ax bp cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CAA:
	branch cl >=u 0x10 l0800_8CC2
// DataOut: ax bp cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CC2:
	word16 dx_36
	*dxOut = 0x0000
	return dx >>u cl - 0x10
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

l0800_8CB2:
	word16 dx_25
	*dxOut = dx >>u cl
	return ax >>u cl | dx << -cl + 0x10
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> -2(fp):<invalid> 0(fp):cs

fn0800_8CAA_exit:
// DataOut: ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bx:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> -2(fp):<invalid> 0(fp):cs



word16 fn0800_8CCB(word16 ax, word16 cx, word16 dx, word16 bx, selector psegArg00, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dh dl dx
// LiveOut: al ax dx sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esp rax rbx rcx rdx rsp sp spl
// Preserved:
fn0800_8CCB_entry:
// DataOut: ax bx cx dh di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8CCB:
	byte cl_15 = (byte) cx
	branch cx >= 0x0000 l0800_8CDE
// DataOut: ax bx cl cx dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8CDE:
	word16 ax_73 = ax + bx
	byte al_74 = (byte) ax_73
	branch ax_73 >=u 0x0000 l0800_8CE6
// DataOut: al ax cl dh di dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8CE2:
	dx = dx + 0x1000
	dh = SLICE(dx + 0x1000, byte, 8) (alias)
// DataOut: al ax cl dh di dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx -2(fp):<invalid> 0(fp):cs

l0800_8CE6:
	word16 dx_88
	*dxOut = DPB(dx, dh + (cl_15 << 0x04), 8) + (ax_73 >>u 0x04)
	return DPB(ax_73 >>u 0x04, al_74, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx ax:ax + bx dx:dx + 0x1000 -2(fp):<invalid> 0(fp):cs

l0800_8CD2:
	word16 bx_41 = (word16) (SEQ(~cx, ~bx + 0x0001) + 0x00000001)
// DataOut: ax bl bx cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:cx -2(fp):<invalid> 0(fp):cs

l0800_8D0D:
	word16 ax_47 = ax - bx_41
	byte al_48 = (byte) ax_47
	branch ax_47 >=u 0x0000 l0800_8D15
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 -2(fp):<invalid> 0(fp):cs

l0800_8D11:
	dx = dx - 0x1000
// DataOut: al ax bl cl di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) -2(fp):<invalid> 0(fp):cs

l0800_8D15:
	word16 dx_62
	*dxOut = dx - DPB(bx_41, 0x00, 0) + (ax_47 >>u 0x04)
	return DPB(ax_47 >>u 0x04, al_48, 0) & 0x000F
// DataOut: al ax di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> bx:~bx + 0x0001 ax:ax - (~bx + 0x0001) dx:dx - 0x1000 -2(fp):<invalid> 0(fp):cs

fn0800_8CCB_exit:
// DataOut: al ax dx sp
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 es:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> ch:al cl:0x04 dh:<invalid> al:<invalid> bx:<invalid> bh:0x40 bl:0x00 -2(fp):<invalid> 0(fp):cs



word16 fn0800_8D2B(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al ax
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D2B_entry:
// DataOut: di dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D2B:
	word16 si_17
	word16 si_11 = wArg02
	branch wArg02 < 0x0000 l0800_8D4B
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D4B:
	si_17 = -wArg02
	branch si_17 > 0x0023 l0800_8D3B
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D52:
	Mem41[ds:0x2516:word16] = 0xFFFF
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D36:
	branch wArg02 <= 0x0058 l0800_8D3E
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3B:
	si_11 = 0x0057
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D3E:
	Mem29[ds:0x2516:word16] = si_11
	si_17 = (int16) Mem29[ds:si_11 + 0x2518:byte]
// DataOut: di dl ds si ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_8D58:
	Mem18[ds:0x007F:word16] = si_17
	return 0xFFFF
// DataOut: al ax di dl ds sil ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> al:<invalid> ax:<invalid> -4(fp):si -2(fp):bp

fn0800_8D2B_exit:
// DataOut: al ax
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp si:si al:0xFF ax:0xFFFF -4(fp):si -2(fp):bp



void fn0800_8D64(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax eax rax
// Preserved: bp si sp
// Stack args: Stack +0002(16)
fn0800_8D64_entry:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D64:
	fn0800_8D2B(ds, wArg02)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D64_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_8D76(word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_8D76_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_8D76:
	word16 dx_9
	msdos_ioctl_get_device_info(wArg02, out dx_9)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8D76_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x0000 bx:<invalid> dx:0x4400 -2(fp):bp



void fn0800_8D87(byte bArg02, byte bArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di es si sp
// Stack args: Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)
fn0800_8D87_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(8) Stack +0006(16) Stack +0008(32) Stack +000C(16) Stack +000E(16)

l0800_8D87:
	word16 di_120 = (word16) ptrArg08
	selector es_19 = SLICE(ptrArg08, selector, 16)
	byte bl_22 = (byte) wArg06
	branch wArg06 >u 0x0024 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8D9B:
	branch bl_22 <u 0x02 l0800_8DF7
// DataOut: bl bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8) Stack +0004(8) Stack +000C(16) Stack +000E(16)

l0800_8DA0:
	word16 ax_103 = wArg0C
	word16 cx_147 = wArg0E
	branch wArg0E >= 0x0000 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8) Stack +0004(8)

l0800_8DAA:
	branch bArg04 == 0x00 l0800_8DBC
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DB0:
	Mem175[ptrArg08:byte] = 0x2D
	ax_103 = -wArg0C
	di_120 = di_120 + 0x0001
	cx_147 = -wArg0E - (ax_103 == 0x0000)
// DataOut: ax bl bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DBC:
	word16 si_104 = fp - 0x0024
	branch cx_147 == 0x0000 l0800_8DD1
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DC1:
	word32 dx_ax_154 = (uint32) (uint16) cx_147
	word32 dx_ax_160 = SEQ((uint16) (dx_ax_154 % wArg06), ax_103)
	Mem169[ss:si_104:byte] = (byte) (uint16) (dx_ax_160 % wArg06)
	word16 ax_157 = (uint16) (dx_ax_154 /u wArg06)
	cx_147 = ax_157
	ax_103 = (uint16) (dx_ax_160 /u wArg06)
	si_104 = si_104 + 0x0001
	branch ax_157 == 0x0000 l0800_8DD9
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DD9:
	branch ax_103 != 0x0000 l0800_8DD1
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DD1:
	word32 dx_ax_87 = (uint32) (uint16) ax_103
	Mem95[ss:si_104:byte] = (byte) (uint16) (dx_ax_87 % wArg06)
	ax_103 = (uint16) (dx_ax_87 /u wArg06)
	si_104 = si_104 + 0x0001
// DataOut: ax bl bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:di + 0x0001 dx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DDD:
	word16 cx_113 = 0x0024 - fp + si_104
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DE5:
	byte al_132
	si_104 = si_104 - 0x0001
	byte al_124 = Mem0[ss:si_104:byte]
	branch al_124 >=u 0x0A l0800_8DF1
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:<invalid> al:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DF1:
	al_132 = al_124 - 0x0A + bArg02
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DED:
	al_132 = al_124 + 0x30
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DF4:
	Mem134[es_19:di_120:byte] = al_132
	di_120 = di_120 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch cx_113 != 0x0000 l0800_8DE5
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)

l0800_8DF7:
	Mem45[es_19:di_120:byte] = 0x00
	return
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> al:<invalid> di:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

fn0800_8D87_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> bx:<invalid> al:<invalid> es:es dx:<invalid> ax:<invalid> di:di si:si cx:<invalid> -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp

l0800_8DCF:
// DataOut: ax bl bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x002A bp:fp - 0x0002 Sequence es:di:<invalid> bx:<invalid> ax:<invalid> cx:<invalid> si:<invalid> dx:<invalid> di:di + 0x0001 -42(fp):es -40(fp):di -38(fp):si -36(fp):dl -2(fp):bp
// LocalsOut: fp(16) Local -0026(8) Stack +0002(8)



void fn0800_8E09(word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_8E09_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_8E09:
	fn0800_8D87(0x61, 0x00, 0x000A, DPB(ptrLoc0A, wArg02, 0), wArg04, wArg06, 0x0000)
	return
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_8E09_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> al:<invalid> es:<invalid> di:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):0x000A -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp



word16 fn0800_8E29(byte al, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_8E29_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_8E29:
	Mem12[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 ax_18 = DPB(ax, bArg08, 0)
	word16 dx_23
	*dxOut = wArg04
	branch msdos_set_file_position(wArg02, SEQ(wArg06, wArg04), bArg08, SEQ(wArg04, ax_18)) l0800_8E4B
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E4B:
	fn0800_8D2B(ds, ax_18)
	word16 dx_44
	*dxOut = 0x0000
	ax_18 = 0xFFFF (alias)
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E49:
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -2(fp):bp

l0800_8E50:
	return ax_18
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp

fn0800_8E29_exit:
// DataOut: al ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ax:0xFFFF -4(fp):ax -2(fp):bp



word16 fn0800_8E52(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
fn0800_8E52_entry:
// DataOut: al ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E52:
	word16 ax_20
	__syscall(0x21)
	word16 ax_11 = DPB(ax, 0x39, 8)
	branch C l0800_8E64
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8E64:
	ax_20 = fn0800_8D2B(ds, ax_11)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E60:
	ax_20 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x39 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8E68:
	return ax_20
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8E52_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8E6A(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al di ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_8E6A_entry:
	*diOut = di
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_8E6A:
	branch (wArg08 | wArg0A) != 0x0000 l0800_8E7D
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E75:
	wArg0A = ds
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E7D:
	word16 ax_27
	word16 dx_26
	branch (wArg04 | wArg06) != 0x0000 l0800_8E8F
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0004(16) Stack +0004(16) Stack +0006(16) Stack +000A(16)

l0800_8E8F:
	dx_26 = wArg06
	ax_27 = wArg04
// DataOut: ax dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0004(16) Stack +000A(16)

l0800_8E88:
	dx_26 = ds
	ax_27 = 0x2572
// DataOut: ax dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds
// LocalsOut: fp(16) Local -0004(16) Stack +000A(16)

l0800_8E95:
	word16 dx_38
	selector ds_39
	word16 ax_40 = fn0800_9CE6(0x4ED6, wArg0A, ax_27, dx_26, out dx_38, out ds_39)
	fn0800_8E09(ax_40, dx_38, wArg02)
	fn0800_BF5F(DPB(ptrLoc0A, 0x4ED6, 0), DPB(ptrLoc06, 0x2576, 0))
	word16 dx_65
	*dxOut = wArg0A
	return 0xD6
// DataOut: al di ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds

fn0800_8E6A_exit:
// DataOut: al di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:0x4ED6 dx:ds cx:<invalid> al:0xD6 es:<invalid> di:<invalid> bx:<invalid> ds:<invalid> -12(fp):0x4ED6 -10(fp):0x4ED6 -8(fp):ds -6(fp):0x2576 -4(fp):<invalid> -2(fp):bp 8(fp):0x4ED6 10(fp):ds



word16 fn0800_8F18(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx dx
// LiveOut: ax dx
// Trashed: SCZO ah al ax ch cl cx dh dl dx eax ecx edx rax rcx rdx
// Preserved: si sp
fn0800_8F18_entry:
// DataOut: ax bp bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F18:
	word16 ax_11 = dx
	branch dx == 0x0000 l0800_8F21
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_8F1F:
	ax_11 = (word16) (bx *u dx) (alias)
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si -2(fp):si

l0800_8F21:
	branch cx == 0x0000 l0800_8F28
// DataOut: ax bp bx cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F23:
	ax_11 = (word16) (ax *u cx) + ax_11
// DataOut: ax bp bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:dx si:si dx:si Sequence dx:ax:bx *u si -2(fp):si

l0800_8F28:
	word32 dx_ax_28 = bx *u ax
	word16 dx_31
	*dxOut = SLICE(dx_ax_28, word16, 16) + ax_11
	return (word16) dx_ax_28
// DataOut: ax bp di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ax:<invalid> si:si dx:si Sequence dx:ax:<invalid> cx:si -2(fp):si

fn0800_8F18_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp ax:si si:si dx:<invalid> Sequence dx:ax:bx *u si cx:si -2(fp):si



byte fn0800_8F2F(word16 ax, word16 cx, word16 dx, word16 bx, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ax bl bx cl cx dx
// LiveOut: CZ dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: sp
fn0800_8F2F_entry:
// DataOut: al ax bl bx cl cx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F2F:
	word16 dx_11 = dx + (ax >>u 0x04)
	word16 cx_21 = cx + (bx >>u 0x04)
	byte dl_12
	*dlOut = (byte) dx_11
	word16 ax_16 = DPB(ax >>u 0x04, bl, 8)
	word16 bx_23 = DPB(bx >>u 0x04, bl, 0)
	byte CZ_33 = cond(dx_11 - cx_21)
	branch dx_11 != cx_21 l0800_8F4F
// DataOut: ax bx dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp

l0800_8F4D:
	CZ_33 = cond((ax_16 & 0x000F) - (bx_23 & 0x000F)) (alias)
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

l0800_8F4F:
	return CZ_33
// DataOut: dl ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx

fn0800_8F2F_exit:
// DataOut: dl
// DataOut (flags): CZ
// SymbolicIn: sp:fp ch:<invalid> cl:<invalid> ax:<invalid> dx:dx + (ax >>u 0x08) al:<invalid> ah:<invalid> bx:<invalid> cx:cx + (bx >>u 0x08) bl:<invalid> -2(fp):cx



word16 fn0800_8F50(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_8F50_entry:
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F50:
	word16 wLoc04_30
	word16 ax_20
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0002) == 0x0000 l0800_8F66
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_8F66:
	branch msdos_read_file(wArg02, wArg08, ptrArg04, out ax_20) l0800_8F79
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_8F79:
	wLoc04_30 = ax_20
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F77:
// DataOut: ax di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F60:
	wLoc04_30 = 0x0005
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_8F7A:
	ax_20 = fn0800_8D2B(ds, wLoc04_30)
// DataOut: ax di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_8F7D:
	return ax_20
// DataOut: ax di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F50_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:0x3F cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_8F7F(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_8F7F_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_8F7F:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_8F91
// DataOut: ax dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F91:
	fn0800_8D2B(ds, ax_11)
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F8D:
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_8F95:
	return dl_16
// DataOut: dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_8F7F_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



void fn0800_8F97(word16 ax, word16 dx, word16 bx, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx di ds dx ss
// LiveOut: sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
l0800_906C_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_906C_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_906C_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_8F97_entry:
	def fp
	def bp
	def si
	def di
	def es
	def ax
	def dx
	def bx
	def ds
// DataOut: ax bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8F97:
	sp_1 = fp
	sp_2 = fp - 0x0002
	wLoc02_4 = bp
	bp_5 = fp - 0x0002
	sp_6 = fp - 0x002C
	SCZO_7 = cond(fp - 0x002C)
	sp_8 = fp - 0x002E
	wLoc2E_10 = si
	sp_11 = fp - 0x0030
	wLoc30_13 = di
	wLoc06_14 = 0x0000
	wLoc08_15 = 0x0000
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FC6:
	sp_16 = fp - 0x0032
	wLoc32_18 = es
	D_19 = false
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0030 bp:fp - 0x0002 -48(fp):di -46(fp):si -8(fp):0x0000 -6(fp):0x0000 -2(fp):bp

l0800_8FC7_thunk_fn0800_9107:
	fn0800_9107(ax, dx, bx, bp_5, di, ds)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0032 bp:fp - 0x0002 -50(fp):es -48(fp):di -46(fp):si -8(fp):0x0000 -6(fp):0x0000 -2(fp):bp

fn0800_8F97_exit:
	ax_24 = PHI(ax, ax, ax, ax)
	bp_25 = PHI(bp, bp, bp, bp_5)
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -50(fp):es -48(fp):di -46(fp):si -8(fp):0x0000 -6(fp):0x0000 -2(fp):bp



word16 fn0800_8FAB(word16 bp, selector ds, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di es
// Trashed: SCZO di dil edi es rdi
// Preserved: sp
fn0800_8FAB_entry:
// DataOut: ax bp bx ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FAB:
	ptr32 es_di_5 = Mem0[ss:bp + 0x0010:segptr32]
	word16 di_6 = (word16) es_di_5
	branch (Mem0[ss:bp - 0x0001:byte] & 0x20) == 0x00 l0800_8FBC
// DataOut: ax bp bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_8FBC:
	word16 di_26 = Mem0[es_di_5:word16]
	Mem33[ss:bp + 0x0010:word16] = Mem0[ss:bp + 0x0010:word16] + 0x0002
	selector es_29
	*esOut = ds
	return di_26
// DataOut: ax bp bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid>

l0800_8FB4:
	ptr32 es_di_19 = Mem0[ds:di_6:segptr32]
	Mem23[ss:bp + 0x0010:word16] = Mem0[ss:bp + 0x0010:word16] + 0x0004
	selector es_21
	*esOut = SLICE(es_di_19, selector, 16)
	return (word16) es_di_19
// DataOut: ax bp bx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid>

fn0800_8FAB_exit:
// DataOut: di es
// DataOut (flags): 
// SymbolicIn: sp:fp Sequence es:di:<invalid> di:<invalid> es:ds -2(fp):ds



void fn0800_90F2(word16 ax, word16 bx, word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx ds ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_90F2_entry:
// DataOut: ax bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_90F2:
	word16 dx_22
	word16 bx_23
	word16 di_24
	word16 ax_25 = fn0800_94B0(ax, bx, ds, Mem0[ss:bp + 0x0008:word16], wArg00, wArg02, wArg04, ptrArg06, ptrArg0A, out dx_22, out bx_23, out di_24)
	branch Mem0[ss:bp - 0x0008:word16] <= 0x0000 l0800_9105_thunk_fn0800_911F
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

l0800_9105_thunk_fn0800_9107:
	fn0800_9107(ax_25, dx_22, bx_23, bp, di_24, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9105_thunk_fn0800_911F:
	fn0800_911F(bp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_9105_thunk_fn0800_9107:
	fn0800_9107(ax_25, dx_22, bx_23, bp, di_24, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x000E cx:<invalid> ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> bx:<invalid> si:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> ah:<invalid> al:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_90F2_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> al:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_9107(word16 ax, word16 dx, word16 bx, word16 bp, word16 di, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp bx di ds dx ss
// LiveOut: sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: dx
fn0800_9107_entry:
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v3(16)

l0800_9107:
	word16 sp_1019 = v3
	branch (Mem0[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_911C
// DataOut: ax bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_910D:
	Mem1257[ss:bp - 0x0004:word16] = Mem0[ss:bp - 0x0004:word16] + 0x0001
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9110:
	selector es_1244
	word16 di_1245 = fn0800_8FAB(bp, ds, out es_1244)
	Mem1246[es_1244:di_1245:word16] = ax
	di = di_1245 + 0x0002
	branch (Mem1246[ss:bp - 0x0001:byte] & 0x04) == 0x00 l0800_911C
// DataOut: bp bx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_911A:
	Mem1254[es_1244:di_1245 + 0x0002:word16] = dx
	di = di_1245 + 0x0004
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> di:<invalid> si:<invalid> al:<invalid> ax:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_911C:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> si:<invalid> al:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_8FC8:
	word16 si_109 = Mem0[ss:bp + 0x000C:word16]
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> si:<invalid> al:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_8FCB:
	byte al_134 = Mem0[ds:si_109:byte]
	word16 si_135 = si_109 + 0x0001
	branch al_134 == 0x00 l0800_9042
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> di:<invalid> ax:<invalid> dx:<invalid> al:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9042:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9042_thunk_fn0800_93BE:
	word16 bp_1219
	fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp_1219)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_8FD4:
	branch al_134 == 0x25 l0800_9045
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9045:
	Mem433[ss:bp - 0x000A:word16] = 0xFFFF
	selector es_434 = Mem433[ss:bp + 0x000E:selector]
	Mem435[ss:bp - 0x0001:byte] = 0x20
	si_442 = si_135
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9051:
	word16 si_442
	si_442 = si_442 + 0x0001
	word16 ax_448 = (int16) Mem435[ds:si_442:byte]
	Mem449[ss:bp + 0x000C:word16] = si_442
	di = ax_448
	branch ax_448 < 0x0000 l0800_9075
// DataOut: ax bp di dil ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> ax:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9075:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9075_thunk_fn0800_93BE:
	word16 bp_1217
	fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp_1217)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_905C:
	word16 bx_462 = DPB(bx, 0x00, 8)
	branch bx_462 <=u 0x0015 l0800_906A
// DataOut: ax bp bx di dil ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_906A:
	word16 si_1200
	bx = bx_462 << 0x0001
	switch (bx_462 << 0x0001) { l0800_93BE l0800_93BE l0800_93BE l0800_9071 l0800_9078 l0800_907E l0800_926F l0800_90C2 l0800_90C2 l0800_90CC l0800_91A1 l0800_9092 l0800_909E l0800_9098 l0800_90BD l0800_920B l0800_92B1 l0800_90B0 l0800_90C7 l0800_9127 l0800_90A4 l0800_90AA }
// DataOut: ax bp bx di dil ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90AA:
	Mem1214[ss:bp - 0x0001:byte] = Mem449[ss:bp - 0x0001:byte] | 0x20
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90A4:
	Mem1210[ss:bp - 0x0001:byte] = Mem449[ss:bp - 0x0001:byte] & 0xDF
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9127:
	word16 bp_1201
	word16 ax_1202 = fn0800_912A(di, bp, ds, out bp_1201)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9127_thunk_fn0800_912A:
	word16 bp_1207
	fn0800_912A(ax_1202, bp_1201, ds, out bp_1207)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_90C7:
	si_1200 = 0x0010
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90B0:
	ax = Mem449[ss:bp - 0x0006:word16]
	dx = 0x0000
	branch (Mem449[ss:bp - 0x0001:byte] & 0x01) == 0x00 l0800_9110
// DataOut: ax bp bx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90BB:
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92B1:
	word16 sp_781 = sp_1019 - 0x0002
	Mem782[ss:sp_781:word16] = es_434
	Mem790[ss:sp_781 - 0x0002:word16] = ss
	selector es_791 = Mem790[ss:sp_781 - 0x0002:selector]
	word16 di_793 = bp - 0x002A
	word16 cx_794 = 0x0010
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92BD:
	branch cx_794 == 0x0000 l0800_92BF
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92BF:
	byte al_1187 = Mem790[ds:si_442:byte]
	selector es_1016 = Mem790[ss:sp_781:selector]
	Mem813[ss:bp - 0x0001:byte] = Mem790[ss:bp - 0x0001:byte] & 0xEF
	sp_1019 = sp_781 + 0x0002
	word16 ax_1188 = (word16) al_1187
	word16 si_1190 = si_442 + 0x0001
	branch al_1187 != 0x5E l0800_92D0
// DataOut: al bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92CA:
	Mem1184[ss:bp - 0x0001:byte] = Mem813[ss:bp - 0x0001:byte] | 0x10
	al_1187 = Mem1184[ds:si_442 + 0x0001:byte]
	ax_1188 = DPB(ax_1188, al_1187, 0) (alias)
	si_1190 = si_442 + 0x0002
// DataOut: al bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92D0:
	word16 ax_824 = DPB(ax_1188, 0x00, 8)
// DataOut: al ax bp bx ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92D2:
	di = ax_824 >>u 0x03
	byte ch_842 = 0x01 << (al_1187 & 0x07)
	Mem845[ss:bp - 0x002A + di:byte] = Mem813[ss:bp - 0x002A + di:byte] | ch_842
	byte dl_834 = al_1187
// DataOut: bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dx:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92E4:
	al_1187 = Mem845[ds:si_1190:byte]
	ax_824 = DPB(ax_824, al_1187, 0) (alias)
	si_1190 = si_1190 + 0x0001
	branch al_1187 == 0x00 l0800_9313
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9313:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_9313_thunk_fn0800_93BE:
	word16 bp_1181
	fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp_1181)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_92EA:
	branch al_1187 == 0x5D l0800_9316
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9316:
	Mem904[ss:bp + 0x000C:word16] = si_1190
	Mem906[ss:bp - 0x000A:word16] = Mem904[ss:bp - 0x000A:word16] & 0x7FFF
	word16 si_1096 = Mem906[ss:bp - 0x000A:word16]
	branch (Mem906[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_932A
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9327:
	di = fn0800_8FAB(bp, ds, out es_1016)
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_932A:
	word16 si_938 = si_1096 - 0x0001
	branch si_938 < 0x0000 l0800_9385
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_932D:
	Mem1031[ss:bp - 0x0006:word16] = Mem906[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_1033 = sp_1019 - 0x0002
	Mem1034[ss:sp_1033:word16] = es_1016
	Mem1037[ss:sp_1033 - 0x0002:word16] = Mem1034[ss:bp + 0x000A:word16]
	Mem1040[ss:sp_1033 - 0x0004:word16] = Mem1037[ss:bp + 0x0008:word16]
	word16 sp_1041
	byte SZO_1044
	byte C_1045
	byte Z_1046
	word16 ax_1047
	selector es_1048
	word16 dx_1050
	word16 si_1051
	byte al_1053
	byte SCZO_1054
	word16 cx_1056
	byte SO_1057
	byte S_1058
	word16 bx_1059
	byte bl_1060
	byte bh_1061
	byte CZ_1062
	byte D_1063
	byte ah_1064
	byte dl_1065
	byte cl_1066
	byte ch_1067
	call SEQ(cs, Mem1040[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_915,al_934,ax_937,bh_918,bl_919,bp_936,bx_920,C_935,ch_912,cl_913,cs_922,cx_931,CZ_917,D_916,di_927,dl_914,ds_924,dx_926,es_928,S_921,SCZO_923,si_938,SO_940,sp_1039,ss_930,SZO_1032,Z_929
		defs: ah_1064,al_1053,ax_1047,bh_1061,bl_1060,bp_1043,bx_1059,C_1045,ch_1067,cl_1066,cs_1055,cx_1056,CZ_1062,D_1063,di_1049,dl_1065,ds_1052,dx_1050,es_1048,S_1058,SCZO_1054,si_1051,SO_1057,sp_1041,ss_1042,SZO_1044,Z_1046
	es_1016 = Mem1040[ss:sp_1041 + 0x0004:selector]
	sp_1019 = sp_1041 + 0x0006
	branch ax_1047 < 0x0000 l0800_9394
// DataOut: ax bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9394:
	branch si_1051 + 0x0001 >= Mem1040[ss:bp - 0x000A:word16] l0800_9398_thunk_fn0800_93A6
// DataOut: bp di es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_9398_thunk_fn0800_93A6:
	word16 bp_1177
	fn0800_93A6(bp, out bp_1177)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_939A:
	branch (Mem1040[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_939E_thunk_fn0800_93A6
// DataOut: bp di es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_939E_thunk_fn0800_93A6:
	word16 bp_1175
	fn0800_93A6(bp, out bp_1175)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_93A0:
	Mem1168[es_1016:di:byte] = 0x00
	Mem1171[ss:bp - 0x0004:word16] = Mem1168[ss:bp - 0x0004:word16] + 0x0001
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_93A3_thunk_fn0800_93A6:
	word16 bp_1173
	fn0800_93A6(bp, out bp_1173)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:0x00 ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>

l0800_9341:
	byte ch_1090 = 0x01 << ((byte) ax_1047 & 0x07)
	si_1096 = si_1051
	byte al_1100 = (byte) ax_1047
	bx = ax_1047 >>u 0x03
	branch (Mem1040[ss:bp - 0x002A + (ax_1047 >>u 0x03):byte] & ch_1090) == 0x00 l0800_935E
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_935E:
	branch (Mem1040[ss:bp - 0x0001:byte] & 0x10) == 0x00 l0800_936D
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9356:
	branch (Mem1040[ss:bp - 0x0001:byte] & 0x10) == 0x00 l0800_9364
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9364:
	branch (Mem1040[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_932A
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_936A:
	Mem1153[es_1016:di:byte] = al_1100
	di = di + 0x0001
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_935C:
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_936D:
	Mem1106[ss:sp_1041 + 0x0004:word16] = es_1016
	Mem1109[ss:sp_1041 + 0x0002:word16] = Mem1106[ss:bp + 0x000A:word16]
	Mem1112[ss:sp_1041:word16] = Mem1109[ss:bp + 0x0008:word16]
	Mem1114[ss:sp_1041 - 0x0002:word16] = ax_1047
	word16 sp_1115
	byte SZO_1118
	byte C_1119
	byte Z_1120
	word16 ax_1121
	selector es_1122
	word16 dx_1124
	word16 si_1125
	byte al_1127
	byte SCZO_1128
	word16 cx_1130
	byte SO_1131
	byte S_1132
	byte bl_1134
	byte bh_1135
	byte CZ_1136
	byte D_1137
	byte ah_1138
	byte dl_1139
	byte cl_1140
	byte ch_1141
	call SEQ(cs, Mem1114[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_1101,al_1100,ax_1098,bh_1104,bl_1103,bp_1043,bx_1102,C_1093,ch_1090,cl_1089,cs_1055,cx_1088,CZ_1062,D_1063,di_1049,dl_1065,ds_1052,dx_1050,es_1072,S_1058,SCZO_1054,si_1096,SO_1079,sp_1113,ss_1042,SZO_1091,Z_1092
		defs: ah_1138,al_1127,ax_1121,bh_1135,bl_1134,bp_1117,bx_1133,C_1119,ch_1141,cl_1140,cs_1129,cx_1130,CZ_1136,D_1137,di_1123,dl_1139,ds_1126,dx_1124,es_1122,S_1132,SCZO_1128,si_1125,SO_1131,sp_1115,ss_1116,SZO_1118,Z_1120
	es_1016 = Mem1114[ss:sp_1115 + 0x0006:selector]
	Mem1146[ss:bp - 0x0006:word16] = Mem1114[ss:bp - 0x0006:word16] - 0x0001
	sp_1019 = sp_1115 + 0x0008
	branch si_1125 + 0x0001 >= Mem1146[ss:bp - 0x000A:word16] l0800_938E
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9385:
	branch (Mem906[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_9391
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_938B:
	Mem1028[ss:bp - 0x0004:word16] = Mem906[ss:bp - 0x0004:word16] + 0x0001
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_938E:
	Mem997[es_1016:di:byte] = 0x00
	di = di + 0x0001
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9391:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92EE:
	branch al_1187 != 0x2D l0800_92D2
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92F2:
	branch dl_834 >u Mem845[es_1016:si_1190:byte] l0800_92D2
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92F7:
	branch Mem845[es_1016:si_1190:byte] == 0x5D l0800_92D2
// DataOut: al ax bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92FD:
	byte al_875 = Mem845[ds:si_1190:byte] - dl_834
	si_1190 = si_1190 + 0x0001
	ax_824 = DPB(ax_824, al_875, 0) (alias)
	branch al_875 == 0x00 l0800_92E4
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9303:
	dl_834 = dl_834 + al_875
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9305:
	ch_842 = __rol(ch_842, 0x01)
	di = di + ((ch_842 & 0x80) != 0x00)
	Mem896[ss:bp - 0x002A + di:byte] = Mem845[ss:bp - 0x002A + di:byte] | ch_842
	al_875 = al_875 - 0x01
	ax_824 = DPB(ax_824, al_875, 0) (alias)
	branch al_875 != 0x00 l0800_9305
// DataOut: al bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9311:
// DataOut: bp bx ch cl di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> ah:0x00 dl:<invalid> cl:<invalid> ch:<invalid> dx:<invalid> Sequence dx:ax:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92BD_1:
	Mem801[es_791:di_793:word16] = 0x0000
	di_793 = di_793 + 0x0002
	cx_794 = cx_794 - 0x0001
// DataOut: ax bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_920B:
	word16 bp_773
	word16 ax_774 = fn0800_920E(di, bp, ds, out bp_773)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_920B_thunk_fn0800_920E:
	word16 bp_779
	fn0800_920E(ax_774, bp_773, ds, out bp_779)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> bp:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_90BD:
	si_1200 = 0x0008
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9098:
	Mem769[ss:bp - 0x0001:byte] = Mem449[ss:bp - 0x0001:byte] | 0x04
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_909E:
	Mem765[ss:bp - 0x0001:byte] = Mem449[ss:bp - 0x0001:byte] | 0x02
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9092:
	Mem761[ss:bp - 0x0001:byte] = Mem449[ss:bp - 0x0001:byte] | 0x08
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91A1:
	word16 sp_674 = sp_1019 - 0x0002
	Mem675[ss:sp_674:word16] = ss
	Mem678[ss:sp_674 - 0x0002:word16] = bp - 0x0008
	Mem680[ss:sp_674 - 0x0004:word16] = ss
	Mem683[ss:sp_674 - 0x0006:word16] = bp - 0x0006
	Mem689[ss:sp_674 - 0x0008:word16] = Mem683[ss:bp - 0x000A:word16] & 0x7FFF
	Mem692[ss:sp_674 - 0x000A:word16] = Mem689[ss:bp + 0x000A:word16]
	Mem695[ss:sp_674 - 0x000C:word16] = Mem692[ss:bp + 0x0008:word16]
	Mem698[ss:sp_674 - 0x000E:word16] = Mem695[ss:bp + 0x0006:word16]
	Mem701[ss:sp_674 - 0x0010:word16] = Mem698[ss:bp + 0x0004:word16]
	fn0800_A2D0()
	sp_1019 = sp_674 + 0x0002
	branch Mem701[ss:bp - 0x0008:word16] <= 0x0000 l0800_9203
// DataOut: bp bx di ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9203:
	fn0800_A2D8()
	branch Mem701[ss:bp - 0x0008:word16] < 0x0000 l0800_919E
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_919E:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_919E_thunk_fn0800_93A6:
	word16 bp_758
	fn0800_93A6(bp, out bp_758)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9208:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9208_thunk_fn0800_93BE:
	word16 bp_756
	fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp_756)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9208_thunk_fn0800_93BE:
	word16 bp_754
	fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp_754)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_91CA:
	branch ((int16) Mem701[ss:bp - 0x0001:byte] & 0x0001) != 0x0000 l0800_91FD
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91FD:
	fn0800_A2D8()
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91D3:
	word16 ax_728
	selector es_715
	di = fn0800_8FAB(bp, ds, out es_715)
	Mem718[ss:bp - 0x0004:word16] = Mem701[ss:bp - 0x0004:word16] + 0x0001
	branch (Mem718[ss:bp - 0x0001:byte] & 0x04) == 0x00 l0800_91E4
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91E4:
	branch (Mem718[ss:bp - 0x0001:byte] & 0x08) == 0x00 l0800_91EF
// DataOut: bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91EF:
	ax_728 = 0x0000
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91EA:
	ax_728 = 0x0008
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91DF:
	ax_728 = 0x0004
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_91F1:
	Mem730[ss:sp_674:word16] = ax_728
	Mem732[ss:sp_674 - 0x0002:word16] = es_715
	Mem734[ss:sp_674 - 0x0004:word16] = di
	fn0800_A2D4()
	sp_1019 = sp_674 + 0x0002
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90CC:
	si_1200 = 0x0000
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90C2:
	si_1200 = 0x000A
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90CE:
	branch (ax_448 & 0x0020) != 0x0000 l0800_90DD
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90D4:
	branch ax_448 == 0x0058 l0800_90DD
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90D9:
	Mem667[ss:bp - 0x0001:byte] = Mem449[ss:bp - 0x0001:byte] | 0x04
// DataOut: bp bx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_90DD:
	word16 sp_614 = sp_1019 - 0x0002
	Mem615[ss:sp_614:word16] = ss
	Mem618[ss:sp_614 - 0x0002:word16] = bp - 0x0008
	Mem620[ss:sp_614 - 0x0004:word16] = ss
	Mem623[ss:sp_614 - 0x0006:word16] = bp - 0x0006
	word16 ax_624 = Mem623[ss:bp - 0x000A:word16]
	Mem629[ss:sp_614 - 0x0008:word16] = ax_624 & 0x7FFF
	Mem631[ss:sp_614 - 0x000A:word16] = si_1200
	Mem634[ss:sp_614 - 0x000C:word16] = Mem631[ss:bp + 0x000A:word16]
	Mem637[ss:sp_614 - 0x000E:word16] = Mem634[ss:bp + 0x0008:word16]
	Mem640[ss:sp_614 - 0x0010:word16] = Mem637[ss:bp + 0x0006:word16]
	Mem643[ss:sp_614 - 0x0012:word16] = Mem640[ss:bp + 0x0004:word16]
	ax = fn0800_94B0(ax_624 & 0x7FFF, bx_462 << 0x0001, ds, wArg04, wArg06, wArg08, wArg0A, ptrArg0C, ptrArg10, out dx, out bx, out di)
	branch Mem643[ss:bp - 0x0008:word16] <= 0x0000 l0800_911F
// DataOut: ax bp bx di ds dx ss
// DataOut (flags): SO
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9105_thunk_fn0800_911F:
	fn0800_911F(bp)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> dl:<invalid> ah:<invalid> cl:<invalid> ch:<invalid>

l0800_926F:
	branch (Mem449[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_9278
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9275:
	di = fn0800_8FAB(bp, ds, out es_434)
// DataOut: ax bp bx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9278:
	word16 si_500 = Mem449[ss:bp - 0x000A:word16]
	branch si_500 >= 0x0000 l0800_9282
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_927F:
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9282:
	branch si_500 == 0x0000 l0800_92A2
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9284:
	Mem547[ss:bp - 0x0006:word16] = Mem449[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_549 = sp_1019 - 0x0002
	Mem550[ss:sp_549:word16] = es_434
	Mem553[ss:sp_549 - 0x0002:word16] = Mem550[ss:bp + 0x000A:word16]
	Mem556[ss:sp_549 - 0x0004:word16] = Mem553[ss:bp + 0x0008:word16]
	word16 sp_557
	byte SZO_560
	byte C_561
	byte Z_562
	word16 ax_563
	selector es_564
	word16 dx_566
	word16 si_567
	byte al_569
	byte SCZO_570
	word16 cx_572
	byte SO_573
	byte S_574
	byte bl_576
	byte bh_577
	byte CZ_578
	byte D_579
	byte ah_580
	byte dl_581
	byte cl_582
	byte ch_583
	call SEQ(cs, Mem556[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_454,al_453,ax_451,bh_471,bl_470,bp_545,bx_469,C_506,ch_110,cl_111,cs_121,cx_128,CZ_508,D_114,di_498,dl_436,ds_123,dx_443,es_542,S_505,SCZO_507,si_509,SO_504,sp_555,ss_543,SZO_548,Z_503
		defs: ah_580,al_569,ax_563,bh_577,bl_576,bp_559,bx_575,C_561,ch_583,cl_582,cs_571,cx_572,CZ_578,D_579,di_565,dl_581,ds_568,dx_566,es_564,S_574,SCZO_570,si_567,SO_573,sp_557,ss_558,SZO_560,Z_562
	es_434 = Mem556[ss:sp_557 + 0x0004:selector]
	sp_1019 = sp_557 + 0x0006
	byte al_592 = (byte) ax_563
	branch ax_563 < 0x0000 l0800_92AE
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92AE:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_92AE_thunk_fn0800_93A6:
	word16 bp_605
	fn0800_93A6(bp, out bp_605)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9298:
	branch (Mem556[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_929F
// DataOut: al ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_929E:
	Mem603[es_434:di:byte] = al_592
	di = di + 0x0001
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_929F:
	branch si_567 > 0x0001 l0800_9284
// DataOut: ax bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92A2:
	branch (Mem449[ss:bp - 0x0001:byte] & 0x01) != 0x00 l0800_92AB
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92A8:
	Mem540[ss:bp - 0x0004:word16] = Mem449[ss:bp - 0x0004:word16] + 0x0001
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_92AB:
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_907E:
	word16 v44_483 = Mem449[ss:bp - 0x000A:word16]
	Mem484[ss:bp - 0x000A:word16] = ax_448 - 0x0030
	di = v44_483
	branch v44_483 < 0x0000 l0800_9051
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9088:
	Mem493[ss:bp - 0x000A:word16] = Mem484[ss:bp - 0x000A:word16] + 0x000A
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9078:
	Mem479[ss:bp - 0x0001:byte] = Mem449[ss:bp - 0x0001:byte] | 0x01
// DataOut: bp di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9071:
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_906C_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_906C_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_906C_thunk_fn0800_93BE:
	ax = fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9067:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9067_thunk_fn0800_93A6:
	word16 bp_467
	fn0800_93A6(bp, out bp_467)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9067_thunk_fn0800_93A6:
	word16 bp_465
	fn0800_93A6(bp, out bp_465)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bl:<invalid> bh:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_8FD8:
	Mem179[ss:bp - 0x0006:word16] = Mem0[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_182 = sp_1019 - 0x0002
	Mem183[ss:sp_182:word16] = Mem179[ss:bp + 0x000A:word16]
	Mem186[ss:sp_182 - 0x0002:word16] = Mem183[ss:bp + 0x0008:word16]
	word16 sp_187
	byte SZO_190
	byte C_191
	byte Z_192
	word16 ax_193
	selector es_194
	word16 di_195
	word16 dx_196
	byte al_199
	byte SCZO_200
	word16 cx_202
	byte SO_203
	byte S_204
	byte bl_206
	byte bh_207
	byte CZ_208
	byte D_209
	byte ah_210
	byte dl_211
	byte cl_212
	byte ch_213
	call SEQ(cs, Mem186[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_113,al_173,ax_176,bh_116,bl_117,bp_131,bx_118,C_141,ch_110,cl_111,cs_121,cx_128,CZ_115,D_114,di_177,dl_112,ds_123,dx_125,es_133,S_119,SCZO_170,si_135,SO_120,sp_185,ss_127,SZO_180,Z_171
		defs: ah_210,al_199,ax_193,bh_207,bl_206,bp_189,bx_205,C_191,ch_213,cl_212,cs_201,cx_202,CZ_208,D_209,di_195,dl_211,ds_198,dx_196,es_194,S_204,SCZO_200,si_197,SO_203,sp_187,ss_188,SZO_190,Z_192
	sp_1019 = sp_187 + 0x0004
	byte al_220 = (byte) ax_193
	branch ax_193 < 0x0000 l0800_9016
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_8FEC:
	word16 ax_256 = (int16) al_220
	di = di_195
	branch di_195 < 0x0000 l0800_902B
// DataOut: al ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_8FF1:
	branch Mem186[ds:di_195 + 0x257C:byte] != 0x01 l0800_902B
// DataOut: al ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_902B:
	branch ax_256 == di_195 l0800_8FCB
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_902F:
	Mem268[ss:sp_187 + 0x0002:word16] = Mem186[ss:bp + 0x000A:word16]
	Mem271[ss:sp_187:word16] = Mem268[ss:bp + 0x0008:word16]
	Mem273[ss:sp_187 - 0x0002:word16] = ax_256
	word16 sp_274
	selector ss_275
	word16 bp_276
	byte SZO_277
	byte C_278
	byte Z_279
	word16 ax_280
	selector es_281
	word16 di_282
	word16 dx_283
	word16 si_284
	selector ds_285
	byte al_286
	byte SCZO_287
	selector cs_288
	word16 cx_289
	byte SO_290
	byte S_291
	word16 bx_292
	byte bl_293
	byte bh_294
	byte CZ_295
	byte D_296
	byte ah_297
	byte dl_298
	byte cl_299
	byte ch_300
	call SEQ(cs, Mem273[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_259,al_258,ax_256,bh_207,bl_206,bp_189,bx_205,C_263,ch_213,cl_212,cs_201,cx_216,CZ_208,D_209,di_260,dl_211,ds_198,dx_196,es_194,S_262,SCZO_264,si_197,SO_222,sp_272,ss_188,SZO_261,Z_265
		defs: ah_297,al_286,ax_280,bh_294,bl_293,bp_276,bx_292,C_278,ch_300,cl_299,cs_288,cx_289,CZ_295,D_296,di_282,dl_298,ds_285,dx_283,es_281,S_291,SCZO_287,si_284,SO_290,sp_274,ss_275,SZO_277,Z_279
	Mem304[ss_275:bp_276 - 0x0006:word16] = Mem273[ss_275:bp_276 - 0x0006:word16] - 0x0001
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_903F_thunk_fn0800_93BE:
	word16 bp_309
	fn0800_93BE(bp_276, psegArg00, wArg02, wArg04, out bp_309)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_8FF8:
	byte bl_339 = (byte) ax_256
	word16 bx_342 = DPB(ax_256, bl_339, 0)
	branch bl_339 < 0x00 l0800_9019
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_8FFD:
	branch Mem186[ds:bx_342 + 0x257C:byte] != 0x01 l0800_9019
// DataOut: ax bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> dx:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9019:
	word16 sp_347 = sp_1019 - 0x0002
	Mem348[ss:sp_347:word16] = Mem186[ss:bp + 0x000A:word16]
	Mem351[ss:sp_347 - 0x0002:word16] = Mem348[ss:bp + 0x0008:word16]
	Mem353[ss:sp_347 - 0x0004:word16] = bx_342
	word16 sp_354
	byte SZO_357
	byte C_358
	byte Z_359
	word16 ax_360
	selector es_361
	word16 dx_363
	byte al_366
	byte SCZO_367
	word16 cx_369
	byte SO_370
	byte S_371
	byte bl_373
	byte bh_374
	byte CZ_375
	byte D_376
	byte ah_377
	byte dl_378
	byte cl_379
	byte ch_380
	call SEQ(cs, Mem353[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_337,al_336,ax_334,bh_340,bl_341,bp_331,bx_342,C_345,ch_313,cl_314,cs_320,cx_329,CZ_317,D_316,di_325,dl_315,ds_322,dx_324,es_326,S_344,SCZO_321,si_323,SO_319,sp_352,ss_328,SZO_343,Z_327
		defs: ah_377,al_366,ax_360,bh_374,bl_373,bp_356,bx_372,C_358,ch_380,cl_379,cs_368,cx_369,CZ_375,D_376,di_362,dl_378,ds_365,dx_363,es_361,S_371,SCZO_367,si_364,SO_370,sp_354,ss_355,SZO_357,Z_359
	Mem384[ss:bp - 0x0006:word16] = Mem353[ss:bp - 0x0006:word16] - 0x0001
	sp_1019 = sp_354 + 0x0006
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> dx:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9004:
	Mem389[ss:bp - 0x0006:word16] = Mem186[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_392 = sp_1019 - 0x0002
	Mem393[ss:sp_392:word16] = Mem389[ss:bp + 0x000A:word16]
	Mem396[ss:sp_392 - 0x0002:word16] = Mem393[ss:bp + 0x0008:word16]
	word16 sp_397
	byte SZO_400
	byte C_401
	byte Z_402
	word16 ax_403
	selector es_404
	word16 di_405
	word16 dx_406
	word16 si_407
	byte al_409
	byte SCZO_410
	word16 cx_412
	byte SO_413
	byte S_414
	word16 bx_415
	byte bl_416
	byte bh_417
	byte CZ_418
	byte D_419
	byte ah_420
	byte dl_421
	byte cl_422
	byte ch_423
	call SEQ(cs, Mem396[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_337,al_336,ax_334,bh_340,bl_341,bp_331,bx_342,C_345,ch_313,cl_314,cs_320,cx_329,CZ_317,D_316,di_325,dl_315,ds_322,dx_324,es_326,S_344,SCZO_386,si_323,SO_319,sp_395,ss_328,SZO_390,Z_387
		defs: ah_420,al_409,ax_403,bh_417,bl_416,bp_399,bx_415,C_401,ch_423,cl_422,cs_411,cx_412,CZ_418,D_419,di_405,dl_421,ds_408,dx_406,es_404,S_414,SCZO_410,si_407,SO_413,sp_397,ss_398,SZO_400,Z_402
	sp_1019 = sp_397 + 0x0004
	ax_256 = ax_403
	branch ax_403 > 0x0000 l0800_8FF8
// DataOut: al bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> bx:<invalid> bl:<invalid> dx:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>
// LocalsOut: fp(16) v3(16)

l0800_9016:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9016_thunk_fn0800_93A6:
	word16 bp_254
	fn0800_93A6(bp, out bp_254)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

l0800_9016_thunk_fn0800_93A6:
	word16 bp_252
	fn0800_93A6(bp, out bp_252)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>

fn0800_9107_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> es:<invalid> al:<invalid> ax:<invalid> di:<invalid> bp:<invalid> dx:<invalid> cx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> Sequence dx:ax:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid>



void fn0800_911F(word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SO bp ss
// LiveOut: sp
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi es esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved:
fn0800_911F_entry:
// DataOut: bp ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

l0800_911F:
	branch SO l0800_9124
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9124:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:v3

l0800_9124_thunk_fn0800_93A6:
	word16 bp_13
	fn0800_93A6(bp, out bp_13)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3

l0800_9121:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:v3

l0800_9121_thunk_fn0800_93BE:
	word16 bp_11
	fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp_11)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3

l0800_9121_thunk_fn0800_93BE:
	word16 bp_9
	fn0800_93BE(bp, psegArg00, wArg02, wArg04, out bp_9)
	return
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3

fn0800_911F_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_912A(word16 ax, word16 bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_912A_entry:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_912A:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_912A_thunk_fn0800_93C5:
	word16 bp_5
	return fn0800_93C5(ax, bp, ds, out bp_5)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_912A_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



void fn0800_9145(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_9145_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9145:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9145_thunk_fn0800_93EF:
	fn0800_93EF(ax, bp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9145_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid>



void fn0800_9169(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
fn0800_9169_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9169:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9169_thunk_fn0800_93EF:
	fn0800_93EF(ax, bp)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9169_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid>



word16 fn0800_920E(word16 ax, word16 bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved: sp
fn0800_920E_entry:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_920E:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_920E_thunk_fn0800_93C5:
	word16 bp_5
	return fn0800_93C5(ax, bp, ds, out bp_5)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_920E_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_93A6(word16 bp, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp sp
// Trashed: SCZO ah al ax bp bpl di dil eax ebp edi es esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved:
fn0800_93A6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_93A6:
	Mem7[ss:v3 - 0x0002:word16] = Mem0[ss:bp + 0x000A:word16]
	Mem10[ss:v3 - 0x0004:word16] = Mem7[ss:bp + 0x0008:word16]
	Mem13[ss:v3 - 0x0006:word16] = 0xFFFF
	word16 sp_15
	selector ss_16
	word16 bp_17
	word16 ax_18
	selector cs_19
	byte SCZO_20
	byte C_21
	call SEQ(cs, Mem13[ss:bp + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ax_11,bp,cs,sp_12,ss
		defs: ax_18,bp_17,C_21,cs_19,SCZO_20,sp_15,ss_16
	Mem26[ss_16:bp_17 - 0x0004:word16] = Mem13[ss_16:bp_17 - 0x0004:word16] - (Mem13[ss_16:bp_17 - 0x0004:word16] <u 0x0001)
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93BA_thunk_fn0800_93BE:
	word16 bp_31
	return fn0800_93BE(bp_17, psegArg00, wArg02, wArg04, out bp_31)
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid>

fn0800_93A6_exit:
// DataOut: ax bp sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_93BE(word16 bp, selector psegArg00, word16 wArg02, word16 wArg04, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ss
// LiveOut: ax bp sp
// Trashed: ah al ax bp bpl di dil eax ebp edi es esi esp rax rbp rdi rsi rsp si sil sp spl
// Preserved:
l0800_93BE:
	es = Mem0[ss:sp:selector]
	sp = sp + 0x0002
	ax = Mem0[ss:bp - 0x0004:word16]
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_9453:
	di = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	si = Mem0[ss:sp:word16]
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return ax
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_93BE_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_93BE:
	sp = fp
	es = psegArg00
	sp = fp + 0x0002
	ax = Mem0[ss:bp - 0x0004:word16]
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9453_in_fn0800_93BE:
	di = wArg02
	sp = fp + 0x0004
	si = wArg04
	sp = bp
	bp = Mem0[ss:sp:word16]
	sp = sp + 0x0002
	return ax
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 es:<invalid> ax:<invalid>

fn0800_93BE_exit:
	use bp (=> bpOut)
// DataOut: ax bp sp
// DataOut (flags): 
// SymbolicIn: sp:bp + 0x0002 es:<invalid> ax:<invalid> di:<invalid> si:<invalid> bp:<invalid>



word16 fn0800_93C5(word16 ax, word16 bp, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds ss
// LiveOut: ax bp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx di dil eax ebp ebx ecx edi es esi esp rax rbp rbx rcx rdi rsi rsp si sil sp spl
// Preserved:
fn0800_93C5_entry:
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_93C5:
	Mem8[ss:bp - 0x0006:word16] = Mem0[ss:bp - 0x0006:word16] + 0x0001
	word16 sp_17
	byte SZO_20
	selector cs_21
	word16 cx_22
	word16 ax_23
	byte C_24
	byte al_25
	byte S_26
	word16 bx_27
	selector ds_28
	byte SCZO_29
	byte Z_30
	selector es_31
	word16 di_32
	word16 si_33
	call SEQ(cs, Mem8[ss:bp + 0x0004:word16]) (retsize: 2; depth: 6)
		uses: bp_3,cs,sp_14,ss_2,SZO_9,wLoc02_12,wLoc04_15
		defs: al_25,ax_23,bp_18,bx_27,C_24,cs_21,cx_22,di_32,ds_28,es_31,S_26,SCZO_29,si_33,sp_17,ss_19,SZO_20,Z_30
	byte al_39 = (byte) ax_23
	branch ax_23 <= 0x0000 l0800_93EA
// DataOut: al ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_93EA:
	branch ax_23 == 0x0000 l0800_93E4
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_93EC:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_93EC_thunk_fn0800_93A6:
	word16 bp_100
	return fn0800_93A6(bp, out bp_100)
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_93D7:
	word16 ax_85 = DPB(ax_23, al_39, 0)
	branch al_39 < 0x00 l0800_93E4
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_93DB:
	branch Mem8[ds_28:ax_85 + 0x257C:byte] == 0x01 l0800_93C5
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: fp(16)

l0800_93E4:
	word16 sp_67
	word16 bp_68
	selector ss_69
	byte SZO_70
	selector cs_71
	word16 cx_72
	word16 ax_73
	byte C_74
	byte al_75
	byte S_76
	word16 bx_77
	selector ds_78
	byte SCZO_79
	byte Z_80
	selector es_81
	word16 di_82
	word16 si_83
	call Mem8[ss:sp_17 + 0x0004:word16] + 0x0003 (retsize: 4; depth: 4)
		uses: al_39,ax_38,bp_18,bx_27,C_43,cs_21,cx_65,di_32,ds_28,es_31,S_42,SCZO_66,si_33,sp_64,ss_19,SZO_40,wLoc02_12,wLoc04_15,Z_41
		defs: al_75,ax_73,bp_68,bx_77,C_74,cs_71,cx_72,di_82,ds_78,es_81,S_76,SCZO_79,si_83,sp_67,ss_69,SZO_70,Z_80
	return ax_73
// DataOut: ax bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_93C5_exit:
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_93EF(word16 ax, word16 bp)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut:
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl dx eax ebp ecx edi edx es esi esp rax rbp rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_93EF_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_93EF:
	word16 sp_1 = fp
	word16 dx_153 = 0x0000
	word16 cx_139 = 0x0004
	byte cl_124 = 0x04
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_93F4:
	word16 v8_30 = Mem0[ss:bp - 0x000A:word16] - 0x0001
	Mem31[ss:bp - 0x000A:word16] = v8_30
	branch v8_30 < 0x0000 l0800_9442
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9442:
// DataOut: bp cl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_93F9:
	word16 sp_90 = sp_1 - 0x0002
	Mem91[ss:sp_90:word16] = dx_153
	Mem93[ss:sp_90 - 0x0002:word16] = cx_139
	Mem95[ss:bp - 0x0006:word16] = Mem93[ss:bp - 0x0006:word16] + 0x0001
	Mem99[ss:sp_90 - 0x0004:word16] = Mem95[ss:bp + 0x000A:word16]
	Mem102[ss:sp_90 - 0x0006:word16] = Mem99[ss:bp + 0x0008:word16]
	word16 sp_103
	word16 dx_104
	byte SCZO_105
	word16 cx_106
	byte SZO_109
	byte SO_110
	word16 ax_112
	byte C_113
	byte cl_114
	byte ch_115
	byte al_116
	byte dl_117
	byte Z_118
	call SEQ(cs, Mem102[ss:bp + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: al_16,ax_19,bp_22,C_18,ch_24,cl_17,cs_20,cx_25,dl_26,dx_27,SCZO_28,SO_33,sp_101,ss_21,SZO_96,Z_15
		defs: al_116,ax_112,bp_107,C_113,ch_115,cl_114,cs_111,cx_106,dl_117,dx_104,SCZO_105,SO_110,sp_103,ss_108,SZO_109,Z_118
	word16 cx_123 = Mem102[ss:sp_103 + 0x0004:word16]
	cl_124 = (byte) cx_123 (alias)
	word16 dx_126 = Mem102[ss:sp_103 + 0x0006:word16]
	sp_1 = sp_103 + 0x0008
	byte al_130 = (byte) ax_112
	branch ax_112 <= 0x0000 l0800_9444
// DataOut: al ax bp cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_940F:
	cl_124 = cl_124 - 0x01
	word16 cx_134 = DPB(cx_123, cl_124 - 0x01, 0)
	branch cl_124 < 0x01 l0800_9444
// DataOut: al ax bp cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9413:
	byte ch_138 = al_130 - 0x30
	cx_139 = DPB(cx_134, al_130 - 0x30, 8) (alias)
	branch al_130 <u 0x30 l0800_9444
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_941A:
	branch al_130 <u 0x3A l0800_9436
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_941F:
	byte ch_155 = al_130 - 0x41
	word16 cx_156 = DPB(cx_134, al_130 - 0x41, 8)
	branch al_130 <u 0x41 l0800_9444
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x30 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9424:
	branch al_130 <u 0x47 l0800_9433
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9429:
	ch_155 = al_130 - 0x61
	cx_156 = DPB(cx_134, al_130 - 0x61, 8) (alias)
	branch al_130 <u 0x61 l0800_9444
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x41 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_942E:
	branch al_130 >=u 0x67 l0800_9444
// DataOut: ax bp ch cl dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:al - 0x61 dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9444:
	branch cl_124 == 0x04 l0800_944F
// DataOut: bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_944F:
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9450_thunk_fn0800_93A6:
	word16 bp_88
	fn0800_93A6(bp, out bp_88)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9449:
	word16 sp_70
	word16 dx_71
	byte SCZO_72
	word16 cx_73
	word16 bp_74
	selector ss_75
	byte SZO_76
	byte SO_77
	selector cs_78
	word16 ax_79
	byte C_80
	byte cl_81
	byte ch_82
	byte al_83
	byte dl_84
	byte Z_85
	call Mem31[ss:sp_1:word16] + 0x0003 (retsize: 4; depth: 4)
		uses: al_34,ax_37,bp_42,C_36,ch_44,cl_35,cs_38,cx_68,dl_46,dx_47,SCZO_69,SO_39,sp_67,ss_41,SZO_40,Z_49
		defs: al_83,ax_79,bp_74,C_80,ch_82,cl_81,cs_78,cx_73,dl_84,dx_71,SCZO_72,SO_77,sp_70,ss_75,SZO_76,Z_85
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

fn0800_93EF_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> es:<invalid> di:<invalid> si:<invalid> bp:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9433:
	ch_138 = ch_155 + 0x0A
	cx_139 = DPB(cx_156, ch_138, 8) (alias)
// DataOut: ax bp ch cl cx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000

l0800_9436:
	dx_153 = DPB(dx_126 << 0x0004, (byte) (dx_126 << 0x0004) + ch_138, 0) (alias)
// DataOut: ax bp cl cx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> ax:<invalid> cl:<invalid> ch:<invalid> dl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0004 -2(fp):0x0000



byte fn0800_9485(byte cl, byte bl)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl cl
// LiveOut: C
// Trashed: SCZO bh bl bx ebx rbx
// Preserved: bx sp
fn0800_9485_entry:
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9485:
	byte C_14
	byte bl_28 = bl - 0x30
	branch bl <u 0x30 l0800_94AD
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_948B:
	branch bl <=u 0x39 l0800_94A2
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_9490:
	branch bl >u 0x5A l0800_949A
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_949A:
	bl_28 = bl - 0x57
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_9495:
	bl_28 = bl - 0x37
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:bl - 0x30 -2(fp):bx
// LocalsOut: fp(16)

l0800_949D:
	branch bl_28 <=u 0x09 l0800_94AD
// DataOut: bl cl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx
// LocalsOut: fp(16)

l0800_94A2:
	branch bl_28 >=u cl l0800_94AD
// DataOut: bl cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx
// LocalsOut: fp(16)

l0800_94AD:
	C_14 = true
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx

l0800_94A6:
	C_14 = false
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bl:<invalid> -2(fp):bx

l0800_94AF:
	return C_14
// DataOut: cx di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx

fn0800_9485_exit:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:fp bl:<invalid> bx:bx bh:0x00 -2(fp):bx



word16 fn0800_94B0(word16 ax, word16 bx, selector ds, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, segptr32 ptrArg0E, segptr32 ptrArg12, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx ds ss
// LiveOut: ax bx di dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: al bp sp
// Stack args: Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)
fn0800_94B0_entry:
// DataOut: ax bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94B0:
	word16 sp_11 = fp - 0x000C
	byte bLoc03_14 = 0x00
	word16 wLoc06_133 = 0x0000
	word16 wLoc08_130 = 0x0001
// DataOut: ax bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94C6:
	word16 ax_179
	word16 v8_21 = wLoc06_133 + 0x0001
	word16 sp_26 = sp_11 - 0x0002
	Mem27[ss:sp_26:word16] = wArg08
	Mem31[ss:sp_26 - 0x0002:word16] = wArg06
	wLoc06_133 = v8_21
	word16 sp_33
	word16 bp_34
	byte SCZO_36
	word16 si_37
	word16 di_38
	byte SZO_39
	selector cs_40
	word16 cx_41
	word16 ax_42
	byte C_43
	byte SO_44
	byte al_45
	word16 bx_46
	byte bl_47
	byte Z_48
	selector ds_49
	byte CZ_50
	byte cl_51
	selector es_52
	word16 dx_53
	byte dl_54
	byte dh_55
	byte ah_56
	call SEQ(cs, Mem31[ss:fp + 0x0002:word16]) (retsize: 2; depth: 2)
		uses: bLoc03_14,bp_5,cs,di,SCZO_7,si,sp_30,ss_18,SZO_23,wLoc02_4,wLoc06_22,wLoc08_16,wLoc0A_10,wLoc0C_13
		defs: ah_56,al_45,ax_42,bl_47,bp_34,bx_46,C_43,cl_51,cs_40,cx_41,CZ_50,dh_55,di_38,dl_54,ds_49,dx_53,es_52,SCZO_36,si_37,SO_44,sp_33,ss_35,SZO_39,Z_48
	sp_11 = sp_33 + 0x0004
	word16 ax_134 = ax_42
	byte al_64 = (byte) ax_42
	branch ax_42 < 0x0000 l0800_9549
// DataOut: al ax bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94D8:
	word16 ax_220 = (int16) al_64
	byte bl_229 = (byte) ax_220
	branch (bl_229 & 0x80) != 0x00 l0800_94E7
// DataOut: ax bl bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94DF:
	branch (Mem31[ds_49:ax_220 + 0x2251:byte] & 0x01) != 0x00 l0800_94C6
// DataOut: ax bl bx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94E7:
	ax_134 = ax_220
	byte al_240 = (byte) ax_220
	word16 wArg0C_245 = wArg0C - 0x0001
	branch wArg0C < 0x0001 l0800_9550
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:(int16) al di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94ED:
	word16 bp_307
	selector cs_290
	branch al_240 == 0x2B l0800_94F8
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F1:
	cs_290 = cs_40
	bp_307 = bp_34
	branch al_240 != 0x2D l0800_950F
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F5:
	bLoc03_14 = 0x01
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):0x00 -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94F8:
	wArg0C_245 = wArg0C - 0x0002
	branch wArg0C < 0x0002 l0800_9550
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_94FD:
	Mem866[ss:sp_33 + 0x0002:word16] = wArg08
	Mem869[ss:sp_33:word16] = wArg06
	wLoc06_133 = v8_21 + 0x0001
	word16 sp_870
	byte SCZO_873
	word16 si_874
	word16 di_875
	byte SZO_876
	word16 cx_878
	word16 ax_879
	byte C_880
	byte SO_881
	byte al_882
	word16 bx_883
	byte bl_884
	byte Z_885
	selector ds_886
	byte CZ_887
	byte cl_888
	selector es_889
	word16 dx_890
	byte dl_891
	byte dh_892
	byte ah_893
	call SEQ(cs_40, Mem869[ss:bp_34 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_241,al_240,ax_237,bl_229,bLoc03_854,bp_34,bx_243,C_234,cl_51,cs_40,cx_59,CZ_50,dh_55,di_235,dl_54,ds_49,dx_53,es_52,SCZO_856,si_37,SO_860,sp_868,ss_35,SZO_863,wLoc02_4,wLoc06_862,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_855
		defs: ah_893,al_882,ax_879,bl_884,bp_871,bx_883,C_880,cl_888,cs_877,cx_878,CZ_887,dh_892,di_875,dl_891,ds_886,dx_890,es_889,SCZO_873,si_874,SO_881,sp_870,ss_872,SZO_876,Z_885
	sp_11 = sp_870 + 0x0004
	ax_134 = ax_879
	al_240 = (byte) ax_879 (alias)
	branch ax_879 < 0x0000 l0800_9549
// DataOut: al ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:(int16) al bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9549:
	wLoc08_130 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_950F:
	word16 ax_418
	word16 si_309 = 0x0000
	word16 di_312 = 0x0000
	byte cl_317 = (byte) wArg0A
	branch wArg0A == 0x0000 l0800_956E
// DataOut: al ax cl cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x2251 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_956E:
	wArg0A = 0x000A
	branch al_240 != 0x30 l0800_959E
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9577:
	word16 v71_804 = wArg0C_245 - 0x0001
	wArg0C_245 = v71_804
	branch v71_804 < 0x0000 l0800_956B
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_957C:
	word16 sp_812 = sp_11 - 0x0002
	Mem813[ss:sp_812:word16] = wArg08
	Mem816[ss:sp_812 - 0x0002:word16] = wArg06
	wLoc06_133 = wLoc06_133 + 0x0001
	word16 sp_817
	byte SCZO_820
	byte SZO_823
	word16 cx_825
	byte C_827
	byte SO_828
	byte al_829
	word16 bx_830
	byte bl_831
	byte Z_832
	selector ds_833
	byte CZ_834
	byte cl_835
	selector es_836
	word16 dx_837
	byte dl_838
	byte dh_839
	byte ah_840
	call SEQ(cs_290, Mem816[ss:bp_307 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_297,al_296,ax_295,bl_306,bLoc03_285,bp_307,bx_305,C_299,cl_317,cs_290,cx_315,CZ_287,dh_303,di_312,dl_302,ds_288,dx_300,es_304,SCZO_801,si_309,SO_807,sp_815,ss_291,SZO_810,wLoc02_4,wLoc06_809,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_802
		defs: ah_840,al_829,ax_826,bl_831,bp_818,bx_830,C_827,cl_835,cs_824,cx_825,CZ_834,dh_839,di_822,dl_838,ds_833,dx_837,es_836,SCZO_820,si_821,SO_828,sp_817,ss_819,SZO_823,Z_832
	sp_11 = sp_817 + 0x0004
	wArg0A = 0x0008
	branch al_829 == 0x78 l0800_9597
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9593:
	branch al_829 != 0x58 l0800_95C8
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0008 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9597:
	wArg0A = 0x0010
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0008 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9518:
	branch wArg0A >u 0x0024 l0800_9550
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_951D:
	branch cl_317 <u 0x02 l0800_9550
// DataOut: al ax cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9522:
	branch al_240 != 0x30 l0800_959E
// DataOut: al cl di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_959E:
	branch fn0800_9485(0x0A, (byte) ax_134) l0800_9550
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9550:
	wLoc08_130 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_9555:
	word16 sp_140 = sp_11 - 0x0002
	Mem141[ss:sp_140:word16] = wArg08
	Mem144[ss:sp_140 - 0x0002:word16] = wArg06
	Mem146[ss:sp_140 - 0x0004:word16] = ax_134
	word16 sp_147
	word16 bp_148
	byte SCZO_150
	word16 si_151
	word16 di_152
	byte SZO_153
	selector cs_154
	word16 cx_155
	word16 ax_156
	byte C_157
	byte SO_158
	byte al_159
	word16 bx_160
	byte bl_161
	byte Z_162
	selector ds_163
	byte CZ_164
	byte cl_165
	selector es_166
	word16 dx_167
	byte dl_168
	byte dh_169
	byte ah_170
	call SEQ(cs_40, Mem146[ss:bp_34 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_65,al_64,ax_134,bl_47,bLoc03_128,bp_34,bx_46,C_69,cl_51,cs_40,cx_59,CZ_50,dh_55,di_38,dl_54,ds_49,dx_53,es_52,SCZO_36,si_37,SO_68,sp_145,ss_132,SZO_67,wLoc02_4,wLoc06_133,wLoc08_130,wLoc0A_10,wLoc0C_13,Z_48
		defs: ah_170,al_159,ax_156,bl_161,bp_148,bx_160,C_157,cl_165,cs_154,cx_155,CZ_164,dh_169,di_152,dl_168,ds_163,dx_167,es_166,SCZO_150,si_151,SO_158,sp_147,ss_149,SZO_153,Z_162
	sp_11 = sp_147 + 0x0006
	wLoc06_133 = wLoc06_133 - 0x0001
	ax_179 = 0x0000 (alias)
	word16 dx_181
	*dxOut = 0x0000
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_95A8:
	si_309 = ax_134
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:0x000A ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 bl:<invalid> bh:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9526:
	branch cl_317 != 0x10 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_952B:
	word16 v32_755 = wArg0C_245 - 0x0001
	wArg0C_245 = v32_755
	branch v32_755 < 0x0000 l0800_956B
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_956B:
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x000A 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9530:
	word16 sp_763 = sp_11 - 0x0002
	Mem764[ss:sp_763:word16] = wArg08
	Mem767[ss:sp_763 - 0x0002:word16] = wArg06
	wLoc06_133 = wLoc06_133 + 0x0001
	word16 sp_768
	byte SCZO_771
	byte SZO_774
	word16 cx_776
	byte C_778
	byte SO_779
	byte al_780
	word16 bx_781
	byte bl_782
	byte Z_783
	selector ds_784
	byte CZ_785
	byte cl_786
	selector es_787
	word16 dx_788
	byte dl_789
	byte dh_790
	byte ah_791
	call SEQ(cs_290, Mem767[ss:bp_307 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_297,al_296,ax_295,bl_306,bLoc03_285,bp_307,bx_305,C_750,cl_317,cs_290,cx_315,CZ_748,dh_303,di_312,dl_302,ds_288,dx_300,es_304,SCZO_753,si_309,SO_758,sp_766,ss_291,SZO_761,wLoc02_4,wLoc06_760,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_754
		defs: ah_791,al_780,ax_777,bl_782,bp_769,bx_781,C_778,cl_786,cs_775,cx_776,CZ_785,dh_790,di_773,dl_789,ds_784,dx_788,es_787,SCZO_771,si_772,SO_779,sp_768,ss_770,SZO_774,Z_783
	sp_11 = sp_768 + 0x0004
	branch al_780 == 0x78 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9542:
	branch al_780 == 0x58 l0800_959C
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_959C:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):0x0010 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9546:
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:0x0000 si:0x0000 -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95C8:
	byte cl_462 = (byte) wArg0A
	byte bl_466 = (byte) ax_418
	byte C_467 = fn0800_9485(cl_462, bl_466)
	word16 ax_469 = ax_418
	branch C_467 l0800_95AB
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95AB:
	int32 dx_ax_528 = wArg0A *u si_309
	ui32 di_si_535 = SEQ(di_312, ax_418 + (word16) dx_ax_528) + dx_ax_528
	di_312 = SLICE(di_si_535, word16, 16) (alias)
	si_309 = (word16) di_si_535 (alias)
	cs_545 = cs_290
	bp_568 = bp_307
	branch di_si_535 != 0x00000000 l0800_95E5
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95E5:
	selector cs_545
	word16 bp_568
	word16 v55_570 = wArg0C_245 - 0x0001
	wArg0C_245 = v55_570
	branch v55_570 < 0x0000 l0800_9612
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95EA:
	word16 sp_578 = sp_11 - 0x0002
	Mem579[ss:sp_578:word16] = wArg08
	Mem582[ss:sp_578 - 0x0002:word16] = wArg06
	wLoc06_133 = wLoc06_133 + 0x0001
	word16 sp_583
	byte SCZO_586
	word16 si_587
	word16 di_588
	byte SZO_589
	word16 cx_591
	word16 ax_592
	byte C_593
	byte SO_594
	byte al_595
	word16 bx_596
	byte bl_597
	byte Z_598
	selector ds_599
	byte CZ_600
	byte cl_601
	selector es_602
	word16 dx_603
	byte dl_604
	byte dh_605
	byte ah_606
	call SEQ(cs_545, Mem582[ss:bp_568 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_551,al_550,ax_549,bl_561,bLoc03_285,bp_568,bx_560,C_553,cl_541,cs_545,cx_544,CZ_542,dh_557,di_562,dl_556,ds_543,dx_554,es_559,SCZO_558,si_565,SO_573,sp_581,ss_546,SZO_576,wLoc02_4,wLoc06_575,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_548
		defs: ah_606,al_595,ax_592,bl_597,bp_584,bx_596,C_593,cl_601,cs_590,cx_591,CZ_600,dh_605,di_588,dl_604,ds_599,dx_603,es_602,SCZO_586,si_587,SO_594,sp_583,ss_585,SZO_589,Z_598
	sp_11 = sp_583 + 0x0004
	ax_469 = ax_592
	branch fn0800_9485((byte) wArg0A, (byte) ax_592) l0800_95D4
// DataOut: ax cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95D4:
	int32 dx_ax_630 = wArg0A *u si_587
	word16 ax_631 = (word16) dx_ax_630
	ui32 ax_si_646 = SEQ(di_588, ax_592 + ax_631) + SEQ(SLICE(dx_ax_630, word16, 16), ax_631)
	int32 dx_ax_640 = wArg0A *u di_588
	si_309 = (word16) ax_si_646 (alias)
	di_312 = SLICE(ax_si_646, word16, 16)
	branch SLICE(dx_ax_640, byte, 16) + SLICE(dx_ax_640, byte, 24) + (ax_si_646 <u 0x00000000) != 0x00 l0800_9636
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_9636:
	byte ah_671 = (bLoc03_14 <u 0xFF) + 0xFF
	ax_179 = DPB(0xFFFF, ah_671, 8) (alias)
	word16 dx_677
	*dxOut = (ah_671 <u 0x00) + 0x7FFF
	wLoc08_130 = 0x0002
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_95B5:
	word16 v45_396 = wArg0C_245 - 0x0001
	wArg0C_245 = v45_396
	branch v45_396 < 0x0000 l0800_9612
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95BA:
	word16 sp_404 = sp_11 - 0x0002
	Mem405[ss:sp_404:word16] = wArg08
	Mem408[ss:sp_404 - 0x0002:word16] = wArg06
	wLoc06_133 = wLoc06_133 + 0x0001
	word16 sp_409
	byte SCZO_412
	byte SZO_415
	word16 cx_417
	byte C_419
	byte SO_420
	byte al_421
	word16 bx_422
	byte bl_423
	byte Z_424
	selector ds_425
	byte CZ_426
	byte cl_427
	selector es_428
	word16 dx_429
	byte dl_430
	byte dh_431
	byte ah_432
	call SEQ(cs_290, Mem408[ss:bp_307 + 0x0004:word16]) (retsize: 2; depth: 2)
		uses: ah_378,al_377,ax_376,bl_388,bLoc03_285,bp_394,bx_387,C_380,cl_368,cs_372,cx_371,CZ_369,dh_384,di_389,dl_383,ds_370,dx_381,es_386,SCZO_385,si_391,SO_399,sp_407,ss_373,SZO_402,wLoc02_4,wLoc06_401,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_375
		defs: ah_432,al_421,ax_418,bl_423,bp_410,bx_422,C_419,cl_427,cs_416,cx_417,CZ_426,dh_431,di_414,dl_430,ds_425,dx_429,es_428,SCZO_412,si_413,SO_420,sp_409,ss_411,SZO_415,Z_424
	sp_11 = sp_409 + 0x0004
// DataOut: al di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(32) Stack +0012(32)

l0800_95D2:
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +0006(16) Stack +0008(16) Stack +000E(32) Stack +0012(32)

l0800_9602:
	word16 sp_488 = sp_11 - 0x0002
	Mem489[ss:sp_488:word16] = wArg08
	Mem492[ss:sp_488 - 0x0002:word16] = wArg06
	Mem494[ss:sp_488 - 0x0004:word16] = ax_469
	word16 sp_495
	word16 bp_496
	byte SCZO_498
	byte SZO_501
	selector cs_502
	word16 cx_503
	word16 ax_504
	byte C_505
	byte SO_506
	byte al_507
	word16 bx_508
	byte bl_509
	byte Z_510
	selector ds_511
	byte CZ_512
	byte cl_513
	selector es_514
	word16 dx_515
	byte dl_516
	byte dh_517
	byte ah_518
	call SEQ(cs_290, Mem494[ss:bp_307 + 0x0006:word16]) (retsize: 2; depth: 2)
		uses: ah_473,al_472,ax_479,bl_466,bLoc03_285,bp_458,bx_475,C_467,cl_462,cs_443,cx_460,CZ_440,dh_451,di_455,dl_450,ds_441,dx_449,es_453,SCZO_452,si_456,SO_442,sp_493,ss_477,SZO_446,wLoc02_4,wLoc06_478,wLoc08_16,wLoc0A_10,wLoc0C_13,Z_447
		defs: ah_518,al_507,ax_504,bl_509,bp_496,bx_508,C_505,cl_513,cs_502,cx_503,CZ_512,dh_517,di_500,dl_516,ds_511,dx_515,es_514,SCZO_498,si_499,SO_506,sp_495,ss_497,SZO_501,Z_510
	sp_11 = sp_495 + 0x0006
	wLoc06_133 = wLoc06_133 - 0x0001
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0003(0) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9612:
	word16 dx_341
	*dxOut = di_312
	ax_179 = si_309
	branch bLoc03_14 == 0x00 l0800_9622
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dx:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_961B:
	ax_179 = -si_309
	word16 dx_361
	*dxOut = -di_312 - (ax_179 == 0x0000)
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> Sequence dx:ax:<invalid> dl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):0x0001 -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Stack +000E(32) Stack +0012(32)

l0800_9622:
	Mem106[ptrArg0E:word16] = Mem31[ptrArg0E:word16] + wLoc06_133
	Mem114[ptrArg12:word16] = wLoc08_130
	word16 bx_112
	*bxOut = wLoc08_130
// DataOut: ax bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>
// LocalsOut: fp(16)

l0800_964C:
	word16 di_115
	*diOut = Mem114[ss:sp_11:word16]
	return ax_179
// DataOut: ax bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>

fn0800_94B0_exit:
// DataOut: ax bx di dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ax:<invalid> Sequence dx:ax:<invalid> Sequence es:di:<invalid> bx:<invalid> di:<invalid> si:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> dl:<invalid> al:<invalid> ah:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):di -10(fp):si -8(fp):<invalid> -6(fp):<invalid> -3(fp):<invalid> -2(fp):bp 10(fp):<invalid> 12(fp):<invalid>



void fn0800_9652(byte al, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: ah ax ch cl cx dh dl dx eax ecx edx es esi rax rcx rdx rsi si sil
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_9652_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_9652:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9652_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2B Sequence es:si:<invalid> cx:<invalid> dx:<invalid> si:si -4(fp):si -2(fp):bp



void fn0800_9667(byte al, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al
// LiveOut:
// Trashed: ah ax ch cl cx dh dl dx eax ecx edx es esi rax rcx rdx rsi si sil
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_9667_entry:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_9667:
	__syscall(0x21)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9667_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:0x2D Sequence es:si:<invalid> cx:<invalid> dx:<invalid> si:si -4(fp):si -2(fp):bp



word16 fn0800_9764(byte dl, selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dl ds ss
// LiveOut: ax di dl ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9764_entry:
// DataOut: dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0014(16) Stack +0002(16) Stack +0004(16)

l0800_9764:
	fn0800_8B95((byte) (fp - 0x0006), dl, DPB(ptrLoc12, fp - 0x0006, 0))
	fn0800_8BA8((byte) (fp - 0x000A), (byte) ss, DPB(ptrLoc12, fp - 0x000A, 0))
	word16 dx_48
	word16 di_49
	selector ds_50
	word16 ax_51 = fn0800_C04F(ds, DPB(ptrLoc16, fp - 0x0006, 0), DPB(ptrLoc12, fp - 0x000A, 0), out dx_48, out di_49, out ds_50)
	branch (wArg02 | wArg04) == 0x0000 l0800_97AC
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16) Stack +0002(32)

l0800_979C:
	Mem84[ptrArg02 + 0x0002:word16] = dx_48
	Mem85[ptrArg02:word16] = ax_51
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(8) Local -000E(16)

l0800_97AC:
	byte dl_69
	*dlOut = (byte) dx_48
	return ax_51
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000E bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp

fn0800_9764_exit:
// DataOut: ax di dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> dx:<invalid> ah:<invalid> dl:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> bl:<invalid> bh:<invalid> di:<invalid> ds:<invalid> -22(fp):fp - 0x0006 -20(fp):ss -18(fp):fp - 0x000A -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -2(fp):bp



word16 fn0800_97B6(selector ds, word16 wArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97B6_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97B6:
	word16 dx_23
	return fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x01, out dx_23)
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_97B6_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0001 -2(fp):bp



byte fn0800_97CC(selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx rax rbx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_97CC_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_97CC:
	byte al_18
	byte dl_8 = (byte) wArg02
	*dlOut = dl_8
	branch wArg02 != 0xFFFF l0800_97DC
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_97DC:
	branch (Mem0[ds:DPB(ax, 0x00, 8) + 0x2251:byte] & 0x08) == 0x00 l0800_97F2
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F2:
	al_18 = dl_8
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97E9:
	al_18 = (byte) (DPB(ax, 0x00, 8) + 0xFFE0) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> al:dl ah:0x00 bx:ax -2(fp):bp

l0800_97D7:
	al_18 = 0xFF (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_97F6:
	return al_18
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp

fn0800_97CC_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> al:<invalid> ah:<invalid> bx:ax -2(fp):bp



byte fn0800_97F8(byte al, selector ds, segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: dl
// Trashed: SCZO ah al ax dh dl ds dx eax edx rax rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(32)
fn0800_97F8_entry:
// DataOut: al di ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_97F8:
	word16 ax_11 = DPB(ax, 0x41, 8)
	byte dl_16 = (byte) ptrArg02
	branch msdos_delete_file(SLICE(ptrArg02, selector, 16), (word16) ptrArg02) l0800_980A
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_980A:
	fn0800_8D2B(ds, ax_11)
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_9806:
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x41 Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_980E:
	return dl_16
// DataOut: di dl sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_97F8_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



word16 fn0800_9810(byte dh, byte dl, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dh di dl es
// LiveOut: di sp
// Trashed: SCZO ah al ax di dil eax edi esp rax rdi rsp sp spl
// Preserved:
fn0800_9810_entry:
// DataOut: bp dh di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9810:
	word16 di_6 = fn0800_9817(dh, di, es)
// DataOut: al bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9815_thunk_fn0800_9817:
	return fn0800_9817(dl, di_6, es)
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFE al:dl ax:<invalid> ah:<invalid> di:<invalid>

fn0800_9810_exit:
// DataOut: di sp
// DataOut (flags): 
// SymbolicIn: sp:fp + 0xFFFE al:<invalid> ax:<invalid> ah:<invalid> di:<invalid>



word16 fn0800_9817(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es
// LiveOut: di
// Trashed: SCZO ah al ax di dil eax edi rax rdi
// Preserved: ah sp
fn0800_9817_entry:
// DataOut: al bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9817:
	word16 ax_3 = __aam(al)
	byte al_4 = (byte) ax_3
	word16 di_11 = fn0800_9820(SLICE(ax_3, byte, 8), di, es)
// DataOut: al bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_981E_thunk_fn0800_9820:
	return fn0800_9820(al_4, di_11, es)
// DataOut: bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> al:ah ah:<invalid> di:<invalid>

fn0800_9817_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> al:<invalid> ah:<invalid> di:<invalid>



word16 fn0800_9820(byte al, word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al di es
// LiveOut: di
// Trashed: SCZO al ax di dil eax edi rax rdi
// Preserved: sp
fn0800_9820_entry:
// DataOut: ah al bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9820:
	byte al_4
	byte C_5 = __daa(al + 0x90, &al_4)
	byte al_8
	__daa(al_4 + 0x40 + C_5, &al_8)
	Mem10[es:di:byte] = al_8
	return di + 0x0001
// DataOut: ah bp di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9820_exit:
// DataOut: di
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid> di:di + 0x0001



word16 fn0800_9828(word16 bp, selector ds, word16 wArg02, segptr32 ptrArg04, selector psegArg06, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_9828_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_9828:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_988C:
	word16 sp_1002 = fp - 0x009E
	word16 wLoc06_22 = fp - 0x0098
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x009C bp:fp - 0x0002 -156(fp):di -154(fp):si -24(fp):0x0000 -22(fp):0x0050 -20(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9895:
	word16 di_128 = wLoc06_22
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9898:
	word16 si_133 = (word16) ptrArg04
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_989B:
	byte al_148 = Mem0[ds:si_133:byte]
	si_133 = si_133 + 0x0001
	byte al_151 = al_148
	ax = DPB(ax, al_148, 0) (alias)
	branch al_148 == 0x00 l0800_98B3
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_98B3:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0016(0)

l0800_98A1:
	branch al_148 == 0x25 l0800_98B6
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_98B6:
	al_151 = Mem0[ds:si_133:byte]
	ax = DPB(ax, al_151, 0) (alias)
	si_133 = si_133 + 0x0001
	branch al_151 == 0x25 l0800_98A5
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0012(16) Local -0016(8) Stack +0002(16)

l0800_98BF:
	wLoc06_22 = di_128
	byte ch_249 = 0x00
	word16 wLoc10_252 = 0x0000
	word16 wLoc04_1055 = 0x0020
	byte bLoc0D_1026 = 0x00
	word16 wLoc0A_255 = 0xFFFF
	word16 wLoc0C_256 = 0xFFFF
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98DD:
	word16 ax_275 = DPB(ax, 0x00, 8)
	byte bl_281 = (byte) ax_275
	byte dl_278 = (byte) ax_275
	word16 bx_284 = DPB(ax_275, bl_281 - 0x20, 0)
	branch bl_281 >=u 0x80 l0800_98FE
// DataOut: bp bx ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98EB:
	word16 bx_333 = DPB(ax_275, Mem0[ds:bx_284 + 0x2605:byte], 0)
	branch bx_333 <=u 0x0017 l0800_98F7
// DataOut: bp bx ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98F7:
	word16 cx_1320
	selector es_1007
	word16 di_1006
	word16 bx_1032
	byte bh_1024
	word16 dx_1031
	word16 ax_1030
	byte bLoc08_1019
	word16 dx_1013
	switch (bx_333 << 0x0001) { l0800_9917 l0800_9901 l0800_994C l0800_990C l0800_997A l0800_9987 l0800_99C5 l0800_99CC l0800_99D1 l0800_9935 l0800_99FA l0800_99D8 l0800_99DC l0800_99E0 l0800_9A55 l0800_9B02 l0800_9AA5 l0800_9AC5 l0800_9C46 l0800_9C82 l0800_9C82 l0800_9C82 l0800_9927 l0800_992D }
// DataOut: bl bp ch cl dl ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_992D:
	wLoc04_1055 = wLoc04_1055 | 0x0020
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9927:
	wLoc04_1055 = wLoc04_1055 & 0xFFDF
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9C46:
	selector es_1410
	word16 di_1409
	branch (wLoc04_1055 & 0x0020) != 0x0000 l0800_9C5E
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C5E:
	ptr32 es_di_1435 = Mem0[ds:wArg02:segptr32]
	di_1409 = (word16) es_di_1435 (alias)
	es_1410 = SLICE(es_di_1435, selector, 16) (alias)
	wArg02 = wArg02 + 0x0004
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C53:
	di_1409 = Mem0[ss:wArg02:word16]
	word16 sp_1429 = sp_1002 - 0x0002
	Mem1430[ss:sp_1429:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_1410 = Mem1430[ss:sp_1429:selector]
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C65:
	word16 ax_1413 = DPB(0x0050, 0x50 - bLoc16, 0)
	Mem1415[es_1410:di_1409:word16] = ax_1413
	ax = ax_1413
	branch (wLoc04_1055 & 0x0010) == 0x0000 l0800_9C7F
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C78:
	Mem1424[es_1410:di_1409 + 0x0002:word16] = 0x0000
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C7F:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AC5:
	byte Z_1336
	branch (wLoc04_1055 & 0x0020) != 0x0000 l0800_9AE2
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AE2:
	ptr32 es_di_1384 = Mem0[ds:wArg02:segptr32]
	di_1006 = (word16) es_di_1384 (alias)
	es_1007 = SLICE(es_di_1384, selector, 16) (alias)
	wArg02 = wArg02 + 0x0004
	Z_1336 = cond(es_1007 | di_1006) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AD5:
	word16 di_1367 = Mem0[ss:wArg02:word16]
	word16 sp_1370 = sp_1002 - 0x0002
	Mem1371[ss:sp_1370:word16] = ds
	wArg02 = wArg02 + 0x0002
	es_1007 = Mem1371[ss:sp_1370:selector]
	di_1006 = di_1367
	Z_1336 = cond(di_1367) (alias)
// DataOut: bp di ds es sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AED:
	branch Z_1336 l0800_9AF4
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AEF:
	word16 sp_1360 = sp_1002 - 0x0002
	Mem1361[ss:sp_1360:word16] = ds
	es_1007 = Mem1361[ss:sp_1360:selector]
	di_1006 = 0x25FE
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AF4:
	cx_1320 = fn0800_9842(di_1006, es_1007)
	branch cx_1320 <=u wLoc0C_256 l0800_9AFF
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AFC:
	cx_1320 = wLoc0C_256
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AFF:
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> Sequence es:di:<invalid> ax:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AA5:
	word16 sp_1308 = sp_1002 - 0x0002
	Mem1309[ss:sp_1308:word16] = ss
	wArg02 = wArg02 + 0x0002
	es_1007 = Mem1309[ss:sp_1308:selector]
	sp_1002 = sp_1308 + 0x0002
	di_1006 = fp - 0x0047
	cx_1320 = 0x0001
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B02:
	word16 cx_1240 = wLoc0C_256
	branch wLoc0C_256 >= 0x0000 l0800_9B15
// DataOut: bp cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B12:
	cx_1240 = 0x0006
// DataOut: bp cx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B15:
	word16 ax_1275
	word16 sp_1249 = sp_1002 - 0x0002
	Mem1250[ss:sp_1249:word16] = ss
	Mem1252[ss:sp_1249 - 0x0002:word16] = wArg02
	Mem1254[ss:sp_1249 - 0x0004:word16] = cx_1240
	Mem1256[ss:sp_1249 - 0x0006:word16] = ss
	Mem1259[ss:sp_1249 - 0x0008:word16] = fp - 0x0047
	Mem1261[ss:sp_1249 - 0x000A:word16] = ax_275
	Mem1265[ss:sp_1249 - 0x000C:word16] = wLoc04_1055 & 0x0001
	branch (wLoc04_1055 & 0x0100) == 0x0000 l0800_9B36
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B36:
	wArg02 = wArg02 + 0x0008
	ax_1275 = 0x0006
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0047 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B2D:
	ax_1275 = 0x0008
	wArg02 = wArg02 + 0x000A
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:fp - 0x0047 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B3D:
	Mem1277[ss:sp_1249 - 0x000E:word16] = ax_1275
	fn0800_A2CC()
	Mem1279[ss:sp_1249 - 0x0010:word16] = ss
	es_1007 = Mem1279[ss:sp_1249 - 0x0010:selector]
	sp_1002 = sp_1249 - 0x000E
	di_1006 = fp - 0x0047
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:0x00 dx:<invalid> bx:fp - 0x0047 bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A55:
	word16 sp_1176 = sp_1002 - 0x0002
	Mem1177[ss:sp_1176:word16] = Mem0[ss:wArg02:word16]
	word16 bx_1178 = wArg02 + 0x0001
	word16 di_1172 = fp - 0x0048
	wArg02 = bx_1178 + 0x0001
	branch (wLoc04_1055 & 0x0020) == 0x0000 l0800_9A80
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A70:
	word16 dx_1218 = Mem1177[ss:bx_1178 + 0x0001:word16]
	Mem1226[ss:sp_1176 - 0x0002:word16] = ss
	selector es_1227 = Mem1226[ss:sp_1176 - 0x0002:selector]
	word16 di_1229 = fn0800_9810(SLICE(dx_1218, byte, 8), (byte) dx_1218, fp - 0x0048, es_1227)
	Mem1232[es_1227:di_1229:byte] = 0x3A
	wArg02 = bx_1178 + 0x0003
	sp_1176 = sp_1176 + 0xFFFE
	di_1172 = di_1229 + 0x0001
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0048 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A80:
	word16 sp_1191 = sp_1176 - 0x0002
	Mem1192[ss:sp_1191:word16] = ss
	word16 dx_1196 = Mem1192[ss:sp_1191 + 0x0002:word16]
	es_1007 = Mem1192[ss:sp_1191:selector]
	word16 di_1200 = fn0800_9810(SLICE(dx_1196, byte, 8), (byte) dx_1196, di_1172, es_1007)
	Mem1202[ss:di_1200:byte] = 0x00
	sp_1002 = sp_1191 + 0x0002
	wLoc04_1055 = wLoc04_1055 & 0xFFFB
	di_1006 = fp - 0x0048
	branch wLoc0C_256 > di_1200 - (fp - 0x0048) l0800_9AA2
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AA0:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0048 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x00 -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9AA2:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0048 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x00 -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_99E0:
	bh_1024 = 0x10
	bx_1032 = DPB(bx_333 << 0x0001, dl_278 + 0xE9, 0) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99DC:
	bh_1024 = 0x0A
	bx_1032 = DPB(bx_333 << 0x0001, 0x0A, 8) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99D8:
	bh_1024 = 0x08
	bx_1032 = DPB(bx_333 << 0x0001, 0x08, 8) (alias)
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99E6:
	bLoc0D_1026 = 0x00
// DataOut: bh bp bx dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16)

l0800_99EA:
	dx_1031 = 0x0000
	bLoc08_1019 = 0x00
	ax_1030 = Mem0[ss:wArg02:word16]
// DataOut: ax bh bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8)

l0800_99FA:
	int32 dx_ax_1131 = (int32) Mem0[ss:wArg02:word16]
	bh_1024 = 0x0A
	bx_1032 = DPB(bx_333 << 0x0001, 0x0A, 8) (alias)
	bLoc08_1019 = 0x01
	ax_1030 = (word16) dx_ax_1131 (alias)
	dx_1031 = SLICE(dx_ax_1131, word16, 16) (alias)
// DataOut: ax bh bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8)

l0800_9A0A:
	word16 di_1034 = wArg02 + 0x0001
	word16 di_1035 = di_1034 + 0x0001
	branch (wLoc04_1055 & 0x0010) == 0x0000 l0800_9A1B
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0004(32)

l0800_9A16:
	dx_1031 = Mem0[ss:di_1034 + 0x0001:word16]
	di_1035 = di_1034 + 0x0003
// DataOut: ax bh bp bx di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0004(32)

l0800_9A1B:
	wArg02 = di_1035
	di_1006 = fp - 0x0047
	ax = ax_1030
	branch ax_1030 != 0x0000 l0800_9A32
// DataOut: ax bh bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A25:
	branch dx_1031 != 0x0000 l0800_9A32
// DataOut: ax bh bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(0) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A32:
	wLoc04_1055 = wLoc04_1055 | 0x0004
// DataOut: ax bh bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A29:
	branch wLoc0C_256 != 0x0000 l0800_9A36
// DataOut: ax bh bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -0008(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A36:
	word16 sp_1059 = sp_1002 - 0x0002
	Mem1060[ss:sp_1059:word16] = dx_1031
	Mem1062[ss:sp_1059 - 0x0002:word16] = ax_1030
	Mem1064[ss:sp_1059 - 0x0004:word16] = ss
	Mem1066[ss:sp_1059 - 0x0006:word16] = fp - 0x0047
	word16 ax_1068 = (int16) bh_1024
	Mem1070[ss:sp_1059 - 0x0008:word16] = ax_1068
	Mem1074[ss:sp_1059 - 0x000A:word16] = DPB(ax_1068, bLoc08_1019, 0)
	Mem1076[ss:sp_1059 - 0x000C:word16] = bx_1032
	fn0800_8D87(bArg00, bArg02, si_133, ptrArg06, wArg08, wArg0A, wArg0C)
	Mem1085[ss:sp_1059:word16] = ss
	es_1007 = Mem1085[ss:sp_1059:selector]
	sp_1002 = sp_1059 + 0x0002
	dx_1013 = wLoc0C_256
	branch wLoc0C_256 >= 0x0000 l0800_9A52
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A52:
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A4F:
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B46:
	branch (wLoc04_1055 & 0x0008) == 0x0000 l0800_9B65
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B4D:
	dx_1013 = wLoc0A_255
	branch wLoc0A_255 <= 0x0000 l0800_9B65
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B54:
	word16 cx_964 = fn0800_9842(di_1006, es_1007)
	branch Mem0[es_1007:di_1006:byte] != 0x2D l0800_9B5E
// DataOut: bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B5D:
	cx_964 = cx_964 - 0x0001
// DataOut: bp cx di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B5E:
	word16 dx_972 = dx_1013 - cx_964
	branch dx_972 <= 0x0000 l0800_9B65
// DataOut: bp di ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B62:
	wLoc10_252 = dx_972
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:0x00 si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B65:
	branch Mem0[es_1007:di_1006:byte] == 0x2D l0800_9B76
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -000D(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B6B:
	branch bLoc0D_1026 == 0x00 l0800_9B86
// DataOut: al bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B72:
	di_1006 = di_1006 - 0x0001
	Mem939[es_1007:di_1006:byte] = bLoc0D_1026
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B76:
	branch wLoc10_252 <= 0x0000 l0800_9B86
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -000C(16) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B7C:
	branch wLoc0C_256 >= 0x0000 l0800_9B86
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B83:
	wLoc10_252 = wLoc10_252 - 0x0001
// DataOut: bp di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B86:
	cx_1320 = fn0800_9842(di_1006, es_1007)
// DataOut: bp cx di ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -0007(8) Local -000A(16) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B89:
	word16 si_561 = di_1006
	word16 bx_565 = wLoc0A_255
	ax = wLoc04_1055 & 0x0005
	branch ax != 0x0005 l0800_9BAF
// DataOut: al bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9B9C:
	ax = DPB(ax, dl_278, 8) (alias)
	branch dl_278 != 0x6F l0800_9BB1
// DataOut: ah bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0007(8) Local -0010(0) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BB1:
	branch dl_278 == 0x78 l0800_9BBB
// DataOut: ah bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BB6:
	branch dl_278 != 0x58 l0800_9BCC
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BBB:
	word16 v40_861 = wLoc10_252 - 0x0002
	wLoc04_1055 = wLoc04_1055 | 0x0040
	bx_565 = wLoc0A_255 - 0x0002
	wLoc10_252 = v40_861
	branch v40_861 >= 0x0000 l0800_9BCC
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BC7:
	wLoc10_252 = 0x0000
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BA4:
	branch wLoc10_252 > 0x0000 l0800_9BAF
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BAA:
	wLoc10_252 = 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:dl dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BAF:
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BCC:
	word16 cx_584 = cx_1320 + wLoc10_252
	branch (wLoc04_1055 & 0x0002) != 0x0000 l0800_9BE2
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BD6:
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BDE:
	branch bx_565 > cx_584 l0800_9BD8
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BD8:
	word16 dx_824
	word16 bx_825
	cx_584 = fn0800_984F(0x20, fp - 0x0002, di_128, out dx_824, out bx_825, out di_128, out es_1007)
	sp_1002 = sp_1002 + 0xFFFE
	bx_565 = bx_825 - 0x0001
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BE2:
	branch (wLoc04_1055 & 0x0040) == 0x0000 l0800_9BF4
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0007(8) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BE9:
	word16 dx_795
	word16 bx_796
	word16 di_797
	selector es_798
	fn0800_984F(0x30, fp - 0x0002, di_128, out dx_795, out bx_796, out di_797, out es_798)
	word16 dx_802
	cx_584 = fn0800_984F(dl_278, fp - 0x0002, di_797, out dx_802, out bx_565, out di_128, out es_1007)
	sp_1002 = sp_1002 + 0xFFFC
// DataOut: bp bx cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0010(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BF4:
	word16 dx_614 = wLoc10_252
	branch wLoc10_252 <= 0x0000 l0800_9C22
// DataOut: bp bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9BFB:
	byte al_719 = Mem0[es_1007:di_1006:byte]
	word16 cx_713 = cx_584 - wLoc10_252
	bx_565 = bx_565 - wLoc10_252
	ax = DPB(ax, al_719, 0) (alias)
	branch al_719 == 0x2D l0800_9C0E
// DataOut: al bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C06:
	branch al_719 == 0x20 l0800_9C0E
// DataOut: al bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C0A:
	branch al_719 != 0x2B l0800_9C15
// DataOut: bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C0E:
	si_561 = di_1006 + 0x0001
	sp_1002 = sp_1002 + 0xFFFE
	word16 bx_778
	selector es_780
	cx_713 = fn0800_984F(Mem0[ds:di_1006:byte], fp - 0x0002, di_128, out dx_614, out bx_778, out di_128, out es_780) - 0x0001
	bx_565 = bx_778 - 0x0001
// DataOut: bp bx cx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C15:
	word16 dx_741 = cx_713
	branch dx_614 == 0x0000 l0800_9C20
// DataOut: bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C19:
	sp_1002 = sp_1002 + 0xFFFE
	word16 di_1450 = di_128
	selector es_767
	branch fn0800_984F(0x30, fp - 0x0002, di_1450, out dx_741, out bx_565, out di_128, out es_767) != 0x0001 l0800_9C19
// DataOut: bp bx di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C20:
	cx_584 = dx_741
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C22:
	branch cx_584 == 0x0000 l0800_9C36
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C24:
	bx_565 = bx_565 - cx_584
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C26:
	Mem692[ss:di_128:byte] = Mem0[ds:si_561:byte]
	byte v45_695 = bLoc16 - 0x01
	si_561 = si_561 + 0x0001
	di_128 = di_128 + 0x0001
	bLoc16 = v45_695
	branch v45_695 > 0x00 l0800_9C34
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C31:
	word16 dx_706
	selector es_709
	cx_584 = fn0800_9858(fp - 0x0002, di_128, out dx_706, out bx_565, out di_128, out es_709)
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C34:
	cx_584 = cx_584 - 0x0001
	branch cx_584 != 0x0000 l0800_9C26
// DataOut: bp bx cx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C36:
	branch bx_565 <= 0x0000 l0800_9C43
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C3A:
// DataOut: bp di ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C3C:
	sp_1002 = sp_1002 + 0xFFFE
	word16 di_1449 = di_128
	word16 dx_669
	word16 bx_670
	selector es_672
	branch fn0800_984F(0x20, fp - 0x0002, di_1449, out dx_669, out bx_670, out di_128, out es_672) != 0x0001 l0800_9C3C
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9C43:
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> ch:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9A2F:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:fp - 0x0047 Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> bh:<invalid> ax:<invalid> Sequence dx:ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Local -0016(8) Stack +0002(16) Stack +0004(32)

l0800_9935:
	branch ch_249 >u 0x00 l0800_9987
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(0) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_993A:
	branch (wLoc04_1055 & 0x0002) != 0x0000 l0800_996A
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9941:
	wLoc04_1055 = wLoc04_1055 | 0x0008
	ch_249 = 0x01
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99CC:
	wLoc04_1055 = wLoc04_1055 | 0x0100
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99D1:
	wLoc04_1055 = wLoc04_1055 & 0xFFEF
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99C5:
	wLoc04_1055 = wLoc04_1055 | 0x0010
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9931:
	ch_249 = 0x05
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9987:
	word16 ax_463 = (int16) ((byte) ax_275 - 0x30)
	branch ch_249 >u 0x02 l0800_99A9
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99A9:
	branch ch_249 != 0x04 l0800_9949
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99AE:
	wLoc0C_256 = ax_463
	ax_275 = wLoc0C_256
	branch wLoc0C_256 == 0x0000 l0800_996A
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_99B5:
	word16 ax_501 = wLoc0C_256 << 0x0001
	ax_275 = ax_501 * 0x0005
	wLoc0C_256 = ax_463 + ax_501 * 0x0005
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9990:
	ch_249 = 0x02
	wLoc0A_255 = ax_463
	ax_275 = wLoc0A_255
	branch wLoc0A_255 < 0x0000 l0800_996A
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9999:
	word16 ax_481 = wLoc0A_255 << 0x0001
	ax_275 = ax_481 * 0x0005
	wLoc0A_255 = ax_463 + ax_481 * 0x0005
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:0x02 es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_997A:
	branch ch_249 >=u 0x04 l0800_9949
// DataOut: bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_997F:
	ch_249 = 0x04
	wLoc0C_256 = wLoc0C_256 + 0x0001
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_990C:
	branch ch_249 >u 0x00 l0800_98FE
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9911:
	wLoc04_1055 = wLoc04_1055 | 0x0002
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_994C:
	ax_275 = Mem0[ss:wArg02:word16]
	wArg02 = wArg02 + 0x0002
	branch ch_249 >=u 0x02 l0800_996D
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_996D:
	branch ch_249 != 0x04 l0800_9949
// DataOut: ax bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9949:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_9972:
	wLoc0C_256 = ax_275
	ch_249 = ch_249 + 0x01
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_995B:
	branch ax_275 >= 0x0000 l0800_9965
// DataOut: ax bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_995F:
	ax_275 = -ax_275
	wLoc04_1055 = wLoc04_1055 | 0x0002
// DataOut: ax bp cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9965:
	wLoc0A_255 = ax_275
	ch_249 = 0x03
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_996A:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> ch:<invalid> es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9901:
	branch ch_249 >u 0x00 l0800_98FE
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9906:
	wLoc04_1055 = wLoc04_1055 | 0x0001
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9917:
	branch ch_249 >u 0x00 l0800_98FE
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98FE:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_991C:
	branch bLoc0D_1026 == 0x2B l0800_9925
// DataOut: bp ch cl dl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9922:
	bLoc0D_1026 = dl_278
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_9925:
// DataOut: bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98DB:
	ax = DPB(ax_275, Mem0[ds:si_133:byte], 0) (alias)
	si_133 = si_133 + 0x0001
// DataOut: al bp ch cl ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> es:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16) Local -000A(16) Local -000C(16) Local -000D(0) Local -0010(0) Local -0012(16) Local -0016(0) Stack +0002(16)

l0800_98F4:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Local -0016(0)

l0800_9C82:
	word16 si_298 = si_133
	byte al_304 = 0x25
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> ax:<invalid> es:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0016(0)

l0800_9C8D:
	word16 dx_313
	word16 bx_314
	selector es_316
	fn0800_984F(al_304, fp - 0x0002, di_128, out dx_313, out bx_314, out di_128, out es_316)
	byte al_319 = Mem0[ds:si_298:byte]
	sp_1002 = sp_1002 + 0xFFFE
	si_298 = si_298 + 0x0001
	al_304 = al_319
	branch al_319 != 0x00 l0800_9C8D
// DataOut: al bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> cx:<invalid> ah:<invalid> dx:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ax:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0016(0)

l0800_9C96:
	branch bLoc16 >= 0x50 l0800_9C9F
// DataOut: bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9C9C:
	word16 dx_212
	word16 bx_213
	word16 di_214
	selector es_215
	fn0800_9858(fp - 0x0002, di_128, out dx_212, out bx_213, out di_214, out es_215)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9C9F:
	word16 sp_197 = sp_1002 + 0x0002
	branch 0x0000 == 0x0000 l0800_9CAB
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9CAB:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9CA6:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_9CAE:
	word16 di_201
	*diOut = Mem0[ss:sp_197:word16]
	return Mem0[ss:sp_197 + 0x0002:word16]
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_9828_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_98A5:
	Mem227[ss:di_128:byte] = al_151
	byte v16_230 = bLoc16 - 0x01
	di_128 = di_128 + 0x0001
	bLoc16 = v16_230
	branch v16_230 > 0x00 l0800_989B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)

l0800_98AE:
	word16 dx_233
	word16 bx_234
	selector es_236
	fn0800_9858(fp - 0x0002, di_128, out dx_233, out bx_234, out di_128, out es_236)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> Sequence es:si:<invalid> al:<invalid> si:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> Sequence es:di:<invalid> bh:<invalid> Sequence dx:ax:<invalid> ch:<invalid> -174(fp):<invalid> -172(fp):<invalid> -170(fp):<invalid> -168(fp):<invalid> -166(fp):<invalid> -164(fp):<invalid> -162(fp):<invalid> -160(fp):<invalid> -158(fp):es -156(fp):di -154(fp):si -152(fp):<invalid> -73(fp):cl -71(fp):<invalid> -24(fp):0x0000 -22(fp):<invalid> -20(fp):0x0000 -18(fp):<invalid> -16(fp):<invalid> -13(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -7(fp):dl -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Local -0016(8) Stack +0002(16)



word16 fn0800_9842(word16 di, selector es)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di es
// LiveOut: cx
// Trashed: SCZO al ax ch cl cx eax ecx rax rcx
// Preserved: di sp
fn0800_9842_entry:
// DataOut: bp di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9842:
	word16 cx_13 = 0xFFFF
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9848:
	branch cx_13 == 0x0000 l0800_984A
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_9848_1:
	di = di_29 + 0x0001
	cx_13 = cx_13 - 0x0001
	word16 di_29 = di
	branch 0x00 == Mem0[es:di_29:byte] l0800_9848
// DataOut: bp cx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

l0800_984A:
	return ~cx_13 - 0x0001
// DataOut: bp cx ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 cx:<invalid> al:0x00 di:<invalid> -2(fp):di

fn0800_9842_exit:
// DataOut: cx
// DataOut (flags): 
// SymbolicIn: sp:fp cx:<invalid> al:0x00 di:di -2(fp):di



word16 fn0800_984F(byte al, word16 bp, word16 di, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp di ss
// LiveOut: bx cx di dx es
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved: sp
fn0800_984F_entry:
	*dxOut = dx
	*bxOut = bx
	*esOut = es
// DataOut: al bp bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_984F:
	Mem3[ss:di:byte] = al
	byte v8_8 = Mem3[ss:bp - 0x0014:byte] - 0x01
	Mem9[ss:bp - 0x0014:byte] = v8_8
	word16 di_6
	*diOut = di + 0x0001
	branch v8_8 != 0x00 l0800_988B_in_fn0800_984F
// DataOut: bp bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9856_thunk_fn0800_9858:
	word16 dx_30
	word16 bx_31
	word16 di_32
	selector es_33
	return fn0800_9858(bp, di + 0x0001, out dx_30, out bx_31, out di_32, out es_33)
// DataOut: bp bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_988B_in_fn0800_984F:
	return cx
// DataOut: bp bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

l0800_9856_thunk_fn0800_9858:
	word16 dx_21
	word16 bx_22
	word16 di_23
	selector es_24
	return fn0800_9858(bp, di + 0x0001, out dx_21, out bx_22, out di_23, out es_24)
// DataOut: bp bx cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp di:di + 0x0001

fn0800_984F_exit:
// DataOut: bx cx di dx es
// DataOut (flags): 
// SymbolicIn: sp:<invalid> di:<invalid> ax:<invalid> es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid>



word16 fn0800_9858(word16 bp, word16 di, ptr16 & dxOut, ptr16 & bxOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ss
// LiveOut: bx cx di dx es sp
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esp rax rbx rcx rdi rdx rsp sp spl
// Preserved:
fn0800_9858_entry:
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9858:
	word16 sp_35
	word16 bx_36
	selector ss_37
	word16 cx_38
	word16 dx_39
	selector es_40
	word16 bp_41
	word16 ax_42
	word16 di_43
	byte SCZO_44
	selector cs_45
	byte SZO_46
	byte C_47
	byte Z_48
	call SEQ(cs, Mem0[ss:bp + 0x000E:word16]) (retsize: 2; depth: 20)
		uses: ax_22,bp,bx,cs,cx,di_17,dx,es,SCZO_18,sp_32,ss,wLoc02_4,wLoc04_7,wLoc06_10,wLoc08_13,wLoc0A_21,wLoc0C_24,wLoc0E_26,wLoc10_30,wLoc12_33
		defs: ax_42,bp_41,bx_36,C_47,cs_45,cx_38,di_43,dx_39,es_40,SCZO_44,sp_35,ss_37,SZO_46,Z_48
	branch ax_42 != 0x0000 l0800_987B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9876:
	Mem70[ss_37:bp_41 - 0x0016:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_987B:
	Mem53[ss_37:bp_41 - 0x0014:word16] = 0x0050
	Mem55[ss_37:bp_41 - 0x0012:word16] = Mem53[ss_37:bp_41 - 0x0012:word16] + di_43
	word16 di_57
	*diOut = bp_41 - 0x0096
	selector es_58
	*esOut = Mem55[ss_37:sp_35:selector]
	word16 dx_60
	*dxOut = Mem55[ss_37:sp_35 + 0x0002:word16]
	word16 cx_62 = Mem55[ss_37:sp_35 + 0x0004:word16]
	word16 bx_64
	*bxOut = Mem55[ss_37:sp_35 + 0x0006:word16]
// DataOut: bp bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:di - (bp - 0x0096) -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

l0800_988B:
	return cx_62
// DataOut: bp bx cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0096 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx

fn0800_9858_exit:
// DataOut: bx cx di dx es sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> di:bp - 0x0096 es:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):di - (bp - 0x0096) -12(fp):bp - 0x0096 -10(fp):ss -8(fp):es -6(fp):dx -4(fp):cx -2(fp):bx



word16 fn0800_9CE6(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax ds dx
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_9CE6_entry:
	*dsOut = ds
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_9CE6:
	word16 ax_19 = fn0800_BFC7(DPB(ptrLoc08, wArg06, 0), wArg08)
	fn0800_B03B(DPB(ptrLoc0E, wArg02, 0), wArg04, DPB(ptrLoc0A, wArg06, 0), ax_19 + 0x0001)
	word16 dx_48
	*dxOut = wArg04
	return wArg02 + ax_19
// DataOut: ax ds dx sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9CE6_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> si:si ax:<invalid> dx:<invalid> es:<invalid> di:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_9D41(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9D41_entry:
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D41:
	word16 wLoc02_11
	selector ds_10
	branch dx == Mem0[0x0800:0x9D35:word16] l0800_9D7F
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D48:
	selector ds_43 = Mem0[dx:0x0002:selector]
	branch Mem0[ds_43:0x0002:word16] == 0x0000 l0800_9D5C
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9D5C:
	branch ds_43 == Mem0[0x0800:0x9D35:word16] l0800_9D7A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D7A:
	dx = Mem0[0x0800:0x9D35:word16]
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(16)

l0800_9D7F:
	Mem39[0x0800:0x9D35:word16] = 0x0000
	Mem40[0x0800:0x9D37:word16] = 0x0000
	Mem41[0x0800:0x9D39:word16] = 0x0000
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(16)

l0800_9D65:
	Mem51[0x0800:0x9D37:word16] = Mem0[ds_43:0x0008:word16]
	fn0800_9E15(ds_43)
	wLoc02_11 = ds_43
	ds_10 = Mem51[0x0800:0x9D3B:selector]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid>
// LocalsOut: fp(16) Local -0002(0) Local -0004(0)

l0800_9D55:
	Mem46[0x0800:0x9D37:word16] = ds_43
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid>
// LocalsOut: fp(16)

l0800_9D94:
	ds_10 = Mem0[0x0800:0x9D3B:selector]
	wLoc02_11 = dx
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid>
// LocalsOut: fp(16) Local -0002(0) Local -0004(0)

l0800_9D9D:
	return fn0800_A1D6(ds_10, 0x0000, wLoc02_11)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> dx:<invalid> -4(fp):<invalid> -2(fp):<invalid>

fn0800_9D41_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -4(fp):<invalid> -2(fp):<invalid>



byte fn0800_9DA4(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut: dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9DA4_entry:
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9DA4:
	selector es_7 = Mem0[dx:0x0002:selector]
	Mem8[dx:0x0002:word16] = 0x0000
	Mem9[dx:0x0008:word16] = es_7
	word16 wLoc02_12 = dx
	branch dx == Mem9[0x0800:0x9D35:word16] l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9DBC:
	branch Mem9[es_7:0x0002:word16] != 0x0000 l0800_9DEA
// DataOut: dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: fp(16) Local -0002(16)

l0800_9DEA:
	fn0800_9E3E(dx)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DC4:
	word16 ax_44 = Mem9[dx:0x0000:word16]
	Mem50[es_7:0x0000:word16] = Mem9[es_7:0x0000:word16] + ax_44
	word16 dx_52 = dx + ax_44
	wLoc02_12 = es_7
	dl = (byte) dx_52 (alias)
	branch Mem50[dx_52:0x0002:word16] != 0x0000 l0800_9DE3
// DataOut: cx dl es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> -2(fp):dx
// LocalsOut: Local -0002(16)

l0800_9DE3:
	Mem58[dx_52:0x0002:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DDC:
	Mem57[dx_52:0x0008:word16] = es_7
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:dx cx:<invalid> dx:<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_9DED:
	word16 ax_20 = wLoc02_12 + Mem9[wLoc02_12:0x0000:word16]
	branch Mem9[ax_20:0x0002:word16] == 0x0000 l0800_9DFF
// DataOut: dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:dx es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFF:
	Mem30[wLoc02_12:0x0000:word16] = Mem9[wLoc02_12:0x0000:word16] + Mem9[ax_20:0x0000:word16]
	Mem36[ax_20 + Mem30[ax_20:0x0000:word16]:0x0002:word16] = wLoc02_12
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9E11_thunk_fn0800_9E15:
	fn0800_9E15(ax_20)
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

l0800_9DFE:
	return dl
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>

fn0800_9DA4_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> es:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> -2(fp):<invalid>



void fn0800_9E15(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO bh bl bx ebx es rbx
// Preserved: ds sp
fn0800_9E15_entry:
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E15:
	branch ds == Mem0[ds:0x0006:word16] l0800_9E36
// DataOut: dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9E36:
	Mem15[0x0800:0x9D39:word16] = 0x0000
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

l0800_9E1D:
	selector es_9 = Mem0[ds:0x0006:selector]
	selector ds_10 = Mem0[ds:0x0004:selector]
	Mem11[ds_10:0x0006:word16] = es_9
	Mem12[es_9:0x0004:word16] = ds_10
	Mem13[0x0800:0x9D39:word16] = ds_10
	return
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds

fn0800_9E15_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ds es:<invalid> ds:ds



void fn0800_9E3E(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx eax ebx es rax rbx
// Preserved: sp ss
fn0800_9E3E_entry:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E3E:
	word16 ax_3 = Mem0[0x0800:0x9D39:word16]
	branch ax_3 == 0x0000 l0800_9E67
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E67:
	Mem29[0x0800:0x9D39:word16] = ds
	Mem30[ds:0x0004:word16] = ds
	Mem31[ds:0x0006:word16] = ds
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

l0800_9E46:
	__cli()
	selector es_20 = Mem0[ax_3:0x0006:selector]
	Mem22[ax_3:0x0006:word16] = ds
	Mem23[ds:0x0004:word16] = ax_3
	Mem27[es_20:0x0004:word16] = ds
	Mem28[ds:0x0006:word16] = es_20
	return
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid>

fn0800_9E3E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> bx:ss ss:ss es:<invalid> -2(fp):<invalid>



byte fn0800_9E75(selector ds, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0004(16)
fn0800_9E75_entry:
// DataOut: ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_9E75:
	Mem13[0x0800:0x9D3B:word16] = ds
	byte dl_17 = (byte) wArg04
	branch wArg04 == 0x0000 l0800_9E95
// DataOut: dl dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E86:
	branch wArg04 != Mem13[0x0800:0x9D37:word16] l0800_9E92
// DataOut: dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E92:
	dl_17 = fn0800_9DA4(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E8D:
	dl_17 = fn0800_9D41(wArg04)
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_9E95:
	selector ds_26
	*dsOut = Mem13[0x0800:0x9D3B:selector]
	return dl_17
// DataOut: dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:<invalid> ds:<invalid> ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_9E75_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ds:<invalid> di:di si:si ax:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -6(fp):di -4(fp):si -2(fp):bp



word16 fn0800_9E9E(word16 ax, word16 bp, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ss
// LiveOut: ax bx dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9E9E_entry:
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9E9E:
	word16 dx_15
	word16 ax_16 = fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0000, 0x0000, out dx_15)
	branch (ax_16 & 0x000F) == 0x0000 l0800_9EC7
// DataOut: ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16)

l0800_9EB3:
	word16 dx_86
	fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], 0x0010 - (ax_16 & 0x000F), 0x0000, out dx_86)
// DataOut: bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):0x0000 -4(fp):0x0000 -2(fp):ax
// LocalsOut: fp(16) Local -0002(16)

l0800_9EC7:
	word16 bx_47
	*bxOut = ax
	word16 dx_43
	branch fn0800_A215(bp, Mem0[0x0800:0x9D3B:selector], ax << 0x04, (word16) SLICE(ax, byte, 8) >>u 0x04, out dx_43) == 0xFFFF l0800_9EFE
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 ds:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9EFE:
	word16 dx_74
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9EE6:
	Mem61[0x0800:0x9D35:word16] = dx_43
	Mem62[0x0800:0x9D37:word16] = dx_43
	Mem64[dx_43:0x0000:word16] = ax
	Mem65[dx_43:0x0002:word16] = dx_43
	return 0x0004
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

fn0800_9E9E_exit:
// DataOut: ax bx dx
// DataOut (flags): 
// SymbolicIn: sp:fp ds:<invalid> ax:<invalid> dx:<invalid> bx:ax bl:<invalid> cl:<invalid> Sequence dx:ax:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F02(word16 ax, word16 bp, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah ax bp ss
// LiveOut: ax bx dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: sp
fn0800_9F02_entry:
// DataOut: ah ax bp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16)

l0800_9F02:
	selector ds_14 = Mem0[0x0800:0x9D3B:selector]
	word16 dx_117
	word16 ax_21 = fn0800_A215(bp, ds_14, ax << 0x04, (word16) ah >>u 0x04, out dx_117)
	branch ax_21 == 0xFFFF l0800_9F58
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_9F20:
	branch (ax_21 & 0x000F) != 0x0000 l0800_9F3D
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax
// LocalsOut: fp(16)

l0800_9F3D:
	word16 dx_106
	branch fn0800_A215(bp, ds_14, -(ax_21 & 0x000F) + 0x0010, 0x0000, out dx_106) == 0xFFFF l0800_9F58
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):ax << 0x08 -4(fp):<invalid> -2(fp):ax

l0800_9F58:
	word16 dx_65
	*dxOut = 0x0000
	return 0x0000
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

l0800_9F55:
	*dxOut = dx_117 + 0x0001
// DataOut: bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):ax

l0800_9F25:
	word16 cx_85 = Mem0[0x0800:0x9D37:word16]
	Mem86[0x0800:0x9D37:word16] = dx_117
	Mem88[dx_117:0x0000:word16] = ax
	Mem89[dx_117:0x0002:word16] = cx_85
	return 0x0004
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> cx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax

fn0800_9F02_exit:
// DataOut: ax bx dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:ax bl:<invalid> cl:<invalid> ax:<invalid> ds:<invalid> Sequence dx:ax:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):ax



word16 fn0800_9F5C(word16 ax, word16 dx, selector ds, ptr16 & dxOut, ptr16 & bxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax ds dx
// LiveOut: ax bx dx
// Trashed: SCZO ah al ax bh bl bx dh dl ds dx eax ebx edx rax rbx rdx
// Preserved: sp
fn0800_9F5C_entry:
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9F5C:
	Mem8[ds:0x0000:word16] = Mem0[ds:0x0000:word16] - ax
	word16 dx_9 = dx + Mem8[ds:0x0000:word16]
	*dxOut = dx_9
	Mem11[dx_9:0x0000:word16] = ax
	Mem12[dx_9:0x0002:word16] = dx
	word16 bx_14 = dx_9 + Mem12[dx_9:0x0000:word16]
	*bxOut = bx_14
	Mem17[bx_14:0x0002:word16] = dx_9
	return 0x0004
// DataOut: ax bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_9F5C_exit:
// DataOut: ax bx dx
// DataOut (flags): 
// SymbolicIn: sp:fp bx:<invalid> dx:<invalid> ds:<invalid> ax:0x0004



word16 fn0800_9F7F(word16 bp, selector ds, word16 wArg02, ptr16 & dxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp di ds dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16)
fn0800_9F7F_entry:
	*siOut = si
	*diOut = di
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_9F7F:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F87_thunk_fn0800_9F92:
	word16 dx_12
	word16 bx_13
	word16 bp_14
	selector ds_15
	return fn0800_9F92(wArg02, 0x0000, fp - 0x0002, ds, bp, out dx_12, out bx_13, out bp_14, out ds_15)
// DataOut: ax bp di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:0x0000 ax:<invalid> -2(fp):bp

fn0800_9F7F_exit:
// DataOut: ax bp di ds dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F89(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax bp bx ds dx si sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_9F89_entry:
	*siOut = si
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_9F89:
// DataOut: ax bp ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_9F8F_thunk_fn0800_9F92:
	word16 dx_14
	word16 bx_15
	word16 bp_16
	selector ds_17
	return fn0800_9F92(wArg02, wArg04, fp - 0x0002, ds, bp, out dx_14, out bx_15, out bp_16, out ds_17)
// DataOut: ax bp bx ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> -2(fp):bp

fn0800_9F89_exit:
// DataOut: ax bp bx ds dx si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -2(fp):bp



word16 fn0800_9F92(word16 ax, word16 dx, word16 bp, selector ds, word16 wArg00, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp ds dx ss
// LiveOut: ax bp bx ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: di si
// Stack args: Stack +0000(16)
l0800_9F92:
	cx = ax
	cx = cx | dx
	SZO = cond(cx)
	Z = SZO (alias)
	C = false
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = si
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = di
	Mem0[0x0800:0x9D3B:word16] = ds
	branch Test(EQ,Z) l0800_9FFD
// DataOut: ax bp dx ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bx, out bp, out ds)
	return ax
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

l0800_9F9D_thunk_fn0800_9F9F:
	ax = fn0800_9F9F(ax, dx, bp, out dx, out bx, out bp, out ds)
	return ax
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn:

fn0800_9F92_entry:
	def fp
	def ax
	def dx
	def si
	def di
	def ds
	def dxOut
	def bxOut
	def bpOut
	def dsOut
	def bp
	def wArg00
	def bx
// DataOut: ax bp bx ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9F92:
	sp_1 = fp
	cx_3 = ax
	cx_5 = cx_3 | dx
	SZO_6 = cond(cx_5)
	Z_7 = SZO_6 (alias)
	C_8 = false
	sp_9 = fp - 0x0002
	wLoc02_11 = si
	sp_12 = fp - 0x0004
	wLoc04_14 = di
	Mem16[0x0800:0x9D3B:word16] = ds
	branch cx_5 == 0x0000 l0800_9FFD_in_fn0800_9F92
// DataOut: ax bp bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l0800_9F9D_thunk_fn0800_9F9F:
	ax_48 = fn0800_9F9F(ax, dx, bp, out dx_44, out bx_45, out bp_46, out ds_47)
	return ax_48
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si

l0800_9FFD_in_fn0800_9F92:
	ds_35 = Mem16[0x0800:0x9D3B:selector]
	di_36 = wLoc04_14
	sp_37 = fp - 0x0002
	si_38 = wLoc02_11
	sp_39 = fp
	bp_41 = wArg00
	sp_42 = fp + 0x0002
	return ax
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si

l0800_9F9D_thunk_fn0800_9F9F:
	ax_34 = fn0800_9F9F(ax, dx, bp, out dx_30, out bx_31, out bp_32, out ds_33)
	return ax_34
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 cx:ax | dx -4(fp):di -2(fp):si

fn0800_9F92_exit:
	di_17 = PHI(di_36, di, di, di, di)
	si_18 = PHI(si_38, si, si, si, si)
	sp_19 = PHI(sp_42, sp_12, sp_12, sp, sp)
	dx_20 = PHI(dx, dx_30, dx_44, dx, dx)
	bx_21 = PHI(bx, bx_31, bx_45, bx, bx)
	bp_22 = PHI(bp_41, bp_32, bp_46, bp, bp)
	ds_23 = PHI(ds_35, ds_33, ds_47, ds, ds)
	ax_24 = PHI(ax, ax_34, ax_48, ax, ax)
	use dx_20 (=> dxOut)
	use bx_21 (=> bxOut)
	use bp_22 (=> bpOut)
	use ds_23 (=> dsOut)
// DataOut: ax bp bx ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -4(fp):di -2(fp):si



word16 fn0800_9F9F(word16 ax, word16 dx, word16 bp, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bp dx ss
// LiveOut: ax bp bx ds dx sp
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn0800_9F9F_entry:
	*bxOut = bx
// DataOut: ax bp bx dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l0800_9F9F:
	word16 ax_106
	int32 dx_ax_5 = SEQ(dx, ax + 0x0013)
	word16 ax_8 = (word16) (dx_ax_5 + 0x00000013)
	word16 dx_9 = SLICE(dx_ax_5 + 0x00000013, word16, 16)
	branch dx_ax_5 <u 0x00000013 l0800_9FE8
// DataOut: ax bp bx dl dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_9FA7:
	branch (dx_9 & 0xFFF0) != 0x0000 l0800_9FE8
// DataOut: ax bp bx dl sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FE8:
	ax_106 = 0x0000 (alias)
	word16 dx_46
	*dxOut = 0x0000
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FAD:
	word16 ax_61 = DPB(ax_8 >>u 0x04, SLICE(ax_8 >>u 0x04, byte, 8) | (byte) (dx_9 << 0x04), 8)
	branch Mem0[0x0800:0x9D35:word16] == 0x0000 l0800_9FDE
// DataOut: ah ax bp sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax + 0x0013 dx:<invalid>

l0800_9FDE:
	word16 dx_114
	word16 bx_115
	ax_106 = fn0800_9E9E(ax_61, bp, out dx_114, out bx_115)
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FBE:
	word16 dx_68 = Mem0[0x0800:0x9D39:word16]
	word16 dx_69
	*dxOut = dx_68
	branch dx_68 == 0x0000 l0800_9FD9
// DataOut: ah ax bp dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC7:
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl

l0800_9FC9:
	branch Mem0[dx_69:0x0000:word16] >=u ax_61 l0800_9FED
// DataOut: ah ax bp bx ds dx sp ss
// DataOut (flags): CZ
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FED:
	branch Mem0[dx_69:0x0000:word16] >u ax_61 l0800_9FE3
// DataOut: ax ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FE3:
	word16 dx_109
	word16 bx_110
	ax_106 = fn0800_9F5C(ax_61, dx_69, dx_69, out dx_109, out bx_110)
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FEF:
	fn0800_9E15(dx_69)
	word16 bx_104 = Mem0[dx_69:0x0008:word16]
	*bxOut = bx_104
	Mem105[dx_69:0x0002:word16] = bx_104
	ax_106 = 0x0004
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD1:
	dx_69 = Mem0[dx_69:0x0006:word16]
	*dxOut = dx_69
	branch dx_69 != dx_68 l0800_9FC9
// DataOut: ah ax bp bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FD9:
	word16 dx_84
	word16 bx_85
	ax_106 = fn0800_9F02(ax_61, bp, out dx_84, out bx_85)
// DataOut: ax bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> cl:0x04 ah:ah | dl bx:<invalid> ds:<invalid>

l0800_9FFD:
	selector ds_28
	*dsOut = Mem0[0x0800:0x9D3B:selector]
	word16 bp_34
	*bpOut = Mem0[ss:v3 + 0x0004:word16]
	return ax_106
// DataOut: ax bp bx ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> cl:<invalid> ah:<invalid> ds:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>

fn0800_9F9F_exit:
// DataOut: ax bp bx ds dx sp
// DataOut (flags): 
// SymbolicIn: sp:v3 + 0x0006 ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> ds:<invalid> di:<invalid> si:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> cx:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid>



void fn0800_A006(word16 bx, word16 bp, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp bx ds ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bx dx sp
fn0800_A006_entry:
// DataOut: bp bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A006:
	word16 dx_14
	word16 bx_15
	word16 bp_16
	word16 si_17
	selector ds_18
	fn0800_9F89(bp, ds, Mem0[0x0800:0x9D3F:word16], Mem0[0x0800:0x9D3D:word16], out dx_14, out bx_15, out bp_16, out si_17, out ds_18)
	branch dx_14 != 0x0000 l0800_A01F
// DataOut: bx dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_A01F:
	selector ds_51 = Mem0[ss:fp - 0x0002:selector]
	Mem55[ss:fp - 0x0002:word16] = dx_14
	Mem57[ss:fp - 0x0004:word16] = ds_51
	Mem59[ss:fp - 0x0006:word16] = bx_15
	word16 dx_60 = Mem59[ds_51:0x0000:word16]
	word16 di_65 = 0x0004
	word16 si_66 = 0x0004
	word16 cx_67 = 0x0006
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx
// LocalsOut: Local -0002(16)

l0800_A033:
	branch cx_67 == 0x0000 l0800_A035
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A035:
	word16 dx_104 = dx_60 - 0x0001
	branch dx_60 == 0x0001 l0800_A070
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A039:
	selector es_105 = dx_14 + 0x0001
	selector ds_102 = ds_51 + 0x0001
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A043:
	word16 di_108 = 0x0000
	word16 si_109 = 0x0000
	word16 cx_110 = dx_104
	branch dx_104 <=u 0x1000 l0800_A052
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A04F:
	cx_110 = 0x1000
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A052:
	word16 cx_116 = cx_110 << 0x0003
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A058:
	branch cx_116 == 0x0000 l0800_A05A
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A05A:
	dx_104 = dx_104 - 0x1000
	branch dx_104 <=u 0x0000 l0800_A070
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A070:
	selector ds_89
	fn0800_9E75(Mem59[0x0800:0x9D3B:selector], wArg02, out ds_89)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>

l0800_A060:
	es_105 = es_105 + 0x1000
	ds_102 = ds_102 + 0x1000
// DataOut: ds dx es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A058_1:
	Mem122[es_105:di_108:word16] = Mem59[ds_102:si_109:word16]
	si_109 = si_109 + 0x0002
	di_108 = di_108 + 0x0002
	cx_116 = cx_116 - 0x0001
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ax:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A033_1:
	Mem72[dx_14:di_65:word16] = Mem59[ds_51:si_66:word16]
	si_66 = si_66 + 0x0002
	di_65 = di_65 + 0x0002
	cx_67 = cx_67 - 0x0001
// DataOut: cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> bp:<invalid> ax:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_A01D:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> bp:<invalid> ax:<invalid> cx:<invalid> ds:<invalid> di:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> bl:<invalid> es:<invalid> ch:<invalid> al:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bx

fn0800_A006_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> bx:<invalid> bp:<invalid> ax:<invalid> ds:<invalid> es:<invalid> di:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):<invalid>



void fn0800_A080(word16 ax, word16 cx, word16 bx, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx ds
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: sp
fn0800_A080_entry:
// DataOut: ax bx cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(0)

l0800_A080:
	branch bx == Mem0[0x0800:0x9D37:word16] l0800_A0CB
// DataOut: ax bx cx ds
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(0)

l0800_A0CB:
	Mem58[bx:0x0000:word16] = ax
	fn0800_A1D6(ds, 0x0000, bx + ax)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A087:
	word16 di_24 = bx + ax
	Mem29[di_24:0x0000:word16] = cx - ax
	Mem30[di_24:0x0002:word16] = bx
	Mem36[bx:0x0000:word16] = ax
	word16 dx_38 = bx + cx
	branch Mem36[dx_38:0x0002:word16] == 0x0000 l0800_A0B8
// DataOut: di ds es
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Local -0006(0)

l0800_A0B8:
	Mem54[dx_38:0x0008:word16] = di_24
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Local -0006(0)

l0800_A0B1:
	Mem53[dx_38:0x0002:word16] = di_24
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax
// LocalsOut: fp(16) Local -0002(0) Local -0004(0) Local -0006(0)

l0800_A0BD:
	selector ds_44
	fn0800_9E75(ds, di_24, out ds_44)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 di:bx + ax es:bx + cx si:cx - ax dx:bx + cx -4(fp):ax -2(fp):bx + ax

fn0800_A080_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp es:<invalid> bx:<invalid> ax:0x0004 dx:bx di:bx + ax si:bx ds:<invalid> cx:<invalid> ch:<invalid> cl:<invalid> al:0x04 ah:0x00 bl:<invalid> -6(fp):0x0000 -4(fp):<invalid> -2(fp):<invalid>



word16 fn0800_A162(selector ds, word16 wArg02, word16 wArg04, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A162_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A162:
	word16 ax_35
	word16 si_17 = wArg04 + 0x0001 - Mem0[ds:0x007B:word16] + 0x003F >>u 0x06
	branch si_17 != Mem0[ds:0x2698:word16] l0800_A18D
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A18D:
	word16 ax_66 = (si_17 << 0x06) + Mem0[ds:0x007B:word16]
	word16 si_62 = si_17 << 0x06
	word16 dx_63 = Mem0[ds:0x0091:word16]
	byte al_67 = (byte) ax_66
	branch ax_66 <=u dx_63 l0800_A1A5
// DataOut: al ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A19F:
	si_62 = dx_63 - Mem0[ds:0x007B:word16]
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1A5:
	word16 ax_76 = fn0800_A401(al_67, ds, Mem0[ds:0x007B:word16], si_62)
	byte dl_82
	*dlOut = (byte) ax_76
	branch ax_76 != 0xFFFF l0800_A1C1
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1C1:
	Mem92[ds:0x0091:word16] = Mem0[ds:0x007B:word16] + ax_76
	Mem93[ds:0x008F:word16] = 0x0000
	ax_35 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1B6:
	Mem89[ds:0x2698:word16] = si_62 >>u 0x06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A17B:
	Mem55[ds:0x008D:word16] = wArg04
	Mem56[ds:0x008B:word16] = wArg02
	byte dl_54
	*dlOut = (byte) wArg02
	ax_35 = 0x0001
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:0x06 dx:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A1D1:
	return ax_35
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A162_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cl:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> bx:<invalid> es:<invalid> al:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



byte fn0800_A1D6(selector ds, word16 wArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A1D6_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1D6:
	byte dl_15
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0089:word16], wArg04, Mem0[ds:0x0087:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1EC:
	branch fn0800_8F2F(wArg02, Mem0[ds:0x0091:word16], wArg04, Mem0[ds:0x008F:word16], out dl_15) l0800_A20C
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A1FF:
	branch fn0800_A162(ds, wArg02, wArg04, out dl_15) != 0x0000 l0800_A211
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -2(fp):bp

l0800_A211:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A20C:
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A213:
	return dl_15
// DataOut: dl ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A1D6_exit:
// DataOut: dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A215(word16 bp, selector ds, word16 wArg02, word16 wArg04, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A215_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A215:
	word16 ax_118
	word16 dx_15
	word16 ax_17 = fn0800_8C69(Mem0[ds:0x008D:word16], 0x04, 0x0000, wLoc0C, out dx_15) + Mem0[ds:0x008B:word16]
	ui32 dx_ax_26 = SEQ(dx_15 + (ax_17 <u 0x0000), ax_17 + wArg02) + _
	word16 ax_27 = (word16) dx_ax_26
	word16 dx_28 = SLICE(dx_ax_26, word16, 16)
	branch dx_28 < 0x000F l0800_A246
// DataOut: ax ds ss
// DataOut (flags): SZO
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A237:
	branch dx_28 > 0x000F l0800_A23E
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A239:
	branch ax_27 <=u 0xFFFF l0800_A246
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +0002(16) Stack +0004(16)

l0800_A246:
	word16 dx_76
	word16 ax_77 = fn0800_8CCB(Mem0[ds:0x008B:word16], wArg04, Mem0[ds:0x008D:word16], wArg02, bp, out dx_76)
	byte dl_84
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0089:word16], dx_76, Mem0[ds:0x0087:word16], out dl_84) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A26C:
	byte dl_94
	branch fn0800_8F2F(ax_77, Mem0[ds:0x0091:word16], dx_76, Mem0[ds:0x008F:word16], out dl_94) l0800_A23E
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> es:<invalid> ch:<invalid> dh:<invalid> al:<invalid> bh:<invalid> bl:<invalid> ah:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16) Local -0006(16)

l0800_A27F:
	word16 ax_96 = Mem0[ds:0x008D:word16]
	word16 dx_97 = Mem0[ds:0x008B:word16]
	Mem103[ss:fp - 0x000C:word16] = dx_76
	Mem107[ss:fp - 0x000E:word16] = ax_77
	byte dl_109
	branch fn0800_A162(ds, wArg00, wArg02, out dl_109) == 0x0000 l0800_A23E
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A299:
	word16 dx_116
	*dxOut = ax_96
	ax_118 = dx_97
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A23E:
	word16 dx_66
	*dxOut = 0xFFFF
	ax_118 = 0xFFFF
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A29F:
	return ax_118
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A215_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cl:<invalid> cx:<invalid> bx:<invalid> ch:<invalid> al:<invalid> ah:<invalid> bl:<invalid> es:<invalid> dh:<invalid> bh:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A2A3(byte al, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: al ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0004(16) Stack +0006(32)
fn0800_A2A3_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(32)

l0800_A2A3:
	msdos_unknown_2144()
	word16 dx_11 = (word16) ptrArg06
	word16 ax_16 = DPB(ax, bArg04, 0)
	branch C l0800_A2C6
// DataOut: al ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0004(16)

l0800_A2C6:
	ax_16 = fn0800_8D2B(ds, ax_16)
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2BA:
	branch wArg04 != 0x0000 l0800_A2C4
// DataOut: al ax di dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C4:
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2C0:
	ax_16 = dx_11
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:0x44 al:<invalid> bx:<invalid> cx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A2CA:
	return ax_16
// DataOut: al ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A2A3_exit:
// DataOut: al ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence ds:dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_A2CC()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2CC_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A2CC:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F4:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2CC_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void fn0800_A2D0()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2D0_entry:
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A2D0:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F6:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2D0_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void fn0800_A2D4()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2D4_entry:
// DataOut: bp bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A2D4:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26F8:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_A2D4_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid>



void fn0800_A2D8()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: sp
// Trashed: esp rsp sp spl
// Preserved:
fn0800_A2D8_entry:
// DataOut: bp bx di ds ss
// DataOut (flags): SO
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A2D8:
	word16 sp_4
	selector ds_5
	call Mem0[ds:0x26FA:word16] (retsize: 4; depth: 4)
		uses: ds,sp_1
		defs: ds_5,sp_4
	return
// DataOut: bp bx di ds sp ss
// DataOut (flags): SO
// SymbolicIn: sp:fp

fn0800_A2D8_exit:
// DataOut: sp
// DataOut (flags): SO
// SymbolicIn: sp:<invalid>



void fn0800_A36D(word16 ax, word16 cx, word16 dx, word16 bx, word16 si, word16 di, selector es, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bx cx di ds dx es si
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx esi rax rbx rcx rdi rdx rsi si sil
// Preserved: ah sp
fn0800_A36D_entry:
// DataOut: ax bx cx di ds dx es si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A36D:
	byte al_4 = (byte) ax
	branch ax == 0x0000 l0800_A378
// DataOut: ah al bx cx di ds dx es si
// DataOut (flags): 
// SymbolicIn: sp:fp

l0800_A371:
	Mem62[es:di:byte] = al_4
	branch al_4 != 0x00 l0800_A378
// DataOut: ah bx cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:ax

l0800_A377:
// DataOut: ah cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al

l0800_A378:
	branch cx == 0x0000 l0800_A394
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:al bx:bx + 0x0001

l0800_A37F:
	byte al_37 = Mem0[ds:si:byte]
	branch al_37 == 0x22 l0800_A394
// DataOut: al cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:0x00 ah:ah bx:bx + 0x0001

l0800_A385:
	branch al_37 != 0x5C l0800_A392
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A38B:
	branch Mem0[ds:si + 0x0001:byte] != 0x22 l0800_A392
// DataOut: cx ds si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A390:
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:si + 0x0001 cx:cx - 0x0001 bx:bx + 0x0001

l0800_A392:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

l0800_A394:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001

fn0800_A36D_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp ax:<invalid> dx:dx + 0x0001 di:di + 0x0001 al:<invalid> ah:ah si:<invalid> cx:<invalid> bx:bx + 0x0001



word16 fn0800_A401(byte al, selector ds, selector psegArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx eax ebx es rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A401_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A401:
	word16 ax_17
	word16 ax_8 = DPB(ax, 0x4A, 8)
	word16 bx_13
	branch msdos_resize_memory_block(psegArg02, wArg04, out bx_13) l0800_A415
// DataOut: ax bx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A415:
	fn0800_8D2B(ds, ax_8)
	ax_17 = bx_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A410:
	ax_17 = 0xFFFF
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x4A bx:<invalid> es:<invalid> -2(fp):bp

l0800_A41B:
	return ax_17
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp

fn0800_A401_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> es:<invalid> ax:<invalid> al:<invalid> -6(fp):ax -4(fp):<invalid> -2(fp):bp



word16 fn0800_A471(byte bl, selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bl ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(32)
fn0800_A471_entry:
// DataOut: bl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Stack +0002(32)

l0800_A471:
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 si_157 = (word16) ptrArg02
	word16 ax_117 = 0x0000
	byte dl_141 = 0x00
	word16 dx_142 = 0x0000
	*dxOut = dx_142
	ui32 dh_bx_128 = DPB(dh_bx, 0x00, 8)
// DataOut: ax di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A487:
	byte bl_218 = Mem0[es_19:si_157:byte]
	bx = DPB(bx, bl_218, 0) (alias)
	dh_bx_128 = DPB(dh_bx_128, bl_218, 0) (alias)
	si_157 = si_157 + 0x0001
	branch (Mem0[ds:bx + 0x2251:byte] & 0x01) != 0x00 l0800_A487
// DataOut: ax bl di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A490:
	word16 bp_217 = 0x0000
	branch bl_218 == 0x2B l0800_A49E
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A498:
	branch bl_218 != 0x2D l0800_A4A2
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49D:
	bp_217 = 0x0001
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:0x0000 Sequence es:si:<invalid> ax:0x0000 Sequence dx:ax:0 cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A49E:
	bl_218 = Mem0[es_19:si_157:byte]
	bx = DPB(bx, bl_218, 0) (alias)
	dh_bx_128 = DPB(dh_bx_128, bl_218, 0) (alias)
	si_157 = si_157 + 0x0001
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A2:
	branch bl_218 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4A7:
	byte bl_126 = bl_218 - 0x30
	bx = DPB(bx, bl_126, 0) (alias)
	dh_bx_128 = DPB(dh_bx_128, bl_126, 0) (alias)
	branch bl_126 <u 0x00 l0800_A4D6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4AC:
	ui32 dl_ax_139 = SEQ(dl_141, (word16) (ax_117 *u 0x000A) + bx) + dh_bx_128
	ax_117 = (word16) dl_ax_139 (alias)
	dl_141 = SLICE(dl_ax_139, byte, 16) (alias)
	*dxOut = SLICE(dl_ax_139, word16, 16)
	branch dl_ax_139 == 0x00000000 l0800_A49E
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B4:
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:0x000A bh:0x00 di:0x2251 bl:<invalid> si:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4C8:
	byte bl_158 = Mem0[es_19:si_157:byte]
	si_157 = si_157 + 0x0001
	branch bl_158 >u 0x39 l0800_A4D6
// DataOut: ax bl bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D1:
	bx = DPB(bx, bl_158 - 0x30, 0) (alias)
	branch bl_158 >=u 0x30 l0800_A4B6
// DataOut: ax bp bx ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4B6:
	int32 dx_ax_174 = ax_117 *u 0x000A
	int32 dx_ax_197 = SEQ((word16) (dx_142 *u 0x000A), (word16) dx_ax_174 + bx) + SEQ(SLICE(dx_ax_174, word16, 16), bx)
	ax_117 = (word16) dx_ax_197 (alias)
	*dxOut = SLICE(dx_ax_197, word16, 16)
// DataOut: ax bp ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D6:
	branch bp_217 < 0x0001 l0800_A4E0
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4D9:
	ax_117 = -ax_117
	word16 dx_119
	*dxOut = -dx_142 - (ax_117 == 0x0000)
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dl:<invalid> dx:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A4E0:
	return ax_117
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:<invalid> Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:<invalid> bl:<invalid> si:<invalid> dx:<invalid> dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp

fn0800_A471_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bh:0x00 di:di bl:<invalid> si:si dx:<invalid> es:es dl:<invalid> -10(fp):fp - 0x0002 -8(fp):es -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_A4F6(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds
// LiveOut: ds
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16)
fn0800_A4F6_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A4F6:
	word16 ax_24 = fn0800_A53C(0x00, ds, DPB(ptrLoc08, wArg02, 0), 0x00, bp)
	branch ax_24 != 0xFFFF l0800_A513
// DataOut: ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16)

l0800_A513:
	word16 dx_61 = ax_24 & 0xFFFE
	branch (wArg06 & 0x0080) != 0x0000 l0800_A520
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A51D:
	dx_61 = ax_24 & 0xFFFE | 0x0001
// DataOut: ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A520:
	branch fn0800_A53C(0x01, ds, DPB(ptrLoc0A, wArg02, 0), 0x01, dx_61) == 0xFFFF l0800_A50F
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):0x0000 -2(fp):bp

l0800_A538:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):<invalid> -2(fp):bp

l0800_A50F:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_A53A:
	return ds
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A4F6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A53C(byte al, selector ds, segptr32 ptrArg02, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ds
// LiveOut: ax
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0006(8) Stack +0008(16)
fn0800_A53C_entry:
// DataOut: al di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(8) Stack +0008(16)

l0800_A53C:
	word16 ax_24
	msdos_unknown_2143()
	word16 ax_15 = DPB(ax, bArg06, 0)
	branch C l0800_A553
// DataOut: ax cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A553:
	ax_24 = fn0800_8D2B(ds, ax_15)
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A550:
	ax_24 = wArg08
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x43 al:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_A557:
	return ax_24
// DataOut: ax di si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A53C_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:<invalid> al:<invalid> Sequence ds:dx:<invalid> ds:ds ax:<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A559(byte al, selector ds, word16 wArg02, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A559_entry:
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A559:
	byte al_18
	byte dl_8
	*dlOut = (byte) wArg02
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A56E
// DataOut: al di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A56E:
	Mem33[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_18 = fn0800_A57F(al, ds, wArg02)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A565:
	al_18 = (byte) fn0800_8D2B(ds, 0x0006) (alias)
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> -2(fp):bp

l0800_A57D:
	return al_18
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_A559_exit:
// DataOut: al dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> al:0xFF -4(fp):<invalid> -2(fp):bp



byte fn0800_A57F(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: al
// Trashed: SCZO ah al ax bh bl bx eax ebx rax rbx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A57F_entry:
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_A57F:
	byte al_15
	word16 ax_8 = DPB(ax, 0x3E, 8)
	branch msdos_close_file(wArg02) l0800_A597
// DataOut: ax bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A597:
	al_15 = (byte) fn0800_8D2B(ds, ax_8) (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A58B:
	Mem21[ds:(wArg02 << 0x0001) + 0x24EA:word16] = 0x0000
	al_15 = 0x00 (alias)
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:0x3E bx:<invalid> -2(fp):bp

l0800_A59B:
	return al_15
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp

fn0800_A57F_exit:
// DataOut: al
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> bx:<invalid> ax:<invalid> al:0xFF -4(fp):ax -2(fp):bp



word16 fn0800_A59D(selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_A59D_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A59D:
	word16 wLoc08_107
	word16 ax_123
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_A5B2
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5B2:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_A5C4
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16)

l0800_A5C4:
	word16 ax_103 = 0x4400
	word16 dx_91
	branch msdos_ioctl_get_device_info(wArg02, out dx_91) l0800_A60C
// DataOut: ax bx di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5CE:
	branch (dl & 0x80) != 0x00 l0800_A608
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5D3:
	ax_103 = 0x4201
	branch msdos_set_file_position(wArg02, 0x00000000, 0x01, 0x00004201) l0800_A60C
// DataOut: ax bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4400 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5DE:
	ax_103 = 0x4202
	branch msdos_set_file_position(wArg02, 0x00000000, 0x02, 0x00004202) l0800_A60C
// DataOut: ax bx cx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4201 bx:<invalid> cx:0x0000 dx:0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A5F3:
	ax_103 = 0x4200
	branch msdos_set_file_position(wArg02, 0x00004201, 0x00, 0x42014200) l0800_A60C
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4202 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -000A(16)

l0800_A60C:
	wLoc08_107 = ax_103
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A5FA:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): CZ
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5FF:
	branch false l0800_A606
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A601:
	branch false l0800_A608
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A608:
	ax_123 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A606:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x4200 bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5BF:
	ax_123 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:0x4201 -10(fp):0x4201 -8(fp):0x0000 -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A5AC:
	wLoc08_107 = 0x0006
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16)

l0800_A60D:
	ax_123 = fn0800_8D2B(ds, wLoc08_107)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp
// LocalsOut: fp(16)

l0800_A610:
	return ax_123
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp

fn0800_A59D_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> al:0xFF cx:0x0000 dx:<invalid> -10(fp):0x4201 -8(fp):<invalid> -6(fp):0x4202 -4(fp):0x0000 -2(fp):bp



byte fn0800_A614(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: al di dl ds
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_A614_entry:
	*diOut = di
	*dsOut = ds
	*dlOut = dl
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A614:
	word16 si_145 = 0xFFFF
	branch Mem0[ptrArg02 + 0x0012:word16] == wArg02 l0800_A62A
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A62A:
	word16 bx_63 = (word16) ptrArg02
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_A65F
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A634:
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_A647
// DataOut: bx di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_A63A:
	ptrLoc08 = DPB(ptrLoc08, bx_63, 0) (alias)
	byte dl_182
	branch fn0800_A6B7(ds, ptrLoc08, wArg04, out dl_182, out ds) != 0x0000 l0800_A6B2
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A647:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_A65F
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Local -000A(16) Stack +0002(32)

l0800_A652:
	byte dl_169
	*dlOut = fn0800_9E75(ds, Mem0[ptrArg02 + 0x000A:word16], out ds)
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_A65F:
	branch Mem0[ptrArg02 + 0x0004:byte] < 0x00 l0800_A675
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_A669:
	word16 ax_136 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	byte dl_140
	si_145 = DPB(ax_136, fn0800_A559((byte) ax_136, ds, ax_136, out dl_140), 0)
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> bx:<invalid> al:<invalid> ch:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A675:
	Mem95[ptrArg02 + 0x0002:word16] = 0x0000
	Mem96[ptrArg02 + 0x0006:word16] = 0x0000
	Mem97[ptrArg02:word16] = 0x0000
	Mem98[ptrArg02 + 0x0004:byte] = 0xFF
	branch Mem98[ptrArg02 + 0x0010:word16] == 0x0000 l0800_A6B2
// DataOut: bx di dl ds es sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A695:
	word16 dx_115
	word16 di_116
	selector ds_117
	byte al_118 = fn0800_8E6A(ds, Mem98[ptrArg02 + 0x0010:word16], 0x0000, 0x0000, 0x0000, 0x0000, out dx_115, out di_116, out ds_117)
	byte dl_125
	*dlOut = fn0800_97F8(al_118, ds_117, DPB(ptrLoc08, 0x4ED6, 0))
	Mem134[ptrArg02 + 0x0010:word16] = 0x0000
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> ds:<invalid> ah:<invalid> es:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A627:
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:0xFFFF Sequence es:bx:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_A6B2:
	return (byte) si_145
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A614_exit:
// DataOut: al di dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> al:<invalid> dx:<invalid> bx:<invalid> ah:<invalid> ds:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A6B7(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_A6B7_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A6B7:
	word16 ax_29
	branch (wArg02 | wArg04) != 0x0000 l0800_A6C9
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6C9:
	branch Mem0[ptrArg02 + 0x0012:word16] == wArg02 l0800_A6DB
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6DB:
	branch Mem0[ptrArg02:word16] < 0x0000 l0800_A732
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A732:
	word16 ax_137 = Mem0[ptrArg02 + 0x0006:word16] + Mem0[ptrArg02:word16]
	Mem141[ptrArg02:word16] = Mem0[ptrArg02:word16] - (ax_137 + 0x0001)
	word16 ax_145 = Mem141[ptrArg02 + 0x000A:word16]
	word16 dx_146 = Mem141[ptrArg02 + 0x0008:word16]
	Mem148[ptrArg02 + 0x000E:word16] = ax_145
	Mem149[ptrArg02 + 0x000C:word16] = dx_146
	byte dl_158
	selector ds_159
	branch fn0800_C632(ds, (int16) Mem149[ptrArg02 + 0x0004:byte], dx_146, ax_145, ax_137 + 0x0001, out dl_158, out ds_159) == ax_137 + 0x0001 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32)

l0800_A765:
	branch (Mem149[ptrArg02 + 0x0002:word16] & 0x0200) != 0x0000 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A770:
	Mem171[ptrArg02 + 0x0002:word16] = Mem149[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6E4:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0008) != 0x0000 l0800_A701
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6EC:
	byte dl_128
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem0[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A6FB:
	branch Mem0[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0002(32) Stack +0004(16)

l0800_A701:
	Mem111[ptrArg02:word16] = 0x0000
	byte dl_115
	*dlOut = (byte) (wArg02 + 0x0005)
	branch Mem111[ptrArg02 + 0x000E:word16] != wArg04 l0800_A778
// DataOut: bx di dl ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A718:
	branch Mem111[ptrArg02 + 0x000C:word16] != wArg02 + 0x0005 l0800_A778
// DataOut: bx di dl ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A71E:
	word16 dx_121 = Mem111[ptrArg02 + 0x0008:word16]
	Mem123[ptrArg02 + 0x000E:word16] = Mem111[ptrArg02 + 0x000A:word16]
	Mem124[ptrArg02 + 0x000C:word16] = dx_121
	byte dl_122
	*dlOut = (byte) dx_121
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6D5:
	ax_29 = 0xFFFF
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> es:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A6C3:
	selector ds_59
	byte dl_60
	*dlOut = fn0800_A877(ds, out ds_59)
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A778:
	ax_29 = 0x0000
// DataOut: ax di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_A77A:
	return ax_29
// DataOut: ax di dl ds sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_A6B7_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> si:si dx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_A77D(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dxOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_A77D_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_A77D:
	word16 di_130 = wArg06
	word16 cx_15 = 0x0000
	word16 wLoc06_160 = wArg02
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A1:
	branch cx_15 == 0x000A l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A6:
	di_130 = di_130 - 0x0001
	branch di_130 <= 0x0000 l0800_A7D8
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7A9:
	word16 ax_145
	word16 v17_136 = Mem0[ptrArg08:word16] - 0x0001
	Mem137[ptrArg08:word16] = v17_136
	branch v17_136 < 0x0000 l0800_A7C6
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_A7C6:
	ptrLoc0E = DPB(ptrLoc0E, wArg08, 0) (alias)
	ax_145 = fn0800_AEC2(ds, ptrLoc0E, wArg0A, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7B1:
	word16 ax_162 = Mem137[ptrArg08 + 0x000E:word16]
	Mem165[ptrArg08 + 0x000C:word16] = Mem137[ptrArg08 + 0x000C:word16] + 0x0001
	ax_145 = DPB(ax_162, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D1:
	cx_15 = ax_145
	byte cl_152 = (byte) ax_145
	branch ax_145 != 0xFFFF l0800_A798
// DataOut: cl cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A798:
	Mem158[ptrLoc06:byte] = cl_152
	wLoc06_160 = wLoc06_160 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_A7D8:
	word16 ax_109
	branch cx_15 != 0xFFFF l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7DD:
	branch wArg04 != wArg04 l0800_A7F3
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7E8:
	branch wLoc06_160 != wArg02 l0800_A7F3
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_A7F3:
	Mem100[ptrLoc06:byte] = 0x00
	branch (Mem100[ptrArg08 + 0x0002:word16] & 0x0010) == 0x0000 l0800_A80B
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_A80B:
	word16 dx_114
	*dxOut = wArg04
	ax_109 = wArg02
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A805:
	word16 dx_108
	*dxOut = 0x0000
	ax_109 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A7ED:
	word16 dx_124
	*dxOut = 0x0000
	ax_109 = 0x0000
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_A811:
	return ax_109
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A77D_exit:
// DataOut: ax ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di cx:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_A817(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_A817_entry:
// DataOut: al ds si ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_A817:
	word16 ax_54
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg06, selector, 16), (word16) ptrArg06)
	word16 bx_11 = (word16) es_bx_9
	bool C_29 = msdos_find_first_file(wArg0A, SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), bx_11)
	word16 ax_22 = DPB(ax, 0x4E, 8)
	byte dl_41
	*dlOut = (byte) bx_11
	branch C_29 l0800_A844
// DataOut: bx dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A844:
	ax_54 = fn0800_8D2B(ds, ax_22)
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A840:
	ax_54 = 0x0000
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A848:
	return ax_54
// DataOut: ax dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A817_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A84A(byte al, selector ds, segptr32 ptrArg02, ptr16 & axOut, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  SZDOP al ds
// LiveOut: DP ax dl
// Trashed: SCZDOP ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp bx ds sp
// Stack args: Stack +0002(32)
fn0800_A84A_entry:
// DataOut: al ds ss
// DataOut (flags): SZDOP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_A84A:
	word32 es_bx_9 = msdos_get_disk_transfer_area_address()
	msdos_set_DTA(SLICE(ptrArg02, selector, 16), (word16) ptrArg02)
	word16 bx_11 = (word16) es_bx_9
	bool C_23 = msdos_find_next_file()
	msdos_set_DTA(SLICE(es_bx_9, selector, 16), bx_11)
	word16 ax_22 = DPB(ax, 0x4F, 8)
	byte dl_35
	*dlOut = (byte) bx_11
	branch C_23 l0800_A871
// DataOut: bx dl ds ss
// DataOut (flags): DP
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16)

l0800_A871:
	word16 ax_68
	*axOut = fn0800_8D2B(ds, ax_22)
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A86D:
	word16 ax_60
	*axOut = 0x0000
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:0x1A cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):ds -2(fp):bp

l0800_A875:
	return C_23
// DataOut: ax dl ss
// DataOut (flags): DP
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_A84A_exit:
// DataOut: ax dl
// DataOut (flags): DP
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> Sequence ds:dx:<invalid> ah:<invalid> cx:<invalid> ax:<invalid> bx:bx dx:bx ds:ds al:0xFF -10(fp):<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



byte fn0800_A877(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
fn0800_A877_entry:
	*dsOut = ds
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_A877:
	word16 si_18 = Mem0[ds:0x24E8:word16]
	ds_37 = ds
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8A8:
	selector ds_37
	si_18 = si_18 - 0x0001
	branch si_18 != 0x0000 l0800_A88F
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A88F:
	word16 bx_60 = (word16) ptrLoc06
	branch (Mem0[ptrLoc06 + 0x0002:word16] & 0x0003) == 0x0000 l0800_A8A4
// DataOut: bx di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_A89A:
	ptrLoc0E = DPB(ptrLoc0E, bx_60, 0) (alias)
	fn0800_A6B7(ds_37, ptrLoc0E, ds, out dl, out ds_37)
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_A8A4:
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_A8AF:
	return dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_A877_exit:
// DataOut: dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_A8B7(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(32)
fn0800_A8B7_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8B7:
	word16 dx_117
	word16 si_121
	word16 ax_150
	word16 di_12 = 0x0000
	byte cl_21 = Mem0[ptrArg0A:byte]
	branch cl_21 != 0x72 l0800_A8D5
// DataOut: cl di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8D5:
	branch cl_21 != 0x77 l0800_A8DF
// DataOut: cl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DF:
	branch cl_21 != 0x61 l0800_A8EF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8EF:
	ax_150 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A8E4:
	dx_117 = 0x0902
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8DA:
	dx_117 = 0x0302
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8E7:
	di_12 = 0x0080
	si_121 = 0x0002
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8CD:
	dx_117 = 0x0001
	si_121 = 0x0001
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:0x0000 Sequence es:bx:<invalid> cl:<invalid> al:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A8F3:
	byte cl_112 = Mem0[ptrArg0A:byte]
	branch cl_112 == 0x2B l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A901:
	branch Mem0[ptrArg0A:byte] != 0x2B l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90A:
	branch cl_112 == 0x74 l0800_A914
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A90F:
	branch cl_112 != 0x62 l0800_A92B
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A914:
	branch cl_112 != 0x2B l0800_A91F
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(32)

l0800_A919:
	cl_112 = Mem0[ptrArg0A:byte]
// DataOut: cl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A91F:
	dx_117 = dx_117 & 0xFFFC | 0x0004
	di_12 = 0x0180
	si_121 = 0x0003
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A92B:
	word16 dx_102
	branch cl_112 != 0x74 l0800_A936
// DataOut: cl di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A936:
	branch cl_112 != 0x62 l0800_A941
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A941:
	dx_102 = dx_117 | Mem0[ds:0x2512:word16] & 0xC000
	branch (dx_102 & 0x8000) == 0x0000 l0800_A953
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A93B:
	dx_102 = dx_117 | 0x8000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A950:
	si_121 = si_121 | 0x0040
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A930:
	dx_102 = dx_117 | 0x4000
// DataOut: di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_A953:
	Mem71[ds:0x2354:word16] = 0xC7B5
	Mem77[ptrArg06:word16] = dx_102
	Mem82[ptrArg02:word16] = di_12
	ax_150 = si_121
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> si:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>
// LocalsOut: fp(16)

l0800_A967:
	return ax_150
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> dx:<invalid> si:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>

fn0800_A8B7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> cl:<invalid> al:<invalid> ax:<invalid> si:si dx:<invalid> -6(fp):di -4(fp):si -2(fp):bp 10(fp):<invalid>



word16 fn0800_A96D(word16 bp, word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, segptr32 ptrArg0C, word16 wArg0E, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp di ds si ss
// LiveOut: ax di ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)
fn0800_A96D_entry:
	*dsOut = ds
	*siOut = si
	*diOut = di
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A96D:
	word16 ax_197
	word16 ax_34 = fn0800_A8B7(ds, DPB(ptrLoc12, fp - 0x0006, 0), DPB(ptrLoc0E, fp - 0x0004, 0), DPB(ptrLoc0A, wArg04, 0))
	Mem40[ptrArg0C + 0x0002:word16] = ax_34
	branch ax_34 == 0x0000 l0800_A9B9
// DataOut: bp bx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A991:
	branch Mem40[ptrArg0C + 0x0004:byte] >= 0x00 l0800_A9CD
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0004(16) Local -0006(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0008(16) Stack +000A(16) Stack +000C(32) Stack +000E(16)

l0800_A998:
	byte al_232 = fn0800_B140(si, di, ds, wArg08, wArg0A, wLoc04 | wArg02, wLoc06, out ds)
	Mem237[ptrArg0C + 0x0004:byte] = al_232
	branch al_232 >= 0x00 l0800_A9CD
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cl:<invalid> al:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):fp - 0x0004 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -000A(16) Stack +000C(32) Stack +000E(16)

l0800_A9CD:
	fn0800_8D76((int16) Mem40[ptrArg0C + 0x0004:byte])
	branch 0x0000 == 0x0000 l0800_A9E7
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +000C(32) Stack +000E(16)

l0800_A9DE:
	Mem209[ptrArg0C + 0x0002:word16] = Mem40[ptrArg0C + 0x0002:word16] | 0x0200
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Stack +000C(32) Stack +000E(16)

l0800_A9E7:
	word16 ax_148
	branch (Mem40[ptrArg0C + 0x0002:word16] & 0x0200) == 0x0000 l0800_A9FB
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:0x0000 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FB:
	ax_148 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9F6:
	ax_148 = 0x0001
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:0x0200 Sequence es:bx:<invalid> al:0x00 bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x02 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: fp(16) Local -0002(0) Local -0008(16) Stack +000C(16) Stack +000E(16)

l0800_A9FD:
	selector ds_168
	branch fn0800_BA89(ds, DPB(ptrLoc12, wArg0C, 0), wArg0E, 0x0000, 0x0000, ax_148, 0x0200, out ds_168) == 0x0000 l0800_AA1F
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:0x4400 cx:<invalid> es:<invalid> cl:<invalid> ah:0x00 ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp
// LocalsOut: Local -0002(0)

l0800_AA1F:
	Mem194[Mem40[ss:fp + 0x000C:segptr32] + 0x0010:word16] = 0x0000
	word16 dx_195
	*dxOut = Mem194[ss:fp + 0x000E:word16]
	ax_197 = Mem194[ss:fp + 0x000C:word16]
// DataOut: ax bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp

l0800_AA12:
	Mem177[ss:fp - 0x0008:word16] = Mem40[ss:fp + 0x000E:word16]
	Mem180[ss:fp - 0x000A:word16] = Mem177[ss:fp + 0x000C:word16]
	byte dl_183
	word16 di_184
	selector ds_185
	fn0800_A614(ds_168, ptrArg00, wArg02, out dl_183, out di_184, out ds_185)
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> cl:<invalid> ds:<invalid> ah:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0200 -2(fp):bp

l0800_A9B9:
	Mem115[ptrArg0C + 0x0004:byte] = 0xFF
	Mem116[ptrArg0C + 0x0002:word16] = 0x0000
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> al:<invalid> es:<invalid> bx:<invalid> cl:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -18(fp):fp - 0x0006 -16(fp):ss -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_A9C7:
	word16 dx_94
	*dxOut = 0x0000
	ax_197 = 0x0000
// DataOut: ax bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

l0800_AA2E:
	return ax_197
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp

fn0800_A96D_exit:
// DataOut: ax di ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> bx:<invalid> cx:<invalid> es:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -2(fp):bp



word16 fn0800_AA34(selector ds, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZO ah al ax bh bl bx dh dl dx eax ebx edx es rax rbx rdx
// Preserved: bp sp
fn0800_AA34_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AA34:
	word16 wLoc06_10 = 0x2358
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA42:
	branch Mem0[ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA64
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA4C:
	wLoc06_10 = wLoc06_10 + 0x0014
	branch wLoc06_10 <u (word16) (Mem0[ds:0x24E8:word16] *s 0x0014) + 0x2358 l0800_AA42
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AA64:
	word16 ax_43
	branch Mem0[ptrLoc06 + 0x0004:byte] < 0x00 l0800_AA74
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AA74:
	word16 dx_56
	*dxOut = ds
	ax_43 = wLoc06_10
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA6E:
	word16 dx_51
	*dxOut = 0x0000
	ax_43 = 0x0000
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_AA7A:
	return ax_43
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AA34_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AA7E(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dxOut, ptr16 & siOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si ss
// LiveOut: ax di ds dx si
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_AA7E_entry:
	*dsOut = ds
	*siOut = si
	*diOut = di
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA7E:
	word16 ax_29
	word16 dx_9
	word16 ax_10 = fn0800_AA34(ds, out dx_9)
	branch (ax_10 | dx_9) != 0x0000 l0800_AA97
// DataOut: bp di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_AA97:
	word16 dx_83
	word16 si_84
	word16 di_85
	selector ds_86
	ax_29 = fn0800_A96D(fp - 0x0002, si, di, ds, 0x0000, wArg06, wArg08, wArg02, wArg04, DPB(ptrLoc0A, ax_10, 0), dx_9, out dx_83, out si_84, out di_85, out ds_86)
// DataOut: ax bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AA91:
	word16 dx_41
	*dxOut = 0x0000
	ax_29 = 0x0000
// DataOut: ax bp di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AAAF:
	return ax_29
// DataOut: ax di ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AA7E_exit:
// DataOut: ax di ds dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> es:<invalid> bx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> cl:<invalid> di:<invalid> si:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AAB3(word16 dx, selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds dx ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_AAB3_entry:
	*dsOut = ds
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAB3:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB91:
	branch wArg06 == 0x0000 l0800_AB9A
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB97:
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AABB:
	word16 ax_102
	word16 v10_92 = wArg06 + 0x0001
	wArg06 = v10_92
	branch Mem0[ptrArg02 + 0x0006:word16] <=u v10_92 l0800_AACF
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACF:
	ax_102 = Mem0[ptrArg02 + 0x0006:word16]
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AACA:
	ax_102 = v10_92
// DataOut: ax ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAD6:
	word16 di_105 = ax_102
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAE3:
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAEA:
	branch Mem0[ptrArg02 + 0x0006:word16] >=u v10_92 l0800_AB50
// DataOut: bx di ds dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF3:
	branch Mem0[ptrArg02:word16] != 0x0000 l0800_AB50
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB50:
	word16 v18_160 = wArg06 - 0x0001
	wArg06 = v18_160
	branch v18_160 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5A:
	di_105 = di_105 - 0x0001
	branch di_105 == 0x0000 l0800_AB8C
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB5D:
	word16 ax_204
	word16 v19_193 = Mem0[ptrArg02:word16] - 0x0001
	Mem194[ptrArg02:word16] = v19_193
	branch v19_193 < 0x0000 l0800_AB7A
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB7A:
	ptrLoc0A = DPB(ptrLoc0A, wArg02, 0) (alias)
	ax_204 = fn0800_AEC2(ds, ptrLoc0A, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB65:
	word16 ax_221 = Mem194[ptrArg02 + 0x000E:word16]
	Mem224[ptrArg02 + 0x000C:word16] = Mem194[ptrArg02 + 0x000C:word16] + 0x0001
	ax_204 = DPB(ax_221, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB85:
	dx = ax_204
	byte dl_210 = (byte) ax_204
	branch ax_204 != 0xFFFF l0800_AB47
// DataOut: di dl ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB47:
	Mem217[ptrArg08:byte] = dl_210
	wArg08 = wArg08 + 0x0001
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB8C:
	branch dx == 0xFFFF l0800_AB3D
// DataOut: ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AAF9:
	wArg06 = v10_92 - 0x0001
	word16 di_256 = 0x0000
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB0E:
	branch Mem0[ptrArg02 + 0x0006:word16] <=u wArg06 l0800_AB00
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB00:
	di_256 = di_256 + Mem0[ptrArg02 + 0x0006:word16]
	wArg06 = wArg06 - Mem0[ptrArg02 + 0x0006:word16]
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB1A:
	word16 ax_278 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	ptrLoc0C = DPB(ptrLoc0C, wArg08, 0) (alias)
	word16 ax_282 = fn0800_8F50((byte) ax_278, ds, ax_278, ptrLoc0C, di_256)
	dx = ax_282
	wArg08 = wArg08 + ax_282
	branch ax_282 == di_256 l0800_AB91
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_AB36:
	wArg06 = wArg06 + (di_256 - ax_282)
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:0xFF bx:<invalid> ah:0x3F cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_AB3D:
	Mem138[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] | 0x0020
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16) Stack +0006(16)

l0800_AB9A:
	return wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> di:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> si:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_AAB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> es:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_ABA3(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_ABA3_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABA3:
	word16 ax_116
	branch wArg06 != 0x0000 l0800_ABB6
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABB6:
	word16 dx_100
	word16 ax_80 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_100)
	branch dx_100 >u 0x0001 l0800_ABF2
// DataOut: ax di ds dx sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCD:
	branch dx_100 <u 0x0001 l0800_ABD3
// DataOut: ax di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABCF:
	branch false l0800_ABF2
// DataOut: di ds dx sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF2:
	word16 si_101 = wArg08 + 0x0001
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC0B:
	word16 dx_150
	si_101 = si_101 - 0x0001
	branch si_101 == 0x0000 l0800_AC26
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC12:
	Mem121[ss:fp - 0x000C:word16] = wArg04
	Mem124[ss:fp - 0x000E:word16] = wArg02
	Mem126[ss:fp - 0x0010:word16] = wArg06
	Mem130[ss:fp - 0x0012:word16] = wArg0C
	Mem134[ss:fp - 0x0014:word16] = wArg0A
	branch fn0800_AAB3(dx_100, ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds) == 0x0000 l0800_ABF8
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ABF8:
	wArg04 = dx_150
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_150)
	dx_100 = dx_150
// DataOut: di ds dx si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AC26:
	ax_116 = wArg08 - si_101
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ABD3:
	selector ds_174
	ax_116 = (uint16) ((uint32) (uint16) (ax_80 - fn0800_AAB3(dx_100, ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_80, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_174)) /u wArg06)
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_ABB2:
	ax_116 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AC2B:
	return ax_116
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_ABA3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_AC31(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32)
fn0800_AC31_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC31:
	word16 si_105
	word16 cx_110
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_AC4D
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC4D:
	int32 dx_ax_120 = (int32) Mem0[ptrArg02:word16]
	word16 dx_122 = SLICE(dx_ax_120, word16, 16)
	word16 ax_124 = ((word16) dx_ax_120 ^ dx_122) - dx_122
	cx_110 = ax_124
	si_105 = ax_124
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC41:
	word16 cx_108 = Mem0[ptrArg02 + 0x0006:word16] + Mem0[ptrArg02:word16]
	cx_110 = cx_108 + 0x0001
	si_105 = cx_108 + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC5C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_ACAA
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AC67:
	word16 wLoc06_58 = Mem0[ptrArg02 + 0x000C:word16]
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_ACA3:
	cx_110 = cx_110 - 0x0001
	branch cx_110 != 0x0000 l0800_AC96
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC96:
	branch Mem0[ptrLoc06:byte] != 0x0A l0800_ACA3
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_ACA2:
	si_105 = si_105 + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC7E:
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC8D:
	cx_110 = cx_110 - 0x0001
	branch cx_110 != 0x0000 l0800_AC80
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC80:
	word16 v18_75 = wLoc06_58 - 0x0001
	ptrLoc06 = DPB(ptrLoc06, v18_75, 0) (alias)
	wLoc06_58 = v18_75
	branch Mem0[SLICE(ptrLoc06, selector, 16):v18_75:byte] != 0x0A l0800_AC8D
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC8C:
	si_105 = si_105 + 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(32)

l0800_AC94:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_ACAA:
	return si_105
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:bx:<invalid> cx:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AC31_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> cx:<invalid> si:si ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_ACB3(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_ACB3_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_ACB3:
	word16 ax_118
	byte dl_22
	selector ds_23
	branch fn0800_A6B7(ds, DPB(ptrLoc08, wArg02, 0), wArg04, out dl_22, out ds_23) == 0x0000 l0800_ACCE
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_ACCE:
	branch wArg0A != 0x0001 l0800_ACEA
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_ACD3:
	word16 bx_129 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] <= 0x0000 l0800_ACEA
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_ACDC:
	wArg06 = wArg06 - (word16) ((int32) fn0800_AC31(DPB(ptrLoc08, bx_129, 0)))
	wArg08 = v21
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_ACEA:
	Mem87[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] & 0xFE5F
	Mem90[ptrArg02:word16] = 0x0000
	word16 dx_92 = Mem90[ptrArg02 + 0x0008:word16]
	Mem93[ptrArg02 + 0x000E:word16] = Mem90[ptrArg02 + 0x000A:word16]
	Mem94[ptrArg02 + 0x000C:word16] = dx_92
	word16 ax_105 = (int16) Mem94[ptrArg02 + 0x0004:byte]
	word16 dx_109
	word16 ax_110 = fn0800_8E29((byte) ax_105, ds_23, ax_105, wArg06, wArg08, (byte) wArg0A, out dx_109)
	branch dx_109 != 0xFFFF l0800_AD2A
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_AD20:
	branch ax_110 != 0xFFFF l0800_AD2A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_AD2A:
	ax_118 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_AD25:
	ax_118 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:0x42 es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_ACC9:
	ax_118 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AD2C:
	return ax_118
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>

fn0800_ACB3_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si cx:<invalid> ax:<invalid> Sequence es:bx:<invalid> dx:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> ah:<invalid> es:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid> 8(fp):<invalid>



word16 fn0800_AD2F(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp dx sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AD2F_entry:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AD2F:
	word16 dx_18
	word16 ax_19 = fn0800_97B6(ds, (int16) Mem0[ptrArg02 + 0x0004:byte], out dx_18)
	word16 wLoc06_25 = ax_19
	branch dx_18 != 0xFFFF l0800_AD52
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0004(16)

l0800_AD4D:
	branch ax_19 == 0xFFFF l0800_AD7B
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0004(16)

l0800_AD52:
	word16 bx_51 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] >= 0x0000 l0800_AD6B
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(16) Stack +0004(16)

l0800_AD6B:
	wLoc06_25 = ax_19 - (word16) ((int32) fn0800_AC31(DPB(ptrLoc0A, wArg02, 0)))
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16)

l0800_AD5B:
	wLoc06_25 = ax_19 + (word16) ((int32) fn0800_AC31(DPB(ptrLoc0A, bx_51, 0)))
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ah:0x42 dx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16)

l0800_AD7B:
	return wLoc06_25
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> ah:0x42 -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AD2F_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:<invalid> Sequence dx:ax:<invalid> es:<invalid> bx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AD85(word16 bp, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_AD85_entry:
	*dsOut = ds
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD85:
	word16 ax_144
	branch wArg06 == 0x0000 l0800_AE07
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AD94:
	word16 dx_92
	word16 ax_93 = fn0800_8F18(wArg08, 0x0000, 0x0000, wArg06, out dx_92)
	branch dx_92 >u 0x0001 l0800_ADC9
// DataOut: ax di ds sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAB:
	branch dx_92 <u 0x0001 l0800_ADB1
// DataOut: ax di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADAD:
	branch false l0800_ADC9
// DataOut: di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Local -0006(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADC9:
	word16 si_104 = 0x0000
	branch 0x0000 >=u wArg08 l0800_AE07
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADD0:
	Mem117[ss:fp - 0x000C:word16] = wArg04
	Mem120[ss:fp - 0x000E:word16] = wArg02
	Mem122[ss:fp - 0x0010:word16] = wArg06
	Mem126[ss:fp - 0x0012:word16] = wArg0C
	Mem130[ss:fp - 0x0014:word16] = wArg0A
	word16 ax_134 = fn0800_B4BE(ds, ptrArg00, wArg02, wArg04, ptrArg06, wArg08, out ds)
	branch false l0800_ADEA
// DataOut: ax di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADE6:
	branch ax_134 == wArg06 l0800_ADEE
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_ADEE:
	wArg04 = dx_154
	word16 dx_154
	wArg02 = fn0800_8CCB(wArg02, 0x0000, wArg04, wArg06, bp, out dx_154)
	si_104 = si_104 + 0x0001
	branch si_104 <u wArg08 l0800_ADD0
// DataOut: di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16) Local -0002(16) Stack +0002(16) Stack +0004(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_AE07:
	ax_144 = wArg08
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADEA:
	ax_144 = si_104
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: fp(16)

l0800_ADB1:
	selector ds_180
	ax_144 = (uint16) ((uint32) (uint16) fn0800_B4BE(ds, DPB(ptrLoc14, wArg0A, 0), wArg0C, ax_93, DPB(ptrLoc0E, wArg02, 0), wArg04, out ds_180) /u wArg06)
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 di:<invalid> bx:<invalid> cx:<invalid> ax:<invalid> dx:<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_AE0A:
	return ax_144
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> si:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_AD85_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:<invalid> ax:<invalid> si:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> es:<invalid> ch:<invalid> cl:0x04 dh:<invalid> al:<invalid> bh:0x40 bl:0x00 dl:<invalid> ah:<invalid> ds:<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



selector fn0800_AE10(selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
fn0800_AE10_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_AE10:
	word16 si_11 = 0x0014
	ds_30 = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE40:
	selector ds_30
	si_11 = si_11 - 0x0001
	branch si_11 != 0x0000 l0800_AE24
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE24:
	word16 bx_48 = (word16) ptrLoc06
	branch (Mem0[ptrLoc06 + 0x0002:word16] & 0x0300) != 0x0300 l0800_AE3C
// DataOut: bx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AE33:
	ptrLoc0C = DPB(ptrLoc0C, bx_48, 0) (alias)
	byte dl_72
	fn0800_A6B7(ds_30, ptrLoc0C, ds, out dl_72, out ds_30)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_AE3C:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_AE47:
	return ds_30
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 si:<invalid> ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp

fn0800_AE10_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> Sequence es:bx:<invalid> cx:ds es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):ds -2(fp):bp



word16 fn0800_AE4C(selector ds, segptr32 ptrArg02, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32)
fn0800_AE4C_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE4C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AE5D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5A:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AE5D:
	word16 ax_51
	word16 v11_19 = Mem0[ptrArg02 + 0x0006:word16]
	word16 ax_22 = Mem0[ptrArg02 + 0x000A:word16]
	word16 dx_23 = Mem0[ptrArg02 + 0x0008:word16]
	Mem24[ptrArg02 + 0x000E:word16] = ax_22
	Mem25[ptrArg02 + 0x000C:word16] = dx_23
	selector ds_36
	word16 ax_37 = fn0800_B97F(ds, (int16) Mem25[ptrArg02 + 0x0004:byte], DPB(ptrLoc08, dx_23, 0), ax_22, v11_19, out ds_36)
	Mem42[ptrArg02:word16] = ax_37
	branch ax_37 <= 0x0000 l0800_AE95
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AE95:
	branch Mem42[ptrArg02:word16] != 0x0000 l0800_AEAE
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Stack +0002(32)

l0800_AEAE:
	Mem87[ptrArg02:word16] = 0x0000
	Mem89[ptrArg02 + 0x0002:word16] = Mem87[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE9E:
	Mem83[ptrArg02 + 0x0002:word16] = Mem42[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBB:
	ax_51 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AE8C:
	Mem59[ptrArg02 + 0x0002:word16] = Mem42[ptrArg02 + 0x0002:word16] & 0xFFDF
	ax_51 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_AEBE:
	return ax_51
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_AE4C_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> dx:<invalid> al:<invalid> bx:<invalid> es:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_AEC2(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_AEC2_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_AEC2:
	Mem12[ptrArg02:word16] = Mem0[ptrArg02:word16] + 0x0001
	selector ds_23
	return fn0800_AED6(ds, DPB(ptrLoc06, (word16) ptrArg02, 0), wArg04, out ds_23)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_AEC2_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> cx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_AED6(selector ds, segptr32 ptrArg02, word16 wArg04, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_AED6_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_AED6:
	word16 ax_100
	branch (wArg02 | wArg04) != 0x0000 l0800_AEE8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AEE8:
	word16 ax_122
	branch Mem0[ptrArg02:word16] <= 0x0000 l0800_AF0B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF0B:
	branch Mem0[ptrArg02:word16] < 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF14:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0110) != 0x0000 l0800_AF7F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF1C:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0001) == 0x0000 l0800_AF7F
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF24:
	Mem158[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] | 0x0080
	word16 bx_155 = (word16) ptrArg02
	branch Mem158[ptrArg02 + 0x0006:word16] == 0x0000 l0800_AF43
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(32) Stack +0004(16)

l0800_AF43:
	branch (Mem158[ptrArg02 + 0x0002:word16] & 0x0200) == 0x0000 l0800_AF51
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF4E:
	ds = fn0800_AE10(ds)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF51:
	ptrLoc0A = DPB(ptrLoc0A, 0x4EE4, 0) (alias)
	word16 ax_209 = fn0800_B97F(ds, (int16) Mem158[ptrArg02 + 0x0004:byte], ptrLoc0A, ds, 0x0001, out ds)
	branch ax_209 != 0x0000 l0800_AF9E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0002(32)

l0800_AF9E:
	branch Mem158[ds:0x4EE4:byte] != 0x0D l0800_AFB0
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFA5:
	branch (Mem158[ptrArg02 + 0x0002:word16] & 0x0040) == 0x0000 l0800_AF43
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFB0:
	Mem243[ptrArg02 + 0x0002:word16] = Mem158[ptrArg02 + 0x0002:word16] & 0xFFDF
	ax_122 = DPB(ax_209, Mem243[ds:0x4EE4:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF6D:
	branch fn0800_A59D(ds, (int16) Mem158[ptrArg02 + 0x0004:byte]) == 0x0001 l0800_AF8A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF8A:
	Mem235[ptrArg02 + 0x0002:word16] = Mem158[ptrArg02 + 0x0002:word16] & 0xFE7F | 0x0020
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF7F:
	Mem145[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:0xFF dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AF34:
	selector ds_168
	branch fn0800_AE4C(ds, DPB(ptrLoc08, bx_155, 0), out ds_168) == 0x0000 l0800_AEF1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AF3F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEF1:
	Mem114[ptrArg02:word16] = Mem0[ptrArg02:word16] - 0x0001
	word16 ax_115 = Mem114[ptrArg02 + 0x000E:word16]
	word16 si_116 = Mem114[ptrArg02 + 0x000C:word16]
	Mem118[ptrArg02 + 0x000C:word16] = Mem114[ptrArg02 + 0x000C:word16] + 0x0001
	ax_122 = DPB(ax_115, Mem118[ax_115:si_116:byte], 0) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBB:
	ax_100 = DPB(ax_122, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AEE2:
	ax_100 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_AFBD:
	return ax_100
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> si:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_AED6_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> si:si Sequence es:bx:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> dx:<invalid> cx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):0x4EE4 -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_AFCB(selector ds, segptr32 ptrArg02, ptr16 & dxOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32)
fn0800_AFCB_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFCB:
	word16 ax_188
	word16 di_15 = (word16) ptrArg02
	selector es_16 = SLICE(ptrArg02, selector, 16)
	branch (es_16 | di_15) == 0x0000 l0800_AFFC
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFDC:
	byte ah_82 = Mem0[ptrArg02:byte]
	word16 cx_205 = 0xFFFF
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:es | di -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5:
	branch cx_205 == 0x0000 l0800_AFE7
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE5_1:
	di_15 = di_206 + 0x0001
	cx_205 = cx_205 - 0x0001
	word16 di_206 = di_15
	branch 0x00 == Mem0[es_16:di_206:byte] l0800_AFE5
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFE7:
	word16 cx_95 = ~cx_205
	branch cx_95 == 0x0001 l0800_AFFC
// DataOut: ah cx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_AFEC:
	ptr32 es_di_99 = Mem0[ds:0x26AA:segptr32]
	word16 di_100 = (word16) es_di_99
	word16 wLoc06_108 = di_100
	branch (SLICE(es_di_99, selector, 16) | di_100) != 0x0000 l0800_B009
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:0x00 ah:<invalid> cx:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B009:
	ptr32 es_di_121 = Mem0[ds:di_100:segptr32]
	word16 di_122 = (word16) es_di_121
	selector es_123 = SLICE(es_di_121, selector, 16)
	word16 cx_112 = cx_95 - 0x0001
	branch (es_123 | di_122) == 0x0000 l0800_AFFC
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B012:
	byte al_129 = Mem0[es_di_121:byte]
	branch al_129 == 0x00 l0800_AFFC
// DataOut: ah al cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B019:
	branch ah_82 != al_129 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B01D:
	byte Z_156 = cond(Mem0[es_123:cx_95 - 0x0001 + di_122:byte] - 0x3D)
	branch Mem0[es_123:cx_95 - 0x0001 + di_122:byte] != 0x3D l0800_B002
// DataOut: ah bx cx di ds es ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B025:
	selector ds_161 = SLICE(ptrArg02, selector, 16)
	word16 si_162 = (word16) ptrArg02
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029:
	branch cx_112 == 0x0000 l0800_B02B
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B029_1:
	Z_156 = cond(Mem0[ds_161:si_208:byte] - Mem0[es_123:di_122:byte]) (alias)
	si_162 = si_208 + 0x0001
	di_122 = di_122 + 0x0001
	cx_112 = cx_112 - 0x0001
	word16 si_208 = si_162
	branch Mem0[ds_161:si_208:byte] != Mem0[es_123:di_122:byte] l0800_B029
// DataOut: ah bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -000C(16) Stack +0002(32)

l0800_B02B:
	branch Z_156 l0800_B002
// DataOut: ah cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B002:
	word16 v23_147 = wLoc06_108 + 0x0004
	wLoc06_108 = v23_147
	di_100 = v23_147 (alias)
// DataOut: ah cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Stack +0002(32)

l0800_B030:
	ax_188 = di_122 + 0x0001
	word16 dx_191
	*dxOut = es_123
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_AFFC:
	word16 dx_74
	*dxOut = 0x0000
	ax_188 = 0x0000
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp
// LocalsOut: fp(16)

l0800_B035:
	return ax_188
// DataOut: ax dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> dx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> di:<invalid> bx:<invalid> Sequence ds:si:<invalid> si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp

fn0800_AFCB_exit:
// DataOut: ax dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> dx:<invalid> di:di si:si al:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> Sequence ds:si:<invalid> ds:ds -12(fp):ds -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):es -2(fp):bp



void fn0800_B03B(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl ds dx eax ecx edi edx es esi rax rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_B03B_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B03B:
	word16 di_16 = (word16) ptrArg02
	selector es_17 = SLICE(ptrArg02, selector, 16)
	selector ds_20 = SLICE(ptrArg06, selector, 16)
	word16 si_21 = (word16) ptrArg06
	word16 cx_24 = wArg0A >>u 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B04E:
	branch cx_24 == 0x0000 l0800_B050
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B050:
	branch wArg0A >>u 0x0001 >=u 0x0000 l0800_B053
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B052:
	Mem53[es_17:di_16:byte] = Mem0[ds_20:si_21:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B053:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_B03B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:si di:di ds:ds ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_B04E_1:
	Mem35[es_17:di_16:word16] = Mem0[ds_20:si_21:word16]
	si_21 = si_21 + 0x0002
	di_16 = di_16 + 0x0002
	cx_24 = cx_24 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> Sequence ds:si:<invalid> cx:<invalid> si:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B05F(segptr32 ptrArg02, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(8)
fn0800_B05F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(8)

l0800_B05F:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 cx_14 = wArg06
	word16 ax_19 = DPB(ax, bArg08, 8)
	branch (di_11 & 0x0001) == 0x0000 l0800_B079
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B075:
	branch wArg06 == 0x0000 l0800_B080
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B077:
	Mem52[ptrArg02:byte] = bArg08
	di_11 = di_11 + 0x0001
	cx_14 = wArg06 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B079:
	word16 cx_37 = cx_14 >>u 0x0001
	cx_44 = cx_37
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di + 0x0001 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07B:
	word16 cx_44
	branch cx_44 == 0x0000 l0800_B07D
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07D:
	branch cx_37 >=u 0x0000 l0800_B080
// DataOut: al di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B07F:
	Mem49[es_12:di_11:byte] = bArg08
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_B080:
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp

fn0800_B05F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:di -4(fp):di -2(fp):bp

l0800_B07B_1:
	Mem45[es_12:di_11:word16] = ax_19
	di_11 = di_11 + 0x0002
	cx_44 = cx_44 - 0x0001
// DataOut: al ax cx di ds es ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> cx:<invalid> al:<invalid> ah:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)



void fn0800_B083(word16 wArg02, word16 wArg04, byte bArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)
fn0800_B083_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(8) Stack +0008(16)

l0800_B083:
	fn0800_B05F(DPB(ptrLoc0A, wArg02, 0), wArg08, bArg06)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B083_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> dx:<invalid> ax:<invalid> es:<invalid> di:<invalid> cx:<invalid> ah:<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ax -2(fp):bp



void fn0800_B0A1(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0A1_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0A1:
	word16 ax_119
	byte dl_24
	branch fn0800_8F2F(wArg02, wArg08, wArg04, wArg06, out dl_24) l0800_B0BE
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0BE:
	ax_119 = 0x0000
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0B8:
	ax_119 = 0x0001
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_B0C1:
	selector ds_31 = SLICE(ptrArg02, selector, 16)
	word16 si_104 = (word16) ptrArg02
	word16 di_106 = (word16) ptrArg06
	selector es_36 = SLICE(ptrArg06, selector, 16)
	word16 cx_108 = wArg0A
	branch ax_119 == 0x0000 l0800_B0D4
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0CE:
	si_104 = si_104 + wArg0A - 0x0001
	di_106 = di_106 + wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0D4:
	branch (di_106 & 0x0001) == 0x0000 l0800_B0DE
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DA:
	branch wArg0A == 0x0000 l0800_B0ED
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DC:
	Mem103[es_36:di_106:byte] = Mem0[ds_31:si_104:byte]
	si_104 = si_104 + 0x0001
	di_106 = di_106 + 0x0001
	cx_108 = wArg0A - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0DE:
	word16 si_72 = si_104 - ax_119
	word16 di_74 = di_106 - ax_119
	word16 cx_76 = cx_108 >>u 0x0001
	cx_86 = cx_76
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E4:
	word16 cx_86
	branch cx_86 == 0x0000 l0800_B0E6
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E6:
	branch cx_76 >=u 0x0000 l0800_B0ED
// DataOut: ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0E8:
	Mem99[es_36:di_74 + ax_119:byte] = Mem0[ds_31:si_72 + ax_119:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B0ED:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B0A1_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:si di:di ds:ds ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_B0E4_1:
	Mem89[es_36:di_74:word16] = Mem0[ds_31:si_72:word16]
	si_72 = si_72 + 0x0002
	di_74 = di_74 + 0x0002
	cx_86 = cx_86 - 0x0001
// DataOut: ax cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> bx:<invalid> dx:<invalid> ax:<invalid> Sequence ds:si:<invalid> Sequence es:di:<invalid> si:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



selector fn0800_B0F3(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B0F3_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B0F3:
	fn0800_B0A1(DPB(ptrLoc0C, wArg06, 0), wArg08, DPB(ptrLoc08, wArg02, 0), wArg04, wArg0A)
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B0F3_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> ds:<invalid> si:<invalid> es:<invalid> di:<invalid> ch:<invalid> cl:<invalid> al:<invalid> ah:<invalid> bl:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B113(byte al, selector ds, word16 wArg02, segptr32 ptrArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah al ax ch cl cx dh dl ds dx eax ecx edx rax rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32)
fn0800_B113_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32)

l0800_B113:
	word16 ax_18
	branch msdos_create_truncate_file(wArg02, SLICE(ptrArg04, selector, 16), (word16) ptrArg04, out ax_18) l0800_B126
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B126:
	fn0800_8D2B(ds, ax_18)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B124:
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_B12A:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp

fn0800_B113_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> ah:0x3C Sequence ds:dx:<invalid> ds:ds al:0xFF ax:0xFFFF -4(fp):<invalid> -2(fp):bp



void fn0800_B12E(byte al, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut:
// Trashed: SCZO ah ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16)
fn0800_B12E_entry:
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_B12E:
	word16 ax_16
	msdos_write_file(wArg02, 0x0000, SEQ(ds, 0x0000), out ax_16)
	return
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B12E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> cx:0x0000 dx:0x0000 ah:0x40 -2(fp):bp



byte fn0800_B140(word16 si, word16 di, selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  di ds si
// LiveOut: al ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B140_entry:
	*dsOut = ds
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0012(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B140:
	word16 si_115 = wArg06
	branch (wArg06 & 0xC000) != 0x0000 l0800_B15C
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B154:
	si_115 = wArg06 | Mem0[ds:0x2512:word16] & 0xC000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B15C:
	word16 di_114
	byte al_289
	word16 ax_163 = fn0800_A53C(0x00, ds, DPB(ptrLoc10, wArg02, 0), 0x00, di)
	word16 wLoc04_158 = ax_163
	branch (si_115 & 0x0100) == 0x0000 l0800_B1F2
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B174:
	word16 di_273 = wArg08 & Mem0[ds:0x2514:word16]
	ax_163 = di_273
	branch (di_273 & 0x0180) != 0x0000 l0800_B186
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B17F:
	ax_163 = fn0800_8D2B(ds, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B186:
	word16 wLoc0C_287
	branch ax_163 != 0xFFFF l0800_B1AF
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AF:
	branch (si_115 & 0x0400) == 0x0000 l0800_B1F2
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1B5:
	wLoc0C_287 = 0x0050
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B18C:
	branch Mem0[ds:0x2516:word16] == 0x0002 l0800_B19D
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B19D:
	byte al_303
	word16 ax_302
	branch (di_273 & 0x0080) == 0x0000 l0800_B1A7
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A7:
	ax_302 = 0x0001
	al_303 = 0x01 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1A3:
	ax_302 = 0x0000
	al_303 = 0x00 (alias)
// DataOut: al ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1AA:
	wLoc04_158 = ax_302
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1BB:
	branch (si_115 & 0x00F0) == 0x0000 l0800_B1DD
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1DD:
	fn0800_B113(al_303, ds, ax_302, DPB(ptrLoc0E, wArg02, 0))
	di_114 = 0xFFFF
	branch false l0800_B265
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B1EF:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1C1:
	ptrLoc0E = DPB(ptrLoc0E, wArg02, 0) (alias)
	fn0800_B113(0x00, ds, 0x0000, ptrLoc0E)
	di_114 = 0xFFFF
	ax_163 = 0xFFFF
	branch false l0800_B1D6
// DataOut: al dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -000E(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1D6:
	fn0800_A57F(0xFF, ds, 0xFFFF)
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0012(16) Stack +0002(16) Stack +0004(16)

l0800_B1F2:
	fn0800_B2A0(ds, DPB(ptrLoc10, wArg02, 0), si_115)
	di_114 = ax_163
	branch ax_163 < 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -0006(16) Local -0008(16) Local -000A(16) Local -0010(16) Stack +0002(16) Stack +0004(16)

l0800_B205:
	word16 ax_194 = fn0800_A2A3(0x00, ds, ax_163, 0x0000, ptrLoc0A, wLoc06)
	byte al_195 = (byte) ax_194
	branch (ax_194 & 0x0080) == 0x0000 l0800_B237
// DataOut: al ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B237:
	branch (si_115 & 0x0200) == 0x0000 l0800_B241
// DataOut: al di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000E(16) Stack +0002(16) Stack +0004(16)

l0800_B23D:
	fn0800_B12E(al_195, ds, ax_163)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B216:
	si_115 = si_115 | 0x2000
	branch (si_115 & 0x8000) == 0x0000 l0800_B241
// DataOut: ax di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Local -000A(16) Stack +0002(16) Stack +0004(16)

l0800_B220:
	fn0800_A2A3(0x01, ds, ax_163, 0x0001, DPB(ptrLoc0E, ax_194 & 0x00FF | 0x0020, 0), di)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B241:
	branch (wLoc04_158 & 0x0001) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B248:
	branch (si_115 & 0x0100) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B24E:
	branch (si_115 & 0x00F0) == 0x0000 l0800_B265
// DataOut: di ds si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0) Stack +0002(16) Stack +0004(16)

l0800_B254:
	fn0800_A53C(0x01, ds, DPB(ptrLoc12, wArg02, 0), 0x01, 0x0001)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> ds:<invalid> dx:<invalid> ah:<invalid> al:<invalid> bx:<invalid> cx:<invalid> cl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B265:
	branch di_114 < 0x0000 l0800_B298
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B269:
	word16 ax_125
	branch (si_115 & 0x0300) == 0x0000 l0800_B274
// DataOut: di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B274:
	ax_125 = 0x0000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B26F:
	ax_125 = 0x1000
// DataOut: ax di dil ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(0)

l0800_B276:
	word16 ax_137
	word16 dx_129 = si_115 & 0xF8FF | ax_125
	branch (wLoc04_158 & 0x0001) == 0x0000 l0800_B28A
// DataOut: di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28A:
	ax_137 = 0x0100
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B286:
	ax_137 = 0x0000
// DataOut: ax di dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16)

l0800_B28D:
	Mem145[ds:(di_114 << 0x0001) + 0x24EA:word16] = dx_129 | ax_137
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B1D3:
// DataOut: dil ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:0xFFFF ax:0xFFFF cx:<invalid> ah:0xFF ds:<invalid> dx:<invalid> al:0xFF -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B298:
	al_289 = (byte) di_114 (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> cx:<invalid> ah:<invalid> al:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B193:
	wLoc0C_287 = Mem0[ds:0x2516:word16]
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -000C(16) Local -000E(16)

l0800_B197:
	al_289 = (byte) fn0800_8D2B(ds, wLoc0C_287) (alias)
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000C bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B29A:
	return al_289
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 si:<invalid> di:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B140_exit:
// DataOut: al ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si di:di ax:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> cl:<invalid> bx:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_B2A0(selector ds, segptr32 ptrArg02, word16 wArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut:
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: ax bp ds sp
// Stack args: Stack +0002(32) Stack +0006(16)
fn0800_B2A0_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16)

l0800_B2A0:
	byte al_17 = 0x01
	branch (wArg06 & 0x0002) != 0x0000 l0800_B2BB
// DataOut: al cx ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B1:
	al_17 = 0x02
	branch (wArg06 & 0x0004) != 0x0000 l0800_B2BB
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x01 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2B9:
	al_17 = 0x00
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:0x02 cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(8)

l0800_B2BB:
	word16 ax_31
	branch msdos_open_file(ptrArg02, al_17 | bArg06 & 0xF0, out ax_31) l0800_B2E7
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0006(16)

l0800_B2E7:
	fn0800_8D2B(ds, ax_31)
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2CD:
	Mem52[ds:(ax_31 << 0x0001) + 0x24EA:word16] = wArg06 & 0xB8FF | 0x8000
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:0x3D ds:ds -6(fp):ds -2(fp):bp
// LocalsOut: fp(16)

l0800_B2EB:
	return
// DataOut: si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp

fn0800_B2A0_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> cx:<invalid> Sequence ds:dx:<invalid> cl:<invalid> ah:<invalid> ds:ds ax:<invalid> bx:ax << 0x0001 -6(fp):<invalid> -4(fp):ax -2(fp):bp



word16 fn0800_B2EF(selector ds, word16 wArg02, word16 wArg04, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_B2EF_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_B2EF:
	word16 di_28
	return fn0800_9828(fp - 0x0002, ds, fp + 0x0006, DPB(ptrLoc0C, wArg02, 0), wArg04, out di_28)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B2EF_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):fp + 0x0006 -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x236C -6(fp):ds -4(fp):0xB4BE -2(fp):bp



word16 fn0800_B30A(selector ds, byte bArg02, segptr32 ptrArg04, word16 wArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B30A_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B30A:
	Mem12[ptrArg04:word16] = Mem0[ptrArg04:word16] - 0x0001
	selector ds_29
	return fn0800_B324(ds, (byte) (int16) bArg02, DPB(ptrLoc06, (word16) ptrArg04, 0), wArg06, out ds_29)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_B30A_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> al:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):bx -4(fp):<invalid> -2(fp):bp



word16 fn0800_B324(selector ds, byte bArg02, segptr32 ptrArg04, selector psegArg06, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(8) Stack +0004(32) Stack +0006(16)
fn0800_B324_entry:
	*dsOut = ds
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0002(8) Stack +0004(32) Stack +0006(16)

l0800_B324:
	word16 ax_133
	word16 ax_39
	Mem11[ds:0x4EE6:byte] = bArg02
	word16 bx_15 = (word16) ptrArg04
	branch Mem11[ptrArg04:word16] >= 0xFFFF l0800_B389
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B389:
	branch (Mem11[ptrArg04 + 0x0002:word16] & 0x0090) != 0x0000 l0800_B39C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B394:
	branch (Mem11[ptrArg04 + 0x0002:word16] & 0x0002) != 0x0000 l0800_B3A6
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3A6:
	Mem174[ptrArg04 + 0x0002:word16] = Mem11[ptrArg04 + 0x0002:word16] | 0x0100
	word16 bx_171 = (word16) ptrArg04
	branch Mem174[ptrArg04 + 0x0006:word16] == 0x0000 l0800_B421
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B421:
	selector es_245 = SLICE(ptrArg04, selector, 16)
	branch (Mem174[ds:((int16) Mem174[ptrArg04 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B44C
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16)

l0800_B435:
	word16 ax_347 = (int16) Mem174[es_245:wArg04 + 0x0004:byte]
	word16 dx_351
	fn0800_8E29((byte) ax_347, ds, ax_347, 0x0000, 0x0000, 0x02, out dx_351)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B44C:
	branch Mem174[ds:0x4EE6:byte] != 0x0A l0800_B478
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B453:
	branch (Mem174[ptrArg04 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B478
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B45E:
	word16 ax_325 = (int16) Mem174[ptrArg04 + 0x0004:byte]
	ptrLoc0A = DPB(ptrLoc0A, 0x26AE, 0) (alias)
	byte dl_329
	ax_133 = fn0800_C779((byte) ax_325, ds, ax_325, ptrLoc0A, 0x0001, out dl_329)
	branch ax_133 != 0x0001 l0800_B495
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -12(fp):<invalid> -10(fp):0x0000 -8(fp):0x0000 -6(fp):0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B478:
	word16 ax_300 = (int16) Mem174[ptrArg04 + 0x0004:byte]
	byte dl_304
	ax_133 = fn0800_C779((byte) ax_300, ds, ax_300, DPB(ptrLoc0A, 0x4EE6, 0), 0x0001, out dl_304)
	branch ax_133 == 0x0001 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B495:
	branch (Mem174[ptrArg04 + 0x0002:word16] & 0x0200) != 0x0000 l0800_B4A3
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B4A0:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(32)

l0800_B3B6:
	branch Mem174[ptrArg04:word16] == 0x0000 l0800_B3C9
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3BC:
	ptrLoc08 = DPB(ptrLoc08, bx_171, 0) (alias)
	byte dl_232
	branch fn0800_A6B7(ds, ptrLoc08, psegArg06, out dl_232, out ds) != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(32) Stack +0006(16)

l0800_B3C9:
	Mem191[ptrArg04:word16] = -Mem174[ptrArg04 + 0x0006:word16]
	ax_133 = Mem191[ptrArg04 + 0x000E:word16]
	word16 si_193 = Mem191[ptrArg04 + 0x000C:word16]
	Mem195[ptrArg04 + 0x000C:word16] = Mem191[ptrArg04 + 0x000C:word16] + 0x0001
	Mem198[ax_133:si_193:byte] = Mem195[ds:0x4EE6:byte]
	branch (Mem198[psegArg06:(word16) ptrArg04 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B3F8
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3F8:
	branch Mem198[ds:0x4EE6:byte] == 0x0A l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B3FF:
	branch Mem198[ds:0x4EE6:byte] == 0x0D l0800_B409
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B409:
	byte dl_213
	selector ds_214
	word16 ax_215 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_213, out ds_214)
	ax_133 = ax_215
	branch ax_215 != 0x0000 l0800_B41B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B41B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B418:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B406:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B3F5:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> dl:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):bx -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B39C:
	Mem164[ptrArg04 + 0x0002:word16] = Mem11[ptrArg04 + 0x0002:word16] | 0x0010
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x0001 -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B337:
	Mem93[ptrArg04:word16] = Mem11[ptrArg04:word16] + 0x0001
	ax_133 = Mem93[ptrArg04 + 0x000E:word16]
	word16 si_95 = Mem93[ptrArg04 + 0x000C:word16]
	Mem97[ptrArg04 + 0x000C:word16] = Mem93[ptrArg04 + 0x000C:word16] + 0x0001
	Mem100[ax_133:si_95:byte] = Mem97[ds:0x4EE6:byte]
	branch (Mem100[psegArg06:bx_15 + 0x0002:word16] & 0x0008) != 0x0000 l0800_B35D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B35D:
	branch Mem100[ds:0x4EE6:byte] == 0x0A l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B364:
	branch Mem100[ds:0x4EE6:byte] == 0x0D l0800_B36E
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(16) Stack +0004(16) Stack +0006(16)

l0800_B36E:
	byte dl_126
	selector ds_127
	word16 ax_128 = fn0800_A6B7(ds, DPB(ptrLoc08, wArg04, 0), psegArg06, out dl_126, out ds_127)
	ax_133 = ax_128
	branch ax_128 != 0x0000 l0800_B380
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B380:
	ax_39 = 0xFFFF
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B37D:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B36B:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B35A:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A3:
	ax_39 = DPB(ax_133, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B4A8:
	return ax_39
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_B324_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp al:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:si dl:<invalid> es:<invalid> ah:<invalid> cx:<invalid> bx:<invalid> dx:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



word16 fn0800_B4BE(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)
fn0800_B4BE_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(32) Stack +000A(16)

l0800_B4BE:
	word16 ax_108
	word16 di_136 = wArg06
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0008) == 0x0000 l0800_B504
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(32) Stack +000A(16)

l0800_B504:
	word16 bx_178 = (word16) ptrArg02
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0040) != 0x0000 l0800_B512
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B512:
	branch Mem0[ptrArg02 + 0x0006:word16] != 0x0000 l0800_B51C
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B51C:
	branch Mem0[ptrArg02 + 0x0006:word16] >=u wArg06 l0800_B583
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B583:
	branch Mem0[ptrArg02:word16] + wArg06 < 0x0000 l0800_B5B1
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B58D:
	branch Mem0[ptrArg02:word16] != 0x0000 l0800_B59F
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B59F:
	byte dl_501
	selector ds_502
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, out dl_501, out ds_502) == 0x0000 l0800_B5B1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5AE:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B593:
	Mem493[ptrArg02:word16] = 0xFFFF - Mem0[ptrArg02 + 0x0006:word16]
// DataOut: di ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5B1:
	fn0800_B03B(DPB(ptrLoc12, Mem0[ptrArg02 + 0x000C:word16], 0), Mem0[ptrArg02 + 0x000E:word16], DPB(ptrLoc0E, wArg08, 0), wArg06)
	Mem484[ptrArg02:word16] = Mem0[ptrArg02:word16] + wArg06
	Mem486[ptrArg02 + 0x000C:word16] = Mem484[ptrArg02 + 0x000C:word16] + wArg06
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> cx:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B522:
	branch Mem0[ptrArg02:word16] == 0x0000 l0800_B535
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -000E(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B528:
	byte dl_434
	branch fn0800_A6B7(ds, DPB(ptrLoc0C, bx_178, 0), wArg04, out dl_434, out ds) != 0x0000 l0800_B4F5
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B535:
	selector es_373 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B560
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B549:
	word16 ax_420 = (int16) Mem0[es_373:wArg02 + 0x0004:byte]
	word16 dx_424
	fn0800_8E29((byte) ax_420, ds, ax_420, 0x0000, 0x0000, 0x02, out dx_424)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> -12(fp):bx -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B560:
	word16 ax_398 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	byte dl_402
	branch fn0800_C779((byte) ax_398, ds, ax_398, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_402) <u wArg06 l0800_B57D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B57D:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B57A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> al:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B519:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5DB:
	selector es_305 = SLICE(ptrArg02, selector, 16)
	branch (Mem0[ds:((int16) Mem0[ptrArg02 + 0x0004:byte] << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_B606
// DataOut: di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B5EF:
	word16 ax_352 = (int16) Mem0[es_305:wArg02 + 0x0004:byte]
	word16 dx_356
	fn0800_8E29((byte) ax_352, ds, ax_352, 0x0000, 0x0000, 0x02, out dx_356)
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0012(16) Stack +0002(32) Stack +0008(16) Stack +000A(16)

l0800_B606:
	word16 ax_330 = (int16) Mem0[ptrArg02 + 0x0004:byte]
	byte dl_334
	branch fn0800_C779((byte) ax_330, ds, ax_330, DPB(ptrLoc0E, wArg08, 0), wArg06, out dl_334) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:0x42 cx:<invalid> dx:<invalid> -16(fp):<invalid> -14(fp):0x0000 -12(fp):0x0000 -10(fp):0x0002 -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B620:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B50F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B625:
	branch Mem0[ptrArg02 + 0x0006:word16] == 0x0000 l0800_B680
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Local -0012(16) Stack +0002(32) Stack +0004(16) Stack +0008(16) Stack +000A(16)

l0800_B680:
	byte dl_295
	selector ds_296
	branch fn0800_C632(ds, (int16) Mem0[ptrArg02 + 0x0004:byte], wArg08, wArg0A, wArg06, out dl_295, out ds_296) >=u wArg06 l0800_B69D
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_B69A:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B62F:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B677:
	di_136 = di_136 - 0x0001
	branch di_136 != 0x0000 l0800_B631
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B631:
	word16 ax_232
	word16 v19_216 = Mem0[ptrArg02:word16] + 0x0001
	Mem217[ptrArg02:word16] = v19_216
	branch v19_216 >= 0x0000 l0800_B659
// DataOut: bx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B659:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	ax_232 = fn0800_B30A(ds, Mem217[ptrArg08:byte], ptrLoc0C, wArg04, out ds)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B639:
	word16 ax_239 = Mem217[ptrArg02 + 0x000E:word16]
	word16 si_240 = Mem217[ptrArg02 + 0x000C:word16]
	Mem242[ptrArg02 + 0x000C:word16] = Mem217[ptrArg02 + 0x000C:word16] + 0x0001
	Mem251[ax_239:si_240:byte] = Mem242[ptrArg08:byte]
	ax_232 = DPB(ax_239, 0x00, 8) (alias)
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B66F:
	branch ax_232 != 0xFFFF l0800_B677
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(32) Stack +0004(16) Stack +0008(32)

l0800_B674:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B67E:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> si:<invalid> dl:<invalid> es:<invalid> al:<invalid> ah:<invalid> bx:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B4D7:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4FA:
	di_136 = di_136 - 0x0001
	branch di_136 != 0x0000 l0800_B4D9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4D9:
	ptrLoc0C = DPB(ptrLoc0C, wArg02, 0) (alias)
	selector ds_512 = ds
	branch fn0800_B324(ds_512, (byte) (int16) Mem0[ptrArg08:byte], ptrLoc0C, wArg04, out ds) != 0xFFFF l0800_B4FA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0010(16) Stack +0002(16) Stack +0004(16) Stack +0008(32)

l0800_B4F5:
	ax_108 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B501:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16)

l0800_B69D:
	ax_108 = wArg06
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> es:<invalid> si:<invalid> dl:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>
// LocalsOut: fp(16)

l0800_B6A0:
	return ax_108
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 di:<invalid> Sequence es:bx:<invalid> ax:<invalid> al:<invalid> es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>

fn0800_B4BE_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di Sequence es:bx:<invalid> ax:<invalid> al:<invalid> si:si es:<invalid> bx:<invalid> dl:<invalid> ah:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):di -6(fp):si -4(fp):<invalid> -2(fp):bp 8(fp):<invalid>



word16 fn0800_B6A8(selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil ds eax ecx edi es esi rax rcx rdi rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_B6A8_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_B6A8:
	word16 ax_30
	word16 cx_17 = Mem0[ds:0x4EE8:word16]
	word16 di_20 = (word16) ptrArg02
	selector es_21 = SLICE(ptrArg02, selector, 16)
	selector ds_24 = SLICE(ptrArg06, selector, 16)
	word16 si_25 = (word16) ptrArg06
	word16 cx_26 = cx_17 >>u 0x0001
	branch cx_17 >>u 0x0001 >=u 0x0000 l0800_B6C6
// DataOut: cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_B6BD:
	byte al_56 = Mem0[ptrArg02:byte]
	Mem60[ptrArg02:byte] = Mem0[ptrArg06:byte]
	Mem65[ptrArg06:byte] = al_56
	ax_30 = DPB(ax, al_56, 0) (alias)
	si_25 = si_25 + 0x0001
	di_20 = di_20 + 0x0001
	branch cx_17 >>u 0x0001 == 0x0000 l0800_B6CF
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B6C6:
	ax_30 = Mem0[es_21:di_20:word16]
	Mem49[es_21:di_20:word16] = Mem0[ds_24:si_25:word16]
	si_25 = si_25 + 0x0002
	Mem54[ds_24:si_25 - 0x0002:word16] = ax_30
	di_20 = di_20 + 0x0002
	cx_26 = cx_26 - 0x0001
	branch cx_26 != 0x0000 l0800_B6C6
// DataOut: ax cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:<invalid> di:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B6CF:
	return ax_30
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:<invalid> di:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_B6A8_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp cx:<invalid> Sequence es:di:<invalid> Sequence ds:si:<invalid> al:<invalid> si:si di:di ax:<invalid> ds:ds -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp



selector fn0800_B6D6(word16 bp, selector ds, word16 wArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(16)
fn0800_B6D6_entry:
// DataOut: bp ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16)

l0800_B6D6:
	word16 bp_390 = fp - 0x0002
	word16 sp_11 = fp - 0x001A
	word16 si_15 = wArg02
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_B6E1:
	branch si_15 >u 0x0002 l0800_B726
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B726:
	word16 bx_142 = Mem0[ss:bp_390 + 0x0006:word16] + (word16) (Mem0[ds:0x4EE8:word16] *s (si_15 - 0x0001))
	Mem143[ss:bp_390 - 0x0006:word16] = Mem0[ss:bp_390 + 0x0008:word16]
	Mem144[ss:bp_390 - 0x0008:word16] = bx_142
	word16 ax_148 = (word16) (Mem144[ds:0x4EE8:word16] *s (si_15 >>u 0x0001))
	word16 dx_149 = Mem144[ss:bp_390 + 0x0008:word16]
	word16 bx_151 = Mem144[ss:bp_390 + 0x0006:word16] + ax_148
	Mem153[ss:bp_390 - 0x0002:word16] = dx_149
	Mem154[ss:bp_390 - 0x0004:word16] = bx_151
	word16 sp_156 = sp_11 - 0x0002
	Mem157[ss:sp_156:word16] = Mem154[ss:bp_390 - 0x0006:word16]
	Mem160[ss:sp_156 - 0x0002:word16] = Mem157[ss:bp_390 - 0x0008:word16]
	Mem163[ss:sp_156 - 0x0004:word16] = Mem160[ss:bp_390 - 0x0002:word16]
	Mem165[ss:sp_156 - 0x0006:word16] = bx_151
	word16 sp_166
	word16 bp_167
	selector ss_168
	byte SCZO_169
	word16 si_170
	word16 di_171
	byte CZ_172
	byte Z_173
	word16 ax_174
	byte SZO_175
	selector ds_176
	word16 dx_177
	word16 bx_178
	selector cs_179
	byte C_180
	byte SO_181
	call SEQ(cs, Mem165[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_148,bp_40,bx_151,C_36,cs_29,CZ_43,di_38,ds_32,dx_149,SCZO_152,si_39,SO_28,sp_164,ss_34,SZO_35,wLoc02_4,wLoc18_10,wLoc1A_13,Z_33
		defs: ax_174,bp_167,bx_178,C_180,cs_179,CZ_172,di_171,ds_176,dx_177,SCZO_169,si_170,SO_181,sp_166,ss_168,SZO_175,Z_173
	branch ax_174 <= 0x0000 l0800_B775
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B766:
	Mem651[ss_168:sp_166 + 0x0006:word16] = Mem165[ss_168:bp_167 - 0x0002:word16]
	Mem654[ss_168:sp_166 + 0x0004:word16] = Mem651[ss_168:bp_167 - 0x0004:word16]
	Mem657[ss_168:sp_166 + 0x0002:word16] = Mem654[ss_168:bp_167 - 0x0006:word16]
	Mem660[ss_168:sp_166:word16] = Mem657[ss_168:bp_167 - 0x0008:word16]
	fn0800_B6A8(ds_176, ptrArg00, ptrArg04)
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B775:
	word16 sp_590
	word16 sp_234
	Mem190[ss_168:sp_166 + 0x0006:word16] = Mem165[ss_168:bp_167 + 0x0008:word16]
	Mem193[ss_168:sp_166 + 0x0004:word16] = Mem190[ss_168:bp_167 + 0x0006:word16]
	Mem196[ss_168:sp_166 + 0x0002:word16] = Mem193[ss_168:bp_167 - 0x0002:word16]
	Mem199[ss_168:sp_166:word16] = Mem196[ss_168:bp_167 - 0x0004:word16]
	word16 sp_200
	byte SCZO_203
	word16 di_205
	byte CZ_206
	byte Z_207
	word16 ax_208
	byte SZO_209
	word16 dx_211
	word16 bx_212
	byte C_214
	byte SO_215
	selector cs_213
	selector ss_202
	word16 si_204
	word16 bp_201
	call SEQ(cs_179, Mem199[ds_176:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_183,bp_167,bx_178,C_186,cs_179,CZ_172,di_171,ds_176,dx_177,SCZO_169,si_170,SO_181,sp_198,ss_168,SZO_185,wLoc02_4,wLoc18_10,wLoc1A_13,Z_173
		defs: ax_208,bp_201,bx_212,C_214,cs_213,CZ_206,di_205,ds_210,dx_211,SCZO_203,si_204,SO_215,sp_200,ss_202,SZO_209,Z_207
	branch ax_208 <= 0x0000 l0800_B79A
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B79A:
	Mem607[ss_202:sp_200 + 0x0006:word16] = Mem199[ss_202:bp_201 - 0x0006:word16]
	Mem610[ss_202:sp_200 + 0x0004:word16] = Mem607[ss_202:bp_201 - 0x0008:word16]
	Mem613[ss_202:sp_200 + 0x0002:word16] = Mem610[ss_202:bp_201 + 0x0008:word16]
	Mem616[ss_202:sp_200:word16] = Mem613[ss_202:bp_201 + 0x0006:word16]
	word16 sp_617
	byte SCZO_620
	word16 di_622
	byte CZ_623
	byte Z_624
	word16 ax_625
	byte SZO_626
	word16 dx_628
	word16 bx_629
	byte C_631
	byte SO_632
	call SEQ(cs_213, Mem616[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_217,bp_201,bx_212,C_220,cs_213,CZ_206,di_205,ds_210,dx_211,SCZO_203,si_204,SO_215,sp_615,ss_202,SZO_219,wLoc02_4,wLoc18_10,wLoc1A_13,Z_207
		defs: ax_625,bp_618,bx_629,C_631,cs_630,CZ_623,di_622,ds_627,dx_628,SCZO_620,si_621,SO_632,sp_617,ss_619,SZO_626,Z_624
	sp_234 = sp_617 + 0x0008
	branch ax_625 <= 0x0000 l0800_B7C0
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7B1:
	Mem639[ss_202:sp_617 + 0x0006:word16] = Mem616[ss_202:bp_201 + 0x0008:word16]
	Mem642[ss_202:sp_617 + 0x0004:word16] = Mem639[ss_202:bp_201 + 0x0006:word16]
	Mem645[ss_202:sp_617 + 0x0002:word16] = Mem642[ss_202:bp_201 - 0x0006:word16]
	Mem648[ss_202:sp_617:word16] = Mem645[ss_202:bp_201 - 0x0008:word16]
	sp_590 = sp_617
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B78C:
	Mem595[ss_202:sp_200 + 0x0006:word16] = Mem199[ss_202:bp_201 - 0x0002:word16]
	Mem598[ss_202:sp_200 + 0x0004:word16] = Mem595[ss_202:bp_201 - 0x0004:word16]
	Mem601[ss_202:sp_200 + 0x0002:word16] = Mem598[ss_202:bp_201 + 0x0008:word16]
	Mem604[ss_202:sp_200:word16] = Mem601[ss_202:bp_201 + 0x0006:word16]
	sp_590 = sp_200
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7BD:
	fn0800_B6A8(ds, ptrArg00, ptrArg04)
	sp_234 = sp_590 + 0x0008
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7C0:
	branch si_204 != 0x0003 l0800_B7D4
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7D4:
	word16 ax_249 = Mem199[ss_202:bp_201 + 0x0008:word16]
	word16 dx_251 = Mem199[ss_202:bp_201 + 0x0006:word16] + Mem199[ds:0x4EE8:word16]
	Mem254[ss_202:bp_201 - 0x000A:word16] = ax_249
	Mem255[ss_202:bp_201 - 0x000C:word16] = dx_251
	Mem256[ss_202:bp_201 - 0x0002:word16] = ax_249
	Mem257[ss_202:bp_201 - 0x0004:word16] = dx_251
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B813:
	word16 sp_263 = sp_234 - 0x0002
	Mem264[ss_202:sp_263:word16] = Mem257[ss_202:bp_201 + 0x0008:word16]
	Mem267[ss_202:sp_263 - 0x0002:word16] = Mem264[ss_202:bp_201 + 0x0006:word16]
	Mem270[ss_202:sp_263 - 0x0004:word16] = Mem267[ss_202:bp_201 - 0x0002:word16]
	Mem273[ss_202:sp_263 - 0x0006:word16] = Mem270[ss_202:bp_201 - 0x0004:word16]
	word16 sp_274
	byte SCZO_277
	word16 si_278
	word16 di_279
	byte CZ_280
	byte Z_281
	word16 ax_282
	byte SZO_283
	selector ds_284
	word16 dx_285
	word16 bx_286
	selector cs_287
	byte C_288
	byte SO_289
	call SEQ(cs_213, Mem273[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_249,bp_260,bx_223,C_229,cs_222,CZ_226,di_231,ds_225,dx_251,SCZO_253,si_232,SO_221,sp_272,ss_259,SZO_228,wLoc02_4,wLoc18_10,wLoc1A_13,Z_236
		defs: ax_282,bp_275,bx_286,C_288,cs_287,CZ_280,di_279,ds_284,dx_285,SCZO_277,si_278,SO_289,sp_274,ss_276,SZO_283,Z_281
	sp_234 = sp_274 + 0x0008
	branch ax_282 <= 0x0000 l0800_B7EC
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7EC:
	branch ax_282 != 0x0000 l0800_B805
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7F0:
	Mem560[ss_202:sp_274 + 0x0006:word16] = Mem273[ss_202:bp_201 - 0x0002:word16]
	Mem563[ss_202:sp_274 + 0x0004:word16] = Mem560[ss_202:bp_201 - 0x0004:word16]
	Mem566[ss_202:sp_274 + 0x0002:word16] = Mem563[ss_202:bp_201 - 0x000A:word16]
	Mem569[ss_202:sp_274:word16] = Mem566[ss_202:bp_201 - 0x000C:word16]
	fn0800_B6A8(ds_284, ptrArg00, ptrArg04)
	Mem574[ss_202:bp_201 - 0x000C:word16] = Mem569[ss_202:bp_201 - 0x000C:word16] + Mem569[ds_284:0x4EE8:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B805:
	sp_234 = sp_274 + 0x0008
	branch Mem273[ss_202:bp_201 - 0x0004:word16] >=u Mem273[ss_202:bp_201 - 0x0008:word16] l0800_B883
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B80D:
	Mem556[ss_202:bp_201 - 0x0004:word16] = Mem273[ss_202:bp_201 - 0x0004:word16] + Mem273[ds_284:0x4EE8:word16]
// DataOut: ax bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B82C:
	word16 ax_453 = Mem273[ss_202:bp_201 - 0x0004:word16]
	branch ax_453 >=u Mem273[ss_202:bp_201 - 0x0008:word16] l0800_B87B
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B834:
	word16 sp_479 = sp_234 - 0x0002
	Mem480[ss_202:sp_479:word16] = Mem273[ss_202:bp_201 - 0x0006:word16]
	Mem483[ss_202:sp_479 - 0x0002:word16] = Mem480[ss_202:bp_201 - 0x0008:word16]
	Mem486[ss_202:sp_479 - 0x0004:word16] = Mem483[ss_202:bp_201 + 0x0008:word16]
	Mem489[ss_202:sp_479 - 0x0006:word16] = Mem486[ss_202:bp_201 + 0x0006:word16]
	word16 sp_490
	byte SCZO_493
	word16 si_494
	word16 di_495
	byte CZ_496
	byte Z_497
	word16 ax_498
	byte SZO_499
	selector ds_500
	word16 dx_501
	word16 bx_502
	selector cs_503
	byte C_504
	byte SO_505
	call SEQ(cs_287, Mem489[ds_284:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_453,bp_476,bx_286,C_456,cs_287,CZ_280,di_291,ds_284,dx_285,SCZO_455,si_278,SO_289,sp_488,ss_475,SZO_293,wLoc02_4,wLoc18_10,wLoc1A_13,Z_281
		defs: ax_498,bp_491,bx_502,C_504,cs_503,CZ_496,di_495,ds_500,dx_501,SCZO_493,si_494,SO_505,sp_490,ss_492,SZO_499,Z_497
	sp_234 = sp_490 + 0x0008
	branch ax_498 >= 0x0000 l0800_B855
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B855:
	Mem522[ss_202:sp_490 + 0x0006:word16] = Mem489[ss_202:bp_201 - 0x0002:word16]
	Mem525[ss_202:sp_490 + 0x0004:word16] = Mem522[ss_202:bp_201 - 0x0004:word16]
	Mem528[ss_202:sp_490 + 0x0002:word16] = Mem525[ss_202:bp_201 - 0x0006:word16]
	Mem531[ss_202:sp_490:word16] = Mem528[ss_202:bp_201 - 0x0008:word16]
	fn0800_B6A8(ds_500, ptrArg00, ptrArg04)
	sp_234 = sp_490 + 0x0008
	branch ax_498 == 0x0000 l0800_B87B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B868:
	word16 ax_538 = Mem531[ds_500:0x4EE8:word16]
	Mem540[ss_202:bp_201 - 0x0004:word16] = Mem531[ss_202:bp_201 - 0x0004:word16] + ax_538
	Mem542[ss_202:bp_201 - 0x0008:word16] = Mem540[ss_202:bp_201 - 0x0008:word16] - ax_538
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B84D:
	Mem514[ss_202:bp_201 - 0x0008:word16] = Mem489[ss_202:bp_201 - 0x0008:word16] - Mem489[ds_500:0x4EE8:word16]
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B873:
	branch Mem514[ss_202:bp_201 - 0x0004:word16] <u Mem514[ss_202:bp_201 - 0x0008:word16] l0800_B834
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B87B:
	branch Mem273[ss_202:bp_201 - 0x0004:word16] <u Mem273[ss_202:bp_201 - 0x0008:word16] l0800_B813
// DataOut: ax bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B883:
	word16 sp_300 = sp_234 - 0x0002
	Mem301[ss_202:sp_300:word16] = Mem273[ss_202:bp_201 + 0x0008:word16]
	Mem304[ss_202:sp_300 - 0x0002:word16] = Mem301[ss_202:bp_201 + 0x0006:word16]
	Mem307[ss_202:sp_300 - 0x0004:word16] = Mem304[ss_202:bp_201 - 0x0002:word16]
	Mem310[ss_202:sp_300 - 0x0006:word16] = Mem307[ss_202:bp_201 - 0x0004:word16]
	word16 sp_311
	word16 bp_312
	byte SCZO_314
	word16 si_315
	word16 di_316
	byte CZ_317
	byte Z_318
	word16 ax_319
	byte SZO_320
	selector ds_321
	word16 dx_322
	word16 bx_323
	byte C_325
	byte SO_326
	call SEQ(cs_287, Mem310[ds_284:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_292,bp_297,bx_286,C_294,cs_287,CZ_280,di_291,ds_284,dx_285,SCZO_277,si_278,SO_289,sp_309,ss_296,SZO_293,wLoc02_4,wLoc18_10,wLoc1A_13,Z_281
		defs: ax_319,bp_312,bx_323,C_325,cs_324,CZ_317,di_316,ds_321,dx_322,SCZO_314,si_315,SO_326,sp_311,ss_313,SZO_320,Z_318
	branch ax_319 > 0x0000 l0800_B8AA
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B89A:
	word16 dx_449 = Mem310[ss:bp_312 - 0x0004:word16] + Mem310[ds_321:0x4EE8:word16]
	Mem451[ss:bp_312 - 0x0002:word16] = Mem310[ss:bp_312 - 0x0002:word16]
	Mem452[ss:bp_312 - 0x0004:word16] = dx_449
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8AA:
	word16 dx_333 = Mem310[ss:bp_312 - 0x0004:word16] - Mem310[ds_321:0x4EE8:word16]
	Mem335[ss:bp_312 - 0x0012:word16] = Mem310[ss:bp_312 - 0x0002:word16]
	Mem336[ss:bp_312 - 0x0014:word16] = dx_333
	word16 dx_338 = Mem336[ss:bp_312 + 0x0006:word16]
	Mem339[ss:bp_312 - 0x000E:word16] = Mem336[ss:bp_312 + 0x0008:word16]
	Mem340[ss:bp_312 - 0x0010:word16] = dx_338
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8E0:
	branch Mem340[ss:bp_312 - 0x0010:word16] >=u Mem340[ss:bp_312 - 0x000C:word16] l0800_B8F0
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8E8:
	branch Mem340[ss:bp_312 - 0x0014:word16] >=u Mem340[ss:bp_312 - 0x000C:word16] l0800_B8C8
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8C8:
	Mem429[ss:sp_311 + 0x0006:word16] = Mem340[ss:bp_312 - 0x000E:word16]
	Mem432[ss:sp_311 + 0x0004:word16] = Mem429[ss:bp_312 - 0x0010:word16]
	Mem435[ss:sp_311 + 0x0002:word16] = Mem432[ss:bp_312 - 0x0012:word16]
	Mem438[ss:sp_311:word16] = Mem435[ss:bp_312 - 0x0014:word16]
	fn0800_B6A8(ds_321, ptrArg00, ptrArg04)
	word16 ax_441 = Mem438[ds_321:0x4EE8:word16]
	Mem443[ss:bp_312 - 0x0010:word16] = Mem438[ss:bp_312 - 0x0010:word16] + ax_441
	Mem445[ss:bp_312 - 0x0014:word16] = Mem443[ss:bp_312 - 0x0014:word16] - ax_441
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B8F0:
	Mem347[ss:sp_311 + 0x0006:word16] = 0x0000
	Mem350[ss:sp_311 + 0x0004:word16] = Mem347[ds_321:0x4EE8:word16]
	word16 ax_353 = Mem350[ss:bp_312 - 0x0004:word16] - Mem350[ss:bp_312 - 0x000C:word16]
	Mem359[ss:sp_311 + 0x0002:word16] = 0x0000 - (ax_353 <u 0x0000)
	Mem361[ss:sp_311:word16] = ax_353
	word16 dx_362
	word16 bp_363
	word16 si_364
	word16 di_365
	word16 ax_366 = fn0800_8BBB(bp_312, si_315, di_316, bp, out dx_362, out bp_363, out si_364, out di_365)
	Mem370[ss:sp_311 - 0x0002:word16] = 0x0000
	Mem373[ss:sp_311 - 0x0004:word16] = Mem370[ds_321:0x4EE8:word16]
	word16 dx_380 = Mem373[ss:bp_363 + 0x0006:word16] + (word16) (Mem373[ds_321:0x4EE8:word16] *s si_364) - Mem373[ss:bp_363 - 0x0004:word16]
	Mem386[ss:sp_311 - 0x0006:word16] = 0x0000 - (dx_380 <u 0x0000)
	Mem388[ss:sp_311 - 0x0008:word16] = dx_380
	word16 dx_389
	word16 si_391
	word16 di_392
	word16 ax_393 = fn0800_8BBB(bp_363, si_364, ax_366, bp, out dx_389, out bp_390, out si_391, out di_392)
	si_15 = ax_393
	branch ax_393 >=u di_392 l0800_B93D
// DataOut: ax bp di ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B93D:
	Mem412[ss:sp_311 - 0x000A:word16] = Mem388[ss:bp_390 + 0x0008:word16]
	Mem415[ss:sp_311 - 0x000C:word16] = Mem412[ss:bp_390 + 0x0006:word16]
	Mem417[ss:sp_311 - 0x000E:word16] = di_392
	ds = fn0800_B6D6(bp_390, ds_321, wArg00)
	word16 dx_421 = Mem417[ss:bp_390 - 0x0004:word16]
	Mem422[ss:bp_390 + 0x0008:word16] = Mem417[ss:bp_390 - 0x0002:word16]
	Mem423[ss:bp_390 + 0x0006:word16] = dx_421
	sp_11 = sp_311 - 0x0008
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B92E:
	Mem400[ss:sp_311 - 0x000A:word16] = Mem388[ss:bp_390 - 0x0002:word16]
	Mem403[ss:sp_311 - 0x000C:word16] = Mem400[ss:bp_390 - 0x0004:word16]
	Mem405[ss:sp_311 - 0x000E:word16] = ax_393
	ds = fn0800_B6D6(bp_390, ds_321, wArg00)
	sp_11 = sp_311 - 0x0008
	si_15 = di_392
// DataOut: bp ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B7C5:
	word16 sp_238 = sp_234 - 0x0002
	Mem239[ss_202:sp_238:word16] = Mem199[ss_202:bp_201 + 0x0008:word16]
	Mem242[ss_202:sp_238 - 0x0002:word16] = Mem239[ss_202:bp_201 + 0x0006:word16]
	Mem245[ss_202:sp_238 - 0x0004:word16] = Mem242[ss_202:bp_201 - 0x0002:word16]
	Mem248[ss_202:sp_238 - 0x0006:word16] = Mem245[ss_202:bp_201 - 0x0004:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B6E6:
	branch si_15 == 0x0002 l0800_B6EE
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B6EE:
	word16 ax_88 = Mem0[ss:bp_390 + 0x0008:word16]
	word16 dx_90 = Mem0[ss:bp_390 + 0x0006:word16] + Mem0[ds:0x4EE8:word16]
	Mem92[ss:bp_390 - 0x0006:word16] = ax_88
	Mem93[ss:bp_390 - 0x0008:word16] = dx_90
	word16 sp_94 = sp_11 - 0x0002
	Mem95[ss:sp_94:word16] = ax_88
	Mem97[ss:sp_94 - 0x0002:word16] = dx_90
	Mem100[ss:sp_94 - 0x0004:word16] = Mem97[ss:bp_390 + 0x0008:word16]
	Mem103[ss:sp_94 - 0x0006:word16] = Mem100[ss:bp_390 + 0x0006:word16]
	word16 sp_104
	word16 bp_105
	selector ss_106
	byte SCZO_107
	word16 si_108
	word16 di_109
	byte CZ_110
	byte Z_111
	word16 ax_112
	byte SZO_113
	word16 dx_115
	word16 bx_116
	selector cs_117
	byte C_118
	byte SO_119
	call SEQ(cs, Mem103[ds:0x4EEA:word16]) (retsize: 2; depth: 2)
		uses: ax_88,bp_40,bx_30,C_36,cs_29,CZ_43,di_38,ds_32,dx_90,SCZO_91,si_39,SO_28,sp_102,ss_34,SZO_35,wLoc02_4,wLoc18_10,wLoc1A_13,Z_87
		defs: ax_112,bp_105,bx_116,C_118,cs_117,CZ_110,di_109,ds_114,dx_115,SCZO_107,si_108,SO_119,sp_104,ss_106,SZO_113,Z_111
	branch ax_112 > 0x0000 l0800_B714
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B714:
	Mem126[ss_106:sp_104 + 0x0006:word16] = Mem103[ss_106:bp_105 + 0x0008:word16]
	Mem129[ss_106:sp_104 + 0x0004:word16] = Mem126[ss_106:bp_105 + 0x0006:word16]
	Mem132[ss_106:sp_104 + 0x0002:word16] = Mem129[ss_106:bp_105 - 0x0006:word16]
	Mem135[ss_106:sp_104:word16] = Mem132[ss_106:bp_105 - 0x0008:word16]
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: Local -0002(16)

l0800_B720:
	fn0800_B6A8(ds, ptrArg00, ptrArg04)
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B711:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> Sequence dx:ax:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B6EB:
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> Sequence dx:ax:<invalid> dx:<invalid> bx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

l0800_B956:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> di:<invalid> ds:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B6D6_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> si:<invalid> di:<invalid> ax:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> Sequence dx:ax:<invalid> bx:<invalid> -34(fp):<invalid> -32(fp):<invalid> -30(fp):<invalid> -28(fp):<invalid> -26(fp):di -24(fp):si -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



selector fn0800_B95E(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_B95E_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_B95E:
	Mem8[ds:0x4EE8:word16] = wArg08
	branch wArg08 == 0x0000 l0800_B97D
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0006(16) Stack +000A(16)

l0800_B96B:
	Mem28[ds:0x4EEA:word16] = wArg0A
	ds = fn0800_B6D6(fp - 0x0002, ds, wArg06)
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> -2(fp):bp

l0800_B97D:
	return ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_B95E_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> di:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ds:<invalid> al:<invalid> bx:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_B97F(selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg06, word16 wArg08, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es esi rax rbx rcx rdx rsi si sil
// Preserved: bp di es si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_B97F_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B97F:
	word16 ax_128
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_B99A
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0005(8) Local -000E(16) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B99A:
	byte al_100 = (byte) (wArg08 + 0x0001)
	branch wArg08 <u 0xFFFF l0800_B9B0
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9A3:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0200) == 0x0000 l0800_B9B5
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9B5:
	ptrLoc10 = DPB(ptrLoc10, wArg04, 0) (alias)
	word16 ax_118 = fn0800_8F50(al_100, ds, wArg02, ptrLoc10, wArg08)
	branch ax_118 <u 0xFFFF l0800_B9DD
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9D0:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_B9E2
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(32) Stack +0006(16) Stack +0008(16)

l0800_B9E2:
	word16 si_138 = (word16) ptrArg04
	word16 cx_135 = ax_118
	selector es_139 = SLICE(ptrArg04, selector, 16)
	word16 di_140 = si_138
	si_146 = si_138
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9ED:
	word16 si_146
	al_100 = Mem0[ds:si_146:byte]
	si_146 = si_146 + 0x0001
	branch al_100 == 0x1A l0800_BA21
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> al:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA21:
	word16 cx_238 = -cx_135
	word16 ax_240 = 0x0000 - (cx_238 == 0x0000)
	word16 dx_250
	fn0800_8E29((byte) ax_240, ds, wArg02, cx_238, ax_240, 0x01, out dx_250)
	Mem256[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x0200
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9F3:
	branch al_100 == 0x0D l0800_B9FC
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FC:
	cx_135 = cx_135 - 0x0001
	branch cx_135 != 0x0000 l0800_B9ED
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FE:
	ptrLoc14 = DPB(ptrLoc14, fp - 0x0005, 0) (alias)
	fn0800_8F50((byte) (fp - 0x0005), ds, wArg02, ptrLoc14, 0x0001)
	Mem230[es_139:di_140:byte] = bLoc05
	al_100 = bLoc05
	di_140 = di_140 + 0x0001
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9F7:
	Mem197[es_139:di_140:byte] = al_100
	di_140 = di_140 + 0x0001
	cx_135 = cx_135 - 0x0001
	branch cx_135 != 0x0000 l0800_B9ED
// DataOut: al bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9FA:
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA19:
	branch di_140 != si_138 l0800_BA1F
// DataOut: al bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BA1F:
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA41:
	ax_128 = di_140 - si_138
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> dx:<invalid> ds:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_BA1D:
// DataOut: al ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> cx:<invalid> Sequence es:si:<invalid> di:<invalid> al:<invalid> si:<invalid> ah:<invalid> ds:<invalid> dx:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0005(8) Local -0014(16) Local -0016(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_B9DD:
	ax_128 = ax_118
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> al:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):fp - 0x0005 -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_B9B0:
	ax_128 = 0x0000
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_B990:
	ax_128 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> -10(fp):di -8(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BA44:
	return ax_128
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 ax:<invalid> bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> di:<invalid> si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp

fn0800_B97F_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> di:di si:si bx:<invalid> al:<invalid> ah:<invalid> cx:<invalid> ds:<invalid> dx:<invalid> Sequence es:si:<invalid> es:es -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):di -8(fp):si -4(fp):<invalid> -2(fp):bp



word16 fn0800_BA4A(byte al, selector ds, segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax
// Trashed: SCZO ah al ax dh di dil dl ds dx eax edi edx es rax rdi rdx
// Preserved: bp di ds sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BA4A_entry:
// DataOut: al ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BA4A:
	word16 ax_26
	word16 ax_19
	branch msdos_rename_file(ptrArg02, ptrArg06, out ax_19) l0800_BA60
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BA60:
	ax_26 = fn0800_8D2B(ds, ax_19)
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA5C:
	ax_26 = 0x0000
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:0x56 Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds -6(fp):ds -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BA64:
	return ax_26
// DataOut: ax si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp

fn0800_BA4A_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ah:<invalid> Sequence ds:dx:<invalid> Sequence es:di:<invalid> ds:ds ax:<invalid> di:di al:0xFF -6(fp):<invalid> -4(fp):di -2(fp):bp



selector fn0800_BA67(selector ds, segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16)
fn0800_BA67_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16)

l0800_BA67:
	selector ds_26
	branch fn0800_ACB3(ds, DPB(ptrLoc0C, wArg02, 0), wArg04, 0x0000, 0x0000, 0x0000, out ds_26) != 0x0000 l0800_BA87
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: Stack +0002(32)

l0800_BA7F:
	Mem49[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] & 0xFFEF
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

l0800_BA87:
	return ds_26
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp

fn0800_BA67_exit:
// DataOut: ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):0x0000 -6(fp):0x0000 -4(fp):0x0000 -2(fp):bp



word16 fn0800_BA89(selector ds, segptr32 ptrArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax ds
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp di si sp
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)
fn0800_BA89_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16)

l0800_BA89:
	word16 ax_153
	word16 bp_175 = fp - 0x0002
	word16 di_13 = wArg0A
	branch Mem0[ptrArg02 + 0x0012:word16] != wArg02 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAA0:
	branch wArg0A > 0x0002 l0800_BAAB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAA5:
	branch wArg0C <=u 0x7FFF l0800_BAB1
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAB1:
	branch Mem0[ds:0x26B2:word16] != 0x0000 l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAB8:
	branch wArg02 != 0x236C l0800_BAC7
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAC7:
	branch Mem0[ds:0x26B0:word16] != 0x0000 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BACE:
	branch wArg02 != 0x2358 l0800_BADB
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAD5:
	Mem252[ds:0x26B0:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BABF:
	Mem255[ds:0x26B2:word16] = 0x0001
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BADB:
	word16 bx_96 = (word16) ptrArg02
	branch Mem0[ptrArg02:word16] == 0x0000 l0800_BAF6
// DataOut: bp bx di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAE4:
	fn0800_ACB3(ds, DPB(ptrLoc10, bx_96, 0), wArg04, 0x0000, 0x0000, 0x0001, out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BAF6:
	branch (Mem0[ptrArg02 + 0x0002:word16] & 0x0004) == 0x0000 l0800_BB0E
// DataOut: bp bx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Local -000C(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BB01:
	fn0800_9E75(ds, Mem0[ptrArg02 + 0x000A:word16], out ds)
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ah:<invalid> ds:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):0x0000 -8(fp):0x0001 -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_BB0E:
	Mem126[ptrArg02 + 0x0002:word16] = Mem0[ptrArg02 + 0x0002:word16] & 0xFFF3
	Mem128[ptrArg02 + 0x0006:word16] = 0x0000
	Mem133[ptrArg02 + 0x000A:word16] = wArg04
	Mem134[ptrArg02 + 0x0008:word16] = wArg02 + 0x0005
	Mem135[ptrArg02 + 0x000E:word16] = wArg04
	Mem136[ptrArg02 + 0x000C:word16] = wArg02 + 0x0005
	branch wArg0A == 0x0002 l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0006(16) Stack +0008(16)

l0800_BB3A:
	word16 si_156 = wArg0C
	branch false l0800_BB92
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0) Stack +0006(16) Stack +0008(16)

l0800_BB3E:
	Mem160[ds:0x2352:word16] = 0xC7F0
	branch (wArg06 | wArg08) != 0x0000 l0800_BB6B
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000A(0)

l0800_BB4C:
	word16 dx_195
	selector ds_199
	word16 ax_200 = fn0800_9F7F(fp - 0x0002, ds, wArg0C, out dx_195, out bp_175, out si_156, out di_13, out ds_199)
	Mem203[ss:bp_175 + 0x000A:word16] = dx_195
	Mem204[ss:bp_175 + 0x0008:word16] = ax_200
	branch (ax_200 | dx_195) != 0x0000 l0800_BB5E
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5E:
	ptr32 es_bx_209 = Mem204[ss:bp_175 + 0x0004:segptr32]
	Mem213[es_bx_209 + 0x0002:word16] = Mem204[es_bx_209 + 0x0002:word16] | 0x0004
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB6B:
	ptr32 es_bx_177 = Mem160[ss:bp_175 + 0x0004:segptr32]
	word16 ax_180 = Mem160[ss:bp_175 + 0x000A:word16]
	word16 dx_181 = Mem160[ss:bp_175 + 0x0008:word16]
	Mem182[es_bx_177 + 0x000E:word16] = ax_180
	Mem183[es_bx_177 + 0x000C:word16] = dx_181
	Mem184[es_bx_177 + 0x000A:word16] = ax_180
	Mem185[es_bx_177 + 0x0008:word16] = dx_181
	Mem186[es_bx_177 + 0x0006:word16] = si_156
	branch di_13 != 0x0001 l0800_BB92
// DataOut: bx ds es sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB8D:
	Mem190[es_bx_177 + 0x0002:word16] = Mem186[es_bx_177 + 0x0002:word16] | 0x0008
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB92:
	ax_153 = 0x0000
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> ch:<invalid> cl:<invalid> bl:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB5B:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BAAB:
	ax_153 = 0xFFFF
// DataOut: ax ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> cl:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

l0800_BB94:
	return ax_153
// DataOut: ax ds ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp

fn0800_BA89_exit:
// DataOut: ax ds
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> si:<invalid> Sequence es:bx:<invalid> ax:<invalid> cx:<invalid> es:<invalid> bx:<invalid> dx:<invalid> al:<invalid> ds:<invalid> ah:<invalid> cl:<invalid> bl:<invalid> ch:<invalid> dh:<invalid> bh:<invalid> -16(fp):bx -14(fp):<invalid> -12(fp):0x0000 -10(fp):<invalid> -8(fp):<invalid> -6(fp):di -4(fp):si -2(fp):bp



void fn0800_BB98(word16 wArg02, word16 wArg04, word16 wArg06, segptr32 ptrArg08, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)
fn0800_BB98_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000E(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BB98:
	branch (wArg08 | wArg0A) == 0x0000 l0800_BBE4
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000A(16) Local -000E(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BBA7:
	branch fn0800_BFC7(DPB(ptrLoc08, wArg04, 0), wArg06) <u wArg02 l0800_BBD2
// DataOut: si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -000E(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16)

l0800_BBD2:
	fn0800_BF9E(DPB(ptrLoc0C, wArg08, 0), wArg0A, DPB(ptrLoc08, wArg04, 0))
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BBB6:
	fn0800_C01E(DPB(ptrLoc0E, wArg08, 0), wArg0A, DPB(ptrLoc0A, wArg04, 0), wArg02)
	Mem90[ptrArg08 + wArg02:byte] = 0x00
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BBE4:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp

fn0800_BB98_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp si:si ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> es:<invalid> di:<invalid> al:<invalid> dx:<invalid> bx:<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):si -2(fp):bp



void fn0800_BBE9(segptr32 ptrArg02)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx eax ebp ebx ecx es esp rax rbp rbx rcx rsp sp spl
// Preserved:
// Stack args: Stack +0002(32)
fn0800_BBE9_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBE9:
	branch Mem0[ptrArg02 - 0x0001:byte] != 0x2E l0800_BBFC
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBF9:
	wArg02 = wArg02 - 0x0001
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BBFC:
	word16 v12_16 = wArg02 - 0x0001
	selector es_22 = SLICE(DPB(ptrArg02, v12_16, 0), selector, 16)
	byte al_23 = Mem0[es_22:v12_16:byte]
	word16 ax_24 = (int16) al_23
	word16 cx_26 = 0x0004
	word16 bx_27 = 0xBC39
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC0F:
	word16 ax_32 = Mem0[0x0800:bx_27:word16]
	branch ax_32 == ax_24 l0800_BC1E
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC1E:
	word16 sp_60
	word16 bp_61
	selector ss_62
	byte SCZO_63
	word16 bx_64
	selector es_65
	byte Z_66
	byte SZO_67
	byte al_68
	word16 ax_69
	word16 cx_70
	byte C_71
	call Mem0[0x0800:bx_27 + 0x0008:word16] (retsize: 4; depth: 8)
		uses: al_23,ax_32,bp_5,bx_29,C,cx_31,es_22,SCZO_33,sp_6,ss,SZO_19,wLoc02_4,wLoc04_25,Z_34
		defs: al_68,ax_69,bp_61,bx_64,C_71,cx_70,es_65,SCZO_63,sp_60,ss_62,SZO_67,Z_66
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

l0800_BC17:
	bx_27 = bx_27 + 0x0002
	cx_26 = cx_26 - 0x0001
	branch cx_26 != 0x0000 l0800_BC0F
// DataOut: bx cx
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(0)

l0800_BC1C:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16)

l0800_BC31:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>

fn0800_BBE9_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> Sequence es:bx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> -4(fp):<invalid> -2(fp):bp 2(fp):<invalid>



void fn0800_BC49(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg08, segptr32 ptrArg0A, word16 wArg0C, segptr32 ptrArg0E, word16 wArg10, segptr32 ptrArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut: sp
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BC49_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC49:
	branch (wArg06 | wArg08) == 0x0000 l0800_BC62
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0006(32) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC5B:
	Mem189[ptrArg06:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC62:
	branch (wArg0A | wArg0C) == 0x0000 l0800_BC71
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000A(32) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC6A:
	Mem184[ptrArg0A:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BC71:
	branch (wArg0E | wArg10) == 0x0000 l0800_BC80
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +000E(32) Stack +0012(16) Stack +0014(16)

l0800_BC79:
	Mem179[ptrArg0E:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(16) Stack +0014(16)

l0800_BC80:
	branch (wArg12 | wArg14) == 0x0000 l0800_BC8F
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16) Stack +0012(32)

l0800_BC88:
	Mem174[ptrArg12:byte] = 0x00
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC8F:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:<invalid> Sequence es:bx:<invalid> -94(fp):di -92(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9D:
	word16 bx_66 = (word16) ptrArg02
	branch Mem0[ptrArg02:byte] == 0x20 l0800_BC9A
// DataOut: bx ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BC9A:
	wArg02 = wArg02 + 0x0001
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0064(16) Stack +0002(32) Stack +0004(16)

l0800_BCA6:
	segptr32 ptrLoc62_78 = DPB(ptrLoc62, bx_66, 0)
	word16 ax_79 = fn0800_BFC7(ptrLoc62_78, wArg04)
	word16 si_166 = ax_79
	branch ax_79 <= 0x0050 l0800_BCB9
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:0x0000 ax:fp - 0x005A Sequence es:bx:<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB6:
	si_166 = 0x0050
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: fp(32) Local -0004(16) Local -0006(32) Stack +0002(16) Stack +0004(16)

l0800_BCB9:
	Mem92[ptrLoc06:byte] = 0x00
	segptr32 ptrLoc64_105 = DPB(ptrLoc64, wArg02, 0)
	segptr32 ptrLoc68_113 = DPB(ptrLoc68, fp - 0x0059, 0)
	fn0800_C01E(ptrLoc68_113, ss, ptrLoc64_105, si_166)
	word16 v23_115 = fp - 0x0059 + si_166
	segptr32 ptrLoc06_117 = DPB(ptrLoc06, v23_115, 0)
	Mem121[SLICE(ptrLoc06_117, selector, 16):v23_115:byte] = 0x00
	word16 wLoc06_116 = v23_115
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> -98(fp):bx -96(fp):<invalid> -94(fp):di -92(fp):si -6(fp):fp - 0x005A -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)

l0800_BCE2:
	word16 v24_129 = wLoc06_116 - 0x0001
	ptrLoc06_117 = DPB(ptrLoc06_117, v24_129, 0) (alias)
	selector es_135 = SLICE(ptrLoc06_117, selector, 16)
	byte al_136 = Mem121[es_135:v24_129:byte]
	wLoc06_116 = v24_129
	word16 ax_137 = (int16) al_136
	word16 cx_139 = 0x0007
	word16 bx_140 = 0xBE1F
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BCF5:
	word16 ax_145 = Mem121[0x0800:bx_140:word16]
	branch ax_145 == ax_137 l0800_BD04
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD04:
	word16 sp_152
	word16 bp_153
	selector ss_154
	byte SCZO_155
	word16 si_156
	word16 di_157
	byte SZO_158
	byte C_159
	word16 ax_160
	byte Z_161
	word16 bx_162
	selector es_163
	word16 cx_164
	byte al_165
	call Mem121[0x0800:bx_140 + 0x000E:word16] (retsize: 4; depth: 98)
		uses: al_136,ax_145,bp_5,bx_142,C_124,cx_144,di_13,es_135,ptrLoc06_131,ptrLoc62_78,ptrLoc64_105,ptrLoc68_113,SCZO_146,si_122,sp_114,ss,SZO_132,wLoc02_4,wLoc04_59,wLoc06_130,wLoc08_138,wLoc5C_9,wLoc5E_12,wLoc60_97,wLoc62_100,wLoc64_103,wLoc66_108,wLoc68_111,Z_147
		defs: al_165,ax_160,bp_153,bx_162,C_159,cx_164,di_157,es_163,SCZO_155,si_156,sp_152,ss_154,SZO_158,Z_161
	return
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

fn0800_BC49_exit:
// DataOut: sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>

l0800_BCFD:
	bx_140 = bx_140 + 0x0002
	cx_139 = cx_139 - 0x0001
	branch cx_139 != 0x0000 l0800_BCF5
// DataOut: bx cx ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32) Local -0008(0)

l0800_BD02:
// DataOut: ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x005E bp:fp - 0x0002 di:<invalid> ax:<invalid> Sequence es:bx:<invalid> es:<invalid> cx:<invalid> si:<invalid> al:<invalid> bx:<invalid> dx:<invalid> -104(fp):fp - 0x0059 -102(fp):ss -100(fp):<invalid> -98(fp):<invalid> -96(fp):<invalid> -94(fp):di -92(fp):si -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp 2(fp):<invalid>
// LocalsOut: Local -0006(32)



void fn0800_BE3B(word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, word16 wArg0A, word16 wArg0C, word16 wArg0E, word16 wArg10, word16 wArg12, word16 wArg14)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)
fn0800_BE3B_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16) Stack +000A(16) Stack +000C(16) Stack +000E(16) Stack +0010(16) Stack +0012(16) Stack +0014(16)

l0800_BE3B:
	fn0800_BC49(DPB(ptrLoc16, wArg02, 0), wArg04, DPB(ptrLoc12, wArg06, 0), wArg08, DPB(ptrLoc0E, wArg0A, 0), wArg0C, DPB(ptrLoc0A, wArg0E, 0), wArg10, DPB(ptrLoc06, wArg12, 0), wArg14)
	return
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BE3B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> di:<invalid> ax:<invalid> es:<invalid> bx:<invalid> cx:<invalid> si:<invalid> al:<invalid> dx:<invalid> -22(fp):<invalid> -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_BEA2(selector ds, segptr32 ptrArg02, word16 wArg06, word16 wArg08, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: di si
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp sp
// Stack args: Stack +0002(32) Stack +0006(16) Stack +0008(16)
fn0800_BEA2_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(16) Stack +0008(16)

l0800_BEA2:
	Mem10[ptrArg02:byte] = 0x00
	word16 di_34
	return fn0800_9828(fp - 0x0002, ds, fp + 0x000A, DPB(ptrLoc0C, wArg06, 0), wArg08, out di_34)
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BEA2_exit:
// DataOut: di si
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:bx:<invalid> ax:<invalid> di:<invalid> es:<invalid> si:<invalid> al:<invalid> dx:<invalid> cx:<invalid> bx:<invalid> ah:<invalid> bl:<invalid> ch:<invalid> bh:<invalid> -14(fp):fp + 0x000A -12(fp):<invalid> -10(fp):<invalid> -8(fp):fp + 0x0002 -6(fp):ss -4(fp):0xBE64 -2(fp):bp



void fn0800_BF18(word16 dx, word16 bx, word16 di, selector ds, word16 wArg06, word16 wArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx di ds dx ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: bp sp
fn0800_BF18_entry:
// DataOut: bx di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BF18:
	fn0800_8F97(0xBEE5, dx, bx, di, ds)
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn0800_BF18_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> si:<invalid> es:<invalid> al:<invalid> di:<invalid> cx:<invalid> dx:<invalid> bl:<invalid> bh:<invalid> bx:<invalid> ah:<invalid> dl:<invalid> cl:<invalid> ch:<invalid> -18(fp):0xBEE5 -16(fp):0xBF0D -14(fp):fp + 0x0002 -12(fp):ss -10(fp):<invalid> -8(fp):<invalid> -6(fp):fp + 0x000A -4(fp):ss -2(fp):bp



void fn0800_BF5F(segptr32 ptrArg02, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds es si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF5F_entry:
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF5F:
	word16 di_116 = (word16) ptrArg02
	selector es_19 = SLICE(ptrArg02, selector, 16)
	word16 cx_118 = 0xFFFF
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70:
	branch cx_118 == 0x0000 l0800_BF72
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF70_1:
	di_116 = di_116 + 0x0001
	cx_118 = cx_118 - 0x0001
	branch 0x00 == Mem0[es_19:di_116:byte] l0800_BF70
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Stack +0006(32)

l0800_BF72:
	word16 si_37 = di_116 - 0x0001
	word16 di_111 = (word16) ptrArg06
	selector es_41 = SLICE(ptrArg06, selector, 16)
	word16 cx_113 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C:
	branch cx_113 == 0x0000 l0800_BF7E
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7C_2:
	di_111 = di_111 + 0x0001
	cx_113 = cx_113 - 0x0001
	branch 0x00 == Mem0[es_41:di_111:byte] l0800_BF7C
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8) Local -000A(16)

l0800_BF7E:
	word16 cx_107 = ~cx_113
	word16 di_52 = di_111 - cx_107
	word16 di_105 = si_37
	word16 si_104 = di_52
	branch (di_52 & 0x0001) == 0x0000 l0800_BF8F
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x000A bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8D:
	Mem103[es_19:si_37:byte] = Mem0[es_41:di_52:byte]
	si_104 = di_52 + 0x0001
	di_105 = si_37 + 0x0001
	cx_107 = cx_107 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF8F:
	word16 cx_70 = cx_107 >>u 0x0001
	cx_78 = cx_70
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF91:
	word16 cx_78
	branch cx_78 == 0x0000 l0800_BF93
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF93:
	branch cx_70 >=u 0x0000 l0800_BF96
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF95:
	Mem99[es_19:di_105:byte] = Mem0[es_41:si_104:byte]
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)

l0800_BF96:
	return
// DataOut: sil ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF5F_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> dx:es al:<invalid> cx:<invalid> di:di si:si ds:ds es:es ax:di -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BF91_1:
	Mem81[es_19:di_105:word16] = Mem0[es_41:si_104:word16]
	si_104 = si_104 + 0x0002
	di_105 = di_105 + 0x0002
	cx_78 = cx_78 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> dx:di al:0x00 cx:<invalid> di:<invalid> si:<invalid> ds:es es:es -12(fp):es -10(fp):es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0004(8)



void fn0800_BF9E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax ch cl cx dh di dil dl dx eax ecx edi edx es rax rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_BF9E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_BF9E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_21 = 0xFFFF
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE:
	branch cx_21 == 0x0000 l0800_BFB0
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFAE_1:
	di_15 = di_70 + 0x0001
	cx_21 = cx_21 - 0x0001
	word16 di_70 = di_15
	branch 0x00 == Mem0[es_16:di_70:byte] l0800_BFAE
// DataOut: cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFB0:
	word16 cx_32 = ~cx_21
	word16 di_40 = (word16) ptrArg02
	selector es_41 = SLICE(ptrArg02, selector, 16)
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBA:
	branch cx_32 == 0x0000 l0800_BFBC
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_BFBC:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_BF9E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> cx:<invalid> di:di ax:<invalid> ds:ds dx:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_BFBA_2:
	Mem48[es_41:di_40:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_40 = di_40 + 0x0001
	cx_32 = cx_32 - 0x0001
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:<invalid> cx:<invalid> di:<invalid> ax:es ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_BFC7(segptr32 ptrArg02, word16 wArg04)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax ch cl cx di dil eax ecx edi es rax rcx rdi
// Preserved: bp di sp
// Stack args: Stack +0002(32) Stack +0004(16)
fn0800_BFC7_entry:
// DataOut: ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0004(16)

l0800_BFC7:
	word16 di_11 = (word16) ptrArg02
	selector es_12 = SLICE(ptrArg02, selector, 16)
	word16 ax_13 = 0x0000
	branch 0x0000 != wArg04 l0800_BFD9
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l0800_BFD5:
	branch 0x0000 == di_11 l0800_BFE3
// DataOut: al ax di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFD9:
	word16 cx_33 = 0xFFFF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD:
	branch cx_33 == 0x0000 l0800_BFDF
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDD_1:
	di_11 = di_62 + 0x0001
	cx_33 = cx_33 - 0x0001
	word16 di_62 = di_11
	branch 0x00 == Mem0[es_12:di_62:byte] l0800_BFDD
// DataOut: al cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFDF:
	ax_13 = ~cx_33 - 0x0001
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:0x0000 cx:<invalid> di:<invalid> -4(fp):di -2(fp):bp
// LocalsOut: fp(16)

l0800_BFE3:
	return ax_13
// DataOut: ax ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 Sequence es:di:<invalid> ax:<invalid> cx:0x0000 di:<invalid> -4(fp):di -2(fp):bp

fn0800_BFC7_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> ax:<invalid> di:di cx:0x0000 -4(fp):di -2(fp):bp



word16 fn0800_BFE6(segptr32 ptrArg02, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ax
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es esi rax rbx rcx rdi rdx rsi si sil
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_BFE6_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_BFE6:
	word16 di_17 = (word16) ptrArg06
	selector es_18 = SLICE(ptrArg06, selector, 16)
	word16 ax_22 = wArg0A
	word16 cx_110 = wArg0A
	branch wArg0A == 0x0000 l0800_C018
// DataOut: ax cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFA:
	di_108 = di_17
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE:
	word16 di_108
	branch cx_110 == 0x0000 l0800_C000
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_BFFE_1:
	di_108 = di_111 + 0x0001
	cx_110 = cx_110 - 0x0001
	word16 di_111 = di_108
	branch 0x00 == Mem0[es_18:di_111:byte] l0800_BFFE
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C000:
	word16 bx_66 = wArg0A - cx_110
	word16 cx_105 = bx_66
	word16 di_103 = di_17
	selector ds_73 = SLICE(ptrArg02, selector, 16)
	word16 si_101 = (word16) ptrArg02
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:di ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009:
	branch cx_105 == 0x0000 l0800_C00B
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C009_2:
	si_101 = si_113 + 0x0001
	di_103 = di_112 + 0x0001
	cx_105 = cx_105 - 0x0001
	word16 di_112 = di_103
	word16 si_113 = si_101
	branch Mem0[ds_73:si_113:byte] != Mem0[es_18:di_112:byte] l0800_C009
// DataOut: cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C00B:
	ax_22 = DPB(wArg0A, 0x00, 8) - DPB(bx_66, 0x00, 8)
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:0x00 di:<invalid> Sequence ds:si:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C018:
	return ax_22
// DataOut: ax ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 dx:ds Sequence es:di:<invalid> si:<invalid> ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> di:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp

fn0800_BFE6_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp dx:ds Sequence es:di:<invalid> si:si ax:<invalid> cx:<invalid> ds:ds di:di bx:<invalid> al:<invalid> Sequence ds:si:<invalid> bl:<invalid> ah:<invalid> bh:0x00 -6(fp):di -4(fp):si -2(fp):bp



void fn0800_C01E(segptr32 ptrArg02, word16 wArg04, segptr32 ptrArg06, word16 wArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp di ds si sp
// Stack args: Stack +0002(32) Stack +0006(32) Stack +000A(16)
fn0800_C01E_entry:
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32) Stack +000A(16)

l0800_C01E:
	word16 di_15 = (word16) ptrArg06
	selector es_16 = SLICE(ptrArg06, selector, 16)
	word16 si_17 = di_15
	word16 cx_23 = wArg0A
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030:
	branch cx_23 == 0x0000 l0800_C032
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C030_1:
	di_15 = di_83 + 0x0001
	cx_23 = cx_23 - 0x0001
	word16 di_83 = di_15
	branch 0x00 == Mem0[es_16:di_83:byte] l0800_C030
// DataOut: bx cx di es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(32)

l0800_C032:
	word16 di_42 = (word16) ptrArg02
	selector es_43 = SLICE(ptrArg02, selector, 16)
	word16 cx_46 = wArg0A - cx_23
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0006 bp:fp - 0x0002 Sequence es:di:<invalid> si:di al:0x00 bx:<invalid> cx:<invalid> di:<invalid> -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E:
	branch cx_46 == 0x0000 l0800_C040
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C040:
	word16 cx_58 = cx_23
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C042:
	branch cx_58 == 0x0000 l0800_C044
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C044:
	return
// DataOut: ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

fn0800_C01E_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp Sequence es:di:<invalid> si:si al:<invalid> bx:<invalid> cx:<invalid> di:di ds:ds dx:<invalid> ax:<invalid> -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp

l0800_C042_1:
	Mem62[es_43:di_42:byte] = 0x00
	di_42 = di_42 + 0x0001
	cx_58 = cx_58 - 0x0001
// DataOut: cx di es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C03E_2:
	Mem53[es_43:di_42:byte] = Mem0[es_16:si_17:byte]
	si_17 = si_17 + 0x0001
	di_42 = di_42 + 0x0001
	cx_46 = cx_46 - 0x0001
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 Sequence es:di:<invalid> si:<invalid> al:0x00 bx:<invalid> cx:<invalid> di:<invalid> ds:es -8(fp):ds -6(fp):di -4(fp):si -2(fp):bp
// LocalsOut: fp(16)



word16 fn0800_C04F(selector ds, segptr32 ptrArg02, segptr32 ptrArg06, ptr16 & dxOut, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax di ds dx
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
// Stack args: Stack +0002(32) Stack +0006(32)
fn0800_C04F_entry:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(32) Stack +0006(32)

l0800_C04F:
	selector ds_12
	word16 di_13
	*diOut = fn0800_C379(ds, out ds_12)
	word16 si_29 = Mem0[ptrArg02:word16]
	int32 dx_ax_36 = (int32) (si_29 + 0xF844 >> 0x0002)
	int32 dx_ax_63 = (int32) (si_29 + 0xF844 & 0x0003)
	word16 dx_49
	word16 dx_76
	word16 v19_79 = (word16) (SEQ(Mem0[ds_12:0x26E4:word16], Mem0[ds_12:0x26E2:word16] + 0xA600) + 0x12CEA600) + fn0800_8F18(0x1F80, SLICE(dx_ax_36, word16, 16), 0x0786, (word16) dx_ax_36, out dx_49) + fn0800_8F18(0x3380, SLICE(dx_ax_63, word16, 16), 0x01E1, (word16) dx_ax_63, out dx_76)
	word16 wLoc06_292 = v19_79
	branch (si_29 + 0xF844 & 0x0003) == 0x0000 l0800_C0B9
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0B0:
	wLoc06_292 = v19_79 + 0x5180
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0B9:
	word16 cx_107 = 0x0000
	word16 si_105 = (int16) Mem0[ptrArg02 + 0x0003:byte] - 0x0001
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> es:<invalid> al:0x80 di:<invalid> ah:0x33 bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0D0:
	branch si_105 > 0x0000 l0800_C0C8
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0C8:
	si_105 = si_105 - 0x0001
	cx_107 = cx_107 + (int16) Mem0[ds_12:si_105 + 0x26B4:byte]
// DataOut: cx di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0D4:
	word16 ax_121 = (int16) Mem0[ptrArg02 + 0x0002:byte]
	word16 cx_123 = cx_107 + (ax_121 - 0x0001)
	branch Mem0[ptrArg02 + 0x0003:byte] <= 0x02 l0800_C0EE
// DataOut: bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0E6:
	branch (Mem0[ptrArg02:word16] & 0x0003) != 0x0000 l0800_C0EE
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0ED:
	cx_123 = cx_123 + 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C0EE:
	word16 ax_148 = (word16) (cx_123 *s 0x0018) + DPB(ax_121 - 0x0001, 0x00, 8)
	word16 si_149 = ax_148
	branch Mem0[ds_12:0x26E6:word16] == 0x0000 l0800_C128
// DataOut: bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> es:<invalid> di:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xE1 ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0002(32) Stack +0006(32)

l0800_C10B:
	branch fn0800_C553(ds_12, Mem0[ptrArg02:word16] + 0xF84E, 0x0000, cx_123, (byte) DPB(ax_148, 0x00, 8)) == 0x0000 l0800_C128
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(32)

l0800_C127:
	si_149 = ax_148 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Stack +0006(32)

l0800_C128:
	int32 dx_ax_161 = (int32) si_149
	word16 dx_176
	word16 ax_177 = fn0800_8F18(0x0E10, SLICE(dx_ax_161, word16, 16), 0x0000, (word16) dx_ax_161, out dx_176)
	int32 dx_ax_192 = (int32) DPB(ax_177, 0x00, 8)
	int32 dx_ax_220 = (int32) DPB((word16) ptrArg06, 0x00, 8)
	word16 dx_207
	word16 cx_226 = fn0800_8F18(0x003C, SLICE(dx_ax_192, word16, 16), 0x0000, (word16) dx_ax_192, out dx_207) + (word16) dx_ax_220
	word16 dx_239
	*dxOut = v31
	return wLoc06_292 + ax_177 + (word16) (SEQ(dx_207, cx_226) + dx_ax_220)
// DataOut: ax di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> es:<invalid> di:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C04F_exit:
// DataOut: ax di ds dx
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:si Sequence dx:ax:<invalid> cx:<invalid> bx:<invalid> al:<invalid> ah:<invalid> bl:<invalid> bh:<invalid> es:<invalid> di:<invalid> dl:<invalid> ds:<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



void fn0800_C177(word16 bp, word16 si, selector ds, word16 wArg02, word16 wArg04, segptr32 ptrArg0A)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bp ds si ss
// LiveOut:
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0002(16) Stack +0004(32) Stack +000A(32)
fn0800_C177_entry:
// DataOut: bp ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +000A(32)

l0800_C177:
	selector ds_7
	word16 di_8 = fn0800_C379(ds, out ds_7)
	word16 v10_18 = wArg02 - (word16) (SEQ(Mem0[ds_7:0x26E4:word16], Mem0[ds_7:0x26E2:word16] + 0xA600) + 0x12CEA600)
	Mem30[ptrArg0A + 0x0002:byte] = 0x00
	word16 dx_47
	word16 bp_48
	word16 si_49
	word16 di_50
	byte al_52 = (byte) fn0800_8BCA(fp - 0x0002, si, di_8, wLoc0C, out dx_47, out bp_48, out si_49, out di_50)
	Mem57[Mem30[ss:bp_48 + 0x000C:segptr32] + 0x0003:byte] = al_52
	Mem63[ss:fp - 0x000C:word16] = 0x0000
	Mem65[ss:fp - 0x000E:word16] = 0x003C
	Mem68[ss:fp - 0x0010:word16] = Mem65[ss:bp_48 + 0x0006:word16]
	Mem71[ss:fp - 0x0012:word16] = Mem68[ss:bp_48 + 0x0004:word16]
	word16 dx_72
	word16 bp_73
	word16 si_74
	word16 di_75
	word16 ax_76 = fn0800_8BBB(bp_48, si_49, di_50, bp, out dx_72, out bp_73, out si_74, out di_75)
	Mem77[ss:bp_73 + 0x0006:word16] = dx_72
	Mem78[ss:bp_73 + 0x0004:word16] = ax_76
	Mem84[ss:fp - 0x0014:word16] = 0x0000
	Mem86[ss:fp - 0x0016:word16] = 0x003C
	Mem89[ss:fp - 0x0018:word16] = Mem86[ss:bp_73 + 0x0006:word16]
	Mem92[ss:fp - 0x001A:word16] = Mem89[ss:bp_73 + 0x0004:word16]
	word16 dx_93
	word16 bp_94
	word16 si_95
	word16 di_96
	byte al_98 = (byte) fn0800_8BCA(bp_73, si_74, di_75, bp, out dx_93, out bp_94, out si_95, out di_96)
	Mem102[Mem92[ss:bp_94 + 0x000C:segptr32]:byte] = al_98
	Mem108[ss:fp - 0x001C:word16] = 0x0000
	Mem110[ss:fp - 0x001E:word16] = 0x003C
	Mem113[ss:fp - 0x0020:word16] = Mem110[ss:bp_94 + 0x0006:word16]
	Mem116[ss:fp - 0x0022:word16] = Mem113[ss:bp_94 + 0x0004:word16]
	word16 dx_117
	word16 bp_118
	word16 si_119
	word16 di_120
	word16 ax_121 = fn0800_8BBB(bp_94, si_95, di_96, bp, out dx_117, out bp_118, out si_119, out di_120)
	Mem122[ss:bp_118 + 0x0006:word16] = dx_117
	Mem123[ss:bp_118 + 0x0004:word16] = ax_121
	Mem129[ss:fp - 0x0024:word16] = 0x0000
	Mem131[ss:fp - 0x0026:word16] = 0x88F8
	Mem134[ss:fp - 0x0028:word16] = Mem131[ss:bp_118 + 0x0006:word16]
	Mem137[ss:fp - 0x002A:word16] = Mem134[ss:bp_118 + 0x0004:word16]
	word16 dx_138
	word16 bp_139
	word16 si_140
	word16 di_141
	word16 ax_145 = (fn0800_8BBB(bp_118, si_119, di_120, bp, out dx_138, out bp_139, out si_140, out di_141) << 0x0002) + 0x07BC
	Mem149[Mem137[ss:bp_139 + 0x0008:segptr32]:word16] = ax_145
	Mem155[ss:fp - 0x002C:word16] = 0x0000
	Mem157[ss:fp - 0x002E:word16] = 0x88F8
	Mem160[ss:fp - 0x0030:word16] = Mem157[ss:bp_139 + 0x0006:word16]
	Mem163[ss:fp - 0x0032:word16] = Mem160[ss:bp_139 + 0x0004:word16]
	word16 dx_164
	word16 si_166
	word16 di_167
	word16 bp_165
	word16 ax_168 = fn0800_8BCA(bp_139, si_140, di_141, bp, out dx_164, out bp_165, out si_166, out di_167)
	Mem169[ss:bp_165 + 0x0006:word16] = dx_164
	Mem170[ss:bp_165 + 0x0004:word16] = ax_168
	word16 sp_162 = fp - 0x0032
	branch Mem170[ss:bp_165 + 0x0006:word16] < 0x0000 l0800_C26F
// DataOut: bp di ds si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: Local -0002(16)

l0800_C22B:
	branch Mem170[ss:bp_165 + 0x0006:word16] != 0x0000 l0800_C234
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C22D:
	branch Mem170[ss:bp_165 + 0x0004:word16] <u 0x2250 l0800_C26F
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C234:
	Mem437[ss:bp_165 + 0x0004:word16] = Mem170[ss:bp_165 + 0x0004:word16] - 0x2250
	Mem441[ss:bp_165 + 0x0006:word16] = v32
	ptr32 es_bx_442 = Mem441[ss:bp_165 + 0x0008:segptr32]
	Mem446[es_bx_442:word16] = Mem441[es_bx_442:word16] + 0x0001
	Mem452[ss:fp - 0x0034:word16] = 0x0000
	Mem454[ss:fp - 0x0036:word16] = 0x2238
	Mem457[ss:fp - 0x0038:word16] = Mem454[ss:bp_165 + 0x0006:word16]
	Mem460[ss:fp - 0x003A:word16] = Mem457[ss:bp_165 + 0x0004:word16]
	word16 dx_461
	word16 bp_462
	word16 si_463
	word16 di_464
	word16 ax_465 = fn0800_8BBB(bp_165, si_166, di_167, bp, out dx_461, out bp_462, out si_463, out di_464)
	ptr32 es_bx_466 = Mem460[ss:bp_462 + 0x0008:segptr32]
	Mem470[es_bx_466:word16] = Mem460[es_bx_466:word16] + ax_465
	Mem476[ss:fp - 0x003C:word16] = 0x0000
	Mem478[ss:fp - 0x003E:word16] = 0x2238
	Mem481[ss:fp - 0x0040:word16] = Mem478[ss:bp_462 + 0x0006:word16]
	Mem484[ss:fp - 0x0042:word16] = Mem481[ss:bp_462 + 0x0004:word16]
	word16 dx_485
	word16 ax_489 = fn0800_8BCA(bp_462, si_463, di_464, bp, out dx_485, out bp_165, out si_166, out di_167)
	Mem490[ss:bp_165 + 0x0006:word16] = dx_485
	Mem491[ss:bp_165 + 0x0004:word16] = ax_489
	sp_162 = fp - 0x0042
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0xF8 ds:<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C26F:
	branch Mem170[ds_7:0x26E6:word16] == 0x0000 l0800_C2B4
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):0x2238 -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C276:
	word16 sp_372 = sp_162 - 0x0002
	Mem373[ss:sp_372:word16] = 0x0000
	Mem375[ss:sp_372 - 0x0002:word16] = 0x0018
	Mem378[ss:sp_372 - 0x0004:word16] = Mem375[ss:bp_165 + 0x0006:word16]
	Mem381[ss:sp_372 - 0x0006:word16] = Mem378[ss:bp_165 + 0x0004:word16]
	word16 dx_382
	word16 bp_383
	word16 si_384
	word16 di_385
	Mem388[ss:sp_372 - 0x0008:word16] = fn0800_8BCA(bp_165, si_166, di_167, bp, out dx_382, out bp_383, out si_384, out di_385)
	Mem394[ss:sp_372 - 0x000A:word16] = 0x0000
	Mem396[ss:sp_372 - 0x000C:word16] = 0x0018
	Mem399[ss:sp_372 - 0x000E:word16] = Mem396[ss:bp_383 + 0x0006:word16]
	Mem402[ss:sp_372 - 0x0010:word16] = Mem399[ss:bp_383 + 0x0004:word16]
	word16 dx_403
	Mem409[ss:sp_372 - 0x0012:word16] = fn0800_8BBB(bp_383, si_384, di_385, bp, out dx_403, out bp_165, out si_166, out di_167)
	Mem412[ss:sp_372 - 0x0014:word16] = 0x0000
	Mem420[ss:sp_372 - 0x0016:word16] = Mem412[Mem412[ss:bp_165 + 0x0008:segptr32]:word16] + 0xF84E
	sp_162 = sp_372 - 0x000E
	branch fn0800_C553(ds_7, wArg00, v10_18, v11, bArg06) == 0x0000 l0800_C2B4
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):0x2238 -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C2AC:
	Mem430[ss:bp_165 + 0x0004:word16] = Mem420[ss:bp_165 + 0x0004:word16] + 0x0001
	Mem434[ss:bp_165 + 0x0006:word16] = v44
// DataOut: bp di ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>
// LocalsOut: Local -0002(16)

l0800_C2B4:
	word16 sp_202 = sp_162 - 0x0002
	Mem203[ss:sp_202:word16] = 0x0000
	Mem205[ss:sp_202 - 0x0002:word16] = 0x0018
	Mem208[ss:sp_202 - 0x0004:word16] = Mem205[ss:bp_165 + 0x0006:word16]
	Mem211[ss:sp_202 - 0x0006:word16] = Mem208[ss:bp_165 + 0x0004:word16]
	word16 dx_212
	word16 bp_213
	word16 si_214
	word16 di_215
	byte al_217 = (byte) fn0800_8BCA(bp_165, si_166, di_167, bp, out dx_212, out bp_213, out si_214, out di_215)
	Mem221[Mem211[ss:bp_213 + 0x000C:segptr32] + 0x0001:byte] = al_217
	Mem227[ss:sp_202 - 0x0008:word16] = 0x0000
	Mem229[ss:sp_202 - 0x000A:word16] = 0x0018
	Mem232[ss:sp_202 - 0x000C:word16] = Mem229[ss:bp_213 + 0x0006:word16]
	Mem235[ss:sp_202 - 0x000E:word16] = Mem232[ss:bp_213 + 0x0004:word16]
	word16 dx_236
	word16 bp_237
	word16 si_238
	word16 di_239
	word16 ax_240 = fn0800_8BBB(bp_213, si_214, di_215, bp, out dx_236, out bp_237, out si_238, out di_239)
	Mem241[ss:bp_237 + 0x0006:word16] = dx_236
	Mem242[ss:bp_237 + 0x0004:word16] = ax_240
	Mem244[ss:bp_237 + 0x0004:word16] = Mem242[ss:bp_237 + 0x0004:word16] + 0x0001
	Mem248[ss:bp_237 + 0x0006:word16] = v50
	branch (Mem248[Mem248[ss:bp_237 + 0x0008:segptr32]:word16] & 0x0003) != 0x0000 l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2F3:
	branch Mem248[ss:bp_237 + 0x0006:word16] < 0x0000 l0800_C30B
// DataOut: bp ds sp ss
// DataOut (flags): SZO
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2F9:
	branch Mem248[ss:bp_237 + 0x0006:word16] > 0x0000 l0800_C301
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C2FB:
	branch Mem248[ss:bp_237 + 0x0004:word16] <=u 0x003C l0800_C30B
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C30B:
	branch Mem248[ss:bp_237 + 0x0006:word16] != 0x0000 l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C311:
	branch Mem248[ss:bp_237 + 0x0004:word16] != 0x003C l0800_C326
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C317:
	ptr32 es_bx_352 = Mem248[ss:bp_237 + 0x0008:segptr32]
	Mem355[es_bx_352 + 0x0003:byte] = 0x02
	Mem356[es_bx_352 + 0x0002:byte] = 0x1D
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C301:
	Mem360[ss:bp_237 + 0x0004:word16] = Mem248[ss:bp_237 + 0x0004:word16] - 0x0001
	Mem364[ss:bp_237 + 0x0006:word16] = v53
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C326:
	Mem284[Mem248[ss:bp_237 + 0x0008:segptr32] + 0x0003:byte] = 0x00
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> es:<invalid> bx:<invalid> al:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C34D:
	int32 dx_ax_297 = (int32) (int16) Mem284[ds_7:(int16) Mem284[Mem284[ss:bp_237 + 0x0008:segptr32] + 0x0003:byte] + 0x26B4:byte]
	word16 ax_298 = (word16) dx_ax_297
	word16 dx_299 = SLICE(dx_ax_297, word16, 16)
	branch dx_299 < Mem284[ss:bp_237 + 0x0006:word16] l0800_C330
// DataOut: ax bp ds sp ss
// DataOut (flags): Z
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C362:
	branch dx_299 != Mem284[ss:bp_237 + 0x0006:word16] l0800_C369
// DataOut: ax bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C364:
	branch ax_298 <u Mem284[ss:bp_237 + 0x0004:word16] l0800_C330
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C330:
	ptr32 es_bx_308 = Mem284[ss:bp_237 + 0x0008:segptr32]
	Mem319[ss:bp_237 + 0x0004:word16] = Mem284[ss:bp_237 + 0x0004:word16] - (word16) ((int32) ((int16) Mem284[ds_7:(int16) Mem284[es_bx_308 + 0x0003:byte] + 0x26B4:byte]))
	Mem323[ss:bp_237 + 0x0006:word16] = v57
	selector es_310 = SLICE(es_bx_308, selector, 16)
	word16 bx_325 = Mem323[ss:bp_237 + 0x0008:word16]
	Mem327[es_310:bx_325 + 0x0003:byte] = Mem323[es_310:bx_325 + 0x0003:byte] + 0x01
// DataOut: bp ds sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C369:
	ptr32 es_bx_331 = Mem284[ss:bp_237 + 0x0008:segptr32]
	Mem335[es_bx_331 + 0x0003:byte] = Mem284[es_bx_331 + 0x0003:byte] + 0x01
	Mem338[es_bx_331 + 0x0002:byte] = Mem335[ss:bp_237 + 0x0004:byte]
// DataOut: sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

l0800_C377:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>

fn0800_C177_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bp:<invalid> ax:<invalid> dx:<invalid> Sequence es:bx:<invalid> cx:<invalid> al:<invalid> bx:<invalid> Sequence dx:ax:<invalid> es:<invalid> di:<invalid> si:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:0x18 ds:<invalid> -58(fp):<invalid> -56(fp):<invalid> -54(fp):<invalid> -52(fp):<invalid> -50(fp):<invalid> -48(fp):0x003C -46(fp):0x88F8 -44(fp):<invalid> -42(fp):<invalid> -40(fp):0x003C -38(fp):0x88F8 -36(fp):<invalid> -34(fp):<invalid> -32(fp):0x003C -30(fp):0x003C -28(fp):<invalid> -26(fp):<invalid> -24(fp):0x003C -22(fp):0x003C -20(fp):<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):0x003C -12(fp):<invalid> -10(fp):<invalid> -8(fp):<invalid> -6(fp):0x003C -4(fp):<invalid> -2(fp):bp 2(fp):<invalid> 4(fp):<invalid>



word16 fn0800_C379(selector ds, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: di ds
// Trashed: SCZDO ah al ax bh bl bx ch cl cx dh di dil dl ds dx eax ebx ecx edi edx es rax rbx rcx rdi rdx
// Preserved: bp si sp
fn0800_C379_entry:
	*dsOut = ds
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -000E(16) Local -0012(16)

l0800_C379:
	segptr32 ptrLoc0C_118 = DPB(ptrLoc0C, 0x26E8, 0)
	word16 dx_19
	word16 ax_20 = fn0800_AFCB(ds, ptrLoc0C_118, out dx_19)
	branch (ax_20 | dx_19) != 0x0000 l0800_C397
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -000E(16) Local -0012(16)

l0800_C397:
	ptrLoc0C_118 = DPB(ptrLoc0C, ax_20, 0) (alias)
	branch fn0800_BFC7(ptrLoc0C_118, dx_19) >=u 0x0004 l0800_C3AA
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3AA:
	selector es_129 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[ptrLoc06:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3BD:
	branch ((int16) Mem0[ds:(int16) Mem0[es_129:ax_20 + 0x0001:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3D1:
	branch ((int16) Mem0[ds:(int16) Mem0[es_129:ax_20 + 0x0002:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C42C
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C3E5:
	branch Mem0[es_129:ax_20 + 0x0003:byte] == 0x2D l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3EF:
	branch Mem0[es_129:ax_20 + 0x0003:byte] == 0x2B l0800_C404
// DataOut: bx ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C3F6:
	branch (Mem0[ds:(int16) Mem0[es_129:ax_20 + 0x0003:byte] + 0x2251:byte] & 0x02) == 0x00 l0800_C42C
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -0012(16)

l0800_C404:
	selector es_168 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem0[ds:(int16) Mem0[ptrLoc06 + 0x0003:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C418:
	branch ((int16) Mem0[ds:(int16) Mem0[es_168:ax_20 + 0x0004:byte] + 0x2251:byte] & 0x0002) != 0x0000 l0800_C467
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16) Local -0012(16)

l0800_C467:
	fn0800_B083(Mem0[ds:0x26DE:word16], Mem0[ds:0x26E0:word16], 0x00, 0x0004)
	fn0800_C01E(DPB(ptrLoc12, Mem0[ds:0x26DA:word16], 0), Mem0[ds:0x26DC:word16], DPB(ptrLoc0E, ax_20, 0), 0x0003)
	ptr32 es_bx_215 = Mem0[ds:0x26DA:segptr32]
	Mem219[es_bx_215 + 0x0003:byte] = 0x00
	word16 dx_229
	word16 ax_230 = fn0800_A471((byte) es_bx_215, ds, DPB(ptrLoc0C, ax_20 + 0x0003, 0), out dx_229)
	word16 dx_247
	word16 ax_248 = fn0800_8F18(0x0E10, dx_229, 0x0000, ax_230, out dx_247)
	Mem249[ds:0x26E4:word16] = dx_247
	Mem250[ds:0x26E2:word16] = ax_248
	Mem251[ds:0x26E6:word16] = 0x0000
	word16 si_252 = 0x0003
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C542:
	branch Mem251[ptrLoc06 + si_252:byte] == 0x00 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C54B:
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4CA:
	branch (Mem251[ds:(int16) Mem251[ptrLoc06 + si_252:byte] + 0x2251:byte] & 0x0C) == 0x00 l0800_C541
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C541:
	si_252 = si_252 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32) Local -000E(16)

l0800_C4DA:
	branch fn0800_BFC7(DPB(ptrLoc0C, ax_20 + si_252, 0), dx_19) <u 0x0003 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(32)

l0800_C4ED:
	selector es_290 = SLICE(ptrLoc06, selector, 16)
	branch ((int16) Mem251[ds:(int16) Mem251[es_290:(word16) ptrLoc06 + 0x0001 + si_252:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C501:
	branch ((int16) Mem251[ds:(int16) Mem251[es_290:ax_20 + 0x0002 + si_252:byte] + 0x2251:byte] & 0x000C) == 0x0000 l0800_C54E
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16) Local -0006(16)

l0800_C515:
	fn0800_C01E(DPB(ptrLoc12, Mem251[ds:0x26DE:word16], 0), Mem251[ds:0x26E0:word16], DPB(ptrLoc0E, ax_20 + si_252, 0), 0x0003)
	Mem333[Mem251[ds:0x26DE:segptr32] + 0x0003:byte] = 0x00
	Mem334[ds:0x26E6:word16] = 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> dx:<invalid> es:<invalid> di:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C3A7:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C394:
// DataOut: ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:ds es:<invalid> di:<invalid> dx:<invalid> al:<invalid> ah:<invalid> bx:<invalid> ds:<invalid> si:<invalid> -12(fp):0x26E8 -10(fp):ds -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0012(16)

l0800_C42C:
	Mem69[ds:0x26E6:word16] = 0x0001
	Mem70[ds:0x26E4:word16] = 0x0000
	Mem71[ds:0x26E2:word16] = 0x4650
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DA:word16], 0), Mem71[ds:0x26DC:word16], DPB(ptrLoc0C_118, 0x26EB, 0))
	fn0800_BF9E(DPB(ptrLoc10, Mem71[ds:0x26DE:word16], 0), Mem71[ds:0x26E0:word16], DPB(ptrLoc0C_118, 0x26EF, 0))
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> ds:<invalid> si:<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp
// LocalsOut: fp(16)

l0800_C54E:
	return di
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 bp:fp - 0x0002 ax:<invalid> cx:<invalid> Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> si:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp

fn0800_C379_exit:
// DataOut: di ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> cx:<invalid> si:si Sequence es:bx:<invalid> al:<invalid> bx:<invalid> es:<invalid> di:<invalid> dx:<invalid> ah:<invalid> bh:<invalid> bl:<invalid> dl:<invalid> ds:<invalid> -18(fp):<invalid> -16(fp):<invalid> -14(fp):<invalid> -12(fp):<invalid> -10(fp):<invalid> -8(fp):si -6(fp):<invalid> -4(fp):<invalid> -2(fp):bp



word16 fn0800_C553(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, byte bArg08)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds
// LiveOut: ax
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)
fn0800_C553_entry:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C553:
	branch wArg04 != 0x0000 l0800_C589
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C589:
	branch wArg04 <u 0x0003 l0800_C59A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C58F:
	branch (wArg02 + 0x0046 & 0x0003) == 0x0000 l0800_C59D
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C59A:
	wArg06 = wArg06 - 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C59D:
	wArg06 = wArg06 + Mem0[ds:(wArg04 - 0x0001 << 0x0001) + 0x26C0:word16]
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> -4(fp):si -2(fp):bp 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C55D:
	word16 si_134 = wArg06
	branch wArg06 <u 0x003B l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C566:
	branch (wArg02 + 0x0046 & 0x0003) != 0x0000 l0800_C572
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C571:
	si_134 = wArg06 - 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0006(16) Stack +0008(8)

l0800_C572:
	wArg04 = 0x0000
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> -4(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C57C:
	branch Mem0[ds:(wArg04 << 0x0001) + 0x26C0:word16] <=u si_134 l0800_C579
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C579:
	wArg04 = wArg04 + 0x0001
// DataOut: di ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C587:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 si:<invalid> ax:<invalid> bx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5AA:
	word16 ax_34
	branch wArg04 <u 0x0004 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B0:
	branch wArg04 == 0x0004 l0800_C5BA
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B2:
	branch wArg04 >u 0x000A l0800_C62B
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5B8:
	branch wArg04 != 0x000A l0800_C626
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5BA:
	word16 cx_116
	word16 bx_66 = wArg04 << 0x0001
	branch wArg02 <= 0x0010 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5C5:
	branch wArg04 != 0x0004 l0800_C5D4
// DataOut: bx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D4:
	cx_116 = Mem0[ds:bx_66 + 0x26C0:word16]
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5CB:
	cx_116 = Mem0[ds:bx_66 + 0x26BE:word16] + 0x0007
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(8) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5D8:
	branch ((byte) (wArg02 + 0x07B2) & 0x03) == 0x00 l0800_C5E5
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E4:
	cx_116 = cx_116 - 0x0001
// DataOut: cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(8)

l0800_C5E5:
	word16 cx_96 = cx_116 - (uint16) ((uint32) ((uint16) (((wArg02 + 0x0001 >> 0x0002) + cx_116) + 0x0171)) % 0x0007)
	branch wArg04 != 0x0004 l0800_C61A
// DataOut: ax cx di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61A:
	branch wArg06 <u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C61E:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C620:
	branch bArg08 >u 0x01 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C60C:
	branch wArg06 >u cx_96 l0800_C626
// DataOut: di ds ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C610:
	branch wArg06 != cx_96 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16) Stack +0008(8)

l0800_C612:
	branch bArg08 <u 0x02 l0800_C62B
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62B:
	ax_34 = 0x0000
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C618:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:0x0007 si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C626:
	ax_34 = 0x0001
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>
// LocalsOut: fp(16)

l0800_C62D:
	return ax_34
// DataOut: ax di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 ax:<invalid> bx:<invalid> si:<invalid> cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>

fn0800_C553_exit:
// DataOut: ax
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp ax:<invalid> bx:<invalid> si:si cx:<invalid> Sequence dx:ax:<invalid> dx:<invalid> -4(fp):si -2(fp):bp 4(fp):<invalid> 6(fp):<invalid>



word16 fn0800_C632(selector ds, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & dlOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ds ss
// LiveOut: ax dl ds
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx es rax rbx rcx rdx
// Preserved: bp di si sp
// Stack args: Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)
fn0800_C632_entry:
	*dsOut = ds
	*dlOut = dl
// DataOut: dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0002(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C632:
	word16 ax_124
	branch wArg02 <u Mem0[ds:0x24E8:word16] l0800_C64E
// DataOut: di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0098(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C64E:
	byte al_102 = (byte) (wArg08 + 0x0001)
	branch wArg08 >=u 0xFFFF l0800_C65C
// DataOut: al di dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C65C:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0800) == 0x0000 l0800_C677
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C668:
	word16 dx_371
	al_102 = (byte) fn0800_8E29(0x00, ds, wArg02, 0x0000, 0x0000, 0x02, out dx_371) (alias)
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C677:
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x4000) != 0x0000 l0800_C696
// DataOut: al di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Stack +0004(16) Stack +0006(16) Stack +0008(16)

l0800_C696:
	Mem131[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0xFDFF
	word16 wLoc08_139 = wArg08
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C727:
	word16 wLoc06_165 = fp - 0x0090
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C731:
	branch wLoc08_139 == 0x0000 l0800_C73A
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C73A:
	word16 si_313 = wLoc06_165 - (fp - 0x0090)
	byte dl_317
	*dlOut = (byte) (0x0000 - (si_313 <u 0x0000))
	branch false l0800_C770
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C74E:
	byte dl_346
	word16 ax_347 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, DPB(ptrLoc9A, fp - 0x0090, 0), si_313, out dl_346)
	byte dl_350
	*dlOut = (byte) ax_347
	branch ax_347 == si_313 l0800_C770
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> Sequence es:bx:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C770:
	ax_124 = wArg08
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C762:
	branch ax_347 == 0xFFFF l0800_C71A
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Stack +0008(16)

l0800_C767:
// DataOut: ax dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C737:
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(32) Local -000E(32) Stack +0008(16)

l0800_C6B4:
	wLoc08_139 = wLoc08_139 - 0x0001
	byte al_241 = Mem131[ptrLoc0E:byte]
	branch al_241 != 0x0A l0800_C6D1
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6C7:
	Mem306[ptrLoc06:byte] = 0x0D
	wLoc06_165 = wLoc06_165 + 0x0001
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(32) Local -0008(0) Local -0009(8) Local -000E(32) Stack +0008(16)

l0800_C6D1:
	Mem251[ptrLoc06:byte] = al_241
	word16 v26_252 = wLoc06_165 + 0x0001
	word16 dx_257 = v26_252 - (fp - 0x0090)
	wLoc06_165 = v26_252
	word16 bx_261 = 0x0000 - (dx_257 <u 0x0000)
	branch bx_261 < 0x0000 l0800_C731
// DataOut: di ds dx ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6EF:
	branch bx_261 != 0x0000 l0800_C6F7
// DataOut: di ds dx ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F1:
	branch dx_257 <u 0x0080 l0800_C731
// DataOut: di ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0006(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C6F7:
	word16 si_273 = v26_252 - (fp - 0x0090)
	ptrLoc9A = DPB(ptrLoc9A, fp - 0x0090, 0) (alias)
	byte dl_288
	word16 ax_289 = fn0800_C779((byte) (fp - 0x0090), ds, wArg02, ptrLoc9A, si_273, out dl_288)
	byte dl_292
	*dlOut = (byte) ax_289
	branch ax_289 == si_273 l0800_C727
// DataOut: di dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:fp - 0x0090 bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(0) Local -000E(32) Stack +0008(16)

l0800_C715:
	branch ax_289 != 0xFFFF l0800_C71F
// DataOut: dl ds dx si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16) Local -0008(16) Stack +0008(16)

l0800_C71F:
// DataOut: ax dx si
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> Sequence es:bx:<invalid> si:<invalid> ds:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C76A:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

l0800_C71A:
	ax_124 = 0xFFFF
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C76E:
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:0xFFFF bx:<invalid> ah:0xFF al:0xFF cx:<invalid> dx:<invalid> si:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):fp - 0x0090 -152(fp):ss -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp
// LocalsOut: fp(16)

l0800_C683:
	byte dl_123
	ax_124 = fn0800_C779(al_102, ds, wArg02, DPB(ptrLoc9A, wArg04, 0), wArg08, out dl_123)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:0x42 al:<invalid> cx:<invalid> dx:<invalid> -156(fp):<invalid> -154(fp):0x0000 -152(fp):0x0000 -150(fp):0x0002 -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C657:
	ax_124 = 0x0000
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C644:
	ax_124 = fn0800_8D2B(ds, 0x0006)
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> -148(fp):di -146(fp):si -2(fp):bp
// LocalsOut: fp(16)

l0800_C773:
	return ax_124
// DataOut: ax dl ds ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0094 bp:fp - 0x0002 di:<invalid> ax:<invalid> bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> si:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp

fn0800_C632_exit:
// DataOut: ax dl ds
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp di:di ax:<invalid> si:si bx:<invalid> ah:<invalid> al:<invalid> cx:<invalid> dx:<invalid> ds:<invalid> Sequence es:bx:<invalid> -156(fp):<invalid> -154(fp):<invalid> -152(fp):<invalid> -150(fp):<invalid> -148(fp):di -146(fp):si -14(fp):<invalid> -12(fp):<invalid> -9(fp):<invalid> -8(fp):<invalid> -6(fp):<invalid> -4(fp):ss -2(fp):bp



word16 fn0800_C779(byte al, selector ds, word16 wArg02, segptr32 ptrArg04, word16 wArg08, ptr16 & dlOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ds
// LiveOut: ax dl
// Trashed: SCZO ah al ax bh bl bx ch cl cx dh dl ds dx eax ebx ecx edx rax rbx rcx rdx
// Preserved: bp ds sp
// Stack args: Stack +0002(16) Stack +0004(32) Stack +0008(16)
fn0800_C779_entry:
	*dlOut = dl
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C779:
	word16 wLoc04_36
	word16 ax_23
	branch (Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] & 0x0001) == 0x0000 l0800_C78F
// DataOut: al di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0002(16) Stack +0004(32) Stack +0008(16)

l0800_C78F:
	byte dl_59 = (byte) ptrArg04
	*dlOut = dl_59
	word16 ax_60
	branch msdos_write_file(wArg02, wArg08, ptrArg04, out ax_60) l0800_C7AF
// DataOut: ax di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Stack +0002(16)

l0800_C7AF:
	wLoc04_36 = ax_60
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7A0:
	Mem70[ds:(wArg02 << 0x0001) + 0x24EA:word16] = Mem0[ds:(wArg02 << 0x0001) + 0x24EA:word16] | 0x1000
	ax_23 = ax_60
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):ds -2(fp):bp

l0800_C789:
	wLoc04_36 = 0x0005
// DataOut: di dl ds si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> -2(fp):bp
// LocalsOut: fp(16) Local -0004(16)

l0800_C7B0:
	ax_23 = fn0800_8D2B(ds, wLoc04_36)
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 bp:fp - 0x0002 bx:<invalid> ax:0x0005 ah:0x40 cx:<invalid> Sequence ds:dx:<invalid> ds:ds -4(fp):<invalid> -2(fp):bp

l0800_C7B3:
	return ax_23
// DataOut: ax di dl si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 bp:fp - 0x0002 bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp

fn0800_C779_exit:
// DataOut: ax dl
// DataOut (flags): 
// SymbolicIn: sp:fp bp:bp bx:<invalid> ax:<invalid> ah:<invalid> cx:<invalid> Sequence ds:dx:<invalid> ds:ds al:0xFF -4(fp):<invalid> -2(fp):bp



void fn1483_0ADB()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved: sp
fn1483_0ADB_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0ADB:
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0ADB_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



real64 fn1483_0ADC(byte al, byte ah, word16 cx, word16 dx, byte bl, word16 bp, word16 si, word16 di, selector es, selector ds, selector fs, real64 rArg0)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bl bp ch cl cs cx dh di dl ds dx es fs si ss
// LiveOut:
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn1483_0ADC_entry:
// DataOut: ah al bl bp ch cl cs cx dh di dl ds dx es fs si ss
// DataOut (flags): P
// SymbolicIn: sp:fp

l1483_0ADC:
	word16 cx_18
	word16 dx_19
	word16 bx_20
	word16 bp_21
	word16 si_22
	word16 di_23
	selector es_24
	word16 ax_25 = fn1483_0D3F(al, ah, cx, dx, bl, bp, si, di, es, ds, fs, wLoc02, wArg00, wArg02, wArg04, wArg06, out cx_18, out dx_19, out bx_20, out bp_21, out si_22, out di_23, out es_24)
	real64 rArg0_28 = Mem0[es_24:di_23 + 0xE086:real32] - rArg0
	Mem31[ss:fp - 0x0002:word16] = ax_25
	Mem34[ss:fp - 0x0004:word16] = cx_18
	Mem36[ss:fp - 0x0006:word16] = dx_19
	Mem38[ss:fp - 0x0008:word16] = bx_20
	Mem40[ss:fp - 0x000A:word16] = fp
	Mem42[ss:fp - 0x000C:word16] = bp_21
	Mem44[ss:fp - 0x000E:word16] = si_22
	Mem46[ss:fp - 0x0010:word16] = di_23
	return rArg0_28
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0ADC_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> si:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> dl:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> eax:<invalid> -16(fp):di -14(fp):si -12(fp):bp -10(fp):fp -8(fp):bx -6(fp):dx -4(fp):cx -2(fp):ax



word16 fn1483_0C11(byte al, word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bl bp bx cx di ds es si ss
// LiveOut: ax bp bx cx di dx es
// Trashed: SCZDO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: si
l1483_0C11:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C11_entry:
// DataOut: al bl bp bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_0C11:
	branch al != Mem0[ss:si:byte] l1483_0C4D
// DataOut: al bl bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Local -0002(16) Local -0004(16)

l1483_0C4D:
	word16 ax_79 = DPB(ax, al + 0x01, 0)
// DataOut: al ax bl bp bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp - 0x0004 dx:0x8000 -4(fp):si -2(fp):cx

l1483_0C53_thunk_fn1483_0C55:
	word16 cx_87
	word16 dx_88
	word16 bx_89
	word16 bp_90
	word16 si_91
	word16 di_92
	selector es_93
	return fn1483_0C55(ax_79, cx, bx, bp, si, di, es, ds, wArg00, wArg02, wArg04, out cx_87, out dx_88, out bx_89, out bp_90, out si_91, out di_92, out es_93)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:0x4000 si:si cx:cx al:al + 0x01 -4(fp):si -2(fp):cx

l1483_0C1B:
	branch al - 0x8C - (al <u Mem0[ss:si:byte]) != 0x00 && cx != 0x0001 l1483_0C22_thunk_fn1483_0C6C
// DataOut: al bl bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 dx:0x8000 -4(fp):si -2(fp):cx

l1483_0C22_thunk_fn1483_0C6C:
	word16 cx_64
	word16 dx_65
	word16 bx_66
	word16 bp_67
	word16 di_68
	selector es_69
	return fn1483_0C6C(0x55, cx - 0x0001, 0x80, 0x00, bx, bp, si, di, es, ds, out cx_64, out dx_65, out bx_66, out bp_67, out di_68, out es_69)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 dx:0x8000 al:0x55 ax:0x1955 cx:cx - 0x0001 -8(fp):bx -6(fp):ax -4(fp):si -2(fp):cx

fn1483_0C11_exit:
// DataOut: ax bp bx cx di dx es
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> al:<invalid> ax:<invalid> cx:<invalid> si:<invalid> di:<invalid> eax:<invalid> dh:<invalid> ch:<invalid> es:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> cl:<invalid> ah:<invalid> -8(fp):bx -6(fp):ax -4(fp):si -2(fp):cx

l1483_0C24:
	Mem54[es:di:word16] = 0x1955
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0008 dx:0x8000 al:0x55 ax:0x1955 cx:cx - 0x0001 -8(fp):bx -6(fp):ax -4(fp):si -2(fp):cx



word16 fn1483_0C55(word16 ax, word16 cx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, word16 wArg00, word16 wArg02, word16 wArg04, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  Z al ax bl bp bx cx di ds es si ss
// LiveOut: ax bp bx cx di dx es si
// Trashed: SCZDO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16) Stack +0002(16) Stack +0004(16)
l1483_0C55:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C55_entry:
	*cxOut = cx
	*bxOut = bx
	*bpOut = bp
	*esOut = es
	*siOut = si
// DataOut: al ax bl bp bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16)

l1483_0C55:
	branch Z l1483_0C55_thunk_fn1483_0C11
// DataOut: al ax bl bp bx cx di ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) Stack +0002(16) Stack +0004(16)

l1483_0C55_thunk_fn1483_0C11:
	word16 cx_43
	word16 dx_44
	word16 bx_45
	word16 bp_46
	word16 di_47
	selector es_48
	return fn1483_0C11(al, cx, bx, bp, si, di, es, ds, out cx_43, out dx_44, out bx_45, out bp_46, out di_47, out es_48)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0C57:
	word16 si_23
	*siOut = wArg00
	word16 dx_31
	*dxOut = wArg02
	word16 di_34
	*diOut = wArg04
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0C55_exit:
// DataOut: ax bp bx cx di dx es si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> si:<invalid> dx:<invalid> di:<invalid> al:<invalid> ax:<invalid> cx:<invalid> eax:<invalid> dh:<invalid> ch:<invalid> es:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> cl:<invalid> ah:<invalid>



word16 fn1483_0C6C(byte al, word16 cx, byte dh, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bl bp bx cx dh di dl ds es si ss
// LiveOut: ax bp bx cx di dx es
// Trashed: SCZDO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: ebx
l1483_0C6C:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C6C_entry:
	*esOut = es
// DataOut: al bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0C6C:
	byte al_4
	__daa(al, &al_4)
	word16 bp_10
	word16 ax_16 = fn1483_1BB8(al_4, cx, bp, si, ds, out bp_10) + Mem0[ds:bx + 0x3303:word16]
	word16 di_15 = di + Mem0[ds:bx:word16]
	byte dh_28 = dh + Mem0[ds:si + 0x147C:byte] + (ax_16 <u 0x0000)
	word16 sp_39 = Mem0[ss:fp:word16]
	word16 v17_41 = Mem0[ds:ax_16 + 0x020E + di_15:word16] + di_15
	Mem42[ds:ax_16 + 0x020E + di_15:word16] = v17_41
	word16 ax_33 = (word16) ebx - 0x0903 - (dh_28 <u 0x00)
	word16 dx_30 = DPB(dx, dh_28, 8)
	byte al_34 = (byte) ax_33
	byte ah_37 = SLICE(ax_33, byte, 8)
	byte ch_46 = SLICE(cx - 0x0001, byte, 8)
	branch v17_41 != 0x0000 && cx != 0x0001 l1483_0C85_thunk_fn1483_0CA0
// DataOut: ah al bl bp bx ch cl cx di dl ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0C85_thunk_fn1483_0CA0:
	word16 cx_111
	word16 dx_112
	word16 bx_113
	word16 bp_114
	word16 di_115
	return fn1483_0CA0(al_34, ah_37, dl, ax_16, bp_10, si, di_15, es, ds, out cx_111, out dx_112, out bx_113, out bp_114, out di_115)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:cx - 0x0001 bp:<invalid>

l1483_0C87:
	word16 ax_77 = Mem42[ds:ax_16:word16]
	Mem80[ss:sp_39:word16] = si
	Mem84[es:di_15:byte] = Mem80[ds:si:byte]
	word16 dx_73 = dx_30 | cx - 0x0001
	word16 cx_82 = DPB(cx - 0x0001, ch_46 + (byte) ax_77, 8)
// DataOut: ah al ax bl bp bx ch cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:cx - 0x0001 bp:<invalid>

l1483_0C8F_thunk_fn1483_0C91:
	word16 cx_98
	word16 dx_99
	word16 bx_100
	word16 bp_101
	word16 si_102
	word16 di_103
	selector es_104
	return fn1483_0C91(ax_77 * 0x0002, cx_82, dx_73, ax_16, bp_10, si + 0x0001, di_15 + 0x0001, ds, psegArg00, out cx_98, out dx_99, out bx_100, out bp_101, out si_102, out di_103, out es_104)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:<invalid> dx:dx | cx - 0x0002 ch:<invalid> si:si + 0x0001 bp:<invalid>

fn1483_0C6C_exit:
// DataOut: ax bp bx cx di dx es
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> di:<invalid> ax:<invalid> eax:<invalid> ebx:ebx dh:<invalid> cx:<invalid> dx:<invalid> ch:<invalid> si:<invalid> es:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> cl:<invalid> ah:<invalid>



word16 fn1483_0C91(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector ds, selector psegArg00, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C ah al ax bl bp bx ch cx di ds dx si ss
// LiveOut: ax bp bx cx di dx es si
// Trashed: SCZDO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
// Stack args: Stack +0000(16)
l1483_0C91:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0C91_entry:
	*siOut = si
// DataOut: ah al ax bl bp bx ch cx di ds dx si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0C91:
	byte al_11 = al + ch
	selector es_3 = psegArg00
	*esOut = es_3
	word16 ax_12 = DPB(ax, al_11, 0)
	branch !OVERFLOW(al_11) l1483_0C96_thunk_fn1483_0C55
// DataOut: ah al ax bl bp bx cx di ds es si ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0C96_thunk_fn1483_0C55:
	word16 cx_164
	word16 dx_165
	word16 bx_166
	word16 bp_167
	word16 si_168
	word16 di_169
	selector es_170
	return fn1483_0C55(ax_12, cx, bx, bp, si, di, psegArg00, ds, psegArg00, wArg02, wArg04, out cx_164, out dx_165, out bx_166, out bp_167, out si_168, out di_169, out es_170)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 es:<invalid> dx:<invalid> al:al + ch

l1483_0C98:
	word16 dx_54 = Mem0[ds:bx + si:word16] *s 0x0018
	byte dl_55 = (byte) dx_54
	branch dx_54 == 0x0000 && cx != 0x0001 l1483_0CA9_in_fn1483_0C91
// DataOut: ah al ax bl bp bx cx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 es:<invalid> dx:<invalid> al:al + ch
// LocalsOut: fp(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0CA9_in_fn1483_0C91:
	Mem85[ds:bx:byte] = v13
	byte bl_87 = bl + ah
	word16 bx_88 = DPB(bx, bl_87, 0)
	Mem92[ds:bx_88 - 0x0056 + di:byte] = __rol(Mem85[ds:bx_88 - 0x0056 + di:byte], 0xE2)
	Mem94[ss:bp + 0x007B:word16] = __ror(Mem92[ss:bp + 0x007B:word16], 0x01)
	Mem99[ds:bx_88:byte] = v21
	byte bl_100 = bl_87 & Mem99[ds:bx_88:byte]
	byte al_90 = (byte) (ax_12 - 0x32AC)
	Mem103[psegArg00:di:byte] = al_90
	word16 bx_101 = DPB(bx, bl_100, 0)
	Mem108[ds:bx_101:word16] = v23
	Mem115[ds:di + 0x0015:word16] = ax_12 - 0xBDCB
	word16 sp_118
	selector es_119
	selector ss_120
	byte C_121
	word16 dx_122
	word16 ax_123
	byte SCZO_124
	byte al_125
	byte ch_126
	byte O_127
	word16 bx_128
	word16 si_129
	selector ds_130
	word16 cx_131
	byte Z_132
	byte dl_133
	word16 bp_134
	byte SZO_135
	byte bl_136
	byte ah_137
	word16 di_138
	byte cl_139
	call fn1483_4FE0 (retsize: 2;)
		uses: ah,al_90,ax_117,bl_100,bp_86,bx_101,C_102,ch_111,cl_112,cx_110,di_104,dl_82,ds,dx_81,es_3,O_17,SCZO_113,si,sp_4,ss,SZO_16,wLoc02,wLoc04,Z_57
		defs: ah_137,al_125,ax_123,bl_136,bp_134,bx_128,C_121,ch_126,cl_139,cx_131,di_138,dl_133,ds_130,dx_122,es_119,O_127,SCZO_124,si_129,sp_118,ss_120,SZO_135,Z_132
	Mem142[ds_130:0xF7E3:word16] = v26
	Mem146[ds_130:bx_128 + di_138:word16] = v27
	word16 cx_155
	*cxOut = DPB(cx_131, cl_139 - Mem146[ss_120:(bp_134 + 0x027E) + di_138:byte] - (v27 <u 0x0000), 0)
	return __inw(0x8B)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 es:<invalid> dx:<invalid> al:al + ch cx:cx - 0x0001

l1483_0C9D:
	Mem63[ds:bx + 0x2203 + si:word16] = Mem0[ds:bx + 0x2203 + si:word16] + (cx - 0x0001)
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 es:<invalid> dx:<invalid> al:al + ch cx:cx - 0x0001

l1483_0C9D_thunk_fn1483_0CA1:
	word16 cx_68
	word16 dx_69
	word16 bx_70
	word16 bp_71
	word16 di_72
	return fn1483_0CA1(ah, al_11, dl_55, bx, bp, si, di, psegArg00, ds, out cx_68, out dx_69, out bx_70, out bp_71, out di_72)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0002 es:<invalid> dx:<invalid> al:al + ch cx:cx - 0x0001

fn1483_0C91_exit:
// DataOut: ax bp bx cx di dx es si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> es:<invalid> dx:<invalid> al:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> bl:<invalid> ax:<invalid> di:<invalid> cl:<invalid> si:<invalid> ah:<invalid> eax:<invalid> dh:<invalid> ch:<invalid>



word16 fn1483_0CA0(byte al, byte ah, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bl bp bx di dl ds es si ss
// LiveOut: ax bp bx cx di dx
// Trashed: SCZO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esp rax rbp rbx rcx rdi rdx rsp sp spl
// Preserved: sp
l1483_0CA0:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0CA0_entry:
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CA0:
	byte al_5 = al & Mem0[ds:0x3101:byte]
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CA0_thunk_fn1483_0CA1:
	word16 cx_17
	word16 dx_18
	word16 bx_19
	word16 bp_20
	word16 di_21
	return fn1483_0CA1(ah, al_5, dl, bx, bp, si, di, es, ds, out cx_17, out dx_18, out bx_19, out bp_20, out di_21)
// DataOut: ax bp bx cx di dx es ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid>

fn1483_0CA0_exit:
// DataOut: ax bp bx cx di dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> ah:<invalid> dl:<invalid> dx:<invalid> bp:<invalid> bl:<invalid> ax:<invalid> di:<invalid> cx:<invalid> cl:<invalid>



word16 fn1483_0CA1(byte ah, byte al, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bl bp bx di dl ds es si ss
// LiveOut: ax bp bx cx di dx
// Trashed: SCZO ah al ax bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esp rax rbp rbx rcx rdi rdx rsp sp spl
// Preserved:
l1483_0CA1:
	ah = ah + Mem0[ds:bx + si:byte]
	ax = DPB(ax, ah, 8) (alias)
	SCZO = cond(ah)
	call fn1483_FD4E (retsize: 2;)
		defs: ah,al,ax,bl,bp,bx,C,cl,cx,di,dl,ds,dx,es,SCZO,si,sp,ss,SZO
// DataOut: ah ax bl bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn:

l1483_0CA9:
	dl = dl + Mem0[ds:bx:byte]
	dx = Mem0[ds:si + 0x173E:word16] *s 0x0C62
	dl = (byte) dx (alias)
	v43 = Mem0[ds:bx:byte] + dl
	Mem0[ds:bx:byte] = v43
	bp = bp - 0x0001
	bl = bl + ah
	bx = DPB(bx, bl, 0) (alias)
	ax = ax - 0x32AC
	al = (byte) ax (alias)
	v44 = (Mem0[ds:bx - 0x0056 + di:byte] & 0x40) != 0x00
	Mem0[ds:bx - 0x0056 + di:byte] = __rol(Mem0[ds:bx - 0x0056 + di:byte], 0xE2)
	v45 = (Mem0[ss:bp + 0x007C:word16] & 0x0002) != 0x0000
	Mem0[ss:bp + 0x007C:word16] = __ror(Mem0[ss:bp + 0x007C:word16], 0x01)
	C = v45
	v46 = Mem0[ds:bx:byte] + bl + C
	Mem0[ds:bx:byte] = v46
	bl = bl & Mem0[ds:bx:byte]
	bx = DPB(bx, bl, 0) (alias)
	C = false
	Mem0[es:di:byte] = al
	di = di + 0x0001
	ax = ax - 0x8B1F - C
	v47 = Mem0[ds:bx:word16] + bx
	Mem0[ds:bx:word16] = v47
	cx = di
	cx = cx - si
	cl = (byte) cx (alias)
	SCZO = cond(cx)
	v48 = Mem0[ds:di + 0x0014:word16]
	Mem0[ds:di + 0x0014:word16] = ax
	ax = v48
	call fn1483_4FE0 (retsize: 2;)
		defs: ah,al,ax,bl,bp,bx,C,cl,cx,di,dl,ds,dx,es,SCZO,si,sp,ss,SZO
	v49 = Mem0[ds:0xF7E3:word16] - dx
	Mem0[ds:0xF7E3:word16] = v49
	ax = ax - sp
	v50 = Mem0[ds:bx + di:word16] + bp
	Mem0[ds:bx + di:word16] = v50
	SCZO = cond(v50)
	C = SCZO (alias)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = si
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = cx
	cl = cl - Mem0[ss:(bp + 0x027E) + di:byte] - C
	cx = DPB(cx, cl, 0) (alias)
	SCZO = cond(cl)
	sp = sp - 0x0002
	Mem0[ss:sp:word16] = si
	ax = __inw(0x8B)
	ah = SLICE(ax, byte, 8) (alias)
	al = (byte) ax (alias)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

l1483_0CE5:
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

fn1483_0CA1_entry:
	def fp
	def es
	def ds
	def bx
	def di
	def Mem0
	def si
	def ah
	def ax
	def v13
	def v19
	def v21
	def v23
	def v25
	def v26
	def v27
	def v27
	def cxOut
	def dxOut
	def bxOut
	def bpOut
	def diOut
// DataOut: ah al bl bp bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0CA1:
	sp_1 = fp
	sp_2 = fp - 0x0002
	wLoc02_4 = es
	v9_10 = Mem0[ds:bx + di:word16] + si
	Mem11[ds:bx + di:word16] = v9_10
	ah_13 = ah + Mem11[ds:bx + si:byte]
	ax_15 = DPB(ax, ah_13, 8) (alias)
	SCZO_16 = cond(ah_13)
	call fn1483_FD4E (retsize: 2; depth: 4)
		uses: ah_13,ax_15,bx,di,ds,es,SCZO_16,si,sp_2,wLoc02_4
		defs: ah_25,al_33,ax_31,bl_30,bp_28,bx_20,C_32,cl_35,cx_34,di_21,dl_26,ds_22,dx_27,es_18,SCZO_24,si_23,sp_17,ss_19,SZO_29
// DataOut: ah ax bl bp bx di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: v13(8) v19(8) v21(8) v23(16) v25(16) v26(16) v27(16)

l1483_0CA9_in_fn1483_0CA1:
	dl_36 = dl_26 + Mem11[ds_22:bx_20:byte]
	dx_37 = Mem11[ds_22:si_23 + 0x173E:word16] *s 0x0C62
	dl_38 = (byte) dx_37 (alias)
	v13_39 = Mem11[ds_22:bx_20:byte] + dl_38
	Mem41[ds_22:bx_20:byte] = v13
	bp_42 = bp_28 - 0x0001
	bl_43 = bl_30 + ah_25
	bx_44 = DPB(bx_20, bl_43, 0) (alias)
	ax_45 = ax_31 - 0x32AC
	al_46 = (byte) ax_45 (alias)
	v17_47 = (Mem41[ds_22:bx_44 - 0x0056 + di_21:byte] & 0x40) != 0x00
	Mem48[ds_22:bx_44 - 0x0056 + di_21:byte] = __rol(Mem41[ds_22:bx_44 - 0x0056 + di_21:byte], 0xE2)
	v19_49 = (Mem48[ss_19:bp_42 + 0x007C:word16] & 0x0002) != 0x0000
	Mem50[ss_19:bp_42 + 0x007C:word16] = __ror(Mem48[ss_19:bp_42 + 0x007C:word16], 0x01)
	C_52 = v19
	v21_53 = Mem50[ds_22:bx_44:byte] + bl_43 + C_52
	Mem55[ds_22:bx_44:byte] = v21
	bl_56 = bl_43 & Mem55[ds_22:bx_44:byte]
	bx_57 = DPB(bx_44, bl_56, 0) (alias)
	C_58 = false
	Mem59[es_18:di_21:byte] = al_46
	di_60 = di_21 + 0x0001
	ax_61 = ax_45 - 0x8B1F - C_58
	v23_62 = Mem59[ds_22:bx_57:word16] + bx_57
	Mem64[ds_22:bx_57:word16] = v23
	cx_65 = di_60
	cx_66 = cx_65 - si_23
	cl_67 = (byte) cx_66 (alias)
	SCZO_68 = cond(cx_66)
	v25_69 = Mem64[ds_22:di_60 + 0x0014:word16]
	Mem70[ds_22:di_60 + 0x0014:word16] = ax_61
	ax_72 = v25
	call fn1483_4FE0 (retsize: 2; depth: 2)
		uses: ah_25,al_46,ax_72,bl_56,bp_42,bx_57,C_58,cl_67,cx_66,di_60,dl_38,ds_22,dx_37,es_18,SCZO_68,si_23,sp_17,ss_19,SZO_29,wLoc02_4
		defs: ah_81,al_89,ax_87,bl_86,bp_84,bx_76,C_88,cl_91,cx_90,di_77,dl_82,ds_78,dx_83,es_74,SCZO_80,si_79,sp_73,ss_75,SZO_85
	v26_92 = Mem70[ds_78:0xF7E3:word16] - dx_83
	Mem94[ds_78:0xF7E3:word16] = v26
	ax_95 = ax_87 - sp_73
	v27_96 = Mem94[ds_78:bx_76 + di_77:word16] + bp_84
	Mem98[ds_78:bx_76 + di_77:word16] = v27
	SCZO_100 = cond(v27)
	C_101 = SCZO_100 (alias)
	sp_102 = sp_73 - 0x0002
	Mem103[ss_75:sp_102:word16] = si_79
	sp_104 = sp_102 - 0x0002
	Mem105[ss_75:sp_104:word16] = cx_90
	cl_106 = cl_91 - Mem105[ss_75:(bp_84 + 0x027E) + di_77:byte] - (v27 <u 0x0000)
	cx_107 = DPB(cx_90, cl_106, 0) (alias)
	SCZO_108 = cond(cl_106)
	sp_109 = sp_104 - 0x0002
	Mem110[ss_75:sp_109:word16] = si_79
	ax_111 = __inw(0x8B)
	ah_112 = SLICE(ax_111, byte, 8) (alias)
	al_113 = (byte) ax_111 (alias)
	return ax_111
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> -2(fp):es

fn1483_0CA1_exit:
	use cx_107 (=> cxOut)
	use dx_83 (=> dxOut)
	use bx_76 (=> bxOut)
	use bp_84 (=> bpOut)
	use di_77 (=> diOut)
// DataOut: ax bp bx cx di dx
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ah:<invalid> dl:<invalid> dx:<invalid> bp:bp - 0x0001 bl:<invalid> ax:<invalid> di:di + 0x0001 cx:<invalid> cl:<invalid> -2(fp):es



word16 fn1483_0CFA(byte al, byte ah, word16 cx, word16 dx, byte bl, word16 bp, word16 si, word16 di, selector ds, selector fs, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C ah al bl bp ch cx di ds dx fs si ss
// LiveOut: ax bp bx cx di dx es si
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
l1483_0CFA:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_0CFA_entry:
// DataOut: ah al bl bp ch cx di ds dx fs si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_0CFA:
	Mem8[ds:si + 0xD832:byte] = Mem0[ds:si + 0xD832:byte] - ch - C
// DataOut: ah al bl bp ch cx di ds dx fs si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CFA_thunk_fn1483_0CFC:
	word16 cx_18
	word16 dx_19
	word16 bx_20
	word16 bp_21
	word16 si_22
	word16 di_23
	selector es_24
	return fn1483_0CFC(al, ah, cx, dx, bl, bp, si, di, ds, fs, out cx_18, out dx_19, out bx_20, out bp_21, out si_22, out di_23, out es_24)
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_0CFA_exit:
// DataOut: ax bp bx cx di dx es si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bl:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> ax:<invalid> di:<invalid> cl:<invalid> ah:<invalid> si:<invalid> bx:<invalid> eax:<invalid> dh:<invalid> ch:<invalid>



word16 fn1483_0CFC(byte al, byte ah, word16 cx, word16 dx, byte bl, word16 bp, word16 si, word16 di, selector ds, selector fs, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ah al bl bp ch cx di ds dx fs si ss
// LiveOut: ax bp bx cx di dx es si
// Trashed: SCZDO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved: sp
l1483_0CFC:
	al = Mem0[ds:bx + di:byte]
	ax = DPB(ax, al, 0) (alias)
	Mem0[ss:bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
// DataOut: ah al ax bl bp bx ch cx di ds dx es fs si ss
// DataOut (flags): C
// SymbolicIn:

l1483_0D04_thunk_fn1483_0C91:
	ax = fn1483_0C91(ax, cx, dx, bx, bp, si, di, ds, psegArg00, out cx, out dx, out bx, out bp, out si, out di, out es)
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

l1483_0D02_thunk_fn1483_0D06:
	ax = fn1483_0D06(ax, dx, bx, ds, fs, out cx, out dx, out bx, out bp, out si, out di)
	al = (byte) ax (alias)
	ah = SLICE(ax, byte, 8) (alias)
	return ax
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn:

fn1483_0CFC_entry:
	def fp
	def bl
	def al
	def bx
	def ds
	def di
	def Mem0
	def ax
	def ss
	def bp
	def si
	def cx
	def cxOut
	def dxOut
	def bxOut
	def bpOut
	def siOut
	def diOut
	def esOut
	def dx
	def fs
	def es
	def psegLoc02
// DataOut: ah al bl bp ch cx di ds dx es fs si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0CFC:
	sp_1 = fp
	bl_4 = bl ^ al
	bx_6 = DPB(bx, bl_4, 0) (alias)
	SZO_7 = cond(bl_4)
	C_8 = false
	al_12 = Mem0[ds:bx_6 + di:byte]
	ax_14 = DPB(ax, al_12, 0) (alias)
	Mem15[ss:bp + si:word16] = 0xD1FF
	branch cx == 0x0000 l1483_0D04_thunk_fn1483_0C91
// DataOut: ah al ax bl bp bx ch cx di ds dx es fs si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_0D04_thunk_fn1483_0D06:
	ax_66 = fn1483_0D06(ax_14, dx, bx_6, ds, fs, out cx_60, out dx_61, out bx_62, out bp_63, out si_64, out di_65)
	al_67 = (byte) ax_66 (alias)
	ah_68 = SLICE(ax_66, byte, 8) (alias)
	return ax_66
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bl:bl ^ al al:<invalid>

l1483_0D04_thunk_fn1483_0C91:
	ax_57 = fn1483_0C91(ax_14, cx, dx, bx_6, bp, si, di, ds, psegLoc02, out cx_50, out dx_51, out bx_52, out bp_53, out si_54, out di_55, out es_56)
	al_58 = (byte) ax_57 (alias)
	ah_59 = SLICE(ax_57, byte, 8) (alias)
	return ax_57
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bl:bl ^ al al:<invalid>

l1483_0D04_thunk_fn1483_0D06:
	ax_45 = fn1483_0D06(ax_14, dx, bx_6, ds, fs, out cx_39, out dx_40, out bx_41, out bp_42, out si_43, out di_44)
	al_46 = (byte) ax_45 (alias)
	ah_47 = SLICE(ax_45, byte, 8) (alias)
	return ax_45
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp bl:bl ^ al al:<invalid>

fn1483_0CFC_exit:
	es_20 = PHI(es_56, es, es, es, es)
	cx_21 = PHI(cx_50, cx_39, cx_60, cx, cx)
	dx_22 = PHI(dx_51, dx_40, dx_61, dx, dx)
	bx_23 = PHI(bx_52, bx_41, bx_62, bx, bx)
	bp_24 = PHI(bp_53, bp_42, bp_63, bp, bp)
	si_25 = PHI(si_54, si_43, si_64, si, si)
	di_26 = PHI(di_55, di_44, di_65, di, di)
	ax_27 = PHI(ax_57, ax_45, ax_66, ax, ax)
	al_28 = PHI(al_58, al_46, al_67, al, al)
	ah_29 = PHI(ah_59, ah_47, ah_68, ah, ah)
	use cx_21 (=> cxOut)
	use dx_22 (=> dxOut)
	use bx_23 (=> bxOut)
	use bp_24 (=> bpOut)
	use si_25 (=> siOut)
	use di_26 (=> diOut)
	use es_20 (=> esOut)
// DataOut: ax bp bx cx di dx es si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> bl:<invalid> al:<invalid> es:<invalid> dx:<invalid> cx:<invalid> dl:<invalid> bp:<invalid> ax:<invalid> di:<invalid> cl:<invalid> ah:<invalid> si:<invalid> bx:<invalid> eax:<invalid> dh:<invalid> ch:<invalid>



word16 fn1483_0D06(word16 ax, word16 dx, word16 bx, selector ds, selector fs, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  C al ax bx ds dx fs ss
// LiveOut: ax bp bx cx di dx si
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn1483_0D06_entry:
	*bxOut = bx
	*dxOut = dx
	*diOut = di
	*siOut = si
	*bpOut = bp
	*cxOut = cx
// DataOut: al ax bp bx cx di ds dx es fs si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: v3(16)

l1483_0D06:
	Mem8[ds:bx + 0xE209:word16] = Mem0[ds:bx + 0xE209:word16] - dx - C
	word16 ax_10 = ax - 0x5EF1
	branch bx == dx l1483_0D2B
// DataOut: al ax bp bx cx di ds dx es fs si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_0D11:
	msdos_display_string(SEQ(ds, 1483:0D21))
	word16 ax_63 = Mem8[ss:v3 + 0x000E:word16]
	word16 di_49 = Mem8[ss:v3:word16]
	*diOut = di_49
	word16 bp_53 = Mem8[ss:v3 + 0x0004:word16]
	*bpOut = bp_53
	word16 si_51
	*siOut = Mem8[ss:v3 + 0x0002:word16]
	word16 bx_56 = Mem8[ss:v3 + 0x0008:word16]
	word16 dx_58
	*dxOut = Mem8[ss:v3 + 0x000A:word16]
	word16 cx_61
	*cxOut = Mem8[ss:v3 + 0x000C:word16]
	Mem68[fs:bp_53 + 0x0052 + di_49:byte] = Mem8[fs:bp_53 + 0x0052 + di_49:byte] & (byte) ax_63
	word16 bx_70
	*bxOut = bx_56 + 0x0001
	ax_10 = ax_63 | 0x240A
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:v3 ax:ax - 0x5EF1

l1483_0D2B:
	return ax_10
// DataOut: ax bp bx cx di dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> cx:<invalid>

fn1483_0D06_exit:
// DataOut: ax bp bx cx di dx si
// DataOut (flags): 
// SymbolicIn: sp:<invalid> ax:<invalid> dx:<invalid> ah:<invalid> al:<invalid> di:<invalid> si:<invalid> bp:<invalid> bx:<invalid> cx:<invalid>



word16 fn1483_0D3F(byte al, byte ah, word16 cx, word16 dx, byte bl, word16 bp, word16 si, word16 di, selector es, selector ds, selector fs, word16 wArg00, word16 wArg02, word16 wArg04, word16 wArg06, word16 wArg08, ptr16 & cxOut, ptr16 & dxOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  P ah al bl bp ch cl cs cx dh di dl ds dx es fs si ss
// LiveOut: ax bp bx cx di dx es si sp
// Trashed: SCZDOP ah al ax bh bl bp bpl bx ch cl cx dh di dil dl dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl
// Preserved:
fn1483_0D3F_entry:
	*bpOut = bp
	*esOut = es
// DataOut: ah al bl bp ch cl cs cx dh di dl ds dx es fs si ss
// DataOut (flags): CP
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_0D3F:
	branch P l1483_0D40_thunk_fn1483_0CFA
// DataOut: ah al bl bp ch cl cs cx dh di dl ds dx es fs si ss
// DataOut (flags): C
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_0D40_thunk_fn1483_0CFA:
	word16 cx_368
	word16 dx_369
	word16 bx_370
	word16 bp_371
	word16 si_372
	word16 di_373
	selector es_374
	return fn1483_0CFA(al, ah, cx, dx, bl, bp, si, di, ds, fs, out cx_368, out dx_369, out bx_370, out bp_371, out si_372, out di_373, out es_374)
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):ax

l1483_0D42:
	word16 bx_61 = DPB(bx, 0xB4, 0)
	byte ch_65 = ch - Mem0[ds:(bx_61 + 0x0002) + si:byte]
	word16 ax_70 = DPB(ax, al + ch, 0) + 0xFC68 + (ch_65 <u 0x00)
	word16 cx_67 = DPB(cx, ch_65, 8)
	*cxOut = cx_67
	byte al_72 = (byte) ax_70
	byte ah_73 = SLICE(ax_70, byte, 8)
	word16 dx_79 = DPB(dx, dh ^ 0x17, 8)
	*dxOut = dx_79
	branch (dh ^ 0x17) < 0x00 l1483_0CED
// DataOut: ah al ax bp bx ch cs cx dh di dl ds dx es fs si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 -2(fp):ax
// LocalsOut: fp(16) Local -0004(16)

l1483_0CED:
	word16 si_323 = si + Mem0[ds:di:word16]
	*siOut = si_323
	word16 v37_324 = Mem0[ds:bx_61 + 0xF7E2 + si_323:word16] + (fp - 0x0004)
	Mem325[ds:bx_61 + 0xF7E2 + si_323:word16] = v37_324
	Mem328[es:di:word16] = ax_70
	byte SCZO_326 = cond(v37_324)
	word16 di_329
	*diOut = di + 0x0002
	word16 bx_331 = DPB(bx, 0xB5, 0)
	*bxOut = bx_331
	branch true l1483_0CE5_in_fn1483_0D3F
// DataOut: ah al ax bl bp bx cx di ds dx es fs si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp - 0x0004 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 -4(fp):si -2(fp):ax
// LocalsOut: fp(16) Local -0004(16)

l1483_0CE5_in_fn1483_0D3F:
	return ax_70
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 al:<invalid> bl:0xB5 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 si:<invalid> di:di + 0x0002 -4(fp):si -2(fp):ax

l1483_0CF8:
	Mem345[ds:bx_331 + si_323:byte] = __rcr(Mem328[ds:bx_331 + si_323:byte], 0xAC, SCZO_326)
// DataOut: ah al bl bp ch cx di ds dx fs si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 al:<invalid> bl:0xB5 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 si:<invalid> di:di + 0x0002 -4(fp):si -2(fp):ax

l1483_0CF9_thunk_fn1483_0CFC:
	word16 cx_347
	word16 dx_348
	word16 bx_349
	word16 bp_350
	word16 si_351
	word16 di_352
	selector es_353
	return fn1483_0CFC(al_72, ah_73, si, dx_79, 0xB5, bp, si_323, di + 0x0002, ds, fs, out cx_347, out dx_348, out bx_349, out bp_350, out si_351, out di_352, out es_353)
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0002 al:<invalid> bl:0xB5 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 si:<invalid> di:di + 0x0002 cx:si -4(fp):si -2(fp):ax

l1483_0D52:
	word16 v19_92 = Mem0[ds:bx_61 + 0x0043 + si:word16]
	Mem94[ds:bx_61 + 0x0043 + si:word16] = bp
	Mem97[ds:di:byte] = Mem94[ds:di:byte] << 0x68
	word16 v22_100 = -Mem97[ss:v19_92 - 0x0006:word16]
	Mem101[ss:v19_92 - 0x0006:word16] = v22_100
	branch !OVERFLOW(v22_100) l1483_0D69
// DataOut: al ax bp bx ch cs cx dh di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp - 0x0004 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 -4(fp):si -2(fp):ax
// LocalsOut: fp(16)

l1483_0D68_1:
	__syscall(0x04)
// DataOut: al ax bp bx ch cs cx dh di dl ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp + 0x0008 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 ah:<invalid> bp:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es
// LocalsOut: fp(16)

l1483_0D69:
	Mem108[ds:si + 0x5C87:byte] = ch_65
	word16 sp_120
	word16 ax_121
	selector ss_122
	byte P_123
	byte al_124
	byte ch_125
	byte SCZO_126
	byte bl_127
	word16 bx_128
	word16 si_129
	selector ds_130
	byte C_131
	byte dh_132
	byte SZO_133
	byte SO_134
	byte ah_135
	word16 di_136
	word16 bp_137
	selector es_138
	byte O_139
	word16 dx_140
	word16 cx_141
	byte bh_142
	byte SCZDOP_143
	byte Z_144
	byte dl_145
	byte S_146
	byte cl_147
	selector cs_148
	selector fs_149
	call fn1483_8A82 (retsize: 2;)
		uses: ah_85,al_72,ax_86,bh,bl_59,bp_95,bx_61,C_110,ch_65,cl,cs,cx_67,dh_77,di,dl,ds,dx_79,es,fs,O_103,P,S,SCZDOP,SCZO_102,si,SO_82,sp_105,ss,SZO_109,wLoc02_4,wLoc04_75,wLoc06_89,wLoc08_91,wLoc0A,Z
		defs: ah_135,al_124,ax_121,bh_142,bl_127,bp_137,bx_128,C_131,ch_125,cl_147,cs_148,cx_141,dh_132,di_136,dl_145,ds_130,dx_140,es_138,fs_149,O_139,P_123,S_146,SCZDOP_143,SCZO_126,si_129,SO_134,sp_120,ss_122,SZO_133,Z_144
	word16 bx_167 = bx_128 + Mem108[ds_130:(bx_128 - 0x0079) + di_136:word16] + C_131
	Mem172[ss_122:bp_137 + 0xF512 + di_136:byte] = Mem108[ss_122:bp_137 + 0xF512 + di_136:byte] + dh_132 + (bx_167 <u 0x0000)
	Mem174[ds_130:bx_167 + 0x007D:byte] = Mem172[ds_130:bx_167 + 0x007D:byte] & al_124
	word16 ax_186 = __aad(si_129)
	word16 ax_182 = DPB(ax_121 - 0x8747, (byte) (ax_121 - 0x8747) + ch_125 + (ax_121 <u 0x8747), 0)
	word16 v31_189 = Mem174[ds_130:ax_182 + 0x995D:word16]
	Mem190[ds_130:ax_182 + 0x995D:word16] = ax_182
	word16 bx_199 = bx_167 + Mem190[ds_130:bx_167 + v31_189:word16]
	*bxOut = bx_199
	byte ah_188 = SLICE(ax_186, byte, 8)
	word16 si_191
	*siOut = v31_189
	byte bl_200 = (byte) bx_199
	byte bh_201 = SLICE(bx_199, byte, 8)
	byte al_202 = (byte) ax_186 + 0x2A + ch_125
	word16 sp_214 = fp - 0x0008
	word16 cx_215
	*cxOut = cx_141 - 0x0001
	byte cl_217 = (byte) (cx_141 - 0x0001)
	branch fp - 0x0008 && cx_141 != 0x0001 l1483_0D99
// DataOut: ah al bh bl bp bx cl cs cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0008 al:<invalid> bl:0xB4 ch:<invalid> ax:<invalid> dh:dh ^ 0x17 ah:<invalid> bp:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D99:
	Mem321[ds_130:bx_199 + v31_189:byte] = Mem190[ds_130:bx_199 + v31_189:byte] - bl_200
// DataOut: al bp bx cl cs cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D97:
	byte v36_307 = Mem190[ds_130:bx_199 + 0x0028 + di_136:byte] - ah_188 - (fp - 0x0008)
	Mem308[ds_130:bx_199 + 0x0028 + di_136:byte] = v36_307
// DataOut: al bh bp bx cl cs cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D9A:
	Mem318[ds_130:v31_189 + 0x005A:byte] = Mem308[ds_130:v31_189 + 0x005A:byte] - bh_201 - (v36_307 <u 0x00)
// DataOut: al bp bx cl cs cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0D9B:
	byte v40_224 = Mem190[ds_130:di_136 + 0x002D:byte] - (al_202 | 0x3F)
	Mem225[ds_130:di_136 + 0x002D:byte] = v40_224
	Mem236[es_138:di_136:byte] = al_202 | 0x3F
	word16 ax_220 = DPB(ax_186, al_202 | 0x3F, 0)
	word16 dx_235
	*dxOut = DPB(dx_140, 0x99, 0)
	branch v40_224 >= 0x00 l1483_0DB9
// DataOut: al ax bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): S
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DA7:
	Mem272[es_138:di_136 + 0x0001:byte] = al_202 | 0x3F
	word16 di_273
	*diOut = di_136 + 0x0002
	branch v40_224 >= 0x00 l1483_0DBE
// DataOut: al bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0001 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DBE:
	word16 ax_292 = DPB(ax_186, (al_202 | 0x3F) + Mem272[ds_130:0x0047:byte], 0)
// DataOut: ax bp bx cl cs cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC2:
	Mem297[ss_122:fp - 0x000A:word16] = cs_148
// DataOut: ax bp bx cl cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC6:
	Mem300[ss_122:0x0B01:word16] = es_138
	Mem302[ds_130:0x8C00:byte] = Mem300[ds_130:0x8C00:byte] + cl_217
// DataOut: ax bp bx cl cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:0x0B03 al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DCB:
	Mem305[ss_122:bp_137 + 0x8CC3:word16] = __ror(Mem302[ss_122:bp_137 + 0x8CC3:word16], cl_217)
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:0x0B01 al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DCF:
	return ax_292
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:0x0B01 al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DAA:
	Mem275[ss_122:bp_137 + v31_189:word16] = -Mem272[ss_122:bp_137 + v31_189:word16]
	__cli()
	Mem277[ds_130:bx_199 + 0x0045 + (di_136 + 0x0001):word16] = Mem275[ss_122:fp - 0x0008:word16]
	ax_220 = Mem277[ss_122:fp - 0x0006:word16]
	Mem287[ds_130:bx_199 + 0xC079 + v31_189:word16] = Mem277[ds_130:bx_199 + 0xC079 + v31_189:word16] + (bp_137 + 0x0001)
	sp_214 = fp - 0x0004
// DataOut: ax bp bx cl cx di ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:di + 0x0003 -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DB9:
	word16 dx_246
	*dxOut = Mem236[ss_122:sp_214:word16]
	Mem252[ds_130:bx_199 + (di_136 + 0x0001):byte] = Mem236[ds_130:bx_199 + (di_136 + 0x0001):byte] >>u 0x01
	Mem254[ds_130:bx_199 + 0x0002 + (di_136 + 0x0001):byte] = Mem252[ds_130:bx_199 + 0x0002 + (di_136 + 0x0001):byte] + cl_217
	word16 bp_238
	*bpOut = bp_137
	word16 sp_250 = sp_214 + 0x0002
// DataOut: ax bp bx cl cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:0x99 di:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DBF:
	Mem257[ss_122:sp_250 - 0x0002:word16] = es_138
	Mem260[ds_130:0x03BC:byte] = Mem257[ds_130:0x03BC:byte] + cl_217
	word16 di_258
	*diOut = di_136 + 0x0002
// DataOut: ax bp bx cl cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC5:
	word16 ax_262 = ax_220 | Mem260[ds_130:0x0E00:word16]
// DataOut: ax bp bx cl cx di ds dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DC9:
	Mem270[ds_130:v31_189 + 0x8ED3:byte] = Mem260[ds_130:v31_189 + 0x8ED3:byte] + cl_217
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

l1483_0DCD:
	return ax_262
// DataOut: ax bp bx cx di dx es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> ah:<invalid> bp:<invalid> bx:<invalid> si:<invalid> cx:cx - 0x0001 dl:<invalid> di:<invalid> dx:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es

fn1483_0D3F_exit:
// DataOut: ax bp bx cx di dx es si sp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bl:<invalid> ch:<invalid> ax:<invalid> dh:<invalid> si:<invalid> di:<invalid> cx:<invalid> es:<invalid> dx:<invalid> dl:<invalid> bp:<invalid> cl:<invalid> ah:<invalid> bx:<invalid> eax:<invalid> -8(fp):0x0C58 -6(fp):0x0F5F -4(fp):si -2(fp):ax 8(fp):es



real64 fn1483_1104(word16 ax, byte dl, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, real64 rArg0, real64 rArg1, real64 rArg2)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  ax bl bp bpl bx di dl ds es si ss
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1104_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_1104_entry:
// DataOut: ax bl bp bpl bx di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16)

l1483_1104:
	byte al_4 = (byte) (ax - 0x5D97)
	word16 sp_1 = fp
	word16 dx_23 = DPB(dx, 0x26, 8)
	byte C_16 = cond(SEQ(al_4, __aam(al_4)) - 0x00755D97)
// DataOut: al bl bp bpl bx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_110D:
	Mem40[ss:bp + 0x450F:word16] = Mem0[ss:bp + 0x450F:word16] + 0x9F59 + C_16
	word16 sp_43 = sp_1 - 0x0002
	Mem44[ss:sp_43:word16] = es
	dx_23 = DPB(dx_23, 0x34, 8) (alias)
	Mem46[ss:bp + 0x005E + si:word16] = dx_23
	Mem49[ds:bx + 0x675E + di:word16] = Mem46[ds:bx + 0x675E + di:word16] - 0x007D
	Mem58[ss:sp_43 - 0x0002:word16] = dx_23
	real64 rArg1_62 = rArg1 * lg2(rArg0 + 1.0)
	ptr32 es_bx_73 = Mem58[ds:0x9F59:segptr32]
	rArg1 = scalbn(rArg1_62, rArg2)
	word16 v27_83 = Mem58[ss:bp + 0x1EC4:word16] + bp
	Mem84[ss:bp + 0x1EC4:word16] = v27_83
	sp_1 = sp_43
	si = 0x9F59
	es = SLICE(es_bx_73, selector, 16) (alias)
	bx = (word16) es_bx_73 (alias)
	di = 0xBFC4
	C_16 = cond(v27_83) (alias)
// DataOut: al bl bp bpl bx di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ax:<invalid> dh:<invalid> al:<invalid> cl:0x1C bl:<invalid> si:0x9F59 Sequence es:bx:<invalid> di:0xBFC4 -4(fp):dx -2(fp):es



void fn1483_118B(byte cl, word32 edx, word16 bx, word16 si, selector ds)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  bx cl dl ds edx si
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_118B_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_118B_entry:
// DataOut: bx cl dl ds edx si
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_118B:
	byte cl_10 = cl & Mem0[ds:(bx - 0x004F) + si:byte]
	cpu_debug_break()
	__arpl(Mem0[ds:si:word16], bx, &Mem0[ds:si:word16])
	Mem15[ds:si:byte] = Mem0[ds:si:byte] & cl_10
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn1483_1B13()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut: ss
// Trashed: esp rsp sp spl ss
// Preserved:
l1483_1B13:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_1B13_entry:
// DataOut: ax bp bx cx dh di dl ds es si
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_1B13:
	__sti()
	word16 sp_6
	selector ss_7
	word16 di_8
	word16 bx_9
	call Mem0[0x1483:bx:ptr32] (retsize: 4; depth: 4)
		uses: bx,di,sp_1,ss_3
		defs: bx_9,di_8,sp_6,ss_7
	return
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

fn1483_1B13_exit:
// DataOut: ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> ss:di



byte fn1483_1B38(word16 ax, word16 cx, word16 dx, word16 bx, word16 bp, word16 si, word16 di, selector es, selector ds, selector psegArg00, ptr16 & axOut, ptr16 & cxOut, ptr16 & dhOut, ptr16 & dlOut, ptr16 & bxOut, ptr16 & bpOut, ptr16 & siOut, ptr16 & diOut, ptr16 & esOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al ax bh bl bp bx cl cs cx di ds dx es si ss
// LiveOut: C ax bp bx cx dh di dl ds es si ss
// Trashed: SCZO ah al ax bh bl bp bpl bx ch cl cx dh di dil dl ds dx eax ebp ebx ecx edi edx es esi esp rax rbp rbx rcx rdi rdx rsi rsp si sil sp spl ss
// Preserved:
// Stack args: Stack +0000(16)
l1483_1B38:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_1B38_entry:
	*esOut = es
	*siOut = si
	*bxOut = bx
	*dsOut = ds
	*diOut = di
	*bpOut = bp
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l1483_1B38:
	word16 sp_1 = fp
	byte dh_181 = SLICE(dx - 0x0001, byte, 8)
	*dhOut = dh_181
	byte dl_5
	*dlOut = (byte) (dx - 0x0001)
	branch dx != 0x0001 l1483_1B7F
// DataOut: al ax bh bl bp bx cl cs cx dh di dl ds es si sp ss
// DataOut (flags): Z
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l1483_1B3B:
	word16 cx_126 = cx - 0x0001
	*cxOut = cx_126
	branch dx == 0x0001 && cx != 0x0001 l1483_1B6D
// DataOut: al ax bh bl bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:fp dx:dx - 0x0001
// LocalsOut: fp(16) Stack +0000(16)

l1483_1B3D:
	selector es_208
	*esOut = psegArg00
	word16 sp_209 = fp + 0x0002
	word16 si_215
	*siOut = ax
	branch si == bx l1483_1B51
// DataOut: ax bh bp bx cs cx di ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp dx:dx - 0x0001 cx:cx - 0x0001
// LocalsOut: fp(8)

l1483_1B44:
	byte al_285 = (byte) (fp + 0x0002) + bh + (si <u bx)
	byte dh_278
	*dhOut = 0x02
	byte dl_279
	*dlOut = 0xE2
	byte ah_283 = SLICE(fp + 0x0002, byte, 8)
	word16 ax_286
	*axOut = DPB(fp + 0x0002, al_285, 0)
	byte SCZO_288 = cond(al_285)
	branch al_285 == 0x00 l1483_1B4B_thunk_fn1483_1B13
// DataOut: ah ax bh bp bx cs cx dh di dl ds es si sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0002 dx:dx - 0x0001 cx:cx - 0x0001 es:<invalid> ax:si si:si

l1483_1B4B_thunk_fn1483_1B13:
	fn1483_1B13()
	return SCZO_288
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:si - 0x0001 dx:0x02E2 cx:cx - 0x0001 es:<invalid> ax:<invalid> si:si al:<invalid>

l1483_1B4E:
	Mem293[ds:ax:byte] = Mem0[ds:ax:byte] + ah_283
	Mem297[ss:si - 0x0003:word16] = cs
	sp_209 = si - 0x0003
// DataOut: bh bp bx cx ds si sp ss
// DataOut (flags): 
// SymbolicIn: sp:si - 0x0001 dx:0x02E2 cx:cx - 0x0001 es:<invalid> ax:<invalid> si:si al:<invalid>

l1483_1B51:
	es = Mem0[ss:sp_209:selector]
	*esOut = es
	byte al_227 = Mem0[ds:ax:byte]
	Mem229[es:0x02FB:byte] = al_227
	word16 di_232
	byte C_234 = fn1483_1B91(al_227, cx - 0x0001, bx, bp, 0x02FC, ds, psegLoc02, out di_232, out ds)
	__cli()
	Mem237[es:di_232 - 0x0001:word16] = 0x0A0D
	word16 sp_225 = sp_209 + 0x0002
	bx = Mem237[ss:sp_225 + 0x0008:word16]
	word16 dx_250 = Mem237[ss:sp_225 + 0x000A:word16]
	word16 cx_254 = Mem237[ss:sp_225 + 0x000C:word16]
	*cxOut = cx_254
	word16 ax_259 = Mem237[ss:sp_225 + 0x000E:word16]
	word16 di_239 = Mem237[ss:sp_225:word16]
	si = Mem237[ss:sp_225 + 0x0002:word16]
	bp = Mem237[ss:sp_225 + 0x0004:word16]
	Mem262[es:di_239:byte] = (byte) ax_259
	word16 v37_269 = Mem262[ds:bx + (di_239 + 0x0001):word16] + bx
	Mem270[ds:bx + (di_239 + 0x0001):word16] = v37_269
	Mem274[ds:di_239 + 0x0001:byte] = __rcl(Mem270[ds:di_239 + 0x0001:byte], (byte) cx_254, cond(v37_269))
	ax = ax_259 - 0xECBA - C_234
	bh = SLICE(bx, byte, 8) (alias)
	byte dl_252
	*dlOut = (byte) dx_250
	sp_1 = sp_225 + 0x0010
	word16 di_263
	*diOut = di_239 + 0x0001
	al = (byte) ax (alias)
	byte dh_267
	*dhOut = SLICE(dx_250, byte, 8) + (byte) bx
// DataOut: al bh bl bp bx cx dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:cx - 0x0001 es:<invalid> ax:<invalid> si:si al:<invalid>

l1483_1B6D:
	byte al_154 = al & 0x5C
	word16 sp_160 = sp_1 - 0x0002
	Mem161[ss:sp_160:word16] = si
	word16 ax_155 = DPB(ax, al_154, 0)
	word16 si_162
	*siOut = 0x7269
	branch al_154 != 0x00 l1483_1BE8
// DataOut: al ax bh bl bp bx cx dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> es:<invalid> ax:<invalid> si:<invalid> di:<invalid> al:<invalid> ds:<invalid> bp:<invalid> bx:<invalid> dh:dh + bl

l1483_1BE8:
	word16 bx_199
	*bxOut = DPB(bx, bh | Mem161[ds:bx + 0x0003:byte], 8)
	Mem201[ss:sp_160 - 0x0002:word16] = es
	word16 ax_193
	*axOut = ax_155 - 0x85FE
	word16 bp_197
	*bpOut = bp - 0x0002
	return Mem201[ss:sp_160 - 0x0002:word16]
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:0x7269 es:<invalid> ax:<invalid> di:<invalid> ds:<invalid> bp:<invalid> bx:<invalid> dh:dh + bl -2(fp):si

l1483_1B75:
	Mem166[ss:sp_160 - 0x0002:word16] = 0x6365
	word16 sp_167 = Mem166[ds:bx + 0x726A:word16] *s 0x0046
	di = Mem166[ss:sp_167:word16]
	*siOut = Mem166[ss:sp_167 + 0x0002:word16]
	bx = Mem166[ss:sp_167 + 0x0008:word16]
	dh_181 = Mem166[sp_167 + 0x000B:byte] (alias)
	cl = (byte) Mem166[ss:sp_167 + 0x000C:word16] (alias)
	al = (byte) Mem166[ss:sp_167 + 0x000E:word16] (alias)
	sp_1 = sp_167 + 0x0010
// DataOut: al bx cl dh di dl ds es si sp ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:0x7269 es:<invalid> ax:<invalid> di:<invalid> ds:<invalid> bp:<invalid> bx:<invalid> dh:dh + bl -2(fp):si

l1483_1B7F:
	word16 bp_67 = Mem0[ds:si + 0x0065:word16] *s 0x3A64
	Mem70[ss:bp_67 + si:byte] = Mem0[ss:bp_67 + si:byte] & al
	byte dh_74 = dh_181 ^ Mem70[ds:bx + di:byte]
	word16 ax_78 = __inw(0x0C)
	Mem81[ds:0x2CF2:byte] = Mem70[ds:0x2CF2:byte] ^ cl
	Mem84[ds:di:byte] = Mem81[ds:di:byte] - dh_74
	Mem90[ds:di + 0xEA01:word16] = ~Mem84[ds:di + 0xEA01:word16]
	word16 sp_98 = sp_1 - 0x0002
	Mem99[ss:sp_98:word16] = sp_1
	selector ds_104 = Mem99[ss:sp_98 + 0x0002:selector]
	*dsOut = ds_104
	word16 dx_100 = Mem99[ss:sp_98:word16]
	word16 v33_106 = Mem99[ds_104:di + 0x0B0A:word16]
	Mem107[ds_104:di + 0x0B0A:word16] = di
	__inb(0x41)
	__sti()
	Mem114[ds_104:0xFF1F:word16] = Mem107[ds_104:0xFF1F:word16] + 0x0001
	word16 ax_86 = DPB(ax_78, (byte) ax_78 - 0xD9, 0)
	word16 bx_75
	*bxOut = 0xD909
	word16 cx_93
	*cxOut = ax_86
	byte dh_101
	*dhOut = SLICE(dx_100, byte, 8)
	byte dl_102
	*dlOut = (byte) dx_100
	word16 di_108
	*diOut = v33_106
	byte al_117 = __inb(dx_100) - 0xF8 & 0x0A
// DataOut: al bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:<invalid> dx:<invalid> cx:<invalid> al:<invalid> si:<invalid> bx:<invalid> di:<invalid> bp:<invalid> ax:<invalid> es:<invalid> ds:<invalid> dh:<invalid> -4(fp):0x6365 -2(fp):si

l1483_1BB7_thunk_fn1483_1BB9:
	word16 ax_122
	word16 bp_123
	return fn1483_1BB9(al_117, ax_86, bp_67, out ax_122, out bp_123)
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:0xD909 ax:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> es:<invalid> -4(fp):0x6365 -2(fp):<invalid>

fn1483_1B38_exit:
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:<invalid> dx:<invalid> bp:<invalid> ch:<invalid> dh:<invalid> bx:<invalid> ax:<invalid> al:<invalid> cx:<invalid> ds:<invalid> di:<invalid> si:<invalid> bh:<invalid> es:<invalid> ss:<invalid> -4(fp):<invalid> -2(fp):<invalid>



byte fn1483_1B91(byte al, word16 cx, word16 bx, word16 bp, word16 di, selector ds, selector psegArg00, ptr16 & diOut, ptr16 & dsOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bh bp bx cx di ds
// LiveOut: C di ds sp
// Trashed: SCZO ah al ax bp bpl ch cl cx dh di dil dl ds dx eax ebp ecx edi edx esp rax rbp rcx rdi rdx rsp sp spl
// Preserved:
// Stack args: Stack +0000(16)
fn1483_1B91_entry:
// DataOut: al bh bp bx cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp
// LocalsOut: fp(16) Stack +0000(16)

l1483_1B91:
	Mem17[ds:bx + 0x10F8 + di:word16] = ~Mem0[ds:bx + 0x10F8 + di:word16]
	word16 v18_34 = Mem17[psegArg00:bx + 0x3201 + di:word16]
	Mem35[psegArg00:bx + 0x3201 + di:word16] = di
	__inb(0x41)
	__sti()
	Mem42[psegArg00:0xFF1F:word16] = Mem35[psegArg00:0xFF1F:word16] + 0x0001
	word16 ax_5 = DPB(ax, al - 0x28, 0)
	word16 ax_10 = DPB(ax_5 ^ 0x2EF9, (byte) (ax_5 ^ 0x2EF9) - bh, 0)
	selector ds_32
	*dsOut = psegArg00
	word16 di_36
	*diOut = v18_34
	byte al_45 = __inb(fp) - 0xF8 & 0x0A
// DataOut: al bp cx di ds es ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1BB7_thunk_fn1483_1BB9:
	word16 ax_51
	word16 bp_52
	return fn1483_1BB9(al_45, ax_10, bp, out ax_51, out bp_52)
// DataOut: di ds es sp ss
// DataOut (flags): C
// SymbolicIn: sp:fp + 0x0002 al:<invalid> ax:<invalid> cx:<invalid> dx:fp ds:<invalid> di:<invalid> -2(fp):fp

fn1483_1B91_exit:
// DataOut: di ds sp
// DataOut (flags): C
// SymbolicIn: sp:<invalid> al:<invalid> ax:<invalid> cx:<invalid> dx:fp ds:<invalid> di:<invalid> bp:<invalid> -2(fp):fp



word16 fn1483_1BB8(byte al, word16 cx, word16 bp, word16 si, selector ds, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp cx ds si
// LiveOut: ax bp
// Trashed: SCZO al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved: sp
l1483_1BBC_thunk_fn1483_1B38:
	C = fn1483_1B38(ax, cx, dx, bx, bp, si, di, es, ds, psegArg00, out ax, out cx, out dh, out dl, out bx, out bp, out si, out di, out es, out ds)
	return ax
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn:

fn1483_1BB8_entry:
	def fp
	def al
	def ds
	def si
	def Mem0
	def ax
	def cx
	def bp
	def dh
	def dl
	def bx
	def di
	def es
	def bpOut
// DataOut: al bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1BB8:
	sp_1 = fp
	al_6 = al | Mem0[ds:si:byte]
	ax_8 = DPB(ax, al_6, 0) (alias)
	SZO_9 = cond(al_6)
	C_10 = false
// DataOut: al bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1BB8_thunk_fn1483_1BB9:
	C_15 = fn1483_1BB9(al_6, cx, bp, out ax_13, out bp_14)
	return ax_13
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp al:<invalid>

fn1483_1BB8_exit:
	cx_21 = PHI(cx, cx)
	dh_22 = PHI(dh, dh)
	dl_23 = PHI(dl, dl)
	bx_24 = PHI(bx, bx)
	si_25 = PHI(si, si)
	di_26 = PHI(di, di)
	es_27 = PHI(es, es)
	ds_28 = PHI(ds, ds)
	ax_29 = PHI(ax_13, ax)
	bp_30 = PHI(bp_14, bp)
	C_31 = PHI(C_15, C)
	use bp_30 (=> bpOut)
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bp:<invalid>



byte fn1483_1BB9(byte al, word16 cx, word16 bp, ptr16 & axOut, ptr16 & bpOut)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  al bp cx
// LiveOut: C ax bp
// Trashed: SCZO al ax bp bpl eax ebp esp rax rbp rsp sp spl
// Preserved: sp
l1483_1BB9:
	branch Test(UGE,C) l1483_1BBF
// DataOut: al ax bh bl bp bx cl cs cx dh di dl ds dx es si ss
// DataOut (flags): C
// SymbolicIn:

l1483_1BB9_thunk_fn1483_1BBF:
	fn1483_1BBF()
	return C
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn:
// Terminates process

l1483_1BBC:
// DataOut: al ax bh bl bp bx cl cs cx di ds dx es si ss
// DataOut (flags): 
// SymbolicIn:

l1483_1BBC_thunk_fn1483_1B38:
	C = fn1483_1B38(ax, cx, dx, bx, bp, si, di, es, ds, psegArg00, out ax, out cx, out dh, out dl, out bx, out bp, out si, out di, out es, out ds)
	SCZO = C (alias)
	return C
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn:

l1483_1BBC_thunk_fn1483_1B38:
	C = fn1483_1B38(ax, cx, dx, bx, bp, si, di, es, ds, psegArg00, out ax, out cx, out dh, out dl, out bx, out bp, out si, out di, out es, out ds)
	return ax
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn:

fn1483_1BB8_exit:
	cx_21 = PHI(cx, cx)
	dh_22 = PHI(dh, dh)
	dl_23 = PHI(dl, dl)
	bx_24 = PHI(bx, bx)
	si_25 = PHI(si, si)
	di_26 = PHI(di, di)
	es_27 = PHI(es, es)
	ds_28 = PHI(ds, ds)
	ax_29 = PHI(ax_13, ax)
	bp_30 = PHI(bp_14, bp)
	C_31 = PHI(C_15, C)
	use bp_30 (=> bpOut)
// DataOut: ax bp
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid> bp:<invalid>

fn1483_1BB9_entry:
// DataOut: al bp bx cx dh di dl ds es si ss
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1BB9:
	sp = fp
	al = al + 0x73
	ax = DPB(ax, al, 0) (alias)
	bp = bp + cx
	SCZO = cond(bp)
	C = SCZO (alias)
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): SC
// SymbolicIn: sp:fp

l1483_1BBB_thunk_fn1483_1BBD:
	fn1483_1BBD()
	return C
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp al:al + 0x73 bp:bp + cx

fn1483_1BB9_exit:
	use ax (=> axOut)
	use bp (=> bpOut)
// DataOut: ax bp
// DataOut (flags): C
// SymbolicIn: sp:<invalid> al:al + 0x73 bp:bp + cx



void fn1483_1BBD()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  S
// LiveOut:
// Trashed: esp rsp sp spl
// Preserved:
l1483_1BBD:
// DataOut:
// DataOut (flags): 
// SymbolicIn:

fn1483_1BBD_entry:
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): SC
// SymbolicIn: sp:fp

l1483_1BBD:
	branch S l1483_1BBE
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_1BBD_thunk_fn1483_1BBF:
	fn1483_1BBF()
	return
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_1BBE:
	word16 sp_12
	byte S_13
	word16 bx_14
	word16 di_15
	selector ds_16
	call Mem0[ds:bx + 0xE10D + di:word16] (retsize: 4; depth: 4)
		uses: bx,di,ds,S,sp_1
		defs: bx_14,di_15,ds_16,S_13,sp_12
	return
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

l1483_1BBD_thunk_fn1483_1BBF:
	fn1483_1BBF()
	return
// DataOut: ax bp bx cx dh di dl ds es si ss
// DataOut (flags): C
// SymbolicIn: sp:fp

fn1483_1BBD_exit:
// DataOut:
// DataOut (flags): C
// SymbolicIn: sp:<invalid>



void fn1483_1BBF()
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse: 
// LiveOut:
// Trashed:
// Preserved:
// Terminates process
fn1483_1BBF_exit:
// DataOut:
// DataOut (flags): C
// SymbolicIn:

fn1483_1BBF_entry:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1BBF:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp



void fn1483_1C50(word16 dx)
// stackDelta: 0; fpuStackDelta: 0; fpuMaxParam: -1

// MayUse:  dx
// LiveOut:
// Trashed: al ax eax esp rax rsp sp spl
// Preserved:
fn1483_1C50_entry:
// DataOut: dx
// DataOut (flags): 
// SymbolicIn: sp:fp

l1483_1C50:
	byte al_3 = __inb(dx)
	word16 ax_5 = DPB(ax, al_3, 0)
	word16 sp_6
	byte al_7
	word16 dx_8
	word16 ax_9
	call ax_5 (retsize: 4; depth: 4)
		uses: al_3,ax_5,dx,sp_1
		defs: al_7,ax_9,dx_8,sp_6
	return
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:fp

fn1483_1C50_exit:
// DataOut:
// DataOut (flags): 
// SymbolicIn: sp:<invalid> al:<invalid>



